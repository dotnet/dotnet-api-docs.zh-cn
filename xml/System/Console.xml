<Type Name="Console" FullName="System.Console">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1d844aaca147d1385e0fa126d9cc50e212d499e9" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89744472" /></Metadata><TypeSignature Language="C#" Value="public static class Console" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Console extends System.Object" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Console" />
  <TypeSignature Language="VB.NET" Value="Public Class Console" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Console abstract sealed" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Console = class" />
  <TypeSignature Language="C#" Value="public sealed class Console" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Console extends System.Object" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Console" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class Console sealed" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Console extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Console</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Console" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e92d0-101">表示控制台应用程序的标准输入流、输出流和错误流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-101">Represents the standard input, output, and error streams for console applications.</span></span> <span data-ttu-id="e92d0-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="e92d0-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-103">控制台是一个操作系统窗口，用户可在其中通过计算机键盘输入文本输入并读取计算机终端的文本输出，与操作系统或基于文本的控制台应用程序交互。</span><span class="sxs-lookup"><span data-stu-id="e92d0-103">The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal.</span></span> <span data-ttu-id="e92d0-104">例如，在 Windows 操作系统中，控制台称为 "命令提示符" 窗口并接受 MS-DOS 命令。</span><span class="sxs-lookup"><span data-stu-id="e92d0-104">For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands.</span></span> <span data-ttu-id="e92d0-105"><xref:System.Console>类为从控制台读取字符并向其写入字符的应用程序提供基本支持。</span><span class="sxs-lookup"><span data-stu-id="e92d0-105">The <xref:System.Console> class provides basic support for applications that read characters from, and write characters to, the console.</span></span>  
  
 <span data-ttu-id="e92d0-106">有关通过类进行开发的信息 <xref:System.Console> ，请参阅以下部分：</span><span class="sxs-lookup"><span data-stu-id="e92d0-106">For information about developing with the <xref:System.Console> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="e92d0-107">控制台 i/o 流</span><span class="sxs-lookup"><span data-stu-id="e92d0-107">Console I/O Streams</span></span>](#Streams)  
  
-   [<span data-ttu-id="e92d0-108">屏幕缓冲区和控制台窗口</span><span class="sxs-lookup"><span data-stu-id="e92d0-108">Screen Buffer and Console Window</span></span>](#Buffer)  
  
-   [<span data-ttu-id="e92d0-109">对控制台的 Unicode 支持</span><span class="sxs-lookup"><span data-stu-id="e92d0-109">Unicode Support for the Console</span></span>](#Unicode)  
  
-   [<span data-ttu-id="e92d0-110">常见操作</span><span class="sxs-lookup"><span data-stu-id="e92d0-110">Common Operations</span></span>](#Operations)  
  
-   [<span data-ttu-id="e92d0-111">.NET Core 说明</span><span class="sxs-lookup"><span data-stu-id="e92d0-111">.NET Core Notes</span></span>](#Core)  
  
<a name="Streams"></a>   
## <a name="console-io-streams"></a><span data-ttu-id="e92d0-112">控制台 i/o 流</span><span class="sxs-lookup"><span data-stu-id="e92d0-112">Console I/O Streams</span></span>  
 <span data-ttu-id="e92d0-113">当控制台应用程序启动时，操作系统会自动将三个 i/o 流与控制台关联：标准输入流、标准输出流和标准错误输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-113">When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream.</span></span> <span data-ttu-id="e92d0-114">您的应用程序可以从标准输入流中读取用户输入;将普通数据写入标准输出流;并将错误数据写入标准错误输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-114">Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream.</span></span> <span data-ttu-id="e92d0-115">这些流作为 <xref:System.Console.In%2A?displayProperty=nameWithType> 、和属性的值呈现给你的应用程序 <xref:System.Console.Out%2A?displayProperty=nameWithType> <xref:System.Console.Error%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-115">These streams are presented to your application as the values of the <xref:System.Console.In%2A?displayProperty=nameWithType>, <xref:System.Console.Out%2A?displayProperty=nameWithType>, and <xref:System.Console.Error%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="e92d0-116">默认情况下，属性的值 <xref:System.Console.In%2A> 是 <xref:System.IO.TextReader?displayProperty=nameWithType> 表示键盘的对象， <xref:System.Console.Out%2A> 并且和属性的值 <xref:System.Console.Error%2A> 是 <xref:System.IO.TextWriter?displayProperty=nameWithType> 表示控制台窗口的对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-116">By default, the value of the <xref:System.Console.In%2A> property is a <xref:System.IO.TextReader?displayProperty=nameWithType> object that represents the keyboard, and the values of the <xref:System.Console.Out%2A> and <xref:System.Console.Error%2A> properties are <xref:System.IO.TextWriter?displayProperty=nameWithType> objects that represent a console window.</span></span> <span data-ttu-id="e92d0-117">但是，可以将这些属性设置为不表示控制台窗口或键盘的流;例如，可以将这些属性设置为表示文件的流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-117">However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files.</span></span> <span data-ttu-id="e92d0-118">若要重定向标准输入、标准输出或标准错误流，请 <xref:System.Console.SetIn%2A?displayProperty=nameWithType> 分别调用、 <xref:System.Console.SetOut%2A?displayProperty=nameWithType> 或 <xref:System.Console.SetError%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-118">To redirect the standard input, standard output, or standard error stream, call the <xref:System.Console.SetIn%2A?displayProperty=nameWithType>, <xref:System.Console.SetOut%2A?displayProperty=nameWithType>, or <xref:System.Console.SetError%2A?displayProperty=nameWithType> method, respectively.</span></span> <span data-ttu-id="e92d0-119">使用这些流的 i/o 操作将同步，这意味着多个线程可以读取或写入流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-119">I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams.</span></span> <span data-ttu-id="e92d0-120">这意味着，如果对象表示控制台流，通常是异步的方法（如 <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> ）会同步执行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-120">This means that methods that are ordinarily asynchronous, such as <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>, execute synchronously if the object represents a console stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e92d0-121">不要使用 <xref:System.Console> 类在无人参与的应用程序中显示输出，如服务器应用程序。</span><span class="sxs-lookup"><span data-stu-id="e92d0-121">Do not use the <xref:System.Console> class to display output in unattended applications, such as server applications.</span></span> <span data-ttu-id="e92d0-122">对等方法的调用 <xref:System.Console.Write%2A?displayProperty=nameWithType> 对 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> GUI 应用程序没有影响。</span><span class="sxs-lookup"><span data-stu-id="e92d0-122">Calls to methods such as <xref:System.Console.Write%2A?displayProperty=nameWithType> and <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> have no effect in GUI applications.</span></span>  
  
 <span data-ttu-id="e92d0-123"><xref:System.Console> 当基础流被定向到控制台时，正常工作的类成员可能会在将流重定向到文件时引发异常。</span><span class="sxs-lookup"><span data-stu-id="e92d0-123"><xref:System.Console> class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file.</span></span> <span data-ttu-id="e92d0-124">如果重定向标准流，请对应用程序进行编程来捕获 <xref:System.IO.IOException?displayProperty=nameWithType> 异常。</span><span class="sxs-lookup"><span data-stu-id="e92d0-124">Program your application to catch <xref:System.IO.IOException?displayProperty=nameWithType> exceptions if you redirect a standard stream.</span></span> <span data-ttu-id="e92d0-125">你还可以使用 <xref:System.Console.IsOutputRedirected%2A> 、 <xref:System.Console.IsInputRedirected%2A> 和 <xref:System.Console.IsErrorRedirected%2A> 属性来确定在执行引发异常的操作之前是否重定向了标准流 <xref:System.IO.IOException?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-125">You can also use the <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, and <xref:System.Console.IsErrorRedirected%2A> properties to determine whether a standard stream is redirected before performing an operation that throws an <xref:System.IO.IOException?displayProperty=nameWithType> exception.</span></span>  
  
 <span data-ttu-id="e92d0-126">有时，显式调用由 <xref:System.Console.In%2A> 、和属性表示的流对象的成员很有用 <xref:System.Console.Out%2A> <xref:System.Console.Error%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-126">It is sometimes useful to explicitly call the members of the stream objects represented by the <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, and <xref:System.Console.Error%2A> properties.</span></span> <span data-ttu-id="e92d0-127">例如，默认情况下，该 <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> 方法从标准输入流中读取输入。</span><span class="sxs-lookup"><span data-stu-id="e92d0-127">For example, by default, the <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method reads input from the standard input stream.</span></span> <span data-ttu-id="e92d0-128">同样，该 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 方法将数据写入标准输出流，数据后跟默认的行终止字符串，这是一个回车符和换行 ( "\r\n" ) 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-128">Similarly, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed ("\r\n").</span></span> <span data-ttu-id="e92d0-129">但是， <xref:System.Console> 该类不提供将数据写入标准错误输出流的相应方法，也不提供更改写入到流的数据的行终止字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-129">However, the <xref:System.Console> class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.</span></span>  
  
 <span data-ttu-id="e92d0-130">若要解决此问题，可将 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 或属性的属性设置 <xref:System.Console.Out%2A> <xref:System.Console.Error%2A> 为另一行终止字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-130">You can solve this problem by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> or <xref:System.Console.Error%2A> property to another line termination string.</span></span> <span data-ttu-id="e92d0-131">例如，以下 c # 语句将标准错误输出流的行终止字符串设置为两个回车符和换行符序列：</span><span class="sxs-lookup"><span data-stu-id="e92d0-131">For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:</span></span>  
  
 `Console.Error.NewLine = "\r\n\r\n";`  
  
 <span data-ttu-id="e92d0-132">然后，你可以显式调用 <xref:System.IO.TextWriter.WriteLine%2A> 错误输出流对象的方法，如以下 c # 语句所示：</span><span class="sxs-lookup"><span data-stu-id="e92d0-132">You can then explicitly call the <xref:System.IO.TextWriter.WriteLine%2A> method of the error output stream object, as in the following C# statement:</span></span>  
  
 `Console.Error.WriteLine();`  
  
<a name="Buffer"></a>   
## <a name="screen-buffer-and-console-window"></a><span data-ttu-id="e92d0-133">屏幕缓冲区和控制台窗口</span><span class="sxs-lookup"><span data-stu-id="e92d0-133">Screen Buffer and Console Window</span></span>  
 <span data-ttu-id="e92d0-134">控制台中两个密切相关的功能是屏幕缓冲区和控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="e92d0-134">Two closely related features of the console are the screen buffer and the console window.</span></span> <span data-ttu-id="e92d0-135">文本实际上是从控制台所拥有的流中读取或写入的，而是从被称为屏幕缓冲区的控制台所拥有的区域读取或写入。</span><span class="sxs-lookup"><span data-stu-id="e92d0-135">Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer.</span></span> <span data-ttu-id="e92d0-136">屏幕缓冲区是控制台的一个属性，它被组织为行和列的矩形网格，其中每个网格交集或字符单元格都可以包含一个字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-136">The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character.</span></span> <span data-ttu-id="e92d0-137">每个字符都具有自己的前景色，每个字符单元格都有其自己的背景色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-137">Each character has its own foreground color, and each character cell has its own background color.</span></span>  
  
 <span data-ttu-id="e92d0-138">屏幕缓冲区通过称为控制台窗口的矩形区域进行查看。</span><span class="sxs-lookup"><span data-stu-id="e92d0-138">The screen buffer is viewed through a rectangular region called the console window.</span></span> <span data-ttu-id="e92d0-139">控制台窗口是控制台的另一个属性;它不是控制台本身，这是一个操作系统窗口。</span><span class="sxs-lookup"><span data-stu-id="e92d0-139">The console window is another attribute of the console; it is not the console itself, which is an operating system window.</span></span> <span data-ttu-id="e92d0-140">控制台窗口按行和列排列，小于或等于屏幕缓冲区的大小，并且可以移动以查看基础屏幕缓冲区的不同区域。</span><span class="sxs-lookup"><span data-stu-id="e92d0-140">The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer.</span></span> <span data-ttu-id="e92d0-141">如果屏幕缓冲区大于控制台窗口，控制台将自动显示滚动条，以便可以将控制台窗口重定位到屏幕缓冲区区域。</span><span class="sxs-lookup"><span data-stu-id="e92d0-141">If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.</span></span>  
  
 <span data-ttu-id="e92d0-142">光标指示当前读取或写入文本的屏幕缓冲区位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-142">A cursor indicates the screen buffer position where text is currently read or written.</span></span> <span data-ttu-id="e92d0-143">可以隐藏或使光标可见，并且可以更改其高度。</span><span class="sxs-lookup"><span data-stu-id="e92d0-143">The cursor can be hidden or made visible, and its height can be changed.</span></span> <span data-ttu-id="e92d0-144">如果光标可见，控制台窗口位置会自动移动，因此光标始终处于视图中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-144">If the cursor is visible, the console window position is moved automatically so the cursor is always in view.</span></span>  
  
 <span data-ttu-id="e92d0-145">屏幕缓冲区中字符单元坐标的原点是左上角，光标和控制台窗口的位置相对于该原点进行度量。</span><span class="sxs-lookup"><span data-stu-id="e92d0-145">The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin.</span></span> <span data-ttu-id="e92d0-146">使用从零开始的索引来指定位置;也就是说，将最顶部的行指定为行0，将最左侧的列指定为列0。</span><span class="sxs-lookup"><span data-stu-id="e92d0-146">Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0.</span></span> <span data-ttu-id="e92d0-147">行索引和列索引的最大值为 <xref:System.Int16.MaxValue?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-147">The maximum value for the row and column indexes is <xref:System.Int16.MaxValue?displayProperty=nameWithType>.</span></span>  
  
<a name="Unicode"></a>   
## <a name="unicode-support-for-the-console"></a><span data-ttu-id="e92d0-148">对控制台的 Unicode 支持</span><span class="sxs-lookup"><span data-stu-id="e92d0-148">Unicode Support for the Console</span></span>  
 <span data-ttu-id="e92d0-149">通常，控制台使用当前控制台代码页读取输入并写入输出，默认情况下，系统区域设置会定义此页。</span><span class="sxs-lookup"><span data-stu-id="e92d0-149">In general, the console reads input and writes output by using the current console code page, which the system locale defines by default.</span></span> <span data-ttu-id="e92d0-150">代码页只能处理可用 Unicode 字符的一个子集，因此，如果您尝试显示不是由特定代码页映射的字符，则控制台将无法显示所有字符或准确表示它们。</span><span class="sxs-lookup"><span data-stu-id="e92d0-150">A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately.</span></span> <span data-ttu-id="e92d0-151">以下示例阐释了此问题。</span><span class="sxs-lookup"><span data-stu-id="e92d0-151">The following example illustrates this problem.</span></span> <span data-ttu-id="e92d0-152">它尝试将西里尔字母的字符从 U + 0410 到 U + 044F 显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="e92d0-152">It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console.</span></span> <span data-ttu-id="e92d0-153">如果在使用控制台代码页437的系统上运行该示例，则每个字符都将替换为问号 (？ ) ，因为西里尔字符不会映射到代码页437中的字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-153">If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.</span></span>  
  
 [!code-csharp[System.Console.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/unicode1.cs#1)]
 [!code-vb[System.Console.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/unicode1.vb#1)]  
 [!code-fsharp[System.Console.Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.console.class/fs/unicode1.fs#1)]
  
 <span data-ttu-id="e92d0-154">除了支持代码页以外，类还 <xref:System.Console> 支持类的 utf-8 编码 <xref:System.Text.UTF8Encoding> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-154">In addition to supporting code pages, the <xref:System.Console> class supports UTF-8 encoding with the <xref:System.Text.UTF8Encoding> class.</span></span> <span data-ttu-id="e92d0-155">从 .NET Framework 4.5 开始， <xref:System.Console> 类还支持类的 utf-16 编码 <xref:System.Text.UnicodeEncoding> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-155">Beginning with the .NET Framework 4.5, the <xref:System.Console> class also supports UTF-16 encoding with the <xref:System.Text.UnicodeEncoding> class.</span></span> <span data-ttu-id="e92d0-156">向控制台显示 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-156">To display Unicode characters to the console.</span></span> <span data-ttu-id="e92d0-157">将属性设置 <xref:System.Console.OutputEncoding%2A> 为 <xref:System.Text.UTF8Encoding> 或  <xref:System.Text.UnicodeEncoding> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-157">you set the <xref:System.Console.OutputEncoding%2A> property to either <xref:System.Text.UTF8Encoding> or  <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 <span data-ttu-id="e92d0-158">对 Unicode 字符的支持要求编码器识别特定的 Unicode 字符，还需要具有呈现该字符所需标志符号的字体。</span><span class="sxs-lookup"><span data-stu-id="e92d0-158">Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character.</span></span> <span data-ttu-id="e92d0-159">若要成功向控制台显示 Unicode 字符，控制台字体必须设置为非光栅或 TrueType 字体，如 Consolas 或宋体。</span><span class="sxs-lookup"><span data-stu-id="e92d0-159">To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console.</span></span> <span data-ttu-id="e92d0-160">下面的示例演示如何以编程方式将字体从光栅字体更改为宋体。</span><span class="sxs-lookup"><span data-stu-id="e92d0-160">The following example shows how you can programmatically change the font from a raster font to Lucida Console.</span></span>  
  
 [!code-csharp[System.Console.Class.Unsafe#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class.unsafe/cs/setfont1.cs#3)]
 [!code-vb[System.Console.Class.Unsafe#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class.unsafe/vb/setfont1.vb#3)]  
 [!code-fsharp[System.Console.Class.Unsafe#3](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.console.class.unsafe/fs/setfont1.fs#3)]
  
 <span data-ttu-id="e92d0-161">但是，TrueType 字体只能显示部分字形。</span><span class="sxs-lookup"><span data-stu-id="e92d0-161">However, TrueType fonts can display only a subset of glyphs.</span></span> <span data-ttu-id="e92d0-162">例如，$ 黑体控制台字体643只显示从 U + 0021 到 U + FB02 的大约64000个可用字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-162">For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02.</span></span> <span data-ttu-id="e92d0-163">若要查看特定字体支持哪些字符，请在 "控制面板" 中打开 "**字体**" 小程序，选择 "**查找字符**" 选项，然后在 "**字符映射表**" 窗口的 "**字体**" 列表中选择要检查其字符集的字体。</span><span class="sxs-lookup"><span data-stu-id="e92d0-163">To see which characters a particular font supports, open the **Fonts** applet in Control Panel, choose the **Find a character** option, and choose the font whose character set you'd like to examine in the **Font** list of the **Character Map** window.</span></span>  
  
 <span data-ttu-id="e92d0-164">Windows 使用字体链接来显示在特定字体中无法使用的标志符号。</span><span class="sxs-lookup"><span data-stu-id="e92d0-164">Windows uses font linking to display glyphs that are not available in a particular font.</span></span> <span data-ttu-id="e92d0-165">有关字体链接以显示其他字符集的信息，请参阅 [全球化分步：字体](https://go.microsoft.com/fwlink/?LinkId=229111)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-165">For information about font linking to display additional character sets, see [Globalization Step-by-Step: Fonts](https://go.microsoft.com/fwlink/?LinkId=229111).</span></span> <span data-ttu-id="e92d0-166">链接字体在注册表的 HKEY_LOCAL_MACHINE \SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink 子项中定义。</span><span class="sxs-lookup"><span data-stu-id="e92d0-166">Linked fonts are defined in the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink subkey of the registry.</span></span> <span data-ttu-id="e92d0-167">与此子项关联的每个条目都对应于基本字体的名称，其值是一个字符串数组，用于定义字体文件和链接到基准字体的字体。</span><span class="sxs-lookup"><span data-stu-id="e92d0-167">Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font.</span></span> <span data-ttu-id="e92d0-168">数组的每个成员都定义了一个链接字体，并采用 *字体*文件名、*字体名称*格式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-168">Each member of the array defines a linked font and takes the form *font-file-name*,*font-name*.</span></span> <span data-ttu-id="e92d0-169">下面的示例演示如何以编程方式定义一个名为 SimSun 的链接字体，该字体文件中找到一个显示简体中文字符的 SimSun. ttc。</span><span class="sxs-lookup"><span data-stu-id="e92d0-169">The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.</span></span>  
  
 [!code-csharp[System.Console.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/fontlink1.cs#2)]
 [!code-vb[System.Console.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/fontlink1.vb#2)]  
 [!code-fsharp[System.Console.Class#2](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.console.class/fs/fontlink1.fs#2)]
  
 <span data-ttu-id="e92d0-170">为控制台提供以下限制：</span><span class="sxs-lookup"><span data-stu-id="e92d0-170">Unicode support for the console has the following limitations:</span></span>  
  
-   <span data-ttu-id="e92d0-171">不支持 UTF-32 编码。</span><span class="sxs-lookup"><span data-stu-id="e92d0-171">UTF-32 encoding is not supported.</span></span> <span data-ttu-id="e92d0-172">唯一受支持的 Unicode 编码为 UTF-8 和 UTF-16，它们 <xref:System.Text.UTF8Encoding> 分别由和 <xref:System.Text.UnicodeEncoding> 类表示。</span><span class="sxs-lookup"><span data-stu-id="e92d0-172">The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <xref:System.Text.UTF8Encoding> and <xref:System.Text.UnicodeEncoding> classes, respectively.</span></span>  
  
-   <span data-ttu-id="e92d0-173">不支持双向输出。</span><span class="sxs-lookup"><span data-stu-id="e92d0-173">Bidirectional output is not supported.</span></span>  
  
-   <span data-ttu-id="e92d0-174">不支持在基本多语言平面外显示字符 (也就是说，不支持代理项对) ，即使它们是在链接字体文件中定义的也是如此。</span><span class="sxs-lookup"><span data-stu-id="e92d0-174">Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.</span></span>  
  
-   <span data-ttu-id="e92d0-175">不支持显示复杂脚本中的字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-175">Display of characters in complex scripts is not supported.</span></span>  
  
-   <span data-ttu-id="e92d0-176">将字符序列组合 (也就是说，由基字符和一个或多个组合字符组成) 的字符将显示为单独的字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-176">Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters.</span></span> <span data-ttu-id="e92d0-177">若要解决此限制，可以在将 <xref:System.String.Normalize%2A?displayProperty=nameWithType> 输出发送到控制台之前，通过调用方法来规范化要显示的字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-177">To work around this limitation, you can normalize the string to be displayed by calling the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method before sending output to the console.</span></span> <span data-ttu-id="e92d0-178">在下面的示例中，包含组合字符序列 U + 0061 U + 0308 的字符串在输出字符串之前以两个字符的形式显示在控制台上，并在调用方法后作为单个字符显示 <xref:System.String.Normalize%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-178">In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method is called.</span></span>  
  
     [!code-csharp[System.Console.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/normalize1.cs#5)]
     [!code-vb[System.Console.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/normalize1.vb#5)]  
     [!code-fsharp[System.Console.Class#5](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.console.class/fs/normalize1.fs#5)]
  
     <span data-ttu-id="e92d0-179">请注意，仅当字符的 Unicode 标准包含对应于特定组合字符序列的预先组合形式时，规范化才可行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-179">Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.</span></span>  
  
-   <span data-ttu-id="e92d0-180">如果字体为私有使用区域中的码位提供了标志符号，则将显示该标志符号。</span><span class="sxs-lookup"><span data-stu-id="e92d0-180">If a font provides a glyph for a code point in the private use area, that glyph will be displayed.</span></span> <span data-ttu-id="e92d0-181">但是，由于专用区域中的字符是特定于应用程序的，因此这可能不是预期的标志符号。</span><span class="sxs-lookup"><span data-stu-id="e92d0-181">However, because characters in the private use area are application-specific, this may not be the expected glyph.</span></span>  
  
 <span data-ttu-id="e92d0-182">下面的示例向控制台显示一系列 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-182">The following example displays a range of Unicode characters to the console.</span></span> <span data-ttu-id="e92d0-183">该示例接受三个命令行参数：要显示的范围的开始、要显示的范围的结尾，以及是使用当前控制台编码 (`false`) 还是 utf-16 编码 (`true`) 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-183">The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (`false`) or UTF-16 encoding (`true`).</span></span> <span data-ttu-id="e92d0-184">它假定控制台使用 TrueType 字体。</span><span class="sxs-lookup"><span data-stu-id="e92d0-184">It assumes that the console is using a TrueType font.</span></span>  
  
 [!code-csharp[System.Console.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/example3.cs#4)]
 [!code-vb[System.Console.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/example3.vb#4)]  
 [!code-fsharp[System.Console.Class#4](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.console.class/fs/example3.fs#4)]
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="e92d0-185">常见操作</span><span class="sxs-lookup"><span data-stu-id="e92d0-185">Common Operations</span></span>  
 <span data-ttu-id="e92d0-186"><xref:System.Console>类包含以下用于读取控制台输入和写入控制台输出的方法：</span><span class="sxs-lookup"><span data-stu-id="e92d0-186">The <xref:System.Console> class contains the following methods for reading console input and writing console output:</span></span>  
  
-   <span data-ttu-id="e92d0-187">方法的重载 <xref:System.Console.ReadKey%2A> 读取单个字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-187">The overloads of the <xref:System.Console.ReadKey%2A> method read an individual character.</span></span>  
  
-   <span data-ttu-id="e92d0-188"><xref:System.Console.ReadLine%2A>方法读取整行输入。</span><span class="sxs-lookup"><span data-stu-id="e92d0-188">The <xref:System.Console.ReadLine%2A> method reads an entire line of input.</span></span>  
  
-   <span data-ttu-id="e92d0-189"><xref:System.Console.Write%2A>方法重载将值类型的实例、字符数组或一组对象转换为格式化或未格式化的字符串，然后将该字符串写入控制台。</span><span class="sxs-lookup"><span data-stu-id="e92d0-189">The <xref:System.Console.Write%2A> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.</span></span>  
  
-   <span data-ttu-id="e92d0-190">并行 <xref:System.Console.WriteLine%2A> 方法重载集输出与重载相同的字符串， <xref:System.Console.Write%2A> 同时还添加行终止字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-190">A parallel set of <xref:System.Console.WriteLine%2A> method overloads output the same string as the <xref:System.Console.Write%2A> overloads but also add a line termination string.</span></span>  
  
 <span data-ttu-id="e92d0-191"><xref:System.Console>类还包含用于执行以下操作的方法和属性：</span><span class="sxs-lookup"><span data-stu-id="e92d0-191">The <xref:System.Console> class also contains methods and properties to perform the following operations:</span></span>  
  
-   <span data-ttu-id="e92d0-192">获取或设置屏幕缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="e92d0-192">Get or set the size of the screen buffer.</span></span> <span data-ttu-id="e92d0-193">使用 <xref:System.Console.BufferHeight%2A> 和 <xref:System.Console.BufferWidth%2A> 属性可以分别获取或设置缓冲区的高度和宽度，使用 <xref:System.Console.SetBufferSize%2A> 方法可以在单个方法调用中设置缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="e92d0-193">The <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties let you get or set the buffer height and width, respectively, and the <xref:System.Console.SetBufferSize%2A> method lets you set the buffer size in a single method call.</span></span>  
  
-   <span data-ttu-id="e92d0-194">获取或设置控制台窗口的大小。</span><span class="sxs-lookup"><span data-stu-id="e92d0-194">Get or set the size of the console window.</span></span> <span data-ttu-id="e92d0-195">使用 <xref:System.Console.WindowHeight%2A> 和 <xref:System.Console.WindowWidth%2A> 属性可以分别获取或设置窗口的高度和宽度，使用 <xref:System.Console.SetWindowSize%2A> 方法可以在单个方法调用中设置窗口大小。</span><span class="sxs-lookup"><span data-stu-id="e92d0-195">The <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties let you get or set the window height and width, respectively, and the <xref:System.Console.SetWindowSize%2A> method lets you set the window size in a single method call.</span></span>  
  
-   <span data-ttu-id="e92d0-196">获取或设置光标的大小。</span><span class="sxs-lookup"><span data-stu-id="e92d0-196">Get or set the size of the cursor.</span></span> <span data-ttu-id="e92d0-197"><xref:System.Console.CursorSize%2A>属性指定字符单元中光标的高度。</span><span class="sxs-lookup"><span data-stu-id="e92d0-197">The <xref:System.Console.CursorSize%2A> property specifies the height of the cursor in a character cell.</span></span>  
  
-   <span data-ttu-id="e92d0-198">获取或设置控制台窗口相对于屏幕缓冲区的位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-198">Get or set the position of the console window relative to the screen buffer.</span></span> <span data-ttu-id="e92d0-199">使用 <xref:System.Console.WindowTop%2A> 和 <xref:System.Console.WindowLeft%2A> 属性可获取或设置显示在控制台窗口中的屏幕缓冲区的最上面一行和最左侧的列，并且 <xref:System.Console.SetWindowPosition%2A> 方法允许您在单个方法调用中设置这些值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-199">The <xref:System.Console.WindowTop%2A> and <xref:System.Console.WindowLeft%2A> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <xref:System.Console.SetWindowPosition%2A> method lets you set these values in a single method call.</span></span>  
  
-   <span data-ttu-id="e92d0-200">通过获取或设置和属性获取或设置光标的位置 <xref:System.Console.CursorTop%2A> <xref:System.Console.CursorLeft%2A> ，或通过调用方法设置光标的位置 <xref:System.Console.SetCursorPosition%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-200">Get or set the position of the cursor by getting or setting the <xref:System.Console.CursorTop%2A> and <xref:System.Console.CursorLeft%2A> properties, or set the position of the cursor by calling the <xref:System.Console.SetCursorPosition%2A> method.</span></span>  
  
-   <span data-ttu-id="e92d0-201">通过调用或方法，在屏幕缓冲区中移动或清除数据 <xref:System.Console.MoveBufferArea%2A> <xref:System.Console.Clear%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-201">Move or clear data in the screen buffer by calling the <xref:System.Console.MoveBufferArea%2A> or <xref:System.Console.Clear%2A> method.</span></span>  
  
-   <span data-ttu-id="e92d0-202">通过使用和属性获取或设置前景色和背景 <xref:System.Console.ForegroundColor%2A> 色 <xref:System.Console.BackgroundColor%2A> ，或通过调用方法将背景和前景重置为其默认颜色 <xref:System.Console.ResetColor%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-202">Get or set the foreground and background colors by using the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties, or reset the background and foreground to their default colors by calling the <xref:System.Console.ResetColor%2A> method.</span></span>  
  
-   <span data-ttu-id="e92d0-203">通过调用方法，通过控制台扬声器播放提示音 <xref:System.Console.Beep%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-203">Play the sound of a beep through the console speaker by calling the <xref:System.Console.Beep%2A> method.</span></span>  
  
<a name="Core"></a>   
## <a name="net_core-notes"></a>[!INCLUDE[net_core](~/includes/net-core-md.md)] <span data-ttu-id="e92d0-204">本票</span><span class="sxs-lookup"><span data-stu-id="e92d0-204">Notes</span></span>  
 <span data-ttu-id="e92d0-205">在桌面上的 .NET Framework 中， <xref:System.Console> 类使用和返回的编码 `GetConsoleCP` `GetConsoleOutputCP` ，这通常是一种代码页编码。</span><span class="sxs-lookup"><span data-stu-id="e92d0-205">In the .NET Framework on the desktop, the <xref:System.Console> class uses the encoding returned by `GetConsoleCP` and `GetConsoleOutputCP`, which typically is a code page encoding.</span></span> <span data-ttu-id="e92d0-206">例如，在区域性为英语 (美国) 的系统上，代码页437是默认情况下使用的编码。</span><span class="sxs-lookup"><span data-stu-id="e92d0-206">For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default.</span></span> <span data-ttu-id="e92d0-207">但是， [!INCLUDE[net_core](~/includes/net-core-md.md)] 只能提供这些编码的有限子集。</span><span class="sxs-lookup"><span data-stu-id="e92d0-207">However, [!INCLUDE[net_core](~/includes/net-core-md.md)] may make only a limited subset of these encodings available.</span></span> <span data-ttu-id="e92d0-208">对于这种情况， <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 将用作控制台的默认编码。</span><span class="sxs-lookup"><span data-stu-id="e92d0-208">Where this is the case, <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> is used as the default encoding for the console.</span></span>  
  
 <span data-ttu-id="e92d0-209">如果你的应用程序依赖于特定的代码页编码，你仍可以在调用任何方法 *之前* 执行以下操作，使其可用 <xref:System.Console> ：</span><span class="sxs-lookup"><span data-stu-id="e92d0-209">If your app depends on specific code page encodings, you can still make them available by doing the following *before* you call any <xref:System.Console> methods:</span></span>  
  
1.  <span data-ttu-id="e92d0-210">向项目添加对 System.Text.Encoding.CodePages.dll 程序集的引用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-210">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>  
  
2.  <span data-ttu-id="e92d0-211"><xref:System.Text.EncodingProvider>从属性中检索对象 <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-211">Retrieve the <xref:System.Text.EncodingProvider> object from the <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="e92d0-212">将 <xref:System.Text.EncodingProvider> 对象传递给 <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> 方法，以使编码提供程序支持其他编码。</span><span class="sxs-lookup"><span data-stu-id="e92d0-212">Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the additional encodings supported by the encoding provider available.</span></span>  
  
 <span data-ttu-id="e92d0-213"><xref:System.Console>类随后会自动使用默认系统编码，而不是 UTF8，前提是在调用任何输出方法之前已注册了编码提供程序 <xref:System.Console> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-213">The <xref:System.Console> class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any <xref:System.Console> output methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-214">下面的示例演示如何从标准输入和输出流中读取数据以及向其中写入数据。</span><span class="sxs-lookup"><span data-stu-id="e92d0-214">The following example demonstrates how to read data from, and write data to, the standard input and output streams.</span></span> <span data-ttu-id="e92d0-215">请注意，这些流可以使用和方法进行重定向 <xref:System.Console.SetIn%2A> <xref:System.Console.SetOut%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-215">Note that these streams can be redirected by using the <xref:System.Console.SetIn%2A> and <xref:System.Console.SetOut%2A> methods.</span></span>  
  
 [!code-cpp[Classic Console Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Console Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Console Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Console Example/CS/source.cs#1)]
 [!code-vb[Classic Console Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Console Example/VB/source.vb#1)]  
 [!code-fsharp[Classic Console Example#1](~/samples/snippets/fsharp/VS_Snippets_CLR_Classic/classic Console Example/FS/source.fs#1)]
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e92d0-216">此类型是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="e92d0-216">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BackgroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor BackgroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : ConsoleColor with get, set" Usage="System.Console.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-217">获取或设置控制台的背景色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-217">Gets or sets the background color of the console.</span></span></summary>
        <value><span data-ttu-id="e92d0-218">一个值，指定控制台的背景色；也就是显示在每个字符后面的颜色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-218">A value that specifies the background color of the console; that is, the color that appears behind each character.</span></span> <span data-ttu-id="e92d0-219">默认为黑色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-219">The default is black.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-220">对属性所做的更改 <xref:System.Console.BackgroundColor%2A> 只会影响在背景色更改后写入各个字符单元格的输出。</span><span class="sxs-lookup"><span data-stu-id="e92d0-220">A change to the <xref:System.Console.BackgroundColor%2A> property affects only output that is written to individual character cells after the background color is changed.</span></span> <span data-ttu-id="e92d0-221">若要整体更改控制台窗口的背景色，请设置 <xref:System.Console.BackgroundColor%2A> 属性并调用 <xref:System.Console.Clear%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-221">To change the background color of the console window as a whole, set the <xref:System.Console.BackgroundColor%2A> property and call the <xref:System.Console.Clear%2A> method.</span></span> <span data-ttu-id="e92d0-222">下面的示例进行了这方面的演示。</span><span class="sxs-lookup"><span data-stu-id="e92d0-222">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Console.BackgroundColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.backgroundcolor/cs/backgroundcolor1.cs#1)]
 [!code-vb[System.Console.BackgroundColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.backgroundcolor/vb/backgroundcolor1.vb#1)]  
  
 <span data-ttu-id="e92d0-223">对于基于 Windows 的应用程序（其中，控制台不存在）的 get 操作返回 <xref:System.ConsoleColor.Black?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-223">A get operation for a Windows-based application, in which a console does not exist, returns <xref:System.ConsoleColor.Black?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-224">下面的示例将枚举的值保存 <xref:System.ConsoleColor> 到数组，并将和属性的当前值存储 <xref:System.Console.BackgroundColor%2A> <xref:System.Console.ForegroundColor%2A> 到变量中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-224">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="e92d0-225">然后，它会将前景色更改为枚举中的每个颜色 <xref:System.ConsoleColor> （除了与当前背景匹配的颜色），并且它会将背景色更改为枚举中的每个颜色， <xref:System.ConsoleColor> 但与当前前景匹配的颜色除外。</span><span class="sxs-lookup"><span data-stu-id="e92d0-225">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="e92d0-226"> (如果前景色与背景色相同，则不显示文本。 ) 最后，它会调用 <xref:System.Console.ResetColor%2A> 方法来还原原始控制台颜色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-226">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92d0-227">设置操作中指定的颜色不是 <see cref="T:System.ConsoleColor" /> 的有效成员。</span><span class="sxs-lookup"><span data-stu-id="e92d0-227">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-228">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-228">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-229">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-229">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Beep">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92d0-230">通过控制台扬声器播放提示音。</span><span class="sxs-lookup"><span data-stu-id="e92d0-230">Plays the sound of a beep through the console speaker.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep();" />
      <MemberSignature Language="F#" Value="static member Beep : unit -&gt; unit" Usage="System.Console.Beep " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92d0-231">通过控制台扬声器播放提示音。</span><span class="sxs-lookup"><span data-stu-id="e92d0-231">Plays the sound of a beep through the console speaker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-232">默认情况下，提示音的频率为800赫兹，持续时间为200毫秒。</span><span class="sxs-lookup"><span data-stu-id="e92d0-232">By default, the beep plays at a frequency of 800 hertz for a duration of 200 milliseconds.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e92d0-233"><xref:System.Console.Beep%2A>Windows Vista 和 WINDOWS XP 的64位版本不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-233">The <xref:System.Console.Beep%2A> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</span></span>  
  
 <span data-ttu-id="e92d0-234"><xref:System.Console.Beep%2A> 包装对 Windows [嘟嘟声功能](/windows/win32/api/utilapiset/nf-utilapiset-beep)的调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-234"><xref:System.Console.Beep%2A> wraps a call to the Windows [Beep function](/windows/win32/api/utilapiset/nf-utilapiset-beep).</span></span> <span data-ttu-id="e92d0-235"><xref:System.Console.Beep%2A>Windows 7 之前是否生成 windows 版本的声音依赖于是否存在8254可编程间隔计时器芯片。</span><span class="sxs-lookup"><span data-stu-id="e92d0-235">Whether <xref:System.Console.Beep%2A> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</span></span> <span data-ttu-id="e92d0-236">从 Windows 7 开始，它取决于默认的声音设备。</span><span class="sxs-lookup"><span data-stu-id="e92d0-236">Starting with Windows 7, it depends on the default sound device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-237">下面的示例演示 <xref:System.Console.Beep%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-237">The following example demonstrates the <xref:System.Console.Beep%2A> method.</span></span> <span data-ttu-id="e92d0-238">此示例接受一个从1到9的数字作为命令行参数，并在出现提示时播放提示音。</span><span class="sxs-lookup"><span data-stu-id="e92d0-238">The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.</span></span>  
  
 [!code-cpp[console.beep#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep/CPP/beep.cpp#1)]
 [!code-csharp[console.beep#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep/CS/beep.cs#1)]
 [!code-vb[console.beep#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep/VB/beep.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.HostProtectionException"><span data-ttu-id="e92d0-239">在不允许访问用户界面的服务器（例如 SQL Server）上执行此方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-239">This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep (int frequency, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep(int32 frequency, int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep (frequency As Integer, duration As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep(int frequency, int duration);" />
      <MemberSignature Language="F#" Value="static member Beep : int * int -&gt; unit" Usage="System.Console.Beep (frequency, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frequency" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="duration" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="frequency"><span data-ttu-id="e92d0-240">提示音的频率，介于 37 到 32767 赫兹之间。</span><span class="sxs-lookup"><span data-stu-id="e92d0-240">The frequency of the beep, ranging from 37 to 32767 hertz.</span></span></param>
        <param name="duration"><span data-ttu-id="e92d0-241">提示音的持续时间，以毫秒为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-241">The duration of the beep measured in milliseconds.</span></span></param>
        <summary><span data-ttu-id="e92d0-242">通过控制台扬声器播放具有指定频率和持续时间的提示音。</span><span class="sxs-lookup"><span data-stu-id="e92d0-242">Plays the sound of a beep of a specified frequency and duration through the console speaker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-243"><xref:System.Console.Beep%2A> 包装对 Windows [嘟嘟声功能](/windows/win32/api/utilapiset/nf-utilapiset-beep)的调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-243"><xref:System.Console.Beep%2A> wraps a call to the Windows [Beep function](/windows/win32/api/utilapiset/nf-utilapiset-beep).</span></span> <span data-ttu-id="e92d0-244"><xref:System.Console.Beep%2A>Windows 7 之前是否生成 windows 版本的声音依赖于是否存在8254可编程间隔计时器芯片。</span><span class="sxs-lookup"><span data-stu-id="e92d0-244">Whether <xref:System.Console.Beep%2A> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</span></span> <span data-ttu-id="e92d0-245">从 Windows 7 开始，它取决于默认的声音设备。</span><span class="sxs-lookup"><span data-stu-id="e92d0-245">Starting with Windows 7, it depends on the default sound device.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e92d0-246"><xref:System.Console.Beep%2A>Windows Vista 和 WINDOWS XP 的64位版本不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-246">The <xref:System.Console.Beep%2A> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-247">此示例通过使用 <xref:System.Console.Beep%2A> 控制台发言人播放一首歌曲的前几个笔记来演示方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-247">This example demonstrates the <xref:System.Console.Beep%2A> method by playing the first few notes of a song through the console speaker.</span></span>  
  
 [!code-cpp[console.beep2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep2/CPP/b2.cpp#1)]
 [!code-csharp[console.beep2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep2/CS/b2.cs#1)]
 [!code-vb[console.beep2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep2/VB/b2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-248"><paramref name="frequency" /> 小于 37 或大于 32767 赫兹。</span><span class="sxs-lookup"><span data-stu-id="e92d0-248"><paramref name="frequency" /> is less than 37 or more than 32767 hertz.</span></span>  
  
<span data-ttu-id="e92d0-249">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-249">-or-</span></span> 
 <span data-ttu-id="e92d0-250"><paramref name="duration" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-250"><paramref name="duration" /> is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.Security.HostProtectionException"><span data-ttu-id="e92d0-251">在不允许访问控制台的服务器（例如 SQL Server）上执行此方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-251">This method was executed on a server, such as SQL Server, that does not permit access to the console.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-252">当前操作系统不是 Windows。</span><span class="sxs-lookup"><span data-stu-id="e92d0-252">The current operating system is not Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BufferHeight">
      <MemberSignature Language="C#" Value="public static int BufferHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferHeight : int with get, set" Usage="System.Console.BufferHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-253">获取或设置缓冲区的高度。</span><span class="sxs-lookup"><span data-stu-id="e92d0-253">Gets or sets the height of the buffer area.</span></span></summary>
        <value><span data-ttu-id="e92d0-254">缓冲区的当前高度，以行为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-254">The current height, in rows, of the buffer area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-255">此属性定义在由控制台模式窗口访问的缓冲区中 (或行) 的行数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-255">This property defines the number of rows (or lines) stored in the buffer that is accessed by a console mode window.</span></span> <span data-ttu-id="e92d0-256">与此相反， <xref:System.Console.WindowHeight%2A> 属性定义在任何特定时间实际显示在控制台窗口中的行数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-256">In contrast, the <xref:System.Console.WindowHeight%2A> property defines the number of rows that are actually displayed in the console window at any particular time.</span></span> <span data-ttu-id="e92d0-257">如果实际上写入缓冲区的行数超过了属性定义的行数 <xref:System.Console.WindowHeight%2A> ，则窗口可以垂直滚动，以便显示与属性相同的行数， <xref:System.Console.WindowHeight%2A> 并将其放在缓冲区中的任意位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-257">If the number of rows actually written to the buffer exceeds the number of rows defined by the <xref:System.Console.WindowHeight%2A> property, the window can be scrolled vertically so that it displays a contiguous number of rows that are equal to the <xref:System.Console.WindowHeight%2A> property and are located anywhere in the buffer.</span></span>  
  
 <span data-ttu-id="e92d0-258">如果设置操作减小了属性的值 <xref:System.Console.BufferHeight%2A> ，则会删除最上方的行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-258">If a set operation decreases the value of the <xref:System.Console.BufferHeight%2A> property, the uppermost lines are removed.</span></span> <span data-ttu-id="e92d0-259">例如，如果行数从300减少到250，则将删除第0行到第49行，现有行50到299将变为第0到249行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-259">For example, if the number of lines is reduced from 300 to 250, lines 0 through 49 are removed, and the existing lines 50 through 299 become lines 0 through 249.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-260">此示例演示了 <xref:System.Console.BufferHeight%2A> 和 <xref:System.Console.BufferWidth%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-260">This example demonstrates the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="e92d0-261">该示例将报告操作系统窗口的尺寸，其缓冲区大小为300行，85列。</span><span class="sxs-lookup"><span data-stu-id="e92d0-261">The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</span></span>  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-262">Set 操作中的值小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-262">The value in a set operation is less than or equal to zero.</span></span>  
  
<span data-ttu-id="e92d0-263">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-263">-or-</span></span> 
<span data-ttu-id="e92d0-264">集运算中的值大于或等于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-264">The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="e92d0-265">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-265">-or-</span></span> 
<span data-ttu-id="e92d0-266">Set 操作中的值小于 <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-266">The value in a set operation is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-267">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-267">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-268">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-268">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-269">设置操作在 Windows 之外的操作系统上调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-269">The set operation is invoked on an operating system other than Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BufferWidth">
      <MemberSignature Language="C#" Value="public static int BufferWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferWidth : int with get, set" Usage="System.Console.BufferWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-270">获取或设置缓冲区的宽度。</span><span class="sxs-lookup"><span data-stu-id="e92d0-270">Gets or sets the width of the buffer area.</span></span></summary>
        <value><span data-ttu-id="e92d0-271">缓冲区的当前宽度，以列为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-271">The current width, in columns, of the buffer area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-272">如果设置操作减小了属性的值 <xref:System.Console.BufferWidth%2A> ，则会删除最右边的列。</span><span class="sxs-lookup"><span data-stu-id="e92d0-272">If a set operation decreases the value of the <xref:System.Console.BufferWidth%2A> property, the rightmost columns are removed.</span></span> <span data-ttu-id="e92d0-273">例如，如果列数从80减少到60，则将删除每行的60到79列。</span><span class="sxs-lookup"><span data-stu-id="e92d0-273">For example, if the number of columns is reduced from 80 to 60, columns 60 through 79 of each row are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-274">此示例演示了 <xref:System.Console.BufferHeight%2A> 和 <xref:System.Console.BufferWidth%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-274">This example demonstrates the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="e92d0-275">该示例将报告操作系统窗口的尺寸，其缓冲区大小为300行，85列。</span><span class="sxs-lookup"><span data-stu-id="e92d0-275">The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</span></span>  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-276">Set 操作中的值小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-276">The value in a set operation is less than or equal to zero.</span></span>  
  
<span data-ttu-id="e92d0-277">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-277">-or-</span></span> 
<span data-ttu-id="e92d0-278">集运算中的值大于或等于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-278">The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="e92d0-279">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-279">-or-</span></span> 
<span data-ttu-id="e92d0-280">Set 操作中的值小于 <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-280">The value in a set operation is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-281">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-281">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-282">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-282">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-283">设置操作在 Windows 之外的操作系统上调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-283">The set operation is invoked on an operating system other than Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CancelKeyPress">
      <MemberSignature Language="C#" Value="public static event ConsoleCancelEventHandler CancelKeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ConsoleCancelEventHandler CancelKeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Console.CancelKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CancelKeyPress As ConsoleCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event ConsoleCancelEventHandler ^ CancelKeyPress;" />
      <MemberSignature Language="F#" Value="member this.CancelKeyPress : ConsoleCancelEventHandler " Usage="member this.CancelKeyPress : System.ConsoleCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[add: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[remove: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-284">当 <see cref="F:System.ConsoleModifiers.Control" /> 修改键 (Ctrl) 和 <see cref="F:System.ConsoleKey.C" /> console 键 (C) 或 Break 键同时按住（Ctrl+C 或 Ctrl+Break）时发生。</span><span class="sxs-lookup"><span data-stu-id="e92d0-284">Occurs when the <see cref="F:System.ConsoleModifiers.Control" /> modifier key (Ctrl) and either the <see cref="F:System.ConsoleKey.C" /> console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-285">此事件与和结合使用 <xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType> <xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-285">This event is used in conjunction with <xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType> and <xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e92d0-286"><xref:System.Console.CancelKeyPress>事件使控制台应用程序能够截获 Ctrl + C 信号，以便事件处理程序可以决定是继续执行还是终止操作。</span><span class="sxs-lookup"><span data-stu-id="e92d0-286">The <xref:System.Console.CancelKeyPress> event enables a console application to intercept the Ctrl+C signal so the event handler can decide whether to continue executing or terminate.</span></span> <span data-ttu-id="e92d0-287">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-287">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="e92d0-288">用户按下 Ctrl + C 或 Ctrl + Break 时，将 <xref:System.Console.CancelKeyPress> 触发事件并执行应用程序的 <xref:System.ConsoleCancelEventHandler> 事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="e92d0-288">When the user presses either Ctrl+C or Ctrl+Break, the <xref:System.Console.CancelKeyPress> event is fired and the application's <xref:System.ConsoleCancelEventHandler> event handler is executed.</span></span> <span data-ttu-id="e92d0-289">向事件处理程序传递一个 <xref:System.ConsoleCancelEventArgs> 具有两个有用属性的对象：</span><span class="sxs-lookup"><span data-stu-id="e92d0-289">The event handler is passed a <xref:System.ConsoleCancelEventArgs> object that has two useful properties:</span></span>  
  
-   <span data-ttu-id="e92d0-290"><xref:System.ConsoleCancelEventArgs.SpecialKey%2A>，这允许你确定处理程序是否是由于用户按下 Ctrl + C 的结果调用的 (属性值是否 <xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) 或 Ctrl + Break (属性值 <xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>) 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-290"><xref:System.ConsoleCancelEventArgs.SpecialKey%2A>, which allows you to determine whether the handler was invoked as a result of the user pressing Ctrl+C (the property value is <xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) or Ctrl+Break (the property value is <xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>).</span></span>  
  
-   <span data-ttu-id="e92d0-291"><xref:System.ConsoleCancelEventArgs.Cancel%2A>，它允许您确定应用程序应如何响应用户按 Ctrl + C 或 Ctrl + Break。</span><span class="sxs-lookup"><span data-stu-id="e92d0-291"><xref:System.ConsoleCancelEventArgs.Cancel%2A>, which allows you to determine how your application should respond to the user pressing Ctrl+C or Ctrl+Break.</span></span> <span data-ttu-id="e92d0-292">默认情况下， <xref:System.ConsoleCancelEventArgs.Cancel%2A> 属性为 `false` ，这将导致在事件处理程序退出时程序执行终止。</span><span class="sxs-lookup"><span data-stu-id="e92d0-292">By default, the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is `false`, which causes program execution to terminate when the event handler exits.</span></span> <span data-ttu-id="e92d0-293">更改其属性以 `true` 指定应用程序应继续执行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-293">Changing its property to `true` specifies that the application should continue to execute.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="e92d0-294">如果你的应用程序具有简单的要求，则可以使用 <xref:System.Console.TreatControlCAsInput%2A> 属性来代替此事件。</span><span class="sxs-lookup"><span data-stu-id="e92d0-294">If your application has simple requirements, you can use the <xref:System.Console.TreatControlCAsInput%2A> property instead of this event.</span></span> <span data-ttu-id="e92d0-295">通过将此属性设置为 `false` ，可以确保用户按下 Ctrl + C 时始终退出应用程序。</span><span class="sxs-lookup"><span data-stu-id="e92d0-295">By setting this property to `false`, you can ensure that your application always exits if the user presses Ctrl+C.</span></span> <span data-ttu-id="e92d0-296">通过将其设置为 `true` ，可以确保按 Ctrl + C 不会终止应用程序。</span><span class="sxs-lookup"><span data-stu-id="e92d0-296">By setting it to `true`, you can ensure that pressing Ctrl+C will not terminate the application.</span></span>  
  
 <span data-ttu-id="e92d0-297">此事件的事件处理程序在线程池线程上执行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-297">The event handler for this event is executed on a thread pool thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-298">下面的示例演示如何 <xref:System.Console.CancelKeyPress> 使用事件。</span><span class="sxs-lookup"><span data-stu-id="e92d0-298">The following example demonstrates how the <xref:System.Console.CancelKeyPress> event is used.</span></span> <span data-ttu-id="e92d0-299">按下 Ctrl + C 时，读取操作将中断，并且将 `myHandler` 调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="e92d0-299">When you press Ctrl+C, the read operation is interrupted and the `myHandler` event handler is invoked.</span></span> <span data-ttu-id="e92d0-300">进入事件处理程序后， <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> 属性为 `false` ，这意味着当事件处理程序终止时，当前进程将终止。</span><span class="sxs-lookup"><span data-stu-id="e92d0-300">Upon entry to the event handler, the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> property is `false`, which means that the current process will terminate when the event handler terminates.</span></span> <span data-ttu-id="e92d0-301">但是，事件处理程序将 <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> 属性设置为 `true` ，这意味着进程将不会终止，读取操作将继续。</span><span class="sxs-lookup"><span data-stu-id="e92d0-301">However, the event handler sets the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> property to `true`, which means that the process will not terminate and the read operation will resume.</span></span>  
  
 [!code-cpp[console.cancelkeypress#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cancelkeypress/cpp/ckp.cpp#1)]
 [!code-csharp[console.cancelkeypress#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cancelkeypress/cs/ckp.cs#1)]
 [!code-vb[console.cancelkeypress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cancelkeypress/vb/ckp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ConsoleCancelEventArgs" />
        <altmember cref="T:System.ConsoleCancelEventHandler" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public static bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CapsLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapsLock : bool" Usage="System.Console.CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-302">获取一个值，该值指示 Caps Lock 键盘切换键是打开的还是关闭的。</span><span class="sxs-lookup"><span data-stu-id="e92d0-302">Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.</span></span></summary>
        <value><span data-ttu-id="e92d0-303">如果 Caps Lock 是打开的，则为 <see langword="true" />；如果 Caps Lock 是关闭的，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-303"><see langword="true" /> if CAPS LOCK is turned on; <see langword="false" /> if CAPS LOCK is turned off.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-304">get 操作在 Windows 之外的操作系统上调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-304">The get operation is invoked on an operating system other than Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Console.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92d0-305">清除控制台缓冲区和相应的控制台窗口的显示信息。</span><span class="sxs-lookup"><span data-stu-id="e92d0-305">Clears the console buffer and corresponding console window of display information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-306">使用 <xref:System.Console.Clear%2A> 方法等效于 `cls` 在命令提示符窗口中调用 MS-DOS 命令。</span><span class="sxs-lookup"><span data-stu-id="e92d0-306">Using the <xref:System.Console.Clear%2A> method is equivalent invoking the MS-DOS `cls` command in the command prompt window.</span></span> <span data-ttu-id="e92d0-307"><xref:System.Console.Clear%2A>调用方法时，光标将自动滚动到窗口的左上角，而屏幕缓冲区的内容则使用当前前景背景色设置为空白。</span><span class="sxs-lookup"><span data-stu-id="e92d0-307">When the <xref:System.Console.Clear%2A> method is called, the cursor automatically scrolls to the top-left corner of the window and the contents of the screen buffer are set to blanks using the current foreground background colors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e92d0-308"><xref:System.Console.Clear%2A>当控制台应用程序的输出重定向到文件时，尝试调用方法会引发 <xref:System.IO.IOException> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-308">Attempting to call the <xref:System.Console.Clear%2A> method when a console application's output is redirected to a file throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="e92d0-309">若要防止出现这种情况, 请始终<xref:System.Console.Clear%2A>将对方法`try`的调用包装到 ...`catch`</span><span class="sxs-lookup"><span data-stu-id="e92d0-309">To prevent this, always wrap a call to the <xref:System.Console.Clear%2A> method in a `try`…`catch`</span></span> <span data-ttu-id="e92d0-310">模块.</span><span class="sxs-lookup"><span data-stu-id="e92d0-310">block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-311">下面的示例使用 <xref:System.Console.Clear%2A> 方法在控制台执行循环之前清除控制台，并提示用户选择前景色和背景色以及输入要显示的字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-311">The following example uses the <xref:System.Console.Clear%2A> method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display.</span></span> <span data-ttu-id="e92d0-312">如果用户选择不退出程序，控制台的原始前景色和背景色将被还原，然后 <xref:System.Console.Clear%2A> 再次调用方法，然后重新执行循环。</span><span class="sxs-lookup"><span data-stu-id="e92d0-312">If the user chooses not to exit the program, the console's original foreground and background colors are restored and the <xref:System.Console.Clear%2A> method is called again before re-executing the loop.</span></span>  
  
 [!code-csharp[System.Console.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.clear/cs/clear1.cs#1)]
 [!code-vb[System.Console.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.clear/vb/clear1.vb#1)]  
  
 <span data-ttu-id="e92d0-313">该示例依赖于一个 `GetKeyPress` 方法来验证用户选择的前景色和背景色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-313">The example relies on a `GetKeyPress` method to validate the user's selection of a foreground and background color.</span></span>  
  
 <span data-ttu-id="e92d0-314">此示例演示 <xref:System.Console.CursorLeft%2A> 和属性以及和 <xref:System.Console.CursorTop%2A> <xref:System.Console.SetCursorPosition%2A> <xref:System.Console.Clear%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-314">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="e92d0-315">该示例定位光标，该光标确定下一次写入的位置，以使用 "+"、"&#124;" 和 "-" 字符串的组合来绘制5个字符，每5个字符矩形。</span><span class="sxs-lookup"><span data-stu-id="e92d0-315">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="e92d0-316">请注意，可以使用其他字符串的组合来绘制矩形，并减少步骤。</span><span class="sxs-lookup"><span data-stu-id="e92d0-316">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-317">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-317">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CursorLeft">
      <MemberSignature Language="C#" Value="public static int CursorLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorLeft : int with get, set" Usage="System.Console.CursorLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-318">获取或设置光标在缓冲区中的列位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-318">Gets or sets the column position of the cursor within the buffer area.</span></span></summary>
        <value><span data-ttu-id="e92d0-319">光标的当前位置，以列为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-319">The current position, in columns, of the cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92d0-320">此示例演示 <xref:System.Console.CursorLeft%2A> 和属性以及和 <xref:System.Console.CursorTop%2A> <xref:System.Console.SetCursorPosition%2A> <xref:System.Console.Clear%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-320">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="e92d0-321">该示例定位光标，该光标确定下一次写入的位置，以使用 "+"、"&#124;" 和 "-" 字符串的组合来绘制5个字符，每5个字符矩形。</span><span class="sxs-lookup"><span data-stu-id="e92d0-321">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="e92d0-322">请注意，可以使用其他字符串的组合来绘制矩形，并减少步骤。</span><span class="sxs-lookup"><span data-stu-id="e92d0-322">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-323">集运算中的值小于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-323">The value in a set operation is less than zero.</span></span>  
  
<span data-ttu-id="e92d0-324">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-324">-or-</span></span> 
<span data-ttu-id="e92d0-325">集运算中的值大于或等于 <see cref="P:System.Console.BufferWidth" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-325">The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-326">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-326">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-327">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-327">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CursorSize">
      <MemberSignature Language="C#" Value="public static int CursorSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorSize" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorSize : int with get, set" Usage="System.Console.CursorSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-328">获取或设置光标在字符单元格中的高度。</span><span class="sxs-lookup"><span data-stu-id="e92d0-328">Gets or sets the height of the cursor within a character cell.</span></span></summary>
        <value><span data-ttu-id="e92d0-329">光标的大小，以字符单元格高度的百分比表示。</span><span class="sxs-lookup"><span data-stu-id="e92d0-329">The size of the cursor expressed as a percentage of the height of a character cell.</span></span> <span data-ttu-id="e92d0-330">属性值的范围为 1 到 100。</span><span class="sxs-lookup"><span data-stu-id="e92d0-330">The property value ranges from 1 to 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-331">当属性值为1时，光标外观会变化，范围是从单元底部的横线开始，在属性值为100时完全填充单元格。</span><span class="sxs-lookup"><span data-stu-id="e92d0-331">The cursor appearance varies, ranging from a horizontal line at the bottom of the cell when the property value is 1, to completely filling the cell when the property value is 100.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-332">此示例演示了 <xref:System.Console.CursorSize%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-332">This example demonstrates the <xref:System.Console.CursorSize%2A> property.</span></span> <span data-ttu-id="e92d0-333">每次按下任何控制台键时，此示例都会增加游标的大小，然后在终止前将光标还原为原始大小。</span><span class="sxs-lookup"><span data-stu-id="e92d0-333">The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.</span></span>  
  
 [!code-cpp[console.cursorsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorsize/CPP/csize.cpp#1)]
 [!code-csharp[console.cursorsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorsize/CS/csize.cs#1)]
 [!code-vb[console.cursorsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorsize/VB/csize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-334">集运算中指定的值小于 1 或大于 100.</span><span class="sxs-lookup"><span data-stu-id="e92d0-334">The value specified in a set operation is less than 1 or greater than 100.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-335">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-335">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-336">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-336">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-337">设置操作在 Windows 之外的操作系统上调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-337">The set operation is invoked on an operating system other than Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CursorTop">
      <MemberSignature Language="C#" Value="public static int CursorTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorTop : int with get, set" Usage="System.Console.CursorTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-338">获取或设置光标在缓冲区中的行位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-338">Gets or sets the row position of the cursor within the buffer area.</span></span></summary>
        <value><span data-ttu-id="e92d0-339">光标的当前位置，以行为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-339">The current position, in rows, of the cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92d0-340">此示例演示 <xref:System.Console.CursorLeft%2A> 和属性以及和 <xref:System.Console.CursorTop%2A> <xref:System.Console.SetCursorPosition%2A> <xref:System.Console.Clear%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-340">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="e92d0-341">该示例定位光标，该光标确定下一次写入的位置，以使用 "+"、"&#124;" 和 "-" 字符串的组合来绘制5个字符，每5个字符矩形。</span><span class="sxs-lookup"><span data-stu-id="e92d0-341">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="e92d0-342">请注意，可以使用其他字符串的组合来绘制矩形，并减少步骤。</span><span class="sxs-lookup"><span data-stu-id="e92d0-342">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-343">集运算中的值小于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-343">The value in a set operation is less than zero.</span></span>  
  
<span data-ttu-id="e92d0-344">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-344">-or-</span></span> 
<span data-ttu-id="e92d0-345">集运算中的值大于或等于 <see cref="P:System.Console.BufferHeight" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-345">The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-346">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-346">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-347">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-347">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CursorVisible">
      <MemberSignature Language="C#" Value="public static bool CursorVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CursorVisible" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorVisible" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CursorVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CursorVisible : bool with get, set" Usage="System.Console.CursorVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-348">获取或设置一个值，用以指示光标是否可见。</span><span class="sxs-lookup"><span data-stu-id="e92d0-348">Gets or sets a value indicating whether the cursor is visible.</span></span></summary>
        <value><span data-ttu-id="e92d0-349">如果光标可见，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-349"><see langword="true" /> if the cursor is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92d0-350">此示例演示了 <xref:System.Console.CursorVisible%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-350">This example demonstrates the <xref:System.Console.CursorVisible%2A> property.</span></span> <span data-ttu-id="e92d0-351">如果输入的第一列是 "+" 字符，则此示例将使光标可见，如果输入为 "-" 字符，则为不可见。</span><span class="sxs-lookup"><span data-stu-id="e92d0-351">The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.</span></span>  
  
 [!code-cpp[console.cursorvis#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorvis/CPP/vis.cpp#1)]
 [!code-csharp[console.cursorvis#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorvis/CS/vis.cs#1)]
 [!code-vb[console.cursorvis#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorvis/VB/vis.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-352">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-352">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-353">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-353">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-354">get 操作在 Windows 之外的操作系统上调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-354">The get operation is invoked on an operating system other than Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Error" />
      <MemberSignature Language="DocId" Value="P:System.Console.Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Error As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Error { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Error : System.IO.TextWriter" Usage="System.Console.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-355">获取标准错误输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-355">Gets the standard error output stream.</span></span></summary>
        <value><span data-ttu-id="e92d0-356">表示标准错误输出流的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-356">A <see cref="T:System.IO.TextWriter" /> that represents the standard error output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-357">默认情况下，此标准错误流设置为控制台。</span><span class="sxs-lookup"><span data-stu-id="e92d0-357">This standard error stream is set to the console by default.</span></span> <span data-ttu-id="e92d0-358">它可以通过方法设置为另一个流 <xref:System.Console.SetError%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-358">It can be set to another stream with the <xref:System.Console.SetError%2A> method.</span></span> <span data-ttu-id="e92d0-359">重定向标准错误流后，可以通过调用方法重新获取它 <xref:System.Console.OpenStandardError%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-359">After the standard error stream is redirected, it can be reacquired by calling the <xref:System.Console.OpenStandardError%2A> method.</span></span>  
  
 <span data-ttu-id="e92d0-360">在其信息性输出经常重定向到文件的控制台应用程序中，通过属性提供的标准错误流 <xref:System.Console.Error%2A> 可用于向控制台显示信息，即使重定向了输出也是如此。</span><span class="sxs-lookup"><span data-stu-id="e92d0-360">In console applications whose informational output is often redirected to a file, the standard error stream available through the <xref:System.Console.Error%2A> property can be used to display information to the console even if output is redirected.</span></span> <span data-ttu-id="e92d0-361">下面的示例从1开始一次显示10个数字的产品表。</span><span class="sxs-lookup"><span data-stu-id="e92d0-361">The following example displays product tables for 10 numbers at a time starting with 1.</span></span> <span data-ttu-id="e92d0-362">每设置10个数字后，将 <xref:System.Console.Error%2A> 使用属性来询问用户是否显示下一组。</span><span class="sxs-lookup"><span data-stu-id="e92d0-362">After every set of 10 numbers, the <xref:System.Console.Error%2A> property is used to ask the user whether to display the next set.</span></span> <span data-ttu-id="e92d0-363">如果标准输出重定向到文件，则系统仍会询问用户是否应该生成下一组产品。</span><span class="sxs-lookup"><span data-stu-id="e92d0-363">If the standard output is redirected to a file, the user is still asked whether the routine should generate the next set of products.</span></span>  
  
 [!code-csharp[System.Console.Error#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.error/cs/error1.cs#1)]
 [!code-vb[System.Console.Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.error/vb/error1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-364">下面的示例是一个名为 ExpandTabs 的命令行实用程序，它在包含四个空格（由变量定义的值）的文本文件中替换制表符 `tabSize` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-364">The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the `tabSize` variable.</span></span> <span data-ttu-id="e92d0-365">它将标准输入流和输出流重定向到文件，但使用 <xref:System.Console.Error%2A> 属性将标准错误流写入控制台。</span><span class="sxs-lookup"><span data-stu-id="e92d0-365">It redirects the standard input and output streams to files, but uses the <xref:System.Console.Error%2A> property to write the standard error stream to the console.</span></span> <span data-ttu-id="e92d0-366">可以通过提供包含制表符和输出文件名称的文件的名称，从命令行启动它。</span><span class="sxs-lookup"><span data-stu-id="e92d0-366">It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.</span></span>  
  
 [!code-cpp[Console-EXPANDTABSEX#1](~/samples/snippets/cpp/VS_Snippets_CLR/Console-EXPANDTABSEX/CPP/expandtabsex.cpp#1)]
 [!code-csharp[Console-EXPANDTABSEX#1](~/samples/snippets/csharp/VS_Snippets_CLR/Console-EXPANDTABSEX/CS/expandtabsex.cs#1)]
 [!code-vb[Console-EXPANDTABSEX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Console-EXPANDTABSEX/VB/expandtabsex.vb#1)]  
  
 <span data-ttu-id="e92d0-367">下面的示例是一个简单的文本文件查看器，可在控制台中显示一个或多个文本文件的内容。</span><span class="sxs-lookup"><span data-stu-id="e92d0-367">The following example is a simple text file viewer that displays the contents of one or more text files to the console.</span></span> <span data-ttu-id="e92d0-368">如果没有命令行参数，或者作为命令行参数传递的任何文件都不存在，则此示例将调用 <xref:System.Console.SetError%2A> 方法将错误信息重定向到文件， <xref:System.Console.OpenStandardError%2A> 在 reacquiring 标准错误流的过程中调用方法，并指示错误信息已写入文件。</span><span class="sxs-lookup"><span data-stu-id="e92d0-368">If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</span></span>  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 <span data-ttu-id="e92d0-369">请注意，在 <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> `true` reacquiring 错误流之前，属性设置为。</span><span class="sxs-lookup"><span data-stu-id="e92d0-369">Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property is set to `true` before reacquiring the error stream.</span></span> <span data-ttu-id="e92d0-370">这可确保将输出立即发送到控制台，而不是进行缓冲处理。</span><span class="sxs-lookup"><span data-stu-id="e92d0-370">This ensures that output will be sent to the console immediately rather than buffered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ForegroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor ForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor ForegroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.ForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ForegroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor ForegroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberSignature Language="F#" Value="member this.ForegroundColor : ConsoleColor with get, set" Usage="System.Console.ForegroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-371">获取或设置控制台的前景色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-371">Gets or sets the foreground color of the console.</span></span></summary>
        <value><span data-ttu-id="e92d0-372">一个 <see cref="T:System.ConsoleColor" />，指定控制台的前景色；也就是显示的每个字符的颜色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-372">A <see cref="T:System.ConsoleColor" /> that specifies the foreground color of the console; that is, the color of each character that is displayed.</span></span> <span data-ttu-id="e92d0-373">默认为灰色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-373">The default is gray.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-374">对于基于 Windows 的应用程序（其中，控制台不存在）的 get 操作返回 <xref:System.ConsoleColor.Gray> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-374">A get operation for a Windows-based application, in which a console does not exist, returns <xref:System.ConsoleColor.Gray>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-375">下面的示例检查控制台的背景色是否为黑色，如果是，则将背景色更改为红色，将前景色更改为黑色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-375">The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.</span></span>  
  
 [!code-csharp[System.ConsoleColor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/Example2.cs#2)] 
 [!code-vb[System.ConsoleColor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/Example2.vb#2)]  
  
 <span data-ttu-id="e92d0-376">下面的示例将枚举的值保存 <xref:System.ConsoleColor> 到数组，并将和属性的当前值存储 <xref:System.Console.BackgroundColor%2A> <xref:System.Console.ForegroundColor%2A> 到变量中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-376">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="e92d0-377">然后，它会将前景色更改为枚举中的每个颜色 <xref:System.ConsoleColor> （除了与当前背景匹配的颜色），并且它会将背景色更改为枚举中的每个颜色， <xref:System.ConsoleColor> 但与当前前景匹配的颜色除外。</span><span class="sxs-lookup"><span data-stu-id="e92d0-377">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="e92d0-378"> (如果前景色与背景色相同，则不显示文本。 ) 最后，它会调用 <xref:System.Console.ResetColor%2A> 方法来还原原始控制台颜色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-378">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92d0-379">设置操作中指定的颜色不是 <see cref="T:System.ConsoleColor" /> 的有效成员。</span><span class="sxs-lookup"><span data-stu-id="e92d0-379">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-380">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-380">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-381">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-381">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCursorPosition">
      <MemberSignature Language="C#" Value="public static (int,int) GetCursorPosition ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;int32, int32&gt; GetCursorPosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.GetCursorPosition" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCursorPosition () As ValueTuple(Of Integer, Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ValueTuple&lt;int, int&gt; GetCursorPosition();" />
      <MemberSignature Language="F#" Value="static member GetCursorPosition : unit -&gt; ValueTuple&lt;int, int&gt;" Usage="System.Console.GetCursorPosition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Int32,System.Int32&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Left", "Top" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Left", "Top" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92d0-382">获取游标的位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-382">Gets the position of the cursor.</span></span></summary>
        <returns><span data-ttu-id="e92d0-383">光标的列和行位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-383">The column and row position of the cursor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="e92d0-384">将从 0 开始从左到右对列进行编号。</span><span class="sxs-lookup"><span data-stu-id="e92d0-384">Columns are numbered from left to right starting at 0.</span></span> <span data-ttu-id="e92d0-385">从上到下，从 0 开始为行编号。</span><span class="sxs-lookup"><span data-stu-id="e92d0-385">Rows are numbered from top to bottom starting at 0.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="In">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader In { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextReader In" />
      <MemberSignature Language="DocId" Value="P:System.Console.In" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property In As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextReader ^ In { System::IO::TextReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.In : System.IO.TextReader" Usage="System.Console.In" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-386">获取标准输入流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-386">Gets the standard input stream.</span></span></summary>
        <value><span data-ttu-id="e92d0-387">表示标准输入流的 <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-387">A <see cref="T:System.IO.TextReader" /> that represents the standard input stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-388">默认情况下，此属性设置为标准输入流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-388">This property is set to the standard input stream by default.</span></span> <span data-ttu-id="e92d0-389">此属性可以通过方法设置为另一个流 <xref:System.Console.SetIn%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-389">This property can be set to another stream with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
 <span data-ttu-id="e92d0-390">对标准输入流执行的读取操作同步执行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-390">Read operations on the standard input stream execute synchronously.</span></span> <span data-ttu-id="e92d0-391">也就是说，它们将被阻止，直到指定的读取操作完成。</span><span class="sxs-lookup"><span data-stu-id="e92d0-391">That is, they block until the specified read operation has completed.</span></span> <span data-ttu-id="e92d0-392">即使 <xref:System.IO.TextReader.ReadLineAsync%2A> 在属性返回的对象上调用异步方法（如），也是如此 <xref:System.IO.TextReader> <xref:System.Console.In%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-392">This is true even if an asynchronous method, such as <xref:System.IO.TextReader.ReadLineAsync%2A>, is called on the <xref:System.IO.TextReader> object returned by the <xref:System.Console.In%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-393">下面的示例演示属性的用法 `In` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-393">The following sample illustrates the use of the `In` property.</span></span>  
  
 [!code-cpp[consolein#1](~/samples/snippets/cpp/VS_Snippets_CLR/consolein/CPP/consolein.cpp#1)]
 [!code-csharp[consolein#1](~/samples/snippets/csharp/VS_Snippets_CLR/consolein/CS/consolein.cs#1)]
 [!code-vb[consolein#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/consolein/VB/consolein.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Console.OpenStandardInput" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="InputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding InputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding InputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.InputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property InputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ InputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InputEncoding : System.Text.Encoding with get, set" Usage="System.Console.InputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-394">获取或设置控制台用于读取输入的编码。</span><span class="sxs-lookup"><span data-stu-id="e92d0-394">Gets or sets the encoding the console uses to read input.</span></span></summary>
        <value><span data-ttu-id="e92d0-395">用于读取控制台输入的编码。</span><span class="sxs-lookup"><span data-stu-id="e92d0-395">The encoding used to read console input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-396">控制台使用输入编码将键盘输入转换为相应的字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-396">The console uses the input encoding to translate keyboard input into a corresponding character.</span></span> <span data-ttu-id="e92d0-397">输入编码包含将256键盘字符代码映射到各个字符的代码页。</span><span class="sxs-lookup"><span data-stu-id="e92d0-397">The input encoding incorporates a code page that maps 256 keyboard character codes to individual characters.</span></span> <span data-ttu-id="e92d0-398">不同的代码页包含不同的特殊字符，通常会对一种语言或一组语言进行自定义。</span><span class="sxs-lookup"><span data-stu-id="e92d0-398">Different code pages include different special characters, typically customized for a language or a group of languages.</span></span>  
  
 <span data-ttu-id="e92d0-399">从开始 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ，属性获取操作可能返回缓存的值，而不是控制台的当前输入编码。</span><span class="sxs-lookup"><span data-stu-id="e92d0-399">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], a property get operation may return a cached value instead of the console's current input encoding.</span></span> <span data-ttu-id="e92d0-400">如果属性的值 <xref:System.Console.InputEncoding%2A> 由其他方法而不是对属性的赋值进行修改（ <xref:System.Console.InputEncoding%2A> 例如，调用 Windows `SetConsoleCP` 函数或使用 `chcp` PowerShell 脚本中的命令），则会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="e92d0-400">This can occur if the value of the <xref:System.Console.InputEncoding%2A> property is modified by some means other than an assignment to the <xref:System.Console.InputEncoding%2A> property, such as calling the Windows `SetConsoleCP` function or using the `chcp` command from a PowerShell script.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-401">集运算中的属性值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-401">The property value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-402">执行此操作期间出错。</span><span class="sxs-lookup"><span data-stu-id="e92d0-402">An error occurred during the execution of this operation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-403">你的应用程序没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-403">Your application does not have permission to perform this operation.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsErrorRedirected">
      <MemberSignature Language="C#" Value="public static bool IsErrorRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsErrorRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsErrorRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsErrorRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsErrorRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsErrorRedirected : bool" Usage="System.Console.IsErrorRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-404">获取指示错误输出流是否已经从标准错误流被再定位的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-404">Gets a value that indicates whether the error output stream has been redirected from the standard error stream.</span></span></summary>
        <value><span data-ttu-id="e92d0-405">如果重定向错误，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-405"><see langword="true" /> if error output is redirected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="IsInputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsInputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsInputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInputRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputRedirected : bool" Usage="System.Console.IsInputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-406">获取指示输入是否已从标准输入流中重定向的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-406">Gets a value that indicates whether input has been redirected from the standard input stream.</span></span></summary>
        <value><span data-ttu-id="e92d0-407">如果重定向输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-407"><see langword="true" /> if input is redirected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
        <altmember cref="M:System.Console.OpenStandardInput" />
      </Docs>
    </Member>
    <Member MemberName="IsOutputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsOutputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsOutputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsOutputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsOutputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsOutputRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutputRedirected : bool" Usage="System.Console.IsOutputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-408">获取指示输出是否已从标准输入流中重定向的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-408">Gets a value that indicates whether output has been redirected from the standard output stream.</span></span></summary>
        <value><span data-ttu-id="e92d0-409">如果重定向输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-409"><see langword="true" /> if output is redirected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="KeyAvailable">
      <MemberSignature Language="C#" Value="public static bool KeyAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Console.KeyAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KeyAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeyAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyAvailable : bool" Usage="System.Console.KeyAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-410">获取一个值，该值指示按键操作在输入流中是否可用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-410">Gets a value indicating whether a key press is available in the input stream.</span></span></summary>
        <value><span data-ttu-id="e92d0-411">如果按键操作可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-411"><see langword="true" /> if a key press is available; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-412">立即返回属性值;也就是说，在 <xref:System.Console.KeyAvailable%2A> 按键可用之前，属性不会阻止输入。</span><span class="sxs-lookup"><span data-stu-id="e92d0-412">The property value is returned immediately; that is, the <xref:System.Console.KeyAvailable%2A> property does not block input until a key press is available.</span></span>  
  
 <span data-ttu-id="e92d0-413">仅将 <xref:System.Console.KeyAvailable%2A> 属性与 <xref:System.Console.ReadKey%2A> 方法（而不是或方法）一起使用 <xref:System.Console.Read%2A> <xref:System.Console.ReadLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-413">Use the <xref:System.Console.KeyAvailable%2A> property in conjunction with only the <xref:System.Console.ReadKey%2A> method, not the <xref:System.Console.Read%2A> or <xref:System.Console.ReadLine%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-414">下面的示例演示如何使用 <xref:System.Console.KeyAvailable%2A> 属性创建一个在按下某个键之前运行的循环。</span><span class="sxs-lookup"><span data-stu-id="e92d0-414">The following example demonstrates how to use the <xref:System.Console.KeyAvailable%2A> property to create a loop that runs until a key is pressed.</span></span>  
  
 [!code-cpp[console.keyavailable#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.keyavailable/CPP/ka.cpp#1)]
 [!code-csharp[console.keyavailable#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.keyavailable/CS/ka.cs#1)]
 [!code-vb[console.keyavailable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.keyavailable/VB/ka.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-415">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-415">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e92d0-416">标准输入重定向到文件而不是键盘。</span><span class="sxs-lookup"><span data-stu-id="e92d0-416">Standard input is redirected to a file instead of the keyboard.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowHeight">
      <MemberSignature Language="C#" Value="public static int LargestWindowHeight { get; }" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowHeight As Integer" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowHeight { int get(); };" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.LargestWindowHeight : int" Usage="System.Console.LargestWindowHeight" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static int LargestWindowHeight { get; set; }" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LargestWindowHeight As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowHeight { int get(); void set(int value); };" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="F#" Value="member this.LargestWindowHeight : int with get, set" Usage="System.Console.LargestWindowHeight" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-417">根据当前字体和屏幕分辨率获取控制台窗口可能具有的最大行数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-417">Gets the largest possible number of console window rows, based on the current font and screen resolution.</span></span></summary>
        <value><span data-ttu-id="e92d0-418">控制台窗口可能具有的最大高度，以行为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-418">The height of the largest possible console window measured in rows.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowWidth">
      <MemberSignature Language="C#" Value="public static int LargestWindowWidth { get; }" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowWidth As Integer" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowWidth { int get(); };" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.LargestWindowWidth : int" Usage="System.Console.LargestWindowWidth" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static int LargestWindowWidth { get; set; }" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LargestWindowWidth As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowWidth { int get(); void set(int value); };" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="F#" Value="member this.LargestWindowWidth : int with get, set" Usage="System.Console.LargestWindowWidth" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-419">根据当前字体和屏幕分辨率获取控制台窗口可能具有的最大列数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-419">Gets the largest possible number of console window columns, based on the current font and screen resolution.</span></span></summary>
        <value><span data-ttu-id="e92d0-420">控制台窗口可能具有的最大宽度，以列为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-420">The width of the largest possible console window measured in columns.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveBufferArea">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92d0-421">将屏幕缓冲区的指定源区域复制到指定的目标区域。</span><span class="sxs-lookup"><span data-stu-id="e92d0-421">Copies a specified source area of the screen buffer to a specified destination area.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="F#" Value="static member MoveBufferArea : int * int * int * int * int * int -&gt; unit" Usage="System.Console.MoveBufferArea (sourceLeft, sourceTop, sourceWidth, sourceHeight, targetLeft, targetTop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTop" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceWidth" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceHeight" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetLeft" Type="System.Int32" Index="4" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetTop" Type="System.Int32" Index="5" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceLeft"><span data-ttu-id="e92d0-422">源区域最左边的列。</span><span class="sxs-lookup"><span data-stu-id="e92d0-422">The leftmost column of the source area.</span></span></param>
        <param name="sourceTop"><span data-ttu-id="e92d0-423">源区域最顶部的行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-423">The topmost row of the source area.</span></span></param>
        <param name="sourceWidth"><span data-ttu-id="e92d0-424">源区域中列的数目。</span><span class="sxs-lookup"><span data-stu-id="e92d0-424">The number of columns in the source area.</span></span></param>
        <param name="sourceHeight"><span data-ttu-id="e92d0-425">源区域中行的数目。</span><span class="sxs-lookup"><span data-stu-id="e92d0-425">The number of rows in the source area.</span></span></param>
        <param name="targetLeft"><span data-ttu-id="e92d0-426">目标区域最左边的列。</span><span class="sxs-lookup"><span data-stu-id="e92d0-426">The leftmost column of the destination area.</span></span></param>
        <param name="targetTop"><span data-ttu-id="e92d0-427">目标区域最顶部的行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-427">The topmost row of the destination area.</span></span></param>
        <summary><span data-ttu-id="e92d0-428">将屏幕缓冲区的指定源区域复制到指定的目标区域。</span><span class="sxs-lookup"><span data-stu-id="e92d0-428">Copies a specified source area of the screen buffer to a specified destination area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-429">如果 destination 和 source 参数指定的位置位于当前屏幕缓冲区的边界之外，则仅复制目标区域内容纳的源区域部分。</span><span class="sxs-lookup"><span data-stu-id="e92d0-429">If the destination and source parameters specify a position located outside the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</span></span> <span data-ttu-id="e92d0-430">也就是说，将剪裁源区域以适合当前屏幕缓冲区。</span><span class="sxs-lookup"><span data-stu-id="e92d0-430">That is, the source area is clipped to fit the current screen buffer.</span></span>  
  
 <span data-ttu-id="e92d0-431"><xref:System.Console.MoveBufferArea%2A>方法将源区域复制到目标区域。</span><span class="sxs-lookup"><span data-stu-id="e92d0-431">The <xref:System.Console.MoveBufferArea%2A> method copies the source area to the destination area.</span></span> <span data-ttu-id="e92d0-432">如果目标区域与源区域不相交，则使用当前前景色和背景色填充源区域的空白区域。</span><span class="sxs-lookup"><span data-stu-id="e92d0-432">If the destination area does not intersect the source area, the source area is filled with blanks using the current foreground and background colors.</span></span> <span data-ttu-id="e92d0-433">否则，不会填充源区域的相交部分。</span><span class="sxs-lookup"><span data-stu-id="e92d0-433">Otherwise, the intersected portion of the source area is not filled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-434">一个或多个参数小于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-434">One or more of the parameters is less than zero.</span></span>  
  
<span data-ttu-id="e92d0-435">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-435">-or-</span></span> 
 <span data-ttu-id="e92d0-436"><paramref name="sourceLeft" /> 或 <paramref name="targetLeft" /> 大于或等于 <see cref="P:System.Console.BufferWidth" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-436"><paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
<span data-ttu-id="e92d0-437">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-437">-or-</span></span> 
 <span data-ttu-id="e92d0-438"><paramref name="sourceTop" /> 或 <paramref name="targetTop" /> 大于或等于 <see cref="P:System.Console.BufferHeight" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-438"><paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
<span data-ttu-id="e92d0-439">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-439">-or-</span></span> 
 <span data-ttu-id="e92d0-440"><paramref name="sourceTop" /> + <paramref name="sourceHeight" /> 大于或等于 <see cref="P:System.Console.BufferHeight" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-440"><paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
<span data-ttu-id="e92d0-441">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-441">-or-</span></span> 
 <span data-ttu-id="e92d0-442"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> 大于或等于 <see cref="P:System.Console.BufferWidth" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-442"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-443">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-443">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-444">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-444">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-445">当前操作系统不是 Windows。</span><span class="sxs-lookup"><span data-stu-id="e92d0-445">The current operating system is not Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop, char sourceChar, valuetype System.ConsoleColor sourceForeColor, valuetype System.ConsoleColor sourceBackColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer, sourceChar As Char, sourceForeColor As ConsoleColor, sourceBackColor As ConsoleColor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="F#" Value="static member MoveBufferArea : int * int * int * int * int * int * char * ConsoleColor * ConsoleColor -&gt; unit" Usage="System.Console.MoveBufferArea (sourceLeft, sourceTop, sourceWidth, sourceHeight, targetLeft, targetTop, sourceChar, sourceForeColor, sourceBackColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTop" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceWidth" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceHeight" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetLeft" Type="System.Int32" Index="4" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetTop" Type="System.Int32" Index="5" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceChar" Type="System.Char" Index="6" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceForeColor" Type="System.ConsoleColor" Index="7" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceBackColor" Type="System.ConsoleColor" Index="8" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceLeft"><span data-ttu-id="e92d0-446">源区域最左边的列。</span><span class="sxs-lookup"><span data-stu-id="e92d0-446">The leftmost column of the source area.</span></span></param>
        <param name="sourceTop"><span data-ttu-id="e92d0-447">源区域最顶部的行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-447">The topmost row of the source area.</span></span></param>
        <param name="sourceWidth"><span data-ttu-id="e92d0-448">源区域中列的数目。</span><span class="sxs-lookup"><span data-stu-id="e92d0-448">The number of columns in the source area.</span></span></param>
        <param name="sourceHeight"><span data-ttu-id="e92d0-449">源区域中行的数目。</span><span class="sxs-lookup"><span data-stu-id="e92d0-449">The number of rows in the source area.</span></span></param>
        <param name="targetLeft"><span data-ttu-id="e92d0-450">目标区域最左边的列。</span><span class="sxs-lookup"><span data-stu-id="e92d0-450">The leftmost column of the destination area.</span></span></param>
        <param name="targetTop"><span data-ttu-id="e92d0-451">目标区域最顶部的行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-451">The topmost row of the destination area.</span></span></param>
        <param name="sourceChar"><span data-ttu-id="e92d0-452">用于填充源区域的字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-452">The character used to fill the source area.</span></span></param>
        <param name="sourceForeColor"><span data-ttu-id="e92d0-453">用于填充源区域的前景色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-453">The foreground color used to fill the source area.</span></span></param>
        <param name="sourceBackColor"><span data-ttu-id="e92d0-454">用于填充源区域的背景色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-454">The background color used to fill the source area.</span></span></param>
        <summary><span data-ttu-id="e92d0-455">将屏幕缓冲区的指定源区域复制到指定的目标区域。</span><span class="sxs-lookup"><span data-stu-id="e92d0-455">Copies a specified source area of the screen buffer to a specified destination area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-456">如果 destination 参数和 source 参数指定的位置超出了当前屏幕缓冲区的边界，则仅复制目标区域内容纳的源区域部分。</span><span class="sxs-lookup"><span data-stu-id="e92d0-456">If the destination and source parameters specify a position located beyond the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</span></span> <span data-ttu-id="e92d0-457">也就是说，将剪裁源区域以适合当前屏幕缓冲区。</span><span class="sxs-lookup"><span data-stu-id="e92d0-457">That is, the source area is clipped to fit the current screen buffer.</span></span>  
  
 <span data-ttu-id="e92d0-458"><xref:System.Console.MoveBufferArea%2A>方法将源区域复制到目标区域。</span><span class="sxs-lookup"><span data-stu-id="e92d0-458">The <xref:System.Console.MoveBufferArea%2A> method copies the source area to the destination area.</span></span> <span data-ttu-id="e92d0-459">如果目标区域与源区域不相交，则使用和指定的颜色填充源区域，其中包含由指定的字符 `sourceChar` `sourceForeColor` `sourceBackColor` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-459">If the destination area does not intersect the source area, the source area is filled with the character specified by `sourceChar`, using the colors specified by `sourceForeColor` and `sourceBackColor`.</span></span> <span data-ttu-id="e92d0-460">否则，不会填充源区域的相交部分。</span><span class="sxs-lookup"><span data-stu-id="e92d0-460">Otherwise, the intersected portion of the source area is not filled.</span></span>  
  
 <span data-ttu-id="e92d0-461"><xref:System.Console.MoveBufferArea%2A>如果 `sourceWidth` 或为零，则此方法不执行任何操作 `sourceHeight` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-461">The <xref:System.Console.MoveBufferArea%2A> method performs no operation if `sourceWidth` or `sourceHeight` is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-462">一个或多个参数小于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-462">One or more of the parameters is less than zero.</span></span>  
  
<span data-ttu-id="e92d0-463">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-463">-or-</span></span> 
 <span data-ttu-id="e92d0-464"><paramref name="sourceLeft" /> 或 <paramref name="targetLeft" /> 大于或等于 <see cref="P:System.Console.BufferWidth" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-464"><paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
<span data-ttu-id="e92d0-465">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-465">-or-</span></span> 
 <span data-ttu-id="e92d0-466"><paramref name="sourceTop" /> 或 <paramref name="targetTop" /> 大于或等于 <see cref="P:System.Console.BufferHeight" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-466"><paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
<span data-ttu-id="e92d0-467">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-467">-or-</span></span> 
 <span data-ttu-id="e92d0-468"><paramref name="sourceTop" /> + <paramref name="sourceHeight" /> 大于或等于 <see cref="P:System.Console.BufferHeight" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-468"><paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span>  
  
<span data-ttu-id="e92d0-469">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-469">-or-</span></span> 
 <span data-ttu-id="e92d0-470"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> 大于或等于 <see cref="P:System.Console.BufferWidth" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-470"><paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92d0-471">一个或两个颜色参数不是 <see cref="T:System.ConsoleColor" /> 枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="e92d0-471">One or both of the color parameters is not a member of the <see cref="T:System.ConsoleColor" /> enumeration.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-472">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-472">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-473">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-473">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-474">当前操作系统不是 Windows。</span><span class="sxs-lookup"><span data-stu-id="e92d0-474">The current operating system is not Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NumberLock">
      <MemberSignature Language="C#" Value="public static bool NumberLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool NumberLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.NumberLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NumberLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool NumberLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberLock : bool" Usage="System.Console.NumberLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-475">获取一个值，该值指示 Num Lock 键盘切换键是打开的还是关闭的。</span><span class="sxs-lookup"><span data-stu-id="e92d0-475">Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.</span></span></summary>
        <value><span data-ttu-id="e92d0-476">如果 Num Lock 是打开的，则为 <see langword="true" />；如果 Num Lock 是关闭的，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-476"><see langword="true" /> if NUM LOCK is turned on; <see langword="false" /> if NUM LOCK is turned off.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-477">get 操作在 Windows 之外的操作系统上调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-477">The get operation is invoked on an operating system other than Windows.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardError">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92d0-478">获取标准错误流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-478">Acquires the standard error stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError();" />
      <MemberSignature Language="F#" Value="static member OpenStandardError : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92d0-479">获取标准错误流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-479">Acquires the standard error stream.</span></span></summary>
        <returns><span data-ttu-id="e92d0-480">标准错误流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-480">The standard error stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-481">此方法可用于在方法更改标准错误流后重新获取该流 <xref:System.Console.SetError%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-481">This method can be used to reacquire the standard error stream after it has been changed by the <xref:System.Console.SetError%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-482">下面的示例是一个简单的文本文件查看器，可在控制台中显示一个或多个文本文件的内容。</span><span class="sxs-lookup"><span data-stu-id="e92d0-482">The following example is a simple text file viewer that displays the contents of one or more text files to the console.</span></span> <span data-ttu-id="e92d0-483">如果没有命令行参数，或者作为命令行参数传递的任何文件都不存在，则此示例将调用 <xref:System.Console.SetError%2A> 方法将错误信息重定向到文件， <xref:System.Console.OpenStandardError%2A> 在 reacquiring 标准错误流的过程中调用方法，并指示错误信息已写入文件。</span><span class="sxs-lookup"><span data-stu-id="e92d0-483">If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</span></span>  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 <span data-ttu-id="e92d0-484">请注意，在 <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> `true` reacquiring 错误流之前，属性设置为。</span><span class="sxs-lookup"><span data-stu-id="e92d0-484">Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property is set to `true` before reacquiring the error stream.</span></span> <span data-ttu-id="e92d0-485">这可确保将输出立即发送到控制台，而不是进行缓冲处理。</span><span class="sxs-lookup"><span data-stu-id="e92d0-485">This ensures that output will be sent to the console immediately rather than buffered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardError : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardError bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bufferSize"><span data-ttu-id="e92d0-486">内部流缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="e92d0-486">The internal stream buffer size.</span></span></param>
        <summary><span data-ttu-id="e92d0-487">获取设置为指定缓冲区大小的标准错误流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-487">Acquires the standard error stream, which is set to a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="e92d0-488">标准错误流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-488">The standard error stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-489">此方法可用于在方法更改标准错误流后重新获取该流 <xref:System.Console.SetError%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-489">This method can be used to reacquire the standard error stream after it has been changed by the <xref:System.Console.SetError%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-490"><paramref name="bufferSize" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-490"><paramref name="bufferSize" /> is less than or equal to zero.</span></span></exception>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardInput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92d0-491">获取标准输入流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-491">Acquires the standard input stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput();" />
      <MemberSignature Language="F#" Value="static member OpenStandardInput : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92d0-492">获取标准输入流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-492">Acquires the standard input stream.</span></span></summary>
        <returns><span data-ttu-id="e92d0-493">标准输入流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-493">The standard input stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e92d0-494">此方法可用于在方法更改标准输入流后重新获取标准输入流 <xref:System.Console.SetIn%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-494">This method can be used to reacquire the standard input stream after it has been changed by the <xref:System.Console.SetIn%2A> method.</span></span>  

## Examples  

<span data-ttu-id="e92d0-495">下面的示例演示 `OpenStandardInput` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-495">The following example illustrates the use of the `OpenStandardInput` method.</span></span>  
  
[!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
[!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
[!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardInput : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardInput bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bufferSize"><span data-ttu-id="e92d0-496">内部流缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="e92d0-496">The internal stream buffer size.</span></span></param>
        <summary><span data-ttu-id="e92d0-497">获取设置为指定缓冲区大小的标准输入流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-497">Acquires the standard input stream, which is set to a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="e92d0-498">标准输入流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-498">The standard input stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e92d0-499">此方法可用于在方法更改标准输出流后重新获取标准输出流 <xref:System.Console.SetIn%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-499">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetIn%2A> method.</span></span>  
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-500"><paramref name="bufferSize" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-500"><paramref name="bufferSize" /> is less than or equal to zero.</span></span></exception>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardOutput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92d0-501">获取标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-501">Acquires the standard output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput();" />
      <MemberSignature Language="F#" Value="static member OpenStandardOutput : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92d0-502">获取标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-502">Acquires the standard output stream.</span></span></summary>
        <returns><span data-ttu-id="e92d0-503">标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-503">The standard output stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-504">此方法可用于在方法更改标准输出流后重新获取标准输出流 <xref:System.Console.SetOut%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-504">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetOut%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-505">下面的示例演示 <xref:System.Console.OpenStandardOutput%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-505">The following example illustrates the use of the <xref:System.Console.OpenStandardOutput%2A> method.</span></span> <span data-ttu-id="e92d0-506">它用制表符替换字符串中的四个连续空格字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-506">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="e92d0-507">若要运行此命令，必须提供两个命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-507">To run it, you must supply two command-line arguments.</span></span> <span data-ttu-id="e92d0-508">第一个是要将标准输入流重定向到的现有文本文件的名称。</span><span class="sxs-lookup"><span data-stu-id="e92d0-508">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="e92d0-509">第二个是要将标准输出流重定向到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="e92d0-509">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="e92d0-510">此文件不需要存在。</span><span class="sxs-lookup"><span data-stu-id="e92d0-510">This file need not exist.</span></span> <span data-ttu-id="e92d0-511">如果它这么做，其内容将被覆盖。</span><span class="sxs-lookup"><span data-stu-id="e92d0-511">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardOutput : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardOutput bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bufferSize"><span data-ttu-id="e92d0-512">内部流缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="e92d0-512">The internal stream buffer size.</span></span></param>
        <summary><span data-ttu-id="e92d0-513">获取设置为指定缓冲区大小的标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-513">Acquires the standard output stream, which is set to a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="e92d0-514">标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-514">The standard output stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-515">此方法可用于在方法更改标准输出流后重新获取标准输出流 <xref:System.Console.SetOut%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-515">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetOut%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-516">下面的示例演示 <xref:System.Console.OpenStandardOutput%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-516">The following example illustrates the use of the <xref:System.Console.OpenStandardOutput%2A> method.</span></span> <span data-ttu-id="e92d0-517">它用制表符替换字符串中的四个连续空格字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-517">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="e92d0-518">若要运行此命令，必须提供两个命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-518">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="e92d0-519">第一个是要将标准输入流重定向到的现有文本文件的名称。</span><span class="sxs-lookup"><span data-stu-id="e92d0-519">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="e92d0-520">第二个是要将标准输出流重定向到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="e92d0-520">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="e92d0-521">此文件不需要存在。</span><span class="sxs-lookup"><span data-stu-id="e92d0-521">This file need not exist.</span></span> <span data-ttu-id="e92d0-522">如果它这么做，其内容将被覆盖。</span><span class="sxs-lookup"><span data-stu-id="e92d0-522">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-523"><paramref name="bufferSize" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-523"><paramref name="bufferSize" /> is less than or equal to zero.</span></span></exception>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Out">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Out { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Out" />
      <MemberSignature Language="DocId" Value="P:System.Console.Out" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Out As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Out { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Out : System.IO.TextWriter" Usage="System.Console.Out" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-524">获取标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-524">Gets the standard output stream.</span></span></summary>
        <value><span data-ttu-id="e92d0-525">表示标准输出流的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-525">A <see cref="T:System.IO.TextWriter" /> that represents the standard output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-526">默认情况下，此属性设置为标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-526">This property is set to the standard output stream by default.</span></span> <span data-ttu-id="e92d0-527">此属性可以通过方法设置为另一个流 <xref:System.Console.SetOut%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-527">This property can be set to another stream with the <xref:System.Console.SetOut%2A> method.</span></span>  
  
 <span data-ttu-id="e92d0-528">请注意，调用 `Console.Out.WriteLine` 方法等效于对相应方法的调用 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-528">Note that calls to `Console.Out.WriteLine` methods are equivalent to calls to the corresponding <xref:System.Console.WriteLine%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-529">下面的示例使用 <xref:System.Console.Out%2A> 属性将包含应用程序当前目录中的文件名称的数组显示到标准输出设备。</span><span class="sxs-lookup"><span data-stu-id="e92d0-529">The following example uses the <xref:System.Console.Out%2A> property to display an array containing the names of files in the application's current directory to the standard output device.</span></span> <span data-ttu-id="e92d0-530">然后，它将标准输出设置为名为 Files.txt 的文件，并列出该文件的数组元素。</span><span class="sxs-lookup"><span data-stu-id="e92d0-530">It then sets the standard output to a file named Files.txt and lists the array elements to the file.</span></span> <span data-ttu-id="e92d0-531">最后，它将输出设置为标准输出流，并再次将数组元素显示到标准输出设备。</span><span class="sxs-lookup"><span data-stu-id="e92d0-531">Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.</span></span>  
  
 [!code-csharp[System.Console.Out#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.out/cs/out1.cs#1)]
 [!code-vb[System.Console.Out#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.out/vb/out1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OutputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding OutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding OutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.OutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ OutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputEncoding : System.Text.Encoding with get, set" Usage="System.Console.OutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-532">获取或设置控制台用于写入输出的编码。</span><span class="sxs-lookup"><span data-stu-id="e92d0-532">Gets or sets the encoding the console uses to write output.</span></span></summary>
        <value><span data-ttu-id="e92d0-533">用于写入控制台输出的编码。</span><span class="sxs-lookup"><span data-stu-id="e92d0-533">The encoding used to write console output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-534">控制台使用输出编码将应用程序编写的字符转换为相应的控制台显示字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-534">The console uses the output encoding to translate characters written by an application into corresponding console display characters.</span></span> <span data-ttu-id="e92d0-535">控制台使用的默认代码页由系统区域设置决定。</span><span class="sxs-lookup"><span data-stu-id="e92d0-535">The default code page that the console uses is determined by the system locale.</span></span>  
  
 <span data-ttu-id="e92d0-536">从开始 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ，属性获取操作可能返回缓存值，而不是控制台的当前输出编码。</span><span class="sxs-lookup"><span data-stu-id="e92d0-536">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], a property get operation may return a cached value instead of the console's current output encoding.</span></span> <span data-ttu-id="e92d0-537">如果属性的值 <xref:System.Console.OutputEncoding%2A> 由其他方法（而不是对属性的赋值 <xref:System.Console.OutputEncoding%2A> ）修改，例如调用 Windows 函数，则可能会发生这种情况 `SetConsoleOutputCP` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-537">This can occur if the value of the <xref:System.Console.OutputEncoding%2A> property is modified by some means other than an assignment to the <xref:System.Console.OutputEncoding%2A> property, such as calling the Windows `SetConsoleOutputCP` function.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-538">集运算中的属性值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-538">The property value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-539">执行此操作期间出错。</span><span class="sxs-lookup"><span data-stu-id="e92d0-539">An error occurred during the execution of this operation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-540">你的应用程序没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-540">Your application does not have permission to perform this operation.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e92d0-541">在 Unicode 编码中， <see cref="T:System.Console" /> 类支持对类进行 utf-8 编码， <see cref="T:System.Text.UTF8Encoding" /> 从开始 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] ，它支持具有类的 utf-16 编码 <see cref="T:System.Text.UnicodeEncoding" /> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-541">Of the Unicode encodings, the <see cref="T:System.Console" /> class supports UTF-8 encoding with the <see cref="T:System.Text.UTF8Encoding" /> class and, starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it supports UTF-16 encoding with the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span> <span data-ttu-id="e92d0-542">不支持具有类的 UTF-32 编码 <see cref="T:System.Text.UTF32Encoding" /> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-542">UTF-32 encoding with the <see cref="T:System.Text.UTF32Encoding" /> class is not supported.</span></span> <span data-ttu-id="e92d0-543">尝试将输出编码设置为 32 UTF-8 会引发 <see cref="T:System.IO.IOException" /> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-543">Attempting to set the output encoding to UTF-32 throws an <see cref="T:System.IO.IOException" />.</span></span>  
  
<span data-ttu-id="e92d0-544">请注意，将 Unicode 字符成功地显示到控制台需要以下各项：</span><span class="sxs-lookup"><span data-stu-id="e92d0-544">Note that successfully displaying Unicode characters to the console requires the following:</span></span> 
<span data-ttu-id="e92d0-545">-控制台必须使用 TrueType 字体（如宋体或 Consolas）来显示字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-545">-   The console must use a TrueType font, such as Lucida Console or Consolas, to display characters.</span></span>  
  
<span data-ttu-id="e92d0-546">-控制台使用的字体必须定义要显示的特定标志符号或字形。</span><span class="sxs-lookup"><span data-stu-id="e92d0-546">-   A font used by the console must define the particular glyph or glyphs to be displayed.</span></span> <span data-ttu-id="e92d0-547">如果基本字体不包含该标志符号的定义，则控制台可以利用字体链接来显示链接字体中的字形。</span><span class="sxs-lookup"><span data-stu-id="e92d0-547">The console can take advantage of font linking to display glyphs from linked fonts if the base font does not contain a definition for that glyph.</span></span>  
  
<span data-ttu-id="e92d0-548">有关控制台支持 Unicode 编码的详细信息，请参阅类中的 "为控制台提供 Unicode 支持" 部分 <see cref="T:System.Console" /> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-548">For more information about support for Unicode encoding by the console, see the "Unicode Support for the Console" section in the <see cref="T:System.Console" /> class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Read" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Read();" />
      <MemberSignature Language="F#" Value="static member Read : unit -&gt; int" Usage="System.Console.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92d0-549">从标准输入流读取下一个字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-549">Reads the next character from the standard input stream.</span></span></summary>
        <returns><span data-ttu-id="e92d0-550">输入流中的下一个字符；如果当前没有更多的字符可供读取，则为负一 (-1)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-550">The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-551">当 <xref:System.Console.Read%2A> 你键入输入字符时，方法会阻止其返回; 当你按下键时，该方法将终止 <xref:System.ConsoleKey.Enter> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-551">The <xref:System.Console.Read%2A> method blocks its return while you type input characters; it terminates when you press the <xref:System.ConsoleKey.Enter> key.</span></span> <span data-ttu-id="e92d0-552">按 Enter 会将与平台相关的行终止序列附加到输入 (例如，Windows 会将回车换行符序列附加) 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-552">Pressing Enter appends a platform-dependent line termination sequence to your input (for example, Windows appends a carriage return-linefeed sequence).</span></span> <span data-ttu-id="e92d0-553">对方法的后续调用 <xref:System.Console.Read%2A> 每次检索一次输入一个字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-553">Subsequent calls to the <xref:System.Console.Read%2A> method retrieve your input one character at a time.</span></span> <span data-ttu-id="e92d0-554">检索最后一个字符后，将 <xref:System.Console.Read%2A> 再次阻止其返回，并重复周期。</span><span class="sxs-lookup"><span data-stu-id="e92d0-554">After the final character is retrieved, <xref:System.Console.Read%2A> blocks its return again and the cycle repeats.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e92d0-555"><xref:System.Console.ReadLine%2A>方法，或者 <xref:System.Console.KeyAvailable%2A> 属性和 <xref:System.Console.ReadKey%2A> 方法比使用方法更可取 <xref:System.Console.Read%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-555">The <xref:System.Console.ReadLine%2A> method, or the <xref:System.Console.KeyAvailable%2A> property and <xref:System.Console.ReadKey%2A> method are preferable to using the <xref:System.Console.Read%2A> method.</span></span>  
  
 <span data-ttu-id="e92d0-556">请注意，除非您执行下列操作之一，否则方法不会返回-1：</span><span class="sxs-lookup"><span data-stu-id="e92d0-556">Note that the method does not return -1 unless you perform one of the following actions:</span></span>  
  
-   <span data-ttu-id="e92d0-557">同时按下 <xref:System.ConsoleModifiers.Control> 修改键和 <xref:System.ConsoleKey.Z> 控制台键 (Ctrl + Z) ，这将指示文件尾条件。</span><span class="sxs-lookup"><span data-stu-id="e92d0-557">Simultaneously press the <xref:System.ConsoleModifiers.Control> modifier key and <xref:System.ConsoleKey.Z> console key (Ctrl+Z), which signals the end-of-file condition.</span></span>  
  
-   <span data-ttu-id="e92d0-558">按指示文件尾条件的等效键，例如 Windows 中的 F6 函数键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-558">Press an equivalent key that signals the end-of-file condition, such as the F6 function key in Windows.</span></span>  
  
-   <span data-ttu-id="e92d0-559">将输入流重定向到具有实际文件尾字符的源（如文本文件）。</span><span class="sxs-lookup"><span data-stu-id="e92d0-559">Redirect the input stream to a source, such as a text file, that has an actual end-of-file character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-560">下面的示例演示 <xref:System.Console.Read%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-560">The following example demonstrates the <xref:System.Console.Read%2A> method.</span></span>  
  
 [!code-cpp[console.read#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.read/CPP/read.cpp#1)]
 [!code-csharp[console.read#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.read/CS/read.cs#1)]
 [!code-vb[console.read#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.read/VB/read.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-561">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-561">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadKey">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92d0-562">获取用户按下的下一个字符或功能键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-562">Obtains the next character or function key pressed by the user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey () As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey();" />
      <MemberSignature Language="F#" Value="static member ReadKey : unit -&gt; ConsoleKeyInfo" Usage="System.Console.ReadKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92d0-563">获取用户按下的下一个字符或功能键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-563">Obtains the next character or function key pressed by the user.</span></span> <span data-ttu-id="e92d0-564">按下的键显示在控制台窗口中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-564">The pressed key is displayed in the console window.</span></span></summary>
        <returns><span data-ttu-id="e92d0-565">一个对象，描述 <see cref="T:System.ConsoleKey" /> 常数和对应于按下的控制台键的 Unicode 字符（如果存在这样的字符）。</span><span class="sxs-lookup"><span data-stu-id="e92d0-565">An object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key.</span></span> <span data-ttu-id="e92d0-566"><see cref="T:System.ConsoleKeyInfo" /> 对象还在 <see cref="T:System.ConsoleModifiers" /> 值的按位组合中描述是否在按下控制台键的同时按下了一个或多个 Shift、Alt 和 Ctrl 修改键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-566">The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-567"><xref:System.Console.ReadKey%2A>方法将等待，即在发出方法的线程上进行阻止 <xref:System.Console.ReadKey%2A> ，直到按下某个字符或功能键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-567">The <xref:System.Console.ReadKey%2A> method waits, that is, blocks on the thread issuing the <xref:System.Console.ReadKey%2A> method, until a character or function key is pressed.</span></span> <span data-ttu-id="e92d0-568">可以将一个或多个 Alt、Ctrl 或 Shift 修改键与一个字符或功能键结合使用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-568">A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</span></span> <span data-ttu-id="e92d0-569">但是，按一个修改键本身将不会导致该 <xref:System.Console.ReadKey%2A> 方法返回。</span><span class="sxs-lookup"><span data-stu-id="e92d0-569">However, pressing a modifier key by itself will not cause the <xref:System.Console.ReadKey%2A> method to return.</span></span>  
  
 <span data-ttu-id="e92d0-570">根据你的应用程序，你可能想要将 <xref:System.Console.ReadKey%2A> 方法与属性结合使用 <xref:System.Console.KeyAvailable%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-570">Depending on your application, you might want to use the <xref:System.Console.ReadKey%2A> method in conjunction with the <xref:System.Console.KeyAvailable%2A> property.</span></span>  
  
 <span data-ttu-id="e92d0-571"><xref:System.Console.ReadKey%2A>即使使用方法将标准输入重定向到文件，该方法也会从键盘读取 <xref:System.Console.SetIn%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-571">The <xref:System.Console.ReadKey%2A> method reads from the keyboard even if the standard input is redirected to a file with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-572">方法的最常见用途之一 <xref:System.Console.ReadKey> 是在用户按下某个键时暂停程序执行，然后应用终止或显示其他信息窗口。</span><span class="sxs-lookup"><span data-stu-id="e92d0-572">One of the most common uses of the <xref:System.Console.ReadKey> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</span></span> <span data-ttu-id="e92d0-573">下面的示例使用  <xref:System.Console.ReadKey> 方法在终止应用之前等待用户按 enter 键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-573">The following example uses the  <xref:System.Console.ReadKey> method to wait for the user to press the Enter key before terminating the app.</span></span>  
  
 [!code-csharp[System.Console.ReadKey#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey1.cs#1)]
 [!code-vb[System.Console.ReadKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey1.vb#1)]  
  
 <span data-ttu-id="e92d0-574">请注意，默认情况下，此 <xref:System.Console.ReadKey%2A> 方法重载会回显用户在控制台上按下的所有可显示键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-574">Note that this overload of the <xref:System.Console.ReadKey%2A> method by default echoes any displayable keys that the user presses to the console.</span></span> <span data-ttu-id="e92d0-575">若要取消它们，请  <xref:System.Console.ReadKey%2A> 使用参数调用方法 `intercept` `true` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-575">To suppress them, call the  <xref:System.Console.ReadKey%2A> method with an `intercept` argument of `true`.</span></span>  
  
 <span data-ttu-id="e92d0-576">下面的示例使用 <xref:System.Console.ReadKey> 方法显示有关用户按下的键的信息。</span><span class="sxs-lookup"><span data-stu-id="e92d0-576">The following example uses the <xref:System.Console.ReadKey> method to display information about which key the user pressed.</span></span> 
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e92d0-577">从控制台以外的某个流重定向 <see cref="P:System.Console.In" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-577">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</span></span></exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey (bool intercept);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey(bool intercept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey (intercept As Boolean) As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey(bool intercept);" />
      <MemberSignature Language="F#" Value="static member ReadKey : bool -&gt; ConsoleKeyInfo" Usage="System.Console.ReadKey intercept" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intercept" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="intercept"><span data-ttu-id="e92d0-578">确定是否在控制台窗口中显示按下的键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-578">Determines whether to display the pressed key in the console window.</span></span> <span data-ttu-id="e92d0-579">如果为 <see langword="true" />，则不显示按下的键；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-579"><see langword="true" /> to not display the pressed key; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-580">获取用户按下的下一个字符或功能键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-580">Obtains the next character or function key pressed by the user.</span></span> <span data-ttu-id="e92d0-581">按下的键可以选择显示在控制台窗口中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-581">The pressed key is optionally displayed in the console window.</span></span></summary>
        <returns><span data-ttu-id="e92d0-582">一个对象，描述 <see cref="T:System.ConsoleKey" /> 常数和对应于按下的控制台键的 Unicode 字符（如果存在这样的字符）。</span><span class="sxs-lookup"><span data-stu-id="e92d0-582">An object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key.</span></span> <span data-ttu-id="e92d0-583"><see cref="T:System.ConsoleKeyInfo" /> 对象还在 <see cref="T:System.ConsoleModifiers" /> 值的按位组合中描述是否在按下控制台键的同时按下了一个或多个 Shift、Alt 和 Ctrl 修改键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-583">The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-584"><xref:System.Console.ReadKey%2A>方法将等待，即在发出方法的线程上进行阻止 <xref:System.Console.ReadKey%2A> ，直到按下某个字符或功能键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-584">The <xref:System.Console.ReadKey%2A> method waits, that is, blocks on the thread issuing the <xref:System.Console.ReadKey%2A> method, until a character or function key is pressed.</span></span> <span data-ttu-id="e92d0-585">可以将一个或多个 Alt、Ctrl 或 Shift 修改键与一个字符或功能键结合使用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-585">A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</span></span> <span data-ttu-id="e92d0-586">但是，按一个修改键本身将不会导致该 <xref:System.Console.ReadKey%2A> 方法返回。</span><span class="sxs-lookup"><span data-stu-id="e92d0-586">However, pressing a modifier key by itself will not cause the <xref:System.Console.ReadKey%2A> method to return.</span></span>  
  
 <span data-ttu-id="e92d0-587">如果 `intercept` 参数为 `true` ，则会截获按下的键; 否则，会显示按下的键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-587">If the `intercept` parameter is `true`, the pressed key is intercepted and not displayed in the console window; otherwise, the pressed key is displayed.</span></span>  
  
 <span data-ttu-id="e92d0-588">根据你的应用程序，你可能想要将 <xref:System.Console.ReadKey%2A> 方法与属性结合使用 <xref:System.Console.KeyAvailable%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-588">Depending on your application, you might want to use the <xref:System.Console.ReadKey%2A> method in conjunction with the <xref:System.Console.KeyAvailable%2A> property.</span></span>  
  
 <span data-ttu-id="e92d0-589"><xref:System.Console.ReadKey%2A>即使使用方法将标准输入重定向到文件，该方法也会从键盘读取 <xref:System.Console.SetIn%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-589">The <xref:System.Console.ReadKey%2A> method reads from the keyboard even if the standard input is redirected to a file with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-590">方法的最常见用途之一 <xref:System.Console.ReadKey%2A> 是在用户按下某个键时暂停程序执行，然后应用终止或显示其他信息窗口。</span><span class="sxs-lookup"><span data-stu-id="e92d0-590">One of the most common uses of the <xref:System.Console.ReadKey%2A> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</span></span> <span data-ttu-id="e92d0-591">下面的示例使用  <xref:System.Console.ReadKey%28System.Boolean%29> 方法在终止应用之前等待用户按 enter 键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-591">The following example uses the  <xref:System.Console.ReadKey%28System.Boolean%29> method to wait for the user to press the Enter key before terminating the app.</span></span> <span data-ttu-id="e92d0-592">请注意，如果用户按下任何其他键，则不会回显到控制台。</span><span class="sxs-lookup"><span data-stu-id="e92d0-592">Note that, if the user presses any other key, it is not echoed to the console.</span></span>  
  
 [!code-csharp[System.Console.ReadKey#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey2.cs#2)]
 [!code-vb[System.Console.ReadKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey2.vb#2)]  
  
 <span data-ttu-id="e92d0-593">下面的示例使用 <xref:System.Console.ReadKey%28System.Boolean%29> 方法来显示用户按下的键的相关信息，而无需将该密钥回显到控制台。</span><span class="sxs-lookup"><span data-stu-id="e92d0-593">The following example uses the <xref:System.Console.ReadKey%28System.Boolean%29> method to display information about the key pressed by a user without echoing that key to the console.</span></span>  
  
 [!code-cpp[console.readkey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey2/CPP/rkbool.cpp#1)]
 [!code-csharp[console.readkey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey2/CS/rkbool.cs#1)]
 [!code-vb[console.readkey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey2/VB/rkbool.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e92d0-594">从控制台以外的某个流重定向 <see cref="P:System.Console.In" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-594">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</span></span></exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public static string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="static member ReadLine : unit -&gt; string" Usage="System.Console.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92d0-595">从标准输入流读取下一行字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-595">Reads the next line of characters from the standard input stream.</span></span></summary>
        <returns><span data-ttu-id="e92d0-596">输入流中的下一行字符；如果没有更多的可用行，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-596">The next line of characters from the input stream, or <see langword="null" /> if no more lines are available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-597"><xref:System.Console.ReadLine%2A>方法从标准输入流中读取一行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-597">The <xref:System.Console.ReadLine%2A> method reads a line from the standard input stream.</span></span> <span data-ttu-id="e92d0-598"> (为行的定义，请参阅下面列表后面的段落。 ) 这意味着：</span><span class="sxs-lookup"><span data-stu-id="e92d0-598">(For the definition of a line, see the paragraph after the following list.) This means that:</span></span>  
  
-   <span data-ttu-id="e92d0-599">如果标准输入设备是键盘，则方法会 <xref:System.Console.ReadLine%2A> 一直阻止，直到用户按下 **enter** 键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-599">If the standard input device is the keyboard, the <xref:System.Console.ReadLine%2A> method blocks until the user presses the **Enter** key.</span></span>  
  
     <span data-ttu-id="e92d0-600">方法的最常见用途之一 <xref:System.Console.ReadLine%2A> 是在清除控制台和向其显示新信息之前暂停程序执行，或者在终止应用程序之前提示用户按 enter 键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-600">One of the most common uses of the <xref:System.Console.ReadLine%2A> method is to pause program execution before clearing the console and displaying new information to it, or to prompt the user to press the Enter key before terminating the application.</span></span> <span data-ttu-id="e92d0-601">下面的示例对此进行了演示。</span><span class="sxs-lookup"><span data-stu-id="e92d0-601">The following example illustrates this.</span></span>  
  
     [!code-cpp[System.Console.ReadLine#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/ReadLineSimple.cpp#6)]
     [!code-csharp[System.Console.ReadLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLineSimple.cs#6)]
     [!code-vb[System.Console.ReadLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLineSimple.vb#6)]  
  
-   <span data-ttu-id="e92d0-602">如果标准输入重定向到文件，则 <xref:System.Console.ReadLine%2A> 方法会从文件中读取一行文本。</span><span class="sxs-lookup"><span data-stu-id="e92d0-602">If standard input is redirected to a file, the <xref:System.Console.ReadLine%2A> method reads a line of text from a file.</span></span> <span data-ttu-id="e92d0-603">例如，下面是一个名为 ReadLine1.txt 的文本文件：</span><span class="sxs-lookup"><span data-stu-id="e92d0-603">For example, the following is a text file named ReadLine1.txt:</span></span>  
  
    ```  
  
    This is the first line.  
    This is the second line.  
    This is the third line.  
    This is the fourth line.  
  
    ```  
  
     <span data-ttu-id="e92d0-604">下面的示例使用 <xref:System.Console.ReadLine%2A> 方法读取从文件重定向的输入。</span><span class="sxs-lookup"><span data-stu-id="e92d0-604">The following example uses the <xref:System.Console.ReadLine%2A> method to read input that is redirected from a file.</span></span> <span data-ttu-id="e92d0-605">当该方法返回时，读取操作将终止 `null` ，这表示不保留要读取的行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-605">The read operation terminates when the  method returns `null`, which indicates that no lines remain to be read.</span></span>  
  
     [!code-csharp[System.Console.ReadLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine3.cs#3)]
     [!code-vb[System.Console.ReadLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine3.vb#3)]  
  
     <span data-ttu-id="e92d0-606">将示例编译为名为 ReadLine1.exe 的可执行文件后，可以从命令行使用语法来运行该示例。</span><span class="sxs-lookup"><span data-stu-id="e92d0-606">After compiling the example to an executable named ReadLine1.exe, you can run it from the command line with the syntax</span></span>  
  
    ```  
    ReadLine1 < ReadLine1.txt  
    ```  
  
     <span data-ttu-id="e92d0-607">读取文件的内容并将其显示在控制台中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-607">to read the contents of the file and display them to the console.</span></span>  
  
 <span data-ttu-id="e92d0-608">行定义为字符序列，后跟回车符 (十六进制 0x000d) 、换行符 (十六进制 0x000a) 或属性的值 <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-608">A line is defined as a sequence of characters followed by a carriage return (hexadecimal 0x000d), a line feed (hexadecimal 0x000a), or the value of the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e92d0-609">返回的字符串不包含 (s) 的终止字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-609">The returned string does not contain the terminating character(s).</span></span> <span data-ttu-id="e92d0-610">默认情况下，该方法从256字符输入缓冲区读取输入。</span><span class="sxs-lookup"><span data-stu-id="e92d0-610">By default, the method reads input from a 256-character input buffer.</span></span> <span data-ttu-id="e92d0-611">因为这包括 <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> 字符 (s) ，所以该方法可以读取最多包含254个字符的行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-611">Because this includes the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> character(s), the method can read lines that contain up to 254 characters.</span></span> <span data-ttu-id="e92d0-612">若要读取更长的行，请调用 <xref:System.Console.OpenStandardInput%28System.Int32%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-612">To read longer lines, call the <xref:System.Console.OpenStandardInput%28System.Int32%29> method.</span></span>  
  
 <span data-ttu-id="e92d0-613"><xref:System.Console.ReadLine%2A>方法以同步方式执行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-613">The <xref:System.Console.ReadLine%2A> method executes synchronously.</span></span> <span data-ttu-id="e92d0-614">也就是说，它会一直阻止，直到读取行或按下 Ctrl + Z 键盘组合。</span><span class="sxs-lookup"><span data-stu-id="e92d0-614">That is, it blocks until a line is read or the Ctrl+Z keyboard combination is pressed.</span></span> <span data-ttu-id="e92d0-615"><xref:System.Console.In%2A>属性返回一个 <xref:System.IO.TextReader> 对象，该对象表示标准输入流，同时同时具有同步 <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> 方法和异步 <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-615">The <xref:System.Console.In%2A> property returns a <xref:System.IO.TextReader> object that represents the standard input stream and that has both a synchronous <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method and an asynchronous <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e92d0-616">但是，当用作控制台的标准输入流时，将 <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> 同步执行，而不是异步执行，并 `Task<String>` 只在读取操作完成后返回。</span><span class="sxs-lookup"><span data-stu-id="e92d0-616">However, when used as the console's standard input stream, the <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> executes synchronously rather than asynchronously and returns a `Task<String>` only after the read operation has completed.</span></span>  
  
 <span data-ttu-id="e92d0-617">如果此方法引发 <xref:System.OutOfMemoryException> 异常，则读取器在基础对象中的位置 <xref:System.IO.Stream> 将由该方法可以读取的字符数提前，但已读入内部缓冲区的字符将被 <xref:System.Console.ReadLine%2A> 丢弃。</span><span class="sxs-lookup"><span data-stu-id="e92d0-617">If this method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.Console.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="e92d0-618">由于读取器在流中的位置不能更改，已读取的字符不可恢复，只能通过重新初始化来访问 <xref:System.IO.TextReader> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-618">Since the position of the reader in the stream cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="e92d0-619">如果流中的初始位置未知或流不支持查找，则 <xref:System.IO.Stream> 还需要重新初始化基础。</span><span class="sxs-lookup"><span data-stu-id="e92d0-619">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span> <span data-ttu-id="e92d0-620">若要避免这种情况并生成可靠的代码，应使用 <xref:System.Console.KeyAvailable%2A> 属性和 <xref:System.Console.ReadKey%2A> 方法，并将读取字符存储在预先分配的缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-620">To avoid such a situation and to produce robust code, you should use the <xref:System.Console.KeyAvailable%2A> property and <xref:System.Console.ReadKey%2A> method and store the read characters in a pre-allocated buffer.</span></span>  
  
 <span data-ttu-id="e92d0-621">如果在方法从控制台读取输入时按下 Ctrl + Z 字符，则该方法将返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-621">If the Ctrl+Z character is pressed when the method is reading input from the console, the method returns `null`.</span></span> <span data-ttu-id="e92d0-622">这样，当 <xref:System.Console.ReadLine%2A> 在循环中调用方法时，用户可以阻止进一步的键盘输入。</span><span class="sxs-lookup"><span data-stu-id="e92d0-622">This enables the user to prevent further keyboard input when the <xref:System.Console.ReadLine%2A> method is called in a loop.</span></span> <span data-ttu-id="e92d0-623">下面的示例演示了这种情况。</span><span class="sxs-lookup"><span data-stu-id="e92d0-623">The following example illustrates this scenario.</span></span>  
  
 [!code-cpp[System.Console.ReadLine#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/readline2.cpp#1)]
 [!code-csharp[System.Console.ReadLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine2.cs#1)]
 [!code-vb[System.Console.ReadLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine2.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-624">以下示例需要两个命令行参数：现有文本文件的名称，以及要将输出写入到其中的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="e92d0-624">The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to.</span></span> <span data-ttu-id="e92d0-625">它将打开现有的文本文件，并将键盘上的标准输入重定向到该文件。</span><span class="sxs-lookup"><span data-stu-id="e92d0-625">It opens the existing text file and redirects the standard input from the keyboard to that file.</span></span> <span data-ttu-id="e92d0-626">它还将标准输出从控制台重定向到输出文件。</span><span class="sxs-lookup"><span data-stu-id="e92d0-626">It also redirects the standard output from the console to the output file.</span></span> <span data-ttu-id="e92d0-627">然后，它使用 <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> 方法读取文件中的每一行，将四个空格的每个序列替换为制表符，并使用 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 方法将结果写入输出文件。</span><span class="sxs-lookup"><span data-stu-id="e92d0-627">It then uses the <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method to write the result to the output file.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-628">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-628">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e92d0-629">没有足够的内存来为返回的字符串分配缓冲区。</span><span class="sxs-lookup"><span data-stu-id="e92d0-629">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-630">下一行中的字符的字符数大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-630">The number of characters in the next line of characters is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="ResetColor">
      <MemberSignature Language="C#" Value="public static void ResetColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ResetColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetColor();" />
      <MemberSignature Language="F#" Value="static member ResetColor : unit -&gt; unit" Usage="System.Console.ResetColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92d0-631">将控制台的前景色和背景色设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-631">Sets the foreground and background console colors to their defaults.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-632">前景色和背景色还原为当前进程开始时存在的颜色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-632">The foreground and background colors are restored to the colors that existed when the current process began.</span></span> <span data-ttu-id="e92d0-633">有关详细信息，请参阅 <xref:System.Console.ForegroundColor%2A> 和 <xref:System.Console.BackgroundColor%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-633">For more information, see the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-634">下面的示例将枚举的值保存 <xref:System.ConsoleColor> 到数组，并将和属性的当前值存储 <xref:System.Console.BackgroundColor%2A> <xref:System.Console.ForegroundColor%2A> 到变量中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-634">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="e92d0-635">然后，它会将前景色更改为枚举中的每个颜色 <xref:System.ConsoleColor> （除了与当前背景匹配的颜色），并且它会将背景色更改为枚举中的每个颜色， <xref:System.ConsoleColor> 但与当前前景匹配的颜色除外。</span><span class="sxs-lookup"><span data-stu-id="e92d0-635">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="e92d0-636"> (如果前景色与背景色相同，则不显示文本。 ) 最后，它会调用 <xref:System.Console.ResetColor%2A> 方法来还原原始控制台颜色。</span><span class="sxs-lookup"><span data-stu-id="e92d0-636">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-637">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-637">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-638">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-638">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetBufferSize">
      <MemberSignature Language="C#" Value="public static void SetBufferSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBufferSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetBufferSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBufferSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBufferSize(int width, int height);" />
      <MemberSignature Language="F#" Value="static member SetBufferSize : int * int -&gt; unit" Usage="System.Console.SetBufferSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="height" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="e92d0-639">缓冲区的宽度，以列为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-639">The width of the buffer area measured in columns.</span></span></param>
        <param name="height"><span data-ttu-id="e92d0-640">缓冲区的高度，以行为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-640">The height of the buffer area measured in rows.</span></span></param>
        <summary><span data-ttu-id="e92d0-641">将屏幕缓冲区的高度和宽度设置为指定值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-641">Sets the height and width of the screen buffer area to the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92d0-642">下面的示例演示了 <xref:System.Console.WindowLeft%2A> 、 <xref:System.Console.WindowTop%2A> 、 <xref:System.Console.WindowWidth%2A> 、 <xref:System.Console.WindowHeight%2A> 、 <xref:System.Console.BufferWidth%2A> 、 <xref:System.Console.BufferHeight%2A> 和 <xref:System.Console.CursorVisible%2A> 属性; 以及、和 <xref:System.Console.SetWindowPosition%2A> <xref:System.Console.SetBufferSize%2A> <xref:System.Console.ReadKey%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-642">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="e92d0-643">该示例基于屏幕缓冲区宽度在屏幕缓冲区中绘制网格模式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-643">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="e92d0-644">然后，该示例将移动控制台窗口，以响应按下的向上键、向下键、向左键或向右键的控制台键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-644">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="e92d0-645">网格模式可帮助您查看控制台窗口相对于屏幕缓冲区的移动。</span><span class="sxs-lookup"><span data-stu-id="e92d0-645">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
 [!code-fsharp[console.windowLT#1](~/samples/snippets/fsharp/VS_Snippets_CLR/console.windowLT/FS/wlt.fs#1)] 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-646"><paramref name="height" /> 或 <paramref name="width" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-646"><paramref name="height" /> or <paramref name="width" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="e92d0-647">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-647">-or-</span></span> 
 <span data-ttu-id="e92d0-648"><paramref name="height" /> 或 <paramref name="width" /> 大于或等于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-648"><paramref name="height" /> or <paramref name="width" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="e92d0-649">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-649">-or-</span></span> 
 <span data-ttu-id="e92d0-650"><paramref name="width" /> 小于 <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-650"><paramref name="width" /> is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span></span>  
  
<span data-ttu-id="e92d0-651">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-651">-or-</span></span> 
 <span data-ttu-id="e92d0-652"><paramref name="height" /> 小于 <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-652"><paramref name="height" /> is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-653">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-653">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-654">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-654">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-655">当前操作系统不是 Windows。</span><span class="sxs-lookup"><span data-stu-id="e92d0-655">The current operating system is not Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public static void SetCursorPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCursorPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetCursorPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCursorPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCursorPosition(int left, int top);" />
      <MemberSignature Language="F#" Value="static member SetCursorPosition : int * int -&gt; unit" Usage="System.Console.SetCursorPosition (left, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="top" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e92d0-656">光标的列位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-656">The column position of the cursor.</span></span> <span data-ttu-id="e92d0-657">将从 0 开始从左到右对列进行编号。</span><span class="sxs-lookup"><span data-stu-id="e92d0-657">Columns are numbered from left to right starting at 0.</span></span></param>
        <param name="top"><span data-ttu-id="e92d0-658">光标的行位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-658">The row position of the cursor.</span></span> <span data-ttu-id="e92d0-659">从上到下，从 0 开始为行编号。</span><span class="sxs-lookup"><span data-stu-id="e92d0-659">Rows are numbered from top to bottom starting at 0.</span></span></param>
        <summary><span data-ttu-id="e92d0-660">设置光标位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-660">Sets the position of the cursor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-661">使用 <xref:System.Console.SetCursorPosition%2A> 方法来指定在控制台窗口中的下一次写入操作开始的位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-661">Use the <xref:System.Console.SetCursorPosition%2A> method to specify where the next write operation in the console window is to begin.</span></span> <span data-ttu-id="e92d0-662">如果指定的光标位置在控制台窗口中当前可见的区域外，则窗口源会自动更改，使游标可见。</span><span class="sxs-lookup"><span data-stu-id="e92d0-662">If the specified cursor position is outside the area that is currently visible in the console window, the window origin changes automatically to make the cursor visible.</span></span>  
  
 <span data-ttu-id="e92d0-663">每次将字符写入控制台窗口时，光标会自动移动到下一个字符位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-663">The cursor automatically moves to the next character position each time a character is written to the console window.</span></span> <span data-ttu-id="e92d0-664">如果光标位于控制台窗口的右下角字符位置，则下一次写入操作将导致控制台窗口滚动，使光标保持可见。</span><span class="sxs-lookup"><span data-stu-id="e92d0-664">If the cursor is at the bottom right character position of the console window, the next write operation causes the console window to scroll so the cursor remains visible.</span></span> <span data-ttu-id="e92d0-665">如果要在不导致控制台窗口滚动的情况下向右下字符位置写入字符，请使用 <xref:System.Console.MoveBufferArea%2A> 方法将字符移动到该位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-665">If you want to write a character to the bottom right character position without causing the console window to scroll, use the <xref:System.Console.MoveBufferArea%2A> method to move a character to that position.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-666">此示例演示 <xref:System.Console.CursorLeft%2A> 和属性以及和 <xref:System.Console.CursorTop%2A> <xref:System.Console.SetCursorPosition%2A> <xref:System.Console.Clear%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-666">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="e92d0-667">该示例定位光标，该光标确定下一次写入的位置，以使用 "+"、"&#124;" 和 "-" 字符串的组合来绘制5个字符，每5个字符矩形。</span><span class="sxs-lookup"><span data-stu-id="e92d0-667">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="e92d0-668">请注意，可以使用其他字符串的组合来绘制矩形，并减少步骤。</span><span class="sxs-lookup"><span data-stu-id="e92d0-668">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-669"><paramref name="left" /> 或 <paramref name="top" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-669"><paramref name="left" /> or <paramref name="top" /> is less than zero.</span></span>  
  
<span data-ttu-id="e92d0-670">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-670">-or-</span></span> 
 <span data-ttu-id="e92d0-671"><paramref name="left" /> 大于或等于 <see cref="P:System.Console.BufferWidth" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-671"><paramref name="left" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
<span data-ttu-id="e92d0-672">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-672">-or-</span></span> 
 <span data-ttu-id="e92d0-673"><paramref name="top" /> 大于或等于 <see cref="P:System.Console.BufferHeight" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-673"><paramref name="top" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-674">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-674">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-675">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-675">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public static void SetError (System.IO.TextWriter newError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetError(class System.IO.TextWriter newError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetError(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetError (newError As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetError(System::IO::TextWriter ^ newError);" />
      <MemberSignature Language="F#" Value="static member SetError : System.IO.TextWriter -&gt; unit" Usage="System.Console.SetError newError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newError" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newError"><span data-ttu-id="e92d0-676">一个流，它是新的标准错误输出。</span><span class="sxs-lookup"><span data-stu-id="e92d0-676">A stream that is the new standard error output.</span></span></param>
        <summary><span data-ttu-id="e92d0-677">将 <see cref="P:System.Console.Error" /> 属性设置为指定的 <see cref="T:System.IO.TextWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-677">Sets the <see cref="P:System.Console.Error" /> property to the specified <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-678">默认情况下， <xref:System.Console.Error%2A> 属性设置为标准错误输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-678">By default, the <xref:System.Console.Error%2A> property is set to the standard error output stream.</span></span>  
  
 <span data-ttu-id="e92d0-679"><xref:System.IO.StreamWriter>封装的 <xref:System.IO.FileStream> 可以用于将错误消息发送给文件。</span><span class="sxs-lookup"><span data-stu-id="e92d0-679">A <xref:System.IO.StreamWriter> that encapsulates a <xref:System.IO.FileStream> can be used to send error messages to a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-680">下面的示例演示如何将标准错误流重定向到文件。</span><span class="sxs-lookup"><span data-stu-id="e92d0-680">The following example shows how to redirect the standard error stream to a file.</span></span>  
  
 [!code-cpp[System.Console.SetError#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.SetError/cpp/seterror1.cpp#1)]
 [!code-csharp[System.Console.SetError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.SetError/cs/SetError1.cs#1)]
 [!code-vb[System.Console.SetError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.SetError/vb/SetError1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-681"><paramref name="newError" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-681"><paramref name="newError" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-682">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-682">The caller does not have the required permission.</span></span></exception>
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="P:System.Console.Error" />
      </Docs>
    </Member>
    <Member MemberName="SetIn">
      <MemberSignature Language="C#" Value="public static void SetIn (System.IO.TextReader newIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIn(class System.IO.TextReader newIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetIn(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIn (newIn As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIn(System::IO::TextReader ^ newIn);" />
      <MemberSignature Language="F#" Value="static member SetIn : System.IO.TextReader -&gt; unit" Usage="System.Console.SetIn newIn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newIn" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="newIn"><span data-ttu-id="e92d0-683">一个流，它是新的标准输入。</span><span class="sxs-lookup"><span data-stu-id="e92d0-683">A stream that is the new standard input.</span></span></param>
        <summary><span data-ttu-id="e92d0-684">将 <see cref="P:System.Console.In" /> 属性设置为指定的 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-684">Sets the <see cref="P:System.Console.In" /> property to the specified <see cref="T:System.IO.TextReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-685">默认情况下， <xref:System.Console.In%2A> 属性设置为标准输入流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-685">By default, the <xref:System.Console.In%2A> property is set to the standard input stream.</span></span>  
  
 <span data-ttu-id="e92d0-686"><xref:System.IO.StreamReader>封装的 <xref:System.IO.FileStream> 可用于接收来自文件的输入。</span><span class="sxs-lookup"><span data-stu-id="e92d0-686">A <xref:System.IO.StreamReader> that encapsulates a <xref:System.IO.FileStream> can be used to receive input from a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-687">下面的示例演示 <xref:System.Console.SetIn%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-687">The following example illustrates the use of the <xref:System.Console.SetIn%2A> method.</span></span> <span data-ttu-id="e92d0-688">它用制表符替换字符串中的四个连续空格字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-688">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="e92d0-689">若要运行此命令，必须提供两个命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-689">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="e92d0-690">第一个是要将标准输入流重定向到的现有文本文件的名称。</span><span class="sxs-lookup"><span data-stu-id="e92d0-690">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="e92d0-691">第二个是要将标准输出流重定向到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="e92d0-691">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="e92d0-692">此文件不需要存在。</span><span class="sxs-lookup"><span data-stu-id="e92d0-692">This file need not exist.</span></span> <span data-ttu-id="e92d0-693">如果它这么做，其内容将被覆盖。</span><span class="sxs-lookup"><span data-stu-id="e92d0-693">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-694"><paramref name="newIn" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-694"><paramref name="newIn" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-695">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-695">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Console.In" />
      </Docs>
    </Member>
    <Member MemberName="SetOut">
      <MemberSignature Language="C#" Value="public static void SetOut (System.IO.TextWriter newOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOut(class System.IO.TextWriter newOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetOut(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetOut (newOut As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetOut(System::IO::TextWriter ^ newOut);" />
      <MemberSignature Language="F#" Value="static member SetOut : System.IO.TextWriter -&gt; unit" Usage="System.Console.SetOut newOut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newOut" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newOut"><span data-ttu-id="e92d0-696">要用作新的标准输出的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="e92d0-696">A text writer to be used as the new standard output.</span></span></param>
        <summary><span data-ttu-id="e92d0-697">将 <see cref="P:System.Console.Out" /> 属性设置为面向 <see cref="T:System.IO.TextWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-697">Sets the <see cref="P:System.Console.Out" /> property to target the <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-698">默认情况下， <xref:System.Console.Out%2A> 属性设置为标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-698">By default, the <xref:System.Console.Out%2A> property is set to the standard output stream.</span></span>  
  
 <span data-ttu-id="e92d0-699"><xref:System.IO.StreamWriter>封装的 <xref:System.IO.FileStream> 可以用来将输出发送到文件。</span><span class="sxs-lookup"><span data-stu-id="e92d0-699">A <xref:System.IO.StreamWriter> that encapsulates a <xref:System.IO.FileStream> can be used to send output to a file.</span></span> <span data-ttu-id="e92d0-700">例如：</span><span class="sxs-lookup"><span data-stu-id="e92d0-700">For example:</span></span>  
  
 [!code-cpp[System.Console.SetOut#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.setout/cpp/source.cpp#1)]
 [!code-csharp[System.Console.SetOut#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.setout/cs/source.cs#1)]
 [!code-vb[System.Console.SetOut#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.setout/vb/source.vb#1)]  
  
 <span data-ttu-id="e92d0-701">返回的实际对象 <xref:System.Console.Out%2A> 可能是所提供的文本编写器周围的同步包装。</span><span class="sxs-lookup"><span data-stu-id="e92d0-701">The actual object returned by <xref:System.Console.Out%2A> may be a synchronized wrapper around the provided text writer.</span></span>
  
## Examples  
 <span data-ttu-id="e92d0-702">下面的示例演示 <xref:System.Console.SetOut%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-702">The following example illustrates the use of the <xref:System.Console.SetOut%2A> method.</span></span> <span data-ttu-id="e92d0-703">它用制表符替换字符串中的四个连续空格字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-703">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="e92d0-704">若要运行此命令，必须提供两个命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-704">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="e92d0-705">第一个是要将标准输入流重定向到的现有文本文件的名称。</span><span class="sxs-lookup"><span data-stu-id="e92d0-705">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="e92d0-706">第二个是要将标准输出流重定向到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="e92d0-706">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="e92d0-707">此文件不需要存在。</span><span class="sxs-lookup"><span data-stu-id="e92d0-707">This file need not exist.</span></span> <span data-ttu-id="e92d0-708">如果它这么做，其内容将被覆盖。</span><span class="sxs-lookup"><span data-stu-id="e92d0-708">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-709"><paramref name="newOut" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-709"><paramref name="newOut" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-710">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-710">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowPosition">
      <MemberSignature Language="C#" Value="public static void SetWindowPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowPosition(int left, int top);" />
      <MemberSignature Language="F#" Value="static member SetWindowPosition : int * int -&gt; unit" Usage="System.Console.SetWindowPosition (left, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="top" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e92d0-711">控制台窗口左上角的列位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-711">The column position of the upper left  corner of the console window.</span></span></param>
        <param name="top"><span data-ttu-id="e92d0-712">控制台窗口左上角的行位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-712">The row position of the upper left corner of the console window.</span></span></param>
        <summary><span data-ttu-id="e92d0-713">设置控制台窗口相对于屏幕缓冲区的位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-713">Sets the position of the console window relative to the screen buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-714">操作系统窗口显示控制台窗口，控制台窗口显示屏幕缓冲区的一部分。</span><span class="sxs-lookup"><span data-stu-id="e92d0-714">The operating system window displays the console window, and the console window displays a portion of the screen buffer.</span></span> <span data-ttu-id="e92d0-715"><xref:System.Console.SetWindowPosition%2A>方法会影响控制台窗口相对于屏幕缓冲区的位置，但不会影响操作系统窗口相对于桌面的位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-715">The <xref:System.Console.SetWindowPosition%2A> method affects the position of the console window relative to the screen buffer, but does not affect the position of the operating system window relative to the desktop.</span></span>  
  
 <span data-ttu-id="e92d0-716">控制台和操作系统 windows 通常不会相互影响。</span><span class="sxs-lookup"><span data-stu-id="e92d0-716">The console and operating system windows generally do not affect each other.</span></span> <span data-ttu-id="e92d0-717">但是，如果屏幕缓冲区无法在控制台窗口的当前边界内显示，操作系统会自动将滚动条附加到操作系统窗口。</span><span class="sxs-lookup"><span data-stu-id="e92d0-717">However, if the screen buffer cannot be displayed in the current boundaries of the console window, the operating system automatically appends scroll bars to the operating system window.</span></span> <span data-ttu-id="e92d0-718">在这种情况下，移动操作系统窗口滚动条会影响控制台窗口的位置，并且通过方法移动控制台窗口 <xref:System.Console.SetWindowPosition%2A> 会影响操作系统窗口滚动条的位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-718">In that case, moving the operating system window scroll bars affects the position of the console window, and moving the console window with the <xref:System.Console.SetWindowPosition%2A> method affects the position of the operating system window scroll bars.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-719">下面的示例演示了 <xref:System.Console.WindowLeft%2A> 、 <xref:System.Console.WindowTop%2A> 、 <xref:System.Console.WindowWidth%2A> 、 <xref:System.Console.WindowHeight%2A> 、 <xref:System.Console.BufferWidth%2A> 、 <xref:System.Console.BufferHeight%2A> 和 <xref:System.Console.CursorVisible%2A> 属性; 以及、和 <xref:System.Console.SetWindowPosition%2A> <xref:System.Console.SetBufferSize%2A> <xref:System.Console.ReadKey%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-719">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="e92d0-720">该示例基于屏幕缓冲区宽度在屏幕缓冲区中绘制网格模式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-720">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="e92d0-721">然后，该示例将移动控制台窗口，以响应按下的向上键、向下键、向左键或向右键的控制台键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-721">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="e92d0-722">网格模式可帮助您查看控制台窗口相对于屏幕缓冲区的移动。</span><span class="sxs-lookup"><span data-stu-id="e92d0-722">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
 [!code-fsharp[console.windowLT#1](~/samples/snippets/fsharp/VS_Snippets_CLR/console.windowLT/FS/wlt.fs#1)] 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-723"><paramref name="left" /> 或 <paramref name="top" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-723"><paramref name="left" /> or <paramref name="top" /> is less than zero.</span></span>  
  
<span data-ttu-id="e92d0-724">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-724">-or-</span></span> 
 <span data-ttu-id="e92d0-725"><paramref name="left" /> + <see cref="P:System.Console.WindowWidth" /> 大于 <see cref="P:System.Console.BufferWidth" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-725"><paramref name="left" /> + <see cref="P:System.Console.WindowWidth" /> is greater than <see cref="P:System.Console.BufferWidth" />.</span></span>  
  
<span data-ttu-id="e92d0-726">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-726">-or-</span></span> 
 <span data-ttu-id="e92d0-727"><paramref name="top" /> + <see cref="P:System.Console.WindowHeight" /> 大于 <see cref="P:System.Console.BufferHeight" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-727"><paramref name="top" /> + <see cref="P:System.Console.WindowHeight" /> is greater than <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-728">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-728">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-729">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-729">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-730">当前操作系统不是 Windows。</span><span class="sxs-lookup"><span data-stu-id="e92d0-730">The current operating system is not Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetWindowSize">
      <MemberSignature Language="C#" Value="public static void SetWindowSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowSize(int width, int height);" />
      <MemberSignature Language="F#" Value="static member SetWindowSize : int * int -&gt; unit" Usage="System.Console.SetWindowSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="height" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="e92d0-731">控制台窗口的宽度，以列为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-731">The width of the console window measured in columns.</span></span></param>
        <param name="height"><span data-ttu-id="e92d0-732">控制台窗口的高度，以行为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-732">The height of the console window measured in rows.</span></span></param>
        <summary><span data-ttu-id="e92d0-733">将控制台窗口的高度和宽度设置为指定值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-733">Sets the height and width of the console window to the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92d0-734">此示例演示 <xref:System.Console.SetWindowSize%2A> 方法和 <xref:System.Console.WindowWidth%2A> 和 <xref:System.Console.WindowHeight%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-734">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="e92d0-735">若要查看更改控制台窗口大小的完整效果，必须运行该示例。</span><span class="sxs-lookup"><span data-stu-id="e92d0-735">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="e92d0-736">该示例报告将控制台窗口的维度设置为85列和43行，然后等待按键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-736">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed.</span></span> <span data-ttu-id="e92d0-737">按任意键时，控制台窗口的维度会减半，并报告新维度，然后该示例将等待另一个按键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-737">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="e92d0-738">最后，当按任意键时，控制台窗口将还原为其原始维度，该示例将终止。</span><span class="sxs-lookup"><span data-stu-id="e92d0-738">Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-739"><paramref name="width" /> 或 <paramref name="height" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-739"><paramref name="width" /> or <paramref name="height" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="e92d0-740">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-740">-or-</span></span> 
 <span data-ttu-id="e92d0-741"><paramref name="width" /> 加 <see cref="P:System.Console.WindowLeft" /> 或 <paramref name="height" /> 加 <see cref="P:System.Console.WindowTop" /> 大于或等于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-741"><paramref name="width" /> plus <see cref="P:System.Console.WindowLeft" /> or <paramref name="height" /> plus <see cref="P:System.Console.WindowTop" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="e92d0-742">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-742">-or-</span></span> 
 <span data-ttu-id="e92d0-743"><paramref name="width" /> 或 <paramref name="height" /> 的值大于当前屏幕分辨率和控制台字体的最大可能的窗口宽度或高度。</span><span class="sxs-lookup"><span data-stu-id="e92d0-743"><paramref name="width" /> or <paramref name="height" /> is greater than the largest possible window width or height for the current screen resolution and console font.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e92d0-744">用户没有执行此操作的权限。</span><span class="sxs-lookup"><span data-stu-id="e92d0-744">The user does not have permission to perform this action.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-745">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-745">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-746">当前操作系统不是 Windows。</span><span class="sxs-lookup"><span data-stu-id="e92d0-746">The current operating system is not Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public static string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string Title" />
      <MemberSignature Language="DocId" Value="P:System.Console.Title" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Console.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-747">获取或设置要显示在控制台标题栏中的标题。</span><span class="sxs-lookup"><span data-stu-id="e92d0-747">Gets or sets the title to display in the console title bar.</span></span></summary>
        <value><span data-ttu-id="e92d0-748">要在控制台的标题栏中显示的字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-748">The string to be displayed in the title bar of the console.</span></span> <span data-ttu-id="e92d0-749">标题字符串的最大长度是 24500 个字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-749">The maximum length of the title string is 24500 characters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92d0-750">此示例演示了 <xref:System.Console.Title%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-750">This example demonstrates the <xref:System.Console.Title%2A> property.</span></span> <span data-ttu-id="e92d0-751">该示例显示操作系统窗口的当前标题，等待按键，然后显示一个新标题。</span><span class="sxs-lookup"><span data-stu-id="e92d0-751">The example displays the current title of the operating system window, waits for a key press, then displays a new title.</span></span>  
  
 [!code-cpp[console.title#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.title/CPP/mytitle.cpp#1)]
 [!code-csharp[console.title#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.title/CS/mytitle.cs#1)]
 [!code-vb[console.title#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.title/VB/mytitle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e92d0-752">在获取操作中，检索到的标题长度超过 24500 个字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-752">In a get operation, the retrieved title is longer than 24500 characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-753">在集运算中，指定的标题长度超过 24500 个字符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-753">In a set operation, the specified title is longer than 24500 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-754">在集运算中，指定的标题是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-754">In a set operation, the specified title is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-755">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-755">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-756">get 操作在 Windows 之外的操作系统上调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-756">The get operation is invoked on an operating system other than Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TreatControlCAsInput">
      <MemberSignature Language="C#" Value="public static bool TreatControlCAsInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool TreatControlCAsInput" />
      <MemberSignature Language="DocId" Value="P:System.Console.TreatControlCAsInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property TreatControlCAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool TreatControlCAsInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatControlCAsInput : bool with get, set" Usage="System.Console.TreatControlCAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-757">获取或设置一个值，该值指示是将修改键 <see cref="F:System.ConsoleModifiers.Control" /> 和控制台键 <see cref="F:System.ConsoleKey.C" /> 的组合 (Ctrl+C) 视为普通输入，还是视为由操作系统处理的中断。</span><span class="sxs-lookup"><span data-stu-id="e92d0-757">Gets or sets a value indicating whether the combination of the <see cref="F:System.ConsoleModifiers.Control" /> modifier key and <see cref="F:System.ConsoleKey.C" /> console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.</span></span></summary>
        <value><span data-ttu-id="e92d0-758">如果将 Ctrl+C 视为普通输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-758"><see langword="true" /> if Ctrl+C is treated as ordinary input; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-759">如果属性的值 <xref:System.Console.TreatControlCAsInput%2A> 为， `false` 并且按下 Ctrl + C，则按下的键不会存储在输入缓冲区中，并且操作系统将终止当前正在执行的进程。</span><span class="sxs-lookup"><span data-stu-id="e92d0-759">If the value of the <xref:System.Console.TreatControlCAsInput%2A> property is `false` and Ctrl+C is pressed, the pressed keys are not stored in the input buffer and the operating system terminates the currently executing process.</span></span> <span data-ttu-id="e92d0-760">这是默认值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-760">This is the default value.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e92d0-761">请谨慎使用此属性，因为将其设置为 `true` 具有如此大的效果。</span><span class="sxs-lookup"><span data-stu-id="e92d0-761">Use this property judiciously because setting it to `true` has such a dramatic effect.</span></span> <span data-ttu-id="e92d0-762">大多数用户希望使用 Ctrl + C 终止控制台应用程序。</span><span class="sxs-lookup"><span data-stu-id="e92d0-762">Most users expect Ctrl+C to terminate a console application.</span></span> <span data-ttu-id="e92d0-763">如果禁用 Ctrl + C 的效果，则用户必须记得使用 Ctrl + Break 终止应用程序，这是一个不太熟悉的键组合。</span><span class="sxs-lookup"><span data-stu-id="e92d0-763">If you disable the effect of Ctrl+C, the user must remember to use Ctrl+Break to terminate the application, which is a less familiar key combination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-764">下面的示例演示了 <xref:System.Console.TreatControlCAsInput%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-764">The following example demonstrates the <xref:System.Console.TreatControlCAsInput%2A> property.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-765">无法获取或设置控制台输入缓冲区的输入模式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-765">Unable to get or set the input mode of the console input buffer.</span></span></exception>
        <altmember cref="F:System.ConsoleModifiers.Control" />
        <altmember cref="F:System.ConsoleKey.C" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="WindowHeight">
      <MemberSignature Language="C#" Value="public static int WindowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowHeight : int with get, set" Usage="System.Console.WindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-766">获取或设置控制台窗口区域的高度。</span><span class="sxs-lookup"><span data-stu-id="e92d0-766">Gets or sets the height of the console window area.</span></span></summary>
        <value><span data-ttu-id="e92d0-767">控制台窗口的高度，以行为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-767">The height of the console window measured in rows.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-768">尝试 <xref:System.Console.WindowHeight%2A> 在输出重定向时设置属性的值将引发 <xref:System.ArgumentOutOfRangeException> 或 <xref:System.IO.IOException> 异常。</span><span class="sxs-lookup"><span data-stu-id="e92d0-768">Attempting to set the value of the <xref:System.Console.WindowHeight%2A> property when output is redirected throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="e92d0-769">若要防止出现异常，只能在属性返回时设置此属性的值 <xref:System.Console.IsOutputRedirected%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-769">To prevent an exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-770">此示例演示 <xref:System.Console.SetWindowSize%2A> 方法和 <xref:System.Console.WindowWidth%2A> 和 <xref:System.Console.WindowHeight%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-770">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="e92d0-771">若要查看更改控制台窗口大小的完整效果，必须运行该示例。</span><span class="sxs-lookup"><span data-stu-id="e92d0-771">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="e92d0-772">该示例报告将控制台窗口的维度设置为85列和43行，然后等待按键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-772">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</span></span> <span data-ttu-id="e92d0-773">按任意键时，控制台窗口的维度会减半，并报告新维度，然后该示例将等待另一个按键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-773">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="e92d0-774">最后，当按任意键时，控制台窗口将还原为其原始维度，该示例将终止。</span><span class="sxs-lookup"><span data-stu-id="e92d0-774">Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-775">属性 <see cref="P:System.Console.WindowWidth" /> 的值或属性 <see cref="P:System.Console.WindowHeight" /> 的值小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-775">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.</span></span>  
  
<span data-ttu-id="e92d0-776">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-776">-or-</span></span> 
<span data-ttu-id="e92d0-777">属性 <see cref="P:System.Console.WindowHeight" /> 的值加上属性 <see cref="P:System.Console.WindowTop" /> 的值大于或等于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-777">The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="e92d0-778">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-778">-or-</span></span> 
<span data-ttu-id="e92d0-779"><see cref="P:System.Console.WindowWidth" /> 属性的值或 <see cref="P:System.Console.WindowHeight" /> 属性的值大于当前屏幕分辨率和控制台字体的最大可能的窗口宽度或高度。</span><span class="sxs-lookup"><span data-stu-id="e92d0-779">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-780">读取或写入信息时发生错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-780">Error reading or writing information.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-781">设置操作在 Windows 之外的操作系统上调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-781">The set operation is invoked on an operating system other than Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WindowLeft">
      <MemberSignature Language="C#" Value="public static int WindowLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowLeft : int with get, set" Usage="System.Console.WindowLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-782">获取或设置控制台窗口区域的最左边相对于屏幕缓冲区的位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-782">Gets or sets the leftmost position of the console window area relative to the screen buffer.</span></span></summary>
        <value><span data-ttu-id="e92d0-783">控制台窗口的最左边的位置，以列为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-783">The leftmost console window position measured in columns.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-784">控制台将一个矩形窗口表示为一个更大的矩形缓冲区区域。</span><span class="sxs-lookup"><span data-stu-id="e92d0-784">The console represents a rectangular window into a larger rectangular buffer area.</span></span> <span data-ttu-id="e92d0-785">窗口和缓冲区都按行数垂直度量，并按列数水平测量。</span><span class="sxs-lookup"><span data-stu-id="e92d0-785">Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</span></span> <span data-ttu-id="e92d0-786">缓冲区的尺寸由 <xref:System.Console.BufferHeight%2A> 和 <xref:System.Console.BufferWidth%2A> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="e92d0-786">The dimensions of the buffer area are defined by the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="e92d0-787">控制台区域的尺寸由 <xref:System.Console.WindowHeight%2A> 和 <xref:System.Console.WindowWidth%2A> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="e92d0-787">The dimensions of the console area are defined by the <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties.</span></span> <span data-ttu-id="e92d0-788"><xref:System.Console.WindowLeft%2A>属性确定缓冲区区域的哪一列显示在控制台窗口的第一列中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-788">The <xref:System.Console.WindowLeft%2A> property determines which column of the buffer area is displayed in the first column of the console window.</span></span> <span data-ttu-id="e92d0-789">属性的值的 <xref:System.Console.WindowLeft%2A> 范围为0到 <xref:System.Console.BufferWidth%2A>  -  <xref:System.Console.WindowWidth%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-789">The value of the <xref:System.Console.WindowLeft%2A> property can range from 0 to <xref:System.Console.BufferWidth%2A> - <xref:System.Console.WindowWidth%2A>.</span></span> <span data-ttu-id="e92d0-790">尝试将其设置为超出该范围的值将引发 <xref:System.ArgumentOutOfRangeException> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-790">Attempting to set it to a value outside that range throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="e92d0-791">当控制台窗口首次打开时，属性的默认值 <xref:System.Console.WindowLeft%2A> 为零，这表示该控制台显示的第一列对应于缓冲区中位置零)  (列的第一列。</span><span class="sxs-lookup"><span data-stu-id="e92d0-791">When a console window first opens, the default value of the <xref:System.Console.WindowLeft%2A> property is zero, which indicates that the first column shown by the console corresponds to the first column (the column at position zero) in the buffer area.</span></span> <span data-ttu-id="e92d0-792">控制台窗口和缓冲区区域的默认宽度均为80列。</span><span class="sxs-lookup"><span data-stu-id="e92d0-792">The default width of both the console window and the buffer area is 80 columns.</span></span> <span data-ttu-id="e92d0-793">这意味着， <xref:System.Console.WindowLeft%2A> 仅当控制台窗口变窄或缓冲区区域变宽时，才可以修改属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-793">This means that the <xref:System.Console.WindowLeft%2A> property can be modified only if the console window is made narrower or the buffer area is made wider.</span></span>  
  
 <span data-ttu-id="e92d0-794">请注意，如果缓冲区的宽度超过控制台窗口的宽度，则 <xref:System.Console.WindowLeft%2A> 当用户使用水平滚动条来定义窗口与缓冲区区域的关系时，将自动调整属性的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-794">Note that if the width of the buffer area exceeds the width of the console window, the value of the <xref:System.Console.WindowLeft%2A> property is automatically adjusted when the user uses the horizontal scroll bar to define the window's relationship to the buffer area.</span></span>  
  
 <span data-ttu-id="e92d0-795">尝试 <xref:System.Console.WindowLeft%2A> 在输出重定向时设置属性的值会引发 <xref:System.IO.IOException> 异常。</span><span class="sxs-lookup"><span data-stu-id="e92d0-795">Attempting to set the value of the <xref:System.Console.WindowLeft%2A> property when output is redirected throws an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="e92d0-796">若要防止出现此异常，只能在属性返回时设置此属性的值 <xref:System.Console.IsOutputRedirected%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-796">To prevent the exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-797">下面的示例打开一个80列控制台窗口，并定义一个宽度为120列的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="e92d0-797">The following example opens an 80-column console window and defines a buffer area that is 120 columns wide.</span></span> <span data-ttu-id="e92d0-798">它显示有关窗口和缓冲区大小的信息，然后等待用户按向左键或向右键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-798">It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key.</span></span> <span data-ttu-id="e92d0-799">在前一种情况下， <xref:System.Console.WindowLeft%2A> 如果结果是合法值，则它会将属性的值减一。</span><span class="sxs-lookup"><span data-stu-id="e92d0-799">In the former case, it decrements the value of the <xref:System.Console.WindowLeft%2A> property by one if the result is a legal value.</span></span> <span data-ttu-id="e92d0-800">在后一种情况下，如果结果是合法的，它会将属性的值增加 <xref:System.Console.WindowLeft%2A> 1。</span><span class="sxs-lookup"><span data-stu-id="e92d0-800">In the latter case, it increases the value of the <xref:System.Console.WindowLeft%2A> property by one if the result would be legal.</span></span> <span data-ttu-id="e92d0-801">请注意，该示例不需要处理 <xref:System.ArgumentOutOfRangeException> ，因为它会检查要赋给属性的值 <xref:System.Console.WindowLeft%2A> 是否不为负数，且不会导致 <xref:System.Console.WindowLeft%2A> 和属性的和 <xref:System.Console.WindowWidth%2A> 超过 <xref:System.Console.BufferWidth%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-801">Note that the example does not have to handle an <xref:System.ArgumentOutOfRangeException>, because it checks that the value to be assigned to the <xref:System.Console.WindowLeft%2A> property is not negative and does not cause the sum of the <xref:System.Console.WindowLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to exceed the <xref:System.Console.BufferWidth%2A> property value.</span></span>  
  
 [!code-cpp[System.Console.WindowLeft#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.windowleft/cpp/windowleft1.cpp#1)]
 [!code-csharp[System.Console.WindowLeft#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.windowleft/cs/windowleft1.cs#1)]
 [!code-vb[System.Console.WindowLeft#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.windowleft/vb/windowleft1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-802">在集运算中，要赋予的值小于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-802">In a set operation, the value to be assigned is less than zero.</span></span>  
  
<span data-ttu-id="e92d0-803">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-803">-or-</span></span> 
<span data-ttu-id="e92d0-804">赋值之后，<see cref="P:System.Console.WindowLeft" /> 加 <see cref="P:System.Console.WindowWidth" /> 将超过 <see cref="P:System.Console.BufferWidth" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-804">As a result of the assignment, <see cref="P:System.Console.WindowLeft" /> plus <see cref="P:System.Console.WindowWidth" /> would exceed <see cref="P:System.Console.BufferWidth" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-805">读取或写入信息时发生错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-805">Error reading or writing information.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-806">设置操作在 Windows 之外的操作系统上调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-806">The set operation is invoked on an operating system other than Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WindowTop">
      <MemberSignature Language="C#" Value="public static int WindowTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTop : int with get, set" Usage="System.Console.WindowTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-807">获取或设置控制台窗口区域的最顶部相对于屏幕缓冲区的位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-807">Gets or sets the top position of the console window area relative to the screen buffer.</span></span></summary>
        <value><span data-ttu-id="e92d0-808">控制台窗口最顶部的位置，以行为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-808">The uppermost console window position measured in rows.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-809">控制台将一个矩形窗口表示为一个更大的矩形缓冲区区域。</span><span class="sxs-lookup"><span data-stu-id="e92d0-809">The console represents a rectangular window into a larger rectangular buffer area.</span></span> <span data-ttu-id="e92d0-810">窗口和缓冲区都按行数垂直度量，并按列数水平测量。</span><span class="sxs-lookup"><span data-stu-id="e92d0-810">Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</span></span> <span data-ttu-id="e92d0-811">缓冲区的尺寸由 <xref:System.Console.BufferHeight%2A> 和 <xref:System.Console.BufferWidth%2A> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="e92d0-811">The dimensions of the buffer area are defined by the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="e92d0-812">控制台区域的尺寸由 <xref:System.Console.WindowHeight%2A> 和 <xref:System.Console.WindowWidth%2A> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="e92d0-812">The dimensions of the console area are defined by the <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties.</span></span> <span data-ttu-id="e92d0-813"><xref:System.Console.WindowTop%2A>属性决定哪个缓冲区区域显示在控制台窗口的第一列中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-813">The <xref:System.Console.WindowTop%2A> property determines which row of the buffer area is displayed in the first column of the console window.</span></span> <span data-ttu-id="e92d0-814">属性的值的 <xref:System.Console.WindowTop%2A> 范围为0到 <xref:System.Console.BufferHeight%2A>  -  <xref:System.Console.WindowHeight%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-814">The value of the <xref:System.Console.WindowTop%2A> property can range from 0 to <xref:System.Console.BufferHeight%2A> - <xref:System.Console.WindowHeight%2A>.</span></span> <span data-ttu-id="e92d0-815">尝试将其设置为超出该范围的值将引发 <xref:System.ArgumentOutOfRangeException> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-815">Attempting to set it to a value outside that range throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="e92d0-816">尝试 <xref:System.Console.WindowTop%2A> 在输出重定向时设置属性的值会引发 <xref:System.IO.IOException> 异常。</span><span class="sxs-lookup"><span data-stu-id="e92d0-816">Attempting to set the value of the <xref:System.Console.WindowTop%2A> property when output is redirected throws an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="e92d0-817">若要防止出现此异常，只能在属性返回时设置此属性的值 <xref:System.Console.IsOutputRedirected%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-817">To prevent the exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-818">下面的示例演示了 <xref:System.Console.WindowLeft%2A> 、 <xref:System.Console.WindowTop%2A> 、 <xref:System.Console.WindowWidth%2A> 、 <xref:System.Console.WindowHeight%2A> 、 <xref:System.Console.BufferWidth%2A> 、 <xref:System.Console.BufferHeight%2A> 和 <xref:System.Console.CursorVisible%2A> 属性; 以及、和 <xref:System.Console.SetWindowPosition%2A> <xref:System.Console.SetBufferSize%2A> <xref:System.Console.ReadKey%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-818">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="e92d0-819">该示例基于屏幕缓冲区宽度在屏幕缓冲区中绘制网格模式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-819">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="e92d0-820">然后，该示例将移动控制台窗口，以响应按下的向上键、向下键、向左键或向右键的控制台键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-820">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="e92d0-821">网格模式可帮助您查看控制台窗口相对于屏幕缓冲区的移动。</span><span class="sxs-lookup"><span data-stu-id="e92d0-821">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
 [!code-fsharp[console.windowLT#1](~/samples/snippets/fsharp/VS_Snippets_CLR/console.windowLT/FS/wlt.fs#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-822">在集运算中，要赋予的值小于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-822">In a set operation, the value to be assigned is less than zero.</span></span>  
  
<span data-ttu-id="e92d0-823">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-823">-or-</span></span> 
<span data-ttu-id="e92d0-824">赋值之后，<see cref="P:System.Console.WindowTop" /> 加 <see cref="P:System.Console.WindowHeight" /> 将超过 <see cref="P:System.Console.BufferHeight" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-824">As a result of the assignment, <see cref="P:System.Console.WindowTop" /> plus <see cref="P:System.Console.WindowHeight" /> would exceed <see cref="P:System.Console.BufferHeight" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-825">读取或写入信息时发生错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-825">Error reading or writing information.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-826">设置操作在 Windows 之外的操作系统上调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-826">The set operation is invoked on an operating system other than Windows.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WindowWidth">
      <MemberSignature Language="C#" Value="public static int WindowWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowWidth : int with get, set" Usage="System.Console.WindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92d0-827">获取或设置控制台窗口的宽度。</span><span class="sxs-lookup"><span data-stu-id="e92d0-827">Gets or sets the width of the console window.</span></span></summary>
        <value><span data-ttu-id="e92d0-828">控制台窗口的宽度，以列为单位。</span><span class="sxs-lookup"><span data-stu-id="e92d0-828">The width of the console window measured in columns.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-829">尝试 <xref:System.Console.WindowWidth%2A> 在输出重定向时设置属性的值将引发 <xref:System.ArgumentOutOfRangeException> 或 <xref:System.IO.IOException> 异常。</span><span class="sxs-lookup"><span data-stu-id="e92d0-829">Attempting to set the value of the <xref:System.Console.WindowWidth%2A> property when output is redirected throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="e92d0-830">若要防止出现异常，只能在属性返回时设置此属性的值 <xref:System.Console.IsOutputRedirected%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-830">To prevent an exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-831">此示例演示 <xref:System.Console.SetWindowSize%2A> 方法和 <xref:System.Console.WindowWidth%2A> 和 <xref:System.Console.WindowHeight%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e92d0-831">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="e92d0-832">若要查看更改控制台窗口大小的完整效果，必须运行该示例。</span><span class="sxs-lookup"><span data-stu-id="e92d0-832">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="e92d0-833">该示例报告将控制台窗口的维度设置为85列和43行，然后等待按键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-833">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</span></span> <span data-ttu-id="e92d0-834">按任意键时，控制台窗口的维度会减半，并报告新维度，然后该示例将等待另一个按键。</span><span class="sxs-lookup"><span data-stu-id="e92d0-834">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="e92d0-835">最后，当按任意键时，控制台窗口将还原为其原始维度，该示例将终止。</span><span class="sxs-lookup"><span data-stu-id="e92d0-835">Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-836">属性 <see cref="P:System.Console.WindowWidth" /> 的值或属性 <see cref="P:System.Console.WindowHeight" /> 的值小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-836">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.</span></span>  
  
<span data-ttu-id="e92d0-837">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-837">-or-</span></span> 
<span data-ttu-id="e92d0-838">属性 <see cref="P:System.Console.WindowHeight" /> 的值加上属性 <see cref="P:System.Console.WindowTop" /> 的值大于或等于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-838">The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="e92d0-839">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e92d0-839">-or-</span></span> 
<span data-ttu-id="e92d0-840"><see cref="P:System.Console.WindowWidth" /> 属性的值或 <see cref="P:System.Console.WindowHeight" /> 属性的值大于当前屏幕分辨率和控制台字体的最大可能的窗口宽度或高度。</span><span class="sxs-lookup"><span data-stu-id="e92d0-840">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-841">读取或写入信息时发生错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-841">Error reading or writing information.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e92d0-842">设置操作在 Windows 之外的操作系统上调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-842">The set operation is invoked on an operating system other than Windows.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92d0-843">将指定值的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-843">Writes the text representation of the specified value or values to the standard output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(bool value);" />
      <MemberSignature Language="F#" Value="static member Write : bool -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-844">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-844">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-845">将指定的布尔值的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-845">Writes the text representation of the specified Boolean value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-846">的文本表示形式 `value` 是通过调用生成的 <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> ，该方法输出 <xref:System.Boolean.TrueString?displayProperty=nameWithType> 或 <xref:System.Boolean.FalseString?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-846">The text representation of `value` is produced by calling <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>, which outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-847">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-847">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-848">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-848">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(char value);" />
      <MemberSignature Language="F#" Value="static member Write : char -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-849">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-849">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-850">将指定的 Unicode 字符值写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-850">Writes the specified Unicode character value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92d0-851">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-851">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-852">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-852">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="static member Write : char[] -&gt; unit" Usage="System.Console.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e92d0-853">Unicode 字符数组。</span><span class="sxs-lookup"><span data-stu-id="e92d0-853">A Unicode character array.</span></span></param>
        <summary><span data-ttu-id="e92d0-854">将指定的 Unicode 字符数组写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-854">Writes the specified array of Unicode characters to the standard output stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-855">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-855">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Write : decimal -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-856">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-856">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-857">将指定的 <see cref="T:System.Decimal" /> 值的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-857">Writes the text representation of the specified <see cref="T:System.Decimal" /> value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-858">的文本表示形式 `value` 是通过调用生成的 <xref:System.Decimal.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-858">The text representation of `value` is produced by calling <xref:System.Decimal.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-859">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-859">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-860">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-860">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(double value);" />
      <MemberSignature Language="F#" Value="static member Write : double -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-861">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-861">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-862">将指定的双精度浮点值的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-862">Writes the text representation of the specified double-precision floating-point value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-863">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.Double.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-863">The text representation of `value` is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-864">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-864">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-865">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-865">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int value);" />
      <MemberSignature Language="F#" Value="static member Write : int -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-866">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-866">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-867">将指定的 32 位有符号整数值的文本表示写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-867">Writes the text representation of the specified 32-bit signed integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-868">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.Int32.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-868">The text representation of `value` is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-869">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-869">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-870">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-870">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(long value);" />
      <MemberSignature Language="F#" Value="static member Write : int64 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-871">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-871">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-872">将指定的 64 位有符号整数值的文本表示写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-872">Writes the text representation of the specified 64-bit signed integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-873">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.Int64.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-873">The text representation of `value` is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-874">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-874">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-875">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-875">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-876">要写入的值，或者为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-876">The value to write, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-877">将指定对象的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-877">Writes the text representation of the specified object to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-878">如果 `value` 为 `null` ，则不写入任何内容且不引发异常。</span><span class="sxs-lookup"><span data-stu-id="e92d0-878">If `value` is `null`, nothing is written and no exception is thrown.</span></span> <span data-ttu-id="e92d0-879">否则， `ToString` `value` 将调用的方法来生成其字符串表示形式，并将生成的字符串写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-879">Otherwise, the `ToString` method of `value` is called to produce its string representation, and the resulting string is written to the standard output stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-880">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-880">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-881">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-881">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(float value);" />
      <MemberSignature Language="F#" Value="static member Write : single -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-882">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-882">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-883">将指定的单精度浮点值的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-883">Writes the text representation of the specified single-precision floating-point value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-884">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.Single.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-884">The text representation of `value` is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-885">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-885">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-886">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-886">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-887">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-887">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-888">将指定的字符串值写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-888">Writes the specified string value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-889">如果 value 为 `null` ，则不会将任何内容写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-889">If value is `null`, nothing is written to the standard output stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-890">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-890">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-891">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-891">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member Write : uint32 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-892">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-892">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-893">将指定的 32 位无符号整数值的文本表示写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-893">Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-894">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-894">The text representation of `value` is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-895">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-895">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-896">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-896">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member Write : uint64 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-897">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-897">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-898">将指定的 64 位无符号整数值的文本表示写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-898">Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-899">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-899">The text representation of `value` is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-900">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-900">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-901">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-901">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object? arg0);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj -&gt; unit" Usage="System.Console.Write (format, arg0)" />
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e92d0-902">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-902">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="e92d0-903">要使用 <paramref name="format" /> 写入的对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-903">An object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-904">使用指定的格式信息将指定对象的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-904">Writes the text representation of the specified object to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-905">此方法使用 .NET Framework 的 [复合格式设置功能](/dotnet/standard/base-types/composite-formatting) 将对象的值转换为其文本表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-905">This method uses the [composite formatting feature](/dotnet/standard/base-types/composite-formatting) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="e92d0-906">生成的字符串将写入输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-906">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="e92d0-907">`format`参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="e92d0-907">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="e92d0-908">格式设置过程将每个格式项替换为相应对象的值的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-908">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="e92d0-909">格式项的语法为 `{` *索引*[ `,` *对齐方式*] [ `:` *格式说明符*] `}` ，它指定了必需的索引、格式化文本的可选长度和对齐方式，以及控制如何设置相应对象的值的格式的可选字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-909">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="e92d0-910">.NET Framework 提供了广泛的格式支持，以下格式设置主题更详细地介绍了这一支持。</span><span class="sxs-lookup"><span data-stu-id="e92d0-910">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="e92d0-911">有关方法（如、和的某些重载）支持的复合格式设置功能的详细信息 <xref:System.String.Format%2A> <xref:System.Text.StringBuilder.AppendFormat%2A> <xref:System.Console.WriteLine%2A> ，请参阅 [复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-911">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="e92d0-912">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-912">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-913">有关日期和时间格式说明符的详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) 和 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-913">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-914">有关枚举格式说明符的详细信息，请参阅 [枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-914">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-915">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-915">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-916">下面的示例使用 `WriteLine` 方法演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-916">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)] 
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="e92d0-917">下面的示例演示 <xref:System.Console.Write%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-917">The following example illustrates the use of the <xref:System.Console.Write%2A> method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-918">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-918">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-919"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-919"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e92d0-920"><paramref name="format" /> 中的格式规范无效。</span><span class="sxs-lookup"><span data-stu-id="e92d0-920">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="e92d0-921">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e92d0-921">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="e92d0-922">复合格式设置</span><span class="sxs-lookup"><span data-stu-id="e92d0-922">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, params object[]? arg);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj[] -&gt; unit" Usage="System.Console.Write (format, arg)" />
      <MemberSignature Language="C#" Value="public static void Write (string format, params object[] arg);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e92d0-923">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-923">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="e92d0-924">要使用 <paramref name="format" /> 写入的对象的数组。</span><span class="sxs-lookup"><span data-stu-id="e92d0-924">An array of objects to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-925">使用指定的格式信息将指定的对象数组的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-925">Writes the text representation of the specified array of objects to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-926">此方法使用 .NET Framework 的  [复合格式设置功能](/dotnet/standard/base-types/composite-formatting) 将对象的值转换为其文本表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-926">This method uses the  [composite formatting feature](/dotnet/standard/base-types/composite-formatting) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="e92d0-927">生成的字符串将写入输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-927">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="e92d0-928">`format`参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="e92d0-928">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="e92d0-929">格式设置过程将每个格式项替换为相应对象的值的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-929">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="e92d0-930">格式项的语法为 `{` *索引*[ `,` *对齐方式*] [ `:` *格式说明符*] `}` ，它指定了必需的索引、格式化文本的可选长度和对齐方式，以及控制如何设置相应对象的值的格式的可选字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-930">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="e92d0-931">.NET Framework 提供了广泛的格式支持，以下格式设置主题更详细地介绍了这一支持。</span><span class="sxs-lookup"><span data-stu-id="e92d0-931">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="e92d0-932">有关方法（如、和的某些重载）支持的复合格式设置功能的详细信息 <xref:System.String.Format%2A> <xref:System.Text.StringBuilder.AppendFormat%2A> <xref:System.Console.WriteLine%2A> ，请参阅 [复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-932">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="e92d0-933">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-933">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-934">有关日期和时间格式说明符的详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) 和 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-934">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-935">有关枚举格式说明符的详细信息，请参阅 [枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-935">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-936">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-936">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="e92d0-937">`arg`参数是一个参数数组。</span><span class="sxs-lookup"><span data-stu-id="e92d0-937">The `arg` parameter is a parameter array.</span></span> <span data-ttu-id="e92d0-938">参数可以作为数组或五个或更多项的列表传递给方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-938">Arguments  can be passed to the method either as an array or as list of five or more items.</span></span> <span data-ttu-id="e92d0-939">这些示例演示了两种形式的方法调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-939">The examples illustrate both forms of method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-940">下面的示例定义了 `Person` 一个具有多个属性的类，这些属性提供有关用户的信息。</span><span class="sxs-lookup"><span data-stu-id="e92d0-940">The following example defines a `Person` class with a number of properties that provide information about a person.</span></span> <span data-ttu-id="e92d0-941">其 `GetDescription` 方法返回数组，该数组包含除一个属性值之外的所有属性值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-941">Its `GetDescription` method returns an array that contains all of the property values except one.</span></span> <span data-ttu-id="e92d0-942">然后，该示例使用方法返回的数组  `GetDescription` 来显示 Person 对象的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-942">The example then uses the array returned by the  `GetDescription` method  to display the values of the Person object.</span></span>  
  
 [!code-csharp[System.Console.Write#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams1.cs#1)]
 [!code-vb[System.Console.Write#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams1.vb#1)]  
  
 <span data-ttu-id="e92d0-943">请注意，该示例调用 <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29> 方法而不是 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29> 方法，因为它会尝试 `Person.Remarks` 在同一行中显示属性的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-943">Note that the example calls the <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29> method rather than the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29> method because it attempts to display the value of the `Person.Remarks` property on the same line.</span></span> <span data-ttu-id="e92d0-944">为此，它将检查和属性的值 <xref:System.Console.CursorLeft%2A> ， <xref:System.Console.WindowWidth%2A> 以确定是否有足够的空间来容纳注释。</span><span class="sxs-lookup"><span data-stu-id="e92d0-944">To do this, it examines the value of the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to determine whether there is enough space for the remark to fit.</span></span>  <span data-ttu-id="e92d0-945">如果存在，则会显示该行。</span><span class="sxs-lookup"><span data-stu-id="e92d0-945">If there is, it displays the line.</span></span> <span data-ttu-id="e92d0-946">如果不是，它将写入一行，缩进三个空格，并显示注释。</span><span class="sxs-lookup"><span data-stu-id="e92d0-946">If not, it writes a line, indents three spaces, and displays the remark.</span></span>  
  
 <span data-ttu-id="e92d0-947">下面的示例与第一个示例相同，只不过它将五项列表作为 `arg` 参数而不是参数数组提供。</span><span class="sxs-lookup"><span data-stu-id="e92d0-947">The following example is identical to the first, except that it supplies a five-item list as the `arg` argument instead of a parameter array.</span></span>  
  
 [!code-csharp[System.Console.Write#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams2.cs#2)]
 [!code-vb[System.Console.Write#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-948">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-948">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-949"><paramref name="format" /> 或 <paramref name="arg" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-949"><paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e92d0-950"><paramref name="format" /> 中的格式规范无效。</span><span class="sxs-lookup"><span data-stu-id="e92d0-950">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e92d0-951">C + + 代码不会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-951">This method is not called by C++ code.</span></span> <span data-ttu-id="e92d0-952">C + + [编译器将调用，其中包含](xref:System.Console.Write*) 一个字符串和一个由四个或更多对象参数的列表作为对的调用 <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-952">The C++ compiler resolves calls to [System.Console.Write](xref:System.Console.Write*) that include a string and a list of four or more object parameters as a call to <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />.</span></span> <span data-ttu-id="e92d0-953">它可将对的调用解析为包含字符串的 [写入](xref:System.Console.Write*) ，并将对象数组作为对的调用 <see cref="M:System.Console.Write(System.String,System.Object)" /> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-953">It resolves calls to [System.Console.Write](xref:System.Console.Write*) that include a string and an object array as a call to <see cref="M:System.Console.Write(System.String,System.Object)" />.</span></span></para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="e92d0-954">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e92d0-954">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="e92d0-955">复合格式设置</span><span class="sxs-lookup"><span data-stu-id="e92d0-955">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="static member Write : char[] * int * int -&gt; unit" Usage="System.Console.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e92d0-956">Unicode 字符的数组。</span><span class="sxs-lookup"><span data-stu-id="e92d0-956">An array of Unicode characters.</span></span></param>
        <param name="index"><span data-ttu-id="e92d0-957"><paramref name="buffer" /> 中的起始位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-957">The starting position in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="e92d0-958">要写入的字符数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-958">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-959">将指定的 Unicode 字符子数组写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-959">Writes the specified subarray of Unicode characters to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-960">此方法将 `count` 从的位置开始 `index` 的字符写入 `buffer` 标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-960">This method writes `count` characters starting at position `index` of `buffer` to the standard output stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-961"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-961"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-962"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-962"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92d0-963"><paramref name="index" /> 加 <paramref name="count" /> 指定不在 <paramref name="buffer" /> 内的位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-963"><paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-964">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-964">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string? format, object arg0, object arg1);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1)" />
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e92d0-965">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-965">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="e92d0-966">要使用 <paramref name="format" /> 写入的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-966">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="e92d0-967">要使用 <paramref name="format" /> 写入的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-967">The second object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-968">使用指定的格式信息将指定对象的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-968">Writes the text representation of the specified objects to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-969">此方法使用 .NET Framework 的 [复合格式设置功能](/dotnet/standard/base-types/composite-formatting) 将对象的值转换为其文本表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-969">This method uses the [composite formatting feature](/dotnet/standard/base-types/composite-formatting) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="e92d0-970">生成的字符串将写入输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-970">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="e92d0-971">`format`参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="e92d0-971">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="e92d0-972">格式设置过程将每个格式项替换为相应对象的值的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-972">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="e92d0-973">格式项的语法为 `{` *索引*[ `,` *对齐方式*] [ `:` *格式说明符*] `}` ，它指定了必需的索引、格式化文本的可选长度和对齐方式，以及控制如何设置相应对象的值的格式的可选字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-973">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="e92d0-974">.NET Framework 提供了广泛的格式支持，以下格式设置主题更详细地介绍了这一支持。</span><span class="sxs-lookup"><span data-stu-id="e92d0-974">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="e92d0-975">有关方法（如、和的某些重载）支持的复合格式设置功能的详细信息 <xref:System.String.Format%2A> <xref:System.Text.StringBuilder.AppendFormat%2A> <xref:System.Console.WriteLine%2A> ，请参阅 [复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-975">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="e92d0-976">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-976">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-977">有关日期和时间格式说明符的详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) 和 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-977">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-978">有关枚举格式说明符的详细信息，请参阅 [枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-978">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-979">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-979">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-980">下面的示例使用 `WriteLine` 方法演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-980">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="e92d0-981">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-981">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-982">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-982">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-983"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-983"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e92d0-984"><paramref name="format" /> 中的格式规范无效。</span><span class="sxs-lookup"><span data-stu-id="e92d0-984">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="e92d0-985">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e92d0-985">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="e92d0-986">复合格式设置</span><span class="sxs-lookup"><span data-stu-id="e92d0-986">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string? format, object arg0, object arg1, object arg2);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1, arg2)" />
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e92d0-987">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-987">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="e92d0-988">要使用 <paramref name="format" /> 写入的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-988">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="e92d0-989">要使用 <paramref name="format" /> 写入的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-989">The second object to write using <paramref name="format" />.</span></span></param>
        <param name="arg2"><span data-ttu-id="e92d0-990">要使用 <paramref name="format" /> 写入的第三个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-990">The third object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-991">使用指定的格式信息将指定对象的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-991">Writes the text representation of the specified objects to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-992">此方法使用 .NET Framework 的 [复合格式设置功能](/dotnet/standard/base-types/composite-formatting) 将对象的值转换为其文本表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-992">This method uses the [composite formatting feature](/dotnet/standard/base-types/composite-formatting) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="e92d0-993">生成的字符串将写入输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-993">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="e92d0-994">`format`参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="e92d0-994">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="e92d0-995">格式设置过程将每个格式项替换为相应对象的值的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-995">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="e92d0-996">格式项的语法为 `{` *索引*[ `,` *对齐方式*] [ `:` *格式说明符*] `}` ，它指定了必需的索引、格式化文本的可选长度和对齐方式，以及控制如何设置相应对象的值的格式的可选字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-996">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="e92d0-997">.NET Framework 提供了广泛的格式支持，以下格式设置主题更详细地介绍了这一支持。</span><span class="sxs-lookup"><span data-stu-id="e92d0-997">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="e92d0-998">有关方法（如、和的某些重载）支持的复合格式设置功能的详细信息 <xref:System.String.Format%2A> <xref:System.Text.StringBuilder.AppendFormat%2A> <xref:System.Console.WriteLine%2A> ，请参阅 [复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-998">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="e92d0-999">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-999">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1000">有关日期和时间格式说明符的详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) 和 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1000">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1001">有关枚举格式说明符的详细信息，请参阅 [枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1001">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1002">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1002">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1003">下面的示例使用 `WriteLine` 方法演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1003">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="e92d0-1004">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1004">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1005">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1005">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-1006"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1006"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e92d0-1007"><paramref name="format" /> 中的格式规范无效。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1007">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="e92d0-1008">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e92d0-1008">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="e92d0-1009">复合格式设置</span><span class="sxs-lookup"><span data-stu-id="e92d0-1009">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Object" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e92d0-1010">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1010">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="e92d0-1011">要使用 <paramref name="format" /> 写入的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1011">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="e92d0-1012">要使用 <paramref name="format" /> 写入的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1012">The second object to write using <paramref name="format" />.</span></span></param>
        <param name="arg2"><span data-ttu-id="e92d0-1013">要使用 <paramref name="format" /> 写入的第三个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1013">The third object to write using <paramref name="format" />.</span></span></param>
        <param name="arg3"><span data-ttu-id="e92d0-1014">要使用 <paramref name="format" /> 写入的第四个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1014">The fourth object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-1015">使用指定的格式信息将指定的对象和可变长度参数列表的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1015">Writes the text representation of the specified objects and variable-length parameter list to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e92d0-1016">此 API 不符合 CLS。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1016">This API is not CLS-compliant.</span></span> <span data-ttu-id="e92d0-1017">符合 CLS 的替代方法是 <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1017">The CLS-compliant alternative is <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e92d0-1018">C # 和 Visual Basic 编译器会自动将对此方法的调用解析为对的调用 <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1018">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e92d0-1019">此方法使用 .NET Framework 的 [复合格式设置功能](/dotnet/standard/base-types/composite-formatting) 将对象的值转换为其文本表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1019">This method uses the [composite formatting feature](/dotnet/standard/base-types/composite-formatting) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="e92d0-1020">生成的字符串将写入输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1020">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="e92d0-1021">`format`参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1021">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="e92d0-1022">格式设置过程将每个格式项替换为相应对象的值的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1022">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="e92d0-1023">格式项的语法为 `{` *索引*[ `,` *对齐方式*] [ `:` *格式说明符*] `}` ，它指定了必需的索引、格式化文本的可选长度和对齐方式，以及控制如何设置相应对象的值的格式的可选字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1023">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="e92d0-1024">.NET Framework 提供了广泛的格式支持，以下格式设置主题更详细地介绍了这一支持。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1024">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="e92d0-1025">有关方法（如、和的某些重载）支持的复合格式设置功能的详细信息 <xref:System.String.Format%2A> <xref:System.Text.StringBuilder.AppendFormat%2A> <xref:System.Console.WriteLine%2A> ，请参阅 [复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1025">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="e92d0-1026">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1026">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1027">有关日期和时间格式说明符的详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) 和 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1027">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1028">有关枚举格式说明符的详细信息，请参阅 [枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1028">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1029">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1029">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1030">下面的示例演示如何在方法中使用变量参数 <xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1030">The following example illustrates the use of variable parameters with the <xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="e92d0-1031">使用复合格式字符串和五个格式项调用方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1031">The method is called with a composite format string and five format items.</span></span>  
  
 [!code-cpp[System.Console.Write#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.write/cpp/con_write.cpp#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1032">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1032">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-1033"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1033"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e92d0-1034"><paramref name="format" /> 中的格式规范无效。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1034">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e92d0-1035">此方法使用关键字进行标记 <see langword="vararg" /> ，这意味着它支持数量可变的参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1035">This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters.</span></span> <span data-ttu-id="e92d0-1036">可以从 Visual C++ 调用方法，但不能从 c # 或 Visual Basic 代码中调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1036">The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</span></span> <span data-ttu-id="e92d0-1037">C # 和 Visual Basic 编译器将调用解析为对的调用 <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /> <see cref="M:System.Console.Write(System.String,System.Object[])" /> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1037">The C# and Visual Basic compilers resolve calls to <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.Console.Write(System.String,System.Object[])" />.</span></span></para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="e92d0-1038">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e92d0-1038">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="e92d0-1039">复合格式设置</span><span class="sxs-lookup"><span data-stu-id="e92d0-1039">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92d0-1040">将指定的数据（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1040">Writes the specified data, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1041">默认的行终止符是一个字符串，其值为回车符后跟一个换行符 ( "\r\n" （c # 中）或 `vbCrLf` Visual Basic) 中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1041">The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or `vbCrLf` in Visual Basic).</span></span> <span data-ttu-id="e92d0-1042">可以通过将 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 属性的属性设置 <xref:System.Console.Out%2A> 为另一个字符串来更改行终止符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1042">You can change the line terminator by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> property to another string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine();" />
      <MemberSignature Language="F#" Value="static member WriteLine : unit -&gt; unit" Usage="System.Console.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92d0-1043">将当前行终止符写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1043">Writes the current line terminator to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1044">默认的行终止符是一个字符串，其值为回车符后跟一个换行符 ( "\r\n" （c # 中）或 `vbCrLf` Visual Basic) 中。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1044">The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or `vbCrLf` in Visual Basic).</span></span> <span data-ttu-id="e92d0-1045">可以通过将 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 属性的属性设置 <xref:System.Console.Out%2A> 为另一个字符串来更改行终止符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1045">You can change the line terminator by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> property to another string.</span></span> <span data-ttu-id="e92d0-1046">说明如示例所示。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1046">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1047">该示例将行终止符从其默认值 "\r\n" 更改 `vbCrLf` 为 "\r\n\r\n" 或 `vbCrLf`  +  `vbCrLf` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1047">The example changes the line terminator from its default value of "\r\n" or `vbCrLf` to "\r\n\r\n" or `vbCrLf` + `vbCrLf`.</span></span> <span data-ttu-id="e92d0-1048">然后，它调用 <xref:System.Console.WriteLine> 和 <xref:System.Console.WriteLine%28System.String%29> 方法以将输出显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1048">It then calls the <xref:System.Console.WriteLine> and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp-interactive[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1049">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1049">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : bool -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-1050">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1050">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1051">将指定布尔值的文本表示形式（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1051">Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1052">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1052">The text representation of `value` is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e92d0-1053">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1053">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1054">下面的示例将生成10个随机整数，并使用 <xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType> 方法来指示它们是否为偶数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1054">The following example generates ten random integers and uses the <xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType> method to indicate whether they are even.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_boolean1.cpp#4)]
 [!code-csharp-interactive[System.Console.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_boolean1.cs#4)]
 [!code-vb[System.Console.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_boolean1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1055">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1055">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-1056">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1056">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1057">将指定的 Unicode 字符值（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1057">Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1058">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1058">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1059">下面的示例是一个 tip 计算器，它计算18% 刀尖，并使用 <xref:System.Console.WriteLine%2A> 方法来显示原始费用的量、笔尖量和总金额。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1059">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="e92d0-1060">该示例是一个控制台应用程序，要求用户提供原始费用量作为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1060">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1061">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1061">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char[] -&gt; unit" Usage="System.Console.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e92d0-1062">Unicode 字符数组。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1062">A Unicode character array.</span></span></param>
        <summary><span data-ttu-id="e92d0-1063">将指定的 Unicode 字符数组（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1063">Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1064">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1064">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1065">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1065">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : decimal -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-1066">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1066">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1067">将指定的 <see cref="T:System.Decimal" /> 值的文本表示形式（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1067">Writes the text representation of the specified <see cref="T:System.Decimal" /> value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1068">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.Decimal.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1068">The text representation of `value` is produced by calling the <xref:System.Decimal.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e92d0-1069">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1069">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1070">下面的示例是一个 tip 计算器，它计算18% 刀尖，并使用 <xref:System.Console.WriteLine%2A> 方法来显示原始费用的量、笔尖量和总金额。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1070">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="e92d0-1071">该示例是一个控制台应用程序，要求用户提供原始费用量作为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1071">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1072">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1072">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : double -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-1073">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1073">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1074">将指定的双精度浮点值的文本表示形式（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1074">Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1075">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.Double.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1075">The text representation of `value` is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e92d0-1076">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1076">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1077">下面的示例是一个 tip 计算器，它计算18% 刀尖，并使用 <xref:System.Console.WriteLine%2A> 方法来显示原始费用的量、笔尖量和总金额。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1077">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="e92d0-1078">该示例是一个控制台应用程序，要求用户提供原始费用量作为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1078">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1079">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1079">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-1080">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1080">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1081">将指定的 32 位有符号整数值的文本表示（后跟当前行的结束符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1081">Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1082">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.Int32.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1082">The text representation of `value` is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e92d0-1083">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1083">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1084">下面的示例是一个 tip 计算器，它计算18% 刀尖，并使用 <xref:System.Console.WriteLine%2A> 方法来显示原始费用的量、笔尖量和总金额。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1084">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="e92d0-1085">该示例是一个控制台应用程序，要求用户提供原始费用量作为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1085">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1086">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1086">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int64 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-1087">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1087">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1088">将指定的 64 位有符号整数值的文本表示（后跟当前行的结束符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1088">Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1089">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.Int64.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1089">The text representation of `value` is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e92d0-1090">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1090">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1091">下面的示例是一个 tip 计算器，它计算18% 刀尖，并使用 <xref:System.Console.WriteLine%2A> 方法来显示原始费用的量、笔尖量和总金额。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1091">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="e92d0-1092">该示例是一个控制台应用程序，要求用户提供原始费用量作为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1092">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1093">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1093">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-1094">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1094">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1095">将指定对象的文本表示形式（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1095">Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1096">如果 `value` 为 `null`，则只写入行终止符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1096">If `value` is `null`, only the line terminator is written.</span></span> <span data-ttu-id="e92d0-1097">否则， `ToString` `value` 将调用的方法来生成其字符串表示形式，并将生成的字符串写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1097">Otherwise, the `ToString` method of `value` is called to produce its string representation, and the resulting string is written to the standard output stream.</span></span>  
  
 <span data-ttu-id="e92d0-1098">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1098">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1099">下面的示例使用 <xref:System.Console.WriteLine%28System.Object%29> 方法将对象数组中的每个值显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1099">The following example uses the <xref:System.Console.WriteLine%28System.Object%29> method to display each value in an object array to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_obj1.cpp#3)]
 [!code-csharp-interactive[System.Console.WriteLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_obj1.cs#3)]
 [!code-vb[System.Console.WriteLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_obj1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1100">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1100">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : single -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-1101">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1101">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1102">将指定的单精度浮点值的文本表示形式（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1102">Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1103">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.Single.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1103">The text representation of `value` is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e92d0-1104">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1104">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1105">下面的示例是一个 tip 计算器，它计算18% 刀尖，并使用 <xref:System.Console.WriteLine%2A> 方法来显示原始费用的量、笔尖量和总金额。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1105">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="e92d0-1106">该示例是一个控制台应用程序，要求用户提供原始费用量作为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1106">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1107">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1107">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-1108">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1108">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1109">将指定的字符串值（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1109">Writes the specified string value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1110">如果 value 为 `null` ，则仅将行终止符写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1110">If value is `null`, only the line terminator is written to the standard output stream.</span></span>  
  
 <span data-ttu-id="e92d0-1111">有关行终止符的详细信息，请参阅方法的 "备注" 部分 <xref:System.Console.WriteLine> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1111">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1112">该示例将行终止符从其默认值 "\r\n" 更改 `vbCrLf` 为 "\r\n\r\n" 或 `vbCrLf`  +  `vbCrLf` 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1112">The example changes the line terminator from its default value of "\r\n" or `vbCrLf` to "\r\n\r\n" or `vbCrLf` + `vbCrLf`.</span></span> <span data-ttu-id="e92d0-1113">然后，它调用 <xref:System.Console.WriteLine> 和 <xref:System.Console.WriteLine%28System.String%29> 方法以将输出显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1113">It then calls the <xref:System.Console.WriteLine> and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp-interactive[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1114">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1114">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : uint32 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-1115">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1115">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1116">将指定的 32 位无符号的整数值的文本表示（后跟当前行的结束符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1116">Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1117">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1117">The text representation of `value` is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e92d0-1118">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1118">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1119">下面的示例是一个 tip 计算器，它计算18% 刀尖，并使用 <xref:System.Console.WriteLine%2A> 方法来显示原始费用的量、笔尖量和总金额。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1119">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="e92d0-1120">该示例是一个控制台应用程序，要求用户提供原始费用量作为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1120">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1121">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1121">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : uint64 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e92d0-1122">要写入的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1122">The value to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1123">将指定的 64 位无符号的整数值的文本表示（后跟当前行的结束符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1123">Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1124">的文本表示形式 `value` 是通过调用方法生成的 <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1124">The text representation of `value` is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e92d0-1125">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1125">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1126">下面的示例是一个 tip 计算器，它计算18% 刀尖，并使用 <xref:System.Console.WriteLine%2A> 方法来显示原始费用的量、笔尖量和总金额。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1126">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="e92d0-1127">该示例是一个控制台应用程序，要求用户提供原始费用量作为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1127">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1128">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1128">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object? arg0);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e92d0-1129">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1129">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="e92d0-1130">要使用 <paramref name="format" /> 写入的对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1130">An object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-1131">使用指定的格式信息，将指定对象（后跟当前行终止符）的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1131">Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1132">此方法使用 .NET Framework 的 [复合格式设置功能](/dotnet/standard/base-types/composite-formatting) 将对象的值转换为其文本表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1132">This method uses the [composite formatting feature](/dotnet/standard/base-types/composite-formatting) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="e92d0-1133">生成的字符串将写入输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1133">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="e92d0-1134">`format`参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1134">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="e92d0-1135">格式设置过程将每个格式项替换为相应对象的值的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1135">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="e92d0-1136">格式项的语法为 `{` *索引*[ `,` *对齐方式*] [ `:` *格式说明符*] `}` ，它指定了必需的索引、格式化文本的可选长度和对齐方式，以及控制如何设置相应对象的值的格式的可选字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1136">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="e92d0-1137">.NET Framework 提供了广泛的格式支持，以下格式设置主题更详细地介绍了这一支持。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1137">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="e92d0-1138">有关方法（如、和的某些重载）支持的复合格式设置功能的详细信息 <xref:System.String.Format%2A> <xref:System.Text.StringBuilder.AppendFormat%2A> <xref:System.Console.WriteLine%2A> ，请参阅 [复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1138">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="e92d0-1139">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1139">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1140">有关日期和时间格式说明符的详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) 和 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1140">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1141">有关枚举格式说明符的详细信息，请参阅 [枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1141">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1142">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1142">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="e92d0-1143">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1143">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1144">下面的示例调用 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> 方法以显示5个随机生成 <xref:System.Boolean> 的值。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1144">The following example calls the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> method to display five randomly generated <xref:System.Boolean> values.</span></span>  
  
 [!code-csharp-interactive[System.Console.WriteLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine6.cs#6)]
 [!code-vb[System.Console.WriteLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine6.vb#6)]  
  
 <span data-ttu-id="e92d0-1145">下面的示例调用 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> 方法以显示当前日期。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1145">The following example calls the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> method to display the current date.</span></span>   <span data-ttu-id="e92d0-1146">请注意，参数中的格式项 `format` 使用 "D" [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) ，以当前区域性的长日期格式显示日期。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1146">Note that the format item in the `format` argument uses the "D" [standard date and time format string](/dotnet/standard/base-types/standard-date-and-time-format-strings) to display the date in the long date format of the current culture.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine7.cs#7)]
 [!code-vb[System.Console.WriteLine#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1147">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1147">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-1148"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1148"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e92d0-1149"><paramref name="format" /> 中的格式规范无效。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1149">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="e92d0-1150">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e92d0-1150">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="e92d0-1151">复合格式设置</span><span class="sxs-lookup"><span data-stu-id="e92d0-1151">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[]? arg);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj[] -&gt; unit" Usage="System.Console.WriteLine (format, arg)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] arg);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e92d0-1152">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1152">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="e92d0-1153">要使用 <paramref name="format" /> 写入的对象的数组。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1153">An array of objects to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-1154">使用指定的格式信息，将指定的对象数组（后跟当前行终止符）的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1154">Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1155">此方法使用 .NET Framework 的  [复合格式设置功能](/dotnet/standard/base-types/composite-formatting) 将对象的值转换为其文本表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1155">This method uses the  [composite formatting feature](/dotnet/standard/base-types/composite-formatting) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="e92d0-1156">生成的字符串将写入输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1156">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="e92d0-1157">`format`参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1157">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="e92d0-1158">格式设置过程将每个格式项替换为相应对象的值的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1158">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="e92d0-1159">格式项的语法为 `{` *索引*[ `,` *对齐方式*] [ `:` *格式说明符*] `}` ，它指定了必需的索引、格式化文本的可选长度和对齐方式，以及控制如何设置相应对象的值的格式的可选字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1159">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="e92d0-1160">.NET Framework 提供了广泛的格式支持，以下格式设置主题更详细地介绍了这一支持。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1160">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="e92d0-1161">有关方法（如、和的某些重载）支持的复合格式设置功能的详细信息 <xref:System.String.Format%2A> <xref:System.Text.StringBuilder.AppendFormat%2A> <xref:System.Console.WriteLine%2A> ，请参阅 [复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1161">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="e92d0-1162">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1162">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1163">有关日期和时间格式说明符的详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) 和 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1163">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1164">有关枚举格式说明符的详细信息，请参阅 [枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1164">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1165">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1165">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="e92d0-1166">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1166">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1167">下面的示例演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1167">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="e92d0-1168">下面的示例是一个 tip 计算器，它计算18% 刀尖，并使用 <xref:System.Console.WriteLine%2A> 方法来显示原始费用的量、笔尖量和总金额。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1168">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="e92d0-1169">该示例是一个控制台应用程序，要求用户提供原始费用量作为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1169">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1170">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1170">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-1171"><paramref name="format" /> 或 <paramref name="arg" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1171"><paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e92d0-1172"><paramref name="format" /> 中的格式规范无效。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1172">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e92d0-1173">C + + 代码不会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1173">This method is not called by C++ code.</span></span> <span data-ttu-id="e92d0-1174">C + + 编译器解析对包含字符串和四个或更多对象参数的列表（作为对的调用）的对 [system.object](xref:System.Console.WriteLine*) 的调用 <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1174">The C++ compiler resolves calls to [System.Console.WriteLine](xref:System.Console.WriteLine*) that include a string and a list of four or more object parameters as a call to <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />.</span></span> <span data-ttu-id="e92d0-1175">它将对包含字符串和对象数组的 [system.object](xref:System.Console.WriteLine*) 的调用解析为对的调用 <see cref="M:System.Console.WriteLine(System.String,System.Object)" /> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1175">It resolves calls to [System.Console.WriteLine](xref:System.Console.WriteLine*) that include a string and an object array as a call to <see cref="M:System.Console.WriteLine(System.String,System.Object)" />.</span></span></para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="e92d0-1176">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e92d0-1176">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="e92d0-1177">复合格式设置</span><span class="sxs-lookup"><span data-stu-id="e92d0-1177">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char[] * int * int -&gt; unit" Usage="System.Console.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e92d0-1178">Unicode 字符的数组。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1178">An array of Unicode characters.</span></span></param>
        <param name="index"><span data-ttu-id="e92d0-1179"><paramref name="buffer" /> 中的起始位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1179">The starting position in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="e92d0-1180">要写入的字符数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1180">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="e92d0-1181">将指定的 Unicode 字符子数组（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1181">Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1182">此方法将 `count` 从的位置开始 `index` 的字符写入 `buffer` 标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1182">This method writes `count` characters starting at position `index` of `buffer` to the standard output stream.</span></span>  
  
 <span data-ttu-id="e92d0-1183">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1183">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-1184"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1184"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e92d0-1185"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1185"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92d0-1186"><paramref name="index" /> 加 <paramref name="count" /> 指定不在 <paramref name="buffer" /> 内的位置。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1186"><paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1187">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1187">An I/O error occurred.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string? format, object arg0, object arg1);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e92d0-1188">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1188">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="e92d0-1189">要使用 <paramref name="format" /> 写入的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1189">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="e92d0-1190">要使用 <paramref name="format" /> 写入的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1190">The second object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-1191">使用指定的格式信息，将指定对象的文本表示形式（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1191">Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1192">此方法使用 .NET Framework 的 [复合格式设置功能](/dotnet/standard/base-types/composite-formatting) 将对象的值转换为其文本表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1192">This method uses the [composite formatting feature](/dotnet/standard/base-types/composite-formatting) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="e92d0-1193">生成的字符串将写入输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1193">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="e92d0-1194">`format`参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1194">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="e92d0-1195">格式设置过程将每个格式项替换为相应对象的值的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1195">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="e92d0-1196">格式项的语法为 `{` *索引*[ `,` *对齐方式*] [ `:` *格式说明符*] `}` ，它指定了必需的索引、格式化文本的可选长度和对齐方式，以及控制如何设置相应对象的值的格式的可选字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1196">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="e92d0-1197">.NET Framework 提供了广泛的格式支持，以下格式设置主题更详细地介绍了这一支持。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1197">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="e92d0-1198">有关方法（如、和的某些重载）支持的复合格式设置功能的详细信息 <xref:System.String.Format%2A> <xref:System.Text.StringBuilder.AppendFormat%2A> <xref:System.Console.WriteLine%2A> ，请参阅 [复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1198">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="e92d0-1199">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1199">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1200">有关日期和时间格式说明符的详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) 和 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1200">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1201">有关枚举格式说明符的详细信息，请参阅 [枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1201">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1202">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1202">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="e92d0-1203">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1203">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1204">下面的示例演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1204">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="e92d0-1205">下面的示例是一个 tip 计算器，它计算18% 刀尖，并使用 <xref:System.Console.WriteLine%2A> 方法来显示原始费用的量、笔尖量和总金额。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1205">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="e92d0-1206">该示例是一个控制台应用程序，要求用户提供原始费用量作为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1206">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1207">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1207">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-1208"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1208"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e92d0-1209"><paramref name="format" /> 中的格式规范无效。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1209">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="e92d0-1210">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e92d0-1210">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="e92d0-1211">复合格式设置</span><span class="sxs-lookup"><span data-stu-id="e92d0-1211">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string? format, object arg0, object arg1, object arg2);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1, arg2)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e92d0-1212">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1212">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="e92d0-1213">要使用 <paramref name="format" /> 写入的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1213">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="e92d0-1214">要使用 <paramref name="format" /> 写入的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1214">The second object to write using <paramref name="format" />.</span></span></param>
        <param name="arg2"><span data-ttu-id="e92d0-1215">要使用 <paramref name="format" /> 写入的第三个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1215">The third object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-1216">使用指定的格式信息，将指定对象的文本表示形式（后跟当前行终止符）写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1216">Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92d0-1217">此方法使用 .NET Framework 的 [复合格式设置功能](/dotnet/standard/base-types/composite-formatting) 将对象的值转换为其文本表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1217">This method uses the [composite formatting feature](/dotnet/standard/base-types/composite-formatting) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="e92d0-1218">生成的字符串将写入输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1218">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="e92d0-1219">`format`参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1219">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="e92d0-1220">格式设置过程将每个格式项替换为相应对象的值的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1220">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="e92d0-1221">格式项的语法为 `{` *索引*[ `,` *对齐方式*] [ `:` *格式说明符*] `}` ，它指定了必需的索引、格式化文本的可选长度和对齐方式，以及控制如何设置相应对象的值的格式的可选字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1221">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="e92d0-1222">.NET Framework 提供了广泛的格式支持，以下格式设置主题更详细地介绍了这一支持。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1222">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="e92d0-1223">有关方法（如、和的某些重载）支持的复合格式设置功能的详细信息 <xref:System.String.Format%2A> <xref:System.Text.StringBuilder.AppendFormat%2A> <xref:System.Console.WriteLine%2A> ，请参阅 [复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1223">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="e92d0-1224">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1224">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1225">有关日期和时间格式说明符的详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) 和 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1225">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1226">有关枚举格式说明符的详细信息，请参阅 [枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1226">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1227">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1227">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="e92d0-1228">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1228">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1229">下面的示例演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1229">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="e92d0-1230">下面的示例是一个 tip 计算器，它计算18% 刀尖，并使用 <xref:System.Console.WriteLine%2A> 方法来显示原始费用的量、笔尖量和总金额。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1230">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="e92d0-1231">该示例是一个控制台应用程序，要求用户提供原始费用量作为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1231">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1232">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1232">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-1233"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1233"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e92d0-1234"><paramref name="format" /> 中的格式规范无效。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1234">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="e92d0-1235">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e92d0-1235">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="e92d0-1236">复合格式设置</span><span class="sxs-lookup"><span data-stu-id="e92d0-1236">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Object" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e92d0-1237">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1237">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="e92d0-1238">要使用 <paramref name="format" /> 写入的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1238">The first object to write using <paramref name="format" />.</span></span></param>
        <param name="arg1"><span data-ttu-id="e92d0-1239">要使用 <paramref name="format" /> 写入的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1239">The second object to write using <paramref name="format" />.</span></span></param>
        <param name="arg2"><span data-ttu-id="e92d0-1240">要使用 <paramref name="format" /> 写入的第三个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1240">The third object to write using <paramref name="format" />.</span></span></param>
        <param name="arg3"><span data-ttu-id="e92d0-1241">要使用 <paramref name="format" /> 写入的第四个对象。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1241">The fourth object to write using <paramref name="format" />.</span></span></param>
        <summary><span data-ttu-id="e92d0-1242">使用指定的格式信息，将指定的对象和可变长度参数列表（后跟当前行终止符）的文本表示形式写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1242">Writes the text representation of the specified objects and variable-length parameter list, followed by the current line terminator, to the standard output stream using the specified format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e92d0-1243">此 API 不符合 CLS。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1243">This API is not CLS-compliant.</span></span> <span data-ttu-id="e92d0-1244">符合 CLS 的替代方法是 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1244">The CLS-compliant alternative is <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e92d0-1245">C # 和 Visual Basic 编译器会自动将对此方法的调用解析为对的调用 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1245">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e92d0-1246">此方法使用 .NET Framework 的 [复合格式设置功能](/dotnet/standard/base-types/composite-formatting) 将对象的值转换为其文本表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1246">This method uses the [composite formatting feature](/dotnet/standard/base-types/composite-formatting) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="e92d0-1247">生成的字符串将写入输出流。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1247">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="e92d0-1248">`format`参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1248">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="e92d0-1249">格式设置过程将每个格式项替换为相应对象的值的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1249">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="e92d0-1250">格式项的语法为 `{` *索引*[ `,` *对齐方式*] [ `:` *格式说明符*] `}` ，它指定了必需的索引、格式化文本的可选长度和对齐方式，以及控制如何设置相应对象的值的格式的可选字符串。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1250">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="e92d0-1251">.NET Framework 提供了广泛的格式支持，以下格式设置主题更详细地介绍了这一支持。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1251">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="e92d0-1252">有关方法（如、和的某些重载）支持的复合格式设置功能的详细信息 <xref:System.String.Format%2A> <xref:System.Text.StringBuilder.AppendFormat%2A> <xref:System.Console.WriteLine%2A> ，请参阅 [复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1252">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="e92d0-1253">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1253">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1254">有关日期和时间格式说明符的详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) 和 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1254">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1255">有关枚举格式说明符的详细信息，请参阅 [枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1255">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="e92d0-1256">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1256">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="e92d0-1257">有关行终止符的详细信息，请参阅不带参数的方法的 "备注" 部分 <xref:System.Console.WriteLine%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1257">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92d0-1258">下面的示例演示如何在方法中使用变量参数 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1258">The following example illustrates the use of variable arguments with the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="e92d0-1259">使用复合格式字符串和五个格式项调用方法。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1259">The method is called with a composite format string and five format items.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_vararg.cpp#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e92d0-1260">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1260">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e92d0-1261"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1261"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e92d0-1262"><paramref name="format" /> 中的格式规范无效。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1262">The format specification in <paramref name="format" /> is invalid.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e92d0-1263">此方法使用关键字进行标记 <see langword="vararg" /> ，这意味着它支持数量可变的参数。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1263">This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters.</span></span> <span data-ttu-id="e92d0-1264">可以从 Visual C++ 调用方法，但不能从 c # 或 Visual Basic 代码中调用。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1264">The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</span></span> <span data-ttu-id="e92d0-1265">C # 和 Visual Basic 编译器将调用解析为对的调用 <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /> <see cref="M:System.Console.WriteLine(System.String,System.Object[])" /> 。</span><span class="sxs-lookup"><span data-stu-id="e92d0-1265">The C# and Visual Basic compilers resolve calls to <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.Console.WriteLine(System.String,System.Object[])" />.</span></span></para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="e92d0-1266">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e92d0-1266">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="e92d0-1267">复合格式设置</span><span class="sxs-lookup"><span data-stu-id="e92d0-1267">Composite Formatting</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
