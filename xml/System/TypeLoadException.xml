<Type Name="TypeLoadException" FullName="System.TypeLoadException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76fc54d63ec5ecc81fee18efb57176dd5bfee4dd" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100313167" /></Metadata><TypeSignature Language="C#" Value="public class TypeLoadException : Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeLoadException extends System.Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.TypeLoadException" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeLoadException&#xA;Inherits Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeLoadException : Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type TypeLoadException = class&#xA;    inherit Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public class TypeLoadException : SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeLoadException extends System.SystemException implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeLoadException&#xA;Inherits SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeLoadException : SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type TypeLoadException = class&#xA;    inherit SystemException&#xA;    interface ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypeLoadException extends System.SystemException implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="946d5-101">当发生类型加载失败时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="946d5-101">The exception that is thrown when type-loading failures occur.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946d5-102"><xref:System.TypeLoadException> 当公共语言运行时找不到程序集、程序集中的类型或无法加载该类型时，将引发。</span><span class="sxs-lookup"><span data-stu-id="946d5-102"><xref:System.TypeLoadException> is thrown when the common language runtime cannot find the assembly, the type within the assembly, or cannot load the type.</span></span> <span data-ttu-id="946d5-103"><xref:System.TypeLoadException.Message%2A>属性包含更详细的信息，可帮助你确定异常的原因。</span><span class="sxs-lookup"><span data-stu-id="946d5-103">The <xref:System.TypeLoadException.Message%2A> property contains more detailed information that can help you identify the cause of the exception.</span></span>  
  
 <span data-ttu-id="946d5-104"><xref:System.TypeLoadException> 使用值为0x80131522 的 HRESULT COR_E_TYPELOAD。</span><span class="sxs-lookup"><span data-stu-id="946d5-104"><xref:System.TypeLoadException> uses the HRESULT COR_E_TYPELOAD, that has the value 0x80131522.</span></span>  
  
 <span data-ttu-id="946d5-105">有关实例的初始属性值的列表<xref:System.TypeLoadException>，请参阅<xref:System.TypeLoadException.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="946d5-105">For a list of initial property values for an instance of <xref:System.TypeLoadException>, see the <xref:System.TypeLoadException.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="946d5-106">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="946d5-106">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946d5-107">初始化 <see cref="T:System.TypeLoadException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="946d5-107">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLoadException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLoadException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946d5-108">初始化 <see cref="T:System.TypeLoadException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="946d5-108">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946d5-109">此构造函数将 <xref:System.TypeLoadException.Message%2A> 新实例的属性初始化为系统提供的描述错误的消息，如 "加载类型时出错"。</span><span class="sxs-lookup"><span data-stu-id="946d5-109">This constructor initializes the <xref:System.TypeLoadException.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "A failure has occurred while loading a type."</span></span> <span data-ttu-id="946d5-110">此消息会考虑当前系统区域性。</span><span class="sxs-lookup"><span data-stu-id="946d5-110">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="946d5-111">下表显示了 <xref:System.TypeLoadException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="946d5-111">The following table shows the initial property values for an instance of <xref:System.TypeLoadException>.</span></span>  
  
|<span data-ttu-id="946d5-112">properties</span><span class="sxs-lookup"><span data-stu-id="946d5-112">Property</span></span>|<span data-ttu-id="946d5-113">值</span><span class="sxs-lookup"><span data-stu-id="946d5-113">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="946d5-114">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="946d5-114">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="946d5-115">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="946d5-115">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLoadException (string message);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLoadException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new TypeLoadException : string -&gt; TypeLoadException" Usage="new System.TypeLoadException message" />
      <MemberSignature Language="C#" Value="public TypeLoadException (string? message);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="946d5-116">描述错误的消息。</span><span class="sxs-lookup"><span data-stu-id="946d5-116">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="946d5-117">用指定的错误消息初始化 <see cref="T:System.TypeLoadException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="946d5-117">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946d5-118">参数的内容 `message` 应为用户所理解。</span><span class="sxs-lookup"><span data-stu-id="946d5-118">The content of the `message` parameter should be understandable to the user.</span></span> <span data-ttu-id="946d5-119">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="946d5-119">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="946d5-120">下表显示了 <xref:System.TypeLoadException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="946d5-120">The following table shows the initial property values for an instance of <xref:System.TypeLoadException>.</span></span>  
  
|<span data-ttu-id="946d5-121">properties</span><span class="sxs-lookup"><span data-stu-id="946d5-121">Property</span></span>|<span data-ttu-id="946d5-122">值</span><span class="sxs-lookup"><span data-stu-id="946d5-122">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="946d5-123">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="946d5-123">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="946d5-124">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="946d5-124">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="946d5-125">下面的代码示例演示了 <xref:System.TypeLoadException.%23ctor%28System.String%29> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="946d5-125">The following code example demonstrates the <xref:System.TypeLoadException.%23ctor%28System.String%29> constructor.</span></span> <span data-ttu-id="946d5-126">它包含 <xref:System.TypeLoadException> 使用自定义消息生成的方法，并向控制台显示错误消息。</span><span class="sxs-lookup"><span data-stu-id="946d5-126">It contains a method that generates a <xref:System.TypeLoadException> with a custom message, and displays the error message to the console.</span></span>  
  
 [!code-cpp[TypeLoadException_Constructor2#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_Constructor2/CPP/typeloadexception_constructor2.cpp#1)]
 [!code-csharp[TypeLoadException_Constructor2#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_Constructor2/CS/typeloadexception_constructor2.cs#1)]
 [!code-vb[TypeLoadException_Constructor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_Constructor2/VB/typeloadexception_constructor2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeLoadException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeLoadException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new TypeLoadException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; TypeLoadException" Usage="new System.TypeLoadException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="946d5-127">承载序列化对象数据的对象。</span><span class="sxs-lookup"><span data-stu-id="946d5-127">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="946d5-128">关于来源和目标的上下文信息</span><span class="sxs-lookup"><span data-stu-id="946d5-128">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="946d5-129">用序列化数据初始化 <see cref="T:System.TypeLoadException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="946d5-129">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946d5-130">在反序列化期间调用此构造函数以重新构造在流上传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="946d5-130">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="946d5-131">有关详细信息，请参阅 [XML 和 SOAP 序列化](/dotnet/standard/serialization/xml-and-soap-serialization)。</span><span class="sxs-lookup"><span data-stu-id="946d5-131">For more information, see [XML and SOAP Serialization](/dotnet/standard/serialization/xml-and-soap-serialization).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946d5-132">下面的示例将生成一个异常，并将异常数据序列化到一个文件，然后重构该异常。</span><span class="sxs-lookup"><span data-stu-id="946d5-132">The following example generates an exception, and serializes the exception data to a file, and then reconstitutes the exception.</span></span> <span data-ttu-id="946d5-133">若要运行此代码示例，必须提供完全限定的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="946d5-133">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="946d5-134">有关如何获取完全限定的程序集名称的信息，请参阅 [程序集名称](/dotnet/standard/assembly/names)。</span><span class="sxs-lookup"><span data-stu-id="946d5-134">For information about how to obtain the fully qualified assembly name, see [Assembly Names](/dotnet/standard/assembly/names).</span></span>  
  
 [!code-cpp[TypeLoadException_GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CPP/typeloadexception_getobjectdata.cpp#1)]
 [!code-csharp[TypeLoadException_GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CS/typeloadexception_getobjectdata.cs#1)]
 [!code-vb[TypeLoadException_GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_GetObjectData/VB/typeloadexception_getobjectdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="946d5-135"><paramref name="info" /> 对象是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="946d5-135">The <paramref name="info" /> object is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/serialization/xml-and-soap-serialization"><span data-ttu-id="946d5-136">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="946d5-136">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLoadException (string message, Exception inner);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLoadException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new TypeLoadException : string * Exception -&gt; TypeLoadException" Usage="new System.TypeLoadException (message, inner)" />
      <MemberSignature Language="C#" Value="public TypeLoadException (string? message, Exception? inner);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="946d5-137">解释异常原因的错误消息。</span><span class="sxs-lookup"><span data-stu-id="946d5-137">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="946d5-138">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="946d5-138">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="946d5-139">如果 <paramref name="inner" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</span><span class="sxs-lookup"><span data-stu-id="946d5-139">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="946d5-140">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.TypeLoadException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="946d5-140">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946d5-141">因前一个异常而直接引发的异常可以在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="946d5-141">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="946d5-142"><xref:System.Exception.InnerException%2A> 属性将返回传递给构造函数的同一值；如果 <xref:System.Exception.InnerException%2A> 属性不向构造函数提供内部异常值，则返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="946d5-142">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="946d5-143">下表显示了 <xref:System.TypeLoadException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="946d5-143">The following table shows the initial property values for an instance of <xref:System.TypeLoadException>.</span></span>  
  
|<span data-ttu-id="946d5-144">properties</span><span class="sxs-lookup"><span data-stu-id="946d5-144">Property</span></span>|<span data-ttu-id="946d5-145">“值”</span><span class="sxs-lookup"><span data-stu-id="946d5-145">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="946d5-146">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="946d5-146">The inner exception reference.</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="946d5-147">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="946d5-147">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="946d5-148">下面的代码示例演示了 <xref:System.TypeLoadException.%23ctor%28System.String%2CSystem.Exception%29> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="946d5-148">The following code example demonstrates the <xref:System.TypeLoadException.%23ctor%28System.String%2CSystem.Exception%29> constructor.</span></span> <span data-ttu-id="946d5-149">它包含一个方法，该方法生成 <xref:System.TypeLoadException> ，捕获该异常，并 <xref:System.TypeLoadException> 使用自定义消息引发新的，包括 <xref:System.TypeLoadException> 作为内部异常的原始消息。</span><span class="sxs-lookup"><span data-stu-id="946d5-149">It contains a method that generates a <xref:System.TypeLoadException>, catches that exception, and throws a new <xref:System.TypeLoadException> with a custom message, including the original <xref:System.TypeLoadException> as the inner exception.</span></span>  
  
 [!code-cpp[TypeLoadException_Constructor3#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_Constructor3/CPP/typeloadexception_constructor3.cpp#1)]
 [!code-csharp[TypeLoadException_Constructor3#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_Constructor3/CS/typeloadexception_constructor3.cs#1)]
 [!code-vb[TypeLoadException_Constructor3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_Constructor3/VB/typeloadexception_constructor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="946d5-150">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="946d5-150">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="typeLoadException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="946d5-151">承载序列化对象数据的对象。</span><span class="sxs-lookup"><span data-stu-id="946d5-151">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="946d5-152">关于来源和目标的上下文信息</span><span class="sxs-lookup"><span data-stu-id="946d5-152">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="946d5-153">设置具有类名、方法名称、资源 ID 和其他异常信息的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="946d5-153">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the class name, method name, resource ID, and additional exception information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946d5-154"><xref:System.TypeLoadException.GetObjectData%2A> 会设置 <xref:System.Runtime.Serialization.SerializationInfo>，对所有异常对象数据进行序列化。</span><span class="sxs-lookup"><span data-stu-id="946d5-154"><xref:System.TypeLoadException.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="946d5-155">在反序列化期间，将从通过流传输的重新构造异常对象 <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="946d5-155">During deserialization, the exception object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="946d5-156">有关详细信息，请参阅 [XML 和 SOAP 序列化](/dotnet/standard/serialization/xml-and-soap-serialization)。</span><span class="sxs-lookup"><span data-stu-id="946d5-156">For more information, see [XML and SOAP Serialization](/dotnet/standard/serialization/xml-and-soap-serialization).</span></span>  
  
   
  
## Examples  

 <span data-ttu-id="946d5-157">下面的示例将生成一个异常，并将异常数据序列化到一个文件，然后重构该异常。</span><span class="sxs-lookup"><span data-stu-id="946d5-157">The following example generates an exception, and serializes the exception data to a file, and then reconstitutes the exception.</span></span> <span data-ttu-id="946d5-158">若要运行此代码示例，必须提供完全限定的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="946d5-158">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="946d5-159">有关如何获取完全限定的程序集名称的信息，请参阅 [程序集名称](/dotnet/standard/assembly/names)。</span><span class="sxs-lookup"><span data-stu-id="946d5-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](/dotnet/standard/assembly/names).</span></span>  
  
 [!code-cpp[TypeLoadException_GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CPP/typeloadexception_getobjectdata.cpp#1)]
 [!code-csharp[TypeLoadException_GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CS/typeloadexception_getobjectdata.cs#1)]
 [!code-vb[TypeLoadException_GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_GetObjectData/VB/typeloadexception_getobjectdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="946d5-160"><paramref name="info" /> 对象是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="946d5-160">The <paramref name="info" /> object is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <related type="Article" href="/dotnet/standard/serialization/xml-and-soap-serialization"><span data-ttu-id="946d5-161">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="946d5-161">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.TypeLoadException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.TypeLoadException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="946d5-162">获取此异常的错误消息。</span><span class="sxs-lookup"><span data-stu-id="946d5-162">Gets the error message for this exception.</span></span></summary>
        <value><span data-ttu-id="946d5-163">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="946d5-163">The error message string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946d5-164">此属性将重写 <xref:System.Exception.Message%2A> 。</span><span class="sxs-lookup"><span data-stu-id="946d5-164">This property overrides <xref:System.Exception.Message%2A>.</span></span> <span data-ttu-id="946d5-165">应本地化错误消息。</span><span class="sxs-lookup"><span data-stu-id="946d5-165">The error message should be localized.</span></span>  
  
 <span data-ttu-id="946d5-166">此属性为只读。</span><span class="sxs-lookup"><span data-stu-id="946d5-166">This property is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946d5-167">下面的示例尝试从 mscorlib 程序集加载不存在的类型。</span><span class="sxs-lookup"><span data-stu-id="946d5-167">The following example attempts to load a non-existent type from the mscorlib assembly.</span></span> <span data-ttu-id="946d5-168">捕获产生的异常，并 <xref:System.TypeLoadException.TypeName%2A> <xref:System.TypeLoadException.Message%2A> 显示和值。</span><span class="sxs-lookup"><span data-stu-id="946d5-168">The resulting exception is caught, and the <xref:System.TypeLoadException.TypeName%2A> and <xref:System.TypeLoadException.Message%2A> values are displayed.</span></span> <span data-ttu-id="946d5-169">若要运行此代码示例，必须提供完全限定的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="946d5-169">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="946d5-170">有关如何获取完全限定的程序集名称的信息，请参阅 [程序集名称](/dotnet/standard/assembly/names)。</span><span class="sxs-lookup"><span data-stu-id="946d5-170">For information about how to obtain the fully qualified assembly name, see [Assembly Names](/dotnet/standard/assembly/names).</span></span>  
  
 [!code-cpp[TypeLoadException_TypeName#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_TypeName/CPP/typeloadexception_typename.cpp#1)]
 [!code-csharp[TypeLoadException_TypeName#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_TypeName/CS/typeloadexception_typename.cs#1)]
 [!code-vb[TypeLoadException_TypeName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_TypeName/VB/typeloadexception_typename.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.TypeLoadException.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="System.TypeLoadException.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="946d5-171">获取导致异常的完全限定的类型名称。</span><span class="sxs-lookup"><span data-stu-id="946d5-171">Gets the fully qualified name of the type that causes the exception.</span></span></summary>
        <value><span data-ttu-id="946d5-172">完全限定的类型名称</span><span class="sxs-lookup"><span data-stu-id="946d5-172">The fully qualified type name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946d5-173">下面的示例尝试从 mscorlib 程序集加载不存在的类型。</span><span class="sxs-lookup"><span data-stu-id="946d5-173">The following example attempts to load a non-existent type from the mscorlib assembly.</span></span> <span data-ttu-id="946d5-174">捕获产生的异常，并 <xref:System.TypeLoadException.TypeName%2A> <xref:System.TypeLoadException.Message%2A> 显示和值。</span><span class="sxs-lookup"><span data-stu-id="946d5-174">The resulting exception is caught, and the <xref:System.TypeLoadException.TypeName%2A> and <xref:System.TypeLoadException.Message%2A> values are displayed.</span></span> <span data-ttu-id="946d5-175">若要运行此代码示例，必须提供完全限定的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="946d5-175">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="946d5-176">有关如何获取完全限定的程序集名称的信息，请参阅 [程序集名称](/dotnet/standard/assembly/names)。</span><span class="sxs-lookup"><span data-stu-id="946d5-176">For information about how to obtain the fully qualified assembly name, see [Assembly Names](/dotnet/standard/assembly/names).</span></span>  
  
 [!code-cpp[TypeLoadException_TypeName#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_TypeName/CPP/typeloadexception_typename.cpp#1)]
 [!code-csharp[TypeLoadException_TypeName#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_TypeName/CS/typeloadexception_typename.cs#1)]
 [!code-vb[TypeLoadException_TypeName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_TypeName/VB/typeloadexception_typename.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="946d5-177">当 <see cref="P:System.TypeLoadException.TypeName" /> 在派生类中重写时，请确保调用基类的 <see cref="P:System.TypeLoadException.TypeName" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="946d5-177">When overriding <see cref="P:System.TypeLoadException.TypeName" /> in a derived class, be sure to call the base class's <see cref="P:System.TypeLoadException.TypeName" /> property.</span></span>  
  
<span data-ttu-id="946d5-178">此属性为只读。</span><span class="sxs-lookup"><span data-stu-id="946d5-178">This property is read-only.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
