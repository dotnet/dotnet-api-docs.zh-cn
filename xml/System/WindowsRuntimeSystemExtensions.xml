<Type Name="WindowsRuntimeSystemExtensions" FullName="System.WindowsRuntimeSystemExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5210ae1d893dd1dc3515b4afd57c5f309b945a2a" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83951837" /></Metadata><TypeSignature Language="C#" Value="public static class WindowsRuntimeSystemExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsRuntimeSystemExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.WindowsRuntimeSystemExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WindowsRuntimeSystemExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsRuntimeSystemExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type WindowsRuntimeSystemExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
    <AssemblyVersion>4.0.15.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为在任务和 Windows 运行时异步操作之间转换提供扩展方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<xref:System.WindowsRuntimeSystemExtensions.AsTask%2A> 扩展方法重载使你能够使用 .NET <xref:System.Threading.Tasks.Task> 对象从 Windows 运行时管理异步操作。

使用 <xref:System.WindowsRuntimeSystemExtensions.AsAsyncAction%2A> 方法和 <xref:System.WindowsRuntimeSystemExtensions.AsAsyncOperation%2A> 方法，你可以将开始任务传递给采用 Windows 运行时异步操作和操作的方法。 另请参阅 <xref:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo> 类的方法。

编译器使用 <xref:System.WindowsRuntimeSystemExtensions.GetAwaiter%2A> 方法来实现 <see langword="await" /> 操作（<see langword="Await" /> Visual Basic 中）。

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsAsyncAction">
      <MemberSignature Language="C#" Value="public static Windows.Foundation.IAsyncAction AsAsyncAction (this System.Threading.Tasks.Task source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Foundation.IAsyncAction AsAsyncAction(class System.Threading.Tasks.Task source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsAsyncAction(System.Threading.Tasks.Task)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsAsyncAction (source As Task) As IAsyncAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Foundation::IAsyncAction ^ AsAsyncAction(System::Threading::Tasks::Task ^ source);" />
      <MemberSignature Language="F#" Value="static member AsAsyncAction : System.Threading.Tasks.Task -&gt; Windows.Foundation.IAsyncAction" Usage="System.WindowsRuntimeSystemExtensions.AsAsyncAction source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Task" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">已启动的任务。</param>
        <summary>返回表示已开始任务的 Windows 运行时异步操作。</summary>
        <returns>一个 <see cref="T:Windows.Foundation.IAsyncAction" /> 实例，表示已启动的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:System.Threading.Tasks.Task>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

当要将任务传递给采用异步操作的 Windows 运行时方法时，请使用此方法。

<xref:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo> 类提供静态方法（Visual Basic 中的`Shared` 方法），这些方法创建并启动 Windows 运行时异步操作，这些操作表示可响应取消请求和报告进度的任务。 

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="source" /> 是未开始的任务。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsAsyncOperation&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Windows.Foundation.IAsyncOperation&lt;TResult&gt; AsAsyncOperation&lt;TResult&gt; (this System.Threading.Tasks.Task&lt;TResult&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; AsAsyncOperation&lt;TResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TResult&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsAsyncOperation``1(System.Threading.Tasks.Task{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsAsyncOperation(Of TResult) (source As Task(Of TResult)) As IAsyncOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ AsAsyncOperation(System::Threading::Tasks::Task&lt;TResult&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsAsyncOperation : System.Threading.Tasks.Task&lt;'Result&gt; -&gt; Windows.Foundation.IAsyncOperation&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsAsyncOperation source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Task&lt;TResult&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">返回结果的类型。</typeparam>
        <param name="source">已启动的任务。</param>
        <summary>返回表示返回结果的已开始任务的 Windows 运行时异步操作。</summary>
        <returns>一个 <see cref="T:Windows.Foundation.IAsyncOperation`1" /> 实例，表示已启动的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:System.Threading.Tasks.Task>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

当要将返回结果的任务传递给采用异步操作的 Windows 运行时方法时，请使用此方法。

<xref:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo> 类提供静态方法（Visual Basic 中的`Shared` 方法），这些方法创建并启动 Windows 运行时异步操作，这些操作表示返回结果并可响应取消请求和报告进度的任务。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="source" /> 是未开始的任务。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask (this Windows.Foundation.IAsyncAction source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask(class Windows.Foundation.IAsyncAction source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask (source As IAsyncAction) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncAction ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncAction -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncAction" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">异步操作。</param>
        <summary>返回表示 Windows 运行时异步操作的任务。</summary>
        <returns>一个表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncAction>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task> 对象。 <xref:System.Threading.Tasks.Task> 对象简化了异步操作的协调。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask (this Windows.Foundation.IAsyncAction source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask(class Windows.Foundation.IAsyncAction source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask(Windows.Foundation.IAsyncAction,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask (source As IAsyncAction, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncAction ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncAction * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncAction" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">异步操作。</param>
        <param name="cancellationToken">可用于请求异步操作取消的标志。</param>
        <summary>返回表示可以取消的 Windows 运行时异步操作的任务。</summary>
        <returns>一个表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncAction>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task> 对象。 <xref:System.Threading.Tasks.Task> 对象简化了异步操作的协调。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TProgress) (source As IAsyncActionWithProgress(Of TProgress)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">提供显示进度的数据的对象的类型。</typeparam>
        <param name="source">异步操作。</param>
        <summary>返回表示 Windows 运行时异步操作的任务。</summary>
        <returns>一个表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncActionWithProgress%601>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task> 对象。 <xref:System.Threading.Tasks.Task> 对象简化了异步操作的协调。

调用此方法重载等效于调用 <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.IProgress{%60%601})> 扩展方法重载，并为 <paramref name="progress" /> 参数指定 <see langword="null" />。 如果你不想从报告进度的操作获取进度报告，这会很有用。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.IProgress{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TProgress) (source As IAsyncActionWithProgress(Of TProgress), progress As IProgress(Of TProgress)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">提供显示进度的数据的对象的类型。</typeparam>
        <param name="source">异步操作。</param>
        <param name="progress">检索进度更新的对象。</param>
        <summary>返回表示报告进度的 Windows 运行时异步操作的任务。</summary>
        <returns>一个表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncActionWithProgress%601>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task> 对象。 <xref:System.Threading.Tasks.Task> 对象简化了异步操作的协调。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TProgress) (source As IAsyncActionWithProgress(Of TProgress), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">提供显示进度的数据的对象的类型。</typeparam>
        <param name="source">异步操作。</param>
        <param name="cancellationToken">可用于请求异步操作取消的标志。</param>
        <summary>返回表示可以取消的 Windows 运行时异步操作的任务。</summary>
        <returns>一个表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncActionWithProgress%601>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task> 对象。 <xref:System.Threading.Tasks.Task> 对象简化了异步操作的协调。

调用此方法重载等效于调用 <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.Threading.CancellationToken,System.IProgress{%60%601})> 扩展方法重载，并为 <paramref name="progress" /> 参数指定 <see langword="null" />。 如果你不想从报告进度的操作获取进度报告，这会很有用。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AsTask&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source, System.Threading.CancellationToken cancellationToken, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AsTask&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncActionWithProgress{``0},System.Threading.CancellationToken,System.IProgress{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TProgress) (source As IAsyncActionWithProgress(Of TProgress), cancellationToken As CancellationToken, progress As IProgress(Of TProgress)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ AsTask(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; * System.Threading.CancellationToken * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">提供显示进度的数据的对象的类型。</typeparam>
        <param name="source">异步操作。</param>
        <param name="cancellationToken">可用于请求异步操作取消的标志。</param>
        <param name="progress">检索进度更新的对象。</param>
        <summary>返回表示报告进度并可以取消的 Windows 运行时异步操作的任务。</summary>
        <returns>一个表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncActionWithProgress%601>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task> 对象。 <xref:System.Threading.Tasks.Task> 对象简化了异步操作的协调。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult&gt; (this Windows.Foundation.IAsyncOperation&lt;TResult&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult&gt;(class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult) (source As IAsyncOperation(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperation&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperation&lt;TResult&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">返回异步操作结果的对象的类型。</typeparam>
        <param name="source">异步操作。</param>
        <summary>返回表示返回结果的 Windows 运行时异步操作的任务。</summary>
        <returns>表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncActionWithProgress%601>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task%601> 对象。 <xref:System.Threading.Tasks.Task%601> 对象简化了异步操作的协调。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult&gt; (this Windows.Foundation.IAsyncOperation&lt;TResult&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult&gt;(class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``1(Windows.Foundation.IAsyncOperation{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult) (source As IAsyncOperation(Of TResult), cancellationToken As CancellationToken) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperation&lt;'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperation&lt;TResult&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">返回异步操作结果的对象的类型。</typeparam>
        <param name="source">异步操作。</param>
        <param name="cancellationToken">可用于请求异步操作取消的标志。</param>
        <summary>返回表示返回结果并可以取消的 Windows 运行时异步操作的任务。</summary>
        <returns>表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncActionWithProgress%601>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task%601> 对象。 <xref:System.Threading.Tasks.Task%601> 对象简化了异步操作的协调。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult, TProgress) (source As IAsyncOperationWithProgress(Of TResult, TProgress)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">返回异步操作结果的对象的类型。</typeparam>
        <typeparam name="TProgress">提供显示进度的数据的对象的类型。</typeparam>
        <param name="source">异步操作。</param>
        <summary>返回表示返回结果的 Windows 运行时异步操作的任务。</summary>
        <returns>表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncOperationWithProgress%602>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task%601> 对象。 <xref:System.Threading.Tasks.Task%601> 对象简化了异步操作的协调。 

调用此方法重载等效于调用 <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.IProgress{%60%601})> 扩展方法重载，并为 <paramref name="progress" /> 参数指定 <see langword="null" />。 如果你不想从报告进度的操作获取进度报告，这会很有用。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.IProgress{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult, TProgress) (source As IAsyncOperationWithProgress(Of TResult, TProgress), progress As IProgress(Of TProgress)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">返回异步操作结果的对象的类型。</typeparam>
        <typeparam name="TProgress">提供显示进度的数据的对象的类型。</typeparam>
        <param name="source">异步操作。</param>
        <param name="progress">检索进度更新的对象。</param>
        <summary>返回表示返回结果并报告进度的 Windows 运行时异步操作的任务。</summary>
        <returns>表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncOperationWithProgress%602>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task%601> 对象。 <xref:System.Threading.Tasks.Task%601> 对象简化了异步操作的协调。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult, TProgress) (source As IAsyncOperationWithProgress(Of TResult, TProgress), cancellationToken As CancellationToken) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">返回异步操作结果的对象的类型。</typeparam>
        <typeparam name="TProgress">提供显示进度的数据的对象的类型。</typeparam>
        <param name="source">异步操作。</param>
        <param name="cancellationToken">可用于请求异步操作取消的标志。</param>
        <summary>返回表示返回结果并可以取消的 Windows 运行时异步操作的任务。</summary>
        <returns>表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncOperationWithProgress%602>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task%601> 对象。 <xref:System.Threading.Tasks.Task%601> 对象简化了异步操作的协调。

调用此方法重载等效于调用 <xref:System.WindowsRuntimeSystemExtensions.AsTask%60%602(Windows.Foundation.IAsyncOperationWithProgress{%60%600,%60%601},System.Threading.CancellationToken,System.IProgress{%60%601})> 扩展方法重载，并为 <paramref name="progress" /> 参数指定 <see langword="null" />。 如果你不想从报告进度的操作获取进度报告，这会很有用。

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsTask&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; AsTask&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source, System.Threading.CancellationToken cancellationToken, IProgress&lt;TProgress&gt; progress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; AsTask&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source, valuetype System.Threading.CancellationToken cancellationToken, class System.IProgress`1&lt;!!TProgress&gt; progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.AsTask``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1},System.Threading.CancellationToken,System.IProgress{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTask(Of TResult, TProgress) (source As IAsyncOperationWithProgress(Of TResult, TProgress), cancellationToken As CancellationToken, progress As IProgress(Of TProgress)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source, System::Threading::CancellationToken cancellationToken, IProgress&lt;TProgress&gt; ^ progress);" />
      <MemberSignature Language="F#" Value="static member AsTask : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; * System.Threading.CancellationToken * IProgress&lt;'Progress&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.AsTask (source, cancellationToken, progress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="progress" Type="System.IProgress&lt;TProgress&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">返回异步操作结果的对象的类型。</typeparam>
        <typeparam name="TProgress">提供显示进度的数据的对象的类型。</typeparam>
        <param name="source">异步操作。</param>
        <param name="cancellationToken">可用于请求异步操作取消的标志。</param>
        <param name="progress">检索进度更新的对象。</param>
        <summary>返回表示返回结果、报告进度并可以取消的 Windows 运行时异步操作的任务。</summary>
        <returns>表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncOperationWithProgress%602>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

使用此方法获取 Windows 运行时异步操作的 <xref:System.Threading.Tasks.Task%601> 对象。 <xref:System.Threading.Tasks.Task%601> 对象简化了异步操作的协调。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter GetAwaiter (this Windows.Foundation.IAsyncAction source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter GetAwaiter(class Windows.Foundation.IAsyncAction source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter(Windows.Foundation.IAsyncAction)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter (source As IAsyncAction) As TaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter GetAwaiter(Windows::Foundation::IAsyncAction ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncAction -&gt; System.Runtime.CompilerServices.TaskAwaiter" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncAction" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">要等待的异步操作。</param>
        <summary>此 API 支持 .NET Framework 基础结构，不适合在代码中直接使用。</summary>
        <returns>等待指定的异步操作的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和中 C# ，你可以调用此方法作为 IAsyncAction 类型的任何对象上的实例方法。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter GetAwaiter&lt;TProgress&gt; (this Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter GetAwaiter&lt;TProgress&gt;(class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncActionWithProgress{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter(Of TProgress) (source As IAsyncActionWithProgress(Of TProgress)) As TaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter GetAwaiter(Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt; -&gt; System.Runtime.CompilerServices.TaskAwaiter" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress">提供显示进度的数据的对象的类型。</typeparam>
        <param name="source">要等待的异步操作。</param>
        <summary>返回等待报告进度的异步操作对象。</summary>
        <returns>等待指定的异步操作的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncActionWithProgress%601>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt; GetAwaiter&lt;TResult&gt; (this Windows.Foundation.IAsyncOperation&lt;TResult&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter`1&lt;!!TResult&gt; GetAwaiter&lt;TResult&gt;(class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter``1(Windows.Foundation.IAsyncOperation{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter(Of TResult) (source As IAsyncOperation(Of TResult)) As TaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter&lt;TResult&gt; GetAwaiter(Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncOperation&lt;'Result&gt; -&gt; System.Runtime.CompilerServices.TaskAwaiter&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperation&lt;TResult&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">返回异步操作结果的对象的类型。</typeparam>
        <param name="source">等待的异步操作。</param>
        <summary>返回等待返回结果的异步操作对象。</summary>
        <returns>等待指定的异步操作的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和中 C# ，你可以将此方法作为实例方法调用<TResult>类型为 iasyncoperation<tresult> 的任何对象。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt; GetAwaiter&lt;TResult,TProgress&gt; (this Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.TaskAwaiter`1&lt;!!TResult&gt; GetAwaiter&lt;TResult, TProgress&gt;(class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WindowsRuntimeSystemExtensions.GetAwaiter``2(Windows.Foundation.IAsyncOperationWithProgress{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAwaiter(Of TResult, TProgress) (source As IAsyncOperationWithProgress(Of TResult, TProgress)) As TaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Runtime::CompilerServices::TaskAwaiter&lt;TResult&gt; GetAwaiter(Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member GetAwaiter : Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt; -&gt; System.Runtime.CompilerServices.TaskAwaiter&lt;'Result&gt;" Usage="System.WindowsRuntimeSystemExtensions.GetAwaiter source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">返回异步操作结果的对象的类型。</typeparam>
        <typeparam name="TProgress">提供显示进度的数据的对象的类型。</typeparam>
        <param name="source">等待的异步操作。</param>
        <summary>返回等待报告进度并返回结果的异步操作的对象。</summary>
        <returns>等待指定的异步操作的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> 在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Foundation.IAsyncOperationWithProgress%602>类型的任何对象上的实例方法来调用。 当使用实例方法语法调用此方法时，请省略第一个参数。 有关详细信息，请参阅[扩展方法（Visual Basic）](/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods)或[扩展方法C# （编程指南）](/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)。

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
