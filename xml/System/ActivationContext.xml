<Type Name="ActivationContext" FullName="System.ActivationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e92ac8d23c5f0908b47c053a65bf5c5f0f0025b0" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89808994" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActivationContext : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActivationContext extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ActivationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivationContext&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivationContext sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type ActivationContext = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9092a-101">标识当前应用程序的激活上下文。</span><span class="sxs-lookup"><span data-stu-id="9092a-101">Identifies the activation context for the current application.</span></span> <span data-ttu-id="9092a-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="9092a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="9092a-103"><xref:System.ActivationContext>类包含 <xref:System.ApplicationIdentity> ，并提供对应用程序清单的仅限内部访问。</span><span class="sxs-lookup"><span data-stu-id="9092a-103">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> and provides internal-only access to the application manifest.</span></span> <span data-ttu-id="9092a-104">激活上下文在基于清单的激活过程中用于设置域策略并提供基于应用程序的安全模型。</span><span class="sxs-lookup"><span data-stu-id="9092a-104">The activation context is used during manifest-based activation to set up the domain policy and provide an application-based security model.</span></span> <span data-ttu-id="9092a-105">有关更多信息，请参见 <xref:System.Security.Policy.ApplicationSecurityManager> 类。</span><span class="sxs-lookup"><span data-stu-id="9092a-105">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="9092a-106">此类型实现 <xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="9092a-106">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="9092a-107">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="9092a-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="9092a-108">若要直接释放类型，请在 `try`/`catch` 块中调用其 <xref:System.IDisposable.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="9092a-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="9092a-109">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="9092a-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="9092a-110">有关详细信息，请参阅 <xref:System.IDisposable> 接口主题中的“使用实现 IDisposable 的对象”一节。</span><span class="sxs-lookup"><span data-stu-id="9092a-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>



## Examples
 <span data-ttu-id="9092a-111">下面的代码示例演示 <xref:System.ActivationContext> 如何使用对象获取 <xref:System.ApplicationIdentity> 基于清单的应用程序的。</span><span class="sxs-lookup"><span data-stu-id="9092a-111">The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application.</span></span> <span data-ttu-id="9092a-112">为获得正确的结果，请将此代码示例作为基于清单的应用程序执行。</span><span class="sxs-lookup"><span data-stu-id="9092a-112">For correct results, execute this code example as a manifest-based application.</span></span>

 [!code-csharp[System.ActivationContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#1)]
 [!code-vb[System.ActivationContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#1)]

 ]]></format>
    </remarks>
    <related type="Article" href="/visualstudio/deployment/publishing-clickonce-applications"><span data-ttu-id="9092a-113">发布 ClickOnce 应用程序</span><span class="sxs-lookup"><span data-stu-id="9092a-113">Publishing ClickOnce Applications</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ApplicationManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] ApplicationManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] ApplicationManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.ApplicationManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ ApplicationManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationManifestBytes : byte[]" Usage="System.ActivationContext.ApplicationManifestBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9092a-114">获取当前应用程序的 ClickOnce 应用程序清单。</span><span class="sxs-lookup"><span data-stu-id="9092a-114">Gets the ClickOnce application manifest for the current application.</span></span></summary>
        <value><span data-ttu-id="9092a-115">一个字节数组，其中包含与此 <see cref="T:System.ActivationContext" /> 关联的应用程序的 ClickOnce 应用程序清单。</span><span class="sxs-lookup"><span data-stu-id="9092a-115">A byte array that contains the ClickOnce application manifest for the application that is associated with this <see cref="T:System.ActivationContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="9092a-116">如果激活上下文为 <xref:System.ActivationContext.ContextForm.Loose> ，这意味着该应用程序未安装在 ClickOnce 存储区中，则将从临时下载文件夹读取部署清单。</span><span class="sxs-lookup"><span data-stu-id="9092a-116">If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.</span></span> <span data-ttu-id="9092a-117">如果激活上下文为 <xref:System.ActivationContext.ContextForm.StoreBounded> ，这意味着应用程序已安装在 clickonce 存储区中，则将从 clickonce 存储区中读取部署清单。</span><span class="sxs-lookup"><span data-stu-id="9092a-117">If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.</span></span> <span data-ttu-id="9092a-118">有关部署清单的详细信息，请参阅 [ClickOnce 部署清单](/visualstudio/deployment/clickonce-deployment-manifest)。</span><span class="sxs-lookup"><span data-stu-id="9092a-118">For more information about deployment manifests, see [ClickOnce Deployment Manifest](/visualstudio/deployment/clickonce-deployment-manifest).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePartialActivationContext">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9092a-119">初始化 <see cref="T:System.ActivationContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9092a-119">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="static member CreatePartialActivationContext : ApplicationIdentity -&gt; ActivationContext" Usage="System.ActivationContext.CreatePartialActivationContext identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="9092a-120">一个对象，用于标识应用程序。</span><span class="sxs-lookup"><span data-stu-id="9092a-120">An object that identifies an application.</span></span></param>
        <summary><span data-ttu-id="9092a-121">使用指定的应用程序标识初始化 <see cref="T:System.ActivationContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9092a-121">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class using the specified application identity.</span></span></summary>
        <returns><span data-ttu-id="9092a-122">具有指定应用程序标识的对象。</span><span class="sxs-lookup"><span data-stu-id="9092a-122">An object with the specified application identity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="9092a-123"><xref:System.ActivationContext.CreatePartialActivationContext%2A>方法调用内部构造函数来创建新的激活上下文。</span><span class="sxs-lookup"><span data-stu-id="9092a-123">The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context.</span></span> <span data-ttu-id="9092a-124"><xref:System.ActivationContext>.NET Framework 版本2.0 中的类的实现适用于既不完全安装在存储区中，也不完全包含在文件夹中的应用程序。</span><span class="sxs-lookup"><span data-stu-id="9092a-124">The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.</span></span> <span data-ttu-id="9092a-125">此方法提供了更高版本的向后兼容性，在这些版本中，公共构造函数提供完全激活上下文。</span><span class="sxs-lookup"><span data-stu-id="9092a-125">This method provides backward compatibility for later releases in which public constructors provide full activation contexts.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9092a-126"><paramref name="identity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9092a-126"><paramref name="identity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9092a-127">在 <paramref name="identity" /> 中没有指定部署标识或应用程序标识。</span><span class="sxs-lookup"><span data-stu-id="9092a-127">No deployment or application identity is specified in <paramref name="identity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity, string[] manifestPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity, string[] manifestPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity, manifestPaths As String()) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity, cli::array &lt;System::String ^&gt; ^ manifestPaths);" />
      <MemberSignature Language="F#" Value="static member CreatePartialActivationContext : ApplicationIdentity * string[] -&gt; ActivationContext" Usage="System.ActivationContext.CreatePartialActivationContext (identity, manifestPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
        <Parameter Name="manifestPaths" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="9092a-128">一个对象，用于标识应用程序。</span><span class="sxs-lookup"><span data-stu-id="9092a-128">An object that identifies an application.</span></span></param>
        <param name="manifestPaths"><span data-ttu-id="9092a-129">应用程序的清单路径的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="9092a-129">A string array of manifest paths for the application.</span></span></param>
        <summary><span data-ttu-id="9092a-130">使用指定的应用程序标识和清单路径数组来初始化 <see cref="T:System.ActivationContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9092a-130">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class using the specified application identity and array of manifest paths.</span></span></summary>
        <returns><span data-ttu-id="9092a-131">具有指定应用程序标识和清单路径数组的对象。</span><span class="sxs-lookup"><span data-stu-id="9092a-131">An object with the specified application identity and array of manifest paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="9092a-132"><xref:System.ActivationContext.CreatePartialActivationContext%2A>方法调用内部构造函数来创建新的激活上下文。</span><span class="sxs-lookup"><span data-stu-id="9092a-132">The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context.</span></span> <span data-ttu-id="9092a-133"><xref:System.ActivationContext>.NET Framework 版本2.0 中的类的实现适用于既不完全安装在存储区中，也不完全包含在文件夹中的应用程序。</span><span class="sxs-lookup"><span data-stu-id="9092a-133">The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.</span></span> <span data-ttu-id="9092a-134">此方法提供了更高版本的向后兼容性，在这些版本中，公共构造函数提供完全激活上下文。</span><span class="sxs-lookup"><span data-stu-id="9092a-134">This method provides backward compatibility for later releases in which public constructors provide full activation contexts.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9092a-135"><paramref name="identity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9092a-135"><paramref name="identity" /> is <see langword="null" />.</span></span>

<span data-ttu-id="9092a-136">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9092a-136">-or-</span></span>

 <span data-ttu-id="9092a-137"><paramref name="manifestPaths" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9092a-137"><paramref name="manifestPaths" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9092a-138">在 <paramref name="identity" /> 中没有指定部署标识或应用程序标识。</span><span class="sxs-lookup"><span data-stu-id="9092a-138">No deployment or application identity is specified in <paramref name="identity" />.</span></span>

<span data-ttu-id="9092a-139">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9092a-139">-or-</span></span>

 <span data-ttu-id="9092a-140"><paramref name="identity" /> 与清单中的标识不匹配。</span><span class="sxs-lookup"><span data-stu-id="9092a-140"><paramref name="identity" /> does not match the identity in the manifests.</span></span>

<span data-ttu-id="9092a-141">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9092a-141">-or-</span></span>

 <span data-ttu-id="9092a-142"><paramref name="identity" /> 没有与清单路径相同的组件数量。</span><span class="sxs-lookup"><span data-stu-id="9092a-142"><paramref name="identity" /> does not have the same number of components as the manifest paths.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeploymentManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] DeploymentManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DeploymentManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.DeploymentManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeploymentManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DeploymentManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeploymentManifestBytes : byte[]" Usage="System.ActivationContext.DeploymentManifestBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9092a-143">获取当前应用程序的 ClickOnce 部署清单。</span><span class="sxs-lookup"><span data-stu-id="9092a-143">Gets the ClickOnce deployment manifest for the current application.</span></span></summary>
        <value><span data-ttu-id="9092a-144">一个字节数组，其中包含与此 <see cref="T:System.ActivationContext" /> 关联的应用程序的 ClickOnce 部署清单。</span><span class="sxs-lookup"><span data-stu-id="9092a-144">A byte array that contains the ClickOnce deployment manifest for the application that is associated with this <see cref="T:System.ActivationContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="9092a-145">如果激活上下文为 <xref:System.ActivationContext.ContextForm.Loose> ，这意味着该应用程序未安装在 ClickOnce 存储区中，则将从临时下载文件夹读取部署清单。</span><span class="sxs-lookup"><span data-stu-id="9092a-145">If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.</span></span> <span data-ttu-id="9092a-146">如果激活上下文为 <xref:System.ActivationContext.ContextForm.StoreBounded> ，这意味着应用程序已安装在 clickonce 存储区中，则将从 clickonce 存储区中读取部署清单。</span><span class="sxs-lookup"><span data-stu-id="9092a-146">If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.</span></span> <span data-ttu-id="9092a-147">有关部署清单的详细信息，请参阅 [ClickOnce 部署清单](/visualstudio/deployment/clickonce-deployment-manifest)。</span><span class="sxs-lookup"><span data-stu-id="9092a-147">For more information about deployment manifests, see [ClickOnce Deployment Manifest](/visualstudio/deployment/clickonce-deployment-manifest).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="activationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9092a-148">释放由 <see cref="T:System.ActivationContext" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="9092a-148">Releases all resources used by the <see cref="T:System.ActivationContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="9092a-149">在完成使用 <xref:System.ActivationContext.Dispose%2A> 后，应调用 <xref:System.ActivationContext>。</span><span class="sxs-lookup"><span data-stu-id="9092a-149">Call <xref:System.ActivationContext.Dispose%2A> when you are finished using the <xref:System.ActivationContext>.</span></span> <span data-ttu-id="9092a-150"><xref:System.ActivationContext.Dispose%2A> 方法使 <xref:System.ActivationContext> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="9092a-150">The <xref:System.ActivationContext.Dispose%2A> method leaves the <xref:System.ActivationContext> in an unusable state.</span></span> <span data-ttu-id="9092a-151">调用后 <xref:System.ActivationContext.Dispose%2A> ，必须释放对的所有引用， <xref:System.ActivationContext> 以便垃圾回收器能够回收占用的内存 <xref:System.ActivationContext> 。</span><span class="sxs-lookup"><span data-stu-id="9092a-151">After calling <xref:System.ActivationContext.Dispose%2A>, you must release all references to the <xref:System.ActivationContext> so the garbage collector can reclaim the memory that the <xref:System.ActivationContext> was occupying.</span></span> <span data-ttu-id="9092a-152">有关详细信息，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="9092a-152">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>

> [!NOTE]
>  <span data-ttu-id="9092a-153">每次释放对 <xref:System.ActivationContext.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.ActivationContext>。</span><span class="sxs-lookup"><span data-stu-id="9092a-153">Always call <xref:System.ActivationContext.Dispose%2A> before you release your last reference to the <xref:System.ActivationContext>.</span></span> <span data-ttu-id="9092a-154">否则，在垃圾回收器调用 <xref:System.ActivationContext> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="9092a-154">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ActivationContext> object's `Finalize` method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ActivationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ActivationContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="activationContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9092a-155">使 <see cref="T:System.ActivationContext" /> 对象在垃圾回收已收回 <see cref="T:System.ActivationContext" /> 之前尝试释放资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="9092a-155">Enables an <see cref="T:System.ActivationContext" /> object to attempt to free resources and perform other cleanup operations before the <see cref="T:System.ActivationContext" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public ActivationContext.ContextForm Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ActivationContext/ContextForm Form" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As ActivationContext.ContextForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ActivationContext::ContextForm Form { ActivationContext::ContextForm get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : ActivationContext.ContextForm" Usage="System.ActivationContext.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext+ContextForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9092a-156">获取当前应用程序的窗体或存储区上下文。</span><span class="sxs-lookup"><span data-stu-id="9092a-156">Gets the form, or store context, for the current application.</span></span></summary>
        <value><span data-ttu-id="9092a-157">枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="9092a-157">One of the enumeration values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="9092a-158">基于清单的应用程序可能没有安装在 ClickOnce 存储区中。</span><span class="sxs-lookup"><span data-stu-id="9092a-158">A manifest-based application might not be installed in the ClickOnce store.</span></span> <span data-ttu-id="9092a-159">不在应用商店中的应用程序（例如，在 Visual Studio 中执行的清单激活的应用程序）归类为 <xref:System.ActivationContext.ContextForm.Loose> 。</span><span class="sxs-lookup"><span data-stu-id="9092a-159">An application that is not in the store, such as a manifest-activated application executing in Visual Studio, is classified as <xref:System.ActivationContext.ContextForm.Loose>.</span></span> <span data-ttu-id="9092a-160">存储中包含的应用程序归类为 <xref:System.ActivationContext.ContextForm.StoreBounded> 。</span><span class="sxs-lookup"><span data-stu-id="9092a-160">An application that is contained in the store is classified as <xref:System.ActivationContext.ContextForm.StoreBounded>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public ApplicationIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ApplicationIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As ApplicationIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ApplicationIdentity ^ Identity { ApplicationIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : ApplicationIdentity" Usage="System.ActivationContext.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9092a-161">获取当前应用程序的应用程序标识。</span><span class="sxs-lookup"><span data-stu-id="9092a-161">Gets the application identity for the current application.</span></span></summary>
        <value><span data-ttu-id="9092a-162"><see cref="T:System.ApplicationIdentity" /> 对象，用于标识当前应用程序。</span><span class="sxs-lookup"><span data-stu-id="9092a-162">An <see cref="T:System.ApplicationIdentity" /> object that identifies the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="9092a-163">使用 <xref:System.ApplicationIdentity> 唯一的名称和位置来标识应用程序。</span><span class="sxs-lookup"><span data-stu-id="9092a-163">An <xref:System.ApplicationIdentity> uniquely identifies an application by its full name and location.</span></span>



## Examples
 <span data-ttu-id="9092a-164">下面的代码示例演示 <xref:System.ActivationContext> 如何使用对象获取 <xref:System.ApplicationIdentity> 基于清单的应用程序的。</span><span class="sxs-lookup"><span data-stu-id="9092a-164">The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application.</span></span> <span data-ttu-id="9092a-165">此代码示例是为类提供的更大示例的一部分 <xref:System.ActivationContext> 。</span><span class="sxs-lookup"><span data-stu-id="9092a-165">This code example is part of a larger example provided for the <xref:System.ActivationContext> class.</span></span>

 [!code-csharp[System.ActivationContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#2)]
 [!code-vb[System.ActivationContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="activationContext.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="9092a-166">要填充数据的对象。</span><span class="sxs-lookup"><span data-stu-id="9092a-166">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="9092a-167">此序列化的结构。</span><span class="sxs-lookup"><span data-stu-id="9092a-167">The structure for this serialization.</span></span></param>
        <summary><span data-ttu-id="9092a-168">使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="9092a-168">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
