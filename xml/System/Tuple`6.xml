<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56e120748b7ede980e3304383dbf5aced945f049" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100310102" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Tuple`6&lt;T1, T2, T3, T4, T5, T6&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`6" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; = class&#xA;    interface IStructuralComparable&#xA;    interface IStructuralEquatable&#xA;    interface IComparable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0" />
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable, System.Runtime.CompilerServices.ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Tuple`6&lt;T1, T2, T3, T4, T5, T6&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.Runtime.CompilerServices.ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable, ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable, System::Runtime::CompilerServices::ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; = class&#xA;    interface IStructuralComparable&#xA;    interface IStructuralEquatable&#xA;    interface IComparable&#xA;    interface ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`6&lt;T1, T2, T3, T4, T5, T6&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`6&lt;T1, T2, T3, T4, T5, T6&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.Runtime.CompilerServices.ITuple" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable&#xA;    interface ITuple" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1">
      <InterfaceName>System.Runtime.CompilerServices.ITuple</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="db964-101">此元组的第一个组件的类型。</span><span class="sxs-lookup"><span data-stu-id="db964-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="db964-102">此元组的第二个组件的类型。</span><span class="sxs-lookup"><span data-stu-id="db964-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="db964-103">此元组的第三个组件的类型。</span><span class="sxs-lookup"><span data-stu-id="db964-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="db964-104">此元组的第四个组件的类型。</span><span class="sxs-lookup"><span data-stu-id="db964-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="db964-105">元组的第五个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="db964-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="db964-106">元组的第六个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="db964-106">The type of the tuple's sixth component.</span></span></typeparam>
    <summary><span data-ttu-id="db964-107">表示 6 元组，或六元组。</span><span class="sxs-lookup"><span data-stu-id="db964-107">Represents a 6-tuple, or sextuple.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-108">元组是具有特定数量和值序列的数据结构。</span><span class="sxs-lookup"><span data-stu-id="db964-108">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="db964-109"><xref:System.Tuple%606>类表示6元组，即六元组，它是包含六个组件的元组。</span><span class="sxs-lookup"><span data-stu-id="db964-109">The <xref:System.Tuple%606> class represents a 6-tuple, or sextuple, which is a tuple that has six components.</span></span>  
  
 <span data-ttu-id="db964-110">可以 <xref:System.Tuple%606> 通过调用 <xref:System.Tuple%606.%23ctor%2A> 或静态方法来实例化对象  <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="db964-110">You can instantiate a <xref:System.Tuple%606> object by calling either the <xref:System.Tuple%606.%23ctor%2A> or the static  <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="db964-111">您可以使用只读 <xref:System.Tuple%606.Item1%2A> 、、、、 <xref:System.Tuple%606.Item2%2A> <xref:System.Tuple%606.Item3%2A> <xref:System.Tuple%606.Item4%2A> <xref:System.Tuple%606.Item5%2A> 和 <xref:System.Tuple%606.Item6%2A> 实例属性检索元组组件的值。</span><span class="sxs-lookup"><span data-stu-id="db964-111">You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%606.Item1%2A>, <xref:System.Tuple%606.Item2%2A>, <xref:System.Tuple%606.Item3%2A>, <xref:System.Tuple%606.Item4%2A>, <xref:System.Tuple%606.Item5%2A>, and <xref:System.Tuple%606.Item6%2A> instance properties.</span></span>  
  
 <span data-ttu-id="db964-112">元组通常以四种不同的方式使用：</span><span class="sxs-lookup"><span data-stu-id="db964-112">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="db964-113">表示单个数据集。</span><span class="sxs-lookup"><span data-stu-id="db964-113">To represent a single set of data.</span></span> <span data-ttu-id="db964-114">例如，元组可以表示数据库记录，并且其组件可以表示记录的各个字段。</span><span class="sxs-lookup"><span data-stu-id="db964-114">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="db964-115">提供对数据集的轻松访问和操作。</span><span class="sxs-lookup"><span data-stu-id="db964-115">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="db964-116">下面的示例定义一个 <xref:System.Tuple%606> 对象，该对象包含从1960到2000的每个人口普查的纽约人口数据。</span><span class="sxs-lookup"><span data-stu-id="db964-116">The following example defines a <xref:System.Tuple%606> object that contains population data for New York City for each census from 1960 through 2000.</span></span> <span data-ttu-id="db964-117">六元组传递给 `ComputePopulationChange` 方法，该方法用于计算 censuses 之间的年变化率，以及整个50年的年变化率。</span><span class="sxs-lookup"><span data-stu-id="db964-117">The sextuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 50 year period.</span></span>  
  
     [!code-csharp[System.Tuple\`6.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`6.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="db964-118">如果为，则从方法返回多个值，而不使用 `out` 参数 (在 c # 中 ) 或 `ByRef` (Visual Basic) 中的参数。</span><span class="sxs-lookup"><span data-stu-id="db964-118">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="db964-119">例如，上一个示例在对象中返回其计算统计信息以及城市名称 <xref:System.Tuple%606> 。</span><span class="sxs-lookup"><span data-stu-id="db964-119">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%606> object.</span></span>  
  
-   <span data-ttu-id="db964-120">若要通过单个参数向方法传递多个值，则为。</span><span class="sxs-lookup"><span data-stu-id="db964-120">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="db964-121">例如，该 <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> 方法只有一个参数，该参数使你可以为启动时线程执行的方法提供一个值。</span><span class="sxs-lookup"><span data-stu-id="db964-121">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="db964-122">如果提供 <xref:System.Tuple%606> 对象作为方法自变量，则可以提供包含六个数据项的线程启动例程。</span><span class="sxs-lookup"><span data-stu-id="db964-122">If you supply a <xref:System.Tuple%606> object as the method argument, you can supply the thread's startup routine with six items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; (item1, item2, item3, item4, item5, item6)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="db964-123">此元组的第一个组件的值。</span><span class="sxs-lookup"><span data-stu-id="db964-123">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="db964-124">此元组的第二个组件的值。</span><span class="sxs-lookup"><span data-stu-id="db964-124">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="db964-125">此元组的第三个组件的值。</span><span class="sxs-lookup"><span data-stu-id="db964-125">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="db964-126">此元组的第四个组件的值</span><span class="sxs-lookup"><span data-stu-id="db964-126">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="db964-127">元组的第五个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-127">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="db964-128">元组的第六个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-128">The value of the tuple's sixth component.</span></span></param>
        <summary><span data-ttu-id="db964-129">初始化 <see cref="T:System.Tuple`6" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="db964-129">Initializes a new instance of the <see cref="T:System.Tuple`6" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-130">你还可以使用静态 <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> 方法来实例化6元组对象，而无需显式指定其组件的类型。</span><span class="sxs-lookup"><span data-stu-id="db964-130">You can also use the static <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method to instantiate a 6-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="db964-131">下面的示例使用 <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> 方法来实例化6元组，该元组的第一个组件为类型 <xref:System.String> ，其剩余的组件为类型 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="db964-131">The following example uses the <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method to instantiate a 6-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#11)]
 [!code-vb[System.Tuple.Create#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#11)]  
  
 <span data-ttu-id="db964-132">这等效于对 <xref:System.Tuple%606.%23ctor%2A> 类构造函数的以下调用。</span><span class="sxs-lookup"><span data-stu-id="db964-132">This is equivalent to the following call to the <xref:System.Tuple%606.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#12)]
 [!code-vb[System.Tuple.Create#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="db964-133">与该实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="db964-133">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="db964-134">返回一个值，该值指示当前的 <see cref="T:System.Tuple`6" /> 对象是否与指定对象相等。</span><span class="sxs-lookup"><span data-stu-id="db964-134">Returns a value that indicates whether the current <see cref="T:System.Tuple`6" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="db964-135">如果当前实例等于指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="db964-135"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-136">`obj`在下列条件下，参数被视为等于当前实例：</span><span class="sxs-lookup"><span data-stu-id="db964-136">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="db964-137">它是一个 <xref:System.Tuple%606> 对象。</span><span class="sxs-lookup"><span data-stu-id="db964-137">It is a <xref:System.Tuple%606> object.</span></span>  
  
-   <span data-ttu-id="db964-138">其六个组件的类型与当前实例相同。</span><span class="sxs-lookup"><span data-stu-id="db964-138">Its six components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="db964-139">它的六个组件等于当前实例的组件。</span><span class="sxs-lookup"><span data-stu-id="db964-139">Its six components are equal to those of the current instance.</span></span> <span data-ttu-id="db964-140">相等性取决于每个组件的默认对象相等比较器。</span><span class="sxs-lookup"><span data-stu-id="db964-140">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db964-141">下面的示例定义了一个 sextuples 数组，其中包含从1960到2000的洛杉矶和纽约的人口数据。</span><span class="sxs-lookup"><span data-stu-id="db964-141">The following example defines an array of sextuples that contain population data for Los Angeles and New York from 1960 to 2000.</span></span> <span data-ttu-id="db964-142">每个六元组的第一个分量标识市县。</span><span class="sxs-lookup"><span data-stu-id="db964-142">The first component of each sextuple identifies the city.</span></span> <span data-ttu-id="db964-143">第一个、第三个和第四个 sextuples 包含纽约的数据。</span><span class="sxs-lookup"><span data-stu-id="db964-143">The first, third, and fourth sextuples contain data for New York.</span></span> <span data-ttu-id="db964-144">第一个六元组是第四个六元组的副本。</span><span class="sxs-lookup"><span data-stu-id="db964-144">The first sextuple is a duplicate of the fourth sextuple.</span></span> <span data-ttu-id="db964-145">第三个六元组将城市标识为 "纽约市"，而不是 "纽约"。</span><span class="sxs-lookup"><span data-stu-id="db964-145">The third sextuple identifies the city as "New York City" instead of "New York".</span></span> <span data-ttu-id="db964-146">如示例所示，只有第四个六元组等于第一个六元组。</span><span class="sxs-lookup"><span data-stu-id="db964-146">As the example shows, only the fourth sextuple is equal to the first sextuple.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`6.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db964-147">返回当前 <see cref="T:System.Tuple`6" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="db964-147">Returns the hash code for the current <see cref="T:System.Tuple`6" /> object.</span></span></summary>
        <returns><span data-ttu-id="db964-148">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="db964-148">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db964-149">获取当前 <see cref="T:System.Tuple`6" /> 对象的第一个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-149">Gets the value of the current <see cref="T:System.Tuple`6" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="db964-150">当前 <see cref="T:System.Tuple`6" /> 对象的第一个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-150">The value of the current <see cref="T:System.Tuple`6" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-151">可以 <xref:System.Tuple%606.Item1%2A> 通过以下两种方式之一动态确定组件的类型：</span><span class="sxs-lookup"><span data-stu-id="db964-151">You can dynamically determine the type of the <xref:System.Tuple%606.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="db964-152">通过 `GetType` 对属性返回的值调用方法 <xref:System.Tuple%606.Item1%2A> 。</span><span class="sxs-lookup"><span data-stu-id="db964-152">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="db964-153">通过检索 <xref:System.Type> 表示对象的对象 <xref:System.Tuple%606> ，并从该数组中检索由其方法返回的第一个元素 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="db964-153">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db964-154">下面的示例定义了一个对象数组，这些 <xref:System.Tuple%606> 对象的组件包含三个美国城市 (纽约、芝加哥和洛杉矶) 从1960到2000的人口数据。</span><span class="sxs-lookup"><span data-stu-id="db964-154">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="db964-155">然后，它会显示一个列出数据的表。</span><span class="sxs-lookup"><span data-stu-id="db964-155">It then displays a table that lists the data.</span></span> <span data-ttu-id="db964-156">若要显示 city 名称，它将检索 <xref:System.Tuple%606.Item1%2A> 每个对象的属性值 <xref:System.Tuple%606> 。</span><span class="sxs-lookup"><span data-stu-id="db964-156">To display the city name, it retrieves the value of the <xref:System.Tuple%606.Item1%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db964-157">获取当前 <see cref="T:System.Tuple`6" /> 对象的第二个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-157">Gets the value of the current <see cref="T:System.Tuple`6" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="db964-158">当前 <see cref="T:System.Tuple`6" /> 对象的第二个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-158">The value of the current <see cref="T:System.Tuple`6" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-159">可以 <xref:System.Tuple%606.Item2%2A> 通过以下两种方式之一动态确定组件的类型：</span><span class="sxs-lookup"><span data-stu-id="db964-159">You can dynamically determine the type of the <xref:System.Tuple%606.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="db964-160">通过 `GetType` 对属性返回的值调用方法 <xref:System.Tuple%606.Item2%2A> 。</span><span class="sxs-lookup"><span data-stu-id="db964-160">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="db964-161">通过检索 <xref:System.Type> 表示对象的对象 <xref:System.Tuple%606> ，并从该数组中检索由其方法返回的第一个元素 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="db964-161">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db964-162">下面的示例定义了一个对象数组，这些 <xref:System.Tuple%606> 对象的组件包含三个美国城市 (纽约、芝加哥和洛杉矶) 从1960到2000的人口数据。</span><span class="sxs-lookup"><span data-stu-id="db964-162">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="db964-163">然后，它会显示一个列出数据的表。</span><span class="sxs-lookup"><span data-stu-id="db964-163">It then displays a table that lists the data.</span></span> <span data-ttu-id="db964-164">若要显示1960中的人口，它将检索 <xref:System.Tuple%606.Item2%2A> 每个对象的属性值 <xref:System.Tuple%606> 。</span><span class="sxs-lookup"><span data-stu-id="db964-164">To display the population in 1960, it retrieves the value of the <xref:System.Tuple%606.Item2%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db964-165">获取当前 <see cref="T:System.Tuple`6" /> 对象的第三个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-165">Gets the value of the current <see cref="T:System.Tuple`6" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="db964-166">当前 <see cref="T:System.Tuple`6" /> 对象的第三个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-166">The value of the current <see cref="T:System.Tuple`6" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-167">可以 <xref:System.Tuple%606.Item3%2A> 通过以下两种方式之一动态确定组件的类型：</span><span class="sxs-lookup"><span data-stu-id="db964-167">You can dynamically determine the type of the <xref:System.Tuple%606.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="db964-168">通过 `GetType` 对属性返回的值调用方法 <xref:System.Tuple%606.Item3%2A> 。</span><span class="sxs-lookup"><span data-stu-id="db964-168">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="db964-169">通过检索 <xref:System.Type> 表示对象的对象 <xref:System.Tuple%606> ，并从该数组中检索由其方法返回的第一个元素 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="db964-169">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db964-170">下面的示例定义了一个对象数组，这些 <xref:System.Tuple%606> 对象的组件包含三个美国城市 (纽约、芝加哥和洛杉矶) 从1960到2000的人口数据。</span><span class="sxs-lookup"><span data-stu-id="db964-170">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="db964-171">然后，它会显示一个列出数据的表。</span><span class="sxs-lookup"><span data-stu-id="db964-171">It then displays a table that lists the data.</span></span> <span data-ttu-id="db964-172">若要显示1970中的人口，它将检索 <xref:System.Tuple%606.Item3%2A> 每个对象的属性值 <xref:System.Tuple%606> 。</span><span class="sxs-lookup"><span data-stu-id="db964-172">To display the population in 1970, it retrieves the value of the <xref:System.Tuple%606.Item3%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db964-173">获取当前 <see cref="T:System.Tuple`6" /> 对象的第四个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-173">Gets the value of the current <see cref="T:System.Tuple`6" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="db964-174">当前 <see cref="T:System.Tuple`6" /> 对象的第四个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-174">The value of the current <see cref="T:System.Tuple`6" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-175">可以 <xref:System.Tuple%606.Item4%2A> 通过以下两种方式之一动态确定组件的类型：</span><span class="sxs-lookup"><span data-stu-id="db964-175">You can dynamically determine the type of the <xref:System.Tuple%606.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="db964-176">通过 `GetType` 对属性返回的值调用方法 <xref:System.Tuple%606.Item4%2A> 。</span><span class="sxs-lookup"><span data-stu-id="db964-176">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="db964-177">通过检索 <xref:System.Type> 表示对象的对象 <xref:System.Tuple%606> ，并从该数组中检索由其方法返回的第一个元素 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="db964-177">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db964-178">下面的示例定义了一个对象数组，这些 <xref:System.Tuple%606> 对象的组件包含三个美国城市 (纽约、芝加哥和洛杉矶) 从1960到2000的人口数据。</span><span class="sxs-lookup"><span data-stu-id="db964-178">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="db964-179">然后，它会显示一个列出数据的表。</span><span class="sxs-lookup"><span data-stu-id="db964-179">It then displays a table that lists the data.</span></span> <span data-ttu-id="db964-180">若要显示1980中的人口，它将检索 <xref:System.Tuple%606.Item4%2A> 每个对象的属性值 <xref:System.Tuple%606> 。</span><span class="sxs-lookup"><span data-stu-id="db964-180">To display the population in 1980, it retrieves the value of the <xref:System.Tuple%606.Item4%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item5 : 'T5" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db964-181">获取当前 <see cref="T:System.Tuple`6" /> 对象的第五个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-181">Gets the value of the current <see cref="T:System.Tuple`6" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="db964-182">当前 <see cref="T:System.Tuple`6" /> 对象的第五个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-182">The value of the current <see cref="T:System.Tuple`6" /> object's fifth  component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-183">可以 <xref:System.Tuple%606.Item5%2A> 通过以下两种方式之一动态确定组件的类型：</span><span class="sxs-lookup"><span data-stu-id="db964-183">You can dynamically determine the type of the <xref:System.Tuple%606.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="db964-184">通过 `GetType` 对属性返回的值调用方法 <xref:System.Tuple%606.Item5%2A> 。</span><span class="sxs-lookup"><span data-stu-id="db964-184">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="db964-185">通过检索 <xref:System.Type> 表示对象的对象 <xref:System.Tuple%606> ，并从该数组中检索由其方法返回的第一个元素 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="db964-185">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db964-186">下面的示例定义了一个对象数组，这些 <xref:System.Tuple%606> 对象的组件包含三个美国城市 (纽约、芝加哥和洛杉矶) 从1960到2000的人口数据。</span><span class="sxs-lookup"><span data-stu-id="db964-186">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="db964-187">然后，它会显示一个列出数据的表。</span><span class="sxs-lookup"><span data-stu-id="db964-187">It then displays a table that lists the data.</span></span> <span data-ttu-id="db964-188">若要显示1990中的人口，它将检索 <xref:System.Tuple%606.Item5%2A> 每个对象的属性值 <xref:System.Tuple%606> 。</span><span class="sxs-lookup"><span data-stu-id="db964-188">To display the population in 1990, it retrieves the value of the <xref:System.Tuple%606.Item5%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item6 : 'T6" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db964-189">获取当前 <see cref="T:System.Tuple`6" /> 对象的第六个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-189">Gets the value of the current <see cref="T:System.Tuple`6" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="db964-190">当前 <see cref="T:System.Tuple`6" /> 对象的第六个分量的值。</span><span class="sxs-lookup"><span data-stu-id="db964-190">The value of the current <see cref="T:System.Tuple`6" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-191">可以 <xref:System.Tuple%606.Item6%2A> 通过以下两种方式之一动态确定组件的类型：</span><span class="sxs-lookup"><span data-stu-id="db964-191">You can dynamically determine the type of the <xref:System.Tuple%606.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="db964-192">通过 `GetType` 对属性返回的值调用方法 <xref:System.Tuple%606.Item6%2A> 。</span><span class="sxs-lookup"><span data-stu-id="db964-192">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="db964-193">通过检索 <xref:System.Type> 表示对象的对象 <xref:System.Tuple%606> ，并从该数组中检索由其方法返回的第一个元素 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="db964-193">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db964-194">下面的示例定义了一个对象数组，这些 <xref:System.Tuple%606> 对象的组件包含三个美国城市 (纽约、芝加哥和洛杉矶) 从1960到2000的人口数据。</span><span class="sxs-lookup"><span data-stu-id="db964-194">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="db964-195">然后，它会显示一个列出数据的表。</span><span class="sxs-lookup"><span data-stu-id="db964-195">It then displays a table that lists the data.</span></span> <span data-ttu-id="db964-196">若要显示2000中的人口，它将检索 <xref:System.Tuple%606.Item6%2A> 每个对象的属性值 <xref:System.Tuple%606> 。</span><span class="sxs-lookup"><span data-stu-id="db964-196">To display the population in 2000, it retrieves the value of the <xref:System.Tuple%606.Item6%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralComparable.CompareTo : obj * System.Collections.IComparer -&gt; int&#xA;override this.System.Collections.IStructuralComparable.CompareTo : obj * System.Collections.IComparer -&gt; int" Usage="tuple.System.Collections.IStructuralComparable.CompareTo (other, comparer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="db964-197">要与当前实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="db964-197">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="db964-198">提供用于比较的自定义规则的对象。</span><span class="sxs-lookup"><span data-stu-id="db964-198">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="db964-199">使用指定的比较器将当前的 <see cref="T:System.Tuple`6" /> 对象与指定对象进行比较，并返回一个整数，该整数指示当前对象在排序顺序中的位置是在指定对象之前、之后还是与其相同。</span><span class="sxs-lookup"><span data-stu-id="db964-199">Compares the current <see cref="T:System.Tuple`6" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="db964-200">一个带符号整数，指示此实例和 <paramref name="other" /> 在排序顺序中的相对位置，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="db964-200">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="db964-201">值</span><span class="sxs-lookup"><span data-stu-id="db964-201">Value</span></span> 
 </term><description> <span data-ttu-id="db964-202">说明</span><span class="sxs-lookup"><span data-stu-id="db964-202">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="db964-203">负整数</span><span class="sxs-lookup"><span data-stu-id="db964-203">A negative integer</span></span> 
 </term><description> <span data-ttu-id="db964-204">此实例位于 <paramref name="other" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="db964-204">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="db964-205">零</span><span class="sxs-lookup"><span data-stu-id="db964-205">Zero</span></span> 
 </term><description> <span data-ttu-id="db964-206">此实例在排序顺序中的位置与 <paramref name="other" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="db964-206">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="db964-207">正整数</span><span class="sxs-lookup"><span data-stu-id="db964-207">A positive integer</span></span> 
 </term><description> <span data-ttu-id="db964-208">此实例位于 <paramref name="other" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="db964-208">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-209">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="db964-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db964-210">它只能在 <xref:System.Tuple%606> 实例被强制转换为 <xref:System.Collections.IStructuralComparable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="db964-210">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="db964-211">此方法允许您定义对象的自定义比较 <xref:System.Tuple%606> 。</span><span class="sxs-lookup"><span data-stu-id="db964-211">This method lets you define customized comparisons of <xref:System.Tuple%606> objects.</span></span> <span data-ttu-id="db964-212">例如，您可以使用此方法根据 <xref:System.Tuple%606> 特定组件的值对对象进行排序。</span><span class="sxs-lookup"><span data-stu-id="db964-212">For example, you can use this method to order <xref:System.Tuple%606> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="db964-213">尽管可以直接调用此方法，但它最常由包含参数的集合排序方法调用， <xref:System.Collections.IComparer> 以对集合的成员进行排序。</span><span class="sxs-lookup"><span data-stu-id="db964-213">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="db964-214">例如，它由 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> 方法和 <xref:System.Collections.SortedList.Add%2A> <xref:System.Collections.SortedList> 使用构造函数实例化的对象的方法调用 <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="db964-214">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="db964-215"><xref:System.Tuple%606.System%23Collections%23IStructuralComparable%23CompareTo%2A>方法旨在用于排序操作。</span><span class="sxs-lookup"><span data-stu-id="db964-215">The <xref:System.Tuple%606.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="db964-216">如果比较的主要目的是确定两个对象是否相等，则不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="db964-216">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="db964-217">若要确定两个对象是否相等，请调用 <xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="db964-217">To determine whether two objects are equal, call the <xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db964-218">下面的示例创建一个对象数组 <xref:System.Tuple%606> ，其中包含三个美国城市的人口数据（从1960到2000）。</span><span class="sxs-lookup"><span data-stu-id="db964-218">The following example creates an array of <xref:System.Tuple%606> objects that contains population data for three U.S. cities from 1960 to 2000.</span></span> <span data-ttu-id="db964-219">六元组的第一个组件是城市名称。</span><span class="sxs-lookup"><span data-stu-id="db964-219">The sextuple's first component is the city name.</span></span> <span data-ttu-id="db964-220">剩余的五个组件表示从1960到2000的10年间隔的人口。</span><span class="sxs-lookup"><span data-stu-id="db964-220">The remaining five components represent the population at 10-year intervals from 1960 to 2000.</span></span>  
  
 <span data-ttu-id="db964-221">`PopulationComparer`类提供一个 <xref:System.Collections.IComparer> 实现，该实现允许 sextuples 的数组按其任何一个组件进行排序。</span><span class="sxs-lookup"><span data-stu-id="db964-221">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of sextuples to be sorted by any one of its components.</span></span> <span data-ttu-id="db964-222">向类中的构造函数提供了两个值 `PopulationComparer` ：定义排序顺序的组件的位置，以及一个 <xref:System.Boolean> 指示是否应按升序或降序对元组对象进行排序的值。</span><span class="sxs-lookup"><span data-stu-id="db964-222">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="db964-223">然后，该示例以未排序的顺序显示数组中的元素，按第三个组件对其进行排序， (1970) 中的人口并显示它们，然后按照) 2000 中的人口 (第六个组件对其进行排序，并显示它们。</span><span class="sxs-lookup"><span data-stu-id="db964-223">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1970) and displays them, and then sorts them by the sixth component (the population in 2000) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db964-224"><paramref name="other" /> 不是 <see cref="T:System.Tuple`6" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="db964-224"><paramref name="other" /> is not a <see cref="T:System.Tuple`6" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralEquatable.Equals : obj * System.Collections.IEqualityComparer -&gt; bool&#xA;override this.System.Collections.IStructuralEquatable.Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="tuple.System.Collections.IStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="db964-225">与该实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="db964-225">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="db964-226">一个对象，该对象定义用于评估两个对象是否相等的方法。</span><span class="sxs-lookup"><span data-stu-id="db964-226">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="db964-227">返回一个值，该值根据指定的比较方法指示当前的 <see cref="T:System.Tuple`6" /> 对象是否与指定对象相等。</span><span class="sxs-lookup"><span data-stu-id="db964-227">Returns a value that indicates whether the current <see cref="T:System.Tuple`6" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="db964-228">如果当前实例等于指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="db964-228"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-229">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="db964-229">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db964-230">它只能在 <xref:System.Tuple%606> 实例被强制转换为 <xref:System.Collections.IStructuralEquatable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="db964-230">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="db964-231"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>仅当不为时，才会调用实现 `other` `null` ，并且如果可以成功地强制转换 c # 中的 () 或将) Visual Basic 中的 (转换为 <xref:System.Tuple%606> 其组件与当前实例相同的类型的对象。</span><span class="sxs-lookup"><span data-stu-id="db964-231">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%606> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="db964-232"><xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29>方法首先传递 <xref:System.Tuple%606.Item1%2A> <xref:System.Tuple%606> 要与实现进行比较的对象的值 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="db964-232">The <xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%606.Item1%2A> values of the <xref:System.Tuple%606> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="db964-233">如果此方法调用返回 `true` ，将再次调用方法并传递 <xref:System.Tuple%606.Item2%2A> 两个对象的值 <xref:System.Tuple%606> 。</span><span class="sxs-lookup"><span data-stu-id="db964-233">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%606.Item2%2A> values of the two <xref:System.Tuple%606> objects.</span></span> <span data-ttu-id="db964-234">此过程将继续，直到方法调用 `false` 在比较特定对值时返回 `Item` ，或将两个 <xref:System.Tuple%606.Item6%2A> 值传递给方法。</span><span class="sxs-lookup"><span data-stu-id="db964-234">This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%606.Item6%2A> values are passed to the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db964-235">下面的示例定义了一个 `RateComparer` 类，该类执行用于相等性的自定义测试。</span><span class="sxs-lookup"><span data-stu-id="db964-235">The following example defines a `RateComparer` class that performs a custom test for equality.</span></span> <span data-ttu-id="db964-236">如果传递到其 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> 方法的值的类型为 <xref:System.Single> 或 <xref:System.Double> ，则方法通过使用最多三个小数位来测试是否相等。</span><span class="sxs-lookup"><span data-stu-id="db964-236">If the values that are passed to its <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method are of type <xref:System.Single> or <xref:System.Double>, the method tests for equality by using only up to three fractional digits.</span></span> <span data-ttu-id="db964-237">否则，它只是调用 `x` 参数的 `Equals` 方法。</span><span class="sxs-lookup"><span data-stu-id="db964-237">Otherwise, it simply calls the `x` parameter's `Equals` method.</span></span> <span data-ttu-id="db964-238">该示例使用此 <xref:System.Collections.IEqualityComparer> 实现来确定是否有四个 <xref:System.Tuple%606> 对象，这些对象包含有关1960与2000之间的人口变化率的数据是否相等。</span><span class="sxs-lookup"><span data-stu-id="db964-238">The example uses this <xref:System.Collections.IEqualityComparer> implementation to determine whether four <xref:System.Tuple%606> objects that contain data on the rate of population change between 1960 and 2000 are equal.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`6.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralEquatable.GetHashCode : System.Collections.IEqualityComparer -&gt; int&#xA;override this.System.Collections.IStructuralEquatable.GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="tuple.System.Collections.IStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="db964-239">一个对象，其 <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 方法计算当前 <see cref="T:System.Tuple`6" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="db964-239">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`6" /> object.</span></span></param>
        <summary><span data-ttu-id="db964-240">使用指定的计算方法计算当前 <see cref="T:System.Tuple`6" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="db964-240">Calculates the hash code for the current <see cref="T:System.Tuple`6" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="db964-241">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="db964-241">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-242">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="db964-242">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db964-243">它只能在 <xref:System.Tuple%606> 实例被强制转换为 <xref:System.Collections.IStructuralEquatable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="db964-243">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="db964-244">方法只是包装对 `comparer` 对象实现的调用 <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="db964-244">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="db964-245">用于计算哈希代码的算法应为被视为相等的两个对象返回相同的哈希代码 <xref:System.Tuple%606> 。</span><span class="sxs-lookup"><span data-stu-id="db964-245">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%606> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="tuple.System.IComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="db964-246">要与当前实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="db964-246">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="db964-247">比较当前 <see cref="T:System.Tuple`6" /> 对象与指定对象，并返回一个整数，该整数指示当前对象在排序顺序中的位置：是在指定对象之前、之后还是在与指定对象相同的位置。</span><span class="sxs-lookup"><span data-stu-id="db964-247">Compares the current <see cref="T:System.Tuple`6" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="db964-248">一个带符号整数，指示此实例和 <paramref name="obj" /> 在排序顺序中的相对位置，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="db964-248">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="db964-249">值</span><span class="sxs-lookup"><span data-stu-id="db964-249">Value</span></span> 
 </term><description> <span data-ttu-id="db964-250">说明</span><span class="sxs-lookup"><span data-stu-id="db964-250">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="db964-251">负整数</span><span class="sxs-lookup"><span data-stu-id="db964-251">A negative integer</span></span> 
 </term><description> <span data-ttu-id="db964-252">此实例位于 <paramref name="obj" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="db964-252">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="db964-253">零</span><span class="sxs-lookup"><span data-stu-id="db964-253">Zero</span></span> 
 </term><description> <span data-ttu-id="db964-254">此实例在排序顺序中的位置与 <paramref name="obj" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="db964-254">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="db964-255">正整数</span><span class="sxs-lookup"><span data-stu-id="db964-255">A positive integer</span></span> 
 </term><description> <span data-ttu-id="db964-256">此实例位于 <paramref name="obj" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="db964-256">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-257">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="db964-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db964-258">它只能在 <xref:System.Tuple%606> 实例被强制转换为 <xref:System.IComparable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="db964-258">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="db964-259">此方法提供 <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> 类的实现 <xref:System.Tuple%606> 。</span><span class="sxs-lookup"><span data-stu-id="db964-259">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%606> class.</span></span> <span data-ttu-id="db964-260">尽管可以直接调用方法，但它通常由集合排序方法（如和）的默认重载调用， <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType> 以对集合的成员进行排序。</span><span class="sxs-lookup"><span data-stu-id="db964-260">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="db964-261"><xref:System.Tuple%606.System%23IComparable%23CompareTo%2A>方法旨在用于排序操作。</span><span class="sxs-lookup"><span data-stu-id="db964-261">The <xref:System.Tuple%606.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="db964-262">如果比较的主要目的是确定两个对象是否相等，则不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="db964-262">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="db964-263">若要确定两个对象是否相等，请调用 <xref:System.Tuple%606.Equals%28System.Object%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="db964-263">To determine whether two objects are equal, call the <xref:System.Tuple%606.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="db964-264"><xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29>方法使用默认的对象比较器来比较每个组件。</span><span class="sxs-lookup"><span data-stu-id="db964-264">The <xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29> method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db964-265">下面的示例创建一个对象数组 <xref:System.Tuple%606> ，其中包含1960到2000美国中三个城市的人口数据。</span><span class="sxs-lookup"><span data-stu-id="db964-265">The following example creates an array of <xref:System.Tuple%606> objects that contain population data for three cities in the United States from 1960 to 2000.</span></span> <span data-ttu-id="db964-266">六个组件由城市名称后接城市人口10年（从1960到2000）。</span><span class="sxs-lookup"><span data-stu-id="db964-266">The six components consist of the city name followed by the city's population at 10-year intervals from 1960 to 2000.</span></span> <span data-ttu-id="db964-267">该示例以未排序的顺序显示数组中每个元组的组件，对数组进行排序，然后调用 <xref:System.Tuple%606.ToString%2A> 方法以按排序顺序显示每个元组。</span><span class="sxs-lookup"><span data-stu-id="db964-267">The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls the <xref:System.Tuple%606.ToString%2A> method to display each tuple in sorted order.</span></span> <span data-ttu-id="db964-268">输出显示数组已按名称排序，这是第一个组件。</span><span class="sxs-lookup"><span data-stu-id="db964-268">The output shows that the array has been sorted by name, which is the first component.</span></span> <span data-ttu-id="db964-269">请注意，该示例不会直接调用 <xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="db964-269">Note that the example does not directly call the <xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="db964-270">此方法由 <xref:System.Array.Sort%28System.Array%29> 方法为数组中的每个元素隐式调用。</span><span class="sxs-lookup"><span data-stu-id="db964-270">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`6.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db964-271"><paramref name="obj" /> 不是 <see cref="T:System.Tuple`6" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="db964-271"><paramref name="obj" /> is not a <see cref="T:System.Tuple`6" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object? System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.System.Runtime.CompilerServices.ITuple.Item(int) : obj" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="db964-272">指定 <see langword="Tuple" /> 元素的索引。</span><span class="sxs-lookup"><span data-stu-id="db964-272">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="db964-273"><paramref name="index" /> 的范围可以介于 0 到 5 之间。</span><span class="sxs-lookup"><span data-stu-id="db964-273"><paramref name="index" /> can range from 0 to 5.</span></span></param>
        <summary><span data-ttu-id="db964-274">获取指定 <see langword="Tuple" /> 元素的值。</span><span class="sxs-lookup"><span data-stu-id="db964-274">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="db964-275">指定位置 <see langword="Tuple" /> 元素的值。</span><span class="sxs-lookup"><span data-stu-id="db964-275">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-276"><xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>属性是显式接口实现。</span><span class="sxs-lookup"><span data-stu-id="db964-276">The <xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="db964-277">若要调用该对象，必须将对象强制转换或转换 <xref:System.Tuple%606> 为 <xref:System.Runtime.CompilerServices.ITuple> 接口对象。</span><span class="sxs-lookup"><span data-stu-id="db964-277">To call it, you must cast or convert the <xref:System.Tuple%606> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="db964-278"><paramref name="index" /> 小于 0 或大于 5。</span><span class="sxs-lookup"><span data-stu-id="db964-278"><paramref name="index" /> is less than 0 or greater than 5.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Runtime.CompilerServices.ITuple.Length : int" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db964-279">获取 <see langword="Tuple" /> 中的元素数。</span><span class="sxs-lookup"><span data-stu-id="db964-279">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="db964-280">6，<see cref="T:System.Tuple`6" /> 对象中的元素数。</span><span class="sxs-lookup"><span data-stu-id="db964-280">6, the number of elements in a <see cref="T:System.Tuple`6" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-281"><xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Length%2A>属性是显式接口实现。</span><span class="sxs-lookup"><span data-stu-id="db964-281">The <xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="db964-282">若要调用该对象，必须将对象强制转换或转换 <xref:System.Tuple%606> 为 <xref:System.Runtime.CompilerServices.ITuple> 接口对象。</span><span class="sxs-lookup"><span data-stu-id="db964-282">To call it, you must cast or convert the <xref:System.Tuple%606> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db964-283">返回表示此 <see cref="T:System.Tuple`6" /> 实例的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="db964-283">Returns a string that represents the value of this <see cref="T:System.Tuple`6" /> instance.</span></span></summary>
        <returns><span data-ttu-id="db964-284">此 <see cref="T:System.Tuple`6" /> 对象的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="db964-284">The string representation of this <see cref="T:System.Tuple`6" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db964-285">此方法返回的字符串采用的 (形式为： *Item1*、 *Item2*、 *Item3*、 *tuple.item4*、 `Item5, Item6`) ，其中 *Item1*、 *Item2*、 *Item3*、 *tuple.item4*、 *tuple.item5* 和 *tuple.item6* 分别表示、、、 <xref:System.Tuple%606.Item1%2A> 、 <xref:System.Tuple%606.Item2%2A> <xref:System.Tuple%606.Item3%2A> <xref:System.Tuple%606.Item4%2A> <xref:System.Tuple%606.Item5%2A> 和 <xref:System.Tuple%606.Item6%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="db964-285">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, and *Item6* represent the values of the <xref:System.Tuple%606.Item1%2A>, <xref:System.Tuple%606.Item2%2A>, <xref:System.Tuple%606.Item3%2A>, <xref:System.Tuple%606.Item4%2A>, <xref:System.Tuple%606.Item5%2A>, and <xref:System.Tuple%606.Item6%2A> properties, respectively.</span></span> <span data-ttu-id="db964-286">如果任何属性值为，则将 `null` 其表示为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="db964-286">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db964-287">下面的示例定义一个 <xref:System.Tuple%606> 对象，该对象包含从1960到2000的每个人口普查的纽约人口数据。</span><span class="sxs-lookup"><span data-stu-id="db964-287">The following example defines a <xref:System.Tuple%606> object that contains population data for New York City for each census from 1960 through 2000.</span></span> <span data-ttu-id="db964-288">然后通过调用方法来显示六元组的组件 <xref:System.Tuple%606.ToString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="db964-288">The components of the sextuple are then displayed by a call to the <xref:System.Tuple%606.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`6.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`6.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
