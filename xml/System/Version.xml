<Type Name="Version" FullName="System.Version">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a2f71bc90fe2e4edcb25f40556fa38f02423608" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86685267" /></Metadata><TypeSignature Language="C#" Value="public sealed class Version : IComparable, IComparable&lt;Version&gt;, IEquatable&lt;Version&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Version extends System.Object implements class System.IComparable, class System.IComparable`1&lt;class System.Version&gt;, class System.IEquatable`1&lt;class System.Version&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.Version" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Version&#xA;Implements IComparable, IComparable(Of Version), IEquatable(Of Version)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class Version sealed : IComparable, IComparable&lt;Version ^&gt;, IEquatable&lt;Version ^&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type Version = class&#xA;    interface IComparable&#xA;    interface IComparable&lt;Version&gt;&#xA;    interface IEquatable&lt;Version&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public sealed class Version : ICloneable, IComparable, IComparable&lt;Version&gt;, IEquatable&lt;Version&gt;" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Version extends System.Object implements class System.ICloneable, class System.IComparable, class System.IComparable`1&lt;class System.Version&gt;, class System.IEquatable`1&lt;class System.Version&gt;" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Version&#xA;Implements ICloneable, IComparable, IComparable(Of Version), IEquatable(Of Version)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Version sealed : ICloneable, IComparable, IComparable&lt;Version ^&gt;, IEquatable&lt;Version ^&gt;" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Version = class&#xA;    interface ICloneable&#xA;    interface IComparable&#xA;    interface IComparable&lt;Version&gt;&#xA;    interface IEquatable&lt;Version&gt;" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Version = class&#xA;    interface IComparable&#xA;    interface IComparable&lt;Version&gt;&#xA;    interface IEquatable&lt;Version&gt;&#xA;    interface ICloneable" FrameworkAlternate="netcore-2.0" />
  <TypeSignature Language="C#" Value="public sealed class Version : ICloneable, IComparable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Version extends System.Object implements class System.ICloneable, class System.IComparable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Version&#xA;Implements ICloneable, IComparable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class Version sealed : ICloneable, IComparable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type Version = class&#xA;    interface ICloneable&#xA;    interface IComparable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Version extends System.Object implements class System.ICloneable, class System.IComparable, class System.IComparable`1&lt;class System.Version&gt;, class System.IEquatable`1&lt;class System.Version&gt;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IComparable&lt;System.Version&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IEquatable&lt;System.Version&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d59fe-101">表示程序集、操作系统或公共语言运行时的版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-101">Represents the version number of an assembly, operating system, or the common language runtime.</span></span> <span data-ttu-id="d59fe-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="d59fe-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-103">版本号包括两个到四个组件：主要版本号、次要版本号、内部版本号和修订号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-103">Version numbers consist of two to four components: major, minor, build, and revision.</span></span> <span data-ttu-id="d59fe-104">主要和次要组件是必需的;"生成" 和 "修订" 组件是可选的，但如果定义了修订组件，则需要生成组件。</span><span class="sxs-lookup"><span data-stu-id="d59fe-104">The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined.</span></span> <span data-ttu-id="d59fe-105">所有定义的组件都必须是大于或等于0的整数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-105">All defined components must be integers greater than or equal to 0.</span></span> <span data-ttu-id="d59fe-106">版本号的格式如下 (可选组件以方括号 ( [和] ) 显示：</span><span class="sxs-lookup"><span data-stu-id="d59fe-106">The format of the version number is as follows (optional components are shown in square brackets ([ and ]):</span></span>  
  
 <span data-ttu-id="d59fe-107">*主要*。*小调*[.*生成*[。*修订号*]]</span><span class="sxs-lookup"><span data-stu-id="d59fe-107">*major*.*minor*[.*build*[.*revision*]]</span></span>  
  
 <span data-ttu-id="d59fe-108">约定使用组件，如下所示：</span><span class="sxs-lookup"><span data-stu-id="d59fe-108">The components are used by convention as follows:</span></span>  
  
-   <span data-ttu-id="d59fe-109">*主要*：名称相同但主要版本不同的程序集不可互换。</span><span class="sxs-lookup"><span data-stu-id="d59fe-109">*Major*: Assemblies with the same name but different major versions are not interchangeable.</span></span> <span data-ttu-id="d59fe-110">版本号较高可能表示产品的主要重写无法假定向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="d59fe-110">A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.</span></span>  
  
-   <span data-ttu-id="d59fe-111">*次要*：如果两个程序集的名称和主版本号相同，但次版本号不同，则这表明为了向后兼容，实现了显著的增强。</span><span class="sxs-lookup"><span data-stu-id="d59fe-111">*Minor*: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility.</span></span> <span data-ttu-id="d59fe-112">此较高的次要版本号可能表示产品的点发布或产品的完全向后兼容的新版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-112">This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.</span></span>  
  
-   <span data-ttu-id="d59fe-113">*Build*：内部版本号的不同之处在于重新编译了同一源。</span><span class="sxs-lookup"><span data-stu-id="d59fe-113">*Build*: A difference in build number represents a recompilation of the same source.</span></span> <span data-ttu-id="d59fe-114">当处理器、平台或编译器发生变化时，可能会使用不同的生成号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-114">Different build numbers might be used when the processor, platform, or compiler changes.</span></span>  
  
-   <span data-ttu-id="d59fe-115">*修订*：具有相同名称、主要版本号和次要版本号但不同版本的程序集旨在完全互换。</span><span class="sxs-lookup"><span data-stu-id="d59fe-115">*Revision*: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable.</span></span> <span data-ttu-id="d59fe-116">在修复以前发布的程序集中的安全漏洞的内部版本中，可能会使用较高的修订号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-116">A higher revision number might be used in a build that fixes a security hole in a previously released assembly.</span></span>  
  
 <span data-ttu-id="d59fe-117">只有版本或修订号不同的程序集的后续版本被视为以前版本的修补程序更新。</span><span class="sxs-lookup"><span data-stu-id="d59fe-117">Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59fe-118"><xref:System.Version>未显式分配值的属性的值不 (-1) 定义。</span><span class="sxs-lookup"><span data-stu-id="d59fe-118">The value of <xref:System.Version> properties that have not been explicitly assigned a value is undefined (-1).</span></span>  
  
 <span data-ttu-id="d59fe-119">从 .NET Framework 2.0 开始， <xref:System.Version.MajorRevision%2A> 和 <xref:System.Version.MinorRevision%2A> 属性使你能够确定应用程序的临时版本，例如，在你可以发布永久解决方案之前更正问题。</span><span class="sxs-lookup"><span data-stu-id="d59fe-119">Starting with .NET Framework 2.0, the <xref:System.Version.MajorRevision%2A> and <xref:System.Version.MinorRevision%2A> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.</span></span>  <span data-ttu-id="d59fe-120">此外，Windows NT 操作系统使用 <xref:System.Version.MajorRevision%2A> 属性对 Service Pack 数字进行编码。</span><span class="sxs-lookup"><span data-stu-id="d59fe-120">Furthermore, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.</span></span>  
  
## <a name="assigning-version-information-to-assemblies"></a><span data-ttu-id="d59fe-121">将版本信息分配给程序集</span><span class="sxs-lookup"><span data-stu-id="d59fe-121">Assigning Version Information to Assemblies</span></span>  
 <span data-ttu-id="d59fe-122">通常情况下， <xref:System.Version> 类不用于为程序集分配版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-122">Ordinarily, the <xref:System.Version> class is not used to assign a version number to an assembly.</span></span> <span data-ttu-id="d59fe-123">而是 <xref:System.Reflection.AssemblyVersionAttribute> 使用类来定义程序集的版本，如本主题中的示例所示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-123">Instead, the <xref:System.Reflection.AssemblyVersionAttribute> class is used to define an assembly's version, as illustrated by the example in this topic.</span></span>  
  
## <a name="retrieving-version-information"></a><span data-ttu-id="d59fe-124">检索版本信息</span><span class="sxs-lookup"><span data-stu-id="d59fe-124">Retrieving Version Information</span></span>  
 <span data-ttu-id="d59fe-125"><xref:System.Version> 对象最常用于存储有关某些系统或应用程序组件的版本信息 (例如操作系统) 、公共语言运行时、当前应用程序的可执行文件或特定程序集。</span><span class="sxs-lookup"><span data-stu-id="d59fe-125"><xref:System.Version> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly.</span></span> <span data-ttu-id="d59fe-126">下面的示例演示了一些最常见的方案：</span><span class="sxs-lookup"><span data-stu-id="d59fe-126">The following examples illustrate some of the most common scenarios:</span></span>  
  
-   <span data-ttu-id="d59fe-127">检索操作系统版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-127">Retrieving the operating system version.</span></span> <span data-ttu-id="d59fe-128">下面的示例使用 <xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType> 属性检索操作系统的版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-128">The following example uses the <xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType> property to retrieve the version number of the operating system.</span></span>  
  
     [!code-csharp[System.Version.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#1)]
     [!code-vb[System.Version.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#1)]  
  
-   <span data-ttu-id="d59fe-129">检索公共语言运行时的版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-129">Retrieving the version of the common language runtime.</span></span> <span data-ttu-id="d59fe-130">下面的示例使用 <xref:System.Environment.Version%2A?displayProperty=nameWithType> 属性检索有关公共语言运行时的版本信息。</span><span class="sxs-lookup"><span data-stu-id="d59fe-130">The following example uses the <xref:System.Environment.Version%2A?displayProperty=nameWithType> property to retrieve version information about the common language runtime.</span></span>  
  
     [!code-csharp[System.Version.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#2)]
     [!code-vb[System.Version.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#2)]  
  
-   <span data-ttu-id="d59fe-131">检索当前应用程序的程序集版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-131">Retrieving the current application's assembly version.</span></span> <span data-ttu-id="d59fe-132">下面的示例使用 <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType> 方法来获取对 <xref:System.Reflection.Assembly> 对象的引用，该对象表示应用程序可执行文件，然后检索其程序集版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-132">The following example uses the <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType> method to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the application executable and then retrieves its assembly version number.</span></span>  
  
     [!code-csharp[System.Version.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentapp.cs#5)]
     [!code-vb[System.Version.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentapp.vb#5)]  
  
-   <span data-ttu-id="d59fe-133">检索当前程序集的程序集版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-133">Retrieving the current assembly's assembly version.</span></span> <span data-ttu-id="d59fe-134">下面的示例使用 <xref:System.Type.Assembly%2A?displayProperty=nameWithType> 属性获取对 <xref:System.Reflection.Assembly> 对象的引用，该对象表示包含应用程序入口点的程序集，然后检索其版本信息。</span><span class="sxs-lookup"><span data-stu-id="d59fe-134">The following example uses the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the assembly that contains the application entry point, and then retrieves its version information.</span></span>  
  
     [!code-csharp[System.Version.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentassem.cs#4)]
     [!code-vb[System.Version.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentassem.vb#4)]  
  
-   <span data-ttu-id="d59fe-135">检索特定程序集的版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-135">Retrieving the version of a specific assembly.</span></span> <span data-ttu-id="d59fe-136">下面的示例使用 <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType> 方法获取对 <xref:System.Reflection.Assembly> 具有特定文件名的对象的引用，然后检索其版本信息。</span><span class="sxs-lookup"><span data-stu-id="d59fe-136">The following example uses the <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType> method to obtain a reference to an <xref:System.Reflection.Assembly> object that has a particular file name, and then retrieves its version information.</span></span> <span data-ttu-id="d59fe-137">请注意，还存在一些其他方法，可 <xref:System.Reflection.Assembly> 通过文件名或强名称实例化对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-137">Note that several other methods also exist to instantiate an <xref:System.Reflection.Assembly> object by file name or by strong name.</span></span>  
  
     [!code-csharp[System.Version.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/specificassem.cs#3)]
     [!code-vb[System.Version.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/specificassem.vb#3)]  
  
-   <span data-ttu-id="d59fe-138">检索 ClickOnce 应用程序的发布版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-138">Retrieving the Publish Version of a ClickOnce application.</span></span> <span data-ttu-id="d59fe-139">下面的示例使用 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType> 属性来显示应用程序的发布版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-139">The following example uses the <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType> property to display an application's Publish Version.</span></span> <span data-ttu-id="d59fe-140">请注意，其成功执行需要设置该示例的应用程序标识。</span><span class="sxs-lookup"><span data-stu-id="d59fe-140">Note that its successful execution requires the example's application identity to be set.</span></span> <span data-ttu-id="d59fe-141">Visual Studio 发布向导会自动处理这种情况。</span><span class="sxs-lookup"><span data-stu-id="d59fe-141">This is handled automatically by the Visual Studio Publish Wizard.</span></span>  
  
     [!code-csharp[System.Version.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/clickonce.cs#7)]
     [!code-vb[System.Version.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/clickonce.vb#7)]  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="d59fe-142">ClickOnce 部署的应用程序的发布版本完全独立于其程序集版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-142">The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.</span></span>  
  
## <a name="comparing-version-objects"></a><span data-ttu-id="d59fe-143">比较版本对象</span><span class="sxs-lookup"><span data-stu-id="d59fe-143">Comparing Version Objects</span></span>  
 <span data-ttu-id="d59fe-144">您可以使用 <xref:System.Version.CompareTo%2A> 方法来确定一个 <xref:System.Version> 对象是早于、等于还是晚于第二个 <xref:System.Version> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-144">You can use the <xref:System.Version.CompareTo%2A> method to determine whether one <xref:System.Version> object is earlier than, the same as, or later than a second <xref:System.Version> object.</span></span> <span data-ttu-id="d59fe-145">下面的示例指示版本2.1 晚于版本2.0。</span><span class="sxs-lookup"><span data-stu-id="d59fe-145">The following example indicates that Version 2.1 is later than Version 2.0.</span></span>  
  
 [!code-csharp[System.Version.Class.Comparing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons1.cs#1)]
 [!code-vb[System.Version.Class.Comparing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons1.vb#1)]  
  
 <span data-ttu-id="d59fe-146">如果两个版本相等，则第一个对象的主要版本号、次要版本号、内部版本号和修订号必须与第二个对象的 <xref:System.Version> 相同 <xref:System.Version> 。</span><span class="sxs-lookup"><span data-stu-id="d59fe-146">For two versions to be equal, the major, minor, build, and revision numbers of the first <xref:System.Version> object must be identical to those of the second <xref:System.Version> object.</span></span> <span data-ttu-id="d59fe-147">如果对象的内部版本号或修订号未 <xref:System.Version> 定义， <xref:System.Version> 则认为该对象早于 <xref:System.Version> 其生成或修订号等于零的对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-147">If the build or revision number of a <xref:System.Version> object is undefined, that <xref:System.Version> object is considered to be earlier than a <xref:System.Version> object whose build or revision number is equal to zero.</span></span> <span data-ttu-id="d59fe-148">下面的示例通过比较 <xref:System.Version> 具有未定义版本组件的三个对象，对此进行了说明。</span><span class="sxs-lookup"><span data-stu-id="d59fe-148">The following example illustrates this by comparing three <xref:System.Version> objects that have undefined version components.</span></span>  
  
 [!code-csharp[System.Version.Class.Comparing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons2.cs#2)]
 [!code-vb[System.Version.Class.Comparing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="d59fe-149">下面的示例使用 <xref:System.Reflection.AssemblyVersionAttribute> 属性将版本号分配给程序集。</span><span class="sxs-lookup"><span data-stu-id="d59fe-149">The following example uses the <xref:System.Reflection.AssemblyVersionAttribute> attribute to assign a version number to an assembly.</span></span> <span data-ttu-id="d59fe-150">在编译时，此版本信息与程序集的元数据一起存储。</span><span class="sxs-lookup"><span data-stu-id="d59fe-150">At compile time, this version information is stored with the assembly's metadata.</span></span> <span data-ttu-id="d59fe-151">在运行时，此示例将检索 <xref:System.Type.Assembly%2A?displayProperty=nameWithType> 在程序集中找到的类型的属性值以获取对执行程序集的引用，并从该方法返回的对象的属性检索程序集的版本信息 <xref:System.Reflection.AssemblyName.Version%2A> <xref:System.Reflection.AssemblyName> <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d59fe-151">At run time, the example retrieves the value of the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <xref:System.Reflection.AssemblyName.Version%2A> property of the <xref:System.Reflection.AssemblyName> object returned by the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Version.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/example1.cs#6)]
 [!code-vb[System.Version.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/example1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59fe-152">使用指定的主版本号、次版本号、内部版本号和修订号初始化 <see cref="T:System.Version" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d59fe-152">Initializes a new instance of the <see cref="T:System.Version" /> class with the specified major, minor, build, and revision numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d59fe-153">初始化 <see cref="T:System.Version" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d59fe-153">Initializes a new instance of the <see cref="T:System.Version" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-154">此构造函数将创建一个 <xref:System.Version> 具有以下属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-154">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="d59fe-155">属性</span><span class="sxs-lookup"><span data-stu-id="d59fe-155">Property</span></span>|<span data-ttu-id="d59fe-156">值</span><span class="sxs-lookup"><span data-stu-id="d59fe-156">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|<span data-ttu-id="d59fe-157">0</span><span class="sxs-lookup"><span data-stu-id="d59fe-157">0</span></span>|  
|<xref:System.Version.Minor%2A>|<span data-ttu-id="d59fe-158">0</span><span class="sxs-lookup"><span data-stu-id="d59fe-158">0</span></span>|  
|<xref:System.Version.Build%2A>|<span data-ttu-id="d59fe-159">未定义 (-1) </span><span class="sxs-lookup"><span data-stu-id="d59fe-159">undefined (-1)</span></span>|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="d59fe-160">未定义 (-1) </span><span class="sxs-lookup"><span data-stu-id="d59fe-160">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (version As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(System::String ^ version);" />
      <MemberSignature Language="F#" Value="new Version : string -&gt; Version" Usage="new System.Version version" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version"><span data-ttu-id="d59fe-161">一个包含主要版本号、次要版本号、内部版本号和修订号的字符串，其中的各个号之间以句点字符（“.”）分隔。</span><span class="sxs-lookup"><span data-stu-id="d59fe-161">A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').</span></span></param>
        <summary><span data-ttu-id="d59fe-162">使用指定的字符串初始化 <see cref="T:System.Version" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d59fe-162">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-163">`version`参数只能包含组件 "主要"、"次要"、"生成"、"修订"、"顺序" 和 "所有"。</span><span class="sxs-lookup"><span data-stu-id="d59fe-163">The `version` parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods.</span></span> <span data-ttu-id="d59fe-164">至少必须有两个组件，最多有四个。</span><span class="sxs-lookup"><span data-stu-id="d59fe-164">There must be at least two components, and at most four.</span></span> <span data-ttu-id="d59fe-165">前两个组件被认为是主要和次要组件。</span><span class="sxs-lookup"><span data-stu-id="d59fe-165">The first two components are assumed to be major and minor.</span></span> <span data-ttu-id="d59fe-166">未指定的组件的值是不确定的。</span><span class="sxs-lookup"><span data-stu-id="d59fe-166">The value of unspecified components is undefined.</span></span>  
  
 <span data-ttu-id="d59fe-167">版本号的格式如下所示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-167">The format of the version number is as follows.</span></span> <span data-ttu-id="d59fe-168">可选组件显示在方括号中 ( "[" 和 "]" ) ：</span><span class="sxs-lookup"><span data-stu-id="d59fe-168">Optional components are shown in square brackets ('[' and ']'):</span></span>  
  
 <span data-ttu-id="d59fe-169">主要版本号.次要版本号[.内部版本号[.修订号]]</span><span class="sxs-lookup"><span data-stu-id="d59fe-169">major.minor[.build[.revision]]</span></span>  
  
 <span data-ttu-id="d59fe-170">所有定义的组件都必须是大于或等于0的整数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-170">All defined components must be integers greater than or equal to 0.</span></span> <span data-ttu-id="d59fe-171">例如，如果主编号为6，次版本号为2，内部版本号为1，修订号为3，则 `version` 应为 "6.2.1.3"。</span><span class="sxs-lookup"><span data-stu-id="d59fe-171">For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then `version` should be "6.2.1.3".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59fe-172"><paramref name="version" /> 少于两个部分或多于四个部分。</span><span class="sxs-lookup"><span data-stu-id="d59fe-172"><paramref name="version" /> has fewer than two components or more than four components.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59fe-173"><paramref name="version" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-173"><paramref name="version" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59fe-174">主要版本号、次要版本号、内部版本号或修订号部分小于零。</span><span class="sxs-lookup"><span data-stu-id="d59fe-174">A major, minor, build, or revision component is less than zero.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59fe-175"><paramref name="version" /> 的至少一个部分未分析为整数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-175">At least one component of <paramref name="version" /> does not parse to an integer.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59fe-176"><paramref name="version" /> 至少有一个部分表示大于 <see cref="F:System.Int32.MaxValue" /> 的数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-176">At least one component of <paramref name="version" /> represents a number greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor);" />
      <MemberSignature Language="F#" Value="new Version : int * int -&gt; Version" Usage="new System.Version (major, minor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major"><span data-ttu-id="d59fe-177">主版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-177">The major version number.</span></span></param>
        <param name="minor"><span data-ttu-id="d59fe-178">次版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-178">The minor version number.</span></span></param>
        <summary><span data-ttu-id="d59fe-179">使用指定的主要版本号值和次要版本号值初始化 <see cref="T:System.Version" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d59fe-179">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified major and minor values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-180">此构造函数将创建一个 <xref:System.Version> 具有以下属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-180">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="d59fe-181">属性</span><span class="sxs-lookup"><span data-stu-id="d59fe-181">Property</span></span>|<span data-ttu-id="d59fe-182">值</span><span class="sxs-lookup"><span data-stu-id="d59fe-182">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|<span data-ttu-id="d59fe-183">未定义 (-1) </span><span class="sxs-lookup"><span data-stu-id="d59fe-183">undefined (-1)</span></span>|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="d59fe-184">未定义 (-1) </span><span class="sxs-lookup"><span data-stu-id="d59fe-184">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59fe-185"><paramref name="major" /> 或 <paramref name="minor" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="d59fe-185"><paramref name="major" /> or <paramref name="minor" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor, int build);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor, int32 build) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer, build As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor, int build);" />
      <MemberSignature Language="F#" Value="new Version : int * int * int -&gt; Version" Usage="new System.Version (major, minor, build)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="build" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major"><span data-ttu-id="d59fe-186">主版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-186">The major version number.</span></span></param>
        <param name="minor"><span data-ttu-id="d59fe-187">次版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-187">The minor version number.</span></span></param>
        <param name="build"><span data-ttu-id="d59fe-188">生成号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-188">The build number.</span></span></param>
        <summary><span data-ttu-id="d59fe-189">使用指定的主要版本号、次要版本号和内部版本号值初始化 <see cref="T:System.Version" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d59fe-189">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified major, minor, and build values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-190">此构造函数将创建一个 <xref:System.Version> 具有以下属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-190">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="d59fe-191">属性</span><span class="sxs-lookup"><span data-stu-id="d59fe-191">Property</span></span>|<span data-ttu-id="d59fe-192">值</span><span class="sxs-lookup"><span data-stu-id="d59fe-192">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|`build`|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="d59fe-193">未定义 (-1) </span><span class="sxs-lookup"><span data-stu-id="d59fe-193">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59fe-194"><paramref name="major" />、<paramref name="minor" /> 或 <paramref name="build" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="d59fe-194"><paramref name="major" />, <paramref name="minor" />, or <paramref name="build" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor, int build, int revision);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor, int32 build, int32 revision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer, build As Integer, revision As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor, int build, int revision);" />
      <MemberSignature Language="F#" Value="new Version : int * int * int * int -&gt; Version" Usage="new System.Version (major, minor, build, revision)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="build" Type="System.Int32" />
        <Parameter Name="revision" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major"><span data-ttu-id="d59fe-195">主版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-195">The major version number.</span></span></param>
        <param name="minor"><span data-ttu-id="d59fe-196">次版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-196">The minor version number.</span></span></param>
        <param name="build"><span data-ttu-id="d59fe-197">生成号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-197">The build number.</span></span></param>
        <param name="revision"><span data-ttu-id="d59fe-198">修订号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-198">The revision number.</span></span></param>
        <summary><span data-ttu-id="d59fe-199">使用指定的主版本号、次版本号、内部版本号和修订号初始化 <see cref="T:System.Version" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d59fe-199">Initializes a new instance of the <see cref="T:System.Version" /> class with the specified major, minor, build, and revision numbers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-200">此构造函数将创建一个 <xref:System.Version> 具有以下属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-200">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="d59fe-201">属性</span><span class="sxs-lookup"><span data-stu-id="d59fe-201">Property</span></span>|<span data-ttu-id="d59fe-202">值</span><span class="sxs-lookup"><span data-stu-id="d59fe-202">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|`build`|  
|<xref:System.Version.Revision%2A>|`revision`|  
  
   
  
## Examples  
 <span data-ttu-id="d59fe-203">下面的代码示例演示了 <xref:System.Version.%23ctor%2A> 构造函数、、、、、 <xref:System.Version.Major%2A> <xref:System.Version.Minor%2A> <xref:System.Version.Build%2A> <xref:System.Version.Revision%2A> <xref:System.Version.MajorRevision%2A> 和 <xref:System.Version.MinorRevision%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d59fe-203">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59fe-204"><paramref name="major" />、<paramref name="minor" />、<paramref name="build" /> 或 <paramref name="revision" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="d59fe-204"><paramref name="major" />, <paramref name="minor" />, <paramref name="build" />, or <paramref name="revision" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:System.Version.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Build : int" Usage="System.Version.Build" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59fe-205">获取当前 <see cref="T:System.Version" /> 对象版本号的内部版本号部分的值。</span><span class="sxs-lookup"><span data-stu-id="d59fe-205">Gets the value of the build component of the version number for the current <see cref="T:System.Version" /> object.</span></span></summary>
        <value><span data-ttu-id="d59fe-206">内部版本号或 -1（如果未定义内部版本号）。</span><span class="sxs-lookup"><span data-stu-id="d59fe-206">The build number, or -1 if the build number is undefined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-207">例如，如果版本号为6.2.1.3，则内部版本号为1。</span><span class="sxs-lookup"><span data-stu-id="d59fe-207">For example, if the version number is 6.2.1.3, the build number is 1.</span></span> <span data-ttu-id="d59fe-208">如果版本号为6.2，则生成号为 undefined。</span><span class="sxs-lookup"><span data-stu-id="d59fe-208">If the version number is 6.2, the build number is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59fe-209">下面的代码示例演示了 <xref:System.Version.%23ctor%2A> 构造函数、、、、、 <xref:System.Version.Major%2A> <xref:System.Version.Minor%2A> <xref:System.Version.Build%2A> <xref:System.Version.Revision%2A> <xref:System.Version.MajorRevision%2A> 和 <xref:System.Version.MinorRevision%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d59fe-209">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="version.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d59fe-210">返回一个新的 <see cref="T:System.Version" /> 对象，该对象的值与当前的 <see cref="T:System.Version" /> 对象相同。</span><span class="sxs-lookup"><span data-stu-id="d59fe-210">Returns a new <see cref="T:System.Version" /> object whose value is the same as the current <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="d59fe-211">一个新的 <see cref="T:System.Object" />，其值为当前 <see cref="T:System.Version" /> 对象的副本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-211">A new <see cref="T:System.Object" /> whose values are a copy of the current <see cref="T:System.Version" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-212">如果返回值的类型很重要，请将 <xref:System.Object> 此方法返回的实例强制转换为 <xref:System.Version> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-212">If the type of the return value is important, cast the <xref:System.Object> instance that is returned by this method to a <xref:System.Version> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59fe-213">将当前 <see cref="T:System.Version" /> 对象与指定的对象或 <see cref="T:System.Version" /> 进行比较，并返回二者相对值的一个指示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-213">Compares the current <see cref="T:System.Version" /> object to a specified object or <see cref="T:System.Version" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (version As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ version);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="version.CompareTo version" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="version"><span data-ttu-id="d59fe-214">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-214">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59fe-215">将当前 <see cref="T:System.Version" /> 对象与指定的对象进行比较，并返回二者相对值的一个指示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-215">Compares the current <see cref="T:System.Version" /> object to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="d59fe-216">一个有符号整数，它指示两个对象的相对值，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-216">A signed integer that indicates the relative values of the two objects, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d59fe-217">返回值</span><span class="sxs-lookup"><span data-stu-id="d59fe-217">Return value</span></span> 
 </term><description> <span data-ttu-id="d59fe-218">含义</span><span class="sxs-lookup"><span data-stu-id="d59fe-218">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="d59fe-219">小于零</span><span class="sxs-lookup"><span data-stu-id="d59fe-219">Less than zero</span></span> 
 </term><description> <span data-ttu-id="d59fe-220">当前 <see cref="T:System.Version" /> 对象是 <paramref name="version" /> 之前的一个版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-220">The current <see cref="T:System.Version" /> object is a version before <paramref name="version" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d59fe-221">零</span><span class="sxs-lookup"><span data-stu-id="d59fe-221">Zero</span></span> 
 </term><description> <span data-ttu-id="d59fe-222">当前 <see cref="T:System.Version" /> 对象是与 <paramref name="version" /> 相同的版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-222">The current <see cref="T:System.Version" /> object is the same version as <paramref name="version" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d59fe-223">大于零</span><span class="sxs-lookup"><span data-stu-id="d59fe-223">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="d59fe-224">当前 <see cref="T:System.Version" /> 对象是之后的一个版本 <paramref name="version" /> ，或者 <paramref name="version" /> 是 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="d59fe-224">The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="version" />, or <paramref name="version" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-225">`Version`按重要性顺序降序排列的组件为：主要版本号、次要版本号、内部版本号和修订号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-225">The components of `Version` in decreasing order of importance are: major, minor, build, and revision.</span></span> <span data-ttu-id="d59fe-226">假定未知组件早于任何已知组件。</span><span class="sxs-lookup"><span data-stu-id="d59fe-226">An unknown component is assumed to be older than any known component.</span></span>  
  
 <span data-ttu-id="d59fe-227">例如：</span><span class="sxs-lookup"><span data-stu-id="d59fe-227">For example:</span></span>  
  
-   <span data-ttu-id="d59fe-228">版本1.1 早于版本1.1。0</span><span class="sxs-lookup"><span data-stu-id="d59fe-228">Version 1.1 is older than version 1.1.0</span></span>  
  
-   <span data-ttu-id="d59fe-229">版本1.1 早于版本1.1。1</span><span class="sxs-lookup"><span data-stu-id="d59fe-229">Version 1.1 is older than version 1.1.1</span></span>  
  
-   <span data-ttu-id="d59fe-230">版本1.1 早于版本1.1.2。3</span><span class="sxs-lookup"><span data-stu-id="d59fe-230">Version 1.1 is older than version 1.1.2.3</span></span>  
  
-   <span data-ttu-id="d59fe-231">版本1.1.2 早于版本1.1.2。4</span><span class="sxs-lookup"><span data-stu-id="d59fe-231">Version 1.1.2 is older than version 1.1.2.4</span></span>  
  
-   <span data-ttu-id="d59fe-232">版本1.2.5 的版本比1.2.3.4 版新</span><span class="sxs-lookup"><span data-stu-id="d59fe-232">Version 1.2.5 is newer than version 1.2.3.4</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59fe-233"><paramref name="version" /> 的类型不是 <see cref="T:System.Version" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-233"><paramref name="version" /> is not of type <see cref="T:System.Version" />.</span></span></exception>
        <altmember cref="M:System.Version.CompareTo(System.Version)" />
        <altmember cref="Overload:System.Version.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Version value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class System.Version value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.CompareTo(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Version) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(Version ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Version -&gt; int&#xA;override this.CompareTo : Version -&gt; int" Usage="version.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Version" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d59fe-234">要与当前的 <see cref="T:System.Version" /> 对象进行比较的 <see cref="T:System.Version" /> 对象，或者为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-234">A <see cref="T:System.Version" /> object to compare to the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59fe-235">将当前 <see cref="T:System.Version" /> 对象与指定的 <see cref="T:System.Version" /> 对象进行比较，并返回二者相对值的一个指示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-235">Compares the current <see cref="T:System.Version" /> object to a specified <see cref="T:System.Version" /> object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="d59fe-236">一个有符号整数，它指示两个对象的相对值，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-236">A signed integer that indicates the relative values of the two objects, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d59fe-237">返回值</span><span class="sxs-lookup"><span data-stu-id="d59fe-237">Return value</span></span> 
 </term><description> <span data-ttu-id="d59fe-238">含义</span><span class="sxs-lookup"><span data-stu-id="d59fe-238">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="d59fe-239">小于零</span><span class="sxs-lookup"><span data-stu-id="d59fe-239">Less than zero</span></span> 
 </term><description> <span data-ttu-id="d59fe-240">当前 <see cref="T:System.Version" /> 对象是 <paramref name="value" /> 之前的一个版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-240">The current <see cref="T:System.Version" /> object is a version before <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d59fe-241">零</span><span class="sxs-lookup"><span data-stu-id="d59fe-241">Zero</span></span> 
 </term><description> <span data-ttu-id="d59fe-242">当前 <see cref="T:System.Version" /> 对象是与 <paramref name="value" /> 相同的版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-242">The current <see cref="T:System.Version" /> object is the same version as <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d59fe-243">大于零</span><span class="sxs-lookup"><span data-stu-id="d59fe-243">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="d59fe-244">当前 <see cref="T:System.Version" /> 对象是之后的一个版本 <paramref name="value" /> ，或者 <paramref name="value" /> 是 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="d59fe-244">The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-245">此方法实现 <xref:System.IComparable%601?displayProperty=nameWithType> 接口，其执行效果略好于 <xref:System.Version.CompareTo%2A> 方法，因为它不需要取消装箱 `value` 参数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-245">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.Version.CompareTo%2A> method because it does not have to unbox the `value` parameter.</span></span>  
  
 <span data-ttu-id="d59fe-246">`Version`按重要性顺序降序排列的组件为：主要版本号、次要版本号、内部版本号和修订号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-246">The components of `Version` in decreasing order of importance are: major, minor, build, and revision.</span></span> <span data-ttu-id="d59fe-247">假定未知组件早于任何已知组件。</span><span class="sxs-lookup"><span data-stu-id="d59fe-247">An unknown component is assumed to be older than any known component.</span></span> <span data-ttu-id="d59fe-248">例如：</span><span class="sxs-lookup"><span data-stu-id="d59fe-248">For example:</span></span>  
  
-   <span data-ttu-id="d59fe-249">版本1.1 早于版本1.1.0。</span><span class="sxs-lookup"><span data-stu-id="d59fe-249">Version 1.1 is older than version 1.1.0.</span></span>  
  
-   <span data-ttu-id="d59fe-250">版本1.1 早于版本1.1.1。</span><span class="sxs-lookup"><span data-stu-id="d59fe-250">Version 1.1 is older than version 1.1.1.</span></span>  
  
-   <span data-ttu-id="d59fe-251">版本1.1 早于版本1.1.2.3。</span><span class="sxs-lookup"><span data-stu-id="d59fe-251">Version 1.1 is older than version 1.1.2.3.</span></span>  
  
-   <span data-ttu-id="d59fe-252">版本1.1.2 早于版本1.1.2.4。</span><span class="sxs-lookup"><span data-stu-id="d59fe-252">Version 1.1.2 is older than version 1.1.2.4.</span></span>  
  
-   <span data-ttu-id="d59fe-253">版本1.2.5 的版本比1.2.3.4 版新。</span><span class="sxs-lookup"><span data-stu-id="d59fe-253">Version 1.2.5 is newer than version 1.2.3.4.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59fe-254">下面的代码示例演示了 `CompareTo` 多个值和引用类型的方法的泛型和非泛型版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-254">The following code example demonstrates generic and nongeneric versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59fe-255">返回一个值，该值指示两个 <see cref="T:System.Version" /> 对象是否表示同一个值。</span><span class="sxs-lookup"><span data-stu-id="d59fe-255">Returns a value indicating whether two <see cref="T:System.Version" /> object represent the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="version.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d59fe-256">要与当前 <see cref="T:System.Version" /> 对象进行比较的对象，或者为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-256">An object to compare with the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59fe-257">返回一个值，该值指示当前 <see cref="T:System.Version" /> 对象是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-257">Returns a value indicating whether the current <see cref="T:System.Version" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="d59fe-258">如果当前 <see cref="T:System.Version" /> 对象和 <paramref name="obj" /> 都为 <see cref="T:System.Version" /> 对象，并且当前 <see cref="T:System.Version" /> 对象的每个部分都与 <paramref name="obj" /> 的相应部分匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-258"><see langword="true" /> if the current <see cref="T:System.Version" /> object and <paramref name="obj" /> are both <see cref="T:System.Version" /> objects, and every component of the current <see cref="T:System.Version" /> object matches the corresponding component of <paramref name="obj" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Version obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Version obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Equals(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Version ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : Version -&gt; bool" Usage="version.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Version" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d59fe-259">要与当前的 <see cref="T:System.Version" /> 对象进行比较的 <see cref="T:System.Version" /> 对象，或者为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-259">A <see cref="T:System.Version" /> object to compare to the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59fe-260">返回一个值，该值指示当前 <see cref="T:System.Version" /> 对象和指定的 <see cref="T:System.Version" /> 对象是否表示同一个值。</span><span class="sxs-lookup"><span data-stu-id="d59fe-260">Returns a value indicating whether the current <see cref="T:System.Version" /> object and a specified <see cref="T:System.Version" /> object represent the same value.</span></span></summary>
        <returns><span data-ttu-id="d59fe-261">如果当前 <see cref="T:System.Version" /> 对象的每个部分都与 <paramref name="obj" /> 参数的相应部分匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-261"><see langword="true" /> if every component of the current <see cref="T:System.Version" /> object matches the corresponding component of the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-262">此方法实现 <xref:System.IEquatable%601> 接口，其执行效果略好于 <xref:System.Version.Equals%2A> 方法，因为它不需要取消装箱 `obj` 参数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-262">This method implements the <xref:System.IEquatable%601> interface, and performs slightly better than the <xref:System.Version.Equals%2A> method because it does not have to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="Overload:System.Version.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="version.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d59fe-263">返回当前 <see cref="T:System.Version" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="d59fe-263">Returns a hash code for the current <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="d59fe-264">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="d59fe-264">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d59fe-265">下面的代码示例演示了 <xref:System.Version.%23ctor%2A> 构造函数、、、、、 <xref:System.Version.Major%2A> <xref:System.Version.Minor%2A> <xref:System.Version.Build%2A> <xref:System.Version.Revision%2A> <xref:System.Version.MajorRevision%2A> 和 <xref:System.Version.MinorRevision%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d59fe-265">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Major">
      <MemberSignature Language="C#" Value="public int Major { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Major" />
      <MemberSignature Language="DocId" Value="P:System.Version.Major" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Major As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Major { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Major : int" Usage="System.Version.Major" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59fe-266">获取当前 <see cref="T:System.Version" /> 对象版本号的主要版本号部分的值。</span><span class="sxs-lookup"><span data-stu-id="d59fe-266">Gets the value of the major component of the version number for the current <see cref="T:System.Version" /> object.</span></span></summary>
        <value><span data-ttu-id="d59fe-267">主版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-267">The major version number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-268">例如，如果版本号为6.2，则主版本为6。</span><span class="sxs-lookup"><span data-stu-id="d59fe-268">For example, if the version number is 6.2, the major version is 6.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorRevision">
      <MemberSignature Language="C#" Value="public short MajorRevision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 MajorRevision" />
      <MemberSignature Language="DocId" Value="P:System.Version.MajorRevision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorRevision As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short MajorRevision { short get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorRevision : int16" Usage="System.Version.MajorRevision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59fe-269">获取修订号的高 16 位。</span><span class="sxs-lookup"><span data-stu-id="d59fe-269">Gets the high 16 bits of the revision number.</span></span></summary>
        <value><span data-ttu-id="d59fe-270">16 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-270">A 16-bit signed integer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-271">假设您发布了应用程序的过渡版，以便临时更正问题，直到您可以释放永久解决方案。</span><span class="sxs-lookup"><span data-stu-id="d59fe-271">Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</span></span> <span data-ttu-id="d59fe-272">临时版本不保证新的修订号，但需要将其标识为不同的版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-272">The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</span></span> <span data-ttu-id="d59fe-273">在这种情况下，在32位修订号的高和低16位部分对标识信息进行编码。</span><span class="sxs-lookup"><span data-stu-id="d59fe-273">In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</span></span> <span data-ttu-id="d59fe-274">使用 <xref:System.Version.Revision%2A> 属性获取完整的修订号，使用 <xref:System.Version.MajorRevision%2A> 属性获取高16位，并使用 <xref:System.Version.MinorRevision%2A> 属性获取低16位。</span><span class="sxs-lookup"><span data-stu-id="d59fe-274">Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.</span></span>  
  
 <span data-ttu-id="d59fe-275">从 .NET Framework 版本2.0 开始，Windows NT 操作系统使用 <xref:System.Version.MajorRevision%2A> 属性对 Service Pack 号进行编码。</span><span class="sxs-lookup"><span data-stu-id="d59fe-275">Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59fe-276">下面的代码示例演示构造函数、、、、、 <xref:System.Version.%23ctor%2A> <xref:System.Version.Major%2A> <xref:System.Version.Minor%2A> <xref:System.Version.Build%2A> <xref:System.Version.Revision%2A> <xref:System.Version.MajorRevision%2A> 和 <xref:System.Version.MinorRevision%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d59fe-276">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Version.MinorRevision" />
      </Docs>
    </Member>
    <Member MemberName="Minor">
      <MemberSignature Language="C#" Value="public int Minor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minor" />
      <MemberSignature Language="DocId" Value="P:System.Version.Minor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minor { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minor : int" Usage="System.Version.Minor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59fe-277">获取当前 <see cref="T:System.Version" /> 对象版本号的次要版本号部分的值。</span><span class="sxs-lookup"><span data-stu-id="d59fe-277">Gets the value of the minor component of the version number for the current <see cref="T:System.Version" /> object.</span></span></summary>
        <value><span data-ttu-id="d59fe-278">次版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-278">The minor version number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-279">例如，如果版本号为6.2，则次要版本为2。</span><span class="sxs-lookup"><span data-stu-id="d59fe-279">For example, if the version number is 6.2, the minor version is 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59fe-280">下面的代码示例演示了 <xref:System.Version.%23ctor%2A> 构造函数、、、、、 <xref:System.Version.Major%2A> <xref:System.Version.Minor%2A> <xref:System.Version.Build%2A> <xref:System.Version.Revision%2A> <xref:System.Version.MajorRevision%2A> 和 <xref:System.Version.MinorRevision%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d59fe-280">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorRevision">
      <MemberSignature Language="C#" Value="public short MinorRevision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 MinorRevision" />
      <MemberSignature Language="DocId" Value="P:System.Version.MinorRevision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorRevision As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short MinorRevision { short get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorRevision : int16" Usage="System.Version.MinorRevision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59fe-281">获取修订号的低 16 位。</span><span class="sxs-lookup"><span data-stu-id="d59fe-281">Gets the low 16 bits of the revision number.</span></span></summary>
        <value><span data-ttu-id="d59fe-282">16 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-282">A 16-bit signed integer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-283">假设您发布了应用程序的过渡版，以便临时更正问题，直到您可以释放永久解决方案。</span><span class="sxs-lookup"><span data-stu-id="d59fe-283">Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</span></span> <span data-ttu-id="d59fe-284">临时版本不保证新的修订号，但需要将其标识为不同的版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-284">The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</span></span> <span data-ttu-id="d59fe-285">在这种情况下，在32位修订号的高和低16位部分对标识信息进行编码。</span><span class="sxs-lookup"><span data-stu-id="d59fe-285">In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</span></span> <span data-ttu-id="d59fe-286">使用 <xref:System.Version.Revision%2A> 属性获取完整的修订号，使用 <xref:System.Version.MajorRevision%2A> 属性获取高16位，并使用 <xref:System.Version.MinorRevision%2A> 属性获取低16位。</span><span class="sxs-lookup"><span data-stu-id="d59fe-286">Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59fe-287">下面的代码示例演示构造函数、、、、、 <xref:System.Version.%23ctor%2A> <xref:System.Version.Major%2A> <xref:System.Version.Minor%2A> <xref:System.Version.Build%2A> <xref:System.Version.Revision%2A> <xref:System.Version.MajorRevision%2A> 和 <xref:System.Version.MinorRevision%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d59fe-287">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Version.MajorRevision" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_Equality(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Version * Version -&gt; bool" Usage="v1 = v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="d59fe-288">第一个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-288">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="d59fe-289">第二个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-289">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="d59fe-290">确定两个指定的 <see cref="T:System.Version" /> 对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="d59fe-290">Determines whether two specified <see cref="T:System.Version" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="d59fe-291">如果 <paramref name="v1" /> 等于 <paramref name="v2" />，则为 <see langword="true" />否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-291"><see langword="true" /> if <paramref name="v1" /> equals <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d59fe-292">此运算符的等效方法是 <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d59fe-292">The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_GreaterThan(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Version * Version -&gt; bool" Usage="v1 &gt; v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="d59fe-293">第一个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-293">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="d59fe-294">第二个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-294">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="d59fe-295">确定指定的第一个 <see cref="T:System.Version" /> 对象是否大于指定的第二个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-295">Determines whether the first specified <see cref="T:System.Version" /> object is greater than the second specified <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="d59fe-296">如果 <see langword="true" /> 大于 <paramref name="v1" />，则为 <paramref name="v2" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-296"><see langword="true" /> if <paramref name="v1" /> is greater than <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d59fe-297">此运算符的等效方法是 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d59fe-297">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Version * Version -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="d59fe-298">第一个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-298">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="d59fe-299">第二个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-299">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="d59fe-300">确定指定的第一个 <see cref="T:System.Version" /> 对象是否大于等于指定的第二个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-300">Determines whether the first specified <see cref="T:System.Version" /> object is greater than or equal to the second specified <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="d59fe-301">如果 <paramref name="v1" /> 大于等于 <paramref name="v2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-301"><see langword="true" /> if <paramref name="v1" /> is greater than or equal to <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d59fe-302">此运算符的等效方法是 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d59fe-302">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_Inequality(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Version * Version -&gt; bool" Usage="System.Version.op_Inequality (v1, v2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="d59fe-303">第一个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-303">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="d59fe-304">第二个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-304">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="d59fe-305">确定两个指定的 <see cref="T:System.Version" /> 对象是否不相等。</span><span class="sxs-lookup"><span data-stu-id="d59fe-305">Determines whether two specified <see cref="T:System.Version" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="d59fe-306">如果 <paramref name="v1" /> 不等于 <paramref name="v2" />，则为 <see langword="true" />否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-306"><see langword="true" /> if <paramref name="v1" /> does not equal <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d59fe-307">此运算符的等效方法是 <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d59fe-307">The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_LessThan(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Version * Version -&gt; bool" Usage="v1 &lt; v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="d59fe-308">第一个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-308">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="d59fe-309">第二个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-309">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="d59fe-310">确定指定的第一个 <see cref="T:System.Version" /> 对象是否小于指定的第二个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-310">Determines whether the first specified <see cref="T:System.Version" /> object is less than the second specified <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="d59fe-311">如果 <paramref name="v1" /> 小于 <paramref name="v2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-311"><see langword="true" /> if <paramref name="v1" /> is less than <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d59fe-312">此运算符的等效方法是 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d59fe-312">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59fe-313"><paramref name="v1" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-313"><paramref name="v1" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Version * Version -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1"><span data-ttu-id="d59fe-314">第一个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-314">The first <see cref="T:System.Version" /> object.</span></span></param>
        <param name="v2"><span data-ttu-id="d59fe-315">第二个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-315">The second <see cref="T:System.Version" /> object.</span></span></param>
        <summary><span data-ttu-id="d59fe-316">确定指定的第一个 <see cref="T:System.Version" /> 对象是否小于或等于第二个 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-316">Determines whether the first specified <see cref="T:System.Version" /> object is less than or equal to the second <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="d59fe-317">如果 <paramref name="v1" /> 小于等于 <paramref name="v2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-317"><see langword="true" /> if <paramref name="v1" /> is less than or equal to <paramref name="v2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d59fe-318">此运算符的等效方法是 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d59fe-318">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59fe-319"><paramref name="v1" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-319"><paramref name="v1" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Version? Parse (ReadOnlySpan&lt;char&gt; input);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char)) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ Parse(ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; Version" Usage="System.Version.Parse input" />
      <MemberSignature Language="C#" Value="public static Version Parse (ReadOnlySpan&lt;char&gt; input);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="d59fe-320">字符的只读范围，其中包含要转换的版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-320">A read-only span of characters that contains a version number to convert.</span></span></param>
        <summary><span data-ttu-id="d59fe-321">将表示版本号的指定字符只读范围转换为等效的 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-321">Converts the specified read-only span of characters that represents a version number to an equivalent <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="d59fe-322">一个等效于 <paramref name="input" /> 参数中指定的版本号的对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-322">An object that is equivalent to the version number specified in the <paramref name="input" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="d59fe-323">`input`参数必须采用以下格式：</span><span class="sxs-lookup"><span data-stu-id="d59fe-323">The `input` parameter must have the following format:</span></span>

`major.minor[.build[.revision]]`

<span data-ttu-id="d59fe-324">其中 `major` ，、、 `minor` `build` 和 `revision` 是版本号的四个组件的字符串表示形式：主要版本号、次版本号、内部版本号和修订号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-324">where `major`, `minor`, `build`, and `revision` are the string representations of the version number's four components: major version number, minor version number, build number, and revision number, respectively.</span></span> <span data-ttu-id="d59fe-325">可选组件以方括号 ( [和] ) 显示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-325">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="d59fe-326">组件必须按指定顺序显示，并且必须以句点分隔。</span><span class="sxs-lookup"><span data-stu-id="d59fe-326">The components must appear in the specified order and must be separated by periods.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59fe-327"><paramref name="input" /> 少于两个组件或多于四个版本组件。</span><span class="sxs-lookup"><span data-stu-id="d59fe-327"><paramref name="input" /> has fewer than two or more than four version components.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59fe-328">在 <paramref name="input" /> 中至少有一个组件小于零。</span><span class="sxs-lookup"><span data-stu-id="d59fe-328">At least one component in <paramref name="input" /> is less than zero.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59fe-329">在 <paramref name="input" /> 中至少有一个组件不是整数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-329">At least one component in <paramref name="input" /> is not an integer.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59fe-330"><paramref name="input" /> 中至少有一个组件表示大于 <see cref="F:System.Int32.MaxValue" /> 的数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-330">At least one component in <paramref name="input" /> represents a number that is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Version Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ Parse(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; Version" Usage="System.Version.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="d59fe-331">包含要转换的版本号的字符串。</span><span class="sxs-lookup"><span data-stu-id="d59fe-331">A string that contains a version number to convert.</span></span></param>
        <summary><span data-ttu-id="d59fe-332">将版本号的字符串表示形式转换为等效的 <see cref="T:System.Version" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-332">Converts the string representation of a version number to an equivalent <see cref="T:System.Version" /> object.</span></span></summary>
        <returns><span data-ttu-id="d59fe-333">一个等效于 <paramref name="input" /> 参数中指定的版本号的对象。</span><span class="sxs-lookup"><span data-stu-id="d59fe-333">An object that is equivalent to the version number specified in the <paramref name="input" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-334">`input`参数必须采用以下格式：</span><span class="sxs-lookup"><span data-stu-id="d59fe-334">The `input` parameter must have the following format:</span></span>  
  
`major.minor[.build[.revision]]`  
  
 <span data-ttu-id="d59fe-335">其中 `major` ，、、 `minor` `build` 和 `revision` 是版本号的四个组件的字符串表示形式：主要版本号、次版本号、内部版本号和修订号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-335">where `major`, `minor`, `build`, and `revision` are the string representations of the version number's four components: major version number, minor version number, build number, and revision number, respectively.</span></span> <span data-ttu-id="d59fe-336">可选组件以方括号 ( [和] ) 显示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-336">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="d59fe-337">组件必须按指定顺序显示，并且必须以句点分隔。</span><span class="sxs-lookup"><span data-stu-id="d59fe-337">The components must appear in the specified order and must be separated by periods.</span></span>
  
> [!IMPORTANT]
>  <span data-ttu-id="d59fe-338">由于版本号的字符串表示形式必须符合可识别的模式，因此在调用 <xref:System.Version.Parse%2A> 方法分析用户输入时，应用程序应始终使用异常处理。</span><span class="sxs-lookup"><span data-stu-id="d59fe-338">Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <xref:System.Version.Parse%2A> method to parse user input.</span></span> <span data-ttu-id="d59fe-339">或者，您可以调用 <xref:System.Version.TryParse%2A> 方法来分析版本号的字符串表示形式，并返回一个指示分析操作是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="d59fe-339">Alternatively, you can call the <xref:System.Version.TryParse%2A> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.</span></span>  
  
 <span data-ttu-id="d59fe-340">此 <xref:System.Version.Parse%2A> 方法是一种简便方法; 它等效于调用 <xref:System.Version.%23ctor%28System.String%29> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-340">The <xref:System.Version.Parse%2A> method is a convenience method; it is equivalent to calling the <xref:System.Version.%23ctor%28System.String%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59fe-341">下面的示例使用 <xref:System.Version.Parse%2A> 方法分析多个包含版本信息的字符串。</span><span class="sxs-lookup"><span data-stu-id="d59fe-341">The following example uses the <xref:System.Version.Parse%2A> method to parse a number of strings that contain version information.</span></span>  
  
 [!code-csharp[System.Version.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.parse/cs/parse1.cs#1)]
 [!code-vb[System.Version.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d59fe-342"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-342"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59fe-343"><paramref name="input" /> 少于两个组件或多于四个版本组件。</span><span class="sxs-lookup"><span data-stu-id="d59fe-343"><paramref name="input" /> has fewer than two or more than four version components.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d59fe-344">在 <paramref name="input" /> 中至少有一个组件小于零。</span><span class="sxs-lookup"><span data-stu-id="d59fe-344">At least one component in <paramref name="input" /> is less than zero.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d59fe-345">在 <paramref name="input" /> 中至少有一个组件不是整数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-345">At least one component in <paramref name="input" /> is not an integer.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d59fe-346"><paramref name="input" /> 中至少有一个组件表示大于 <see cref="F:System.Int32.MaxValue" /> 的数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-346">At least one component in <paramref name="input" /> represents a number that is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Version.ToString" />
        <altmember cref="M:System.Version.TryParse(System.String,System.Version@)" />
      </Docs>
    </Member>
    <Member MemberName="Revision">
      <MemberSignature Language="C#" Value="public int Revision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Revision" />
      <MemberSignature Language="DocId" Value="P:System.Version.Revision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Revision As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Revision { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Revision : int" Usage="System.Version.Revision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59fe-347">获取当前 <see cref="T:System.Version" /> 对象版本号的修订号部分的值。</span><span class="sxs-lookup"><span data-stu-id="d59fe-347">Gets the value of the revision component of the version number for the current <see cref="T:System.Version" /> object.</span></span></summary>
        <value><span data-ttu-id="d59fe-348">修订号或为 -1（如果未定义修订号）。</span><span class="sxs-lookup"><span data-stu-id="d59fe-348">The revision number, or -1 if the revision number is undefined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-349">例如，如果版本号为6.2.1.3，则修订号为3。</span><span class="sxs-lookup"><span data-stu-id="d59fe-349">For example, if the version number is 6.2.1.3, the revision number is 3.</span></span> <span data-ttu-id="d59fe-350">如果版本号为6.2，则不确定修订号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-350">If the version number is 6.2, the revision number is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59fe-351">下面的代码示例演示了 <xref:System.Version.%23ctor%2A> 构造函数、、、、、 <xref:System.Version.Major%2A> <xref:System.Version.Minor%2A> <xref:System.Version.Build%2A> <xref:System.Version.Revision%2A> <xref:System.Version.MajorRevision%2A> 和 <xref:System.Version.MinorRevision%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d59fe-351">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object version);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (version As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ version) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="version.System.IComparable.CompareTo version" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="version"><span data-ttu-id="d59fe-352">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-352">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d59fe-353">将当前 <see cref="T:System.Version" /> 对象与指定的对象进行比较，并返回二者相对值的一个指示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-353">Compares the current <see cref="T:System.Version" /> object to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="d59fe-354">一个带符号整数，它表示两个对象的相对值，如下表所示：</span><span class="sxs-lookup"><span data-stu-id="d59fe-354">A signed integer that indicates the relative values of the two objects, as shown in the following table:</span></span> <list type="table"><listheader><term><span data-ttu-id="d59fe-355">返回值</span><span class="sxs-lookup"><span data-stu-id="d59fe-355">Return value</span></span></term><description><span data-ttu-id="d59fe-356">含义</span><span class="sxs-lookup"><span data-stu-id="d59fe-356">Meaning</span></span></description></listheader><item><term><span data-ttu-id="d59fe-357">小于零</span><span class="sxs-lookup"><span data-stu-id="d59fe-357">Less than zero</span></span></term><description><span data-ttu-id="d59fe-358">当前 <see cref="T:System.Version" /> 对象是 <paramref name="version" /> 之前的一个版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-358">The current <see cref="T:System.Version" /> object is a version before <paramref name="version" />.</span></span></description></item><item><term><span data-ttu-id="d59fe-359">零</span><span class="sxs-lookup"><span data-stu-id="d59fe-359">Zero</span></span></term><description><span data-ttu-id="d59fe-360">当前 <see cref="T:System.Version" /> 对象是与 <paramref name="version" /> 相同的版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-360">The current <see cref="T:System.Version" /> object is the same version as <paramref name="version" />.</span></span></description></item><item><term><span data-ttu-id="d59fe-361">大于零</span><span class="sxs-lookup"><span data-stu-id="d59fe-361">Greater than zero</span></span></term><description><span data-ttu-id="d59fe-362">当前 <see cref="T:System.Version" /> 对象是之后的一个版本 <paramref name="version" /> ，或者 <paramref name="version" /> 是 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="d59fe-362">The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="version" />, or <paramref name="version" /> is <see langword="null" />.</span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="d59fe-363">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="d59fe-363">This member is an explicit interface member implementation.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d59fe-364">将当前 <see cref="T:System.Version" /> 对象的值转换为其等效的 <see cref="T:System.String" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="d59fe-364">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="version.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d59fe-365">将当前 <see cref="T:System.Version" /> 对象的值转换为其等效的 <see cref="T:System.String" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="d59fe-365">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span></span></summary>
        <returns><span data-ttu-id="d59fe-366">当前 <see cref="T:System.String" /> 对象的主要版本号、次要版本号、内部版本号和修订号部分的值的 <see cref="T:System.Version" /> 表示形式（遵循下面所示格式）。</span><span class="sxs-lookup"><span data-stu-id="d59fe-366">The <see cref="T:System.String" /> representation of the values of the major, minor, build, and revision components of the current <see cref="T:System.Version" /> object, as depicted in the following format.</span></span> <span data-ttu-id="d59fe-367">各部分之间由句点字符（“.”）分隔。</span><span class="sxs-lookup"><span data-stu-id="d59fe-367">Each component is separated by a period character ('.').</span></span> <span data-ttu-id="d59fe-368">方括号（“[”和“]”）指示在返回值中不会出现的部分（如果未定义该部分）：</span><span class="sxs-lookup"><span data-stu-id="d59fe-368">Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:</span></span> 
<span data-ttu-id="d59fe-369">主要版本号.次要版本号[.内部版本号[.修订号]]</span><span class="sxs-lookup"><span data-stu-id="d59fe-369">major.minor[.build[.revision]]</span></span> 
<span data-ttu-id="d59fe-370">例如，如果使用构造函数 <c>Version(1,1)</c> 创建 <see cref="T:System.Version" /> 对象，则返回的字符串为“1.1”。</span><span class="sxs-lookup"><span data-stu-id="d59fe-370">For example, if you create a <see cref="T:System.Version" /> object using the constructor <c>Version(1,1)</c>, the returned string is "1.1".</span></span> <span data-ttu-id="d59fe-371">如果使用构造函数 <c>Version(1,3,4,2)</c> 创建 <see cref="T:System.Version" /> 对象，则返回的字符串为“1.3.4.2”。</span><span class="sxs-lookup"><span data-stu-id="d59fe-371">If you create a <see cref="T:System.Version" /> object using the constructor <c>Version(1,3,4,2)</c>, the returned string is "1.3.4.2".</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int fieldCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 fieldCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (fieldCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int fieldCount);" />
      <MemberSignature Language="F#" Value="override this.ToString : int -&gt; string" Usage="version.ToString fieldCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fieldCount"><span data-ttu-id="d59fe-372">要返回的部分数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-372">The number of components to return.</span></span> <span data-ttu-id="d59fe-373"><paramref name="fieldCount" /> 的范围是从 0 到 4。</span><span class="sxs-lookup"><span data-stu-id="d59fe-373">The <paramref name="fieldCount" /> ranges from 0 to 4.</span></span></param>
        <summary><span data-ttu-id="d59fe-374">将当前 <see cref="T:System.Version" /> 对象的值转换为其等效的 <see cref="T:System.String" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="d59fe-374">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span></span> <span data-ttu-id="d59fe-375">指定的计数指示要返回的部分数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-375">A specified count indicates the number of components to return.</span></span></summary>
        <returns><span data-ttu-id="d59fe-376">当前 <see cref="T:System.String" /> 对象的主要版本号、次要版本号、内部版本号和修订号部分的值的 <see cref="T:System.Version" /> 表示形式，各部分之间用句点字符（“.”）分隔。</span><span class="sxs-lookup"><span data-stu-id="d59fe-376">The <see cref="T:System.String" /> representation of the values of the major, minor, build, and revision components of the current <see cref="T:System.Version" /> object, each separated by a period character ('.').</span></span> <span data-ttu-id="d59fe-377"><paramref name="fieldCount" /> 参数确定返回多少个部分。</span><span class="sxs-lookup"><span data-stu-id="d59fe-377">The <paramref name="fieldCount" /> parameter determines how many components are returned.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d59fe-378">fieldCount</span><span class="sxs-lookup"><span data-stu-id="d59fe-378">fieldCount</span></span> 
 </term><description> <span data-ttu-id="d59fe-379">返回值</span><span class="sxs-lookup"><span data-stu-id="d59fe-379">Return Value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="d59fe-380">0</span><span class="sxs-lookup"><span data-stu-id="d59fe-380">0</span></span> 
 </term><description> <span data-ttu-id="d59fe-381">空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="d59fe-381">An empty string ("").</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d59fe-382">1</span><span class="sxs-lookup"><span data-stu-id="d59fe-382">1</span></span> 
 </term><description> <span data-ttu-id="d59fe-383">major</span><span class="sxs-lookup"><span data-stu-id="d59fe-383">major</span></span> 
 </description></item><item><term> <span data-ttu-id="d59fe-384">2</span><span class="sxs-lookup"><span data-stu-id="d59fe-384">2</span></span> 
 </term><description> <span data-ttu-id="d59fe-385">主要版本号.次要版本号</span><span class="sxs-lookup"><span data-stu-id="d59fe-385">major.minor</span></span> 
 </description></item><item><term> <span data-ttu-id="d59fe-386">3</span><span class="sxs-lookup"><span data-stu-id="d59fe-386">3</span></span> 
 </term><description> <span data-ttu-id="d59fe-387">主要版本号.次要版本号.内部版本号</span><span class="sxs-lookup"><span data-stu-id="d59fe-387">major.minor.build</span></span> 
 </description></item><item><term> <span data-ttu-id="d59fe-388">4</span><span class="sxs-lookup"><span data-stu-id="d59fe-388">4</span></span> 
 </term><description> <span data-ttu-id="d59fe-389">主要版本号.次要版本号.内部版本号.修订号</span><span class="sxs-lookup"><span data-stu-id="d59fe-389">major.minor.build.revision</span></span> 
 </description></item></list>  

 <span data-ttu-id="d59fe-390">例如，如果使用构造函数 <c>Version(1,3,5)</c> 创建 <see cref="T:System.Version" /> 对象，则 <c>ToString(2)</c> 返回“1.3”，并且 <c>ToString(4)</c> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="d59fe-390">For example, if you create <see cref="T:System.Version" /> object using the constructor <c>Version(1,3,5)</c>, <c>ToString(2)</c> returns "1.3" and <c>ToString(4)</c> throws an exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d59fe-391"><paramref name="fieldCount" /> 小于 0 或大于 4。</span><span class="sxs-lookup"><span data-stu-id="d59fe-391"><paramref name="fieldCount" /> is less than 0, or more than 4.</span></span>  
  
<span data-ttu-id="d59fe-392">-或-</span><span class="sxs-lookup"><span data-stu-id="d59fe-392">-or-</span></span> 
 <span data-ttu-id="d59fe-393"><paramref name="fieldCount" /> 多于在当前 <see cref="T:System.Version" /> 对象中定义的部分的数量。</span><span class="sxs-lookup"><span data-stu-id="d59fe-393"><paramref name="fieldCount" /> is more than the number of components defined in the current <see cref="T:System.Version" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int -&gt; bool" Usage="version.TryFormat (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="d59fe-394">此方法返回时，为字符范围内带格式的版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-394">When this method returns, the formatted version in the span of characters.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="d59fe-395">此方法返回时，为写入到 <paramref name="destination" /> 的字符数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-395">When this method returns, the number of characters that were written in <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="d59fe-396">尝试将此版本示例的格式设置到字符范围内。</span><span class="sxs-lookup"><span data-stu-id="d59fe-396">Tries to format this version instance into a span of characters.</span></span></summary>
        <returns><span data-ttu-id="d59fe-397">如果格式设置成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-397"><see langword="true" /> if the formatting was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, int fieldCount, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, int32 fieldCount, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryFormat(System.Span{System.Char},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), fieldCount As Integer, ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, int fieldCount, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * int -&gt; bool" Usage="version.TryFormat (destination, fieldCount, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="fieldCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="d59fe-398">此方法返回时，为字符范围内带格式的版本。</span><span class="sxs-lookup"><span data-stu-id="d59fe-398">When this method returns, the formatted version in the span of characters.</span></span></param>
        <param name="fieldCount"><span data-ttu-id="d59fe-399">要返回的部分数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-399">The number of components to return.</span></span> <span data-ttu-id="d59fe-400">此值介于 0 到 4 之间。</span><span class="sxs-lookup"><span data-stu-id="d59fe-400">This value ranges from 0 to 4.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="d59fe-401">此方法返回时，为写入到 <paramref name="destination" /> 的字符数。</span><span class="sxs-lookup"><span data-stu-id="d59fe-401">When this method returns, the number of characters that were written in <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="d59fe-402">尝试将此版本示例的格式设置到字符范围内。</span><span class="sxs-lookup"><span data-stu-id="d59fe-402">Tries to format this version instance into a span of characters.</span></span></summary>
        <returns><span data-ttu-id="d59fe-403">如果格式设置成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-403"><see langword="true" /> if the formatting was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out Version? result);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, [out] class System.Version&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryParse(System.ReadOnlySpan{System.Char},System.Version@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), ByRef result As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, [Runtime::InteropServices::Out] Version ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * Version -&gt; bool" Usage="System.Version.TryParse (input, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out Version result);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Version" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="d59fe-404">字符的只读范围，其中包含要转换的版本号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-404">A read-only span of characters that contains a version number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="d59fe-405">当此方法返回时，如果转换成功，则为 <paramref name="input" /> 总所含数字的等效 <see cref="T:System.Version" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-405">When this method returns, the <see cref="T:System.Version" /> equivalent of the number that is contained in <paramref name="input" />, if the conversion succeeded.</span></span> <span data-ttu-id="d59fe-406">如果 <paramref name="input" /> 为 <see langword="null" />、<see cref="F:System.String.Empty" /> 或者如果转换失败，当此方法返回时，<paramref name="result" /> 则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-406">If <paramref name="input" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or if the conversion fails, <paramref name="result" /> is <see langword="null" /> when the method returns.</span></span></param>
        <summary><span data-ttu-id="d59fe-407">尝试将表示版本号的指定字符只读范围转换为等效的 <see cref="T:System.Version" /> 对象，并返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="d59fe-407">Tries to convert the specified read-only span of characters representing a version number to an equivalent <see cref="T:System.Version" /> object, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="d59fe-408">如果 <see langword="true" /> 参数成功转换，则为 <paramref name="input" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-408"><see langword="true" /> if the <paramref name="input" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="d59fe-409">`TryParse`方法与 <xref:System.Version.Parse%2A> 方法类似，不同之处在于，如果转换失败，则它不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="d59fe-409">The `TryParse` method is similar to the <xref:System.Version.Parse%2A> method, except that it doesn't throw an exception if the conversion fails.</span></span> <span data-ttu-id="d59fe-410">相反， `false` 如果 `input` 为，它将返回小于 `null` 两个或四个以上的组件，至少有一个组件不是整数，至少有一个组件小于零，或者至少有一个大于的组件 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d59fe-410">Instead, it returns `false` if `input` is `null`, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="d59fe-411">若要成功执行分析操作， `input` 参数必须采用以下格式：</span><span class="sxs-lookup"><span data-stu-id="d59fe-411">For the parse operation to succeed, the `input` parameter must be in the following format:</span></span>

`major.minor[.build[.revision]]`

<span data-ttu-id="d59fe-412">其中 `major` ，、、 `minor` `build` 和 `revision` 是版本号的四个组件的字符串表示形式：主要版本号、次版本号、内部版本号和修订号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-412">where `major`, `minor`, `build`, and `revision` are the string representations of the version number's four components: major version number, minor version number, build number, and revision number, respectively.</span></span> <span data-ttu-id="d59fe-413">可选组件以方括号 ( [和] ) 显示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-413">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="d59fe-414">组件必须按顺序显示，并且必须用句点分隔。</span><span class="sxs-lookup"><span data-stu-id="d59fe-414">The components must appear in order and must be separated by periods.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out Version result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Version&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryParse(System.String,System.Version@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] Version ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * Version -&gt; bool" Usage="System.Version.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Version" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="d59fe-415">包含要转换的版本号的字符串。</span><span class="sxs-lookup"><span data-stu-id="d59fe-415">A string that contains a version number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="d59fe-416">当此方法返回时，如果转换成功，则包含与 <paramref name="input" /> 中所包含的数字等效的 <see cref="T:System.Version" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-416">When this method returns, contains the <see cref="T:System.Version" /> equivalent of the number that is contained in <paramref name="input" />, if the conversion succeeded.</span></span> <span data-ttu-id="d59fe-417">如果 <paramref name="input" /> 为 <see langword="null" />、<see cref="F:System.String.Empty" /> 或者如果转换失败，当此方法返回时，<paramref name="result" /> 则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-417">If <paramref name="input" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or if the conversion fails, <paramref name="result" /> is <see langword="null" /> when the method returns.</span></span></param>
        <summary><span data-ttu-id="d59fe-418">尝试将版本号的字符串表示形式转换为等效的 <see cref="T:System.Version" /> 对象，并返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="d59fe-418">Tries to convert the string representation of a version number to an equivalent <see cref="T:System.Version" /> object, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="d59fe-419">如果 <see langword="true" /> 参数成功转换，则为 <paramref name="input" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d59fe-419"><see langword="true" /> if the <paramref name="input" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59fe-420">`TryParse`方法与 <xref:System.Version.Parse%2A> 方法类似，不同之处在于，如果转换失败，则它不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="d59fe-420">The `TryParse` method is similar to the <xref:System.Version.Parse%2A> method, except that it doesn't throw an exception if the conversion fails.</span></span> <span data-ttu-id="d59fe-421">相反， `false` 如果 `input` 为，它将返回小于 `null` 两个或四个以上的组件，至少有一个组件不是整数，至少有一个组件小于零，或者至少有一个大于的组件 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d59fe-421">Instead, it returns `false` if `input` is `null`, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d59fe-422">若要成功执行分析操作， `input` 参数必须采用以下格式：</span><span class="sxs-lookup"><span data-stu-id="d59fe-422">For the parse operation to succeed, the `input` parameter must be in the following format:</span></span>  
  
`major.minor[.build[.revision]]`  
  
 <span data-ttu-id="d59fe-423">其中 `major` ，、、 `minor` `build` 和 `revision` 是版本号的四个组件的字符串表示形式：主要版本号、次版本号、内部版本号和修订号。</span><span class="sxs-lookup"><span data-stu-id="d59fe-423">where `major`, `minor`, `build`, and `revision` are the string representations of the version number's four components: major version number, minor version number, build number, and revision number, respectively.</span></span> <span data-ttu-id="d59fe-424">可选组件以方括号 ( [和] ) 显示。</span><span class="sxs-lookup"><span data-stu-id="d59fe-424">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="d59fe-425">组件必须按顺序显示，并且必须用句点分隔。</span><span class="sxs-lookup"><span data-stu-id="d59fe-425">The components must appear in order and must be separated by periods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59fe-426">下面的示例使用 <xref:System.Version.TryParse%2A> 方法分析多个包含版本信息的字符串。</span><span class="sxs-lookup"><span data-stu-id="d59fe-426">The following example uses the <xref:System.Version.TryParse%2A> method to parse a number of strings that contain version information.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.tryparse/cs/tryparse1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.tryparse/vb/tryparse1.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Version.Parse(System.String)" />
        <altmember cref="Overload:System.Version.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>
