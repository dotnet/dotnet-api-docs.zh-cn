<Type Name="Tuple&lt;T1,T2&gt;" FullName="System.Tuple&lt;T1,T2&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="940ec02147ca52b0ba0b51243cc59391379c8989" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100310145" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Tuple`2&lt;T1, T2&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`2" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2&gt; = class&#xA;    interface IStructuralComparable&#xA;    interface IStructuralEquatable&#xA;    interface IComparable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0" />
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable, System.Runtime.CompilerServices.ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Tuple`2&lt;T1, T2&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.Runtime.CompilerServices.ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable, ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable, System::Runtime::CompilerServices::ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2&gt; = class&#xA;    interface IStructuralComparable&#xA;    interface IStructuralEquatable&#xA;    interface IComparable&#xA;    interface ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`2&lt;T1, T2&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`2&lt;T1, T2&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.Runtime.CompilerServices.ITuple" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable&#xA;    interface ITuple" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1">
      <InterfaceName>System.Runtime.CompilerServices.ITuple</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="70628-101">此元组的第一个组件的类型。</span><span class="sxs-lookup"><span data-stu-id="70628-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="70628-102">此元组的第二个组件的类型。</span><span class="sxs-lookup"><span data-stu-id="70628-102">The type of the tuple's second component.</span></span></typeparam>
    <summary><span data-ttu-id="70628-103">表示 2 元组，或二元组。</span><span class="sxs-lookup"><span data-stu-id="70628-103">Represents a 2-tuple, or pair.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-104">元组是具有特定数量和值序列的数据结构。</span><span class="sxs-lookup"><span data-stu-id="70628-104">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="70628-105"><xref:System.Tuple%602>类表示2元组，即包含两个组件的元组。</span><span class="sxs-lookup"><span data-stu-id="70628-105">The <xref:System.Tuple%602> class represents a 2-tuple, or pair, which is a tuple that has two components.</span></span> <span data-ttu-id="70628-106">2元组类似于 <xref:System.Collections.Generic.KeyValuePair%602> 结构。</span><span class="sxs-lookup"><span data-stu-id="70628-106">A 2-tuple is similar to a <xref:System.Collections.Generic.KeyValuePair%602> structure.</span></span>  
  
 <span data-ttu-id="70628-107">可以 <xref:System.Tuple%602> 通过调用 <xref:System.Tuple%602.%23ctor%2A> 构造函数或静态方法来实例化对象 <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="70628-107">You can instantiate a <xref:System.Tuple%602> object by calling either the <xref:System.Tuple%602.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="70628-108">您可以通过使用 "只读" 和 "实例" 属性来检索元组组件的值 <xref:System.Tuple%602.Item1%2A> <xref:System.Tuple%602.Item2%2A> 。</span><span class="sxs-lookup"><span data-stu-id="70628-108">You can retrieve the values of the tuple's components by using the read-only <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> instance properties.</span></span>  
  
 <span data-ttu-id="70628-109">元组通常以四种不同的方式使用：</span><span class="sxs-lookup"><span data-stu-id="70628-109">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="70628-110">表示单个数据集。</span><span class="sxs-lookup"><span data-stu-id="70628-110">To represent a single set of data.</span></span> <span data-ttu-id="70628-111">例如，元组可表示数据库中的记录，并且其组件可以表示该记录的字段。</span><span class="sxs-lookup"><span data-stu-id="70628-111">For example, a tuple can represent a record in a database, and its components can represent that record's fields.</span></span>  
  
-   <span data-ttu-id="70628-112">提供对数据集的轻松访问和操作。</span><span class="sxs-lookup"><span data-stu-id="70628-112">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="70628-113">下面的示例定义了一个 <xref:System.Tuple%602> 对象数组，其中包含学生的姓名及其相应的测试分数。</span><span class="sxs-lookup"><span data-stu-id="70628-113">The following example defines an array of <xref:System.Tuple%602> objects that contain the names of students and their corresponding test scores.</span></span> <span data-ttu-id="70628-114">然后，它将循环访问该数组以计算平均测试分数。</span><span class="sxs-lookup"><span data-stu-id="70628-114">It then iterates the array to calculate the mean test score.</span></span>  
  
     :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.class/cs/example1.cs" interactive="try-dotnet" id="Snippet1":::
     :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.class/vb/example1.vb" id="Snippet1":::

-   <span data-ttu-id="70628-115">如果为，则从方法返回多个值，而不使用 `out` 参数 (在 c # 中 ) 或 `ByRef` (Visual Basic) 中的参数。</span><span class="sxs-lookup"><span data-stu-id="70628-115">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="70628-116">例如，下面的示例使用一个 <xref:System.Tuple%602> 对象来返回由整数除法导致的商和余数。</span><span class="sxs-lookup"><span data-stu-id="70628-116">For example, the following example uses a <xref:System.Tuple%602> object to return the quotient and the remainder that result from integer division.</span></span>  
  
     :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs" interactive="try-dotnet" id="Snippet1":::
     :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb" id="Snippet1":::

-   <span data-ttu-id="70628-117">若要通过单个参数向方法传递多个值，则为。</span><span class="sxs-lookup"><span data-stu-id="70628-117">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="70628-118">例如，该 <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> 方法只有一个参数，该参数使你可以为启动时线程执行的方法提供一个值。</span><span class="sxs-lookup"><span data-stu-id="70628-118">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="70628-119">如果提供 <xref:System.Tuple%602> 对象作为方法自变量，则可以为线程的启动例程提供两个数据项。</span><span class="sxs-lookup"><span data-stu-id="70628-119">If you supply a <xref:System.Tuple%602> object as the method argument, you can supply the thread's startup routine with two items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.#ctor(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2&gt; : 'T1 * 'T2 -&gt; Tuple&lt;'T1, 'T2&gt;" Usage="new System.Tuple&lt;'T1, 'T2&gt; (item1, item2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="70628-120">此元组的第一个组件的值。</span><span class="sxs-lookup"><span data-stu-id="70628-120">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="70628-121">此元组的第二个组件的值。</span><span class="sxs-lookup"><span data-stu-id="70628-121">The value of the tuple's second component.</span></span></param>
        <summary><span data-ttu-id="70628-122">初始化 <see cref="T:System.Tuple`2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="70628-122">Initializes a new instance of the <see cref="T:System.Tuple`2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-123">你还可以使用静态 <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> 方法来实例化2元组对象，而无需显式指定其组件的类型。</span><span class="sxs-lookup"><span data-stu-id="70628-123">You can also use the static <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method to instantiate a 2-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="70628-124">下面的示例使用 <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> 方法实例化一个2元组，其组件的类型为 <xref:System.String> 和 <xref:System.Double> 。</span><span class="sxs-lookup"><span data-stu-id="70628-124">The following example uses the <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method to instantiate a 2-tuple whose components are of type <xref:System.String> and <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#3)]
 [!code-vb[System.Tuple.Create#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#3)]  
  
 <span data-ttu-id="70628-125">这等效于对 <xref:System.Tuple%602.%23ctor%2A> 类构造函数的以下调用。</span><span class="sxs-lookup"><span data-stu-id="70628-125">This is equivalent to the following call to the <xref:System.Tuple%602.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#4)]
 [!code-vb[System.Tuple.Create#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="70628-126">与该实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="70628-126">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="70628-127">返回一个值，该值指示当前的 <see cref="T:System.Tuple`2" /> 对象是否与指定对象相等。</span><span class="sxs-lookup"><span data-stu-id="70628-127">Returns a value that indicates whether the current <see cref="T:System.Tuple`2" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="70628-128">如果当前实例等于指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70628-128"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-129">`obj`在下列条件下，参数被视为等于当前实例：</span><span class="sxs-lookup"><span data-stu-id="70628-129">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="70628-130">它是一个 <xref:System.Tuple%602> 对象。</span><span class="sxs-lookup"><span data-stu-id="70628-130">It is a <xref:System.Tuple%602> object.</span></span>  
  
-   <span data-ttu-id="70628-131">它的两个组件的类型与当前实例相同。</span><span class="sxs-lookup"><span data-stu-id="70628-131">Its two components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="70628-132">它的两个组件等于当前实例的组件。</span><span class="sxs-lookup"><span data-stu-id="70628-132">Its two components are equal to those of the current instance.</span></span> <span data-ttu-id="70628-133">相等性取决于每个组件的默认对象相等比较器。</span><span class="sxs-lookup"><span data-stu-id="70628-133">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70628-134">下面的示例调用 <xref:System.Tuple%602.Equals%28System.Object%29?displayProperty=nameWithType> 方法，以确定对象数组中的任何对象是否 <xref:System.Tuple%602> 相等。</span><span class="sxs-lookup"><span data-stu-id="70628-134">The following example calls the <xref:System.Tuple%602.Equals%28System.Object%29?displayProperty=nameWithType> method to determine whether any of the objects in an array of <xref:System.Tuple%602> objects are equal to one another.</span></span> <span data-ttu-id="70628-135">输出反映了 <xref:System.Tuple%602.Equals%28System.Object%29> 方法 `true` 在比较 <xref:System.Tuple%602> 其组件具有相等值的对象时返回的事实。</span><span class="sxs-lookup"><span data-stu-id="70628-135">The output reflects the fact that the <xref:System.Tuple%602.Equals%28System.Object%29> method returns `true` when comparing <xref:System.Tuple%602> objects whose components have equal values.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`2.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="70628-136">返回当前 <see cref="T:System.Tuple`2" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="70628-136">Returns the hash code for the current <see cref="T:System.Tuple`2" /> object.</span></span></summary>
        <returns><span data-ttu-id="70628-137">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="70628-137">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70628-138">获取当前 <see cref="T:System.Tuple`2" /> 对象的第一个分量的值。</span><span class="sxs-lookup"><span data-stu-id="70628-138">Gets the value of the current <see cref="T:System.Tuple`2" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="70628-139">当前 <see cref="T:System.Tuple`2" /> 对象的第一个分量的值。</span><span class="sxs-lookup"><span data-stu-id="70628-139">The value of the current <see cref="T:System.Tuple`2" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-140">可以 <xref:System.Tuple%602.Item1%2A> 通过以下两种方式之一动态确定组件的类型：</span><span class="sxs-lookup"><span data-stu-id="70628-140">You can dynamically determine the type of the <xref:System.Tuple%602.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="70628-141">通过 `GetType` 对属性返回的值调用方法 <xref:System.Tuple%602.Item1%2A> 。</span><span class="sxs-lookup"><span data-stu-id="70628-141">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%602.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="70628-142">通过检索 <xref:System.Type> 表示对象的对象 <xref:System.Tuple%602> ，并从该数组中检索由其方法返回的第一个元素 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="70628-142">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%602> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70628-143">该示例演示 <xref:System.Tuple%602.Item1%2A> 如何使用和 <xref:System.Tuple%602.Item2%2A> 属性来定义一个方法，该方法返回一个以2元组形式返回的多个值。</span><span class="sxs-lookup"><span data-stu-id="70628-143">The example illustrates the use of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties to define a method that returns multiple values in the form of a 2-tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`2.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70628-144">获取当前 <see cref="T:System.Tuple`2" /> 对象的第二个分量的值。</span><span class="sxs-lookup"><span data-stu-id="70628-144">Gets the value of the current <see cref="T:System.Tuple`2" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="70628-145">当前 <see cref="T:System.Tuple`2" /> 对象的第二个分量的值。</span><span class="sxs-lookup"><span data-stu-id="70628-145">The value of the current <see cref="T:System.Tuple`2" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-146">可以 <xref:System.Tuple%602.Item2%2A> 通过以下两种方式之一动态确定组件的类型：</span><span class="sxs-lookup"><span data-stu-id="70628-146">You can dynamically determine the type of the <xref:System.Tuple%602.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="70628-147">通过 `GetType` 对属性返回的值调用方法 <xref:System.Tuple%602.Item2%2A> 。</span><span class="sxs-lookup"><span data-stu-id="70628-147">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%602.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="70628-148">通过检索 <xref:System.Type> 表示对象的对象 <xref:System.Tuple%602> ，并从其方法返回的数组中检索第二个元素 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="70628-148">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%602> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70628-149">该示例演示 <xref:System.Tuple%602.Item1%2A> 如何使用和 <xref:System.Tuple%602.Item2%2A> 属性来定义一个方法，该方法返回一个以2元组形式返回的多个值。</span><span class="sxs-lookup"><span data-stu-id="70628-149">The example illustrates the use of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties to define a method that returns multiple values in the form of a 2-tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`2.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralComparable.CompareTo : obj * System.Collections.IComparer -&gt; int&#xA;override this.System.Collections.IStructuralComparable.CompareTo : obj * System.Collections.IComparer -&gt; int" Usage="tuple.System.Collections.IStructuralComparable.CompareTo (other, comparer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="70628-150">要与当前实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="70628-150">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="70628-151">提供用于比较的自定义规则的对象。</span><span class="sxs-lookup"><span data-stu-id="70628-151">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="70628-152">使用指定的比较器将当前的 <see cref="T:System.Tuple`2" /> 对象与指定对象进行比较，并返回一个整数，该整数指示当前对象在排序顺序中的位置是在指定对象之前、之后还是与其相同。</span><span class="sxs-lookup"><span data-stu-id="70628-152">Compares the current <see cref="T:System.Tuple`2" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="70628-153">一个带符号整数，指示此实例和 <paramref name="other" /> 在排序顺序中的相对位置，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="70628-153">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="70628-154">值</span><span class="sxs-lookup"><span data-stu-id="70628-154">Value</span></span> 
 </term><description> <span data-ttu-id="70628-155">说明</span><span class="sxs-lookup"><span data-stu-id="70628-155">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="70628-156">负整数</span><span class="sxs-lookup"><span data-stu-id="70628-156">A negative integer</span></span> 
 </term><description> <span data-ttu-id="70628-157">此实例位于 <paramref name="other" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="70628-157">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="70628-158">零</span><span class="sxs-lookup"><span data-stu-id="70628-158">Zero</span></span> 
 </term><description> <span data-ttu-id="70628-159">此实例在排序顺序中的位置与 <paramref name="other" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="70628-159">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="70628-160">正整数</span><span class="sxs-lookup"><span data-stu-id="70628-160">A positive integer</span></span> 
 </term><description> <span data-ttu-id="70628-161">此实例位于 <paramref name="other" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="70628-161">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-162">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="70628-162">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="70628-163">它只能在 <xref:System.Tuple%602> 实例被强制转换为 <xref:System.Collections.IStructuralComparable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="70628-163">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="70628-164">尽管可以直接调用此方法，但它最常见的方法是包含参数的集合排序方法， <xref:System.Collections.IComparer> 以对集合的成员进行排序。</span><span class="sxs-lookup"><span data-stu-id="70628-164">Although this method can be called directly, it is most commonly called by collection sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="70628-165">例如，它由 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> 方法和 <xref:System.Collections.SortedList.Add%2A> <xref:System.Collections.SortedList> 使用构造函数实例化的对象的方法调用 <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="70628-165">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="70628-166"><xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A>方法旨在用于排序操作。</span><span class="sxs-lookup"><span data-stu-id="70628-166">The <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="70628-167">如果比较的主要目的是确定两个对象是否相等，则不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="70628-167">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="70628-168">若要确定两个对象是否相等，请调用 <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="70628-168">To determine whether two objects are equal, call the <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70628-169">下面的示例创建对象的数组 <xref:System.Tuple%602> ，其中包含学生的姓名和测试分数。</span><span class="sxs-lookup"><span data-stu-id="70628-169">The following example creates an array of <xref:System.Tuple%602> objects that consist of a student's name and test score.</span></span> <span data-ttu-id="70628-170">它以未排序的顺序显示数组中每个元组的组件，对数组进行排序，然后调用 <xref:System.Tuple%602.ToString%2A> 以按排序顺序显示每个元组的值。</span><span class="sxs-lookup"><span data-stu-id="70628-170">It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%602.ToString%2A> to display the value of each tuple in sorted order.</span></span> <span data-ttu-id="70628-171">为了对数组进行排序，此示例定义了一个泛型 `ScoreComparer` 类，该类实现 <xref:System.Collections.IComparer> 接口，并按 <xref:System.Tuple%602> 其第二个组件的值（而不是第一个组件）对对象进行升序排序。</span><span class="sxs-lookup"><span data-stu-id="70628-171">To sort the array, the example defines a generic `ScoreComparer` class that implements the <xref:System.Collections.IComparer> interface and sorts the <xref:System.Tuple%602> objects in ascending order by the value of their second component rather than their first component.</span></span> <span data-ttu-id="70628-172">请注意，该示例不会直接调用 <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="70628-172">Note that the example does not directly call the <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="70628-173">此方法由 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> 方法为数组中的每个元素隐式调用。</span><span class="sxs-lookup"><span data-stu-id="70628-173">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`2.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`2.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="70628-174"><paramref name="other" /> 不是 <see cref="T:System.Tuple`2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="70628-174"><paramref name="other" /> is not a <see cref="T:System.Tuple`2" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralEquatable.Equals : obj * System.Collections.IEqualityComparer -&gt; bool&#xA;override this.System.Collections.IStructuralEquatable.Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="tuple.System.Collections.IStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="70628-175">与该实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="70628-175">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="70628-176">一个对象，该对象定义用于评估两个对象是否相等的方法。</span><span class="sxs-lookup"><span data-stu-id="70628-176">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="70628-177">返回一个值，该值根据指定的比较方法指示当前的 <see cref="T:System.Tuple`2" /> 对象是否与指定对象相等。</span><span class="sxs-lookup"><span data-stu-id="70628-177">Returns a value that indicates whether the current <see cref="T:System.Tuple`2" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="70628-178">如果当前实例等于指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70628-178"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-179">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="70628-179">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="70628-180">它只能在 <xref:System.Tuple%602> 实例被强制转换为 <xref:System.Collections.IStructuralEquatable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="70628-180">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="70628-181"><xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A>仅当不为时，才会调用实现 `other` `null` ，并且如果可以成功地强制转换 c # 中的 () 或将) Visual Basic 中的 (转换为 <xref:System.Tuple%602> 其组件与当前实例相同的类型的对象。</span><span class="sxs-lookup"><span data-stu-id="70628-181">The <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%602> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="70628-182"><xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A>方法首先传递 <xref:System.Tuple%602.Item1%2A> <xref:System.Tuple%602> 要与实现进行比较的对象的值 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="70628-182">The <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method first passes the <xref:System.Tuple%602.Item1%2A> values of the <xref:System.Tuple%602> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="70628-183">如果此方法调用返回 `true` ，将再次调用方法并传递 <xref:System.Tuple%602.Item2%2A> 两个对象的值 <xref:System.Tuple%602> 。</span><span class="sxs-lookup"><span data-stu-id="70628-183">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%602.Item2%2A> values of the two <xref:System.Tuple%602> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70628-184">下面的示例定义一个 `Item2Comparer` 实现接口的类 <xref:System.Collections.IEqualityComparer> ，并更改 <xref:System.Tuple%602> 计算对象的相等性的方式。</span><span class="sxs-lookup"><span data-stu-id="70628-184">The following example defines an `Item2Comparer` class that implements the <xref:System.Collections.IEqualityComparer> interface and changes the way in which <xref:System.Tuple%602> objects are evaluated for equality.</span></span> <span data-ttu-id="70628-185">`true`当向传递 <xref:System.Tuple%602.Item1%2A> 两个对象的属性值时，此方法始终返回 <xref:System.Tuple%602> ，并调用 <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> 方法来计算其 <xref:System.Tuple%602.Item2%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="70628-185">The method always returns `true` when it is passed the <xref:System.Tuple%602.Item1%2A> property values of two <xref:System.Tuple%602> objects, and it calls the <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method to evaluate their <xref:System.Tuple%602.Item2%2A> property values.</span></span> <span data-ttu-id="70628-186">因此，方法仅基于属性的值测试相等性 <xref:System.Tuple%602.Item2%2A> 。</span><span class="sxs-lookup"><span data-stu-id="70628-186">As a result, the method tests for equality based only on the value of the <xref:System.Tuple%602.Item2%2A> property.</span></span> <span data-ttu-id="70628-187">输出说明了一组对象的结果， <xref:System.Tuple%602> 这些对象记录了运行程序的名称和运行的距离。</span><span class="sxs-lookup"><span data-stu-id="70628-187">The output illustrates the result for a data set of <xref:System.Tuple%602> objects that record the names of runners and the distances that they ran.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`2.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralEquatable.GetHashCode : System.Collections.IEqualityComparer -&gt; int&#xA;override this.System.Collections.IStructuralEquatable.GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="tuple.System.Collections.IStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="70628-188">一个对象，其 <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 方法计算当前 <see cref="T:System.Tuple`2" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="70628-188">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`2" /> object.</span></span></param>
        <summary><span data-ttu-id="70628-189">使用指定的计算方法计算当前 <see cref="T:System.Tuple`2" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="70628-189">Calculates the hash code for the current <see cref="T:System.Tuple`2" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="70628-190">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="70628-190">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-191">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="70628-191">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="70628-192">它只能在 <xref:System.Tuple%602> 实例被强制转换为 <xref:System.Collections.IStructuralEquatable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="70628-192">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="70628-193">方法只是包装对 `comparer` 对象实现的调用 <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="70628-193">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="70628-194">用于计算哈希代码的算法应为被视为相等的两个对象返回相同的哈希代码 <xref:System.Tuple%602> 。</span><span class="sxs-lookup"><span data-stu-id="70628-194">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%602> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="tuple.System.IComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="70628-195">要与当前实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="70628-195">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="70628-196">比较当前 <see cref="T:System.Tuple`2" /> 对象与指定对象，并返回一个整数，该整数指示当前对象在排序顺序中的位置：是在指定对象之前、之后还是在与指定对象相同的位置。</span><span class="sxs-lookup"><span data-stu-id="70628-196">Compares the current <see cref="T:System.Tuple`2" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="70628-197">一个带符号整数，指示此实例和 <paramref name="obj" /> 在排序顺序中的相对位置，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="70628-197">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="70628-198">值</span><span class="sxs-lookup"><span data-stu-id="70628-198">Value</span></span> 
 </term><description> <span data-ttu-id="70628-199">说明</span><span class="sxs-lookup"><span data-stu-id="70628-199">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="70628-200">负整数</span><span class="sxs-lookup"><span data-stu-id="70628-200">A negative integer</span></span> 
 </term><description> <span data-ttu-id="70628-201">此实例位于 <paramref name="obj" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="70628-201">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="70628-202">零</span><span class="sxs-lookup"><span data-stu-id="70628-202">Zero</span></span> 
 </term><description> <span data-ttu-id="70628-203">此实例在排序顺序中的位置与 <paramref name="obj" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="70628-203">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="70628-204">正整数</span><span class="sxs-lookup"><span data-stu-id="70628-204">A positive integer</span></span> 
 </term><description> <span data-ttu-id="70628-205">此实例位于 <paramref name="obj" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="70628-205">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-206">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="70628-206">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="70628-207">它只能在 <xref:System.Tuple%602> 实例被强制转换为 <xref:System.IComparable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="70628-207">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="70628-208">此方法提供 <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> 类的实现 <xref:System.Tuple%602> 。</span><span class="sxs-lookup"><span data-stu-id="70628-208">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%602> class.</span></span> <span data-ttu-id="70628-209">尽管可以直接调用方法，但它通常由集合排序方法（如和）的默认重载调用， <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType> 以对集合的成员进行排序。</span><span class="sxs-lookup"><span data-stu-id="70628-209">Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="70628-210"><xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>方法旨在用于排序操作。</span><span class="sxs-lookup"><span data-stu-id="70628-210">The <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="70628-211">如果比较的主要目的是确定两个对象是否相等，则不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="70628-211">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="70628-212">若要确定两个对象是否相等，请调用 <xref:System.Tuple%602.Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="70628-212">To determine whether two objects are equal, call the <xref:System.Tuple%602.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="70628-213"><xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>方法使用默认的对象比较器来比较每个组件。</span><span class="sxs-lookup"><span data-stu-id="70628-213">The <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70628-214">下面的示例创建对象的数组 <xref:System.Tuple%602> ，其中包含学生的姓名和测试分数。</span><span class="sxs-lookup"><span data-stu-id="70628-214">The following example creates an array of <xref:System.Tuple%602> objects that consist of a student's name and test score.</span></span> <span data-ttu-id="70628-215">它以未排序的顺序显示数组中每个元组的组件，对数组进行排序，然后调用 <xref:System.Tuple%602.ToString%2A> 以按排序顺序显示每个元组的值。</span><span class="sxs-lookup"><span data-stu-id="70628-215">It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%602.ToString%2A> to display the value of each tuple in sorted order.</span></span> <span data-ttu-id="70628-216">输出显示数组已按其第一个组件排序。</span><span class="sxs-lookup"><span data-stu-id="70628-216">The output shows that the array has been sorted by its first component.</span></span> <span data-ttu-id="70628-217">请注意，该示例不会直接调用 <xref:System.Tuple%602.System%23IComparable%23CompareTo%28System.Object%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="70628-217">Note that the example does not directly call the <xref:System.Tuple%602.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="70628-218">此方法由 <xref:System.Array.Sort%28System.Array%29> 方法为数组中的每个元素隐式调用。</span><span class="sxs-lookup"><span data-stu-id="70628-218">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`2.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`2.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="70628-219"><paramref name="obj" /> 不是 <see cref="T:System.Tuple`2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="70628-219"><paramref name="obj" /> is not a <see cref="T:System.Tuple`2" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`2.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object? System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.System.Runtime.CompilerServices.ITuple.Item(int) : obj" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="70628-220">指定 <see langword="Tuple" /> 元素的索引。</span><span class="sxs-lookup"><span data-stu-id="70628-220">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="70628-221"><paramref name="index" /> 的范围可以介于 0 到 1 之间。</span><span class="sxs-lookup"><span data-stu-id="70628-221"><paramref name="index" /> can range from 0 to 1.</span></span></param>
        <summary><span data-ttu-id="70628-222">获取指定 <see langword="Tuple" /> 元素的值。</span><span class="sxs-lookup"><span data-stu-id="70628-222">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="70628-223">指定位置 <see langword="Tuple" /> 元素的值。</span><span class="sxs-lookup"><span data-stu-id="70628-223">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-224"><xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>属性是显式接口实现。</span><span class="sxs-lookup"><span data-stu-id="70628-224">The <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="70628-225">若要调用该对象，必须将对象强制转换或转换 <xref:System.Tuple%602> 为 <xref:System.Runtime.CompilerServices.ITuple> 接口对象。</span><span class="sxs-lookup"><span data-stu-id="70628-225">To call it, you must cast or convert the <xref:System.Tuple%602> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="70628-226"><paramref name="index" /> 小于 0 或大于 1。</span><span class="sxs-lookup"><span data-stu-id="70628-226"><paramref name="index" /> is less than 0 or greater than 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Runtime.CompilerServices.ITuple.Length : int" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70628-227">获取 <see langword="Tuple" /> 中的元素数。</span><span class="sxs-lookup"><span data-stu-id="70628-227">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="70628-228">2，<see cref="T:System.Tuple`2" /> 对象中的元素数。</span><span class="sxs-lookup"><span data-stu-id="70628-228">2, the number of elements in a <see cref="T:System.Tuple`2" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-229"><xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Length%2A>属性是显式接口实现。</span><span class="sxs-lookup"><span data-stu-id="70628-229">The <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="70628-230">若要调用该对象，必须将对象强制转换或转换 <xref:System.Tuple%602> 为 <xref:System.Runtime.CompilerServices.ITuple> 接口对象。</span><span class="sxs-lookup"><span data-stu-id="70628-230">To call it, you must cast or convert the <xref:System.Tuple%602> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="70628-231">返回表示此 <see cref="T:System.Tuple`2" /> 实例的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="70628-231">Returns a string that represents the value of this <see cref="T:System.Tuple`2" /> instance.</span></span></summary>
        <returns><span data-ttu-id="70628-232">此 <see cref="T:System.Tuple`2" /> 对象的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="70628-232">The string representation of this <see cref="T:System.Tuple`2" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70628-233">此方法返回的字符串采用格式 (*Item1*， *Item2*) ，其中 *Item1* 和 *Item2* 表示 <xref:System.Tuple%602.Item1%2A> 和属性的值 <xref:System.Tuple%602.Item2%2A> 。</span><span class="sxs-lookup"><span data-stu-id="70628-233">The string returned by this method takes the form (*Item1*, *Item2*), where *Item1* and *Item2* represent the values of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties.</span></span> <span data-ttu-id="70628-234">如果任一属性值为 `null` ，则将其表示为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="70628-234">If either property value is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70628-235">下面的示例演示 <xref:System.Tuple%602.ToString%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="70628-235">The following example illustrates the <xref:System.Tuple%602.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`2.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`2.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
