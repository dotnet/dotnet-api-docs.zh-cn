<Type Name="Action&lt;T1,T2,T3,T4&gt;" FullName="System.Action&lt;T1,T2,T3,T4&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f26cc8ffc6ff40ab9b6ff62a277f550cf313e09e" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83952091" /></Metadata><TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3,in T4&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`4&lt;- T1, - T2, - T3, - T4&gt; extends System.MulticastDelegate" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Action`4" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3, In T4)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3, T4 arg4);" />
  <TypeSignature Language="F#" Value="type Action&lt;'T1, 'T2, 'T3, 'T4&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 -&gt; unit" />
  <TypeSignature Language="C#" Value="public delegate void Action&lt;T1,T2,T3,T4&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4);" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`4&lt;T1, T2, T3, T4&gt; extends System.MulticastDelegate" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of T1, T2, T3, T4)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4)" FrameworkAlternate="netframework-3.5" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Core" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Core" FromVersion="4.0.0.0" To="mscorlib" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
    <TypeForwarding From="System.Core" FromVersion="2.0.5.0" To="mscorlib" ToVersion="2.0.5.0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="ff664-101">此委托封装的方法的第一个参数的类型。</span><span class="sxs-lookup"><span data-stu-id="ff664-101">The type of the first parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="ff664-102">此委托封装的方法的第二个参数的类型。</span><span class="sxs-lookup"><span data-stu-id="ff664-102">The type of the second parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="ff664-103">此委托封装的方法的第三个参数的类型。</span><span class="sxs-lookup"><span data-stu-id="ff664-103">The type of the third parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="ff664-104">此委托封装的方法的第四个参数的类型。</span><span class="sxs-lookup"><span data-stu-id="ff664-104">The type of the fourth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <param name="arg1"><span data-ttu-id="ff664-105">此委托封装的方法的第一个参数。</span><span class="sxs-lookup"><span data-stu-id="ff664-105">The first parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg2"><span data-ttu-id="ff664-106">此委托封装的方法的第二个参数。</span><span class="sxs-lookup"><span data-stu-id="ff664-106">The second parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg3"><span data-ttu-id="ff664-107">此委托封装的方法的第三个参数。</span><span class="sxs-lookup"><span data-stu-id="ff664-107">The third parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg4"><span data-ttu-id="ff664-108">此委托封装的方法的第四个参数。</span><span class="sxs-lookup"><span data-stu-id="ff664-108">The fourth parameter of the method that this delegate encapsulates.</span></span></param>
    <summary><span data-ttu-id="ff664-109">封装一个方法，该方法具有四个参数且不返回值。</span><span class="sxs-lookup"><span data-stu-id="ff664-109">Encapsulates a method that has four parameters and does not return a value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff664-110">您可以使用 <xref:System.Action%604> 委托以参数形式传递方法，而无需显式声明自定义委托。</span><span class="sxs-lookup"><span data-stu-id="ff664-110">You can use the <xref:System.Action%604> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="ff664-111">封装的方法必须对应于由此委托定义的方法签名。</span><span class="sxs-lookup"><span data-stu-id="ff664-111">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="ff664-112">这意味着封装的方法必须具有四个通过值传递给它的参数，并且不能返回值。</span><span class="sxs-lookup"><span data-stu-id="ff664-112">This means that the encapsulated method must have four parameters that are all passed to it by value, and it must not return a value.</span></span> <span data-ttu-id="ff664-113">（在C#中，该方法必须返回 `void`。</span><span class="sxs-lookup"><span data-stu-id="ff664-113">(In C#, the method must return `void`.</span></span> <span data-ttu-id="ff664-114">在 Visual Basic 中，它必须由 `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="ff664-114">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="ff664-115">construct。</span><span class="sxs-lookup"><span data-stu-id="ff664-115">construct.</span></span> <span data-ttu-id="ff664-116">它也可以是返回忽略的值的方法。）通常，这种方法用于执行操作。</span><span class="sxs-lookup"><span data-stu-id="ff664-116">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ff664-117">若要引用具有四个参数并返回值的方法，请改用泛型 <xref:System.Func%605> 委托。</span><span class="sxs-lookup"><span data-stu-id="ff664-117">To reference a method that has four parameters and returns a value, use the generic <xref:System.Func%605> delegate instead.</span></span>  
  
 <span data-ttu-id="ff664-118">使用 <xref:System.Action%604> 委托时，无需显式定义使用四个参数封装方法的委托。</span><span class="sxs-lookup"><span data-stu-id="ff664-118">When you use the <xref:System.Action%604> delegate, you do not have to explicitly define a delegate that encapsulates a method with four parameters.</span></span> <span data-ttu-id="ff664-119">例如，下面的代码显式声明名为 `StringCopy` 的委托，并向其委托实例分配对 `CopyStrings` 方法的引用。</span><span class="sxs-lookup"><span data-stu-id="ff664-119">For example, the following code explicitly declares a delegate named `StringCopy` and assigns a reference to the `CopyStrings` method to its delegate instance.</span></span>  
  
 [!code-csharp[System.Action~4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Delegate.cs#1)]
 [!code-vb[System.Action~4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~4/vb/Delegate.vb#1)]  
  
 <span data-ttu-id="ff664-120">下面的示例通过实例化 <xref:System.Action%604> 委托简化了此代码，而不是显式定义一个新委托并为其分配一个命名方法。</span><span class="sxs-lookup"><span data-stu-id="ff664-120">The following example simplifies this code by instantiating the <xref:System.Action%604> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-csharp[System.Action~4#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Action4.cs#2)]
 [!code-vb[System.Action~4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~4/vb/Action4.vb#2)]  
  
 <span data-ttu-id="ff664-121">你还可以在中C#使用匿名方法的 <xref:System.Action%604> 委托，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="ff664-121">You can also use the <xref:System.Action%604> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="ff664-122">（有关匿名方法的介绍，请参阅[匿名方法](/dotnet/csharp/programming-guide/statements-expressions-operators/anonymous-methods)。）</span><span class="sxs-lookup"><span data-stu-id="ff664-122">(For an introduction to anonymous methods, see [Anonymous Methods](/dotnet/csharp/programming-guide/statements-expressions-operators/anonymous-methods).)</span></span>  
  
 [!code-csharp[System.Action~4#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Anon.cs#3)]  
  
 <span data-ttu-id="ff664-123">你还可以将 lambda 表达式分配给 <xref:System.Action%604> 委托实例，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="ff664-123">You can also assign a lambda expression to an <xref:System.Action%604> delegate instance, as the following example illustrates.</span></span> <span data-ttu-id="ff664-124">（有关 lambda 表达式的介绍，请参阅[Lambda 表达式](/dotnet/csharp/programming-guide/statements-expressions-operators/lambda-expressions)。）</span><span class="sxs-lookup"><span data-stu-id="ff664-124">(For an introduction to lambda expressions, see [Lambda Expressions](/dotnet/csharp/programming-guide/statements-expressions-operators/lambda-expressions).)</span></span>  
  
 [!code-csharp[System.Action~4#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Lambda.cs#4)]
 [!code-vb[System.Action~4#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~4/vb/lambda.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`5" />
  </Docs>
</Type>
