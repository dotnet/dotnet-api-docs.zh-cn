<Type Name="Uri" FullName="System.Uri">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c228e3fa0813474bbe33f2fd51a3110ed8c2f55b" /><Meta Name="ms.sourcegitcommit" Value="201bc7d7971e1c472a1df08dfeef528a60cec311" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/09/2020" /><Meta Name="ms.locfileid" Value="89597570" /></Metadata><TypeSignature Language="C#" Value="public class Uri" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Uri extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.Uri" />
  <TypeSignature Language="VB.NET" Value="Public Class Uri" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class Uri" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type Uri = class" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public class Uri : System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Uri extends System.Object implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class Uri&#xA;Implements ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Uri : System::Runtime::Serialization::ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Uri = class&#xA;    interface ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public class Uri : MarshalByRefObject, System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Uri extends System.MarshalByRefObject implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Class Uri&#xA;Inherits MarshalByRefObject&#xA;Implements ISerializable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class Uri : MarshalByRefObject, System::Runtime::Serialization::ISerializable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type Uri = class&#xA;    inherit MarshalByRefObject&#xA;    interface ISerializable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Uri extends System.Object implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a6875-101">提供统一资源标识符 (URI) 的对象表示形式和对 URI 各部分的轻松访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-101">Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A URI is a compact representation of a resource available to your application on the intranet or internet. <span data-ttu-id="a6875-103"><xref:System.Uri>类定义了用于处理 uri 的属性和方法，包括分析、比较和组合。</span><span class="sxs-lookup"><span data-stu-id="a6875-103">The <xref:System.Uri> class defines the properties and methods for handling URIs, including parsing, comparing, and combining.</span></span> <span data-ttu-id="a6875-104"><xref:System.Uri>类属性是只读的; 若要创建可修改的对象，请使用 <xref:System.UriBuilder> 类。</span><span class="sxs-lookup"><span data-stu-id="a6875-104">The <xref:System.Uri> class properties are read-only; to create a modifiable object, use the <xref:System.UriBuilder> class.</span></span>  
  
 <span data-ttu-id="a6875-105">相对 Uri (例如，"/new/index.htm" ) 必须相对于基 URI 展开，以便它们是绝对的。</span><span class="sxs-lookup"><span data-stu-id="a6875-105">Relative URIs (for example, "/new/index.htm") must be expanded with respect to a base URI so that they are absolute.</span></span> <span data-ttu-id="a6875-106"><xref:System.Uri.MakeRelative%2A>提供方法以在必要时将绝对 uri 转换为相对 uri。</span><span class="sxs-lookup"><span data-stu-id="a6875-106">The <xref:System.Uri.MakeRelative%2A> method is provided to convert absolute URIs to relative URIs when necessary.</span></span>  
  
 <span data-ttu-id="a6875-107"><xref:System.Uri>如果字符串是格式正确的 uri （包括方案标识符），则构造函数不会转义 uri 字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-107">The <xref:System.Uri> constructors do not escape URI strings if the string is a well-formed URI including a scheme identifier.</span></span>  
  
 <span data-ttu-id="a6875-108"><xref:System.Uri>属性以转义编码返回规范化数据表示形式，其 Unicode 值大于127的所有字符都将替换为其十六进制等效项。</span><span class="sxs-lookup"><span data-stu-id="a6875-108">The <xref:System.Uri> properties return a canonical data representation in escaped encoding, with all characters with Unicode values greater than 127 replaced with their hexadecimal equivalents.</span></span> <span data-ttu-id="a6875-109">为了以规范形式放置 URI， <xref:System.Uri> 构造函数执行以下步骤：</span><span class="sxs-lookup"><span data-stu-id="a6875-109">To put the URI in canonical form, the <xref:System.Uri> constructor performs the following steps:</span></span>  
  
-   <span data-ttu-id="a6875-110">将 URI 方案转换为小写。</span><span class="sxs-lookup"><span data-stu-id="a6875-110">Converts the URI scheme to lowercase.</span></span>  
  
-   <span data-ttu-id="a6875-111">将主机名转换为小写。</span><span class="sxs-lookup"><span data-stu-id="a6875-111">Converts the host name to lowercase.</span></span>  
  
-   <span data-ttu-id="a6875-112">如果主机名是 IPv6 地址，则使用规范的 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="a6875-112">If the host name is an IPv6 address, the canonical IPv6 address is used.</span></span> <span data-ttu-id="a6875-113">ScopeId 和其他可选 IPv6 数据已删除。</span><span class="sxs-lookup"><span data-stu-id="a6875-113">ScopeId and other optional IPv6 data are removed.</span></span>  
  
-   <span data-ttu-id="a6875-114">删除默认端口号和空端口号。</span><span class="sxs-lookup"><span data-stu-id="a6875-114">Removes default and empty port numbers.</span></span>
  
-   <span data-ttu-id="a6875-115">转换不包含 file://方案的隐式文件路径 (例如，将 "C:\my\file" ) 为带有 file://方案的显式文件路径。</span><span class="sxs-lookup"><span data-stu-id="a6875-115">Converts implicit file paths without the file:// scheme (for example, "C:\my\file") to explicit file paths with the file:// scheme.</span></span>
  
-   <span data-ttu-id="a6875-116">转义字符 (也称为百分号编码的八进制数) ，这些字节不具有保留用途 (也称为非转义) 。</span><span class="sxs-lookup"><span data-stu-id="a6875-116">Escaped characters (also known as percent-encoded octets) that don't have a reserved purpose are decoded (also known as being unescaped).</span></span> <span data-ttu-id="a6875-117">这些非保留字符包括大写和小写字母 (% 41-% 5A 和 %61-% 7A) ，十进制数字 (% 30-%39) ，连字符 (% 2D) ，期间 (% 2E) ，下划线 (% 5F) ，和波形符 (% 7E) 。</span><span class="sxs-lookup"><span data-stu-id="a6875-117">These unreserved characters include uppercase and lowercase letters (%41-%5A and %61-%7A), decimal digits (%30-%39), hyphen (%2D), period (%2E), underscore (%5F), and tilde (%7E).</span></span>

-   <span data-ttu-id="a6875-118">通过压缩序列（如/./、/），Canonicalizes 层次结构 Uri 的路径。/、和// (是否) 转义序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-118">Canonicalizes the path for hierarchical URIs by compacting sequences such as /./, /../, and // (whether or not the sequence is escaped).</span></span> <span data-ttu-id="a6875-119">请注意，在某些方案中，这些序列不会压缩。</span><span class="sxs-lookup"><span data-stu-id="a6875-119">Note that there are some schemes for which these sequences are not compacted.</span></span>
  
-   <span data-ttu-id="a6875-120">对于分层 Uri，如果主机未以正斜杠 (/) 终止，则会添加一个。</span><span class="sxs-lookup"><span data-stu-id="a6875-120">For hierarchical URIs, if the host is not terminated with a forward slash (/), one is added.</span></span>  
  
-   <span data-ttu-id="a6875-121">默认情况下，URI 中的任何保留字符都根据 RFC 2396 进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-121">By default, any reserved characters in the URI are escaped in accordance with RFC 2396.</span></span> <span data-ttu-id="a6875-122">如果启用了国际资源标识符或国际域名解析，则会更改该行为，在这种情况下，URI 中的保留字符将根据 RFC 3986 和 RFC 3987 进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-122">This behavior changes if International Resource Identifiers or International Domain Name parsing is enabled in which case reserved characters in the URI are escaped in accordance with RFC 3986 and RFC 3987.</span></span>

 <span data-ttu-id="a6875-123">作为某些方案的构造函数中的规范化的一部分，用点段和空段 (`/./` 、 `/../` 和 `//`) 进行压缩 (换言之，它们将被删除) 。</span><span class="sxs-lookup"><span data-stu-id="a6875-123">As part of canonicalization in the constructor for some schemes, dot-segments and empty segments (`/./`, `/../`, and `//`) are compacted (in other words, they are removed).</span></span> <span data-ttu-id="a6875-124"><xref:System.Uri>压缩段包含 http、https、tcp、net.pipe 和 net.tcp 的方案。</span><span class="sxs-lookup"><span data-stu-id="a6875-124">The schemes for which <xref:System.Uri> compacts segments include http, https, tcp, net.pipe, and net.tcp.</span></span> <span data-ttu-id="a6875-125">对于某些其他方案，这些序列不会进行压缩。</span><span class="sxs-lookup"><span data-stu-id="a6875-125">For some other schemes, these sequences are not compacted.</span></span> <span data-ttu-id="a6875-126">下面的代码段演示如何进行压缩。</span><span class="sxs-lookup"><span data-stu-id="a6875-126">The following code snippet shows how compacting looks in practice.</span></span> <span data-ttu-id="a6875-127">如有必要，转义序列会进行非转义，然后压缩。</span><span class="sxs-lookup"><span data-stu-id="a6875-127">The escaped sequences are unescaped, if necessary, and then compacted.</span></span>
  
```csharp
var uri = new Uri("http://myUrl/../.."); // http scheme, unescaped
OR
var uri = new Uri("http://myUrl/%2E%2E/%2E%2E"); // http scheme, escaped
OR
var uri = new Uri("ftp://myUrl/../.."); // ftp scheme, unescaped
OR
var uri = new Uri("ftp://myUrl/%2E%2E/%2E%2E"); // ftp scheme, escaped

Console.WriteLine($"AbsoluteUri: {uri.AbsoluteUri}");
Console.WriteLine($"PathAndQuery: {uri.PathAndQuery}");
```  

<span data-ttu-id="a6875-128">执行此代码时，它将返回类似于以下文本的输出。</span><span class="sxs-lookup"><span data-stu-id="a6875-128">When this code executes, it returns output similar to the following text.</span></span>

```  
AbsoluteUri: http://myurl/
PathAndQuery: /
```  
  
 <span data-ttu-id="a6875-129">可以 <xref:System.Uri> 通过使用方法，将类的内容从转义编码的 uri 引用转换为可读的 uri 引用 <xref:System.Uri.ToString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-129">You can transform the contents of the <xref:System.Uri> class from an escape encoded URI reference to a readable URI reference by using the <xref:System.Uri.ToString%2A> method.</span></span> <span data-ttu-id="a6875-130">请注意，某些保留字符可能仍会在方法的输出中进行转义 <xref:System.Uri.ToString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-130">Note that some reserved characters might still be escaped in the output of the <xref:System.Uri.ToString%2A> method.</span></span> <span data-ttu-id="a6875-131">这是为了支持从返回的值明确地重构 URI <xref:System.Uri.ToString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-131">This is to support unambiguous reconstruction of a URI from the value returned by <xref:System.Uri.ToString%2A>.</span></span>  
  
 <span data-ttu-id="a6875-132">某些 Uri 包含片段标识符或查询，或同时包含两者。</span><span class="sxs-lookup"><span data-stu-id="a6875-132">Some URIs include a fragment identifier or a query or both.</span></span> <span data-ttu-id="a6875-133">片段标识符是跟在数字符号后 ( # ) 的任何文本，不包括数字符号;片段文本存储在 <xref:System.Uri.Fragment%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="a6875-133">A fragment identifier is any text that follows a number sign (#), not including the number sign; the fragment text is stored in the <xref:System.Uri.Fragment%2A> property.</span></span> <span data-ttu-id="a6875-134">查询信息是在 URI 中跟在问号 (？ ) 后面的任何文本。查询文本存储在 <xref:System.Uri.Query%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="a6875-134">Query information is any text that follows a question mark (?) in the URI; the query text is stored in the <xref:System.Uri.Query%2A> property.</span></span>  
  
 <span data-ttu-id="a6875-135">在 .NET Framework 版本1.1 中，如果指定给构造函数的字符串包含未知方案和 "c： \\ "，则 Uri 类将在冒号后插入 "//"。</span><span class="sxs-lookup"><span data-stu-id="a6875-135">In .NET Framework version 1.1, if the string specified to a constructor contains an unknown scheme and "c:\\", the Uri class inserts "//" after the colon.</span></span> <span data-ttu-id="a6875-136">例如，URI `xyz:c:\abc` 转换为 `xyz://c:/abc` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-136">For example, the URI `xyz:c:\abc` is converted to `xyz://c:/abc`.</span></span> <span data-ttu-id="a6875-137">在 .NET Framework 版本2.0 中，此行为已被移除，示例字符串已转换为 `xyz:c:/abc` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-137">In the .NET Framework version 2.0, this behavior has been removed, and the example string is converted to `xyz:c:/abc`.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="a6875-138">URI 类支持在 IPv4 协议的四位表示法中使用 IP 地址，对 IPv6 协议支持使用冒号十六进制。</span><span class="sxs-lookup"><span data-stu-id="a6875-138">The URI class supports the use of IP addresses in both quad-notation for IPv4 protocol and colon-hexadecimal for IPv6 protocol.</span></span> <span data-ttu-id="a6875-139">请记住用方括号将 IPv6 地址括起来，如 http：//[：： 1]。</span><span class="sxs-lookup"><span data-stu-id="a6875-139">Remember to enclose the IPv6 address in square brackets, as in http://[::1].</span></span>  
  
## <a name="international-resource-identifier-support"></a><span data-ttu-id="a6875-140">国际资源标识符支持</span><span class="sxs-lookup"><span data-stu-id="a6875-140">International Resource Identifier Support</span></span>  
 <span data-ttu-id="a6875-141">Web 地址通常使用由一组非常有限的字符组成的统一资源标识符来表示：</span><span class="sxs-lookup"><span data-stu-id="a6875-141">Web addresses are typically expressed using uniform resource identifiers that consist of a very restricted set of characters:</span></span>  
  
-   <span data-ttu-id="a6875-142">英文字母表中的大小写 ASCII 字母。</span><span class="sxs-lookup"><span data-stu-id="a6875-142">Upper and lower case ASCII letters from the English alphabet.</span></span>  
  
-   <span data-ttu-id="a6875-143">从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="a6875-143">Digits from 0 to 9.</span></span>  
  
-   <span data-ttu-id="a6875-144">少量的其他 ASCII 符号。</span><span class="sxs-lookup"><span data-stu-id="a6875-144">A small number of other ASCII symbols.</span></span>  
  
 <span data-ttu-id="a6875-145">RFC 2396、RFC 2732、RFC 3986 以及 Internet 工程任务组 (IETF) 发布的 rfc 3987 中记录了 Uri 规范。</span><span class="sxs-lookup"><span data-stu-id="a6875-145">The specifications for URIs are documented in RFC 2396, RFC 2732, RFC 3986, and RFC 3987 published by the Internet Engineering Task Force (IETF).</span></span>  
  
 <span data-ttu-id="a6875-146">随着 Internet 的发展，越来越需要使用英语以外的语言识别资源。</span><span class="sxs-lookup"><span data-stu-id="a6875-146">With the growth of the Internet, there is a growing need to identify resources using languages other than English.</span></span> <span data-ttu-id="a6875-147">标识符满足了这种需求，并且使得非 ASCII 字符（Unicode 中的字符/ISO 10646 字符集）被称为国际资源标识符（IRI）。</span><span class="sxs-lookup"><span data-stu-id="a6875-147">Identifiers which facilitate this need and allow non-ASCII characters (characters in the Unicode/ISO 10646 character set) are known as International Resource Identifiers (IRIs).</span></span> <span data-ttu-id="a6875-148">IETF 发布的 RFC 3987 记录了 IRI 的规格。</span><span class="sxs-lookup"><span data-stu-id="a6875-148">The specifications for IRIs are documented in RFC 3987 published by IETF.</span></span> <span data-ttu-id="a6875-149">使用 IRI 允许 URL 包含 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-149">Using IRIs allows a URL to contain Unicode characters.</span></span>  
  
 <span data-ttu-id="a6875-150">已 <xref:System.Uri> 在 .NET Framework v 3.5、3.0 SP1 和 2.0 SP1 中扩展了现有类，以便基于 RFC 3987 提供 IRI 支持。</span><span class="sxs-lookup"><span data-stu-id="a6875-150">The existing <xref:System.Uri> class has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide IRI support based on RFC 3987.</span></span> <span data-ttu-id="a6875-151">除非专门启用 IRI，否则版本4.5 之前的 .NET Framework 版本的用户将看不到 .NET Framework 2.0 行为中的任何更改。</span><span class="sxs-lookup"><span data-stu-id="a6875-151">Users of .NET Framework versions before version 4.5 will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.</span></span> <span data-ttu-id="a6875-152">这确保了 NET Framework 以前版本的应用程序兼容性。</span><span class="sxs-lookup"><span data-stu-id="a6875-152">This ensures application compatibility with prior versions of the .NET Framework.</span></span>  
  
 <span data-ttu-id="a6875-153">若要启用对 IRI 的支持，需要进行以下更改：</span><span class="sxs-lookup"><span data-stu-id="a6875-153">To enable support for IRI, the following change is required:</span></span>  
  
-   <span data-ttu-id="a6875-154">指定是否要将国际化域名 (IDN) 应用于域名的分析以及是否应该应用 IRI 分析规则。</span><span class="sxs-lookup"><span data-stu-id="a6875-154">Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied.</span></span> <span data-ttu-id="a6875-155">这可以在 *machine.config* 或 *app.config* 文件中完成。</span><span class="sxs-lookup"><span data-stu-id="a6875-155">This can be done in the *machine.config* or in the *app.config* file.</span></span> <span data-ttu-id="a6875-156">例如，添加以下内容：</span><span class="sxs-lookup"><span data-stu-id="a6875-156">For example, add the following:</span></span>

    ```xml  
    <configuration>  
      <uri>  
      <idn enabled="All" />  
      <iriParsing enabled="true" />  
      </uri>  
    </configuration>  
    ```  
  
 <span data-ttu-id="a6875-157">.NET Framework 4.5 和更高版本的用户始终启用了 IRI。</span><span class="sxs-lookup"><span data-stu-id="a6875-157">Users of .NET Framework 4.5 and newer always have IRI enabled.</span></span> <span data-ttu-id="a6875-158">不能使用 *.config* 文件更改 IRI 分析。</span><span class="sxs-lookup"><span data-stu-id="a6875-158">IRI parsing cannot be changed using a *.config* file.</span></span>  
  
 <span data-ttu-id="a6875-159">启用 IDN 可以将域名中所有 Unicode 标签转换成标签的 Punycode 等同项。</span><span class="sxs-lookup"><span data-stu-id="a6875-159">Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents.</span></span> <span data-ttu-id="a6875-160">Punycode 名称只包含 ASCII 字符，并且始终以 xn-- 前缀开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-160">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span> <span data-ttu-id="a6875-161">这样是为了支持 Internet 上的 DNS 服务器，因为大部分 DNS 服务器仅支持 ASCII 字符（参见 RFC 3940）。</span><span class="sxs-lookup"><span data-stu-id="a6875-161">The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).</span></span>  
  
 <span data-ttu-id="a6875-162">启用 IRI 和 IDN 会影响 <xref:System.Uri.DnsSafeHost%2A?displayProperty=nameWithType> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="a6875-162">Enabling IRI and IDN affects the value of the <xref:System.Uri.DnsSafeHost%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a6875-163">启用 IRI 和 IDN 还可能更改 <xref:System.Uri.Equals%2A>、<xref:System.Uri.OriginalString%2A>、<xref:System.Uri.GetComponents%2A> 和 <xref:System.Uri.IsWellFormedOriginalString%2A> 方法的行为。</span><span class="sxs-lookup"><span data-stu-id="a6875-163">Enabling IRI and IDN can also change the behavior of the <xref:System.Uri.Equals%2A>, <xref:System.Uri.OriginalString%2A>, <xref:System.Uri.GetComponents%2A>, and <xref:System.Uri.IsWellFormedOriginalString%2A> methods.</span></span>  
  
<span data-ttu-id="a6875-164">根据所使用的 DNS 服务器，IDN 有三个可能的值：</span><span class="sxs-lookup"><span data-stu-id="a6875-164">There are three possible values for IDN depending on the DNS servers that are used:</span></span>  
  
- <span data-ttu-id="a6875-165">已启用 idn = 全部</span><span class="sxs-lookup"><span data-stu-id="a6875-165">idn enabled = All</span></span>

  <span data-ttu-id="a6875-166">此值会将所有 Unicode 域名转换为它们的 Punycode 等效项（IDN 名称）。</span><span class="sxs-lookup"><span data-stu-id="a6875-166">This value will convert any Unicode domain names to their Punycode equivalents (IDN names).</span></span>  
  
- <span data-ttu-id="a6875-167">启用 idn = AllExceptIntranet</span><span class="sxs-lookup"><span data-stu-id="a6875-167">idn enabled = AllExceptIntranet</span></span>

  <span data-ttu-id="a6875-168">此值将转换本地 Intranet 以外的所有 Unicode 域名，以使用)  (IDN 名称的 Punycode 等效项。</span><span class="sxs-lookup"><span data-stu-id="a6875-168">This value will convert all Unicode domain names not on the local Intranet to use the Punycode equivalents (IDN names).</span></span> <span data-ttu-id="a6875-169">在这种情况下，为了处理本地 Intranet 上的国际名称，用于 Intranet 的 DNS 服务器应该支持 Unicode 名称解析。</span><span class="sxs-lookup"><span data-stu-id="a6875-169">In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode name resolution.</span></span>  
  
- <span data-ttu-id="a6875-170">启用 idn = 无</span><span class="sxs-lookup"><span data-stu-id="a6875-170">idn enabled = None</span></span>

  <span data-ttu-id="a6875-171">此值不会将任何 Unicode 域名转换为使用 Punycode。</span><span class="sxs-lookup"><span data-stu-id="a6875-171">This value will not convert any Unicode domain names to use Punycode.</span></span> <span data-ttu-id="a6875-172">这是与 .NET Framework 2.0 行为一致的默认值。</span><span class="sxs-lookup"><span data-stu-id="a6875-172">This is the default value which is consistent with the .NET Framework 2.0 behaviour.</span></span>  
  
 <span data-ttu-id="a6875-173">启用 IRI 分析后 (启用 Iriparsing> = `true` 根据 rfc 3986 和 rfc 3987 中的最新 IRI 规则执行) 规范化和字符检查。</span><span class="sxs-lookup"><span data-stu-id="a6875-173">When IRI parsing is enabled (iriParsing enabled = `true`) normalization and character checking are done according to the latest IRI rules in RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="a6875-174">禁用 IRI 分析后，将根据 RFC 2396 和 RFC 2732 (为 IPv6 文本) 执行规范化和字符检查。</span><span class="sxs-lookup"><span data-stu-id="a6875-174">When IRI parsing is disabled, normalization and character checking are performed according to RFC 2396 and RFC 2732 (for IPv6 literals).</span></span>  <span data-ttu-id="a6875-175">在版本4.5 之前的 .NET Framework 版本中，默认值为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-175">In versions of the .NET Framework before version 4.5, the default value is `false`.</span></span> <span data-ttu-id="a6875-176">在 .NET Framework 版本4.5 及更高版本中，默认值为 `true` ，并且在 *.config* 文件中，不能修改启用了 IRI 分析功能的状态。</span><span class="sxs-lookup"><span data-stu-id="a6875-176">In .NET Framework version 4.5 and newer, the default value is `true`, and the enabled state of IRI parsing cannot be modified by settings in a *.config* file.</span></span>  
  
 <span data-ttu-id="a6875-177"><xref:System.Uri>还可以使用 <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> 、 <xref:System.Configuration.IdnElement?displayProperty=nameWithType> 和 <xref:System.Configuration.UriSection?displayProperty=nameWithType> 配置设置类控制类中的 IRI 和 IDN 处理。</span><span class="sxs-lookup"><span data-stu-id="a6875-177">IRI and IDN processing in the <xref:System.Uri> class can also be controlled using the <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType>, <xref:System.Configuration.IdnElement?displayProperty=nameWithType>, and <xref:System.Configuration.UriSection?displayProperty=nameWithType> configuration setting classes.</span></span> <span data-ttu-id="a6875-178"><xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> 设置启用或禁用 <xref:System.Uri> 类中的 IRI 处理。</span><span class="sxs-lookup"><span data-stu-id="a6875-178">The <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> setting enables or disables IRI processing in the <xref:System.Uri> class.</span></span> <span data-ttu-id="a6875-179"><xref:System.Configuration.IdnElement?displayProperty=nameWithType> 设置启用或禁用 <xref:System.Uri> 类中的 IDN 处理。</span><span class="sxs-lookup"><span data-stu-id="a6875-179">The <xref:System.Configuration.IdnElement?displayProperty=nameWithType> setting enables or disables IDN processing in the <xref:System.Uri> class.</span></span> <span data-ttu-id="a6875-180"><xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> 也可间接控制 IDN。</span><span class="sxs-lookup"><span data-stu-id="a6875-180">The <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> setting also indirectly controls IDN.</span></span> <span data-ttu-id="a6875-181">必须启用 IRI 处理才能进行 IDN 处理。</span><span class="sxs-lookup"><span data-stu-id="a6875-181">IRI processing must be enabled for IDN processing to be possible.</span></span> <span data-ttu-id="a6875-182">如果禁用 IRI，IDN 处理将被设置为默认值，这时 NET Framework 2.0 行为用于兼容性，并且 IDN 名称不可用。</span><span class="sxs-lookup"><span data-stu-id="a6875-182">If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.</span></span>  
  
 <span data-ttu-id="a6875-183"><xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> <xref:System.Configuration.IdnElement?displayProperty=nameWithType> 当构造第一个类时，和的配置设置将被读取一次 <xref:System.Uri?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-183">The configuration setting for the <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> and <xref:System.Configuration.IdnElement?displayProperty=nameWithType> will be read once when the first <xref:System.Uri?displayProperty=nameWithType> class is constructed.</span></span> <span data-ttu-id="a6875-184">忽略时间后更改为默认设置。</span><span class="sxs-lookup"><span data-stu-id="a6875-184">Changes to configuration settings after that time are ignored.</span></span>  
  
 <span data-ttu-id="a6875-185"><xref:System.GenericUriParser?displayProperty=nameWithType> 类已得到扩展，允许创建支持 IRI 和 IDN 的自定义分析。</span><span class="sxs-lookup"><span data-stu-id="a6875-185">The <xref:System.GenericUriParser?displayProperty=nameWithType> class has also been extended to allow creating a customizable parser that supports IRI and IDN.</span></span> <span data-ttu-id="a6875-186">通过将枚举中可用值的按位组合传递给 <xref:System.GenericUriParserOptions?displayProperty=nameWithType> 构造函数 <xref:System.GenericUriParser?displayProperty=nameWithType> 来指定 <xref:System.GenericUriParser?displayProperty=nameWithType> 对象的行为。</span><span class="sxs-lookup"><span data-stu-id="a6875-186">The behavior of a <xref:System.GenericUriParser?displayProperty=nameWithType> object is specified by passing a bitwise combination of the values available in the <xref:System.GenericUriParserOptions?displayProperty=nameWithType> enumeration to the <xref:System.GenericUriParser?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="a6875-187"><xref:System.GenericUriParserOptions.IriParsing?displayProperty=nameWithType> 类型表示分析程序支持 RFC 3987 中为国际资源标识符 (IRI) 指定的分析规则。</span><span class="sxs-lookup"><span data-stu-id="a6875-187">The <xref:System.GenericUriParserOptions.IriParsing?displayProperty=nameWithType> type indicates the parser supports the parsing rules specified in RFC 3987 for International Resource Identifiers (IRI).</span></span> <span data-ttu-id="a6875-188">是否使用 IRI 由前面讨论过的配置值决定。</span><span class="sxs-lookup"><span data-stu-id="a6875-188">Whether IRI is used is dictated by the configuration values previously discussed.</span></span>  
  
 <span data-ttu-id="a6875-189"><xref:System.GenericUriParserOptions.Idn?displayProperty=nameWithType> 类型表示分析程序支持主机名的国际化域名 (IDN) 分析。</span><span class="sxs-lookup"><span data-stu-id="a6875-189">The <xref:System.GenericUriParserOptions.Idn?displayProperty=nameWithType> type indicates the parser supports Internationalized Domain Name (IDN) parsing (IDN) of host names.</span></span> <span data-ttu-id="a6875-190">是否使用 IDN 由前面讨论过的配置值决定。</span><span class="sxs-lookup"><span data-stu-id="a6875-190">Whether IDN is used is dictated by the configuration values previously discussed.</span></span>  
  
## <a name="implicit-file-path-support"></a><span data-ttu-id="a6875-191">隐式文件路径支持</span><span class="sxs-lookup"><span data-stu-id="a6875-191">Implicit File Path Support</span></span>

 <span data-ttu-id="a6875-192"><xref:System.Uri> 还可用于表示本地文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="a6875-192"><xref:System.Uri> can also be used to represent local file system paths.</span></span> <span data-ttu-id="a6875-193">这些路径可以在以 file://方案开头的 Uri 中 *显式* 表示，而在没有 file://方案的 uri 中 *隐式* 表示。</span><span class="sxs-lookup"><span data-stu-id="a6875-193">These paths can be represented *explicitly* in URIs that begin with the file:// scheme, and *implicitly* in URIs that do not have the file:// scheme.</span></span> <span data-ttu-id="a6875-194">作为具体示例，下面两个 Uri 都是有效的，并且表示相同的文件路径：</span><span class="sxs-lookup"><span data-stu-id="a6875-194">As a concrete example, the following two URIs are both valid, and represent the same file path:</span></span>
 
```csharp
Uri uri1 = new Uri("C:/test/path/file.txt") // Implicit file path.
Uri uri2 = new Uri("file:///C:/test/path/file.txt") // Explicit file path.
```
 <span data-ttu-id="a6875-195">这些隐式文件路径不符合 URI 规范，应尽可能避免这样的情况。</span><span class="sxs-lookup"><span data-stu-id="a6875-195">These implicit file paths are not compliant with the URI specification and so should be avoided when possible.</span></span> <span data-ttu-id="a6875-196">在基于 Unix 的系统上使用 .NET Core 时，隐式文件路径可能会特别出现问题，因为绝对的隐式文件路径与相对路径没有 *区别* 。</span><span class="sxs-lookup"><span data-stu-id="a6875-196">When using .NET Core on Unix-based systems, implicit file paths can be especially problematic, because an absolute implicit file path is *indistinguishable* from a relative path.</span></span> <span data-ttu-id="a6875-197">如果存在这种含糊性，则 <xref:System.Uri> 默认为将路径解释为绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-197">When such ambiguity is present, <xref:System.Uri> default to interpreting the path as an absolute URI.</span></span>

## <a name="security-considerations"></a><span data-ttu-id="a6875-198">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="a6875-198">Security Considerations</span></span>

<span data-ttu-id="a6875-199">出于安全方面的考虑，应用程序在接受 <xref:System.Uri> 来自不受信任源的实例，并 `dontEscape` `true` 在 [构造函数](xref:System.Uri.%23ctor(System.String,System.Boolean))中将设置为时，应小心。</span><span class="sxs-lookup"><span data-stu-id="a6875-199">Because of security concerns, your application should use caution when accepting <xref:System.Uri> instances from untrusted sources and with `dontEscape` set to `true` in the [constructor](xref:System.Uri.%23ctor(System.String,System.Boolean)).</span></span> <span data-ttu-id="a6875-200">可以通过调用方法来检查 URI 字符串的有效性 <xref:System.Uri.IsWellFormedOriginalString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-200">You can check a URI string for validity by calling the <xref:System.Uri.IsWellFormedOriginalString%2A> method.</span></span>

<span data-ttu-id="a6875-201">处理不受信任的用户输入时，请先确认有关新创建的实例的假设， `Uri` 然后再对其属性进行信任。</span><span class="sxs-lookup"><span data-stu-id="a6875-201">When dealing with untrusted user input, confirm assumptions about the newly created `Uri` instance before trusting its properties.</span></span>
<span data-ttu-id="a6875-202">可以通过以下方式完成此操作：</span><span class="sxs-lookup"><span data-stu-id="a6875-202">This can be done in the following way:</span></span>

```csharp
string userInput = ...;

Uri baseUri = new Uri("https://myWebsite/files/");

if (!Uri.TryCreate(baseUri, userInput, out Uri newUri))
{
    // Fail: invalid input.
}

if (!baseUri.IsBaseOf(newUri))
{
    // Fail: the Uri base has been modified - the created Uri is not rooted in the original directory.
}
```

<span data-ttu-id="a6875-203">此验证可在其他情况下使用，例如处理 UNC 路径时，只需更改 `baseUri` ：</span><span class="sxs-lookup"><span data-stu-id="a6875-203">This validation can be used in other cases, like when dealing with UNC paths, by simply changing the `baseUri`:</span></span>

```csharp
Uri baseUri = new Uri(@"\\host\share\some\directory\name\");
```

## <a name="performance-considerations"></a><span data-ttu-id="a6875-204">性能注意事项</span><span class="sxs-lookup"><span data-stu-id="a6875-204">Performance Considerations</span></span>  
 <span data-ttu-id="a6875-205">如果使用包含 Uri 的 \* Web.config \* 文件来初始化应用程序，则需要额外的时间来处理 Uri （如果它们的方案标识符是非标准的）。</span><span class="sxs-lookup"><span data-stu-id="a6875-205">If you use a \*Web.config \*file that contains URIs to initialize your application, additional time is required to process the URIs if their scheme identifiers are nonstandard.</span></span> <span data-ttu-id="a6875-206">在这种情况下，在需要 Uri 时（而不是在启动时）初始化应用程序受影响的部分。</span><span class="sxs-lookup"><span data-stu-id="a6875-206">In such a case, initialize the affected parts of your application when the URIs are needed, not at start time.</span></span>
  
## Examples

<span data-ttu-id="a6875-207">下面的示例创建类的一个实例 <xref:System.Uri> ，并使用它来创建 <xref:System.Net.WebRequest> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-207">The following example creates an instance of the <xref:System.Uri> class and uses it to create a <xref:System.Net.WebRequest> instance.</span></span>  
  
 [!code-cpp[Classic Uri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri Example/CS/source.cs#1)]
 [!code-vb[Classic Uri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri Example/VB/source.vb#1)]

<span data-ttu-id="a6875-208">下面的代码片段显示了类中各种属性的示例值。</span><span class="sxs-lookup"><span data-stu-id="a6875-208">The following code snippet shows example values of the various properties on the class.</span></span>

[!code-csharp[Classic Uri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri Example/CS/source.cs#2)]

 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="a6875-209">的所有成员 <see cref="T:System.Uri" /> 都是线程安全的，可从多个线程同时使用。</span><span class="sxs-lookup"><span data-stu-id="a6875-209">All members of <see cref="T:System.Uri" /> are thread-safe and may be used concurrently from multiple threads.</span></span></threadsafe>
    <altmember cref="T:System.Configuration.IdnElement" />
    <altmember cref="T:System.Configuration.IriParsingElement" />
    <altmember cref="T:System.Configuration.UriSection" />
    <altmember cref="P:System.Uri.DnsSafeHost" />
    <altmember cref="M:System.Uri.MakeRelative(System.Uri)" />
    <altmember cref="M:System.Uri.IsWellFormedOriginalString" />
    <altmember cref="T:System.UriBuilder" />
    <related type="Article" href="/dotnet/framework/network-programming/changes-to-the-system-uri-namespace-in-version-2-0"><span data-ttu-id="a6875-210">对 2.0 版中的 System.Uri 命名空间的更改</span><span class="sxs-lookup"><span data-stu-id="a6875-210">Changes to the System.Uri namespace in Version 2.0</span></span></related>
    <related type="Article" href="/dotnet/framework/network-programming/international-resource-identifier-support-in-system-uri"><span data-ttu-id="a6875-211">UriSystem 中的国际资源标识符支持</span><span class="sxs-lookup"><span data-stu-id="a6875-211">International Resource Identifier Support in System.UriSystem.Uri</span></span></related>
    <related type="Article" href="/dotnet/framework/network-programming/"><span data-ttu-id="a6875-212">.NET Framework 中的网络编程</span><span class="sxs-lookup"><span data-stu-id="a6875-212">Network Programming in the .NET Framework</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6875-213">初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-213">Initializes a new instance of the <see cref="T:System.Uri" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="new Uri : string -&gt; Uri" Usage="new System.Uri uriString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="a6875-214">标识将由 <see cref="T:System.Uri" /> 实例表示的资源的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-214">A string that identifies the resource to be represented by the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="a6875-215">请注意，必须用括号将字符串形式的 IPv6 地址括起来。</span><span class="sxs-lookup"><span data-stu-id="a6875-215">Note that an IPv6 address in string form must be enclosed within brackets.</span></span> <span data-ttu-id="a6875-216">例如，“http://[2607:f8b0:400d:c06::69]”。</span><span class="sxs-lookup"><span data-stu-id="a6875-216">For example, "http://[2607:f8b0:400d:c06::69]".</span></span></param>
        <summary><span data-ttu-id="a6875-217">用指定的 URI 初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-217">Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance from a URI string. <span data-ttu-id="a6875-219">它分析 URI，使其采用规范格式，并进行任何所需的转义编码。</span><span class="sxs-lookup"><span data-stu-id="a6875-219">It parses the URI, puts it in canonical format, and makes any required escape encodings.</span></span>  
  
 <span data-ttu-id="a6875-220">此构造函数不确保 <xref:System.Uri> 引用辅助资源。</span><span class="sxs-lookup"><span data-stu-id="a6875-220">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>  
  
 <span data-ttu-id="a6875-221">此构造函数假设 `string` 参数引用了一个绝对 URI，并且等效于在设置为的情况下调用 <xref:System.Uri.%23ctor%2A> 构造函数 <xref:System.UriKind> <xref:System.UriKind.Absolute> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-221">This constructor assumes that the `string` parameter references an absolute URI and is equivalent to calling the <xref:System.Uri.%23ctor%2A> constructor with <xref:System.UriKind> set to <xref:System.UriKind.Absolute>.</span></span> <span data-ttu-id="a6875-222">如果 `string` 传递给构造函数的参数是相对 URI，则此构造函数将引发 <xref:System.UriFormatException> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-222">If the `string` parameter passed to the constructor is a relative URI, this constructor will throw a <xref:System.UriFormatException>.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-223">下面的示例创建一个 <xref:System.Uri> 具有 URI 的实例 `http://www.contoso.com/` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-223">The following example creates a <xref:System.Uri> instance with the URI `http://www.contoso.com/`.</span></span>  
  
 [!code-cpp[Classic Uri.Uri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Uri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Uri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-224"><paramref name="uriString" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-224"><paramref name="uriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-225">注意：在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-225">Note: In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>

<span data-ttu-id="a6875-226"><paramref name="uriString" /> 为空。</span><span class="sxs-lookup"><span data-stu-id="a6875-226"><paramref name="uriString" /> is empty.</span></span>  
  
<span data-ttu-id="a6875-227">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-227">-or-</span></span> 
<span data-ttu-id="a6875-228"><paramref name="uriString" /> 中指定的方案格式不正确。</span><span class="sxs-lookup"><span data-stu-id="a6875-228">The scheme specified in <paramref name="uriString" /> is not correctly formed.</span></span> <span data-ttu-id="a6875-229">请参阅 <see cref="M:System.Uri.CheckSchemeName(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-229">See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.</span></span>  
  
<span data-ttu-id="a6875-230">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-230">-or-</span></span> 
 <span data-ttu-id="a6875-231"><paramref name="uriString" /> 包含过多斜杠。</span><span class="sxs-lookup"><span data-stu-id="a6875-231"><paramref name="uriString" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="a6875-232">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-232">-or-</span></span> 
<span data-ttu-id="a6875-233"><paramref name="uriString" /> 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-233">The password specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-234">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-234">-or-</span></span> 
<span data-ttu-id="a6875-235"><paramref name="uriString" /> 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-235">The host name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-236">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-236">-or-</span></span> 
<span data-ttu-id="a6875-237"><paramref name="uriString" /> 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-237">The file name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-238">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-238">-or-</span></span> 
<span data-ttu-id="a6875-239"><paramref name="uriString" /> 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-239">The user name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-240">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-240">-or-</span></span> 
<span data-ttu-id="a6875-241"><paramref name="uriString" /> 中指定的主机名或证书颁发机构名称不能以反斜杠结尾。</span><span class="sxs-lookup"><span data-stu-id="a6875-241">The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="a6875-242">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-242">-or-</span></span> 
<span data-ttu-id="a6875-243"><paramref name="uriString" /> 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="a6875-243">The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="a6875-244">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-244">-or-</span></span> 
<span data-ttu-id="a6875-245"><paramref name="uriString" /> 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-245">The length of <paramref name="uriString" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="a6875-246">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-246">-or-</span></span> 
<span data-ttu-id="a6875-247"><paramref name="uriString" /> 中指定的方案的长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-247">The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="a6875-248">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-248">-or-</span></span> 
<span data-ttu-id="a6875-249"><paramref name="uriString" /> 中存在无效的字符序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-249">There is an invalid character sequence in <paramref name="uriString" />.</span></span>  
  
<span data-ttu-id="a6875-250">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-250">-or-</span></span> 
<span data-ttu-id="a6875-251"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-251">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Uri (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serializationInfo As SerializationInfo, streamingContext As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Uri(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new Uri : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; Uri" Usage="new System.Uri (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="a6875-252"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的实例，包含序列化新的 <see cref="T:System.Uri" /> 实例所需的信息。</span><span class="sxs-lookup"><span data-stu-id="a6875-252">An instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class containing the information required to serialize the new <see cref="T:System.Uri" /> instance.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="a6875-253"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的实例，包含与新的 <see cref="T:System.Uri" /> 实例关联的序列化流的源。</span><span class="sxs-lookup"><span data-stu-id="a6875-253">An instance of the <see cref="T:System.Runtime.Serialization.StreamingContext" /> class containing the source of the serialized stream associated with the new <see cref="T:System.Uri" /> instance.</span></span></param>
        <summary><span data-ttu-id="a6875-254">从 <see cref="T:System.Uri" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的指定实例初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-254">Initializes a new instance of the <see cref="T:System.Uri" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface for the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> class.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-256"><paramref name="serializationInfo" /> 参数包含 <see langword="null" /> URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-256">The <paramref name="serializationInfo" /> parameter contains a <see langword="null" /> URI.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-257"><paramref name="serializationInfo" /> 参数包含一个为空的 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-257">The <paramref name="serializationInfo" /> parameter contains a URI that is empty.</span></span>  
  
<span data-ttu-id="a6875-258">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-258">-or-</span></span> 
<span data-ttu-id="a6875-259">指定的方案形式不正确。</span><span class="sxs-lookup"><span data-stu-id="a6875-259">The scheme specified is not correctly formed.</span></span> <span data-ttu-id="a6875-260">请参阅 <see cref="M:System.Uri.CheckSchemeName(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-260">See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.</span></span>  
  
<span data-ttu-id="a6875-261">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-261">-or-</span></span> 
<span data-ttu-id="a6875-262">该 URI 包含过多斜杠。</span><span class="sxs-lookup"><span data-stu-id="a6875-262">The URI contains too many slashes.</span></span>  
  
<span data-ttu-id="a6875-263">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-263">-or-</span></span> 
<span data-ttu-id="a6875-264">URI 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-264">The password specified in the URI is not valid.</span></span>  
  
<span data-ttu-id="a6875-265">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-265">-or-</span></span> 
<span data-ttu-id="a6875-266">URI 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-266">The host name specified in URI is not valid.</span></span>  
  
<span data-ttu-id="a6875-267">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-267">-or-</span></span> 
<span data-ttu-id="a6875-268">URI 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-268">The file name specified in the URI is not valid.</span></span>  
  
<span data-ttu-id="a6875-269">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-269">-or-</span></span> 
<span data-ttu-id="a6875-270">URI 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-270">The user name specified in the URI is not valid.</span></span>  
  
<span data-ttu-id="a6875-271">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-271">-or-</span></span> 
<span data-ttu-id="a6875-272">URI 中指定的主机名或证书颁发机构名称不能以反斜杠结尾。</span><span class="sxs-lookup"><span data-stu-id="a6875-272">The host or authority name specified in the URI cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="a6875-273">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-273">-or-</span></span> 
<span data-ttu-id="a6875-274">URI 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="a6875-274">The port number specified in the URI is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="a6875-275">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-275">-or-</span></span> 
<span data-ttu-id="a6875-276">URI 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-276">The length of URI exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="a6875-277">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-277">-or-</span></span> 
<span data-ttu-id="a6875-278">URI 中指定的方案的长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-278">The length of the scheme specified in the URI exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="a6875-279">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-279">-or-</span></span> 
<span data-ttu-id="a6875-280">URI 中存在无效的字符序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-280">There is an invalid character sequence in the URI.</span></span>  
  
<span data-ttu-id="a6875-281">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-281">-or-</span></span> 
<span data-ttu-id="a6875-282">URI 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-282">The MS-DOS path specified in the URI must start with c:\\\\.</span></span></exception>
        <related type="Article" href="/dotnet/standard/serialization/xml-and-soap-serialization"><span data-ttu-id="a6875-283">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="a6875-283">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (string uriString, bool dontEscape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uriString, bool dontEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uriString As String, dontEscape As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(System::String ^ uriString, bool dontEscape);" />
      <MemberSignature Language="F#" Value="new Uri : string * bool -&gt; Uri" Usage="new System.Uri (uriString, dontEscape)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The constructor has been deprecated. Please use new Uri(string). The dontEscape parameter is deprecated and is always false. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The constructor has been deprecated. Please use new Uri(string). The dontEscape parameter is deprecated and is always false. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The constructor has been deprecated. Please use new Uri(string). The dontEscape parameter is deprecated and is always false. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The constructor has been deprecated. Please use new Uri(string). The dontEscape parameter is deprecated and is always false. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="dontEscape" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="a6875-284">标识将由 <see cref="T:System.Uri" /> 实例表示的资源的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-284">A string that identifies the resource to be represented by the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="a6875-285">请注意，必须用括号将字符串形式的 IPv6 地址括起来。</span><span class="sxs-lookup"><span data-stu-id="a6875-285">Note that an IPv6 address in string form must be enclosed within brackets.</span></span> <span data-ttu-id="a6875-286">例如，“http://[2607:f8b0:400d:c06::69]”。</span><span class="sxs-lookup"><span data-stu-id="a6875-286">For example, "http://[2607:f8b0:400d:c06::69]".</span></span></param>
        <param name="dontEscape"><span data-ttu-id="a6875-287">如果 <paramref name="uriString" /> 已完全转义，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-287"><see langword="true" /> if <paramref name="uriString" /> is completely escaped; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a6875-288">用指定的 URI 初始化 <see cref="T:System.Uri" /> 类的新实例，并对字符转义进行显式控制。</span><span class="sxs-lookup"><span data-stu-id="a6875-288">Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI, with explicit control of character escaping.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance from a URI string. <span data-ttu-id="a6875-290">它分析 URI 并将其采用规范格式。</span><span class="sxs-lookup"><span data-stu-id="a6875-290">It parses the URI and puts it in canonical format.</span></span>  
  
 <span data-ttu-id="a6875-291">`dontEscape`参数控制是否将保留字符转换为转义序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-291">The `dontEscape` parameter controls whether reserved characters are translated into escape sequences.</span></span> <span data-ttu-id="a6875-292">`true`仅当你确定 URI 中的所有保留字符都已转义时，才应将此参数设置为。</span><span class="sxs-lookup"><span data-stu-id="a6875-292">This parameter should be set to `true` only if you are certain that all reserved characters in the URI have been escaped.</span></span> <span data-ttu-id="a6875-293">对于未完全转义的 URI，将值设置为会 `true` 导致意外的行为。</span><span class="sxs-lookup"><span data-stu-id="a6875-293">Setting the value to `true` for a URI that has not been completely escaped can cause unexpected behavior.</span></span> <span data-ttu-id="a6875-294">强烈建议您始终将此参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-294">It is strongly recommended that you always set this parameter to `false`.</span></span>  
  
 <span data-ttu-id="a6875-295">如果 `dontEscape` 设置为 `false` ，则构造函数将通过检查% (% ) 的所有匹配项后跟有效的转义序列来转义任何保留字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-295">If `dontEscape` is set to `false`, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence.</span></span> <span data-ttu-id="a6875-296">如果百分号后面的字符序列无效，则百分比将替换为 %25。</span><span class="sxs-lookup"><span data-stu-id="a6875-296">If the character sequence following a percent is not valid, the percent is replaced by %25.</span></span>  
  
 <span data-ttu-id="a6875-297">此构造函数不确保 <xref:System.Uri> 引用辅助资源。</span><span class="sxs-lookup"><span data-stu-id="a6875-297">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-298">下面的示例创建 <xref:System.Uri> URI 的实例 `http://www.contoso.com/Hello%20World.htm` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-298">The following example creates a <xref:System.Uri> instance for the URI `http://www.contoso.com/Hello%20World.htm`.</span></span> <span data-ttu-id="a6875-299">由于包含的 URI 已完全转义并且采用规范格式，因此 `dontEscape` 可以将参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-299">Because the contained URI is completely escaped and is in canonical form, the `dontEscape` parameter can be set to `true`.</span></span>  
  
 [!code-cpp[Classic Uri.Uri1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Uri1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri1 Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Uri1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-300"><paramref name="uriString" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-300"><paramref name="uriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-301"><paramref name="uriString" /> 为空或只包含空格。</span><span class="sxs-lookup"><span data-stu-id="a6875-301"><paramref name="uriString" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="a6875-302">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-302">-or-</span></span> 
<span data-ttu-id="a6875-303">在 <paramref name="uriString" /> 中指定的方案无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-303">The scheme specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-304">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-304">-or-</span></span> 
 <span data-ttu-id="a6875-305"><paramref name="uriString" /> 包含过多斜杠。</span><span class="sxs-lookup"><span data-stu-id="a6875-305"><paramref name="uriString" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="a6875-306">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-306">-or-</span></span> 
<span data-ttu-id="a6875-307"><paramref name="uriString" /> 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-307">The password specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-308">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-308">-or-</span></span> 
<span data-ttu-id="a6875-309"><paramref name="uriString" /> 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-309">The host name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-310">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-310">-or-</span></span> 
<span data-ttu-id="a6875-311"><paramref name="uriString" /> 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-311">The file name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-312">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-312">-or-</span></span> 
<span data-ttu-id="a6875-313"><paramref name="uriString" /> 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-313">The user name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-314">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-314">-or-</span></span> 
<span data-ttu-id="a6875-315"><paramref name="uriString" /> 中指定的主机名或证书颁发机构名称不能以反斜杠结尾。</span><span class="sxs-lookup"><span data-stu-id="a6875-315">The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="a6875-316">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-316">-or-</span></span> 
<span data-ttu-id="a6875-317"><paramref name="uriString" /> 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="a6875-317">The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="a6875-318">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-318">-or-</span></span> 
<span data-ttu-id="a6875-319"><paramref name="uriString" /> 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-319">The length of <paramref name="uriString" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="a6875-320">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-320">-or-</span></span> 
<span data-ttu-id="a6875-321"><paramref name="uriString" /> 中指定的方案的长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-321">The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="a6875-322">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-322">-or-</span></span> 
<span data-ttu-id="a6875-323"><paramref name="uriString" /> 中存在无效的字符序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-323">There is an invalid character sequence in <paramref name="uriString" />.</span></span>  
  
<span data-ttu-id="a6875-324">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-324">-or-</span></span> 
<span data-ttu-id="a6875-325"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-325">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (string uriString, UriKind uriKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uriString, valuetype System.UriKind uriKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.String,System.UriKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uriString As String, uriKind As UriKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(System::String ^ uriString, UriKind uriKind);" />
      <MemberSignature Language="F#" Value="new Uri : string * UriKind -&gt; Uri" Usage="new System.Uri (uriString, uriKind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uriKind" Type="System.UriKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="a6875-326">标识将由 <see cref="T:System.Uri" /> 实例表示的资源的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-326">A string that identifies the resource to be represented by the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="a6875-327">请注意，必须用括号将字符串形式的 IPv6 地址括起来。</span><span class="sxs-lookup"><span data-stu-id="a6875-327">Note that an IPv6 address in string form must be enclosed within brackets.</span></span> <span data-ttu-id="a6875-328">例如，“http://[2607:f8b0:400d:c06::69]”。</span><span class="sxs-lookup"><span data-stu-id="a6875-328">For example, "http://[2607:f8b0:400d:c06::69]".</span></span></param>
        <param name="uriKind"><span data-ttu-id="a6875-329">指定 URI 字符串是相对 URI、绝对 URI 还是不确定。</span><span class="sxs-lookup"><span data-stu-id="a6875-329">Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.</span></span></param>
        <summary><span data-ttu-id="a6875-330">用指定的 URI 初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-330">Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI.</span></span> <span data-ttu-id="a6875-331">此构造函数允许指定 URI 字符串是相对 URI、绝对 URI 还是不确定。</span><span class="sxs-lookup"><span data-stu-id="a6875-331">This constructor allows you to specify if the URI string is a relative URI, absolute URI, or is indeterminate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Relative and absolute URIs have different restrictions on their format. <span data-ttu-id="a6875-333">例如，相对 URI 不需要方案或颁发机构。</span><span class="sxs-lookup"><span data-stu-id="a6875-333">For example, a relative URI does not require a scheme or an authority.</span></span> <span data-ttu-id="a6875-334">在中指定的值 `uriKind` 必须与传入的 URI 类型匹配 `uriString` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-334">The value you specify in `uriKind` must match the type of URI passed in `uriString`.</span></span> <span data-ttu-id="a6875-335">但是，如果 <xref:System.UriKind.RelativeOrAbsolute> 指定了，则 URI 字符串可以是相对的，也可以是绝对的。</span><span class="sxs-lookup"><span data-stu-id="a6875-335">However, if <xref:System.UriKind.RelativeOrAbsolute> is specified, the URI string can be relative or absolute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6875-336"><paramref name="uriKind" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-336"><paramref name="uriKind" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-337"><paramref name="uriString" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-337"><paramref name="uriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-338">注意：在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-338">Note: In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>

<span data-ttu-id="a6875-339"><paramref name="uriString" /> 包含相对 URI，而 <paramref name="uriKind" /> 为 <see cref="F:System.UriKind.Absolute" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-339"><paramref name="uriString" /> contains a relative URI and <paramref name="uriKind" /> is <see cref="F:System.UriKind.Absolute" />.</span></span>  
  
<span data-ttu-id="a6875-340">or</span><span class="sxs-lookup"><span data-stu-id="a6875-340">or</span></span> 
 <span data-ttu-id="a6875-341"><paramref name="uriString" /> 包含绝对 URI，而 <paramref name="uriKind" /> 为 <see cref="F:System.UriKind.Relative" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-341"><paramref name="uriString" /> contains an absolute URI and <paramref name="uriKind" /> is <see cref="F:System.UriKind.Relative" />.</span></span>  
  
<span data-ttu-id="a6875-342">or</span><span class="sxs-lookup"><span data-stu-id="a6875-342">or</span></span> 
 <span data-ttu-id="a6875-343"><paramref name="uriString" /> 为空。</span><span class="sxs-lookup"><span data-stu-id="a6875-343"><paramref name="uriString" /> is empty.</span></span>  
  
<span data-ttu-id="a6875-344">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-344">-or-</span></span> 
<span data-ttu-id="a6875-345"><paramref name="uriString" /> 中指定的方案格式不正确。</span><span class="sxs-lookup"><span data-stu-id="a6875-345">The scheme specified in <paramref name="uriString" /> is not correctly formed.</span></span> <span data-ttu-id="a6875-346">请参阅 <see cref="M:System.Uri.CheckSchemeName(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-346">See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.</span></span>  
  
<span data-ttu-id="a6875-347">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-347">-or-</span></span> 
 <span data-ttu-id="a6875-348"><paramref name="uriString" /> 包含过多斜杠。</span><span class="sxs-lookup"><span data-stu-id="a6875-348"><paramref name="uriString" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="a6875-349">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-349">-or-</span></span> 
<span data-ttu-id="a6875-350"><paramref name="uriString" /> 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-350">The password specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-351">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-351">-or-</span></span> 
<span data-ttu-id="a6875-352"><paramref name="uriString" /> 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-352">The host name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-353">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-353">-or-</span></span> 
<span data-ttu-id="a6875-354"><paramref name="uriString" /> 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-354">The file name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-355">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-355">-or-</span></span> 
<span data-ttu-id="a6875-356"><paramref name="uriString" /> 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-356">The user name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-357">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-357">-or-</span></span> 
<span data-ttu-id="a6875-358"><paramref name="uriString" /> 中指定的主机名或证书颁发机构名称不能以反斜杠结尾。</span><span class="sxs-lookup"><span data-stu-id="a6875-358">The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="a6875-359">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-359">-or-</span></span> 
<span data-ttu-id="a6875-360"><paramref name="uriString" /> 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="a6875-360">The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="a6875-361">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-361">-or-</span></span> 
<span data-ttu-id="a6875-362"><paramref name="uriString" /> 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-362">The length of <paramref name="uriString" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="a6875-363">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-363">-or-</span></span> 
<span data-ttu-id="a6875-364"><paramref name="uriString" /> 中指定的方案的长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-364">The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="a6875-365">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-365">-or-</span></span> 
<span data-ttu-id="a6875-366"><paramref name="uriString" /> 中存在无效的字符序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-366">There is an invalid character sequence in <paramref name="uriString" />.</span></span>  
  
<span data-ttu-id="a6875-367">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-367">-or-</span></span> 
<span data-ttu-id="a6875-368"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-368">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (Uri baseUri, string relativeUri);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, relativeUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="new Uri : Uri * string -&gt; Uri" Usage="new System.Uri (baseUri, relativeUri)" />
      <MemberSignature Language="C#" Value="public Uri (Uri baseUri, string? relativeUri);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="a6875-369">基 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-369">The base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="a6875-370">要添加到基 URI 的相对 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-370">The relative URI to add to the base URI.</span></span></param>
        <summary><span data-ttu-id="a6875-371">根据指定的基 URI 和相对 URI 字符串，初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-371">Initializes a new instance of the <see cref="T:System.Uri" /> class based on the specified base URI and relative URI string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance by combining the <ph id="ph2">`baseUri`</ph> and the <ph id="ph3">`relativeUri`</ph>. <span data-ttu-id="a6875-373">如果 `relativeUri` 是一个绝对 URI (包含方案、主机名，并且可以选择) 端口号，则 <xref:System.Uri> 仅使用创建实例 `relativeUri` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-373">If `relativeUri` is an absolute URI (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.</span></span>  
 
 <span data-ttu-id="a6875-374">如果 `baseUri` (如) 有相对部分 `/api` ，则必须以斜杠 (（如) ）终止相对部分， `/api/` 前提 `baseUri` 是要在构造中保留的相关部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-374">If the `baseUri` has relative parts (like `/api`), then the relative part must be terminated with a slash, (like `/api/`), if the relative part of `baseUri` is to be preserved in the constructed <xref:System.Uri>.</span></span> 

 <span data-ttu-id="a6875-375">此外，如果 `relativeUri` 以斜杠开头，则它将替换 `baseUri`</span><span class="sxs-lookup"><span data-stu-id="a6875-375">Additionally, if the `relativeUri` begins with a slash, then it will replace any relative part of the `baseUri`</span></span>

 <span data-ttu-id="a6875-376">此构造函数不确保 <xref:System.Uri> 引用辅助资源。</span><span class="sxs-lookup"><span data-stu-id="a6875-376">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-377">下面的示例 <xref:System.Uri> 通过组合相对 uri `http://www.contoso.com` 并 `catalog/shownew.htm` 形成绝对 URI 来创建类的新实例 `http://www.contoso.com/catalog/shownew.htm` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-377">The following example creates a new instance of the <xref:System.Uri> class by combining the relative URIs `http://www.contoso.com` and `catalog/shownew.htm` to form the absolute URI `http://www.contoso.com/catalog/shownew.htm`.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri3 Example/CPP/source.cpp" id="Snippet1"::: 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri3 Example/CS/source.cs" interactive="try-dotnet-method" id="Snippet1"::: 
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri3 Example/VB/source.vb" id="Snippet1"::: 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-378"><paramref name="baseUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-378"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6875-379"><paramref name="baseUri" /> 不是绝对的 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-379"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-380">注意：在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-380">Note: In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>

<span data-ttu-id="a6875-381">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 为空或仅包含空格。</span><span class="sxs-lookup"><span data-stu-id="a6875-381">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="a6875-382">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-382">-or-</span></span> 
<span data-ttu-id="a6875-383">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-383">The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-384">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-384">-or-</span></span> 
<span data-ttu-id="a6875-385">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 包含过多的斜杠。</span><span class="sxs-lookup"><span data-stu-id="a6875-385">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="a6875-386">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-386">-or-</span></span> 
<span data-ttu-id="a6875-387">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-387">The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-388">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-388">-or-</span></span> 
<span data-ttu-id="a6875-389">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-389">The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-390">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-390">-or-</span></span> 
<span data-ttu-id="a6875-391">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-391">The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-392">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-392">-or-</span></span> 
<span data-ttu-id="a6875-393">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-393">The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-394">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-394">-or-</span></span> 
<span data-ttu-id="a6875-395">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名或证书颁发机构名称不能以反斜杠终止。</span><span class="sxs-lookup"><span data-stu-id="a6875-395">The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="a6875-396">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-396">-or-</span></span> 
<span data-ttu-id="a6875-397">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="a6875-397">The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="a6875-398">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-398">-or-</span></span> 
<span data-ttu-id="a6875-399">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-399">The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="a6875-400">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-400">-or-</span></span> 
<span data-ttu-id="a6875-401">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-401">The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="a6875-402">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-402">-or-</span></span> 
<span data-ttu-id="a6875-403">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中存在无效字符序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-403">There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span>  
  
<span data-ttu-id="a6875-404">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-404">-or-</span></span> 
<span data-ttu-id="a6875-405"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-405">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (Uri baseUri, Uri relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, class System.Uri relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, relativeUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(Uri ^ baseUri, Uri ^ relativeUri);" />
      <MemberSignature Language="F#" Value="new Uri : Uri * Uri -&gt; Uri" Usage="new System.Uri (baseUri, relativeUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="relativeUri" Type="System.Uri" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="a6875-406">作为新 <see cref="T:System.Uri" /> 实例的基的绝对 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-406">An absolute <see cref="T:System.Uri" /> that is the base for the new <see cref="T:System.Uri" /> instance.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="a6875-407">与 <see cref="T:System.Uri" /> 组合的相对 <paramref name="baseUri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-407">A relative <see cref="T:System.Uri" /> instance that is combined with <paramref name="baseUri" />.</span></span></param>
        <summary><span data-ttu-id="a6875-408">根据指定的基 <see cref="T:System.Uri" /> 实例和相对 <see cref="T:System.Uri" /> 实例的组合，初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-408">Initializes a new instance of the <see cref="T:System.Uri" /> class based on the combination of a specified base <see cref="T:System.Uri" /> instance and a relative <see cref="T:System.Uri" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor creates a new <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance by combining an absolute <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance, <ph id="ph3">`baseUri`</ph>, with a relative <ph id="ph4">&lt;xref:System.Uri&gt;</ph> instance, <ph id="ph5">`relativeUri`</ph>. <span data-ttu-id="a6875-410">如果 `relativeUri` 是一个绝对 <xref:System.Uri> 实例 (包含方案、主机名，并且可以选择) 端口号，则 <xref:System.Uri> 仅使用创建实例 `relativeUri` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-410">If `relativeUri` is an absolute <xref:System.Uri> instance (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.</span></span>  
 
 <span data-ttu-id="a6875-411">如果 `baseUri` (如) 有相对部分 `/api` ，则必须以斜杠 (（如) ）终止相对部分， `/api/` 前提 `baseUri` 是要在构造中保留的相关部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-411">If the `baseUri` has relative parts (like `/api`), then the relative part must be terminated with a slash, (like `/api/`), if the relative part of `baseUri` is to be preserved in the constructed <xref:System.Uri>.</span></span> 

 <span data-ttu-id="a6875-412">此外，如果 `relativeUri` 以斜杠开头，则它将替换 `baseUri`</span><span class="sxs-lookup"><span data-stu-id="a6875-412">Additionally, if the `relativeUri` begins with a slash, then it will replace any relative part of the `baseUri`</span></span>
 
 <span data-ttu-id="a6875-413">此构造函数不确保 <xref:System.Uri> 引用辅助资源。</span><span class="sxs-lookup"><span data-stu-id="a6875-413">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-414">此示例将创建一个绝对 <xref:System.Uri> 实例、 `absoluteUri` 和一个相对 <xref:System.Uri> 实例 `relativeUri` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-414">This example creates an absolute <xref:System.Uri> instance, `absoluteUri`, and a relative <xref:System.Uri> instance, `relativeUri`.</span></span> <span data-ttu-id="a6875-415">然后，将 <xref:System.Uri> `combinedUri` 从这两个实例创建一个新的实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-415">A new <xref:System.Uri> instance, `combinedUri`, is then created from these two instances.</span></span>  
    
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6875-416"><paramref name="baseUri" /> 不是绝对的 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-416"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-417"><paramref name="baseUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-417"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6875-418"><paramref name="baseUri" /> 不是绝对的 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-418"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-419">注意：在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-419">Note: In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>

<span data-ttu-id="a6875-420">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 为空或仅包含空格。</span><span class="sxs-lookup"><span data-stu-id="a6875-420">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="a6875-421">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-421">-or-</span></span> 
<span data-ttu-id="a6875-422">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-422">The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-423">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-423">-or-</span></span> 
<span data-ttu-id="a6875-424">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 包含过多的斜杠。</span><span class="sxs-lookup"><span data-stu-id="a6875-424">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="a6875-425">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-425">-or-</span></span> 
<span data-ttu-id="a6875-426">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-426">The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-427">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-427">-or-</span></span> 
<span data-ttu-id="a6875-428">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-428">The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-429">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-429">-or-</span></span> 
<span data-ttu-id="a6875-430">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-430">The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-431">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-431">-or-</span></span> 
<span data-ttu-id="a6875-432">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-432">The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-433">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-433">-or-</span></span> 
<span data-ttu-id="a6875-434">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名或证书颁发机构名称不能以反斜杠终止。</span><span class="sxs-lookup"><span data-stu-id="a6875-434">The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="a6875-435">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-435">-or-</span></span> 
<span data-ttu-id="a6875-436">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="a6875-436">The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="a6875-437">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-437">-or-</span></span> 
<span data-ttu-id="a6875-438">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-438">The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="a6875-439">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-439">-or-</span></span> 
<span data-ttu-id="a6875-440">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-440">The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="a6875-441">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-441">-or-</span></span> 
<span data-ttu-id="a6875-442">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中存在无效字符序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-442">There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span>  
  
<span data-ttu-id="a6875-443">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-443">-or-</span></span> 
<span data-ttu-id="a6875-444"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-444">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (Uri baseUri, string? relativeUri, bool dontEscape);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string relativeUri, bool dontEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, relativeUri As String, dontEscape As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(Uri ^ baseUri, System::String ^ relativeUri, bool dontEscape);" />
      <MemberSignature Language="F#" Value="new Uri : Uri * string * bool -&gt; Uri" Usage="new System.Uri (baseUri, relativeUri, dontEscape)" />
      <MemberSignature Language="C#" Value="public Uri (Uri baseUri, string relativeUri, bool dontEscape);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The constructor has been deprecated. Please new Uri(Uri, string). The dontEscape parameter is deprecated and is always false. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The constructor has been deprecated. Please new Uri(Uri, string). The dontEscape parameter is deprecated and is always false. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The constructor has been deprecated. Please new Uri(Uri, string). The dontEscape parameter is deprecated and is always false. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The constructor has been deprecated. Please new Uri(Uri, string). The dontEscape parameter is deprecated and is always false. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="relativeUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="dontEscape" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="a6875-445">基 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-445">The base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="a6875-446">要添加到基 URI 的相对 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-446">The relative URI to add to the base URI.</span></span></param>
        <param name="dontEscape"><span data-ttu-id="a6875-447">如果 <paramref name="uriString" /> 已完全转义，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-447"><see langword="true" /> if <paramref name="uriString" /> is completely escaped; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a6875-448">根据指定的基 URI 和相对 URI，初始化 <see cref="T:System.Uri" /> 类的新实例，并对字符转义进行显式控制。</span><span class="sxs-lookup"><span data-stu-id="a6875-448">Initializes a new instance of the <see cref="T:System.Uri" /> class based on the specified base and relative URIs, with explicit control of character escaping.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance by combining <ph id="ph2">`baseUri`</ph> and <ph id="ph3">`relativeUri`</ph>. <span data-ttu-id="a6875-450">如果传递的 URI `relativeUri` 是一个绝对 URI (包含方案、主机名以及（可选）端口号) ，则 <xref:System.Uri> 仅使用创建实例 `relativeUri` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-450">If the URI passed in `relativeUri` is an absolute URI (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.</span></span>  
  
 <span data-ttu-id="a6875-451">`dontEscape`参数控制是否将保留字符转换为转义序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-451">The `dontEscape` parameter controls whether reserved characters are translated into escape sequences.</span></span> <span data-ttu-id="a6875-452">`true`仅当你确定 URI 中的所有保留字符都已转义时，才应将此参数设置为。</span><span class="sxs-lookup"><span data-stu-id="a6875-452">This parameter should be set to `true` only if you are certain that all reserved characters in the URI have been escaped.</span></span> <span data-ttu-id="a6875-453">对于未完全转义的 URI，将值设置为会 `true` 导致意外的行为。</span><span class="sxs-lookup"><span data-stu-id="a6875-453">Setting the value to `true` for a URI that has not been completely escaped can cause unexpected behavior.</span></span> <span data-ttu-id="a6875-454">强烈建议您始终将此参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-454">It is strongly recommended that you always set this parameter to `false`.</span></span> <span data-ttu-id="a6875-455">如果 `dontEscape` 设置为 `false` ，则构造函数将通过检查% (% ) 的所有匹配项后跟有效的转义序列来转义任何保留字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-455">If `dontEscape` is set to `false`, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence.</span></span> <span data-ttu-id="a6875-456">如果百分号后面的字符序列无效，则百分比将替换为 %25。</span><span class="sxs-lookup"><span data-stu-id="a6875-456">If the character sequence following a percent is not valid, the percent is replaced by %25.</span></span>  
  
 <span data-ttu-id="a6875-457">此构造函数不确保 <xref:System.Uri> 引用辅助资源。</span><span class="sxs-lookup"><span data-stu-id="a6875-457">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-458">下面的示例 <xref:System.Uri> 通过组合相对 uri `http://www.contoso.com` 并 `Hello%20World.htm` 形成一个绝对 URI 来创建类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-458">The following example creates a new instance of the <xref:System.Uri> class by combining the relative URIs `http://www.contoso.com` and `Hello%20World.htm` to form an absolute URI.</span></span>  
  
 [!code-cpp[Classic Uri.Uri4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Uri4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri4 Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Uri4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-459"><paramref name="baseUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-459"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6875-460"><paramref name="baseUri" /> 不是绝对的 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-460"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-461">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 为空或仅包含空格。</span><span class="sxs-lookup"><span data-stu-id="a6875-461">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="a6875-462">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-462">-or-</span></span> 
<span data-ttu-id="a6875-463">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-463">The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-464">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-464">-or-</span></span> 
<span data-ttu-id="a6875-465">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 包含过多的斜杠。</span><span class="sxs-lookup"><span data-stu-id="a6875-465">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="a6875-466">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-466">-or-</span></span> 
<span data-ttu-id="a6875-467">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-467">The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-468">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-468">-or-</span></span> 
<span data-ttu-id="a6875-469">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-469">The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-470">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-470">-or-</span></span> 
<span data-ttu-id="a6875-471">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-471">The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-472">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-472">-or-</span></span> 
<span data-ttu-id="a6875-473">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-473">The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="a6875-474">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-474">-or-</span></span> 
<span data-ttu-id="a6875-475">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名或证书颁发机构名称不能以反斜杠终止。</span><span class="sxs-lookup"><span data-stu-id="a6875-475">The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="a6875-476">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-476">-or-</span></span> 
<span data-ttu-id="a6875-477">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="a6875-477">The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="a6875-478">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-478">-or-</span></span> 
<span data-ttu-id="a6875-479">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-479">The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="a6875-480">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-480">-or-</span></span> 
<span data-ttu-id="a6875-481">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-481">The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="a6875-482">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-482">-or-</span></span> 
<span data-ttu-id="a6875-483">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中存在无效字符序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-483">There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span>  
  
<span data-ttu-id="a6875-484">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a6875-484">-or-</span></span> 
<span data-ttu-id="a6875-485"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-485">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
        <block subset="none" type="usage"><para>Because of security concerns, your application should not call this constructor with URI strings from untrusted sources and with <ph id="ph1">&lt;paramref name="dontEscape" /&gt;</ph> set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>. <span data-ttu-id="a6875-487">或者，您可以在 <see cref="M:System.Uri.IsWellFormedOriginalString" /> 调用此构造函数之前通过调用方法来检查 URI 字符串的有效性。</span><span class="sxs-lookup"><span data-stu-id="a6875-487">Alternately, you can check a URI string for validity by calling the <see cref="M:System.Uri.IsWellFormedOriginalString" /> method prior to calling this constructor.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AbsolutePath">
      <MemberSignature Language="C#" Value="public string AbsolutePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AbsolutePath" />
      <MemberSignature Language="DocId" Value="P:System.Uri.AbsolutePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AbsolutePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AbsolutePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AbsolutePath : string" Usage="System.Uri.AbsolutePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-488">获取 URI 的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="a6875-488">Gets the absolute path of the URI.</span></span></summary>
        <value>The absolute path to the resource.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-490"><xref:System.Uri.AbsolutePath%2A>属性包含服务器用于解析信息请求的路径信息。</span><span class="sxs-lookup"><span data-stu-id="a6875-490">The <xref:System.Uri.AbsolutePath%2A> property contains the path information that the server uses to resolve requests for information.</span></span> <span data-ttu-id="a6875-491">通常，这是服务器文件系统上所需信息的路径，但它还可以指示服务器必须运行的应用程序或脚本以提供信息。</span><span class="sxs-lookup"><span data-stu-id="a6875-491">Typically this is the path to the desired information on the server's file system, although it also can indicate the application or script the server must run to provide the information.</span></span>  
  
 <span data-ttu-id="a6875-492">路径信息不包括方案、主机名或 URI 的查询部分。</span><span class="sxs-lookup"><span data-stu-id="a6875-492">The path information does not include the scheme, host name, or query portion of the URI.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-493">下面的示例将路径写入 `/catalog/shownew.htm` 控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-493">The following example writes the path `/catalog/shownew.htm` to the console.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/CPP/source.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/CS/source.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/VB/source.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-494">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-494">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteUri">
      <MemberSignature Language="C#" Value="public string AbsoluteUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AbsoluteUri" />
      <MemberSignature Language="DocId" Value="P:System.Uri.AbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AbsoluteUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AbsoluteUri { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AbsoluteUri : string" Usage="System.Uri.AbsoluteUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-495">获取绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-495">Gets the absolute URI.</span></span></summary>
        <value>The entire URI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-497"><xref:System.Uri.AbsoluteUri%2A>属性包括存储在实例中的整个 URI <xref:System.Uri> ，包括所有片段和查询字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-497">The <xref:System.Uri.AbsoluteUri%2A> property includes the entire URI stored in the <xref:System.Uri> instance, including all fragments and query strings.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-498">下面的示例将实例的完整内容写入 <xref:System.Uri> 控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-498">The following example writes the complete contents of the <xref:System.Uri> instance to the console.</span></span> <span data-ttu-id="a6875-499">在显示的示例中， `http://www.contoso.com/catalog/shownew.htm?date=today` 将写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-499">In the example shown, `http://www.contoso.com/catalog/shownew.htm?date=today` is written to the console.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/CPP/source.cpp" id="Snippet1"::: 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/CS/source.cs" interactive="try-dotnet-method" id="Snippet1"::: 
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/VB/source.vb" id="Snippet1"::: 
 
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-500">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-500">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Authority">
      <MemberSignature Language="C#" Value="public string Authority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Authority" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Authority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authority As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Authority { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authority : string" Usage="System.Uri.Authority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-501">获取服务器的域名系统 (DNS) 主机名或 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="a6875-501">Gets the Domain Name System (DNS) host name or IP address and the port number for a server.</span></span></summary>
        <value>The authority component of the URI represented by this instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-503"><xref:System.Uri.Authority%2A>属性通常是服务器 DNS 主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="a6875-503">The <xref:System.Uri.Authority%2A> property is typically a server DNS host name or IP address.</span></span> <span data-ttu-id="a6875-504">此属性可能包括服务端口号（如果它不同于 URI 的默认端口）。</span><span class="sxs-lookup"><span data-stu-id="a6875-504">This property might include the service port number if it differs from the default port for the URI.</span></span> <span data-ttu-id="a6875-505">如果 <xref:System.Uri.Authority%2A> 组件包含保留字符，则会在此属性返回的字符串值中对这些字符进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-505">If the <xref:System.Uri.Authority%2A> component contains reserved characters, these are escaped in the string value returned by this property.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-506">下面的示例将服务器的主机名 (`www.contoso.com`) 和端口号写入控制台 (8080) 。</span><span class="sxs-lookup"><span data-stu-id="a6875-506">The following example writes the host name (`www.contoso.com`) and port number (8080) of the server to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Authority Example/CPP/source.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Authority Example/CS/source.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Authority Example/VB/source.vb" id="Snippet1":::
 
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-507">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-507">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Canonicalize">
      <MemberSignature Language="C#" Value="protected virtual void Canonicalize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Canonicalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Canonicalize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Canonicalize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Canonicalize();" />
      <MemberSignature Language="F#" Value="abstract member Canonicalize : unit -&gt; unit&#xA;override this.Canonicalize : unit -&gt; unit" Usage="uri.Canonicalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6875-508">将内部存储的 URI 转换为规范化格式。</span><span class="sxs-lookup"><span data-stu-id="a6875-508">Converts the internally stored URI to canonical form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stores the canonical version of the URI internally.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-510">此实例代表一个相对 URI，而此方法仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-510">This instance represents a relative URI, and this method is valid only for absolute URIs.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-511">URI 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="a6875-511">The URI is incorrectly formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CheckHostName">
      <MemberSignature Language="C#" Value="public static UriHostNameType CheckHostName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.UriHostNameType CheckHostName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.CheckHostName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CheckHostName (name As String) As UriHostNameType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static UriHostNameType CheckHostName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member CheckHostName : string -&gt; UriHostNameType" Usage="System.Uri.CheckHostName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriHostNameType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a6875-512">要验证的主机名。</span><span class="sxs-lookup"><span data-stu-id="a6875-512">The host name to validate.</span></span> <span data-ttu-id="a6875-513">可以是 IPv4 或 IPv6 地址或 Internet 主机名。</span><span class="sxs-lookup"><span data-stu-id="a6875-513">This can be an IPv4 or IPv6 address or an Internet host name.</span></span></param>
        <summary><span data-ttu-id="a6875-514">确定指定的主机名是否为有效的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="a6875-514">Determines whether the specified host name is a valid DNS name.</span></span></summary>
        <returns><span data-ttu-id="a6875-515">主机名的类型。</span><span class="sxs-lookup"><span data-stu-id="a6875-515">The type of the host name.</span></span> <span data-ttu-id="a6875-516">如果无法确定主机名的类型，或者主机名为 <see langword="null" /> 或零长度字符串，则此方法返回 <see cref="F:System.UriHostNameType.Unknown" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-516">If the type of the host name cannot be determined or if the host name is <see langword="null" /> or a zero-length string, this method returns <see cref="F:System.UriHostNameType.Unknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <ph id="ph1">&lt;xref:System.Uri.CheckHostName%2A&gt;</ph> method checks that the host name provided meets the requirements for a valid Internet host name. <span data-ttu-id="a6875-518">但是，它不会执行主机名查找来验证主机是否存在。</span><span class="sxs-lookup"><span data-stu-id="a6875-518">It does not, however, perform a host-name lookup to verify the existence of the host.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-519">下面的示例将检查主机名是否有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-519">The following example checks whether the host name is valid.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/CPP/source.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/CS/source.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/VB/source.vb" id="Snippet1"::: 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSchemeName">
      <MemberSignature Language="C#" Value="public static bool CheckSchemeName (string schemeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CheckSchemeName(string schemeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.CheckSchemeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CheckSchemeName (schemeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CheckSchemeName(System::String ^ schemeName);" />
      <MemberSignature Language="F#" Value="static member CheckSchemeName : string -&gt; bool" Usage="System.Uri.CheckSchemeName schemeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="schemeName"><span data-ttu-id="a6875-520">要验证的方案名。</span><span class="sxs-lookup"><span data-stu-id="a6875-520">The scheme name to validate.</span></span></param>
        <summary><span data-ttu-id="a6875-521">确定指定的方案名是否有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-521">Determines whether the specified scheme name is valid.</span></span></summary>
        <returns><span data-ttu-id="a6875-522">如果方案名有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-522"><see langword="true" /> if the scheme name is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method checks the scheme name for validity according to RFC 2396 by default. <span data-ttu-id="a6875-524">如果国际资源标识符 (IRIs) 或国际化域名 (IDN) 分析已启用，则此方法根据 RFC 3986 检查方案名称的有效性。</span><span class="sxs-lookup"><span data-stu-id="a6875-524">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, this method checks the scheme name for validity according to RFC 3986.</span></span> <span data-ttu-id="a6875-525">方案名称必须以字母开头，并且必须仅包含字母、数字和字符 "."、"+" 或 "-"。</span><span class="sxs-lookup"><span data-stu-id="a6875-525">The scheme name must begin with a letter and must contain only letters, digits, and the characters ".", "+", or "-".</span></span>  
  
 <span data-ttu-id="a6875-526">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-526">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-527">下面的示例创建一个 <xref:System.Uri> 实例，并检查方案名是否有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-527">The following example creates a <xref:System.Uri> instance and checks whether the scheme name is valid.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet9":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet9":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet9":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecurity">
      <MemberSignature Language="C#" Value="protected virtual void CheckSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.CheckSecurity" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CheckSecurity ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CheckSecurity();" />
      <MemberSignature Language="F#" Value="abstract member CheckSecurity : unit -&gt; unit&#xA;override this.CheckSecurity : unit -&gt; unit" Usage="uri.CheckSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6875-528">调用此方法不起任何作用。</span><span class="sxs-lookup"><span data-stu-id="a6875-528">Calling this method has no effect.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (Uri uri1, Uri uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Uri uri1, class System.Uri uri2, valuetype System.UriComponents partsToCompare, valuetype System.UriFormat compareFormat, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (uri1 As Uri, uri2 As Uri, partsToCompare As UriComponents, compareFormat As UriFormat, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(Uri ^ uri1, Uri ^ uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Compare : Uri * Uri * UriComponents * UriFormat * StringComparison -&gt; int" Usage="System.Uri.Compare (uri1, uri2, partsToCompare, compareFormat, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri1" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uri2" Type="System.Uri" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="partsToCompare" Type="System.UriComponents" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="compareFormat" Type="System.UriFormat" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="4" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri1"><span data-ttu-id="a6875-529">第一个 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-529">The first URI.</span></span></param>
        <param name="uri2"><span data-ttu-id="a6875-530">第二个 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-530">The second URI.</span></span></param>
        <param name="partsToCompare"><span data-ttu-id="a6875-531"><see cref="T:System.UriComponents" /> 值的按位组合，它指定要比较的 <paramref name="uri1" /> 和 <paramref name="uri2" /> 的部分。</span><span class="sxs-lookup"><span data-stu-id="a6875-531">A bitwise combination of the <see cref="T:System.UriComponents" /> values that specifies the parts of <paramref name="uri1" /> and <paramref name="uri2" /> to compare.</span></span></param>
        <param name="compareFormat"><span data-ttu-id="a6875-532">枚举值之一，它指定在比较 URI 部分时使用的字符转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-532">One of the enumeration values that specifies the character escaping used when the URI components are compared.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="a6875-533">枚举值之一，用于指定比较的区域性、大小写和排序规则。</span><span class="sxs-lookup"><span data-stu-id="a6875-533">One of the enumeration values that specifies the the culture, case, and sort rules for the comparison.</span></span></param>
        <summary><span data-ttu-id="a6875-534">使用指定的比较规则比较两个 URI 的指定部分。</span><span class="sxs-lookup"><span data-stu-id="a6875-534">Compares the specified parts of two URIs using the specified comparison rules.</span></span></summary>
        <returns><span data-ttu-id="a6875-535">一个值，指示进行比较的 <see cref="T:System.Uri" /> 部分之间的词法关系。</span><span class="sxs-lookup"><span data-stu-id="a6875-535">A value that indicates the lexical relationship between the compared <see cref="T:System.Uri" /> components.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="a6875-536">“值”</span><span class="sxs-lookup"><span data-stu-id="a6875-536">Value</span></span> 
 </term><description> <span data-ttu-id="a6875-537">含义</span><span class="sxs-lookup"><span data-stu-id="a6875-537">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="a6875-538">小于零</span><span class="sxs-lookup"><span data-stu-id="a6875-538">Less than zero</span></span> 
 </term><description><span data-ttu-id="a6875-539"><paramref name="uri1" /> 小于 <paramref name="uri2" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-539"><paramref name="uri1" /> is less than <paramref name="uri2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a6875-540">零</span><span class="sxs-lookup"><span data-stu-id="a6875-540">Zero</span></span> 
 </term><description><span data-ttu-id="a6875-541"><paramref name="uri1" /> 等于 <paramref name="uri2" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-541"><paramref name="uri1" /> equals <paramref name="uri2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a6875-542">大于零</span><span class="sxs-lookup"><span data-stu-id="a6875-542">Greater than zero</span></span> 
 </term><description><span data-ttu-id="a6875-543"><paramref name="uri1" /> 大于 <paramref name="uri2" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-543"><paramref name="uri1" /> is greater than <paramref name="uri2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If both <ph id="ph1">`uri1`</ph> and <ph id="ph2">`uri2`</ph> are <ph id="ph3">`null`</ph>, this method returns 0. <span data-ttu-id="a6875-545">比较 URI 值时，相对 URI 始终小于绝对 URI，非 null URI 总是大于 null URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-545">When comparing URI values, a relative URI is always less than an absolute URI, and a non-null URI is always greater than a null URI.</span></span> <span data-ttu-id="a6875-546">对于 `uri1` 和 `uri2` 均不是并且既 `null` 是相对 uri，也不是这两个绝对 uri 的情况， <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> 方法将执行比较。</span><span class="sxs-lookup"><span data-stu-id="a6875-546">For cases where both `uri1` and `uri2` are not `null` and are both relative URIs or both absolute URIs, the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> method performs the comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6875-547"><paramref name="comparisonType" /> 不是有效的 <see cref="T:System.StringComparison" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a6875-547"><paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DnsSafeHost">
      <MemberSignature Language="C#" Value="public string DnsSafeHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DnsSafeHost" />
      <MemberSignature Language="DocId" Value="P:System.Uri.DnsSafeHost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DnsSafeHost As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DnsSafeHost { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DnsSafeHost : string" Usage="System.Uri.DnsSafeHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-548">获得可安全用于 DNS 解析的未转义主机名（如必要）。</span><span class="sxs-lookup"><span data-stu-id="a6875-548">Gets a host name that, after being unescaped if necessary, is safe to use for DNS resolution.</span></span></summary>
        <value>The host part of the URI in a format suitable for DNS resolution; or the original host string, if it is already suitable for resolution.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-550">对于 IPv6 地址，会删除方括号 ( [] ) 并 <xref:System.Net.IPAddress.ScopeId%2A> 设置属性（如果在构造此实例时指定了一个属性）。</span><span class="sxs-lookup"><span data-stu-id="a6875-550">For IPv6 addresses, the brackets ([]) are removed and the <xref:System.Net.IPAddress.ScopeId%2A> property is set, if one was specified when this instance was constructed.</span></span>

<span data-ttu-id="a6875-551">如果你使用转义字符串构造此实例 (例如 `"http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"`) ，则 uri.dnssafehost 将返回一个转义字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-551">If you used an escaped string to construct this instance (for example, `"http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"`), then DnsSafeHost returns an escaped string.</span></span> <span data-ttu-id="a6875-552">Unescape 在 `DnsSafeHost` 使用该字符串进行 DNS 解析之前返回的任何转义字符串 (参见示例) 。</span><span class="sxs-lookup"><span data-stu-id="a6875-552">Unescape any escaped string returned from `DnsSafeHost` before using that string for DNS resolution (see the Example).</span></span> <span data-ttu-id="a6875-553">如果使用无效的非转义字符串构造此实例 (例如，"http：//[fe80：：200：39ff： fe36： 1a2d %4]/temp/example.htm" ") ，则 Uri.dnssafehost 将返回一个未转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-553">If you used an invalid unescaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), then DnsSafeHost returns an unescaped string.</span></span>
  
 <span data-ttu-id="a6875-554"><xref:System.Uri.DnsSafeHost%2A>此属性依赖于配置设置，如本主题后面所述。</span><span class="sxs-lookup"><span data-stu-id="a6875-554">The <xref:System.Uri.DnsSafeHost%2A> property is dependent on configuration settings, as discussed later in this topic.</span></span> <span data-ttu-id="a6875-555">Windows 应用商店应用程序无法更改配置设置，这可能会在使用时导致不一致的结果 <xref:System.Uri.DnsSafeHost%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-555">Configuration settings cannot be changed by Windows Store applications, which can lead to inconsistent results when using <xref:System.Uri.DnsSafeHost%2A>.</span></span> <span data-ttu-id="a6875-556"><xref:System.Uri.IdnHost%2A>提供的属性是使用的首选替代方法 <xref:System.Uri.DnsSafeHost%2A> ，因为无论 <xref:System.Uri.IdnHost%2A> 当前*app.config*的设置如何，都可以保证始终是 DNS 安全的。</span><span class="sxs-lookup"><span data-stu-id="a6875-556">The <xref:System.Uri.IdnHost%2A> property is provided as the preferred alternative to using <xref:System.Uri.DnsSafeHost%2A>, because <xref:System.Uri.IdnHost%2A> is guaranteed to always be DNS safe, no matter what the current *app.config* settings might be.</span></span>  
  
 <span data-ttu-id="a6875-557">该 <xref:System.Uri.DnsSafeHost%2A> 属性已在 .NET Framework v 3.5、3.0 SP1 和 2.0 SP1 中进行了扩展，可根据 RFC 3987 提供 (IRI) 支持的国际资源标识符。</span><span class="sxs-lookup"><span data-stu-id="a6875-557">The <xref:System.Uri.DnsSafeHost%2A> property has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide International Resource Identifier (IRI) support based on RFC 3987.</span></span> <span data-ttu-id="a6875-558">除非当前用户专门启用 IRI，否则他们看不到任何 NET Framework 2.0 行为的改变。</span><span class="sxs-lookup"><span data-stu-id="a6875-558">Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.</span></span> <span data-ttu-id="a6875-559">这确保了 NET Framework 以前版本的应用程序兼容性。</span><span class="sxs-lookup"><span data-stu-id="a6875-559">This ensures application compatibility with prior versions of the .NET Framework.</span></span>  
  
 <span data-ttu-id="a6875-560">若要启用对 IRI 的支持，需要以下两项更改：</span><span class="sxs-lookup"><span data-stu-id="a6875-560">To enable support for IRI, the following two changes are required:</span></span>  
  
1.  <span data-ttu-id="a6875-561">将以下行添加到 .NET Framework 2.0 目录下的 *machine.config* 文件  \<section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" /></span><span class="sxs-lookup"><span data-stu-id="a6875-561">Add the following line to the *machine.config* file under the .NET Framework 2.0 directory  \<section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" /></span></span>  
  
2.  <span data-ttu-id="a6875-562">指定是否要将国际化域名 (IDN) 应用于域名的分析以及是否应该应用 IRI 分析规则。</span><span class="sxs-lookup"><span data-stu-id="a6875-562">Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied.</span></span> <span data-ttu-id="a6875-563">这可以在 *machine.config* 或 *app.config* 文件中完成。</span><span class="sxs-lookup"><span data-stu-id="a6875-563">This can be done in the *machine.config* or in the *app.config* file.</span></span> <span data-ttu-id="a6875-564">例如，添加以下内容：</span><span class="sxs-lookup"><span data-stu-id="a6875-564">For example, add the following:</span></span>

    ```xml  
    <configuration>  
      <uri>  
      <idn enabled="All" />  
      <iriParsing enabled="true" />  
      </uri>  
    </configuration>  
    ```  
  
 <span data-ttu-id="a6875-565">启用 IDN 可以将域名中所有 Unicode 标签转换成标签的 Punycode 等同项。</span><span class="sxs-lookup"><span data-stu-id="a6875-565">Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents.</span></span> <span data-ttu-id="a6875-566">Punycode 名称只包含 ASCII 字符，并且始终以 xn-- 前缀开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-566">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span> <span data-ttu-id="a6875-567">这样是为了支持 Internet 上的 DNS 服务器，因为大部分 DNS 服务器仅支持 ASCII 字符（参见 RFC 3940）。</span><span class="sxs-lookup"><span data-stu-id="a6875-567">The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).</span></span>  
  
 <span data-ttu-id="a6875-568">启用 IDN 只会影响属性的值 <xref:System.Uri.DnsSafeHost%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-568">Enabling IDN only affects the value of the <xref:System.Uri.DnsSafeHost%2A> property.</span></span>  
  
 <span data-ttu-id="a6875-569">根据所使用的 DNS 服务器，IDN 有三个可能的值：</span><span class="sxs-lookup"><span data-stu-id="a6875-569">There are three possible values for IDN depending on the DNS servers that are used:</span></span>  
  
- <span data-ttu-id="a6875-570">已启用 idn = 全部</span><span class="sxs-lookup"><span data-stu-id="a6875-570">idn enabled = All</span></span>

  <span data-ttu-id="a6875-571">此值会将所有 Unicode 域名转换为它们的 Punycode 等效项（IDN 名称）。</span><span class="sxs-lookup"><span data-stu-id="a6875-571">This value will convert any Unicode domain names to their Punycode equivalents (IDN names).</span></span>  
  
- <span data-ttu-id="a6875-572">启用 idn = AllExceptIntranet</span><span class="sxs-lookup"><span data-stu-id="a6875-572">idn enabled = AllExceptIntranet</span></span>

  <span data-ttu-id="a6875-573">此值会将所有外部 Unicode 域名转换为使用 Punycode 等效项（IDN 名称）。</span><span class="sxs-lookup"><span data-stu-id="a6875-573">This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names).</span></span> <span data-ttu-id="a6875-574">在这种情况下，若要处理本地 Intranet 上的国际化名称，用于 Intranet 的 DNS 服务器应该支持 Unicode 名称。</span><span class="sxs-lookup"><span data-stu-id="a6875-574">In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.</span></span>  
  
- <span data-ttu-id="a6875-575">启用 idn = 无</span><span class="sxs-lookup"><span data-stu-id="a6875-575">idn enabled = None</span></span>

  <span data-ttu-id="a6875-576">此值不会将任何 Unicode 域名转换为使用 Punycode。</span><span class="sxs-lookup"><span data-stu-id="a6875-576">This value will not convert any Unicode domain names to use Punycode.</span></span> <span data-ttu-id="a6875-577">这是与 .NET Framework 2.0 行为一致的默认值。</span><span class="sxs-lookup"><span data-stu-id="a6875-577">This is the default value which is consistent with the .NET Framework 2.0 behaviour.</span></span>  
  
 <span data-ttu-id="a6875-578">启用 IRI 分析 (Iriparsing> enabled = `true`) 将根据 RFC 3987 中的最新 IRI 规则执行规范化和字符检查。</span><span class="sxs-lookup"><span data-stu-id="a6875-578">Enabling IRI parsing (iriParsing enabled = `true`) will do normalization and character checking according to the latest IRI rules in RFC 3987.</span></span> <span data-ttu-id="a6875-579">默认值为 `false` ，将根据 rfc 2396 和 rfc 2732 (为 IPv6 文本) 执行规范化和字符检查。</span><span class="sxs-lookup"><span data-stu-id="a6875-579">The default value is `false` and will do normalization and character checking according to RFC 2396 and RFC 2732 (for IPv6 literals).</span></span>  
  
 <span data-ttu-id="a6875-580">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-580">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-581">下面的示例 <xref:System.Uri> 从字符串创建实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-581">The following example creates a <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="a6875-582">它说明了从返回的值 <xref:System.Uri.Host%2A> （返回 URI 中指定的主机名或地址）与从返回的值之间的差异， <xref:System.Uri.DnsSafeHost%2A> 后者返回在 DNS 解析中可安全使用的地址。</span><span class="sxs-lookup"><span data-stu-id="a6875-582">It illustrates the difference between the value returned from <xref:System.Uri.Host%2A>, which returns the host name or address specified in the URI, and the value returned from <xref:System.Uri.DnsSafeHost%2A>, which returns an address that is safe to use in DNS resolution.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp" id="Snippet4":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs" interactive="try-dotnet-method" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb" id="Snippet4":::

 <span data-ttu-id="a6875-583">如 "备注" 中所述，在解析之前 unescape 主机名。</span><span class="sxs-lookup"><span data-stu-id="a6875-583">As explained in Remarks, unescape the host name before resolving it.</span></span> <span data-ttu-id="a6875-584">你可以使用 <xref:System.Uri.UnescapeDataString%2A> 方法 unescape 主机名，并且可以通过调用方法来解决该问题 <xref:System.Net.Dns.GetHostEntry%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-584">You can use the <xref:System.Uri.UnescapeDataString%2A> method to unescape the host name, and you can resolve it by calling the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-585">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-585">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uri.Equals comparand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand"><span data-ttu-id="a6875-586">与当前实例相比较的 URI 或 URI 标识符。</span><span class="sxs-lookup"><span data-stu-id="a6875-586">The URI or a URI identifier to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="a6875-587">比较两个 <see cref="T:System.Uri" /> 实例是否相等。</span><span class="sxs-lookup"><span data-stu-id="a6875-587">Compares two <see cref="T:System.Uri" /> instances for equality.</span></span></summary>
        <returns><span data-ttu-id="a6875-588">如果两个实例表示相同的 URI，则该值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-588"><see langword="true" /> if the two instances represent the same URI; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph> method compares the two instances without regard to user information (<ph id="ph2">&lt;xref:System.Uri.UserInfo%2A&gt;</ph>) and fragment (<ph id="ph3">&lt;xref:System.Uri.Fragment%2A&gt;</ph>) parts that they might contain. <span data-ttu-id="a6875-590">例如，给定 Uri `http://www.contoso.com/index.htm#search` 和 `http://user:password@www.contoso.com/index.htm` ，则 <xref:System.Uri.Equals%2A> 方法将返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-590">For example, given the URIs `http://www.contoso.com/index.htm#search` and `http://user:password@www.contoso.com/index.htm`, the <xref:System.Uri.Equals%2A> method would return `true`.</span></span>  
  
 <span data-ttu-id="a6875-591">如果一个 <xref:System.Uri> 实例的格式为 Unicode 主机名，而 `comparand` 参数包含 <xref:System.Uri> 使用具有等效的 Punycode 主机名的主机名构成的实例或标识符，则 <xref:System.Uri.Equals%2A> `true` 仅 (当) 和国际化域名 (启用了 IDN) 支持时，才会返回。</span><span class="sxs-lookup"><span data-stu-id="a6875-591">If one <xref:System.Uri> instance is formed with a Unicode host name and `comparand` parameter contains a <xref:System.Uri> instance or identifier that is formed with a host name that has the equivalent Punycode host name, then <xref:System.Uri.Equals%2A> returns `true` only if International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled.</span></span> <span data-ttu-id="a6875-592">Punycode 名称只包含 ASCII 字符，并且始终以 xn-- 前缀开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-592">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span>  
  
 <span data-ttu-id="a6875-593">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-593">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6875-594">在 .NET Framework 版本1.0 和1.1 中， <xref:System.Uri.Query%2A> 也将忽略。</span><span class="sxs-lookup"><span data-stu-id="a6875-594">In the .NET Framework versions 1.0 and 1.1, the <xref:System.Uri.Query%2A> is also ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6875-595"><xref:System.Uri.Equals%2A>方法可在派生类中重写; 请小心，因为恶意实体可以修改方法。</span><span class="sxs-lookup"><span data-stu-id="a6875-595">The <xref:System.Uri.Equals%2A> method can be overridden in a derived class; use caution as a malicious entity could modify the method.</span></span> <span data-ttu-id="a6875-596">除非您知道此实例来自受信任的源，否则不应使用此方法来执行安全检查。</span><span class="sxs-lookup"><span data-stu-id="a6875-596">You should not use this method to perform security checks unless you know that this instance came from a trusted source.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-597">此示例从字符串创建两个 <xref:System.Uri> 实例并对它们进行比较，以确定它们是否表示相同的值。</span><span class="sxs-lookup"><span data-stu-id="a6875-597">This example creates two <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value.</span></span> <span data-ttu-id="a6875-598">`address1` 和 `address2` 都是相同的，因为 <xref:System.Uri.Fragment%2A> 此部分在此比较中被忽略。</span><span class="sxs-lookup"><span data-stu-id="a6875-598">`address1` and `address2` are the same because the <xref:System.Uri.Fragment%2A> portion is ignored for this comparison.</span></span> <span data-ttu-id="a6875-599">结果将写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-599">The outcome is written to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet8":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet8":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet8":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="protected virtual void Escape ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Escape() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Escape" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Escape ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Escape();" />
      <MemberSignature Language="F#" Value="abstract member Escape : unit -&gt; unit&#xA;override this.Escape : unit -&gt; unit" Usage="uri.Escape " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6875-600">将路径部分中的任何不安全字符或保留字符转换为对应的十六进制字符表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-600">Converts any unsafe or reserved characters in the path component to their hexadecimal character representations.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-601">从构造函数传来的 URI 无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-601">The URI passed from the constructor is invalid.</span></span> <span data-ttu-id="a6875-602">如果 URI 字符太多或 URI 是相对的，则会发生这种异常。</span><span class="sxs-lookup"><span data-stu-id="a6875-602">This exception can occur if a URI has too many characters or the URI is relative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EscapeDataString">
      <MemberSignature Language="C#" Value="public static string EscapeDataString (string stringToEscape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EscapeDataString(string stringToEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.EscapeDataString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EscapeDataString (stringToEscape As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EscapeDataString(System::String ^ stringToEscape);" />
      <MemberSignature Language="F#" Value="static member EscapeDataString : string -&gt; string" Usage="System.Uri.EscapeDataString stringToEscape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToEscape" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stringToEscape"><span data-ttu-id="a6875-603">要转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-603">The string to escape.</span></span></param>
        <summary><span data-ttu-id="a6875-604">将字符串转换为它的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-604">Converts a string to its escaped representation.</span></span></summary>
        <returns><span data-ttu-id="a6875-605"><paramref name="stringToEscape" /> 的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-605">The escaped representation of <paramref name="stringToEscape" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, the <ph id="ph1">&lt;xref:System.Uri.EscapeDataString%2A&gt;</ph> method converts all characters except for RFC 2396 unreserved characters to their hexadecimal representation. <span data-ttu-id="a6875-607">如果 (IRIs) 或国际化域名 (IDN) 解析启用了国际资源标识符，则该 <xref:System.Uri.EscapeDataString%2A> 方法将除 RFC 3986 不保留字符之外的所有字符都转换为其十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-607">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.EscapeDataString%2A> method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation.</span></span> <span data-ttu-id="a6875-608">在转义之前，所有 Unicode 字符都将转换为 UTF-8 格式。</span><span class="sxs-lookup"><span data-stu-id="a6875-608">All Unicode characters are converted to UTF-8 format before being escaped.</span></span>  
  
 <span data-ttu-id="a6875-609">此方法假定 `stringToEscape` 它中没有转义序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-609">This method assumes that `stringToEscape` has no escape sequences in it.</span></span>  
  
 <span data-ttu-id="a6875-610">默认情况下，根据 RFC 2396 对字符串进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-610">By default, the string is escaped according to RFC 2396.</span></span> <span data-ttu-id="a6875-611">如果国际资源标识符 (IRIs) 或国际化域名 (IDN) 分析已启用，则根据 RFC 3986 和 RFC 3987 对该字符串进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-611">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="a6875-612">有关保留和未保留字符的定义，请参阅这些 Rfc。</span><span class="sxs-lookup"><span data-stu-id="a6875-612">See these RFCs for a definition of reserved and unreserved characters.</span></span>  
  
 <span data-ttu-id="a6875-613">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-613">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-614"><paramref name="stringToEscape" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-614"><paramref name="stringToEscape" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-615">注意：在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-615">Note: In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>
  
<span data-ttu-id="a6875-616"><paramref name="stringToEscape" /> 的长度超过 32766 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-616">The length of <paramref name="stringToEscape" /> exceeds 32766 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EscapeString">
      <MemberSignature Language="C#" Value="protected static string EscapeString (string? str);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string EscapeString(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.EscapeString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function EscapeString (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ EscapeString(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member EscapeString : string -&gt; string" Usage="System.Uri.EscapeString str" />
      <MemberSignature Language="C#" Value="protected static string EscapeString (string str);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. Please use GetComponents() or static EscapeUriString() to escape a Uri component or a string. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. Please use GetComponents() or static EscapeUriString() to escape a Uri component or a string. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. Please use GetComponents() or static EscapeUriString() to escape a Uri component or a string. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. Please use GetComponents() or static EscapeUriString() to escape a Uri component or a string. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="a6875-617">要转换为它的转义表示形式的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-617">The string to transform to its escaped representation.</span></span></param>
        <summary><span data-ttu-id="a6875-618">将字符串转换为它的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-618">Converts a string to its escaped representation.</span></span></summary>
        <returns><span data-ttu-id="a6875-619">字符串的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-619">The escaped representation of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <ph id="ph1">&lt;xref:System.Uri.EscapeString%2A&gt;</ph> method converts RFC 2396 reserved characters and all characters with a character value greater than 127 to hexadecimal representation. <span data-ttu-id="a6875-621">在转义之前，所有 Unicode 字符都将转换为 UTF-8 格式。</span><span class="sxs-lookup"><span data-stu-id="a6875-621">All Unicode characters are converted to UTF-8 format before being escaped.</span></span>  
  
 <span data-ttu-id="a6875-622">默认情况下，根据 RFC 2396 对字符串进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-622">By default, the string is escaped according to RFC 2396.</span></span> <span data-ttu-id="a6875-623">如果国际资源标识符 (IRIs) 或国际化域名 (IDN) 分析已启用，则根据 RFC 3986 和 RFC 3987 对该字符串进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-623">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="a6875-624">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-624">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeUriString">
      <MemberSignature Language="C#" Value="public static string EscapeUriString (string stringToEscape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EscapeUriString(string stringToEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.EscapeUriString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EscapeUriString (stringToEscape As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EscapeUriString(System::String ^ stringToEscape);" />
      <MemberSignature Language="F#" Value="static member EscapeUriString : string -&gt; string" Usage="System.Uri.EscapeUriString stringToEscape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToEscape" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stringToEscape"><span data-ttu-id="a6875-625">要转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-625">The string to escape.</span></span></param>
        <summary><span data-ttu-id="a6875-626">将 URI 字符串转换为它的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-626">Converts a URI string to its escaped representation.</span></span></summary>
        <returns><span data-ttu-id="a6875-627"><paramref name="stringToEscape" /> 的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-627">The escaped representation of <paramref name="stringToEscape" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <ph id="ph1">&lt;xref:System.Uri.EscapeUriString%2A&gt;</ph> method to prepare an unescaped URI string to be a parameter to the <ph id="ph2">&lt;xref:System.Uri.%23ctor%2A&gt;</ph> constructor.  
  
 <span data-ttu-id="a6875-629">默认情况下， <xref:System.Uri.EscapeUriString%2A> 方法将除 RFC 2396 不保留字符之外的所有字符转换为其十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-629">By default, the <xref:System.Uri.EscapeUriString%2A> method converts all characters, except RFC 2396 unreserved characters, to their hexadecimal representation.</span></span> <span data-ttu-id="a6875-630">如果 (IRIs) 或国际化域名 (IDN) 解析启用了国际资源标识符，则该 <xref:System.Uri.EscapeUriString%2A> 方法将除 RFC 3986 不保留字符之外的所有字符都转换为其十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-630">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.EscapeUriString%2A> method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation.</span></span> <span data-ttu-id="a6875-631">在转义之前，所有 Unicode 字符都将转换为 UTF-8 格式。</span><span class="sxs-lookup"><span data-stu-id="a6875-631">All Unicode characters are converted to UTF-8 format before being escaped.</span></span>  
  
 <span data-ttu-id="a6875-632">此方法假定 `stringToEscape` 它中没有转义序列。</span><span class="sxs-lookup"><span data-stu-id="a6875-632">This method assumes that `stringToEscape` has no escape sequences in it.</span></span>  
  
 <span data-ttu-id="a6875-633">默认情况下，根据 RFC 2396 对字符串进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-633">By default, the string is escaped according to RFC 2396.</span></span> <span data-ttu-id="a6875-634">如果国际资源标识符 (IRIs) 或国际化域名 (IDN) 分析已启用，则根据 RFC 3986 和 RFC 3987 对该字符串进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-634">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="a6875-635">有关保留和未保留字符的定义，请参阅这些 Rfc。</span><span class="sxs-lookup"><span data-stu-id="a6875-635">See these RFCs for a definition of reserved and unreserved characters.</span></span>  
  
 <span data-ttu-id="a6875-636">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-636">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-637"><paramref name="stringToEscape" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-637"><paramref name="stringToEscape" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-638">注意：在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-638">Note: In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>

<span data-ttu-id="a6875-639"><paramref name="stringToEscape" /> 的长度超过 32766 个字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-639">The length of <paramref name="stringToEscape" /> exceeds 32766 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="public string Fragment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Fragment" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Fragment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fragment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Fragment { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Fragment : string" Usage="System.Uri.Fragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-640">获取转义 URI 片段。</span><span class="sxs-lookup"><span data-stu-id="a6875-640">Gets the escaped URI fragment.</span></span></summary>
        <value>URI fragment information.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-642"><xref:System.Uri.Fragment%2A>属性将获取 URI 中 ( # ) 之后的片段标记后面的任何文本，包括片段标记本身。</span><span class="sxs-lookup"><span data-stu-id="a6875-642">The <xref:System.Uri.Fragment%2A> property gets any text following a fragment marker (#) in the URI, including the fragment marker itself.</span></span> <span data-ttu-id="a6875-643">给定 URI `http://www.contoso.com/index.htm#main` ， <xref:System.Uri.Fragment%2A> 属性将返回 #main。</span><span class="sxs-lookup"><span data-stu-id="a6875-643">Given the URI `http://www.contoso.com/index.htm#main`, the <xref:System.Uri.Fragment%2A> property would return #main.</span></span>  
  
 <span data-ttu-id="a6875-644"><xref:System.Uri.Fragment%2A>任何比较中都不考虑该属性 <xref:System.Uri.Equals%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-644">The <xref:System.Uri.Fragment%2A> property is not considered in any <xref:System.Uri.Equals%2A> comparison.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-645">下面的示例创建一个 <xref:System.Uri> 实例，并将片段信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-645">The following example creates a <xref:System.Uri> instance and writes the fragment information to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet4":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet4":::

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-646">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-646">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromHex">
      <MemberSignature Language="C#" Value="public static int FromHex (char digit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FromHex(char digit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.FromHex(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHex (digit As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FromHex(char digit);" />
      <MemberSignature Language="F#" Value="static member FromHex : char -&gt; int" Usage="System.Uri.FromHex digit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digit" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="digit"><span data-ttu-id="a6875-647">要转换的十六进制数字（0-9、a-f、A-F）。</span><span class="sxs-lookup"><span data-stu-id="a6875-647">The hexadecimal digit (0-9, a-f, A-F) to convert.</span></span></param>
        <summary><span data-ttu-id="a6875-648">获取十六进制数字的十进制值。</span><span class="sxs-lookup"><span data-stu-id="a6875-648">Gets the decimal value of a hexadecimal digit.</span></span></summary>
        <returns><span data-ttu-id="a6875-649">与指定的十六进制数字对应的介于 0 到 15 之间的数字。</span><span class="sxs-lookup"><span data-stu-id="a6875-649">A number from 0 to 15 that corresponds to the specified hexadecimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <ph id="ph1">&lt;xref:System.Uri.FromHex%2A&gt;</ph> method converts a character representing a hexadecimal digit (0-9, a-f, A-F) to its decimal value (0 to 15). <span data-ttu-id="a6875-651">如果不是 `digit` 有效的十六进制数字，则 <xref:System.ArgumentException> 会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a6875-651">If `digit` is not a valid hexadecimal digit, an <xref:System.ArgumentException> exception is thrown.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-652">下面的示例确定字符是否为十六进制字符，如果为，则将相应的十进制值写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-652">The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet1"::: 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6875-653"><paramref name="digit" /> 不是有效的十六进制数字（0-9、a-f、A-F）。</span><span class="sxs-lookup"><span data-stu-id="a6875-653"><paramref name="digit" /> is not a valid hexadecimal digit (0-9, a-f, A-F).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetComponents">
      <MemberSignature Language="C#" Value="public string GetComponents (UriComponents components, UriFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetComponents(valuetype System.UriComponents components, valuetype System.UriFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetComponents (components As UriComponents, format As UriFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetComponents(UriComponents components, UriFormat format);" />
      <MemberSignature Language="F#" Value="member this.GetComponents : UriComponents * UriFormat -&gt; string" Usage="uri.GetComponents (components, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="components" Type="System.UriComponents" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.UriFormat" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="components"><span data-ttu-id="a6875-654"><see cref="T:System.UriComponents" /> 值的按位组合，它指定当前实例中要返回到调用方的部分。</span><span class="sxs-lookup"><span data-stu-id="a6875-654">A bitwise combination of the <see cref="T:System.UriComponents" /> values that specifies which parts of the current instance to return to the caller.</span></span></param>
        <param name="format"><span data-ttu-id="a6875-655">枚举值之一，它控制如何转义特殊字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-655">One of the enumeration values that controls how special characters are escaped.</span></span></param>
        <summary><span data-ttu-id="a6875-656">使用特殊字符的指定转义，获取当前实例的指定部分。</span><span class="sxs-lookup"><span data-stu-id="a6875-656">Gets the specified components of the current instance using the specified escaping for special characters.</span></span></summary>
        <returns><span data-ttu-id="a6875-657">当前实例的组件。</span><span class="sxs-lookup"><span data-stu-id="a6875-657">The components of the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-658">、、、、 <xref:System.UriComponents.Query> <xref:System.UriComponents.Fragment> <xref:System.UriComponents.Scheme> <xref:System.UriComponents.UserInfo> <xref:System.UriComponents.Host> 、 <xref:System.UriComponents.Port> 和 <xref:System.UriComponents.Path> 组件不包含分隔符。</span><span class="sxs-lookup"><span data-stu-id="a6875-658">The <xref:System.UriComponents.Query>, <xref:System.UriComponents.Fragment>, <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.UserInfo>, <xref:System.UriComponents.Host>, <xref:System.UriComponents.Port>, and <xref:System.UriComponents.Path> components do not include the delimiter.</span></span> <span data-ttu-id="a6875-659">您可以 <xref:System.UriComponents.KeepDelimiter> 使用按位 "或" 运算符) 将标志 (为使用分隔符获取值。</span><span class="sxs-lookup"><span data-stu-id="a6875-659">You can combine the <xref:System.UriComponents.KeepDelimiter> flag (using the bitwise OR operator) with any of those values to get the value with the delimiter.</span></span> <span data-ttu-id="a6875-660">对于所有其他 <xref:System.UriComponents> 值和值的组合，分隔符包含在返回值中。</span><span class="sxs-lookup"><span data-stu-id="a6875-660">For all other <xref:System.UriComponents> values, and combinations of values, the delimiters are included in the returned value.</span></span>  
  
 <span data-ttu-id="a6875-661">组件按照其在 URI 中出现的顺序返回。</span><span class="sxs-lookup"><span data-stu-id="a6875-661">The components are returned in the order that they appear in the URI.</span></span> <span data-ttu-id="a6875-662">例如，如果 <xref:System.UriComponents.Scheme> 指定了，则它将首先出现。</span><span class="sxs-lookup"><span data-stu-id="a6875-662">For example, if <xref:System.UriComponents.Scheme> is specified, it appears first.</span></span>  
  
 <span data-ttu-id="a6875-663">当国际资源标识符 (IRI) 和国际化域名 (启用 IDN) 支持时，返回的字符数将 <xref:System.String> 增加。</span><span class="sxs-lookup"><span data-stu-id="a6875-663">When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the number of characters returned in the <xref:System.String> increases.</span></span> <span data-ttu-id="a6875-664">用于支持 IRI 的 Punycode 名称只包含 ASCII 字符，并且始终以 xn--前缀开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-664">Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix.</span></span> <span data-ttu-id="a6875-665">启用 IRI 和 IDN 后，方法将正确处理 Unicode 代理项字符 <xref:System.Uri.GetComponents%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-665">When IRI and IDN are enabled, Unicode surrogate characters are handled correctly by the <xref:System.Uri.GetComponents%2A> method.</span></span>  
  
 <span data-ttu-id="a6875-666">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-666">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="a6875-667">如果在 <xref:System.Uri.GetComponents%2A> 设置为的情况 `format` 下调用方法 <xref:System.UriFormat.Unescaped> ，则不能将返回值用作构造函数的自变量 <xref:System.Uri.%23ctor%2A> 来创建等效的 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-667">If the <xref:System.Uri.GetComponents%2A> method is called with `format` set to <xref:System.UriFormat.Unescaped> , you cannot use the return value as an argument to a <xref:System.Uri.%23ctor%2A> constructor to create an equivalent <xref:System.Uri>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6875-668"><paramref name="components" /> 不是有效 <see cref="T:System.UriComponents" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="a6875-668"><paramref name="components" /> is not a combination of valid <see cref="T:System.UriComponents" /> values.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-669">当前 <see cref="T:System.Uri" /> 不是绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-669">The current <see cref="T:System.Uri" /> is not an absolute URI.</span></span> <span data-ttu-id="a6875-670">相对 URI 不能和此方法一起使用。</span><span class="sxs-lookup"><span data-stu-id="a6875-670">Relative URIs cannot be used with this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uri.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6875-671">获取 URI 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="a6875-671">Gets the hash code for the URI.</span></span></summary>
        <returns><span data-ttu-id="a6875-672">为此 URI 生成的哈希值。</span><span class="sxs-lookup"><span data-stu-id="a6875-672">The hash value generated for this URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6875-673">下面的示例创建一个 <xref:System.Uri> 实例，并将哈希代码写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-673">The following example creates a <xref:System.Uri> instance and writes the hash code to the console.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet4":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet4":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLeftPart">
      <MemberSignature Language="C#" Value="public string GetLeftPart (UriPartial part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLeftPart(valuetype System.UriPartial part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetLeftPart(System.UriPartial)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLeftPart (part As UriPartial) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLeftPart(UriPartial part);" />
      <MemberSignature Language="F#" Value="member this.GetLeftPart : UriPartial -&gt; string" Usage="uri.GetLeftPart part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.UriPartial" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="a6875-674">枚举值之一，指定要返回的 URI 部分的结尾。</span><span class="sxs-lookup"><span data-stu-id="a6875-674">One of the enumeration values that specifies the end of the URI portion to return.</span></span></param>
        <summary><span data-ttu-id="a6875-675">获取 <see cref="T:System.Uri" /> 实例的指定部分。</span><span class="sxs-lookup"><span data-stu-id="a6875-675">Gets the specified portion of a <see cref="T:System.Uri" /> instance.</span></span></summary>
        <returns><span data-ttu-id="a6875-676"><see cref="T:System.Uri" /> 实例的指定部分。</span><span class="sxs-lookup"><span data-stu-id="a6875-676">The specified portion of the <see cref="T:System.Uri" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <ph id="ph1">&lt;xref:System.Uri.GetLeftPart%2A&gt;</ph> method returns a string containing the leftmost portion of the URI string, ending with the portion specified by <ph id="ph2">`part`</ph>.  
  
 <span data-ttu-id="a6875-678"><xref:System.Uri.GetLeftPart%2A> 在以下情况下包括分隔符：</span><span class="sxs-lookup"><span data-stu-id="a6875-678"><xref:System.Uri.GetLeftPart%2A> includes delimiters in the following cases:</span></span>  
  
-   <span data-ttu-id="a6875-679"><xref:System.UriPartial.Scheme> 包含方案分隔符。</span><span class="sxs-lookup"><span data-stu-id="a6875-679"><xref:System.UriPartial.Scheme> includes the scheme delimiter.</span></span>  
  
-   <span data-ttu-id="a6875-680"><xref:System.UriPartial.Authority> 不包括路径分隔符。</span><span class="sxs-lookup"><span data-stu-id="a6875-680"><xref:System.UriPartial.Authority> does not include the path delimiter.</span></span>  
  
-   <span data-ttu-id="a6875-681"><xref:System.UriPartial.Path> 在原始 URI 中包括查询或片段分隔符之前的所有分隔符。</span><span class="sxs-lookup"><span data-stu-id="a6875-681"><xref:System.UriPartial.Path> includes any delimiters in the original URI up to the query or fragment delimiter.</span></span>  
  
-   <span data-ttu-id="a6875-682"><xref:System.UriPartial.Query> 包括 <xref:System.UriPartial.Path> 、查询及其分隔符。</span><span class="sxs-lookup"><span data-stu-id="a6875-682"><xref:System.UriPartial.Query> includes the <xref:System.UriPartial.Path>, plus the query and its delimiter.</span></span>  
  
 <span data-ttu-id="a6875-683">下面的示例演示了如何 <xref:System.Uri.GetLeftPart%2A> 使用 <xref:System.UriPartial.Scheme> 、 <xref:System.UriPartial.Authority> 、 <xref:System.UriPartial.Path> 或调用的 URI 和结果 <xref:System.UriPartial.Query> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-683">The following examples show a URI and the results of calling <xref:System.Uri.GetLeftPart%2A> with <xref:System.UriPartial.Scheme>, <xref:System.UriPartial.Authority>, <xref:System.UriPartial.Path>, or <xref:System.UriPartial.Query>.</span></span>  
  
|<span data-ttu-id="a6875-684">URI</span><span class="sxs-lookup"><span data-stu-id="a6875-684">URI</span></span>|<span data-ttu-id="a6875-685">方案</span><span class="sxs-lookup"><span data-stu-id="a6875-685">Scheme</span></span>|<span data-ttu-id="a6875-686">颁发机构</span><span class="sxs-lookup"><span data-stu-id="a6875-686">Authority</span></span>|<span data-ttu-id="a6875-687">路径</span><span class="sxs-lookup"><span data-stu-id="a6875-687">Path</span></span>|<span data-ttu-id="a6875-688">查询</span><span class="sxs-lookup"><span data-stu-id="a6875-688">Query</span></span>|  
|---------|------------|---------------|----------|-----------|  
|`http://www.contoso.com/index.htm?date=today`|`http://`|`http://www.contoso.com`|`http://www.contoso.com/index.htm`|`http://www.contoso.com/index.htm?date=today`|  
|`http://www.contoso.com/index.htm#main`|`http://`|`http://www.contoso.com`|`http://www.contoso.com/index.htm`|`http://www.contoso.com/index.htm`|  
|`mailto:user@contoso.com?subject=uri`|`mailto:`|`mailto:user@contoso.com`|`mailto:user@contoso.com?subject=uri`|`<none>`|  
|`nntp://news.contoso.com/123456@contoso.com`|`nntp://`|`nntp://news.contoso.com`|`nntp://news.contoso.com/123456@contoso.com`|`nntp://news.contoso.com/123456@contoso.com`|  
|`news:123456@contoso.com`|`news:`|`news:123456@contoso.com`|`news:123456@contoso.com`|`<none>`|  
|`file://server/filename.ext`|`file://`|`file://server`|`file://server/filename.ext`|`file://server/filename.ext`|
  
## Examples  
 <span data-ttu-id="a6875-689">下面的示例创建一个 <xref:System.Uri> 实例，并将路径写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-689">The following example creates a <xref:System.Uri> instance and writes the path to the console.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet4":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet4":::

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-690">当前 <see cref="T:System.Uri" /> 实例不是绝对实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-690">The current <see cref="T:System.Uri" /> instance is not an absolute instance.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6875-691">指定的 <paramref name="part" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-691">The specified <paramref name="part" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GetObjectData (serializationInfo As SerializationInfo, streamingContext As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="member this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="uri.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="a6875-692">序列化 <see cref="T:System.Uri" /> 所需的信息。</span><span class="sxs-lookup"><span data-stu-id="a6875-692">The information required to serialize the <see cref="T:System.Uri" />.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="a6875-693">一个对象，包含与 <see cref="T:System.Uri" /> 关联的序列化流的源和目标。</span><span class="sxs-lookup"><span data-stu-id="a6875-693">An object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Uri" />.</span></span></param>
        <summary><span data-ttu-id="a6875-694">返回序列化当前实例所需的数据。</span><span class="sxs-lookup"><span data-stu-id="a6875-694">Returns the data needed to serialize the current instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HexEscape">
      <MemberSignature Language="C#" Value="public static string HexEscape (char character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HexEscape(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.HexEscape(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HexEscape (character As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HexEscape(char character);" />
      <MemberSignature Language="F#" Value="static member HexEscape : char -&gt; string" Usage="System.Uri.HexEscape character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="a6875-695">要转换为十六进制表示形式的字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-695">The character to convert to hexadecimal representation.</span></span></param>
        <summary><span data-ttu-id="a6875-696">将指定的字符转换为它的等效十六进制字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-696">Converts a specified character into its hexadecimal equivalent.</span></span></summary>
        <returns><span data-ttu-id="a6875-697">指定字符的十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-697">The hexadecimal representation of the specified character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example converts a character to its hexadecimal equivalent and writes it to the console.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6875-699"><paramref name="character" /> 大于 255。</span><span class="sxs-lookup"><span data-stu-id="a6875-699"><paramref name="character" /> is greater than 255.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HexUnescape">
      <MemberSignature Language="C#" Value="public static char HexUnescape (string pattern, ref int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char HexUnescape(string pattern, int32&amp; index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.HexUnescape(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HexUnescape (pattern As String, ByRef index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char HexUnescape(System::String ^ pattern, int % index);" />
      <MemberSignature Language="F#" Value="static member HexUnescape : string * int -&gt; char" Usage="System.Uri.HexUnescape (pattern, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="index" Type="System.Int32" RefType="ref" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="a6875-700">字符的十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-700">The hexadecimal representation of a character.</span></span></param>
        <param name="index"><span data-ttu-id="a6875-701"><paramref name="pattern" /> 中字符的十六进制表示形式开始的位置。</span><span class="sxs-lookup"><span data-stu-id="a6875-701">The location in <paramref name="pattern" /> where the hexadecimal representation of a character begins.</span></span></param>
        <summary><span data-ttu-id="a6875-702">将字符的指定十六进制表示形式转换为字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-702">Converts a specified hexadecimal representation of a character to the character.</span></span></summary>
        <returns><span data-ttu-id="a6875-703">用十六进制编码表示的位于 <paramref name="index" /> 的字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-703">The character represented by the hexadecimal encoding at position <paramref name="index" />.</span></span> <span data-ttu-id="a6875-704">如果位于 <paramref name="index" /> 的字符不是用十六进制编码的，则返回位于 <paramref name="index" /> 的字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-704">If the character at <paramref name="index" /> is not hexadecimal encoded, the character at <paramref name="index" /> is returned.</span></span> <span data-ttu-id="a6875-705"><paramref name="index" /> 的值递增以指向跟在返回的字符后面的字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-705">The value of <paramref name="index" /> is incremented to point to the character following the one returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a6875-707"><paramref name="index" /> 小于 0，或大于等于 <paramref name="pattern" /> 中的字符数。</span><span class="sxs-lookup"><span data-stu-id="a6875-707"><paramref name="index" /> is less than 0 or greater than or equal to the number of characters in <paramref name="pattern" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : string" Usage="System.Uri.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-708">获取此实例的主机部分。</span><span class="sxs-lookup"><span data-stu-id="a6875-708">Gets the host component of this instance.</span></span></summary>
        <value><span data-ttu-id="a6875-709">主机名。</span><span class="sxs-lookup"><span data-stu-id="a6875-709">The host name.</span></span> <span data-ttu-id="a6875-710">这通常是服务器的 DNS 主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="a6875-710">This is usually the DNS host name or IP address of the server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unlike the <ph id="ph1">&lt;xref:System.Uri.Authority%2A&gt;</ph> property, this property value does not include the port number.
  
## Examples  
 <span data-ttu-id="a6875-712">下面的示例将服务器的主机名 (`www.contoso.com`) 写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-712">The following example writes the host name (`www.contoso.com`) of the server to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Host Example/CPP/source.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Host Example/CS/source.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Host Example/VB/source.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-713">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-713">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HostNameType">
      <MemberSignature Language="C#" Value="public UriHostNameType HostNameType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.UriHostNameType HostNameType" />
      <MemberSignature Language="DocId" Value="P:System.Uri.HostNameType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostNameType As UriHostNameType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property UriHostNameType HostNameType { UriHostNameType get(); };" />
      <MemberSignature Language="F#" Value="member this.HostNameType : UriHostNameType" Usage="System.Uri.HostNameType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriHostNameType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-714">获取 URI 中指定的主机名的类型。</span><span class="sxs-lookup"><span data-stu-id="a6875-714">Gets the type of the host name specified in the URI.</span></span></summary>
        <value><span data-ttu-id="a6875-715"><see cref="T:System.UriHostNameType" /> 枚举的一个成员。</span><span class="sxs-lookup"><span data-stu-id="a6875-715">A member of the <see cref="T:System.UriHostNameType" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and writes the <ph id="ph2">&lt;xref:System.Uri.HostNameType%2A&gt;</ph> to the console.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet9":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet9":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet9"::: 

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-717">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-717">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IdnHost">
      <MemberSignature Language="C#" Value="public string IdnHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IdnHost" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IdnHost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdnHost As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IdnHost { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IdnHost : string" Usage="System.Uri.IdnHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-718">根据需要使用 Punycode，获取主机的符合 RFC 3490 标准的国际域名。</span><span class="sxs-lookup"><span data-stu-id="a6875-718">Gets the RFC 3490 compliant International Domain Name of the host, using Punycode as appropriate.</span></span> <span data-ttu-id="a6875-719">该字符串在不进行转义的情况下（如必要）可安全用于 DNS 解析。</span><span class="sxs-lookup"><span data-stu-id="a6875-719">This string, after being unescaped if necessary, is safe to use for DNS resolution.</span></span></summary>
        <value>The hostname, formatted with Punycode according to the IDN standard.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-721">提供此属性是为了使用需要以 Punycode 形式使用域名的更低级别网络协议。</span><span class="sxs-lookup"><span data-stu-id="a6875-721">This property is provided for the use of lower-level networking protocols that require the domain name in Punycode form.</span></span> <span data-ttu-id="a6875-722">如果你的代码不需要该特定格式，则将 <xref:System.Uri.Host%2A> 用于主机名。</span><span class="sxs-lookup"><span data-stu-id="a6875-722">If your code does not require that specific format, use <xref:System.Uri.Host%2A> for the hostname.</span></span>  
  
 <span data-ttu-id="a6875-723">不推荐使用的 <xref:System.Uri.DnsSafeHost%2A> 属性依赖于 *app.config* 设置，Windows 应用商店应用程序无法更改这些设置。</span><span class="sxs-lookup"><span data-stu-id="a6875-723">The deprecated <xref:System.Uri.DnsSafeHost%2A> property is dependent on *app.config* settings, which cannot be changed by Windows Store applications.</span></span> <span data-ttu-id="a6875-724">IdnHost 作为首选的替代方法提供 <xref:System.Uri.DnsSafeHost%2A> ，因为无论 <xref:System.Uri.IdnHost%2A> 当前 *app.config* 设置如何，都可以保证始终是 DNS 安全的。</span><span class="sxs-lookup"><span data-stu-id="a6875-724">IdnHost is provided as the preferred alternative to using <xref:System.Uri.DnsSafeHost%2A>, because <xref:System.Uri.IdnHost%2A> is guaranteed to always be DNS safe, no matter what the current *app.config* settings might be.</span></span>  

 <span data-ttu-id="a6875-725">如果你使用转义字符串构造此实例 (例如 `"http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"`) ，则 IdnHost 将返回一个转义字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-725">If you used an escaped string to construct this instance (for example, `"http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"`), then IdnHost returns an escaped string.</span></span> <span data-ttu-id="a6875-726">应在使用该字符串进行 DNS 解析之前，unescape 从 IdnHost 返回的任何转义字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-726">You should unescape any escaped string returned from IdnHost before using that string for DNS resolution.</span></span> <span data-ttu-id="a6875-727">请注意，如果使用无效的非转义字符串构造此实例 (例如，"http：//[fe80：：200：39ff： fe36： 1a2d %4]/temp/example.htm" ") ，则 IdnHost 返回一个未转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-727">Be aware that if you used an invalid unescaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), then IdnHost returns an unescaped string.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-728">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-728">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAbsoluteUri">
      <MemberSignature Language="C#" Value="public bool IsAbsoluteUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbsoluteUri" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsAbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAbsoluteUri As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbsoluteUri { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAbsoluteUri : bool" Usage="System.Uri.IsAbsoluteUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-729">获取一个值，该值指示 <see cref="T:System.Uri" /> 实例是否为绝对实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-729">Gets a value that indicates whether the <see cref="T:System.Uri" /> instance is absolute.</span></span></summary>
        <value><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance is absolute; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-731">`true`如果 <xref:System.Uri> 传递到构造函数的字符串或实例可分析为绝对 <xref:System.Uri> 实例（其中包含方案、颁发机构和路径），则此属性为。</span><span class="sxs-lookup"><span data-stu-id="a6875-731">This property is `true` if the string or <xref:System.Uri> instance that was passed into the constructor can be parsed as an absolute <xref:System.Uri> instance, which contains a scheme, an authority, and a path.</span></span> <span data-ttu-id="a6875-732">否则， <xref:System.Uri> 实例将被视为相对，并可能省略方案或其他 URI 组件。</span><span class="sxs-lookup"><span data-stu-id="a6875-732">Otherwise, the <xref:System.Uri> instance is treated as relative and might omit the scheme or other URI components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBadFileSystemCharacter">
      <MemberSignature Language="C#" Value="protected virtual bool IsBadFileSystemCharacter (char character);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsBadFileSystemCharacter(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsBadFileSystemCharacter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsBadFileSystemCharacter (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsBadFileSystemCharacter(char character);" />
      <MemberSignature Language="F#" Value="abstract member IsBadFileSystemCharacter : char -&gt; bool&#xA;override this.IsBadFileSystemCharacter : char -&gt; bool" Usage="uri.IsBadFileSystemCharacter character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="a6875-733">要测试的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-733">The <see cref="T:System.Char" /> to test.</span></span></param>
        <summary><span data-ttu-id="a6875-734">指示字符是否在文件系统名称中无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-734">Indicates whether a character is invalid in a file system name.</span></span></summary>
        <returns><span data-ttu-id="a6875-735">如果指定的字符无效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-735"><see langword="true" /> if the specified character is invalid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The character is analyzed according to the rules for the NTFS file system.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBaseOf">
      <MemberSignature Language="C#" Value="public bool IsBaseOf (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBaseOf(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsBaseOf(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBaseOf (uri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBaseOf(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.IsBaseOf : Uri -&gt; bool" Usage="uri.IsBaseOf uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="a6875-737">要测试的指定 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-737">The specified URI to test.</span></span></param>
        <summary><span data-ttu-id="a6875-738">确定当前的 <see cref="T:System.Uri" /> 实例是否为指定 <see cref="T:System.Uri" /> 实例的基。</span><span class="sxs-lookup"><span data-stu-id="a6875-738">Determines whether the current <see cref="T:System.Uri" /> instance is a base of the specified <see cref="T:System.Uri" /> instance.</span></span></summary>
        <returns><span data-ttu-id="a6875-739">如果当前 <see langword="true" /> 实例是 <see cref="T:System.Uri" /> 的基，则为 <paramref name="uri" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-739"><see langword="true" /> if the current <see cref="T:System.Uri" /> instance is a base of <paramref name="uri" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <ph id="ph1">&lt;xref:System.Uri.IsBaseOf%2A&gt;</ph> is used to compare the current <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance to a specified <ph id="ph3">&lt;xref:System.Uri&gt;</ph> to determine whether this URI is a base for the specified <ph id="ph4">&lt;xref:System.Uri&gt;</ph>. <span data-ttu-id="a6875-741">在比较两个 <xref:System.Uri> 对象以确定基本关系时， <xref:System.Uri.UserInfo%2A> 不会计算用户信息 () 。</span><span class="sxs-lookup"><span data-stu-id="a6875-741">When comparing two <xref:System.Uri> objects to determine a base relationship, the user information (<xref:System.Uri.UserInfo%2A>) is not evaluated.</span></span> <span data-ttu-id="a6875-742">在将两个 Uri (uri1 和 uri2) 进行比较时，uri1 是 uri2 的基数。如果在最后一个斜杠 (/) 后忽略 uri2 中的所有内容，则这两个 Uri 是相同的。</span><span class="sxs-lookup"><span data-stu-id="a6875-742">When comparing two URIs (uri1 and uri2), uri1 is the base of uri2 if, when you ignore everything in uri2 after the last slash (/), the two URIs are identical.</span></span> <span data-ttu-id="a6875-743">http://host/path/path/file?query下表使用作为基 URI，显示了它是否是其他 uri 的基础。</span><span class="sxs-lookup"><span data-stu-id="a6875-743">Using http://host/path/path/file?query as the base URI, the following table shows whether it is a base for other URIs.</span></span>  
  
|<span data-ttu-id="a6875-744">URI</span><span class="sxs-lookup"><span data-stu-id="a6875-744">URI</span></span>|<span data-ttu-id="a6875-745">http://host/path/path/file?query 基数为</span><span class="sxs-lookup"><span data-stu-id="a6875-745">http://host/path/path/file?query is base of</span></span>|  
|---------|------------------------------------------------------|  
|http://host/path/path/file/|<span data-ttu-id="a6875-746">是</span><span class="sxs-lookup"><span data-stu-id="a6875-746">yes</span></span>|  
|http://host/path/path/#fragment|<span data-ttu-id="a6875-747">是</span><span class="sxs-lookup"><span data-stu-id="a6875-747">yes</span></span>|  
|<span data-ttu-id="a6875-748">http://host/path/path/MoreDir/"</span><span class="sxs-lookup"><span data-stu-id="a6875-748">http://host/path/path/MoreDir/"</span></span>|<span data-ttu-id="a6875-749">是</span><span class="sxs-lookup"><span data-stu-id="a6875-749">yes</span></span>|  
|http://host/path/path/OtherFile?Query|<span data-ttu-id="a6875-750">是</span><span class="sxs-lookup"><span data-stu-id="a6875-750">yes</span></span>|  
|http://host/path/path/|<span data-ttu-id="a6875-751">是</span><span class="sxs-lookup"><span data-stu-id="a6875-751">yes</span></span>|  
|http://host/path/path/file|<span data-ttu-id="a6875-752">是</span><span class="sxs-lookup"><span data-stu-id="a6875-752">yes</span></span>|  
|http://host/path/path|<span data-ttu-id="a6875-753">否</span><span class="sxs-lookup"><span data-stu-id="a6875-753">no</span></span>|  
|http://host/path/path?query|<span data-ttu-id="a6875-754">否</span><span class="sxs-lookup"><span data-stu-id="a6875-754">no</span></span>|  
|http://host/path/path#Fragment|<span data-ttu-id="a6875-755">否</span><span class="sxs-lookup"><span data-stu-id="a6875-755">no</span></span>|  
|http://host/path/path2/|<span data-ttu-id="a6875-756">否</span><span class="sxs-lookup"><span data-stu-id="a6875-756">no</span></span>|  
<span data-ttu-id="a6875-757">://host/path/path2/MoreDir</span><span class="sxs-lookup"><span data-stu-id="a6875-757">://host/path/path2/MoreDir</span></span>|<span data-ttu-id="a6875-758">否</span><span class="sxs-lookup"><span data-stu-id="a6875-758">no</span></span>|  
|http://host/path/File|<span data-ttu-id="a6875-759">否</span><span class="sxs-lookup"><span data-stu-id="a6875-759">no</span></span>|
  
## Examples  
 <span data-ttu-id="a6875-760">此示例创建一个 <xref:System.Uri> 表示基实例的实例 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-760">This example creates a <xref:System.Uri> instance that represents a base <xref:System.Uri> instance.</span></span> <span data-ttu-id="a6875-761">然后，它通过字符串创建第二个 <xref:System.Uri> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-761">It then creates a second <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="a6875-762">它调用 <xref:System.Uri.IsBaseOf%2A> 来确定基实例是否为第二个实例的基。</span><span class="sxs-lookup"><span data-stu-id="a6875-762">It calls <xref:System.Uri.IsBaseOf%2A> to determine whether the base instance is the base of the second instance.</span></span> <span data-ttu-id="a6875-763">结果将写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-763">The outcome is written to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp" id="Snippet6":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs" interactive="try-dotnet-method" id="Snippet6":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb" id="Snippet6":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-764"><paramref name="uri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-764"><paramref name="uri" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultPort">
      <MemberSignature Language="C#" Value="public bool IsDefaultPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultPort" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsDefaultPort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaultPort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaultPort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefaultPort : bool" Usage="System.Uri.IsDefaultPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-765">获取一个值，该值指示 URI 的端口值是否为此方案的默认值。</span><span class="sxs-lookup"><span data-stu-id="a6875-765">Gets a value that indicates whether the port value of the URI is the default for this scheme.</span></span></summary>
        <value><span data-ttu-id="a6875-766"><see langword="true" /> 如果属性中的值 <see cref="P:System.Uri.Port" /> 是此方案的默认端口，则为; 否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-766"><see langword="true" /> if the value in the <see cref="P:System.Uri.Port" /> property is the default port for this scheme; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6875-767">下面的示例创建一个 <xref:System.Uri> 实例，并检查它是否使用默认端口。</span><span class="sxs-lookup"><span data-stu-id="a6875-767">The following example creates a <xref:System.Uri> instance and checks whether it uses the default port.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet4":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet4":::

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-768">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-768">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsExcludedCharacter">
      <MemberSignature Language="C#" Value="protected static bool IsExcludedCharacter (char character);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool IsExcludedCharacter(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsExcludedCharacter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function IsExcludedCharacter (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool IsExcludedCharacter(char character);" />
      <MemberSignature Language="F#" Value="static member IsExcludedCharacter : char -&gt; bool" Usage="System.Uri.IsExcludedCharacter character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="a6875-769">要测试的字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-769">The character to test.</span></span></param>
        <summary><span data-ttu-id="a6875-770">确定是否应转义指定的字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-770">Determines whether the specified character should be escaped.</span></span></summary>
        <returns><span data-ttu-id="a6875-771">如果应转义指定的字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-771"><see langword="true" /> if the specified character should be escaped; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFile">
      <MemberSignature Language="C#" Value="public bool IsFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFile" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFile { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFile : bool" Usage="System.Uri.IsFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-772">获取一个值，该值指示指定的 <see cref="T:System.Uri" /> 是否为文件 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-772">Gets a value that indicates whether the specified <see cref="T:System.Uri" /> is a file URI.</span></span></summary>
        <value><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> is a file URI; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-774"><xref:System.Uri.IsFile%2A> `true` 当属性等于时，属性为 <xref:System.Uri.Scheme%2A> <xref:System.Uri.UriSchemeFile> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-774">The <xref:System.Uri.IsFile%2A> property is `true` when the <xref:System.Uri.Scheme%2A> property equals <xref:System.Uri.UriSchemeFile>.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-775">下面的示例创建一个 <xref:System.Uri> 实例，并确定它是否为文件 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-775">The following example creates a <xref:System.Uri> instance and determines whether it is a file URI.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet6":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs"  id="Snippet6":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet6":::

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-776">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-776">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsHexDigit">
      <MemberSignature Language="C#" Value="public static bool IsHexDigit (char character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHexDigit(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsHexDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHexDigit (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHexDigit(char character);" />
      <MemberSignature Language="F#" Value="static member IsHexDigit : char -&gt; bool" Usage="System.Uri.IsHexDigit character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="a6875-777">要验证的字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-777">The character to validate.</span></span></param>
        <summary><span data-ttu-id="a6875-778">确定指定的字符是否为有效的十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="a6875-778">Determines whether a specified character is a valid hexadecimal digit.</span></span></summary>
        <returns><span data-ttu-id="a6875-779">如果字符是有效的十六进制数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-779"><see langword="true" /> if the character is a valid hexadecimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hexadecimal digits are the digits 0 to 9 and the letters A-F or a-f.
  
## Examples  
 <span data-ttu-id="a6875-781">下面的示例确定字符是否为十六进制字符，如果为，则将相应的十进制值写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-781">The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet1":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHexEncoding">
      <MemberSignature Language="C#" Value="public static bool IsHexEncoding (string pattern, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHexEncoding(string pattern, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsHexEncoding(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHexEncoding (pattern As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHexEncoding(System::String ^ pattern, int index);" />
      <MemberSignature Language="F#" Value="static member IsHexEncoding : string * int -&gt; bool" Usage="System.Uri.IsHexEncoding (pattern, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="a6875-782">要检查的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-782">The string to check.</span></span></param>
        <param name="index"><span data-ttu-id="a6875-783">检查十六进制编码的 <paramref name="pattern" /> 中的位置。</span><span class="sxs-lookup"><span data-stu-id="a6875-783">The location in <paramref name="pattern" /> to check for hexadecimal encoding.</span></span></param>
        <summary><span data-ttu-id="a6875-784">确定字符串中的一个字符是否为十六进制编码。</span><span class="sxs-lookup"><span data-stu-id="a6875-784">Determines whether a character in a string is hexadecimal encoded.</span></span></summary>
        <returns><span data-ttu-id="a6875-785">如果 <paramref name="pattern" /> 在指定位置进行了十六进制编码，则该值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-785"><see langword="true" /> if <paramref name="pattern" /> is hexadecimal encoded at the specified location; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <ph id="ph1">&lt;xref:System.Uri.IsHexEncoding%2A&gt;</ph> method checks for hexadecimal encoding that follows the pattern "%hexhex" in a string, where "hex" is a digit from 0 to 9 or a letter from A-F (case-insensitive).
  
## Examples  
 <span data-ttu-id="a6875-787">下面的代码示例确定字符是否为十六进制编码，如果是，则将等效字符写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-787">The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet2":::
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoopback">
      <MemberSignature Language="C#" Value="public bool IsLoopback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsLoopback" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoopback { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoopback : bool" Usage="System.Uri.IsLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-788">获取一个值，该值指示指定的 <see cref="T:System.Uri" /> 是否引用本地主机。</span><span class="sxs-lookup"><span data-stu-id="a6875-788">Gets a value that indicates whether the specified <see cref="T:System.Uri" /> references the local host.</span></span></summary>
        <value><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> references the local host; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-790"><xref:System.Uri.IsLoopback%2A>`true`如果创建此实例时指定的 uri 是127.0.0.1、环回或 localhost，或者 uri 未指定主机信息 (例如，file:///c:Dir/file.txt) ，则返回。</span><span class="sxs-lookup"><span data-stu-id="a6875-790"><xref:System.Uri.IsLoopback%2A> returns `true` if the URI specified when this instance was created was 127.0.0.1, loopback, or localhost, or if the URI did not specify host information (for example, file:///c:Dir/file.txt).</span></span> <span data-ttu-id="a6875-791">所有其他 Uri 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-791">All other URIs return `false`.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-792">下面的示例创建一个 <xref:System.Uri> 实例，并确定它是否引用了本地主机。</span><span class="sxs-lookup"><span data-stu-id="a6875-792">The following example creates a <xref:System.Uri> instance and determines whether it references a local host.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet6":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" id="Snippet6":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet6":::

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-793">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-793">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReservedCharacter">
      <MemberSignature Language="C#" Value="protected virtual bool IsReservedCharacter (char character);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsReservedCharacter(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsReservedCharacter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsReservedCharacter (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsReservedCharacter(char character);" />
      <MemberSignature Language="F#" Value="abstract member IsReservedCharacter : char -&gt; bool&#xA;override this.IsReservedCharacter : char -&gt; bool" Usage="uri.IsReservedCharacter character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="a6875-794">要测试的字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-794">The character to test.</span></span></param>
        <summary><span data-ttu-id="a6875-795">确定指定的字符是否为保留字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-795">Determines whether the specified character is a reserved character.</span></span></summary>
        <returns><span data-ttu-id="a6875-796">如果指定的字符是保留字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-796"><see langword="true" /> if the specified character is a reserved character otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnc">
      <MemberSignature Language="C#" Value="public bool IsUnc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnc" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsUnc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnc As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnc { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnc : bool" Usage="System.Uri.IsUnc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-797">获取一个值，该值指示指定的 <see cref="T:System.Uri" /> 是否为统一命名约定 (UNC) 路径。</span><span class="sxs-lookup"><span data-stu-id="a6875-797">Gets a value that indicates whether the specified <see cref="T:System.Uri" /> is a universal naming convention (UNC) path.</span></span></summary>
        <value><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> is a UNC path; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-799"><xref:System.Uri.IsUnc%2A> `true` 如果指定的 <xref:System.Uri> 实例是 UNC 路径 (如 `\\server\folder` 、//server 或) ，则属性为 `file://server/folder` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-799">The <xref:System.Uri.IsUnc%2A> property is `true` if the specified <xref:System.Uri> instance is a UNC path (such as `\\server\folder`, //server, or `file://server/folder`).</span></span> <span data-ttu-id="a6875-800">`true`如果 URI 具有 file://方案并且指定了主机组件，则此属性始终返回。</span><span class="sxs-lookup"><span data-stu-id="a6875-800">This property always returns `true` if the URI has the file:// scheme and specifies a host component.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-801">下面的示例创建一个 <xref:System.Uri> 实例，并确定它是否为 UNC 路径。</span><span class="sxs-lookup"><span data-stu-id="a6875-801">The following example creates a <xref:System.Uri> instance and determines whether it is a UNC path.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet6":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet6":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet6":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-802">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-802">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsWellFormedOriginalString">
      <MemberSignature Language="C#" Value="public bool IsWellFormedOriginalString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsWellFormedOriginalString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsWellFormedOriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Function IsWellFormedOriginalString () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsWellFormedOriginalString();" />
      <MemberSignature Language="F#" Value="member this.IsWellFormedOriginalString : unit -&gt; bool" Usage="uri.IsWellFormedOriginalString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6875-803">指示用于构造此 <see cref="T:System.Uri" /> 的字符串是否格式良好，以及它是否不需要进一步转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-803">Indicates whether the string used to construct this <see cref="T:System.Uri" /> was well-formed and does not require further escaping.</span></span></summary>
        <returns><span data-ttu-id="a6875-804">如果该字符串格式正确，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-804"><see langword="true" /> if the string was well-formed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The string is considered to be well-formed in accordance with RFC 2396 and RFC 2732 by default. <span data-ttu-id="a6875-806">如果国际资源标识符 (IRIs) 或国际化域名 (IDN) 分析已启用，则根据 RFC 3986 和 RFC 3987，将该字符串视为格式正确</span><span class="sxs-lookup"><span data-stu-id="a6875-806">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is considered to be well-formed in accordance with RFC 3986 and RFC 3987</span></span>  
  
 <span data-ttu-id="a6875-807">如果出现下列任一情况，则认为字符串格式不正确，导致方法返回 false。</span><span class="sxs-lookup"><span data-stu-id="a6875-807">The string is considered poorly formed, causing the method to return false, if any of the following conditions occur.</span></span>  
  
|<span data-ttu-id="a6875-808">错误</span><span class="sxs-lookup"><span data-stu-id="a6875-808">Error</span></span>|<span data-ttu-id="a6875-809">示例</span><span class="sxs-lookup"><span data-stu-id="a6875-809">Example</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="a6875-810">字符串未正确转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-810">The string is not correctly escaped.</span></span>|`http://www.contoso.com/path???/file name`|  
|<span data-ttu-id="a6875-811">字符串是 <xref:System.Uri> 表示隐式文件的绝对 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-811">The string is an absolute <xref:System.Uri> that represents an implicit file <xref:System.Uri>.</span></span>|`c:\\directory\filename`|  
|<span data-ttu-id="a6875-812">字符串是一个绝对 URI，它在路径之前缺少一个斜杠。</span><span class="sxs-lookup"><span data-stu-id="a6875-812">The string is an absolute URI that is missing a slash before the path.</span></span>|`file://c:/directory/filename`|  
|<span data-ttu-id="a6875-813">该字符串包含非转义反斜杠，即使它们被视为正斜杠也是如此。</span><span class="sxs-lookup"><span data-stu-id="a6875-813">The string contains unescaped backslashes even if they are treated as forward slashes.</span></span>|`http:\\\host/path/file`|  
|<span data-ttu-id="a6875-814">该字符串表示层次结构的绝对路径 <xref:System.Uri> ，并且不包含 "：//"。</span><span class="sxs-lookup"><span data-stu-id="a6875-814">The string represents a hierarchical absolute <xref:System.Uri> and does not contain "://".</span></span>|`www.contoso.com/path/file`|  
|<span data-ttu-id="a6875-815">的分析器 <xref:System.Uri.Scheme%2A?displayProperty=nameWithType> 指示原始字符串格式不正确。</span><span class="sxs-lookup"><span data-stu-id="a6875-815">The parser for the <xref:System.Uri.Scheme%2A?displayProperty=nameWithType> indicates that the original string was not well-formed.</span></span>|<span data-ttu-id="a6875-816">该示例取决于 URI 的方案。</span><span class="sxs-lookup"><span data-stu-id="a6875-816">The example depends on the scheme of the URI.</span></span>|  
  
 <span data-ttu-id="a6875-817">默认情况下， <xref:System.Uri> 根据 rfc 2396 和 rfc 2732，用来构造此的字符串被视为格式正确。</span><span class="sxs-lookup"><span data-stu-id="a6875-817">By default, the string used to construct this <xref:System.Uri> are considered well-formed in accordance with RFC 2396 and RFC 2732.</span></span>  
  
 <span data-ttu-id="a6875-818">如果) 和国际化域名 (IRI 和国际化域名 (启用了 IDN) 支持，则用于构造此的字符串 <xref:System.Uri> 根据 rfc 3986 和 rfc 3987 被视为格式正确。</span><span class="sxs-lookup"><span data-stu-id="a6875-818">When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the string used to construct this <xref:System.Uri> are considered well-formed in accordance with RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="a6875-819">用于支持 IRI 的 Punycode 名称只包含 ASCII 字符，并且始终以 xn--前缀开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-819">Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix.</span></span>  
  
 <span data-ttu-id="a6875-820">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-820">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://www.ietf.org/"><span data-ttu-id="a6875-821">Internet 工程任务组 (IETF)</span><span class="sxs-lookup"><span data-stu-id="a6875-821">Internet Engineering Task Force (IETF)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsWellFormedUriString">
      <MemberSignature Language="C#" Value="public static bool IsWellFormedUriString (string uriString, UriKind uriKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWellFormedUriString(string uriString, valuetype System.UriKind uriKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWellFormedUriString (uriString As String, uriKind As UriKind) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWellFormedUriString(System::String ^ uriString, UriKind uriKind);" />
      <MemberSignature Language="F#" Value="static member IsWellFormedUriString : string * UriKind -&gt; bool" Usage="System.Uri.IsWellFormedUriString (uriString, uriKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uriKind" Type="System.UriKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="a6875-822">用于尝试构造 <see cref="T:System.Uri" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-822">The string used to attempt to construct a <see cref="T:System.Uri" />.</span></span></param>
        <param name="uriKind"><span data-ttu-id="a6875-823"><see cref="T:System.Uri" /> 中的 <paramref name="uriString" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="a6875-823">The type of the <see cref="T:System.Uri" /> in <paramref name="uriString" />.</span></span></param>
        <summary><span data-ttu-id="a6875-824">通过尝试用字符串构造一个 URI 来指示字符串是否为格式良好的，并确保字符串不需要进一步转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-824">Indicates whether the string is well-formed by attempting to construct a URI with the string and ensures that the string does not require further escaping.</span></span></summary>
        <returns><span data-ttu-id="a6875-825">如果该字符串格式正确，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-825"><see langword="true" /> if the string was well-formed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In versions of .NET before version 4.5, by default the string is considered well-formed in accordance with RFC 2396 and RFC 2732. <span data-ttu-id="a6875-827">如果国际资源标识符 (IRIs) 或国际化域名 (IDN) 分析已启用，则根据 RFC 3986 和 RFC 3987，字符串被视为格式正确。</span><span class="sxs-lookup"><span data-stu-id="a6875-827">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing are enabled, the string is considered well-formed in accordance with RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="a6875-828">从 .NET 4.5 开始，无论是否启用了 IRI 或 IDN，字符串始终根据 RFC 3986 和 RFC 3987 被视为格式正确。</span><span class="sxs-lookup"><span data-stu-id="a6875-828">Beginning in .NET 4.5, strings are always considered well-formed in accordance with RFC 3986 and RFC 3987, whether or not IRI or IDN are enabled.</span></span> <span data-ttu-id="a6875-829">但请注意，这仅适用于面向 .NET 4.5 或更高版本的应用程序。</span><span class="sxs-lookup"><span data-stu-id="a6875-829">Note, however, that this is only true for apps that target .NET 4.5 or later.</span></span> <span data-ttu-id="a6875-830">面向 .NET 4.0 的应用将调用兼容性代码，并体验旧 (4.5 之前) 的行为。</span><span class="sxs-lookup"><span data-stu-id="a6875-830">Apps that target .NET 4.0 invoke compatibility code, and experience the old (pre-4.5) behavior.</span></span>  
  
 <span data-ttu-id="a6875-831">如果出现下列任一情况，字符串将被视为格式不正确，从而导致方法返回 false</span><span class="sxs-lookup"><span data-stu-id="a6875-831">The string is considered poorly formed, causing the method to return false, if any of the following conditions occur</span></span>  
  
|<span data-ttu-id="a6875-832">错误</span><span class="sxs-lookup"><span data-stu-id="a6875-832">Error</span></span>|<span data-ttu-id="a6875-833">示例</span><span class="sxs-lookup"><span data-stu-id="a6875-833">Example</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="a6875-834">字符串未正确转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-834">The string is not correctly escaped.</span></span>|`http://www.contoso.com/path???/file name`|  
|<span data-ttu-id="a6875-835">字符串是 <xref:System.Uri> 表示隐式文件的绝对 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-835">The string is an absolute <xref:System.Uri> that represents an implicit file <xref:System.Uri>.</span></span>|`c:\\directory\filename`|  
|<span data-ttu-id="a6875-836">字符串是一个绝对 URI，它在路径之前缺少一个斜杠。</span><span class="sxs-lookup"><span data-stu-id="a6875-836">The string is an absolute URI that is missing a slash before the path.</span></span>|`file://c:/directory/filename`|  
|<span data-ttu-id="a6875-837">该字符串包含非转义反斜杠，即使它们将被视为正斜杠</span><span class="sxs-lookup"><span data-stu-id="a6875-837">The string contains unescaped backslashes even if they will be treated as forward slashes</span></span>|`http:\\\host/path/file`|  
|<span data-ttu-id="a6875-838">该字符串表示层次结构的绝对路径 <xref:System.Uri> ，并且不包含 "：//"</span><span class="sxs-lookup"><span data-stu-id="a6875-838">The string represents a hierarchical absolute <xref:System.Uri> and does not contain "://"</span></span>|`www.contoso.com/path/file`|  
|<span data-ttu-id="a6875-839">的分析器 <xref:System.Uri.Scheme%2A> 指示原始字符串格式不正确。</span><span class="sxs-lookup"><span data-stu-id="a6875-839">The parser for the <xref:System.Uri.Scheme%2A> indicates that the original string was not well-formed.</span></span>|<span data-ttu-id="a6875-840">该示例取决于 URI 的方案。</span><span class="sxs-lookup"><span data-stu-id="a6875-840">The example depends on the scheme of the URI.</span></span>|  
|<span data-ttu-id="a6875-841">从 .NET 4.5 开始，其第一段中 ) 带有冒号 ( "：" 的相对 Uri 不被视为格式正确。</span><span class="sxs-lookup"><span data-stu-id="a6875-841">Beginning with .NET 4.5, relative URIs with a colon (':') in their first segment are not considered well-formed.</span></span>|`2013.05.29_14:33:41`|  
  
 <span data-ttu-id="a6875-842">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-842">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://www.ietf.org/"><span data-ttu-id="a6875-843">Internet 工程任务组 (IETF)</span><span class="sxs-lookup"><span data-stu-id="a6875-843">Internet Engineering Task Force (IETF)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LocalPath">
      <MemberSignature Language="C#" Value="public string LocalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalPath" />
      <MemberSignature Language="DocId" Value="P:System.Uri.LocalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalPath : string" Usage="System.Uri.LocalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-844">获取文件名的本地操作系统表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-844">Gets a local operating-system representation of a file name.</span></span></summary>
        <value>The local operating-system representation of a file name.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-846">此属性返回的值未转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-846">The value returned by this property is unescaped.</span></span> <span data-ttu-id="a6875-847">如果路径被识别为 Windows 文件路径，则所有正斜杠 (/) 将被) 的反斜杠 (替换 \\ 。</span><span class="sxs-lookup"><span data-stu-id="a6875-847">If the path is recognized as a Windows file path, all forward slashes (/) are replaced by backward slashes (\\).</span></span>  
  
 <span data-ttu-id="a6875-848">对于 URI `file://computer/file.ext` ，绝对路径为 `/file.ext` ，本地路径为 `\\computer\file.ext` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-848">For the URI `file://computer/file.ext`, the absolute path is `/file.ext` and the local path is `\\computer\file.ext`.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-849">下面的示例创建一个 <xref:System.Uri> 实例，并将本地路径写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-849">The following example creates a <xref:System.Uri> instance and writes the local path to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet6":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs"  id="Snippet6":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet6"::: 

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-850">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-850">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeRelative">
      <MemberSignature Language="C#" Value="public string MakeRelative (Uri toUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MakeRelative(class System.Uri toUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.MakeRelative(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function MakeRelative (toUri As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MakeRelative(Uri ^ toUri);" />
      <MemberSignature Language="F#" Value="member this.MakeRelative : Uri -&gt; string" Usage="uri.MakeRelative toUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. Please use MakeRelativeUri(Uri uri). http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. Please use MakeRelativeUri(Uri uri). http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. Please use MakeRelativeUri(Uri uri). https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. Please use MakeRelativeUri(Uri uri). https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="toUri"><span data-ttu-id="a6875-851">与当前 URI 进行比较的 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-851">The URI to compare to the current URI.</span></span></param>
        <summary><span data-ttu-id="a6875-852">确定两个 <see cref="T:System.Uri" /> 实例之间的差异。</span><span class="sxs-lookup"><span data-stu-id="a6875-852">Determines the difference between two <see cref="T:System.Uri" /> instances.</span></span></summary>
        <returns><span data-ttu-id="a6875-853">如果此 URI 实例与 <paramref name="toUri" /> 的主机名和方案相同，则此方法返回一个表示相对 URI 的 <see cref="T:System.String" />。若将此相对 URI 追加到当前 URI 实例，就可以得到 <paramref name="toUri" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="a6875-853">If the hostname and scheme of this URI instance and <paramref name="toUri" /> are the same, then this method returns a <see cref="T:System.String" /> that represents a relative URI that, when appended to the current URI instance, yields the <paramref name="toUri" /> parameter.</span></span>  
  
<span data-ttu-id="a6875-854">如果主机名或方案不同，则此方法返回一个表示 <see cref="T:System.String" /> 参数的 <paramref name="toUri" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-854">If the hostname or scheme is different, then this method returns a <see cref="T:System.String" /> that represents the <paramref name="toUri" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table shows the URI instance, <ph id="ph1">`toUri`</ph>, and the results of calling <ph id="ph2">&lt;xref:System.Uri.MakeRelative%2A&gt;</ph>.  
  
|<span data-ttu-id="a6875-856">当前 URI 实例</span><span class="sxs-lookup"><span data-stu-id="a6875-856">Current URI instance</span></span>|`toUri`|<span data-ttu-id="a6875-857">返回值</span><span class="sxs-lookup"><span data-stu-id="a6875-857">Return value</span></span>|  
|--------------------------|-------------|------------------|  
|`http://www.contoso.com/`|`http://www.contoso.com/test/test.htm`|`test/test.htm`|  
|`http://www.contoso.com/test1/`|`http://www.contoso.com/`|`../`|  
|`http://www.contoso.com:8000/`|`http://www.contoso.com/test/test.htm`|`http://www.contoso.com/test/test.htm`|  
|`http://username@www.contoso.com/`|`http://www.contoso.com/test1/test1.txt`|`test1/test1.txt`|  
  
 <span data-ttu-id="a6875-858">如果在 URI 中存在，则忽略用户信息。</span><span class="sxs-lookup"><span data-stu-id="a6875-858">User information, if present in the URI, is ignored.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-859">下面的示例创建两个 <xref:System.Uri> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-859">The following example creates 2 <xref:System.Uri> instances.</span></span> <span data-ttu-id="a6875-860">路径信息中的差异写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-860">The difference in the path information is written to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet3":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-861"><paramref name="toUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-861"><paramref name="toUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-862">此实例代表一个相对 URI，而此方法仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-862">This instance represents a relative URI, and this method is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeRelativeUri">
      <MemberSignature Language="C#" Value="public Uri MakeRelativeUri (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri MakeRelativeUri(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.MakeRelativeUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function MakeRelativeUri (uri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ MakeRelativeUri(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.MakeRelativeUri : Uri -&gt; Uri" Usage="uri.MakeRelativeUri uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="a6875-863">与当前 URI 进行比较的 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-863">The URI to compare to the current URI.</span></span></param>
        <summary><span data-ttu-id="a6875-864">确定两个 <see cref="T:System.Uri" /> 实例之间的差异。</span><span class="sxs-lookup"><span data-stu-id="a6875-864">Determines the difference between two <see cref="T:System.Uri" /> instances.</span></span></summary>
        <returns><span data-ttu-id="a6875-865">如果此 URI 实例与 <paramref name="uri" /> 的主机名和方案相同，则此方法返回一个相对 <see cref="T:System.Uri" />。若将此相对 URI 追加到当前 URI 实例，就可以得到 <paramref name="uri" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-865">If the hostname and scheme of this URI instance and <paramref name="uri" /> are the same, then this method returns a relative <see cref="T:System.Uri" /> that, when appended to the current URI instance, yields <paramref name="uri" />.</span></span>  
  
<span data-ttu-id="a6875-866">如果主机名或方案不同，则此方法返回一个表示 <see cref="T:System.Uri" /> 参数的 <paramref name="uri" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-866">If the hostname or scheme is different, then this method returns a <see cref="T:System.Uri" /> that represents the <paramref name="uri" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table shows the URI instance, <ph id="ph1">`toUri`</ph>, and the results of calling <ph id="ph2">&lt;xref:System.Uri.MakeRelativeUri%2A&gt;</ph>.  
  
|<span data-ttu-id="a6875-868">当前 URI 实例</span><span class="sxs-lookup"><span data-stu-id="a6875-868">Current URI instance</span></span>|`toUri`|<span data-ttu-id="a6875-869">返回值</span><span class="sxs-lookup"><span data-stu-id="a6875-869">Return value</span></span>|  
|--------------------------|-------------|------------------|  
|`http://www.contoso.com/`|`http://www.contoso.com/test/test.htm`|`test/test.htm`|  
|`http://www.contoso.com/test1/`|`http://www.contoso.com/`|`../`|  
|`http://www.contoso.com:8000/`|`http://www.contoso.com/test/test.htm`|`http://www.contoso.com/test/test.htm`|  
|`http://username@www.contoso.com/`|`http://www.contoso.com/test1/test1.txt`|`test1/test1.txt`|  
  
 <span data-ttu-id="a6875-870">如果在 URI 中存在，则忽略用户信息。</span><span class="sxs-lookup"><span data-stu-id="a6875-870">User information, if present in the URI, is ignored.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-871">下面的示例创建两个 <xref:System.Uri> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-871">The following example creates 2 <xref:System.Uri> instances.</span></span> <span data-ttu-id="a6875-872">路径信息中的差异写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-872">The difference in the path information is written to the console.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet3":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-873"><paramref name="uri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-873"><paramref name="uri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-874">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-874">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Uri uri1, Uri uri2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Uri uri1, class System.Uri uri2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.op_Equality(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (uri1 As Uri, uri2 As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Uri ^ uri1, Uri ^ uri2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Uri * Uri -&gt; bool" Usage="uri1 = uri2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri1" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uri2" Type="System.Uri" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri1"><span data-ttu-id="a6875-875">要与 <paramref name="uri2" /> 进行比较的 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-875">A URI to compare with <paramref name="uri2" />.</span></span></param>
        <param name="uri2"><span data-ttu-id="a6875-876">要与 <paramref name="uri1" /> 进行比较的 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-876">A URI to compare with <paramref name="uri1" />.</span></span></param>
        <summary><span data-ttu-id="a6875-877">确定两个 <see cref="T:System.Uri" /> 实例是否具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="a6875-877">Determines whether two <see cref="T:System.Uri" /> instances have the same value.</span></span></summary>
        <returns><span data-ttu-id="a6875-878">如果 <see cref="T:System.Uri" /> 实例等效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-878"><see langword="true" /> if the <see cref="T:System.Uri" /> instances are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This overload uses the <ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph> method to determine whether the two <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instances are equivalent. <span data-ttu-id="a6875-880"><xref:System.Uri.UserInfo%2A><xref:System.Uri.Fragment%2A>进行此比较时，将忽略和内容。</span><span class="sxs-lookup"><span data-stu-id="a6875-880"><xref:System.Uri.UserInfo%2A> and <xref:System.Uri.Fragment%2A> content is ignored when making this comparison.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-881">此示例从字符串创建三个 <xref:System.Uri> 实例并对它们进行比较，以确定它们是否表示相同的值。</span><span class="sxs-lookup"><span data-stu-id="a6875-881">This example creates three <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value.</span></span> <span data-ttu-id="a6875-882">`Address1` 和 `Address2` 都是相同的，因为 <xref:System.Uri.Fragment%2A> 此部分在此比较中被忽略。</span><span class="sxs-lookup"><span data-stu-id="a6875-882">`Address1` and `Address2` are the same because the <xref:System.Uri.Fragment%2A> portion is ignored for this comparison.</span></span> <span data-ttu-id="a6875-883">结果将写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-883">The outcome is written to the console.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp" id="Snippet5":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs" interactive="try-dotnet-method" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb" id="Snippet5"::: 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Uri uri1, Uri uri2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Uri uri1, class System.Uri uri2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.op_Inequality(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (uri1 As Uri, uri2 As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Uri ^ uri1, Uri ^ uri2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Uri * Uri -&gt; bool" Usage="System.Uri.op_Inequality (uri1, uri2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri1" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uri2" Type="System.Uri" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri1"><span data-ttu-id="a6875-884">要与 <paramref name="uri2" /> 进行比较的 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-884">A URI to compare with <paramref name="uri2" />.</span></span></param>
        <param name="uri2"><span data-ttu-id="a6875-885">要与 <paramref name="uri1" /> 进行比较的 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-885">A URI to compare with <paramref name="uri1" />.</span></span></param>
        <summary><span data-ttu-id="a6875-886">确定两个 <see cref="T:System.Uri" /> 实例是否具有不同的值。</span><span class="sxs-lookup"><span data-stu-id="a6875-886">Determines whether two <see cref="T:System.Uri" /> instances do not have the same value.</span></span></summary>
        <returns><span data-ttu-id="a6875-887">如果这两个 <see cref="T:System.Uri" /> 实例不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-887"><see langword="true" /> if the two <see cref="T:System.Uri" /> instances are not equal; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a6875-888">如果两者中任意一个参数为 <see langword="null" />，则此方法返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-888">If either parameter is <see langword="null" />, this method returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This overload uses the <ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph> method to determine whether the two <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instances are not equivalent. <span data-ttu-id="a6875-890"><xref:System.Uri.UserInfo%2A><xref:System.Uri.Fragment%2A>进行此比较时，将忽略和内容。</span><span class="sxs-lookup"><span data-stu-id="a6875-890"><xref:System.Uri.UserInfo%2A> and <xref:System.Uri.Fragment%2A> content is ignored when making this comparison.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-891">此示例从字符串创建三个 <xref:System.Uri> 实例并对它们进行比较，以确定它们是否表示相同的值。</span><span class="sxs-lookup"><span data-stu-id="a6875-891">This example creates three <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value.</span></span> <span data-ttu-id="a6875-892">`Address2` 和 `Address3` 不相同，因为 `Address3` 包含 <xref:System.Uri.Query%2A> 在中找不到的 `Address2` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-892">`Address2` and `Address3` are not the same because `Address3` contains a <xref:System.Uri.Query%2A> that is not found in `Address2`.</span></span> <span data-ttu-id="a6875-893">结果将写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-893">The outcome is written to the console.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp" id="Snippet5":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs" interactive="try-dotnet-method" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb" id="Snippet5"::: 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Uri.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Uri.OriginalString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-894">获取传递给 <see cref="T:System.Uri" /> 构造函数的原始 URI 字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-894">Gets the original URI string that was passed to the <see cref="T:System.Uri" /> constructor.</span></span></summary>
        <value>The exact URI specified when this instance was constructed; otherwise, <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-896">如果为构造函数指定的 URI 包含前导空格或尾随空格，则会保留这些空格。</span><span class="sxs-lookup"><span data-stu-id="a6875-896">If the URI specified to the constructor contained leading or trailing spaces, these spaces are preserved.</span></span>  
  
 <span data-ttu-id="a6875-897">此属性返回的值不同于 <xref:System.Uri.ToString%2A> 和 <xref:System.Uri.AbsoluteUri%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-897">The value returned by this property differs from <xref:System.Uri.ToString%2A> and <xref:System.Uri.AbsoluteUri%2A>.</span></span> <span data-ttu-id="a6875-898"><xref:System.Uri.ToString%2A> 返回 URI 的规范非转义形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-898"><xref:System.Uri.ToString%2A> returns the canonically unescaped form of the URI.</span></span> <span data-ttu-id="a6875-899"><xref:System.Uri.AbsoluteUri%2A> 返回 URI 的规范转义形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-899"><xref:System.Uri.AbsoluteUri%2A> returns the canonically escaped form of the URI.</span></span>  
  
 <span data-ttu-id="a6875-900">如果启用了国际资源标识符 (IRI) 并启用了国际化域名 (IDN) 支持，则 <xref:System.Uri.OriginalString%2A> 将返回具有 Punycode 主机名的原始非规范化字符串（如果用来初始化 <xref:System.Uri> 实例）。</span><span class="sxs-lookup"><span data-stu-id="a6875-900">When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, <xref:System.Uri.OriginalString%2A> returns the original non normalized string with Punycode host name if one was used to initialize the <xref:System.Uri> instance.</span></span> <span data-ttu-id="a6875-901">Punycode 名称只包含 ASCII 字符，并且始终以 xn-- 前缀开头。</span><span class="sxs-lookup"><span data-stu-id="a6875-901">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span>  
  
 <span data-ttu-id="a6875-902">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-902">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 <span data-ttu-id="a6875-903"><xref:System.Uri>序列化对象时， <xref:System.Uri.OriginalString%2A> 不会保留。</span><span class="sxs-lookup"><span data-stu-id="a6875-903">When a <xref:System.Uri> object is serialized, the <xref:System.Uri.OriginalString%2A> is not preserved.</span></span> <span data-ttu-id="a6875-904">序列化时，序列化过程使用完全转义和规范化 <xref:System.Uri.AbsoluteUri%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="a6875-904">The serialization process uses the fully escaped and canonicalized <xref:System.Uri.AbsoluteUri%2A> property when serializing.</span></span> <span data-ttu-id="a6875-905">对于 <xref:System.Uri> 包含 ipv6 地址的，ipv6 地址和作用域 ID 包括在序列化的 <xref:System.Uri> 对象中。</span><span class="sxs-lookup"><span data-stu-id="a6875-905">For a <xref:System.Uri> that contains an IPv6 address, the IPv6 address and the scope ID are included in the serialized <xref:System.Uri> object.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-906">下面的示例从字符串创建一个新的 <xref:System.Uri> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-906">The following example creates a new <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="a6875-907">它阐释了从返回的值 <xref:System.Uri.OriginalString%2A> （返回传递到构造函数的字符串）和对的调用 <xref:System.Uri.ToString%2A> （返回字符串的规范形式）之间的差异。</span><span class="sxs-lookup"><span data-stu-id="a6875-907">It illustrates the difference between the value returned from <xref:System.Uri.OriginalString%2A>, which returns the string that was passed to the constructor, and from a call to <xref:System.Uri.ToString%2A>, which returns the canonical form of the string.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs" interactive="try-dotnet-method" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb" id="Snippet3":::
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected virtual void Parse ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Parse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Parse" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Parse ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Parse();" />
      <MemberSignature Language="F#" Value="abstract member Parse : unit -&gt; unit&#xA;override this.Parse : unit -&gt; unit" Usage="uri.Parse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6875-908">分析当前实例的 URI 以确保它包含有效 URI 所需的所有部分。</span><span class="sxs-lookup"><span data-stu-id="a6875-908">Parses the URI of the current instance to ensure it contains all the parts required for a valid URI.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="a6875-909">从构造函数传来的 URI 无效。</span><span class="sxs-lookup"><span data-stu-id="a6875-909">The Uri passed from the constructor is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PathAndQuery">
      <MemberSignature Language="C#" Value="public string PathAndQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathAndQuery" />
      <MemberSignature Language="DocId" Value="P:System.Uri.PathAndQuery" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathAndQuery As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathAndQuery { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathAndQuery : string" Usage="System.Uri.PathAndQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-910">获取用问号 (?) 分隔的 <see cref="P:System.Uri.AbsolutePath" /> 和 <see cref="P:System.Uri.Query" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="a6875-910">Gets the <see cref="P:System.Uri.AbsolutePath" /> and <see cref="P:System.Uri.Query" /> properties separated by a question mark (?).</span></span></summary>
        <value>The <ph id="ph1">&lt;see cref="P:System.Uri.AbsolutePath" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Uri.Query" /&gt;</ph> properties separated by a question mark (?).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-912"><xref:System.Uri.PathAndQuery%2A>属性包含服务器上的绝对路径，以及与请求一起发送的查询信息。</span><span class="sxs-lookup"><span data-stu-id="a6875-912">The <xref:System.Uri.PathAndQuery%2A> property contains the absolute path on the server and the query information sent with the request.</span></span> <span data-ttu-id="a6875-913">与串联和属性完全相同 <xref:System.Uri.AbsolutePath%2A> <xref:System.Uri.Query%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-913">It is identical to concatenating the <xref:System.Uri.AbsolutePath%2A> and <xref:System.Uri.Query%2A> properties.</span></span>  
  
 <span data-ttu-id="a6875-914"><xref:System.Uri.PathAndQuery%2A>默认情况下，根据 RFC 2396 对属性进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-914">The <xref:System.Uri.PathAndQuery%2A> property is escaped according to RFC 2396 by default.</span></span> <span data-ttu-id="a6875-915">如果国际资源标识符 (IRIs) 或国际化域名 (IDN) 分析已启用，则 <xref:System.Uri.PathAndQuery%2A> 根据 rfc 3986 和 rfc 3987 对属性进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-915">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.PathAndQuery%2A> property is escaped according to RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="a6875-916">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-916">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-917">下面的示例将 URI 路径 (`/catalog/shownew.htm`) 和查询 (`?date=today`) 信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-917">The following example writes the URI path (`/catalog/shownew.htm`) and query (`?date=today`) information to the console.</span></span>
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CPP/source.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CS/source.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/VB/source.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-918">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-918">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Port" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Port : int" Usage="System.Uri.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-919">获取此 URI 的端口号。</span><span class="sxs-lookup"><span data-stu-id="a6875-919">Gets the port number of this URI.</span></span></summary>
        <value>The port number for this URI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-921">端口号定义用于联系 URI 中引用的服务器的协议端口。</span><span class="sxs-lookup"><span data-stu-id="a6875-921">The port number defines the protocol port used for contacting the server referenced in the URI.</span></span> <span data-ttu-id="a6875-922">如果未将端口指定为 URI 的一部分，则属性将 <xref:System.Uri.Port%2A> 返回协议的默认值。</span><span class="sxs-lookup"><span data-stu-id="a6875-922">If a port is not specified as part of the URI, the <xref:System.Uri.Port%2A> property returns the default value for the protocol.</span></span> <span data-ttu-id="a6875-923">如果没有默认端口号，则此属性返回-1。</span><span class="sxs-lookup"><span data-stu-id="a6875-923">If there is no default port number, this property returns -1.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-924">下面的示例将 URI 端口号写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-924">The following example writes the URI port number to the console.</span></span> <span data-ttu-id="a6875-925">在这种情况下，值为 HTTP 端口80的默认端口号。</span><span class="sxs-lookup"><span data-stu-id="a6875-925">In this case, the value is the default port number for HTTP, port 80.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Port Example/CPP/source.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Port Example/CS/source.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Port Example/VB/source.vb" id="Snippet1":::
 
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-926">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-926">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public string Query { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Query" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Query" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Query As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Query { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Query : string" Usage="System.Uri.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-927">获取指定 URI 中包括的任何查询信息。</span><span class="sxs-lookup"><span data-stu-id="a6875-927">Gets any query information included in the specified URI.</span></span></summary>
        <value>Any query information included in the specified URI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-929"><xref:System.Uri.Query%2A>属性包含 URI 中包括的任何查询信息。</span><span class="sxs-lookup"><span data-stu-id="a6875-929">The <xref:System.Uri.Query%2A> property contains any query information included in the URI.</span></span> <span data-ttu-id="a6875-930">查询信息通过问号 (？ ) 与路径信息分开，并继续到 URI 的末尾。</span><span class="sxs-lookup"><span data-stu-id="a6875-930">Query information is separated from the path information by a question mark (?) and continues to the end of the URI.</span></span> <span data-ttu-id="a6875-931">返回的查询信息包括前导问号。</span><span class="sxs-lookup"><span data-stu-id="a6875-931">The query information returned includes the leading question mark.</span></span>  
  
 <span data-ttu-id="a6875-932">默认情况下，根据 RFC 2396 对查询信息进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-932">The query information is escaped according to RFC 2396 by default.</span></span> <span data-ttu-id="a6875-933">如果国际资源标识符 (IRIs) 或国际化域名 (IDN) 分析已启用，则根据 RFC 3986 和 RFC 3987 对查询信息进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-933">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the query information is escaped according to RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="a6875-934">有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-934">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-935">下面的示例将查询写入 `?date=today` 控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-935">The following example writes the query `?date=today` to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CPP/source.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CS/source.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/VB/source.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-936">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-936">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.Uri.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-937">获取此 URI 的方案名称。</span><span class="sxs-lookup"><span data-stu-id="a6875-937">Gets the scheme name for this URI.</span></span></summary>
        <value>The scheme for this URI, converted to lowercase.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-939"><xref:System.Uri.Scheme%2A>属性返回用于初始化实例的方案 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-939">The <xref:System.Uri.Scheme%2A> property returns the scheme used to initialize the <xref:System.Uri> instance.</span></span> <span data-ttu-id="a6875-940">此属性不指示已识别用于初始化实例的方案 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-940">This property does not indicate that the scheme used to initialize the <xref:System.Uri> instance was recognized.</span></span>  
  
 <span data-ttu-id="a6875-941">下表显示了属性返回的一些可能值的示例 <xref:System.Uri.Scheme%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-941">The following table shows examples of some possible values returned by the <xref:System.Uri.Scheme%2A> property.</span></span>  
  
|<span data-ttu-id="a6875-942">方案</span><span class="sxs-lookup"><span data-stu-id="a6875-942">Scheme</span></span>|<span data-ttu-id="a6875-943">描述</span><span class="sxs-lookup"><span data-stu-id="a6875-943">Description</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="a6875-944">文件</span><span class="sxs-lookup"><span data-stu-id="a6875-944">file</span></span>|<span data-ttu-id="a6875-945">资源是本地计算机上的文件。</span><span class="sxs-lookup"><span data-stu-id="a6875-945">The resource is a file on the local computer.</span></span>|  
|<span data-ttu-id="a6875-946">ftp</span><span class="sxs-lookup"><span data-stu-id="a6875-946">ftp</span></span>|<span data-ttu-id="a6875-947">资源通过 FTP 访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-947">The resource is accessed through FTP.</span></span>|  
|<span data-ttu-id="a6875-948">gopher</span><span class="sxs-lookup"><span data-stu-id="a6875-948">gopher</span></span>|<span data-ttu-id="a6875-949">资源可通过 Gopher 协议进行访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-949">The resource is accessed through the Gopher protocol.</span></span>|  
|<span data-ttu-id="a6875-950">http</span><span class="sxs-lookup"><span data-stu-id="a6875-950">http</span></span>|<span data-ttu-id="a6875-951">资源可通过 HTTP 访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-951">The resource is accessed through HTTP.</span></span>|  
|<span data-ttu-id="a6875-952">https</span><span class="sxs-lookup"><span data-stu-id="a6875-952">https</span></span>|<span data-ttu-id="a6875-953">资源通过 SSL 加密的 HTTP 访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-953">The resource is accessed through SSL-encrypted HTTP.</span></span>|  
|<span data-ttu-id="a6875-954">ldap</span><span class="sxs-lookup"><span data-stu-id="a6875-954">ldap</span></span>|<span data-ttu-id="a6875-955">资源通过 LDAP 协议进行访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-955">The resource is accessed through the LDAP protocol.</span></span>|  
|<span data-ttu-id="a6875-956">mailto</span><span class="sxs-lookup"><span data-stu-id="a6875-956">mailto</span></span>|<span data-ttu-id="a6875-957">该资源是一个电子邮件地址，可通过 SMTP 协议进行访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-957">The resource is an email address and accessed through the SMTP protocol.</span></span>|  
|<span data-ttu-id="a6875-958">net.pipe</span><span class="sxs-lookup"><span data-stu-id="a6875-958">net.pipe</span></span>|<span data-ttu-id="a6875-959">通过命名管道访问资源。</span><span class="sxs-lookup"><span data-stu-id="a6875-959">The resource is accessed through a named pipe.</span></span>|  
|<span data-ttu-id="a6875-960">net.tcp</span><span class="sxs-lookup"><span data-stu-id="a6875-960">net.tcp</span></span>|<span data-ttu-id="a6875-961">可从 TCP 终结点访问该资源。</span><span class="sxs-lookup"><span data-stu-id="a6875-961">The resource is accessed from TCP endpoint.</span></span>|  
|<span data-ttu-id="a6875-962">news</span><span class="sxs-lookup"><span data-stu-id="a6875-962">news</span></span>|<span data-ttu-id="a6875-963">资源可通过 NNTP 协议进行访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-963">The resource is accessed through the NNTP protocol.</span></span>|  
|<span data-ttu-id="a6875-964">nntp</span><span class="sxs-lookup"><span data-stu-id="a6875-964">nntp</span></span>|<span data-ttu-id="a6875-965">资源可通过 NNTP 协议进行访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-965">The resource is accessed through the NNTP protocol.</span></span>|  
|<span data-ttu-id="a6875-966">telnet</span><span class="sxs-lookup"><span data-stu-id="a6875-966">telnet</span></span>|<span data-ttu-id="a6875-967">资源可通过 TELNET 协议进行访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-967">The resource is accessed through the TELNET protocol.</span></span>|  
|<span data-ttu-id="a6875-968">uuid</span><span class="sxs-lookup"><span data-stu-id="a6875-968">uuid</span></span>|<span data-ttu-id="a6875-969">资源是通过用于与服务进行通信的唯一 UUID 终结点名称访问的。</span><span class="sxs-lookup"><span data-stu-id="a6875-969">The resource is accessed through a unique UUID endpoint name for communicating with a service.</span></span>|
  
## Examples  
 <span data-ttu-id="a6875-970">下面的示例将 (http) 的方案名称写入 URI 的控制台 `http://www.contoso.com/` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-970">The following example writes the scheme name (http) to the console for the `http://www.contoso.com/` URI.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Scheme Example/CPP/source.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Scheme Example/CS/source.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Scheme Example/VB/source.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-971">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-971">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SchemeDelimiter">
      <MemberSignature Language="C#" Value="public static readonly string SchemeDelimiter;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SchemeDelimiter" />
      <MemberSignature Language="DocId" Value="F:System.Uri.SchemeDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SchemeDelimiter As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SchemeDelimiter;" />
      <MemberSignature Language="F#" Value=" staticval mutable SchemeDelimiter : string" Usage="System.Uri.SchemeDelimiter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-972">指定将通讯协议方案同 URI 的地址部分分开的字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-972">Specifies the characters that separate the communication protocol scheme from the address portion of the URI.</span></span> <span data-ttu-id="a6875-973">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="a6875-973">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a string from <ph id="ph1">&lt;xref:System.Uri.UriSchemeHttp&gt;</ph>, <ph id="ph2">&lt;xref:System.Uri.SchemeDelimiter&gt;</ph>, and an address. <span data-ttu-id="a6875-975"><xref:System.Uri>然后从字符串创建实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-975">A <xref:System.Uri> instance is then created from the string.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet17":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet17":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet17":::
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Segments">
      <MemberSignature Language="C#" Value="public string[] Segments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Segments" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Segments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Segments As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Segments { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Segments : string[]" Usage="System.Uri.Segments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-976">获取包含构成指定 URI 的路径段的数组。</span><span class="sxs-lookup"><span data-stu-id="a6875-976">Gets an array containing the path segments that make up the specified URI.</span></span></summary>
        <value>The path segments that make up the specified URI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-978"><xref:System.Uri.Segments%2A>属性返回一个字符串数组，其中包含 (子字符串的 "段") 构成 URI 的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="a6875-978">The <xref:System.Uri.Segments%2A> property returns an array of strings containing the "segments" (substrings) that form the URI's absolute path.</span></span> <span data-ttu-id="a6875-979">第一段是通过分析其第一个字符的绝对路径获取的，直到达到斜杠 (/) 或路径的末尾。</span><span class="sxs-lookup"><span data-stu-id="a6875-979">The first segment is obtained by parsing the absolute path from its first character until you reach a slash (/) or the end of the path.</span></span> <span data-ttu-id="a6875-980">每个附加段都从前面段之后的第一个字符开始，并以路径的下一个斜杠或末尾结束。</span><span class="sxs-lookup"><span data-stu-id="a6875-980">Each additional segment begins at the first character after the preceding segment, and terminates with the next slash or the end of the path.</span></span> <span data-ttu-id="a6875-981"> (URI 的绝对路径包含主机和端口之后以及查询和片段之前的所有内容。 ) </span><span class="sxs-lookup"><span data-stu-id="a6875-981">(A URI's absolute path contains everything after the host and port and before the query and fragment.)</span></span>  
  
 <span data-ttu-id="a6875-982">下面的示例显示了两个 Uri 的绝对路径和段。</span><span class="sxs-lookup"><span data-stu-id="a6875-982">The following example shows the absolute path and segments for two URIs.</span></span> <span data-ttu-id="a6875-983">第二个示例说明片段和查询不是绝对路径的一部分，因此不是段。</span><span class="sxs-lookup"><span data-stu-id="a6875-983">The second example illustrates that the fragment and query are not part of the absolute path and therefore are not segments.</span></span>  
  
 <span data-ttu-id="a6875-984">绝对 URI：</span><span class="sxs-lookup"><span data-stu-id="a6875-984">Absolute URI:</span></span>  
 `http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm`
  
 <span data-ttu-id="a6875-985">绝对路径：</span><span class="sxs-lookup"><span data-stu-id="a6875-985">Absolute path:</span></span>  
 <span data-ttu-id="a6875-986">/Chapters/Chapter1/Sections/Section1.htm</span><span class="sxs-lookup"><span data-stu-id="a6875-986">/Chapters/Chapter1/Sections/Section1.htm</span></span>  
  
 <span data-ttu-id="a6875-987">边</span><span class="sxs-lookup"><span data-stu-id="a6875-987">Segments:</span></span>  
 - /
 - <span data-ttu-id="a6875-988">关于</span><span class="sxs-lookup"><span data-stu-id="a6875-988">Chapters/</span></span>
 - <span data-ttu-id="a6875-989">Chapter1.txt</span><span class="sxs-lookup"><span data-stu-id="a6875-989">Chapter1/</span></span>
 - <span data-ttu-id="a6875-990">个</span><span class="sxs-lookup"><span data-stu-id="a6875-990">Sections/</span></span>
 - <span data-ttu-id="a6875-991">Section1.htm</span><span class="sxs-lookup"><span data-stu-id="a6875-991">Section1.htm</span></span>  
  
 <span data-ttu-id="a6875-992">绝对 URI：</span><span class="sxs-lookup"><span data-stu-id="a6875-992">Absolute URI:</span></span>  
 `http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm#page1?answer=NO`
  
 <span data-ttu-id="a6875-993">绝对路径：</span><span class="sxs-lookup"><span data-stu-id="a6875-993">Absolute path:</span></span>  
 <span data-ttu-id="a6875-994">/Chapters/Chapter1/Sections/Section1.htm</span><span class="sxs-lookup"><span data-stu-id="a6875-994">/Chapters/Chapter1/Sections/Section1.htm</span></span>  
  
 <span data-ttu-id="a6875-995">边</span><span class="sxs-lookup"><span data-stu-id="a6875-995">Segments:</span></span>  
 - /
 - <span data-ttu-id="a6875-996">关于</span><span class="sxs-lookup"><span data-stu-id="a6875-996">Chapters/</span></span>
 - <span data-ttu-id="a6875-997">Chapter1.txt</span><span class="sxs-lookup"><span data-stu-id="a6875-997">Chapter1/</span></span>
 - <span data-ttu-id="a6875-998">个</span><span class="sxs-lookup"><span data-stu-id="a6875-998">Sections/</span></span>
 - <span data-ttu-id="a6875-999">Section1.htm</span><span class="sxs-lookup"><span data-stu-id="a6875-999">Section1.htm</span></span>  
  
 <span data-ttu-id="a6875-1000">请注意，因为绝对路径以 "/" 开头，所以第一个段包含它，而不包含任何其他内容。</span><span class="sxs-lookup"><span data-stu-id="a6875-1000">Note that because the absolute path starts with a '/', the first segment contains it and nothing else.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-1001">下面的示例创建一个 <xref:System.Uri> 具有3个段的实例，并在屏幕上显示这些段。</span><span class="sxs-lookup"><span data-stu-id="a6875-1001">The following example creates a <xref:System.Uri> instance with 3 segments and displays the segments on the screen.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet5":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet5":::

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-1002">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-1002">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (serializationInfo As SerializationInfo, streamingContext As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="uri.System.Runtime.Serialization.ISerializable.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="a6875-1003">序列化 <see cref="T:System.Uri" /> 所需的信息。</span><span class="sxs-lookup"><span data-stu-id="a6875-1003">The information required to serialize the <see cref="T:System.Uri" />.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="a6875-1004">一个对象，该对象包含与 <see cref="T:System.Uri" /> 相关联的序列化流的源和目标。</span><span class="sxs-lookup"><span data-stu-id="a6875-1004">An object containing the source and destination of the serialized stream associated with the <see cref="T:System.Uri" />.</span></span></param>
        <summary><span data-ttu-id="a6875-1005">返回序列化当前实例所需的数据。</span><span class="sxs-lookup"><span data-stu-id="a6875-1005">Returns the data needed to serialize the current instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uri.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6875-1006">获取指定的 <see cref="T:System.Uri" /> 实例的规范化字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-1006">Gets a canonical string representation for the specified <see cref="T:System.Uri" /> instance.</span></span></summary>
        <returns><span data-ttu-id="a6875-1007"><see cref="T:System.Uri" /> 实例的非转义规范化表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-1007">The unescaped canonical representation of the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="a6875-1008">除了 #、? 和 %，所有字符均为非转义字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-1008">All characters are unescaped except #, ?, and %.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The string returned by this method does not contain port information when the port is the default port for the scheme.  
  
> [!NOTE]
> <span data-ttu-id="a6875-1010">方法返回的字符串 <xref:System.Uri.ToString%2A> 可能包含控制字符，这些字符可能会损坏控制台应用程序的状态。</span><span class="sxs-lookup"><span data-stu-id="a6875-1010">The string returned by the <xref:System.Uri.ToString%2A> method may contain control characters, which can corrupt the state of a console application.</span></span> <span data-ttu-id="a6875-1011">可以将 <xref:System.Uri.GetComponents%2A> 方法与格式一起使用 <xref:System.UriFormat.SafeUnescaped?displayProperty=nameWithType> ，以从返回的字符串中删除控制字符。</span><span class="sxs-lookup"><span data-stu-id="a6875-1011">You can use the <xref:System.Uri.GetComponents%2A> method with the <xref:System.UriFormat.SafeUnescaped?displayProperty=nameWithType> format to remove control characters from the returned string.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-1012">下面的示例从字符串创建一个新的 <xref:System.Uri> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6875-1012">The following example creates a new <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="a6875-1013">它阐释了从返回的值 <xref:System.Uri.OriginalString%2A> （返回传递到构造函数的字符串）和对的调用 <xref:System.Uri.ToString%2A> （返回字符串的规范形式）之间的差异。</span><span class="sxs-lookup"><span data-stu-id="a6875-1013">It illustrates the difference between the value returned from <xref:System.Uri.OriginalString%2A>, which returns the string that was passed to the constructor, and from a call to <xref:System.Uri.ToString%2A>, which returns the canonical form of the string.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet7":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet7":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet7":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryCreate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6875-1014">创建一个新的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1014">Creates a new <see cref="T:System.Uri" />.</span></span> <span data-ttu-id="a6875-1015">在无法创建 <see cref="T:System.Uri" /> 时不引发异常。</span><span class="sxs-lookup"><span data-stu-id="a6875-1015">Does not throw an exception if the <see cref="T:System.Uri" /> cannot be created.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (string uriString, UriKind uriKind, out Uri result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(string uriString, valuetype System.UriKind uriKind, [out] class System.Uri&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (uriString As String, uriKind As UriKind, ByRef result As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(System::String ^ uriString, UriKind uriKind, [Runtime::InteropServices::Out] Uri ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : string * UriKind * Uri -&gt; bool" Usage="System.Uri.TryCreate (uriString, uriKind, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uriKind" Type="System.UriKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Uri" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="a6875-1016"><see cref="T:System.Uri" /> 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-1016">The string representation of the <see cref="T:System.Uri" />.</span></span></param>
        <param name="uriKind"><span data-ttu-id="a6875-1017">URI 的类型。</span><span class="sxs-lookup"><span data-stu-id="a6875-1017">The type of the Uri.</span></span></param>
        <param name="result"><span data-ttu-id="a6875-1018">此方法返回时，包含构造的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1018">When this method returns, contains the constructed <see cref="T:System.Uri" />.</span></span></param>
        <summary><span data-ttu-id="a6875-1019">使用指定的 <see cref="T:System.Uri" /> 实例和 <see cref="T:System.String" /> 创建一个新的 <see cref="T:System.UriKind" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1019">Creates a new <see cref="T:System.Uri" /> using the specified <see cref="T:System.String" /> instance and a <see cref="T:System.UriKind" />.</span></span></summary>
        <returns><span data-ttu-id="a6875-1020">如果成功创建了 <see cref="T:System.Uri" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1020"><see langword="true" /> if the <see cref="T:System.Uri" /> was successfully created; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If this method returns <ph id="ph1">`true`</ph>, the new <ph id="ph2">&lt;xref:System.Uri&gt;</ph> is in <ph id="ph3">`result`</ph>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (Uri baseUri, string relativeUri, out Uri result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(class System.Uri baseUri, string relativeUri, [out] class System.Uri&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (baseUri As Uri, relativeUri As String, ByRef result As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(Uri ^ baseUri, System::String ^ relativeUri, [Runtime::InteropServices::Out] Uri ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : Uri * string * Uri -&gt; bool" Usage="System.Uri.TryCreate (baseUri, relativeUri, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="relativeUri" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Uri" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="a6875-1022">基 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-1022">The base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="a6875-1023">要添加到基 <see cref="T:System.Uri" /> 的相对 URI 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-1023">The string representation of the relative URI to add to the base <see cref="T:System.Uri" />.</span></span></param>
        <param name="result"><span data-ttu-id="a6875-1024">此方法返回时，包含从 <see cref="T:System.Uri" /> 和 <paramref name="baseUri" /> 构造的 <paramref name="relativeUri" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1024">When this method returns, contains a <see cref="T:System.Uri" /> constructed from <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span> <span data-ttu-id="a6875-1025">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="a6875-1025">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="a6875-1026">使用指定基和相对 <see cref="T:System.Uri" /> 实例创建一个新的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1026">Creates a new <see cref="T:System.Uri" /> using the specified base and relative <see cref="T:System.String" /> instances.</span></span></summary>
        <returns><span data-ttu-id="a6875-1027">如果成功创建了 <see cref="T:System.Uri" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1027"><see langword="true" /> if the <see cref="T:System.Uri" /> was successfully created; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If this method returns <ph id="ph1">`true`</ph>, the new <ph id="ph2">&lt;xref:System.Uri&gt;</ph> is in <ph id="ph3">`result`</ph>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (Uri baseUri, Uri relativeUri, out Uri result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(class System.Uri baseUri, class System.Uri relativeUri, [out] class System.Uri&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (baseUri As Uri, relativeUri As Uri, ByRef result As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(Uri ^ baseUri, Uri ^ relativeUri, [Runtime::InteropServices::Out] Uri ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : Uri * Uri * Uri -&gt; bool" Usage="System.Uri.TryCreate (baseUri, relativeUri, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="relativeUri" Type="System.Uri" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Uri" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="a6875-1029">基 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-1029">The base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="a6875-1030">要添加到基 <see cref="T:System.Uri" /> 的相对 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-1030">The relative URI to add to the base <see cref="T:System.Uri" />.</span></span></param>
        <param name="result"><span data-ttu-id="a6875-1031">此方法返回时，包含从 <see cref="T:System.Uri" /> 和 <paramref name="baseUri" /> 构造的 <paramref name="relativeUri" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1031">When this method returns, contains a <see cref="T:System.Uri" /> constructed from <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span> <span data-ttu-id="a6875-1032">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="a6875-1032">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="a6875-1033">使用指定基和相对 <see cref="T:System.Uri" /> 实例创建一个新的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1033">Creates a new <see cref="T:System.Uri" /> using the specified base and relative <see cref="T:System.Uri" /> instances.</span></span></summary>
        <returns><span data-ttu-id="a6875-1034">如果成功创建了 <see cref="T:System.Uri" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1034"><see langword="true" /> if the <see cref="T:System.Uri" /> was successfully created; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If this method returns <ph id="ph1">`true`</ph>, the new <ph id="ph2">&lt;xref:System.Uri&gt;</ph> is in <ph id="ph3">`result`</ph>.  
  
 <span data-ttu-id="a6875-1036">此方法构造 URI，将其置于规范形式中，并对其进行验证。</span><span class="sxs-lookup"><span data-stu-id="a6875-1036">This method constructs the URI, puts it in canonical form, and validates it.</span></span> <span data-ttu-id="a6875-1037">如果发生未处理的异常，则此方法将捕获该异常。</span><span class="sxs-lookup"><span data-stu-id="a6875-1037">If an unhandled exception occurs, this method catches it.</span></span> <span data-ttu-id="a6875-1038">如果要创建 <xref:System.Uri> 并获取异常，请使用其中一个 <xref:System.Uri.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="a6875-1038">If you want to create a <xref:System.Uri> and get exceptions use one of the <xref:System.Uri.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-1039"><paramref name="baseUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1039"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unescape">
      <MemberSignature Language="C#" Value="protected virtual string Unescape (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string Unescape(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Unescape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Unescape (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ Unescape(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member Unescape : string -&gt; string&#xA;override this.Unescape : string -&gt; string" Usage="uri.Unescape path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. Please use GetComponents() or static UnescapeDataString() to unescape a Uri component or a string. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. Please use GetComponents() or static UnescapeDataString() to unescape a Uri component or a string. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("The method has been deprecated. Please use GetComponents() or static UnescapeDataString() to unescape a Uri component or a string. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The method has been deprecated. Please use GetComponents() or static UnescapeDataString() to unescape a Uri component or a string. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="a6875-1040">要转换的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-1040">The string to convert.</span></span></param>
        <summary><span data-ttu-id="a6875-1041">转换指定的字符串，方法是将任何转义序列替换为相应的未转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-1041">Converts the specified string by replacing any escape sequences with their unescaped representation.</span></span></summary>
        <returns><span data-ttu-id="a6875-1042"><paramref name="path" /> 参数的非转义值。</span><span class="sxs-lookup"><span data-stu-id="a6875-1042">The unescaped value of the <paramref name="path" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnescapeDataString">
      <MemberSignature Language="C#" Value="public static string UnescapeDataString (string stringToUnescape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnescapeDataString(string stringToUnescape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.UnescapeDataString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnescapeDataString (stringToUnescape As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UnescapeDataString(System::String ^ stringToUnescape);" />
      <MemberSignature Language="F#" Value="static member UnescapeDataString : string -&gt; string" Usage="System.Uri.UnescapeDataString stringToUnescape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToUnescape" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stringToUnescape"><span data-ttu-id="a6875-1043">要恢复原义的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6875-1043">The string to unescape.</span></span></param>
        <summary><span data-ttu-id="a6875-1044">将字符串转换为它的非转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-1044">Converts a string to its unescaped representation.</span></span></summary>
        <returns><span data-ttu-id="a6875-1045"><paramref name="stringToUnescape" /> 的非转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="a6875-1045">The unescaped representation of <paramref name="stringToUnescape" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You should use this method with care. <span data-ttu-id="a6875-1047">取消转义以前未转义的字符串会导致歧义和错误。</span><span class="sxs-lookup"><span data-stu-id="a6875-1047">Unescaping a string that has been previously unescaped can lead to ambiguities and errors.</span></span>  
  
 <span data-ttu-id="a6875-1048">许多 Web 浏览器将 Uri 内的空格转义为加号 ( "+" ) 字符;但是，System.uri.unescapedatastring 方法不会将加字符转换为空格，因为此行为在所有 URI 方案中都不是标准的。</span><span class="sxs-lookup"><span data-stu-id="a6875-1048">Many Web browsers escape spaces inside of URIs into plus ("+") characters; however, the UnescapeDataString method does not convert plus characters into spaces because this behavior is not standard across all URI schemes.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-1049">下面的代码示例 unescapes URI，然后将 ( "+" ) 的任何加号字符转换为空格。</span><span class="sxs-lookup"><span data-stu-id="a6875-1049">The following code example unescapes a URI, and then converts any plus characters ("+") into spaces.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet19"::: 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6875-1050"><paramref name="stringToUnescape" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6875-1050"><paramref name="stringToUnescape" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Uri.EscapeDataString(System.String)" />
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UriSchemeFile">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeFile;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeFile" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeFile" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeFile As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeFile;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeFile : string" Usage="System.Uri.UriSchemeFile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1051">指定 URI 是指向文件的指针。</span><span class="sxs-lookup"><span data-stu-id="a6875-1051">Specifies that the URI is a pointer to a file.</span></span> <span data-ttu-id="a6875-1052">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="a6875-1052">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In .NET Framework version 1.1, a "<ph id="ph1">`file:///path`</ph>" URI was translated to "<ph id="ph2">`file:/path`</ph>". <span data-ttu-id="a6875-1054">这已在版本2.0 中得到更正。</span><span class="sxs-lookup"><span data-stu-id="a6875-1054">This has been corrected for version 2.0.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-1055">下面的示例创建一个 <xref:System.Uri> 实例，并确定该方案是否为 <xref:System.Uri.UriSchemeFile> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-1055">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeFile>.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet10":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet10":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet10":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeFtp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeFtp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeFtp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeFtp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeFtp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeFtp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeFtp : string" Usage="System.Uri.UriSchemeFtp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1056">指定通过文件传输协议 (FTP) 访问 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-1056">Specifies that the URI is accessed through the File Transfer Protocol (FTP).</span></span> <span data-ttu-id="a6875-1057">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="a6875-1057">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeFtp&gt;</ph>.  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet15":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet15":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet15":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeGopher">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeGopher;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeGopher" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeGopher" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeGopher As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeGopher;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeGopher : string" Usage="System.Uri.UriSchemeGopher" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1059">指定通过 Gopher 协议访问 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-1059">Specifies that the URI is accessed through the Gopher protocol.</span></span> <span data-ttu-id="a6875-1060">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="a6875-1060">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeGopher&gt;</ph>.  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet14":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet14":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet14":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeHttp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeHttp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeHttp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeHttp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeHttp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeHttp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeHttp : string" Usage="System.Uri.UriSchemeHttp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1062">指定通过超文本传输协议 (HTTP) 访问 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-1062">Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</span></span> <span data-ttu-id="a6875-1063">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="a6875-1063">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeHttp&gt;</ph>.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet9":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet9":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet9"::: 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeHttps">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeHttps;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeHttps" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeHttps" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeHttps As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeHttps;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeHttps : string" Usage="System.Uri.UriSchemeHttps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1065">指定通过安全超文本传输协议 (HTTPS) 访问 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-1065">Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</span></span> <span data-ttu-id="a6875-1066">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="a6875-1066">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeHttps&gt;</ph>.  
    
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet16":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet16":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet16":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeMailto">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeMailto;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeMailto" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeMailto" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeMailto As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeMailto;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeMailto : string" Usage="System.Uri.UriSchemeMailto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1068">指定 URI 是一个电子邮件地址，需通过简单邮件传输协议 (SMTP) 访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-1068">Specifies that the URI is an email address and is accessed through the Simple Mail Transport Protocol (SMTP).</span></span> <span data-ttu-id="a6875-1069">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="a6875-1069">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeMailto&gt;</ph>.  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet11":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet11":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet11":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNetPipe">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNetPipe;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNetPipe" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNetPipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNetPipe As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNetPipe;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNetPipe : string" Usage="System.Uri.UriSchemeNetPipe" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1071">指明通过 Windows Communication Foundation (WCF) 使用的 NetPipe 方案访问该 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-1071">Specifies that the URI is accessed through the NetPipe scheme used by Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="a6875-1072">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="a6875-1072">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNetTcp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNetTcp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNetTcp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNetTcp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNetTcp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNetTcp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNetTcp : string" Usage="System.Uri.UriSchemeNetTcp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1073">指明通过 Windows Communication Foundation (WCF) 使用的 NetTcp 方案访问该 URI。</span><span class="sxs-lookup"><span data-stu-id="a6875-1073">Specifies that the URI is accessed through the NetTcp scheme used by Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="a6875-1074">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="a6875-1074">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNews">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNews;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNews" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNews" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNews As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNews;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNews : string" Usage="System.Uri.UriSchemeNews" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1075">指定 URI 是 Internet 新闻组，而且可以通过 Network 新闻传输协议 (NNTP) 进行访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-1075">Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP).</span></span> <span data-ttu-id="a6875-1076">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="a6875-1076">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeNews&gt;</ph>.  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet12":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet12":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet12":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNntp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNntp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNntp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNntp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNntp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNntp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNntp : string" Usage="System.Uri.UriSchemeNntp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1078">指定 URI 是 Internet 新闻组，而且可以通过 Network 新闻传输协议 (NNTP) 进行访问。</span><span class="sxs-lookup"><span data-stu-id="a6875-1078">Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP).</span></span> <span data-ttu-id="a6875-1079">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="a6875-1079">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The NNTP <ph id="ph1">&lt;xref:System.Uri&gt;</ph> parsing errors in .NET Framework version 1.1 have been corrected.
  
## Examples  
 <span data-ttu-id="a6875-1081">下面的示例创建一个 <xref:System.Uri> 实例，并确定该方案是否为 <xref:System.Uri.UriSchemeNntp> 。</span><span class="sxs-lookup"><span data-stu-id="a6875-1081">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeNntp>.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet13"::: 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet13":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet13":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserEscaped">
      <MemberSignature Language="C#" Value="public bool UserEscaped { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserEscaped" />
      <MemberSignature Language="DocId" Value="P:System.Uri.UserEscaped" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserEscaped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserEscaped { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UserEscaped : bool" Usage="System.Uri.UserEscaped" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1082">获取一个值，该值指示 URI 字符串是否在创建 <see cref="T:System.Uri" /> 实例之前已被完全转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-1082">Gets a value that indicates whether the URI string was completely escaped before the <see cref="T:System.Uri" /> instance was created.</span></span></summary>
        <value><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="dontEscape" /&gt;</ph> parameter was set to <ph id="ph3">&lt;see langword="true" /&gt;</ph> when the <ph id="ph4">&lt;see cref="T:System.Uri" /&gt;</ph> instance was created; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-1084">将 <xref:System.Uri.UserEscaped%2A> 属性设置为 `true` ，以指示用于创建实例的字符串 <xref:System.Uri> 在传递到构造函数之前已完全转义; 即 `dontEscape` 构造函数调用的参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="a6875-1084">The <xref:System.Uri.UserEscaped%2A> property is set to `true` to indicate that the string used to create the <xref:System.Uri> instance was completely escaped before it was passed to the constructor; that is, the `dontEscape` parameter of the constructor call was set to `true`.</span></span>
  
## Examples  
 <span data-ttu-id="a6875-1085">下面的示例创建一个 <xref:System.Uri> 实例，并确定它在创建后是否已完全转义。</span><span class="sxs-lookup"><span data-stu-id="a6875-1085">The following example creates a <xref:System.Uri> instance and determines whether it was fully escaped when it was created.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet18":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet18":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet18":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserInfo">
      <MemberSignature Language="C#" Value="public string UserInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserInfo" />
      <MemberSignature Language="DocId" Value="P:System.Uri.UserInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserInfo : string" Usage="System.Uri.UserInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6875-1086">获取用户名、密码或其他与指定 URI 关联的特定于用户的信息。</span><span class="sxs-lookup"><span data-stu-id="a6875-1086">Gets the user name, password, or other user-specific information associated with the specified URI.</span></span></summary>
        <value>The user information associated with the URI. <span data-ttu-id="a6875-1088">返回值不包括“@”字符，该字符是一个保留字符，用于分隔 URI 的用户信息部分。</span><span class="sxs-lookup"><span data-stu-id="a6875-1088">The returned value does not include the '@' character reserved for delimiting the user information part of the URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6875-1089">此属性返回的值的格式通常为 "userName： password"。</span><span class="sxs-lookup"><span data-stu-id="a6875-1089">The value returned by this property is usually in the format "userName:password".</span></span>
  
## Examples  
 <span data-ttu-id="a6875-1090">下面的示例创建一个 <xref:System.Uri> 实例，并将用户信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a6875-1090">The following example creates a <xref:System.Uri> instance and writes the user information to the console.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp" id="Snippet18":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs" interactive="try-dotnet-method" id="Snippet18":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb" id="Snippet18"::: 

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a6875-1091">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="a6875-1091">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
