<Type Name="TimeZoneInfo+AdjustmentRule" FullName="System.TimeZoneInfo+AdjustmentRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="532e0d38724b2538b79b0a4a564cdd3e0a2443b4" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83961980" /></Metadata><TypeSignature Language="C#" Value="public sealed class TimeZoneInfo.AdjustmentRule : IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit TimeZoneInfo/AdjustmentRule extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo/AdjustmentRule&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo.AdjustmentRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo.AdjustmentRule&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo.AdjustmentRule), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class TimeZoneInfo::AdjustmentRule sealed : IEquatable&lt;TimeZoneInfo::AdjustmentRule ^&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo.AdjustmentRule = class&#xA;    interface IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo.AdjustmentRule = class&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable&#xA;    interface IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable sealed beforefieldinit TimeZoneInfo/AdjustmentRule extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo/AdjustmentRule&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo.AdjustmentRule = class&#xA;    interface IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Core" FromVersion="4.0.0.0" To="mscorlib" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
    <TypeForwarding From="System.Core" FromVersion="2.0.5.0" To="mscorlib" ToVersion="2.0.5.0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo+AdjustmentRule&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="be1f0-101">提供有关时区调整的信息，例如与夏令时的相互转换。</span><span class="sxs-lookup"><span data-stu-id="be1f0-101">Provides information about a time zone adjustment, such as the transition to and from daylight saving time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be1f0-102"><xref:System.TimeZoneInfo.AdjustmentRule> 类定义特定时间的有效开始日期和结束日期，分别为夏令时，并定义其增量（调整导致时区标准时间更改的准确量）（以其为增量）。</span><span class="sxs-lookup"><span data-stu-id="be1f0-102">The <xref:System.TimeZoneInfo.AdjustmentRule> class defines the effective start and end dates of a particular time change to and from daylight saving time, respectively, as well as its delta (the exact amount by which the adjustment causes the time zone's standard time to change).</span></span> <span data-ttu-id="be1f0-103">此外，两个属性将返回 <xref:System.TimeZoneInfo.TransitionTime> 对象，这些对象定义何时发生每次转换到标准时间。</span><span class="sxs-lookup"><span data-stu-id="be1f0-103">In addition, two properties return <xref:System.TimeZoneInfo.TransitionTime> objects that define when each transition to and from standard time occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be1f0-104"><xref:System.TimeZoneInfo.AdjustmentRule> 类的实例是不可变的。</span><span class="sxs-lookup"><span data-stu-id="be1f0-104">An instance of the <xref:System.TimeZoneInfo.AdjustmentRule> class is immutable.</span></span> <span data-ttu-id="be1f0-105">创建对象后，不能修改其值。</span><span class="sxs-lookup"><span data-stu-id="be1f0-105">Once an object has been created, its values cannot be modified.</span></span>  
  
 <span data-ttu-id="be1f0-106">若要创建 <xref:System.TimeZoneInfo.AdjustmentRule> 对象，请调用 `static` （Visual Basic 中的`Shared`） <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="be1f0-106">To create a <xref:System.TimeZoneInfo.AdjustmentRule> object, call the `static` (`Shared` in Visual Basic) <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="be1f0-107">然后，你可以向 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 方法的两个重载提供 <xref:System.TimeZoneInfo.AdjustmentRule> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="be1f0-107">You can then supply an array of <xref:System.TimeZoneInfo.AdjustmentRule> objects to two of the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="be1f0-108">若要检索特定时区的调整规则，请调用 <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> 方法，该方法返回 <xref:System.TimeZoneInfo.AdjustmentRule> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="be1f0-108">To retrieve the adjustment rules of a particular time zone, call its <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> method, which returns an array of <xref:System.TimeZoneInfo.AdjustmentRule> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be1f0-109">下面的示例检索在本地系统上定义的所有时区，并显示有关其调整规则的完整信息。</span><span class="sxs-lookup"><span data-stu-id="be1f0-109">The following example retrieves all time zones defined on the local system and displays complete information about their adjustment rules.</span></span>  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]  
  
 <span data-ttu-id="be1f0-110">下面是此示例生成的一小部分输出。</span><span class="sxs-lookup"><span data-stu-id="be1f0-110">The following is a small portion of the output that is generated by the example.</span></span> <span data-ttu-id="be1f0-111">确切的输出将取决于操作系统和运行此示例的日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-111">The exact output will vary depending on the operating system and the date on which the example is run.</span></span>  
  
```  
Morocco Standard Time Adjustment rules  
   Adjustment rule #1  
      Start Date: Tuesday, January 01, 2008  
      End Date: Wednesday, December 31, 2008  
      Time Change: 1:00 hours  
      Annual Start: The Last Saturday of May at 11:59 PM  
      Annual End: The Last Sunday of August at 11:59 PM  
   Adjustment rule #2  
      Start Date: Thursday, January 01, 2009  
      End Date: Thursday, December 31, 2009  
      Time Change: 1:00 hours  
      Annual Start: The Last Sunday of May at 11:59 PM  
      Annual End: The Third Thursday of August at 11:59 PM  
  
Coordinated Universal Time has no adjustment rules  
  
GMT Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 1:00 AM  
   Annual End: The Last Sunday of October at 2:00 AM  
  
Greenwich Standard Time has no adjustment rules  
  
W. Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Romance Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central European Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
W. Central Africa Standard Time has no adjustment rules  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName="CreateAdjustmentRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.AdjustmentRule CreateAdjustmentRule (DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo.TransitionTime daylightTransitionStart, TimeZoneInfo.TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo/AdjustmentRule CreateAdjustmentRule(valuetype System.DateTime dateStart, valuetype System.DateTime dateEnd, valuetype System.TimeSpan daylightDelta, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionStart, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAdjustmentRule (dateStart As DateTime, dateEnd As DateTime, daylightDelta As TimeSpan, daylightTransitionStart As TimeZoneInfo.TransitionTime, daylightTransitionEnd As TimeZoneInfo.TransitionTime) As TimeZoneInfo.AdjustmentRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::AdjustmentRule ^ CreateAdjustmentRule(DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo::TransitionTime daylightTransitionStart, TimeZoneInfo::TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="F#" Value="static member CreateAdjustmentRule : DateTime * DateTime * TimeSpan * TimeZoneInfo.TransitionTime * TimeZoneInfo.TransitionTime -&gt; TimeZoneInfo.AdjustmentRule" Usage="System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule (dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+AdjustmentRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateStart" Type="System.DateTime" />
        <Parameter Name="dateEnd" Type="System.DateTime" />
        <Parameter Name="daylightDelta" Type="System.TimeSpan" />
        <Parameter Name="daylightTransitionStart" Type="System.TimeZoneInfo+TransitionTime" />
        <Parameter Name="daylightTransitionEnd" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="dateStart"><span data-ttu-id="be1f0-112">调整规则的生效日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-112">The effective date of the adjustment rule.</span></span> <span data-ttu-id="be1f0-113">如果 <paramref name="dateStart" /> 参数的值为 <see langword="DateTime.MinValue.Date" />，那么这是时区的第一个有效的调整规则。</span><span class="sxs-lookup"><span data-stu-id="be1f0-113">If the value of the <paramref name="dateStart" /> parameter is <see langword="DateTime.MinValue.Date" />, this is the first adjustment rule in effect for a time zone.</span></span></param>
        <param name="dateEnd"><span data-ttu-id="be1f0-114">执行调整规则的最后日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-114">The last date that the adjustment rule is in force.</span></span> <span data-ttu-id="be1f0-115">如果 <paramref name="dateEnd" /> 参数的值为 <see langword="DateTime.MaxValue.Date" />，则调整规则无结束日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-115">If the value of the <paramref name="dateEnd" /> parameter is <see langword="DateTime.MaxValue.Date" />, the adjustment rule has no end date.</span></span></param>
        <param name="daylightDelta"><span data-ttu-id="be1f0-116">调整所产生的时间更改。</span><span class="sxs-lookup"><span data-stu-id="be1f0-116">The time change that results from the adjustment.</span></span> <span data-ttu-id="be1f0-117">将该值添加到时区的 <see cref="P:System.TimeZoneInfo.BaseUtcOffset" /> 属性，以便获取从协调世界时 (UTC) 开始的正确的夏令时偏移量。</span><span class="sxs-lookup"><span data-stu-id="be1f0-117">This value is added to the time zone's <see cref="P:System.TimeZoneInfo.BaseUtcOffset" /> property to obtain the correct daylight offset from Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="be1f0-118">该值的范围介于 -14 到 14。</span><span class="sxs-lookup"><span data-stu-id="be1f0-118">This value can range from -14 to 14.</span></span></param>
        <param name="daylightTransitionStart"><span data-ttu-id="be1f0-119">定义夏令时的开始时间的对象。</span><span class="sxs-lookup"><span data-stu-id="be1f0-119">An object that defines the start of daylight saving time.</span></span></param>
        <param name="daylightTransitionEnd"><span data-ttu-id="be1f0-120">定义夏令时的结束时间的对象。</span><span class="sxs-lookup"><span data-stu-id="be1f0-120">An object that defines the end of daylight saving time.</span></span></param>
        <summary><span data-ttu-id="be1f0-121">为特定时区创建新调整规则。</span><span class="sxs-lookup"><span data-stu-id="be1f0-121">Creates a new adjustment rule for a particular time zone.</span></span></summary>
        <returns><span data-ttu-id="be1f0-122">表示新调整规则的对象。</span><span class="sxs-lookup"><span data-stu-id="be1f0-122">An object that represents the new adjustment rule.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be1f0-123">您可以使用此方法为自定义时区创建一个或多个调整规则。</span><span class="sxs-lookup"><span data-stu-id="be1f0-123">You can use this method to create one or more adjustment rules for a custom time zone.</span></span> <span data-ttu-id="be1f0-124">然后，可以将对此方法的调用返回的 <xref:System.TimeZoneInfo.AdjustmentRule> 对象的数组作为 `adjustmentRules` 参数传递给 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 方法的两个重载。</span><span class="sxs-lookup"><span data-stu-id="be1f0-124">An array of the <xref:System.TimeZoneInfo.AdjustmentRule> objects returned by calls to this method can then be passed as the `adjustmentRules` parameter to two overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="be1f0-125">该示例演示了此过程。</span><span class="sxs-lookup"><span data-stu-id="be1f0-125">The example illustrates this procedure.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be1f0-126"><xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> 方法只能用来定义新时区的调整规则;它不能用于修改现有时区的调整规则。</span><span class="sxs-lookup"><span data-stu-id="be1f0-126">The <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method can be used only to define an adjustment rule for a new time zone; it cannot be used to modify an adjustment rule for an existing time zone.</span></span>  
  
 <span data-ttu-id="be1f0-127">`dateStart` 和 `dateEnd` 参数必须是不包含时间部分的日期值或引发 <xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="be1f0-127">The `dateStart` and `dateEnd` parameters must be date values without a time component or an <xref:System.ArgumentException> is thrown.</span></span> <span data-ttu-id="be1f0-128">可以通过从日期和时间的 <xref:System.DateTime.Date%2A> 属性检索 <xref:System.DateTime> 值来删除时间组成部分，如以下语句中所示：</span><span class="sxs-lookup"><span data-stu-id="be1f0-128">The time component can be removed by retrieving a <xref:System.DateTime> value from the date and time's <xref:System.DateTime.Date%2A> property as shown in the following statements:</span></span>  
  
```  
DateTime.MinValue.Date  
DateTime.MaxValue.Date  
DateTime.Now.Date   
dateVariable.Date  
```  
  
 <span data-ttu-id="be1f0-129">还必须 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>`dateStart` 和 `dateEnd` 参数的 <xref:System.DateTime.Kind%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="be1f0-129">The <xref:System.DateTime.Kind%2A> property of the `dateStart` and `dateEnd` parameters must also be <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="be1f0-130">`daylightDelta` 参数的值可以介于-14 到14之间。</span><span class="sxs-lookup"><span data-stu-id="be1f0-130">The value of the `daylightDelta` parameter can range from -14 to 14.</span></span> <span data-ttu-id="be1f0-131">在对 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 方法的调用中使用的 `daylightDelta` 参数和 `baseUtcOffset` 参数的总和还必须介于-14 到14之间，否则将引发 <xref:System.InvalidTimeZoneException>。</span><span class="sxs-lookup"><span data-stu-id="be1f0-131">The sum of the `daylightDelta` parameter and the `baseUtcOffset` parameter used in the call to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method must also range from -14 to 14 or an <xref:System.InvalidTimeZoneException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be1f0-132">`daylightDelta` 参数定义时区的标准时间与夏时制之间的差异。</span><span class="sxs-lookup"><span data-stu-id="be1f0-132">The `daylightDelta` parameter defines the difference between a time zone's standard time and its daylight saving time.</span></span> <span data-ttu-id="be1f0-133">它不用于定义时区的标准时间与协调世界时（UTC）的偏移量。</span><span class="sxs-lookup"><span data-stu-id="be1f0-133">It is not intended to define the time zone's standard time offset from Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="be1f0-134"><xref:System.TimeZoneInfo> 类假定此相对于 UTC 的偏移量在时区的整个生命周期内都是固定的。</span><span class="sxs-lookup"><span data-stu-id="be1f0-134">The <xref:System.TimeZoneInfo> class assumes that this offset from UTC is constant throughout the life of the time zone.</span></span> <span data-ttu-id="be1f0-135">若要反映时区与 UTC 之间的时差更改（不是由应用调整规则引起），则必须使用 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 方法来创建新的自定义时区。</span><span class="sxs-lookup"><span data-stu-id="be1f0-135">To reflect a change in a time zone's offset from UTC that is not caused by the application of an adjustment rule, you must use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to create a new custom time zone.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be1f0-136">下面的示例创建一个备用中心标准时区，并为1976-1986、1987-2006、2007和及更高版本定义三个调整规则。</span><span class="sxs-lookup"><span data-stu-id="be1f0-136">The following example creates an alternate Central Standard Time zone and defines three adjustment rules for the periods 1976-1986, 1987-2006, and 2007 and beyond.</span></span> <span data-ttu-id="be1f0-137">将这些规则添加到泛型 <xref:System.Collections.Generic.List%601> 对象，然后将其元素复制到 <xref:System.TimeZoneInfo.AdjustmentRule> 数组。</span><span class="sxs-lookup"><span data-stu-id="be1f0-137">These rules are added to a generic <xref:System.Collections.Generic.List%601> object whose elements are then copied to a <xref:System.TimeZoneInfo.AdjustmentRule> array.</span></span> <span data-ttu-id="be1f0-138">然后，在对 <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%29?displayProperty=nameWithType> 方法的调用中使用此数组。</span><span class="sxs-lookup"><span data-stu-id="be1f0-138">This array is then used in the call to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#1)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="be1f0-139">参数 <paramref name="dateStart" /> 或 <paramref name="dateEnd" /> 的属性 <see cref="P:System.DateTime.Kind" /> 的值不等于 <see cref="F:System.DateTimeKind.Unspecified" />。</span><span class="sxs-lookup"><span data-stu-id="be1f0-139">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateStart" /> or <paramref name="dateEnd" /> parameter does not equal <see cref="F:System.DateTimeKind.Unspecified" />.</span></span>  
  
<span data-ttu-id="be1f0-140">- 或 -</span><span class="sxs-lookup"><span data-stu-id="be1f0-140">-or-</span></span> 
<span data-ttu-id="be1f0-141"><paramref name="daylightTransitionStart" /> 参数等于 <paramref name="daylightTransitionEnd" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="be1f0-141">The <paramref name="daylightTransitionStart" /> parameter is equal to the <paramref name="daylightTransitionEnd" /> parameter.</span></span>  
  
<span data-ttu-id="be1f0-142">- 或 -</span><span class="sxs-lookup"><span data-stu-id="be1f0-142">-or-</span></span> 
<span data-ttu-id="be1f0-143"><paramref name="dateStart" /> 或 <paramref name="dateEnd" /> 参数包含一个日期的时间值。</span><span class="sxs-lookup"><span data-stu-id="be1f0-143">The <paramref name="dateStart" /> or <paramref name="dateEnd" /> parameter includes a time of day value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="be1f0-144"><paramref name="dateEnd" /> 早于 <paramref name="dateStart" />。</span><span class="sxs-lookup"><span data-stu-id="be1f0-144"><paramref name="dateEnd" /> is earlier than <paramref name="dateStart" />.</span></span>  
  
<span data-ttu-id="be1f0-145">- 或 -</span><span class="sxs-lookup"><span data-stu-id="be1f0-145">-or-</span></span> 
 <span data-ttu-id="be1f0-146"><paramref name="daylightDelta" /> 小于 -14 或大于 14。</span><span class="sxs-lookup"><span data-stu-id="be1f0-146"><paramref name="daylightDelta" /> is less than -14 or greater than 14.</span></span>  
  
<span data-ttu-id="be1f0-147">- 或 -</span><span class="sxs-lookup"><span data-stu-id="be1f0-147">-or-</span></span> 
<span data-ttu-id="be1f0-148"><paramref name="daylightDelta" /> 参数的 <see cref="P:System.TimeSpan.Milliseconds" /> 属性不等于 0。</span><span class="sxs-lookup"><span data-stu-id="be1f0-148">The <see cref="P:System.TimeSpan.Milliseconds" /> property of the <paramref name="daylightDelta" /> parameter is not equal to 0.</span></span>  
  
<span data-ttu-id="be1f0-149">- 或 -</span><span class="sxs-lookup"><span data-stu-id="be1f0-149">-or-</span></span> 
<span data-ttu-id="be1f0-150"><paramref name="daylightDelta" /> 参数的 <see cref="P:System.TimeSpan.Ticks" /> 属性不等于整秒数。</span><span class="sxs-lookup"><span data-stu-id="be1f0-150">The <see cref="P:System.TimeSpan.Ticks" /> property of the <paramref name="daylightDelta" /> parameter does not equal a whole number of seconds.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DateEnd">
      <MemberSignature Language="C#" Value="public DateTime DateEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateEnd As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateEnd { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateEnd : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be1f0-151">获取调整规则失效的日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-151">Gets the date when the adjustment rule ceases to be in effect.</span></span></summary>
        <value><span data-ttu-id="be1f0-152"><see cref="T:System.DateTime" /> 值，指示调整规则失效的日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-152">A <see cref="T:System.DateTime" /> value that indicates the end date of the adjustment rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be1f0-153"><xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> 属性的值是不包含时间部分的日期值。</span><span class="sxs-lookup"><span data-stu-id="be1f0-153">The value of the <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> property is a date value without a time component.</span></span>  
  
 <span data-ttu-id="be1f0-154">由于当前调整规则的结束日期通常未知，因此，在创建自定义调整规则时，可以将 `DateTime.MaxValue.Date` 分配给 <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="be1f0-154">Because the end date of the current adjustment rule is typically not known, you can assign `DateTime.MaxValue.Date` to the <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> property when you create a custom adjustment rule.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be1f0-155">除非有一个令人信服的理由，否则应将调整规则的结束日期定义为在时区遵循标准时间的时间间隔内发生。</span><span class="sxs-lookup"><span data-stu-id="be1f0-155">Unless there is a compelling reason to do otherwise, you should define the adjustment rule's end date to occur within the time interval during which the time zone observes standard time.</span></span> <span data-ttu-id="be1f0-156">除非有一个令人信服的理由，否则不应将调整规则的结束日期定义为时间间隔内的时间间隔，在此时间间隔内时区应遵循夏时制。</span><span class="sxs-lookup"><span data-stu-id="be1f0-156">Unless there is a compelling reason to do so, you should not define the adjustment rule's end date to occur within the time interval during which the time zone observes daylight saving time.</span></span> <span data-ttu-id="be1f0-157">例如，如果在三月的第三个星期日出现时区的夏令时转换，并且其转换为夏令时，则在10月的第一个星期日发生，则调整规则的有效结束日期不应为特定年份的12月31日，因为该日期出现在夏令时的一段时间内。</span><span class="sxs-lookup"><span data-stu-id="be1f0-157">For example, if a time zone's transition from daylight saving time occurs on the third Sunday of March and its transition to daylight saving time occurs on the first Sunday of October, the effective end date of the adjustment rule should not be December 31 of a particular year, since that date occurs within the period of daylight saving time.</span></span>  
  
 <span data-ttu-id="be1f0-158">默认情况下，Windows XP 中的注册表会定义一个调整规则，该规则的结束日期为每个时区的结束日期为12月 9999 31 日星期五（`DateTime.MaxValue.Date`的值）。</span><span class="sxs-lookup"><span data-stu-id="be1f0-158">By default, the registry in Windows XP defines a single adjustment rule whose end date is Friday, December 31, 9999 (the value of `DateTime.MaxValue.Date`), for each time zone.</span></span> <span data-ttu-id="be1f0-159">对于美国中的时区，Windows Vista 中的注册表定义了两个调整规则：</span><span class="sxs-lookup"><span data-stu-id="be1f0-159">For time zones in the United States, the registry in Windows Vista defines two adjustment rules:</span></span>  
  
-   <span data-ttu-id="be1f0-160">0001年1月1日星期一至星期日，2006年12月31日。</span><span class="sxs-lookup"><span data-stu-id="be1f0-160">Monday, January 01, 0001, to Sunday, December 31, 2006.</span></span>  
  
-   <span data-ttu-id="be1f0-161">2007年1月31日，星期一至星期五，9999，星期五。</span><span class="sxs-lookup"><span data-stu-id="be1f0-161">Monday, January 01, 2007, to Friday, December 31, 9999.</span></span>  
  
 <span data-ttu-id="be1f0-162">这意味着，尽管注册表中存储的时区调整规则对于执行当前时区相关操作非常有用，但无法可靠地用于检索历史时区信息。</span><span class="sxs-lookup"><span data-stu-id="be1f0-162">This means that, although time zone adjustment rules stored in the registry are useful for performing current time zone-related operations, they cannot be reliably used for retrieving historical time zone information.</span></span> <span data-ttu-id="be1f0-163">若要了解如何使用多个调整规则定义可在历史时区感知应用程序中使用的自定义时区，请参阅[如何：创建含调整规则的时区](/dotnet/standard/datetime/create-time-zones-with-adjustment-rules)。</span><span class="sxs-lookup"><span data-stu-id="be1f0-163">For information about defining a custom time zone with multiple adjustment rules that can be used in a historical time zone-aware application, see [How to: Create Time Zones with Adjustment Rules](/dotnet/standard/datetime/create-time-zones-with-adjustment-rules).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be1f0-164">下面的示例显示有关在本地计算机的系统注册表中定义的所有时区的信息，包括其调整规则的开始日期和结束日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-164">The following example displays information about all of the time zones defined in the local computer's system registry, including the starting and ending dates of their adjustment rules.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateStart">
      <MemberSignature Language="C#" Value="public DateTime DateStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateStart As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateStart { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateStart : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be1f0-165">获取调整规则生效的日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-165">Gets the date when the adjustment rule takes effect.</span></span></summary>
        <value><span data-ttu-id="be1f0-166">一个 <see cref="T:System.DateTime" /> 值，该值指示调整规则生效的日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-166">A <see cref="T:System.DateTime" /> value that indicates when the adjustment rule takes effect.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be1f0-167"><xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A> 属性的值是不包含时间部分的日期值。</span><span class="sxs-lookup"><span data-stu-id="be1f0-167">The value of the <xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A> property is a date value without a time component.</span></span> <span data-ttu-id="be1f0-168">它定义特定调整规则生效的日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-168">It defines the date on which a particular adjustment rule goes into effect.</span></span>  <span data-ttu-id="be1f0-169">这是一组转换（通常由一个转换为夏令时，一次转换为标准时间）生效的日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-169">This is the date in which a set of transitions (which typically are defined by one transition to daylight savings time and one transition back to standard time) go into effect.</span></span> <span data-ttu-id="be1f0-170">例如，调整规则可能会在2017年1月1日生效，这将为三月的第二个星期日转换到夏令时，并在11月第一个星期日转换回标准时间。</span><span class="sxs-lookup"><span data-stu-id="be1f0-170">For example, an adjustment rule might go into effect on January 1, 2017, that provides for a transition to daylight savings time on the second Sunday of March and for a transition back to standard time on the first Sunday of November.</span></span> <span data-ttu-id="be1f0-171">请注意，调整规则的开始日期不会与第一个转换的日期相关联。</span><span class="sxs-lookup"><span data-stu-id="be1f0-171">Note that the starting date of the adjustment rule is not tied to the date of the first transition.</span></span>  
  
 <span data-ttu-id="be1f0-172">当您创建一个自定义调整规则以用于不需要使用历史时区信息的时区感知应用程序时，您可以将 `DateTime.MinValue.Date` 分配给 "<xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A>" 属性。</span><span class="sxs-lookup"><span data-stu-id="be1f0-172">You can assign `DateTime.MinValue.Date` to the <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> property when you create a custom adjustment rule for use in a time zone-aware application that does not have to work with historic time zone information.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be1f0-173">除非有一个令人信服的理由，否则应将调整规则的开始日期定义为在时区遵循标准时间的时间间隔内发生。</span><span class="sxs-lookup"><span data-stu-id="be1f0-173">Unless there is a compelling reason to do otherwise, you should define the adjustment rule's start date to occur within the time interval during which the time zone observes standard time.</span></span> <span data-ttu-id="be1f0-174">除非有一个令人信服的理由，否则不应将调整规则的开始日期定义为在时区采用夏令时的时间间隔内发生。</span><span class="sxs-lookup"><span data-stu-id="be1f0-174">Unless there is a compelling reason to do so, you should not define the adjustment rule's start date to occur within the time interval during which the time zone observes daylight saving time.</span></span> <span data-ttu-id="be1f0-175">例如，如果在三月的第三个星期日出现时区的夏令时转换，并且其转换为夏令时，则在10月的第一个星期日发生，则调整规则的有效开始日期不应为特定年份的1月1日，因为该日期出现在夏令时的一段时间内。</span><span class="sxs-lookup"><span data-stu-id="be1f0-175">For example, if a time zone's transition from daylight saving time occurs on the third Sunday of March and its transition to daylight saving time occurs on the first Sunday of October, the effective start date of the adjustment rule should not be January 1 of a particular year, since that date occurs within the period of daylight saving time.</span></span>  
  
 <span data-ttu-id="be1f0-176">默认情况下，Windows XP 中的注册表为每个时区定义一个其开始日期为0001年1月1日星期一（`DateTime.MinValue.Date`）的单个调整规则。</span><span class="sxs-lookup"><span data-stu-id="be1f0-176">By default, the registry in Windows XP defines a single adjustment rule whose start date is Monday, January 01, 0001 (the value of `DateTime.MinValue.Date`), for each time zone.</span></span> <span data-ttu-id="be1f0-177">对于美国中的时区，Windows Vista 中的注册表定义了两个调整规则：</span><span class="sxs-lookup"><span data-stu-id="be1f0-177">For time zones in the United States, the registry in Windows Vista defines two adjustment rules:</span></span>  
  
-   <span data-ttu-id="be1f0-178">0001年1月1日星期一至星期日，2006年12月31日。</span><span class="sxs-lookup"><span data-stu-id="be1f0-178">Monday, January 01, 0001, to Sunday, December 31, 2006.</span></span>  
  
-   <span data-ttu-id="be1f0-179">2007年1月31日，星期一至星期五，9999，星期五。</span><span class="sxs-lookup"><span data-stu-id="be1f0-179">Monday, January 01, 2007, to Friday, December 31, 9999.</span></span>  
  
 <span data-ttu-id="be1f0-180">这意味着，尽管注册表中存储的时区调整规则对于执行当前时区相关操作非常有用，但无法可靠地用于检索历史时区信息。</span><span class="sxs-lookup"><span data-stu-id="be1f0-180">This means that, although time zone adjustment rules stored in the registry are useful for performing current time zone-related operations, they cannot be reliably used for retrieving historical time zone information.</span></span> <span data-ttu-id="be1f0-181">若要了解如何使用多个调整规则定义可在历史时区感知应用程序中使用的自定义时区，请参阅[如何：创建含调整规则的时区](/dotnet/standard/datetime/create-time-zones-with-adjustment-rules)。</span><span class="sxs-lookup"><span data-stu-id="be1f0-181">For information about defining a custom time zone with multiple adjustment rules that can be used in a historical time zone-aware application, see [How to: Create Time Zones with Adjustment Rules](/dotnet/standard/datetime/create-time-zones-with-adjustment-rules).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be1f0-182">下面的示例显示有关在本地计算机的系统注册表中定义的所有时区的信息，包括其调整规则的开始日期和结束日期。</span><span class="sxs-lookup"><span data-stu-id="be1f0-182">The following example displays information about all of the time zones defined in the local computer's system registry, including the starting and ending dates of their adjustment rules.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightDelta">
      <MemberSignature Language="C#" Value="public TimeSpan DaylightDelta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DaylightDelta" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightDelta As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DaylightDelta { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightDelta : TimeSpan" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be1f0-183">获取构成时区的夏令时所需的时间量。</span><span class="sxs-lookup"><span data-stu-id="be1f0-183">Gets the amount of time that is required to form the time zone's daylight saving time.</span></span> <span data-ttu-id="be1f0-184">将此时间量从协调世界时 (UTC) 添加到时区偏移量。</span><span class="sxs-lookup"><span data-stu-id="be1f0-184">This amount of time is added to the time zone's offset from Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="be1f0-185">一个 <see cref="T:System.TimeSpan" /> 对象，该对象指示将添加到调整规则引起的标准时间更改的时间量。</span><span class="sxs-lookup"><span data-stu-id="be1f0-185">A <see cref="T:System.TimeSpan" /> object that indicates the amount of time to add to the standard time changes as a result of the adjustment rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be1f0-186">以下公式定义时区的夏时制：</span><span class="sxs-lookup"><span data-stu-id="be1f0-186">The following formula defines a time zone's daylight saving time:</span></span>  
  
```  
TimeZoneTime = BaseUtcOffset + DaylightDelta + UtcTime  
```  
  
 <span data-ttu-id="be1f0-187"><xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> 属性的值的范围为14小时到-14 小时。</span><span class="sxs-lookup"><span data-stu-id="be1f0-187">The value of the <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> property can range from 14 hours to -14 hours.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be1f0-188"><xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> 属性测量时区标准时间与夏时制之间的时差。</span><span class="sxs-lookup"><span data-stu-id="be1f0-188">The <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> property measures the difference between the time zone's standard time and its daylight saving time.</span></span> <span data-ttu-id="be1f0-189">它不适用于时区的标准偏移与协调世界时（UTC）之间的更改。</span><span class="sxs-lookup"><span data-stu-id="be1f0-189">It does not apply to changes in a time zone's standard offset from Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="be1f0-190">若要表示已更改其标准时间与 UTC 的偏移量的时区，必须调用 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 方法来创建新时区。</span><span class="sxs-lookup"><span data-stu-id="be1f0-190">To represent a time zone that has changed its standard time offset from UTC, you must call the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to create a new time zone.</span></span>  
  
 <span data-ttu-id="be1f0-191">最常见的 <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> 属性值为1.0 小时。</span><span class="sxs-lookup"><span data-stu-id="be1f0-191">The most common value of the <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> property is 1.0 hours.</span></span> <span data-ttu-id="be1f0-192">夏令时调整规则的应用会将时区相对于协调世界时（UTC）的偏移量增加1小时。</span><span class="sxs-lookup"><span data-stu-id="be1f0-192">The application of the daylight saving time adjustment rule increases the time zone's offset from Coordinated Universal Time (UTC) by one hour.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionEnd">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionEnd As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionEnd { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionEnd : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be1f0-193">获取有关每年何时从夏时制转换回标准时间的信息。</span><span class="sxs-lookup"><span data-stu-id="be1f0-193">Gets information about the annual transition from daylight saving time back to standard time.</span></span></summary>
        <value><span data-ttu-id="be1f0-194">一个 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 对象，定义每年何时从夏时制转换回时区的标准时间。</span><span class="sxs-lookup"><span data-stu-id="be1f0-194">A <see cref="T:System.TimeZoneInfo.TransitionTime" /> object that defines the annual transition from daylight saving time back to the time zone's standard time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be1f0-195"><xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> 属性返回的 <xref:System.TimeZoneInfo.TransitionTime> 对象定义固定日期规则或返回到标准时间的浮动日期规则。</span><span class="sxs-lookup"><span data-stu-id="be1f0-195">The <xref:System.TimeZoneInfo.TransitionTime> object returned by the <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> property defines either a fixed-date rule or a floating-date rule for the return to standard time.</span></span> <span data-ttu-id="be1f0-196">固定日期规则提供发生转换的月份、日期和时间。</span><span class="sxs-lookup"><span data-stu-id="be1f0-196">A fixed-date rule provides the month, day, and time of day on which the transition occurs.</span></span> <span data-ttu-id="be1f0-197">浮动日期规则提供了在一周中的哪个月、每周、哪一天以及发生转换的时间。</span><span class="sxs-lookup"><span data-stu-id="be1f0-197">A floating-date rule provides the month, week, day of the week, and time of day on which the transition occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionStart">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionStart As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionStart { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionStart : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be1f0-198">获取有关每年何时从标准时间转换为夏时制的信息。</span><span class="sxs-lookup"><span data-stu-id="be1f0-198">Gets information about the annual transition from standard time to daylight saving time.</span></span></summary>
        <value><span data-ttu-id="be1f0-199">一个 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 对象，定义每年何时从时区的标准时间转换为夏时制。</span><span class="sxs-lookup"><span data-stu-id="be1f0-199">A <see cref="T:System.TimeZoneInfo.TransitionTime" /> object that defines the annual transition from a time zone's standard time to daylight saving time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be1f0-200"><xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> 属性返回的 <xref:System.TimeZoneInfo.TransitionTime> 对象定义固定日期规则或用于转换到夏令时的浮动日期规则。</span><span class="sxs-lookup"><span data-stu-id="be1f0-200">The <xref:System.TimeZoneInfo.TransitionTime> object returned by the <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> property defines either a fixed-date rule or a floating-date rule for the transition to daylight saving time.</span></span> <span data-ttu-id="be1f0-201">固定日期规则提供发生转换的月份、日期和时间。</span><span class="sxs-lookup"><span data-stu-id="be1f0-201">A fixed-date rule provides the month, day, and time of day on which the transition occurs.</span></span> <span data-ttu-id="be1f0-202">浮动日期规则提供月、周、一周中的某一天以及发生转换的时间。</span><span class="sxs-lookup"><span data-stu-id="be1f0-202">A floating-date rule provides the month, the week, the day of the week, and the time of day on which the transition occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo.AdjustmentRule other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.TimeZoneInfo/AdjustmentRule other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo.AdjustmentRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo::AdjustmentRule ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeZoneInfo.AdjustmentRule -&gt; bool" Usage="adjustmentRule.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo+AdjustmentRule" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="be1f0-203">要与当前对象进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="be1f0-203">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="be1f0-204">确定当前 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 对象是否等于第二个 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="be1f0-204">Determines whether the current <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> object is equal to a second <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> object.</span></span></summary>
        <returns><span data-ttu-id="be1f0-205">如果两个 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 对象具有相等的值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="be1f0-205"><see langword="true" /> if both <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> objects have equal values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be1f0-206">若要确定两个 <xref:System.TimeZoneInfo.AdjustmentRule> 对象是否相等，<xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29> 方法会比较每个对象的成员值。</span><span class="sxs-lookup"><span data-stu-id="be1f0-206">To determine whether two <xref:System.TimeZoneInfo.AdjustmentRule> objects are equal, the <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29> method compares the member values of each object.</span></span> <span data-ttu-id="be1f0-207">如果两个调整规则与 <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> 和 <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> 属性返回的 <xref:System.TimeZoneInfo.TransitionTime> 对象具有相同的有效日期、相同的增量和相同的值，则这两个调整规则是相等的。</span><span class="sxs-lookup"><span data-stu-id="be1f0-207">Two adjustment rules are equal if they have the same effective dates, the same delta, and identical values for the <xref:System.TimeZoneInfo.TransitionTime> objects returned by their <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> and <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be1f0-208">下面的示例调用 <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29?displayProperty=nameWithType> 方法，将中部标准时间的调整规则与加拿大中部标准时间和墨西哥标准时间的调整规则进行比较。</span><span class="sxs-lookup"><span data-stu-id="be1f0-208">The following example calls the <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29?displayProperty=nameWithType> method to compare the adjustment rules for Central Standard Time with those for Canada Central Standard Time and Mexico Standard Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#2)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#2)]  
  
 <span data-ttu-id="be1f0-209">此代码将向控制台显示以下输出：</span><span class="sxs-lookup"><span data-stu-id="be1f0-209">This code displays the following output to the console:</span></span>  
  
```  
Comparing Central Standard Time rule for 1/1/0001 to 12/31/9999 with:  
   Canada Central Standard Time has no adjustment rules.  
   Mexican CST for 1/1/0001 to 12/31/9999: Equal  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="adjustmentRule.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be1f0-210">用作哈希算法的哈希函数和数据结构（如哈希表）。</span><span class="sxs-lookup"><span data-stu-id="be1f0-210">Serves as a hash function for hashing algorithms and data structures such as hash tables.</span></span></summary>
        <returns><span data-ttu-id="be1f0-211">一个 32 位带符号整数，用作当前 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="be1f0-211">A 32-bit signed integer that serves as the hash code for the current <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.IDeserializationCallback.OnDeserialization : obj -&gt; unit&#xA;override this.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization : obj -&gt; unit" Usage="adjustmentRule.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="be1f0-212">启动回调的对象。</span><span class="sxs-lookup"><span data-stu-id="be1f0-212">The object that initiated the callback.</span></span> <span data-ttu-id="be1f0-213">当前未实现该参数的功能。</span><span class="sxs-lookup"><span data-stu-id="be1f0-213">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="be1f0-214">在 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 对象的反序列化完成时运行。</span><span class="sxs-lookup"><span data-stu-id="be1f0-214">Runs when the deserialization of a <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> object is completed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="adjustmentRule.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="be1f0-215">要用数据填充的 对象。</span><span class="sxs-lookup"><span data-stu-id="be1f0-215">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="be1f0-216">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</span><span class="sxs-lookup"><span data-stu-id="be1f0-216">The destination for this serialization (see <see cref="T:System.Runtime.Serialization.StreamingContext" />).</span></span></param>
        <summary><span data-ttu-id="be1f0-217">使用序列化 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所需的数据填充此对象。</span><span class="sxs-lookup"><span data-stu-id="be1f0-217">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data that is required to serialize this object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
