<Type Name="NullReferenceException" FullName="System.NullReferenceException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="afb46e3297a3ada8613afa83831d1e563711981c" /><Meta Name="ms.sourcegitcommit" Value="9a0316374d19cc78674994106d073aa5ef1bd5f3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/10/2020" /><Meta Name="ms.locfileid" Value="94469692" /></Metadata><TypeSignature Language="C#" Value="public class NullReferenceException : Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NullReferenceException extends System.Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.NullReferenceException" />
  <TypeSignature Language="VB.NET" Value="Public Class NullReferenceException&#xA;Inherits Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class NullReferenceException : Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type NullReferenceException = class&#xA;    inherit Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public class NullReferenceException : SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NullReferenceException extends System.SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class NullReferenceException&#xA;Inherits SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class NullReferenceException : SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type NullReferenceException = class&#xA;    inherit SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NullReferenceException extends System.SystemException" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f68aa-101">尝试取消引用空对象引用时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="f68aa-101">The exception that is thrown when there is an attempt to dereference a null object reference.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f68aa-102"><xref:System.NullReferenceException>尝试访问值为的类型的成员时，将引发异常 `null` 。</span><span class="sxs-lookup"><span data-stu-id="f68aa-102">A <xref:System.NullReferenceException> exception is thrown when you try to access a member on a type whose value is `null`.</span></span> <span data-ttu-id="f68aa-103"><xref:System.NullReferenceException>异常通常反映开发人员错误，在以下情况下引发：</span><span class="sxs-lookup"><span data-stu-id="f68aa-103">A <xref:System.NullReferenceException> exception typically reflects developer error and is thrown in the following scenarios:</span></span>  
  
-   <span data-ttu-id="f68aa-104">您忘记了实例化引用类型。</span><span class="sxs-lookup"><span data-stu-id="f68aa-104">You've forgotten to instantiate a reference type.</span></span> <span data-ttu-id="f68aa-105">在下面的示例中， `names` 已声明但从未实例化：</span><span class="sxs-lookup"><span data-stu-id="f68aa-105">In the following example, `names` is declared but never instantiated:</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example1.cs#1)]
     [!code-vb[System.NullReferenceException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example1.vb#1)]  
  
     <span data-ttu-id="f68aa-106">在编译此代码时，某些编译器会发出警告。</span><span class="sxs-lookup"><span data-stu-id="f68aa-106">Some compilers issue a warning when they compile this code.</span></span> <span data-ttu-id="f68aa-107">其他人发出错误，编译失败。</span><span class="sxs-lookup"><span data-stu-id="f68aa-107">Others issue an error, and the compilation fails.</span></span> <span data-ttu-id="f68aa-108">若要解决此问题，请实例化对象，使其值不再存在 `null` 。</span><span class="sxs-lookup"><span data-stu-id="f68aa-108">To address this problem, instantiate the object so that its value is no longer `null`.</span></span> <span data-ttu-id="f68aa-109">下面的示例通过调用类型的类构造函数来实现此功能。</span><span class="sxs-lookup"><span data-stu-id="f68aa-109">The following example does this by calling a type's class constructor.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example1a.cs#2)]
     [!code-vb[System.NullReferenceException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example1a.vb#2)]  
  
-   <span data-ttu-id="f68aa-110">在初始化数组之前，您已经忘记了维度。</span><span class="sxs-lookup"><span data-stu-id="f68aa-110">You've forgotten to dimension an array before initializing it.</span></span> <span data-ttu-id="f68aa-111">在下面的示例中， `values` 将声明为整数数组，但从不指定它包含的元素的数目。</span><span class="sxs-lookup"><span data-stu-id="f68aa-111">In the following example, `values` is declared to be an integer array, but the number of elements that it contains is never specified.</span></span> <span data-ttu-id="f68aa-112">尝试初始化其值，因此引发了  <xref:System.NullReferenceException> 异常。</span><span class="sxs-lookup"><span data-stu-id="f68aa-112">The attempt to initialize its values therefore thrown a  <xref:System.NullReferenceException> exception.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array3.cs#10)]
     [!code-vb[System.NullReferenceException.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array3.vb#10)]  
  
     <span data-ttu-id="f68aa-113">可以通过在初始化数组中的元素数量之前对其进行声明，如以下示例中所示。</span><span class="sxs-lookup"><span data-stu-id="f68aa-113">You can eliminate the exception by declaring the number of elements in the array before initializing it, as the following example does.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array4.cs#11)]
     [!code-vb[System.NullReferenceException.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array4.vb#11)]  
  
     <span data-ttu-id="f68aa-114">有关声明和初始化数组的详细信息，请参阅 [数组](/dotnet/csharp/programming-guide/arrays/) 和 [数组](/dotnet/visual-basic/programming-guide/language-features/arrays/)。</span><span class="sxs-lookup"><span data-stu-id="f68aa-114">For more information on declaring and initializing arrays, see [Arrays](/dotnet/csharp/programming-guide/arrays/) and [Arrays](/dotnet/visual-basic/programming-guide/language-features/arrays/).</span></span>  
  
-   <span data-ttu-id="f68aa-115">从方法获取 **null** 返回值，然后对返回的类型调用方法。</span><span class="sxs-lookup"><span data-stu-id="f68aa-115">You get a **null** return value from a method, and then call a method on the returned type.</span></span> <span data-ttu-id="f68aa-116">这有时是文档错误的结果;该文档无法注意到，方法调用可以返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="f68aa-116">This sometimes is the result of a documentation error; the documentation fails to note that a method call can return `null`.</span></span> <span data-ttu-id="f68aa-117">在其他情况下，代码错误地假定方法将始终返回非 **null** 值。</span><span class="sxs-lookup"><span data-stu-id="f68aa-117">In other cases, your code erroneously assumes that the method will always return a non- **null** value.</span></span>  
  
     <span data-ttu-id="f68aa-118">以下示例中的代码假定 <xref:System.Array.Find%2A?displayProperty=nameWithType> 方法始终返回 `Person` 其 `FirstName` 字段与搜索字符串匹配的对象。</span><span class="sxs-lookup"><span data-stu-id="f68aa-118">The code in the following example assumes that the <xref:System.Array.Find%2A?displayProperty=nameWithType> method always returns `Person` object whose `FirstName` field matches a search string.</span></span> <span data-ttu-id="f68aa-119">由于没有匹配项，运行时将引发 <xref:System.NullReferenceException> 异常。</span><span class="sxs-lookup"><span data-stu-id="f68aa-119">Because there is no match, the runtime throws a <xref:System.NullReferenceException> exception.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/nullreturn2.cs#4)]
     [!code-vb[System.NullReferenceException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/nullreturn2.vb#4)]  
  
     <span data-ttu-id="f68aa-120">若要解决此问题，请测试方法的返回值，以确保它不 `null` 在调用其任何成员之前，如以下示例中所示。</span><span class="sxs-lookup"><span data-stu-id="f68aa-120">To address this problem, test the method's return value to ensure that it is not `null` before calling any of its members, as the following example does.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/nullreturn2a.cs#5)]
     [!code-vb[System.NullReferenceException.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/nullreturn2a.vb#5)]  
  
-   <span data-ttu-id="f68aa-121">你使用的是表达式 (例如，你要将方法或属性的列表链接在一起) 以检索值，但你要检查值是否为 `null` ，则运行时仍会引发 <xref:System.NullReferenceException> 异常。</span><span class="sxs-lookup"><span data-stu-id="f68aa-121">You're using an expression (for example, you're chaining a list of methods or properties together) to retrieve a value and, although you're checking whether the value is `null`, the runtime still throws a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="f68aa-122">出现这种情况的原因是表达式中的一个中间值返回了 `null` 。</span><span class="sxs-lookup"><span data-stu-id="f68aa-122">This occurs because one of the intermediate values in the expression returns `null`.</span></span> <span data-ttu-id="f68aa-123">因此，永远不会计算的测试结果 `null` 。</span><span class="sxs-lookup"><span data-stu-id="f68aa-123">As a result, your test for `null` is never evaluated.</span></span>  
  
     <span data-ttu-id="f68aa-124">下面的示例定义了一个 `Pages` 对象，该对象缓存有关网页的信息，这些信息由 `Page` 对象提供。</span><span class="sxs-lookup"><span data-stu-id="f68aa-124">The following example defines a `Pages` object that  caches information about web pages, which are presented by `Page` objects.</span></span> <span data-ttu-id="f68aa-125">`Example.Main`方法检查当前网页是否具有非 null 标题，如果存在，则显示标题。</span><span class="sxs-lookup"><span data-stu-id="f68aa-125">The `Example.Main` method checks whether the current web page has a non-null title and, if it does, displays the title.</span></span> <span data-ttu-id="f68aa-126">尽管进行了此检查，但该方法会引发 <xref:System.NullReferenceException> 异常。</span><span class="sxs-lookup"><span data-stu-id="f68aa-126">Despite this check, however, the method throws a <xref:System.NullReferenceException> exception.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Chain1.cs#6)]
     [!code-vb[System.NullReferenceException.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Chain1.vb#6)]  
  
     <span data-ttu-id="f68aa-127">引发此异常的原因 `pages.CurrentPage` 是 `null` ，如果缓存中没有任何页信息，则返回。</span><span class="sxs-lookup"><span data-stu-id="f68aa-127">The exception is thrown because `pages.CurrentPage` returns `null` if no page information is  stored in the cache.</span></span> <span data-ttu-id="f68aa-128">在检索当前对象的属性之前，可以通过测试属性的值来更正此异常 `CurrentPage` `Page` `Title` ，如以下示例所示：</span><span class="sxs-lookup"><span data-stu-id="f68aa-128">This exception can be corrected by testing the value of the `CurrentPage` property before retrieving the current `Page` object's `Title` property, as the following example does:</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Chain2.cs#7)]
     [!code-vb[System.NullReferenceException.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Chain2.vb#7)]  
  
-   <span data-ttu-id="f68aa-129">你正在枚举包含引用类型的数组元素，而你尝试处理其中一个元素会引发 <xref:System.NullReferenceException> 异常。</span><span class="sxs-lookup"><span data-stu-id="f68aa-129">You're enumerating the elements of an array that contains reference types, and your attempt to process one of the elements throws a <xref:System.NullReferenceException> exception.</span></span>  
  
     <span data-ttu-id="f68aa-130">下面的示例定义一个字符串数组。</span><span class="sxs-lookup"><span data-stu-id="f68aa-130">The following example defines a string array.</span></span> <span data-ttu-id="f68aa-131">`for`语句枚举数组中的元素，并 <xref:System.String.Trim%2A> 在显示字符串之前调用每个字符串的方法。</span><span class="sxs-lookup"><span data-stu-id="f68aa-131">A `for` statement enumerates the elements in the array and calls each string's <xref:System.String.Trim%2A> method before displaying the string.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array1.cs#8)]
     [!code-vb[System.NullReferenceException.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array1.vb#8)]  
  
     <span data-ttu-id="f68aa-132">如果假定数组的每个元素都必须包含非 null 值，并且数组元素的值实际上为，则会发生此异常 `null` 。</span><span class="sxs-lookup"><span data-stu-id="f68aa-132">This exception occurs if you assume that each element of the array must contain a non-null value, and the value of the array element is in fact `null`.</span></span> <span data-ttu-id="f68aa-133">可以通过测试元素是否在 `null` 对该元素执行任何操作之前消除此异常，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="f68aa-133">The exception can be eliminated by testing whether the element is `null` before performing any operation on that element, as the following example shows.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array2.cs#9)]
     [!code-vb[System.NullReferenceException.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array2.vb#9)]  
  
-   <span data-ttu-id="f68aa-134"><xref:System.NullReferenceException>传递的方法引发异常 `null` 。</span><span class="sxs-lookup"><span data-stu-id="f68aa-134">A <xref:System.NullReferenceException> exception is thrown by a method that is passed `null`.</span></span> <span data-ttu-id="f68aa-135">某些方法会验证传递给它们的参数。</span><span class="sxs-lookup"><span data-stu-id="f68aa-135">Some methods validate the arguments that are passed to them.</span></span> <span data-ttu-id="f68aa-136">如果这些参数为 `null` ，则该方法将引发 <xref:System.ArgumentNullException?displayProperty=nameWithType> 异常。</span><span class="sxs-lookup"><span data-stu-id="f68aa-136">If they do and one of the arguments is `null`, the method throws an <xref:System.ArgumentNullException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="f68aa-137">否则，会引发 <xref:System.NullReferenceException> 异常。</span><span class="sxs-lookup"><span data-stu-id="f68aa-137">Otherwise, it throws a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="f68aa-138">下面的示例演示了这种情况。</span><span class="sxs-lookup"><span data-stu-id="f68aa-138">The following example illustrates this scenario.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example2.cs#3)]
     [!code-vb[System.NullReferenceException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example2.vb#3)]  
  
     <span data-ttu-id="f68aa-139">若要解决此问题，请确保传递给方法的参数不是 `null` ，或者处理块中引发的异常 `try…catch…finally` 。</span><span class="sxs-lookup"><span data-stu-id="f68aa-139">To address this issue, make sure that the argument passed to the method is not `null`, or handle the thrown exception in a `try…catch…finally` block.</span></span> <span data-ttu-id="f68aa-140">有关更多信息，请参见 [异常](/dotnet/standard/exceptions/)中定义的接口的私有 C++ 特定实现。</span><span class="sxs-lookup"><span data-stu-id="f68aa-140">For more information, see [Exceptions](/dotnet/standard/exceptions/).</span></span>  
  
 <span data-ttu-id="f68aa-141">以下 Microsoft 中间语言 (MSIL) 指令引发 <xref:System.NullReferenceException> ： `callvirt` 、 `cpblk` 、、、、、、、、、、、、 `cpobj` `initblk` `ldelem.<type>` `ldelema` `ldfld` `ldflda` `ldind.<type>` `ldlen` `stelem.<type>` `stfld` `stind.<type>` `throw` 和 `unbox` 。</span><span class="sxs-lookup"><span data-stu-id="f68aa-141">The following Microsoft intermediate language (MSIL) instructions throw <xref:System.NullReferenceException>: `callvirt`, `cpblk`, `cpobj`, `initblk`, `ldelem.<type>`, `ldelema`, `ldfld`, `ldflda`, `ldind.<type>`, `ldlen`, `stelem.<type>`, `stfld`, `stind.<type>`, `throw`, and `unbox`.</span></span>  
  
 <span data-ttu-id="f68aa-142"><xref:System.NullReferenceException> 使用 HRESULT COR_E_NULLREFERENCE，其值为0x80004003。</span><span class="sxs-lookup"><span data-stu-id="f68aa-142"><xref:System.NullReferenceException> uses the HRESULT COR_E_NULLREFERENCE, which has the value 0x80004003.</span></span>  
  
 <span data-ttu-id="f68aa-143">有关实例的初始属性值的列表<xref:System.NullReferenceException>，请参阅<xref:System.NullReferenceException.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="f68aa-143">For a list of initial property values for an instance of <xref:System.NullReferenceException>, see the <xref:System.NullReferenceException.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="f68aa-144">**处理发行代码中的 NullReferenceException**</span><span class="sxs-lookup"><span data-stu-id="f68aa-144">**Handling NullReferenceException in release code**</span></span>  
  
 <span data-ttu-id="f68aa-145">通常，更好的做法是避免 NullReferenceException 在发生后对其进行处理。</span><span class="sxs-lookup"><span data-stu-id="f68aa-145">It's usually better to avoid a NullReferenceException than to handle it after it occurs.</span></span> <span data-ttu-id="f68aa-146">处理异常会导致代码更难维护和理解，并且有时会引入其他 bug。</span><span class="sxs-lookup"><span data-stu-id="f68aa-146">Handling an exception can make your code harder to maintain and understand, and can sometimes introduce other bugs.</span></span> <span data-ttu-id="f68aa-147">NullReferenceException 通常为不可恢复的错误。</span><span class="sxs-lookup"><span data-stu-id="f68aa-147">A NullReferenceException is often a non-recoverable error.</span></span> <span data-ttu-id="f68aa-148">在这些情况下，让异常停止应用可能是最佳替代方法。</span><span class="sxs-lookup"><span data-stu-id="f68aa-148">In these cases, letting the exception stop the app might be the best alternative.</span></span>  
  
 <span data-ttu-id="f68aa-149">然而，在许多情况下，处理错误可能非常有用：</span><span class="sxs-lookup"><span data-stu-id="f68aa-149">However, there are many situations where handling the error can be useful:</span></span>  
  
-   <span data-ttu-id="f68aa-150">你的应用可以忽略为 null 的对象。</span><span class="sxs-lookup"><span data-stu-id="f68aa-150">Your app can ignore objects that are null.</span></span> <span data-ttu-id="f68aa-151">例如，如果你的应用检索并处理数据库中的记录，则你可以忽略一些导致 null 对象的错误记录。</span><span class="sxs-lookup"><span data-stu-id="f68aa-151">For example, if your app retrieves and processes records in a database, you might be able to ignore some number of bad records that result in null objects.</span></span> <span data-ttu-id="f68aa-152">你可能仅需在日志文件或应用程序 UI 中记录错误数据。</span><span class="sxs-lookup"><span data-stu-id="f68aa-152">Recording the bad data in a log file or in the application UI might be all you have to do.</span></span>  
  
-   <span data-ttu-id="f68aa-153">可以从异常中恢复。</span><span class="sxs-lookup"><span data-stu-id="f68aa-153">You can recover from the exception.</span></span> <span data-ttu-id="f68aa-154">例如，如果连接丢失或连接超时，则对返回引用类型的 web 服务的调用可能会返回 null。您可以尝试重新建立连接并再次尝试调用。</span><span class="sxs-lookup"><span data-stu-id="f68aa-154">For example, a call to a web service that returns a reference type might return null if the connection is lost or the connection times out. You can attempt to reestablish the connection and try the call again.</span></span>  
  
-   <span data-ttu-id="f68aa-155">可将你的应用状态还原到有效状态。</span><span class="sxs-lookup"><span data-stu-id="f68aa-155">You can restore the state of your app to a valid state.</span></span> <span data-ttu-id="f68aa-156">例如，你可能要执行多步骤的任务，该任务需要你在调用引发 NullReferenceException 的方法之前将信息保存到数据存储。</span><span class="sxs-lookup"><span data-stu-id="f68aa-156">For example, you might be performing a multi-step task that requires you to save information to a data store before you call a method that throws a NullReferenceException.</span></span> <span data-ttu-id="f68aa-157">如果未初始化的对象可能会损坏数据记录，你可以在关闭应用之前删除之前的数据。</span><span class="sxs-lookup"><span data-stu-id="f68aa-157">If the uninitialized object would corrupt the data record, you can remove the previous data before you close the app.</span></span>  
  
-   <span data-ttu-id="f68aa-158">你需要报告异常。</span><span class="sxs-lookup"><span data-stu-id="f68aa-158">You want to report the exception.</span></span> <span data-ttu-id="f68aa-159">例如，如果该错误由应用用户的某个错误引起，你可以生成一条可帮助该用户提供正确信息的消息。</span><span class="sxs-lookup"><span data-stu-id="f68aa-159">For example, if the error was caused by a mistake from the user of your app, you can generate a message to help him supply the correct information.</span></span> <span data-ttu-id="f68aa-160">你还可以记录有关该错误的信息来帮助你解决此问题。</span><span class="sxs-lookup"><span data-stu-id="f68aa-160">You can also log information about the error to help you fix the problem.</span></span> <span data-ttu-id="f68aa-161">某些框架（如 ASP.NET）具有高级别的异常处理程序，该处理程序可捕获所有错误，以便应用永远不会发生崩溃，在这种情况下，记录异常可能是你用来了解是否发生异常的唯一方式。</span><span class="sxs-lookup"><span data-stu-id="f68aa-161">Some frameworks, like ASP.NET, have a high-level exception handler that captures all errors to that the app never crashes; in that case, logging the exception might be the only way you can know that it occurs.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="f68aa-162">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="f68aa-162">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f68aa-163">初始化 <see cref="T:System.NullReferenceException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f68aa-163">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f68aa-164">初始化 <see cref="T:System.NullReferenceException" /> 类的新实例，将新实例的 <see cref="P:System.Exception.Message" /> 属性设置为系统提供的描述错误的消息，如“在需要对象实例的地方找到了值‘null’。”。</span><span class="sxs-lookup"><span data-stu-id="f68aa-164">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class, setting the <see cref="P:System.Exception.Message" /> property of the new instance to a system-supplied message that describes the error, such as "The value 'null' was found where an instance of an object was required."</span></span> <span data-ttu-id="f68aa-165">此消息会考虑当前系统区域性。</span><span class="sxs-lookup"><span data-stu-id="f68aa-165">This message takes into account the current system culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f68aa-166">下表显示了 <xref:System.NullReferenceException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="f68aa-166">The following table shows the initial property values for an instance of <xref:System.NullReferenceException>.</span></span>  
  
|<span data-ttu-id="f68aa-167">properties</span><span class="sxs-lookup"><span data-stu-id="f68aa-167">Property</span></span>|<span data-ttu-id="f68aa-168">值</span><span class="sxs-lookup"><span data-stu-id="f68aa-168">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="f68aa-169">`null`.</span><span class="sxs-lookup"><span data-stu-id="f68aa-169">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="f68aa-170">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="f68aa-170">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new NullReferenceException : string -&gt; NullReferenceException" Usage="new System.NullReferenceException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f68aa-171">描述该错误的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="f68aa-171">A <see cref="T:System.String" /> that describes the error.</span></span> <span data-ttu-id="f68aa-172"><paramref name="message" /> 的内容设计为易于理解。</span><span class="sxs-lookup"><span data-stu-id="f68aa-172">The content of <paramref name="message" /> is intended to be understood by humans.</span></span> <span data-ttu-id="f68aa-173">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="f68aa-173">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="f68aa-174">用指定的错误消息初始化 <see cref="T:System.NullReferenceException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f68aa-174">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f68aa-175">下表显示了 <xref:System.NullReferenceException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="f68aa-175">The following table shows the initial property values for an instance of <xref:System.NullReferenceException>.</span></span>  
  
|<span data-ttu-id="f68aa-176">properties</span><span class="sxs-lookup"><span data-stu-id="f68aa-176">Property</span></span>|<span data-ttu-id="f68aa-177">值</span><span class="sxs-lookup"><span data-stu-id="f68aa-177">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="f68aa-178">`null`.</span><span class="sxs-lookup"><span data-stu-id="f68aa-178">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="f68aa-179">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="f68aa-179">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NullReferenceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NullReferenceException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new NullReferenceException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; NullReferenceException" Usage="new System.NullReferenceException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="f68aa-180">承载序列化对象数据的对象。</span><span class="sxs-lookup"><span data-stu-id="f68aa-180">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="f68aa-181">关于来源和目标的上下文信息</span><span class="sxs-lookup"><span data-stu-id="f68aa-181">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="f68aa-182">用序列化数据初始化 <see cref="T:System.NullReferenceException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f68aa-182">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f68aa-183">在反序列化期间调用此构造函数以重新构造在流上传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="f68aa-183">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="f68aa-184">有关详细信息，请参阅 [XML 和 SOAP 序列化](/dotnet/standard/serialization/xml-and-soap-serialization)。</span><span class="sxs-lookup"><span data-stu-id="f68aa-184">For more information, see [XML and SOAP Serialization](/dotnet/standard/serialization/xml-and-soap-serialization).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/serialization/xml-and-soap-serialization"><span data-ttu-id="f68aa-185">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="f68aa-185">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new NullReferenceException : string * Exception -&gt; NullReferenceException" Usage="new System.NullReferenceException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f68aa-186">解释异常原因的错误消息。</span><span class="sxs-lookup"><span data-stu-id="f68aa-186">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="f68aa-187">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="f68aa-187">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="f68aa-188">如果 <paramref name="innerException" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</span><span class="sxs-lookup"><span data-stu-id="f68aa-188">If the <paramref name="innerException" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="f68aa-189">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.NullReferenceException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f68aa-189">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f68aa-190">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="f68aa-190">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="f68aa-191"><xref:System.Exception.InnerException%2A> 属性将返回传递给构造函数的同一值；如果 <xref:System.Exception.InnerException%2A> 属性不向构造函数提供内部异常值，则返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="f68aa-191">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="f68aa-192">下表显示了 <xref:System.NullReferenceException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="f68aa-192">The following table shows the initial property values for an instance of <xref:System.NullReferenceException>.</span></span>  
  
|<span data-ttu-id="f68aa-193">properties</span><span class="sxs-lookup"><span data-stu-id="f68aa-193">Property</span></span>|<span data-ttu-id="f68aa-194">“值”</span><span class="sxs-lookup"><span data-stu-id="f68aa-194">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="f68aa-195">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="f68aa-195">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="f68aa-196">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="f68aa-196">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="f68aa-197">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="f68aa-197">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
