<Type Name="IObserver&lt;T&gt;" FullName="System.IObserver&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6fee8c12da189f9772de1bf8fda70a7f6f4c8ae2" /><Meta Name="ms.sourcegitcommit" Value="9a0316374d19cc78674994106d073aa5ef1bd5f3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/10/2020" /><Meta Name="ms.locfileid" Value="94470420" /></Metadata><TypeSignature Language="C#" Value="public interface IObserver&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObserver`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObserver`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObserver(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObserver" />
  <TypeSignature Language="F#" Value="type IObserver&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="6d96f-101">提供通知信息的对象。</span><span class="sxs-lookup"><span data-stu-id="6d96f-101">The object that provides notification information.</span></span></typeparam>
    <summary><span data-ttu-id="6d96f-102">提供用于接收基于推送的通知的机制。</span><span class="sxs-lookup"><span data-stu-id="6d96f-102">Provides a mechanism for receiving push-based notifications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d96f-103"><xref:System.IObserver%601>和 <xref:System.IObservable%601> 接口为基于推送的通知（也称为观察者设计模式）提供通用机制。</span><span class="sxs-lookup"><span data-stu-id="6d96f-103">The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</span></span> <span data-ttu-id="6d96f-104"><xref:System.IObservable%601>接口表示类，该类 (提供程序) 发送通知; <xref:System.IObserver%601> 接口表示在观察程序)  (接收它们的类。</span><span class="sxs-lookup"><span data-stu-id="6d96f-104">The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer).</span></span> <span data-ttu-id="6d96f-105">`T` 表示提供通知信息的类。</span><span class="sxs-lookup"><span data-stu-id="6d96f-105">`T` represents the class that provides the notification information.</span></span>  
  
 <span data-ttu-id="6d96f-106"><xref:System.IObserver%601>实现安排，通过将一个 <xref:System.IObservable%601> 实例传递给提供程序的方法，从提供程序 (实现) 接收通知 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="6d96f-106">An <xref:System.IObserver%601> implementation arranges to receive notifications from a provider (an <xref:System.IObservable%601> implementation) by passing an instance of itself to the provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6d96f-107">此方法返回一个 <xref:System.IDisposable> 对象，该对象可用于在提供程序完成发送通知之前取消订阅观察程序。</span><span class="sxs-lookup"><span data-stu-id="6d96f-107">This method returns an <xref:System.IDisposable> object that can be used to unsubscribe the observer before the provider finishes sending notifications.</span></span>  
  
 <span data-ttu-id="6d96f-108"><xref:System.IObserver%601>接口定义了观察程序必须实现的以下三种方法：</span><span class="sxs-lookup"><span data-stu-id="6d96f-108">The <xref:System.IObserver%601> interface defines the following three methods that the observer must implement:</span></span>  
  
-   <span data-ttu-id="6d96f-109"><xref:System.IObserver%601.OnNext%2A>方法，通常由提供程序调用以向观察者提供新数据或状态信息。</span><span class="sxs-lookup"><span data-stu-id="6d96f-109">The <xref:System.IObserver%601.OnNext%2A> method, which is typically called by the provider to supply the observer with new data or state information.</span></span>  
  
-   <span data-ttu-id="6d96f-110"><xref:System.IObserver%601.OnError%2A>方法，通常由提供程序调用，以指示数据不可用、不可访问或已损坏，或者提供程序遇到了一些其他错误情况。</span><span class="sxs-lookup"><span data-stu-id="6d96f-110">The <xref:System.IObserver%601.OnError%2A> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.</span></span>  
  
-   <span data-ttu-id="6d96f-111"><xref:System.IObserver%601.OnCompleted%2A>方法，通常由提供程序调用，以指示已完成向观察者发送通知。</span><span class="sxs-lookup"><span data-stu-id="6d96f-111">The <xref:System.IObserver%601.OnCompleted%2A> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d96f-112">下面的示例演示观察者设计模式。</span><span class="sxs-lookup"><span data-stu-id="6d96f-112">The following example illustrates the observer design pattern.</span></span> <span data-ttu-id="6d96f-113">它定义 `Location` 包含纬度和经度信息的类。</span><span class="sxs-lookup"><span data-stu-id="6d96f-113">It defines a `Location` class that contains latitude and longitude information.</span></span>  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 <span data-ttu-id="6d96f-114">`LocationReporter`类提供 <xref:System.IObserver%601> 实现。</span><span class="sxs-lookup"><span data-stu-id="6d96f-114">The `LocationReporter` class provides the <xref:System.IObserver%601> implementation.</span></span> <span data-ttu-id="6d96f-115">它显示有关当前控制台位置的信息。</span><span class="sxs-lookup"><span data-stu-id="6d96f-115">It displays information about the current location to the console.</span></span> <span data-ttu-id="6d96f-116">其构造函数包含一个 `name` 参数，该参数允许 `LocationReporter` 实例在其字符串输出中标识自身。</span><span class="sxs-lookup"><span data-stu-id="6d96f-116">Its constructor includes a `name` parameter, which allows the `LocationReporter` instance to identify itself in its string output.</span></span> <span data-ttu-id="6d96f-117">它还包括一个 `Subscribe` 方法，该方法将调用提供程序的 <xref:System.IObservable%601.Subscribe%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6d96f-117">It also includes a `Subscribe` method, which wraps a call to the provider's <xref:System.IObservable%601.Subscribe%2A> method.</span></span> <span data-ttu-id="6d96f-118">这使方法可以将返回的 <xref:System.IDisposable> 引用分配给私有变量。</span><span class="sxs-lookup"><span data-stu-id="6d96f-118">This enables the method to assign the returned <xref:System.IDisposable> reference to a private variable.</span></span> <span data-ttu-id="6d96f-119">`LocationReporter`类还包含 `Unsubscribe` 方法，该方法调用 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> 方法返回的对象的方法 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="6d96f-119">The `LocationReporter` class also includes an `Unsubscribe` method, which calls the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method of the object returned by the <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6d96f-120">下面的代码定义 `LocationReporter` 类。</span><span class="sxs-lookup"><span data-stu-id="6d96f-120">The following code defines the `LocationReporter` class.</span></span>  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 <span data-ttu-id="6d96f-121">`LocationTracker`类提供 <xref:System.IObservable%601> 实现。</span><span class="sxs-lookup"><span data-stu-id="6d96f-121">The `LocationTracker` class provides the <xref:System.IObservable%601> implementation.</span></span> <span data-ttu-id="6d96f-122">`TrackLocation`向其方法传递 `Location` 包含纬度和经度数据的可以为 null 的对象。</span><span class="sxs-lookup"><span data-stu-id="6d96f-122">Its `TrackLocation` method is passed a nullable `Location` object that contains the latitude and longitude data.</span></span> <span data-ttu-id="6d96f-123">如果 `Location` 值不为 `null` ，则 `TrackLocation` 方法调用 <xref:System.IObserver%601.OnNext%2A> 每个观察程序的方法。</span><span class="sxs-lookup"><span data-stu-id="6d96f-123">If the `Location` value is not `null`, the `TrackLocation` method calls the <xref:System.IObserver%601.OnNext%2A> method of each observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 <span data-ttu-id="6d96f-124">如果 `Location` 值为 `null` ，则该 `TrackLocation` 方法将实例化 `LocationNotFoundException` 对象，如下例所示。</span><span class="sxs-lookup"><span data-stu-id="6d96f-124">If the `Location` value is `null`, the `TrackLocation` method instantiates a `LocationNotFoundException` object, which is shown in the following example.</span></span> <span data-ttu-id="6d96f-125">然后，它调用每个观察程序的 <xref:System.IObserver%601.OnError%2A> 方法并向其传递 `LocationNotFoundException` 对象。</span><span class="sxs-lookup"><span data-stu-id="6d96f-125">It then calls each observer's <xref:System.IObserver%601.OnError%2A> method and passes it the `LocationNotFoundException` object.</span></span> <span data-ttu-id="6d96f-126">请注意， `LocationNotFoundException` 从派生， <xref:System.Exception> 但不添加任何新成员。</span><span class="sxs-lookup"><span data-stu-id="6d96f-126">Note that `LocationNotFoundException` derives from <xref:System.Exception> but does not add any new members.</span></span>  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 <span data-ttu-id="6d96f-127">观察者通过调用其方法来注册以接收来自对象的通知 `TrackLocation` <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> ，该方法将对观察者对象的引用分配给私有泛型 <xref:System.Collections.Generic.List%601> 对象。</span><span class="sxs-lookup"><span data-stu-id="6d96f-127">Observers register to receive notifications from a `TrackLocation` object by calling its <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method, which assigns a reference to the observer object to a private generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="6d96f-128">方法返回一个 `Unsubscriber` 对象，该对象是一个 <xref:System.IDisposable> 实现，它使观察程序可以停止接收通知。</span><span class="sxs-lookup"><span data-stu-id="6d96f-128">The method returns an `Unsubscriber` object, which is an <xref:System.IDisposable> implementation that enables observers to stop receiving notifications.</span></span> <span data-ttu-id="6d96f-129">`LocationTracker`类还包含 `EndTransmission` 方法。</span><span class="sxs-lookup"><span data-stu-id="6d96f-129">The `LocationTracker` class also includes an `EndTransmission` method.</span></span> <span data-ttu-id="6d96f-130">当没有更多的位置数据可用时，方法会调用每个观察程序的 <xref:System.IObserver%601.OnCompleted%2A> 方法，然后清除观察程序的内部列表。</span><span class="sxs-lookup"><span data-stu-id="6d96f-130">When no further location data is available, the method calls each observer's <xref:System.IObserver%601.OnCompleted%2A> method and then clears the internal list of observers.</span></span>  
  
 <span data-ttu-id="6d96f-131">然后，以下代码实例化提供程序和观察程序。</span><span class="sxs-lookup"><span data-stu-id="6d96f-131">The following code then instantiates the provider and the observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObservable`1" />
  </Docs>
  <Members>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="public void OnCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCompleted();" />
      <MemberSignature Language="F#" Value="abstract member OnCompleted : unit -&gt; unit" Usage="iObserver.OnCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d96f-132">通知观察者提供程序已完成发送基于推送的通知。</span><span class="sxs-lookup"><span data-stu-id="6d96f-132">Notifies the observer that the provider has finished sending push-based notifications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d96f-133">调用观察程序的 <xref:System.IObserver%601.OnCompleted%2A> 实现时， <xref:System.IObserver%601.OnCompleted%2A> 方法可以选择调用在 <xref:System.IDisposable.Dispose%2A> <xref:System.IDisposable> 调用方法时返回到观察者的对象的方法 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="6d96f-133">When the observer's <xref:System.IObserver%601.OnCompleted%2A> implementation is called, the <xref:System.IObserver%601.OnCompleted%2A> method can optionally call the <xref:System.IDisposable.Dispose%2A> method of the <xref:System.IDisposable> object that was returned to the observer when it called the <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d96f-134">下面的示例 <xref:System.IObserver%601.OnCompleted%2A> 在纬度/经度跟踪应用程序中提供方法的实现。</span><span class="sxs-lookup"><span data-stu-id="6d96f-134">The following example provides an implementation of the <xref:System.IObserver%601.OnCompleted%2A> method in a latitude/longitude tracking application.</span></span> <span data-ttu-id="6d96f-135">方法只是报告没有更多数据可用，并调用提供程序的 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> 实现。</span><span class="sxs-lookup"><span data-stu-id="6d96f-135">The method simply reports that no further data is available and calls the provider's <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="6d96f-136">有关完整示例，请参阅主题的 "示例" 部分 <xref:System.IObserver%601> 。</span><span class="sxs-lookup"><span data-stu-id="6d96f-136">See the Example section of the <xref:System.IObserver%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#11)]
 [!code-vb[System.IObserver.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public void OnError (Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(class System.Exception error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnError (error As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnError(Exception ^ error);" />
      <MemberSignature Language="F#" Value="abstract member OnError : Exception -&gt; unit" Usage="iObserver.OnError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="6d96f-137">提供有关错误的附加信息的对象。</span><span class="sxs-lookup"><span data-stu-id="6d96f-137">An object that provides additional information about the error.</span></span></param>
        <summary><span data-ttu-id="6d96f-138">通知观察者提供程序遇到错误情况。</span><span class="sxs-lookup"><span data-stu-id="6d96f-138">Notifies the observer that the provider has experienced an error condition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d96f-139">尽管 `error` 是派生自的对象，但 <xref:System.Exception?displayProperty=nameWithType> 它不一定表示由提供程序引发的异常。</span><span class="sxs-lookup"><span data-stu-id="6d96f-139">Although `error` is an object that is derived from <xref:System.Exception?displayProperty=nameWithType>, it does not necessarily represent an exception that is thrown by the provider.</span></span> <span data-ttu-id="6d96f-140">它还可以表示例程或预期的错误情况，如缺少或不可用的数据。</span><span class="sxs-lookup"><span data-stu-id="6d96f-140">It can also represent a routine or expected error condition, such as data that is missing or unavailable.</span></span> <span data-ttu-id="6d96f-141"><xref:System.IObserver%601.OnError%2A>方法应被视为信息性的，提供程序不应期望观察者提供错误处理。</span><span class="sxs-lookup"><span data-stu-id="6d96f-141">The <xref:System.IObserver%601.OnError%2A> method should be seen as informational, and the provider should not expect the observer to provide error handling.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d96f-142">下面的示例 <xref:System.IObserver%601.OnError%2A> 在纬度/经度跟踪应用程序中提供方法的实现。</span><span class="sxs-lookup"><span data-stu-id="6d96f-142">The following example provides an implementation of the <xref:System.IObserver%601.OnError%2A> method in a latitude/longitude tracking application.</span></span> <span data-ttu-id="6d96f-143">方法只报告当前不可用的数据;它不会使用 <xref:System.Exception> 作为参数传递给它的对象。</span><span class="sxs-lookup"><span data-stu-id="6d96f-143">The method simply reports that data is currently unavailable; it does not make use of the <xref:System.Exception> object passed to it as a parameter.</span></span> <span data-ttu-id="6d96f-144">有关完整示例，请参阅主题的 "示例" 部分 <xref:System.IObserver%601> 。</span><span class="sxs-lookup"><span data-stu-id="6d96f-144">See the Example section of the <xref:System.IObserver%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#10)]
 [!code-vb[System.IObserver.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/events/observer-design-pattern-best-practices"><span data-ttu-id="6d96f-145">观察程序设计模式最佳做法</span><span class="sxs-lookup"><span data-stu-id="6d96f-145">Observer Design Pattern Best Practices</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnNext">
      <MemberSignature Language="C#" Value="public void OnNext (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNext(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnNext(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnNext (value As T)" />
      <MemberSignature Language="F#" Value="abstract member OnNext : 'T -&gt; unit" Usage="iObserver.OnNext value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6d96f-146">当前通知信息。</span><span class="sxs-lookup"><span data-stu-id="6d96f-146">The current notification information.</span></span></param>
        <summary><span data-ttu-id="6d96f-147">向观察者提供新数据。</span><span class="sxs-lookup"><span data-stu-id="6d96f-147">Provides the observer with new data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d96f-148">观察程序调用提供程序的方法后 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> ，该提供程序调用观察程序的 <xref:System.IObserver%601.OnNext%2A> 方法来提供通知。</span><span class="sxs-lookup"><span data-stu-id="6d96f-148">After an observer has called a provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method, the provider calls the observer's <xref:System.IObserver%601.OnNext%2A> method to provide notifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d96f-149">下面的示例 <xref:System.IObserver%601.OnNext%2A> 在纬度/经度跟踪应用程序中提供方法的实现。</span><span class="sxs-lookup"><span data-stu-id="6d96f-149">The following example provides an implementation of the <xref:System.IObserver%601.OnNext%2A> method in a latitude/longitude tracking application.</span></span> <span data-ttu-id="6d96f-150">有关完整示例，请参阅主题的 "示例" 部分 <xref:System.IObserver%601> 。</span><span class="sxs-lookup"><span data-stu-id="6d96f-150">See the Example section of the <xref:System.IObserver%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#12)]
 [!code-vb[System.IObserver.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
