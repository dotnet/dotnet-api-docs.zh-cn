<Type Name="UInt64" FullName="System.UInt64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f75feb976dc35a9381a560c7f4bf9f8ffe99d78" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86600390" /></Metadata><TypeSignature Language="C#" Value="public struct UInt64 : IComparable, IComparable&lt;ulong&gt;, IConvertible, IEquatable&lt;ulong&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit unsigned int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int64&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int64&gt;, class System.IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.UInt64" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt64&#xA;Implements IComparable, IComparable(Of ULong), IConvertible, IEquatable(Of ULong), IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt64 : IComparable, IComparable&lt;System::UInt64&gt;, IConvertible, IEquatable&lt;System::UInt64&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type uint64 = struct&#xA;    interface IConvertible&#xA;    interface IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public struct UInt64 : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int64 extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt64&#xA;Implements IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt64 : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type uint64 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int64&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int64&gt;, class System.IFormattable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public struct UInt64 : IComparable, IComparable&lt;ulong&gt;, IEquatable&lt;ulong&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit unsigned int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int64&gt;, class System.IEquatable`1&lt;unsigned int64&gt;, class System.IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt64&#xA;Implements IComparable, IComparable(Of ULong), IEquatable(Of ULong), IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt64 : IComparable, IComparable&lt;System::UInt64&gt;, IEquatable&lt;System::UInt64&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type uint64 = struct&#xA;    interface IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IComparable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IEquatable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8aedd-101">表示 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-101">Represents a 64-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-102"><xref:System.UInt64>值类型表示其值范围从0到18446744073709551615的无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-102">The <xref:System.UInt64> value type represents unsigned integers with values ranging from 0 to 18,446,744,073,709,551,615.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8aedd-103"><xref:System.UInt64>类型不符合 CLS。</span><span class="sxs-lookup"><span data-stu-id="8aedd-103">The <xref:System.UInt64> type is not CLS-compliant.</span></span> <span data-ttu-id="8aedd-104">符合 CLS 的替代类型为 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-104">The CLS-compliant alternative type is <xref:System.Decimal>.</span></span> <span data-ttu-id="8aedd-105"><xref:System.Int64> 可以改为使用来替换 <xref:System.UInt64> 0 到之间的值 <xref:System.Int64.MaxValue> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-105"><xref:System.Int64> can be used instead to replace a <xref:System.UInt64> value that ranges from zero to <xref:System.Int64.MaxValue>.</span></span> <span data-ttu-id="8aedd-106">有关 CLS 遵从性的详细信息，请参阅 [语言独立性和与语言无关的组件](/dotnet/standard/language-independence-and-language-independent-components)。</span><span class="sxs-lookup"><span data-stu-id="8aedd-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](/dotnet/standard/language-independence-and-language-independent-components).</span></span>  
  
 <span data-ttu-id="8aedd-107"><xref:System.UInt64> 提供一些方法，用于比较此类型的实例，将实例的值转换为其字符串表示形式，并将数字的字符串表示形式转换为此类型的实例。</span><span class="sxs-lookup"><span data-stu-id="8aedd-107"><xref:System.UInt64> provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8aedd-108">此类型的所有成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="8aedd-108">All members of this type are thread safe.</span></span> <span data-ttu-id="8aedd-109">看似修改实例状态的成员实际上返回用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="8aedd-109">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="8aedd-110">与任何其他类型一样，读取和写入包含此类型的实例的共享变量时，必须通过锁保护以保证线程安全。</span><span class="sxs-lookup"><span data-stu-id="8aedd-110">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Int64" />
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="8aedd-111">示例： .NET Core WinForms 格式设置实用工具 (c # ) </span><span class="sxs-lookup"><span data-stu-id="8aedd-111">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="8aedd-112">示例： .NET Core WinForms 格式设置实用工具 (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="8aedd-112">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8aedd-113">将此实例与指定的对象或 <see cref="T:System.UInt64" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="8aedd-113">Compares this instance to a specified object or <see cref="T:System.UInt64" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="uint64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8aedd-114">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-114">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8aedd-115">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="8aedd-115">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="8aedd-116">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-116">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8aedd-117">返回值</span><span class="sxs-lookup"><span data-stu-id="8aedd-117">Return Value</span></span> 
 </term><description> <span data-ttu-id="8aedd-118">说明</span><span class="sxs-lookup"><span data-stu-id="8aedd-118">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8aedd-119">小于零</span><span class="sxs-lookup"><span data-stu-id="8aedd-119">Less than zero</span></span> 
 </term><description> <span data-ttu-id="8aedd-120">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-120">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8aedd-121">零</span><span class="sxs-lookup"><span data-stu-id="8aedd-121">Zero</span></span> 
 </term><description> <span data-ttu-id="8aedd-122">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-122">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8aedd-123">大于零</span><span class="sxs-lookup"><span data-stu-id="8aedd-123">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="8aedd-124">此实例大于 <paramref name="value" />，或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-124">This instance is greater than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-125">的任何实例 <xref:System.UInt64> ，无论其值如何，都视为大于 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-125">Any instance of <xref:System.UInt64>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="8aedd-126">`value` 必须为 `null` 或的实例 <xref:System.UInt64> ; 否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="8aedd-126">`value` must be `null` or an instance of <xref:System.UInt64>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-127">下面的代码示例演示 <xref:System.UInt64.CompareTo%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-127">The following code example demonstrates the <xref:System.UInt64.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt64 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt64 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64 Example/CS/source.cs#3)]
 [!code-vb[UInt64 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8aedd-128"><paramref name="value" /> 不是 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-128"><paramref name="value" /> is not a <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : uint64 -&gt; int&#xA;override this.CompareTo : uint64 -&gt; int" Usage="uint64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8aedd-129">要比较的无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-129">An unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="8aedd-130">将此实例与指定的 64 位无符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="8aedd-130">Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="8aedd-131">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-131">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8aedd-132">返回值</span><span class="sxs-lookup"><span data-stu-id="8aedd-132">Return Value</span></span> 
 </term><description> <span data-ttu-id="8aedd-133">说明</span><span class="sxs-lookup"><span data-stu-id="8aedd-133">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8aedd-134">小于零</span><span class="sxs-lookup"><span data-stu-id="8aedd-134">Less than zero</span></span> 
 </term><description> <span data-ttu-id="8aedd-135">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-135">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8aedd-136">零</span><span class="sxs-lookup"><span data-stu-id="8aedd-136">Zero</span></span> 
 </term><description> <span data-ttu-id="8aedd-137">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-137">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8aedd-138">大于零</span><span class="sxs-lookup"><span data-stu-id="8aedd-138">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="8aedd-139">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-139">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-140">此方法实现 <xref:System.IComparable%601?displayProperty=nameWithType> 接口，且执行方式略优于 <xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType> 方法，因为它不必将 `value` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-140">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="8aedd-141">根据您的编程语言，可以编写一个方法，在 <xref:System.UInt64.CompareTo%2A> 此方法中，参数类型 (比实例类型更窄) 位。</span><span class="sxs-lookup"><span data-stu-id="8aedd-141">Depending on your programming language, it might be possible to code a <xref:System.UInt64.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="8aedd-142">这是可能的，因为某些编程语言会执行将参数表示为类型的隐式扩大转换，该类型的位数与实例的位数一样多。</span><span class="sxs-lookup"><span data-stu-id="8aedd-142">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="8aedd-143">例如，假设实例类型为 <xref:System.Int32> ，而参数类型为 <xref:System.Byte> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-143">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="8aedd-144">Microsoft c # 编译器生成指令以将参数的值表示为 <xref:System.Int32> 对象，然后生成一个 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 方法，该方法将实例的值 <xref:System.Int32> 与 <xref:System.Int32> 参数表示形式进行比较。</span><span class="sxs-lookup"><span data-stu-id="8aedd-144">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="8aedd-145">请查阅编程语言的文档，以确定其编译器是否对数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="8aedd-145">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-146">下面的代码示例演示了 <xref:System.UInt64.CompareTo%2A> 多个值和引用类型的方法的泛型和非泛型版本。</span><span class="sxs-lookup"><span data-stu-id="8aedd-146">The following code example demonstrates generic and nongeneric versions of the <xref:System.UInt64.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8aedd-147">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.UInt64" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="8aedd-147">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt64" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uint64.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8aedd-148">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-148">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="8aedd-149">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-149">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="8aedd-150">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.UInt64" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-150"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt64" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8aedd-151">下面的示例演示 <xref:System.UInt64.Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-151">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.UInt64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equals1.cs#1)]
 [!code-vb[System.UInt64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8aedd-152">编译器重载决策可能会考虑两种方法重载行为中的明显差异 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-152">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads.</span></span> <span data-ttu-id="8aedd-153">如果定义了参数和 a 之间的隐式转换， <paramref name="obj" /> <see cref="T:System.UInt64" /> 并且参数未键入为，则 <see cref="T:System.Object" /> 编译器会执行隐式转换并调用 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-153">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method.</span></span> <span data-ttu-id="8aedd-154">否则，它们调用 <see cref="M:System.UInt64.Equals(System.Object)" /> 方法， <see langword="false" /> 如果其 <paramref name="obj" /> 参数不是值，则总是返回 <see cref="T:System.UInt64" /> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-154">Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value.</span></span> <span data-ttu-id="8aedd-155">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="8aedd-155">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="8aedd-156">对于 <see cref="T:System.Byte" /> 、 <see cref="T:System.UInt16" /> 和 <see cref="T:System.UInt32" /> 值，第一次比较返回，这是 <see langword="true" /> 因为编译器会自动执行扩大转换并调用 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 方法，而第二次比较返回，这是 <see langword="false" /> 因为编译器调用了 <see cref="M:System.UInt64.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-156">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="8aedd-157">[！ code-csharp[system.web. Equals # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)][！ code-vb[system.web. Equals # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="8aedd-157">[!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
        <altmember cref="M:System.UInt64.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt64 obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="uint64.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8aedd-158">要与此实例进行比较的 <see cref="T:System.UInt64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-158">A <see cref="T:System.UInt64" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="8aedd-159">返回一个值，该值指示此实例是否等于指定的 <see cref="T:System.UInt64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-159">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt64" /> value.</span></span></summary>
        <returns><span data-ttu-id="8aedd-160">如果 <see langword="true" /> 的值与此实例相同，则为 <paramref name="obj" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-160"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-161">此方法实现 <xref:System.IEquatable%601?displayProperty=nameWithType> 接口，并且执行的效果略优于， <xref:System.UInt64.Equals%2A> 因为无需将 `obj` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-161">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.UInt64.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-162">下面的示例演示 <xref:System.UInt64.Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-162">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt64_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64_Equals/CPP/uint64_equals.cpp#1)]
 [!code-csharp[UInt64_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64_Equals/CS/uint64_equals.cs#1)]
 [!code-vb[UInt64_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64_Equals/VB/uint64_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8aedd-163">编译器重载决策可能会考虑两种方法重载行为中的明显差异 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-163">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads.</span></span> <span data-ttu-id="8aedd-164">如果定义了参数和 a 之间的隐式转换， <paramref name="obj" /> <see cref="T:System.UInt64" /> 并且参数未键入为，则 <see cref="T:System.Object" /> 编译器会执行隐式转换并调用 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-164">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method.</span></span> <span data-ttu-id="8aedd-165">否则，它们调用 <see cref="M:System.UInt64.Equals(System.Object)" /> 方法， <see langword="false" /> 如果其 <paramref name="obj" /> 参数不是值，则总是返回 <see cref="T:System.UInt64" /> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-165">Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value.</span></span> <span data-ttu-id="8aedd-166">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="8aedd-166">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="8aedd-167">对于 <see cref="T:System.Byte" /> 、 <see cref="T:System.UInt16" /> 和 <see cref="T:System.UInt32" /> 值，第一次比较返回，这是 <see langword="true" /> 因为编译器会自动执行扩大转换并调用 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 方法，而第二次比较返回，这是 <see langword="false" /> 因为编译器调用了 <see cref="M:System.UInt64.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-167">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="8aedd-168">[！ code-csharp[system.web. Equals # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)][！ code-vb[system.web. Equals # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="8aedd-168">[!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uint64.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8aedd-169">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8aedd-169">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="8aedd-170">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8aedd-170">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="uint64.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8aedd-171">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-171">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-172">枚举常数 <see cref="F:System.TypeCode.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-172">The enumerated constant, <see cref="F:System.TypeCode.UInt64" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const ulong MaxValue = 18446744073709551615;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MaxValue = unsigned int64(18446744073709551615)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As ULong  = 18446744073709551615" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MaxValue = 18446744073709551615;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : uint64" Usage="System.uint64.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>18446744073709551615</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8aedd-173">表示 <see cref="T:System.UInt64" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-173">Represents the largest possible value of <see cref="T:System.UInt64" />.</span></span> <span data-ttu-id="8aedd-174">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-174">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-175">此常量的值为 18446744073709551615;即十六进制0xFFFFFFFFFFFFFFFF。</span><span class="sxs-lookup"><span data-stu-id="8aedd-175">The value of this constant is 18,446,744,073,709,551,615; that is, hexadecimal 0xFFFFFFFFFFFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-176">下面的示例在 <xref:System.UInt64.MinValue> <xref:System.UInt64.MaxValue> 执行类型转换之前，使用和字段来验证 <xref:System.Double> 值是否在类型的范围内 <xref:System.UInt64> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-176">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="8aedd-177">这可以防止 <xref:System.OverflowException> 在运行时运行。</span><span class="sxs-lookup"><span data-stu-id="8aedd-177">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const ulong MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MinValue = unsigned int64(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As ULong  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MinValue = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : uint64" Usage="System.uint64.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8aedd-178">表示 <see cref="T:System.UInt64" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-178">Represents the smallest possible value of <see cref="T:System.UInt64" />.</span></span> <span data-ttu-id="8aedd-179">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-179">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-180">此常量的值为0。</span><span class="sxs-lookup"><span data-stu-id="8aedd-180">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-181">下面的示例在 <xref:System.UInt64.MinValue> <xref:System.UInt64.MaxValue> 执行类型转换之前，使用和字段来验证 <xref:System.Double> 值是否在类型的范围内 <xref:System.UInt64> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-181">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="8aedd-182">这可以防止 <xref:System.OverflowException> 在运行时运行。</span><span class="sxs-lookup"><span data-stu-id="8aedd-182">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8aedd-183">将数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-183">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.UInt64.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; uint64" Usage="System.uint64.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8aedd-184">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8aedd-184">A string that represents the number to convert.</span></span></param>
        <summary><span data-ttu-id="8aedd-185">将数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-185">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8aedd-186">与 <paramref name="s" /> 中包含的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-186">A 64-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-187">`s`参数应为以下形式的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-187">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="8aedd-188">[*ws*][*sign*]*数字*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="8aedd-188">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="8aedd-189">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="8aedd-189">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8aedd-190">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8aedd-190">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8aedd-191">元素</span><span class="sxs-lookup"><span data-stu-id="8aedd-191">Element</span></span>|<span data-ttu-id="8aedd-192">说明</span><span class="sxs-lookup"><span data-stu-id="8aedd-192">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8aedd-193">*ws*</span><span class="sxs-lookup"><span data-stu-id="8aedd-193">*ws*</span></span>|<span data-ttu-id="8aedd-194">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8aedd-194">Optional white space.</span></span>|  
|<span data-ttu-id="8aedd-195">*sign*</span><span class="sxs-lookup"><span data-stu-id="8aedd-195">*sign*</span></span>|<span data-ttu-id="8aedd-196">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-196">An optional sign.</span></span> <span data-ttu-id="8aedd-197">有效的符号字符由 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> 当前区域性的和属性确定。</span><span class="sxs-lookup"><span data-stu-id="8aedd-197">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="8aedd-198">但负号符号只能与零一起使用;否则，该方法将引发 <xref:System.OverflowException> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-198">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="8aedd-199">*位数*</span><span class="sxs-lookup"><span data-stu-id="8aedd-199">*digits*</span></span>|<span data-ttu-id="8aedd-200">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-200">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="8aedd-201">任何前导零都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="8aedd-201">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="8aedd-202">由参数指定的字符串 `s` 使用样式来进行解释 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-202">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8aedd-203">它不能包含任何组分隔符或小数分隔符，也不能包含小数部分。</span><span class="sxs-lookup"><span data-stu-id="8aedd-203">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="8aedd-204">`s`通过使用为 <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> 当前系统区域性初始化的对象中的格式设置信息来分析参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-204">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="8aedd-205">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8aedd-205">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8aedd-206">若要通过使用特定区域性的格式设置信息分析字符串，请使用 <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-206">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-207">下面的示例使用 <xref:System.UInt64.Parse%2A> 方法分析字符串值的数组。</span><span class="sxs-lookup"><span data-stu-id="8aedd-207">The following example uses the <xref:System.UInt64.Parse%2A> method to parse an array of string values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parse1.cs#1)]
 [!code-vb[System.UInt64.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8aedd-208"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-208">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8aedd-209">参数 <paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="8aedd-209">The <paramref name="s" /> parameter is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8aedd-210">参数 <paramref name="s" /> 表示一个小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-210">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8aedd-211">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8aedd-211">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; uint64" Usage="System.uint64.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8aedd-212">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8aedd-212">A string that represents the number to convert.</span></span> <span data-ttu-id="8aedd-213">该字符串使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="8aedd-213">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="8aedd-214">枚举值的按位组合，这些枚举值指定 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-214">A bitwise combination of the enumeration values that specifies the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="8aedd-215">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-215">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="8aedd-216">将指定样式的数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-216">Converts the string representation of a number in a specified style to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8aedd-217">与 <paramref name="s" /> 中指定的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-217">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-218">`style`参数定义 (如空格、正号或负号符号、组分隔符符号或小数点符号) 的样式元素，以便分析操作成功的参数中允许使用小数点符号 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-218">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8aedd-219">`style` 必须是枚举中位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-219">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="8aedd-220">当 `style` `s` 包含十六进制值的字符串表示形式时，如果仅在运行时才知道由表示的数字系统 (decimal 或十六进制) `s` ，或者当你想要禁止在中使用空格或符号时，参数会使此方法重载有用 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-220">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="8aedd-221">根据的值 `style` ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="8aedd-221">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8aedd-222">[*ws*][ *$* ] [*sign*] [*数字*，]*位数*[。*fractional_digits*] [E [*sign*]*exponential_digits*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="8aedd-222">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="8aedd-223">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="8aedd-223">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8aedd-224">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> ，则 `s` 参数可能包含以下元素：</span><span class="sxs-lookup"><span data-stu-id="8aedd-224">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="8aedd-225">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="8aedd-225">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="8aedd-226">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8aedd-226">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8aedd-227">元素</span><span class="sxs-lookup"><span data-stu-id="8aedd-227">Element</span></span>|<span data-ttu-id="8aedd-228">说明</span><span class="sxs-lookup"><span data-stu-id="8aedd-228">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8aedd-229">*ws*</span><span class="sxs-lookup"><span data-stu-id="8aedd-229">*ws*</span></span>|<span data-ttu-id="8aedd-230">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8aedd-230">Optional white space.</span></span> <span data-ttu-id="8aedd-231">如果包含标志，则空格可以出现在的开头 `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> ，如果包含标志，则可以在的末尾出现空白 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-231">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="8aedd-232">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-232">A culture-specific currency symbol.</span></span> <span data-ttu-id="8aedd-233">其在字符串中的位置由 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 当前区域性的和属性定义。</span><span class="sxs-lookup"><span data-stu-id="8aedd-233">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="8aedd-234">`s`如果包含标志，则当前区域性的货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-234">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-235">*sign*</span><span class="sxs-lookup"><span data-stu-id="8aedd-235">*sign*</span></span>|<span data-ttu-id="8aedd-236">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-236">An optional sign.</span></span> <span data-ttu-id="8aedd-237">如果包含标志，则符号可以出现在的开头 `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> ，如果包含标志，则它可以出现在的结尾 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-237">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8aedd-238">如果包含标志，则可以在中使用括号 `s` 来表示负值 `style` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-238">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8aedd-239">但负号符号只能与零一起使用;否则，该方法将引发 <xref:System.OverflowException> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-239">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="8aedd-240">*位数*</span><span class="sxs-lookup"><span data-stu-id="8aedd-240">*digits*</span></span><br /><br /> <span data-ttu-id="8aedd-241">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8aedd-241">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="8aedd-242">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="8aedd-242">*exponential_digits*</span></span>|<span data-ttu-id="8aedd-243">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-243">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="8aedd-244">对于 *fractional_digits*，只有数字0有效。</span><span class="sxs-lookup"><span data-stu-id="8aedd-244">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="8aedd-245">*,*</span><span class="sxs-lookup"><span data-stu-id="8aedd-245">*,*</span></span>|<span data-ttu-id="8aedd-246">区域性特定的组分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-246">A culture-specific group separator symbol.</span></span> <span data-ttu-id="8aedd-247">`s`如果包含标志，则当前区域性的组分隔符可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-247">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-248">*.*</span><span class="sxs-lookup"><span data-stu-id="8aedd-248">*.*</span></span>|<span data-ttu-id="8aedd-249">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-249">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8aedd-250">`s`如果包含标志，则当前区域性的小数点符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-250">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8aedd-251">只有数字0才能作为小数位出现，以便分析操作成功;如果 *fractional_digits* 包含任何其他数字， <xref:System.FormatException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="8aedd-251">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="8aedd-252">E</span><span class="sxs-lookup"><span data-stu-id="8aedd-252">E</span></span>|<span data-ttu-id="8aedd-253">"E" 或 "E" 字符，指示以指数 (科学) 记数法表示的值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-253">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="8aedd-254">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-254">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-255">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8aedd-255">*hexdigits*</span></span>|<span data-ttu-id="8aedd-256">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="8aedd-256">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="8aedd-257">`s`无论参数的值如何，分析操作都将忽略中任何终止的 NUL (U + 0000) 字符 `style` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-257">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="8aedd-258">只包含数字的字符串 (与 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式) 始终在类型范围内分析成功 <xref:System.UInt64> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-258">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.UInt64> type.</span></span> <span data-ttu-id="8aedd-259">大多数剩余 <xref:System.Globalization.NumberStyles> 成员控件可能存在但不需要存在于输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-259">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="8aedd-260">下表指示各个成员如何 <xref:System.Globalization.NumberStyles> 影响可能出现在中的元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-260">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8aedd-261">`NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="8aedd-261">`NumberStyles` value</span></span>|<span data-ttu-id="8aedd-262">中允许的元素 `s` 以及数字</span><span class="sxs-lookup"><span data-stu-id="8aedd-262">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="8aedd-263">仅限 *数字* 元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-263">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="8aedd-264">小数点 ( ) 和 *小数位数* 元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-264">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="8aedd-265">"E" 或 "E" 字符（指示指数表示法）以及 *exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="8aedd-265">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="8aedd-266">开头的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-266">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="8aedd-267">末尾处的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-267">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="8aedd-268">开头的 *sign* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-268">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="8aedd-269">末尾的 *sign* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-269">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="8aedd-270">用括号括起数值的 *符号* 元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-270">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="8aedd-271">组分隔符 (，) 元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-271">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="8aedd-272">货币 ($) 元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-272">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="8aedd-273">所有元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-273">All elements.</span></span> <span data-ttu-id="8aedd-274">但是， `s` 不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-274">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="8aedd-275">开头或结尾处的*ws*元素，在 `s` 的开头处进行*签名*， `s` 小数点 () 符号。 *.*</span><span class="sxs-lookup"><span data-stu-id="8aedd-275">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="8aedd-276">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-276">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="8aedd-277">`ws`、 `sign` 、组分隔符 (*、*) 和小数点 () 元素。 *.*</span><span class="sxs-lookup"><span data-stu-id="8aedd-277">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="8aedd-278">所有元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-278">All elements.</span></span> <span data-ttu-id="8aedd-279">但是， `s` 不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-279">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="8aedd-280">与其他值不同， <xref:System.Globalization.NumberStyles> 它们允许但不要求在中存在特定样式元素 `s` ， <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 样式值意味着中的单个数字字符 `s` 始终解释为十六进制字符。</span><span class="sxs-lookup"><span data-stu-id="8aedd-280">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="8aedd-281">有效的十六进制字符为0-9、A-f 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="8aedd-281">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="8aedd-282">前缀（如 "0x"）不受支持，导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="8aedd-282">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="8aedd-283">只能与参数组合的其他标志 `style` 是 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-283">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8aedd-284">枚举 (<xref:System.Globalization.NumberStyles> 包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType> 其中包含两个空白标志。 ) </span><span class="sxs-lookup"><span data-stu-id="8aedd-284">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8aedd-285">如果 `s` 是十六进制数的字符串表示形式，则它的前面不能有任何修饰 (例如 `0x` 或 `&h`) ，它将其视为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-285">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="8aedd-286">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="8aedd-286">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="8aedd-287">`s`通过使用为 <xref:System.Globalization.NumberFormatInfo> 当前系统区域性初始化的对象中的格式设置信息来分析参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-287">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="8aedd-288">若要指定其格式设置信息用于分析操作的区域性，请调用 <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="8aedd-288">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-289">下面的示例尝试使用多个值分析字符串数组中的每个元素 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-289">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex2.cs#2)]
 [!code-vb[System.UInt64.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8aedd-290"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-290">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8aedd-291"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-291"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="8aedd-292">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8aedd-292">-or-</span></span> 
 <span data-ttu-id="8aedd-293"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="8aedd-293"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8aedd-294">参数 <paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-294">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8aedd-295">参数 <paramref name="s" /> 表示一个小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-295">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span>  
  
<span data-ttu-id="8aedd-296">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8aedd-296">-or-</span></span> 
 <span data-ttu-id="8aedd-297"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="8aedd-297"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8aedd-298">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8aedd-298">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, provider)" />
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8aedd-299">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8aedd-299">A string that represents the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="8aedd-300">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-300">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="8aedd-301">将指定区域性特定格式的数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-301">Converts the string representation of a number in a specified culture-specific format to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8aedd-302">与 <paramref name="s" /> 中指定的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-302">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-303">此方法的重载 <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> 通常用于将可以多种方式设置格式的文本转换为 <xref:System.UInt64> 值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-303">This overload of the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="8aedd-304">例如，它可用于将用户输入的文本转换为一个数字值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-304">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="8aedd-305">`s`参数包含以下格式的编号：</span><span class="sxs-lookup"><span data-stu-id="8aedd-305">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="8aedd-306">ws[sign] 位数 [ws]</span><span class="sxs-lookup"><span data-stu-id="8aedd-306">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="8aedd-307">方括号 ( [和] ) 中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="8aedd-307">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8aedd-308">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8aedd-308">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8aedd-309">元素</span><span class="sxs-lookup"><span data-stu-id="8aedd-309">Element</span></span>|<span data-ttu-id="8aedd-310">说明</span><span class="sxs-lookup"><span data-stu-id="8aedd-310">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8aedd-311">*ws*</span><span class="sxs-lookup"><span data-stu-id="8aedd-311">*ws*</span></span>|<span data-ttu-id="8aedd-312">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8aedd-312">Optional white space.</span></span>|  
|<span data-ttu-id="8aedd-313">*sign*</span><span class="sxs-lookup"><span data-stu-id="8aedd-313">*sign*</span></span>|<span data-ttu-id="8aedd-314">可选正号或负号（如果 `s` 表示值零）。</span><span class="sxs-lookup"><span data-stu-id="8aedd-314">An optional positive sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="8aedd-315">*位数*</span><span class="sxs-lookup"><span data-stu-id="8aedd-315">*digits*</span></span>|<span data-ttu-id="8aedd-316">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-316">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="8aedd-317">使用样式解释 s 参数 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-317">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8aedd-318">除了无符号整数值的十进制数字外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-318">In addition to the unsigned integer value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="8aedd-319"> (如果存在负号，则 `s` 必须表示值为零，否则方法将引发 <xref:System.OverflowException> 。 ) 若要显式定义样式元素以及可在中存在的区域性特定格式设置信息 `s` ，请使用 <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-319">(If the negative sign is present, `s` must represent a value of zero, or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="8aedd-320">`provider`参数是一个 <xref:System.IFormatProvider> 实现，其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关格式的区域性特定信息 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-320">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="8aedd-321">使用 `provider` 参数为分析操作提供自定义格式设置信息的方法有三种：</span><span class="sxs-lookup"><span data-stu-id="8aedd-321">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="8aedd-322">可以传递 <xref:System.Globalization.NumberFormatInfo> 提供格式设置信息的实际对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-322">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="8aedd-323"> (其实现 <xref:System.IFormatProvider.GetFormat%2A> 仅返回自身。 ) </span><span class="sxs-lookup"><span data-stu-id="8aedd-323">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="8aedd-324">可以传递一个 <xref:System.Globalization.CultureInfo> 对象，该对象指定要使用其格式设置的区域性。</span><span class="sxs-lookup"><span data-stu-id="8aedd-324">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="8aedd-325">其 <xref:System.Globalization.CultureInfo.NumberFormat%2A> 属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-325">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="8aedd-326">可以传递自定义 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-326">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="8aedd-327">其 <xref:System.IFormatProvider.GetFormat%2A> 方法必须实例化并返回 <xref:System.Globalization.NumberFormatInfo> 提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-327">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8aedd-328">如果 `provider` 为 `null` ，则 <xref:System.Globalization.NumberFormatInfo> 使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="8aedd-328">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-329">下面的示例是 Web 窗体的按钮单击事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="8aedd-329">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="8aedd-330">它使用属性返回的数组 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> 来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="8aedd-330">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="8aedd-331">然后，它将实例化 <xref:System.Globalization.CultureInfo> 对应于该区域设置的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-331">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="8aedd-332">然后，将 <xref:System.Globalization.NumberFormatInfo> 属于该对象的对象 <xref:System.Globalization.CultureInfo> 传递给 <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> 方法，以将用户的输入转换为 <xref:System.UInt64> 值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-332">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.UInt64> value.</span></span>  
  
 [!code-csharp[ParseMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#1)]
 [!code-vb[ParseMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8aedd-333"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-333">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8aedd-334"><paramref name="s" /> 参数的样式不正确。</span><span class="sxs-lookup"><span data-stu-id="8aedd-334">The <paramref name="s" /> parameter is not in the correct style.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8aedd-335">参数 <paramref name="s" /> 表示一个小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-335">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8aedd-336">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8aedd-336">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider? provider = default);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = Nothing) As ULong" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, style, provider)" />
      <MemberSignature Language="C#" Value="public static ulong Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = default);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8aedd-337">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="8aedd-337">A span containing the characters that represent the number to convert.</span></span> <span data-ttu-id="8aedd-338">该范围使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="8aedd-338">The span is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="8aedd-339">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-339">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="8aedd-340">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-340">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8aedd-341">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-341">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="8aedd-342">将指定样式和区域性特定格式的数字的范围表示形式转换为其等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-342">Converts the span representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8aedd-343">与 <paramref name="s" /> 中指定的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-343">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, style, provider)" />
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style, IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8aedd-344">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8aedd-344">A string that represents the number to convert.</span></span> <span data-ttu-id="8aedd-345">该字符串使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="8aedd-345">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="8aedd-346">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-346">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="8aedd-347">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-347">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8aedd-348">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-348">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="8aedd-349">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-349">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8aedd-350">与 <paramref name="s" /> 中指定的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-350">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-351">`style`参数定义在参数中允许的样式元素 (如空格或正号或负号符号) ，以便 `s` 分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="8aedd-351">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8aedd-352">它必须是枚举中的位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-352">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="8aedd-353">根据的值 `style` ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="8aedd-353">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8aedd-354">[*ws*][ *$* ] [*sign*]*位数*[。*fractional_digits*] [E [*sign*]*exponential_digits*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="8aedd-354">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="8aedd-355">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="8aedd-355">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8aedd-356">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> ，则 `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="8aedd-356">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8aedd-357">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="8aedd-357">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="8aedd-358">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8aedd-358">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8aedd-359">元素</span><span class="sxs-lookup"><span data-stu-id="8aedd-359">Element</span></span>|<span data-ttu-id="8aedd-360">说明</span><span class="sxs-lookup"><span data-stu-id="8aedd-360">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8aedd-361">*ws*</span><span class="sxs-lookup"><span data-stu-id="8aedd-361">*ws*</span></span>|<span data-ttu-id="8aedd-362">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8aedd-362">Optional white space.</span></span> <span data-ttu-id="8aedd-363">如果包含标志，则空格可以出现在的开头 `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> ，如果包含标志，则可以在的末尾出现空白 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-363">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="8aedd-364">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-364">A culture-specific currency symbol.</span></span> <span data-ttu-id="8aedd-365">其在字符串中的位置由参数的 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> 方法返回的对象的属性定义 <xref:System.Globalization.NumberFormatInfo> <xref:System.IFormatProvider.GetFormat%2A> `provider` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-365">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="8aedd-366">`s`如果包含标志，则货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-366">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-367">*sign*</span><span class="sxs-lookup"><span data-stu-id="8aedd-367">*sign*</span></span>|<span data-ttu-id="8aedd-368">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-368">An optional sign.</span></span> <span data-ttu-id="8aedd-369"><xref:System.OverflowException>如果 `s` 包含一个负号并表示一个非零数字，则 (方法将引发。如果包含标志，则该方法将引发 `s` ，如果包含 `style` <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志，则它可以 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 出现在的结尾 ) 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-369">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8aedd-370">如果包含标志，则可以在中使用括号 `s` 来表示负值 `style` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-370">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-371">*位数*</span><span class="sxs-lookup"><span data-stu-id="8aedd-371">*digits*</span></span>|<span data-ttu-id="8aedd-372">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-372">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="8aedd-373">*.*</span><span class="sxs-lookup"><span data-stu-id="8aedd-373">*.*</span></span>|<span data-ttu-id="8aedd-374">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-374">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8aedd-375">`s`如果包含标志，则当前区域性的小数点符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-375">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-376">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8aedd-376">*fractional_digits*</span></span>|<span data-ttu-id="8aedd-377">如果包含标志，则为数字0-9 的一个或多个匹配项 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> ，如果未出现，则为数字0的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="8aedd-377">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="8aedd-378">`s`仅当包含标志时，小数位才能出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-378">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-379">E</span><span class="sxs-lookup"><span data-stu-id="8aedd-379">E</span></span>|<span data-ttu-id="8aedd-380">"E" 或 "E" 字符，指示以指数 (科学) 记数法表示的值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-380">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="8aedd-381">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-381">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-382">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="8aedd-382">*exponential_digits*</span></span>|<span data-ttu-id="8aedd-383">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-383">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="8aedd-384">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-384">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-385">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8aedd-385">*hexdigits*</span></span>|<span data-ttu-id="8aedd-386">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="8aedd-386">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="8aedd-387">`s`无论参数的值如何，分析操作都将忽略中任何终止的 NUL (U + 0000) 字符 `style` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-387">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="8aedd-388">只包含十进制数字的字符串 (与 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式) 总是成功分析的字符串。</span><span class="sxs-lookup"><span data-stu-id="8aedd-388">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="8aedd-389">大多数其余 <xref:System.Globalization.NumberStyles> 成员控件在此输入字符串中可能存在但并不需要存在的元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-389">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="8aedd-390">下表指示各个成员如何 <xref:System.Globalization.NumberStyles> 影响可能出现在中的元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-390">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8aedd-391">非复合 `NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="8aedd-391">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="8aedd-392">中允许的元素 `s` 以及数字</span><span class="sxs-lookup"><span data-stu-id="8aedd-392">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="8aedd-393">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-393">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="8aedd-394">小数点 () 和*fractional_digits* *元素。*</span><span class="sxs-lookup"><span data-stu-id="8aedd-394">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="8aedd-395">但是，如果样式不包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 *fractional_digits* 必须仅包含一个或多个0位数; 否则， <xref:System.OverflowException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="8aedd-395">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="8aedd-396">"E" 或 "E" 字符（指示指数表示法）以及 *exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="8aedd-396">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="8aedd-397">开头的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-397">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="8aedd-398">末尾处的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-398">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="8aedd-399">*数字*之前的符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-399">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="8aedd-400">*数字*后的符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-400">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="8aedd-401">用于指示负值的 *位数* 前后的括号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-401">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="8aedd-402">组分隔符 (*，*) 元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-402">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="8aedd-403">货币 (*$*) 元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-403">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="8aedd-404">如果 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 使用标志，则 `s` 必须是十六进制值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-404">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="8aedd-405">有效的十六进制字符为0-9、A-f 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="8aedd-405">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="8aedd-406">前缀（如 "0x"）不受支持，导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="8aedd-406">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="8aedd-407">可以与之组合的其他标志只能是 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-407">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8aedd-408">枚举 (<xref:System.Globalization.NumberStyles> 包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType> 其中包含两个空白标志。 ) </span><span class="sxs-lookup"><span data-stu-id="8aedd-408">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8aedd-409">如果 `s` 参数是十六进制数的字符串表示形式，则它的前面不能有任何修饰 (例如 `0x` 或) ，它将 `&h` 其视为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-409">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="8aedd-410">这将导致分析操作引发异常。</span><span class="sxs-lookup"><span data-stu-id="8aedd-410">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="8aedd-411">`provider`参数是一个 <xref:System.IFormatProvider> 实现，其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关格式的区域性特定信息 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-411">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="8aedd-412">使用 `provider` 参数为分析操作提供自定义格式设置信息的方法有三种：</span><span class="sxs-lookup"><span data-stu-id="8aedd-412">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="8aedd-413">可以传递 <xref:System.Globalization.NumberFormatInfo> 提供格式设置信息的实际对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-413">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="8aedd-414"> (其实现 <xref:System.IFormatProvider.GetFormat%2A> 仅返回自身。 ) </span><span class="sxs-lookup"><span data-stu-id="8aedd-414">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="8aedd-415">可以传递一个 <xref:System.Globalization.CultureInfo> 对象，该对象指定要使用其格式设置的区域性。</span><span class="sxs-lookup"><span data-stu-id="8aedd-415">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="8aedd-416">其 <xref:System.Globalization.CultureInfo.NumberFormat%2A> 属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-416">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="8aedd-417">可以传递自定义 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-417">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="8aedd-418">其 <xref:System.IFormatProvider.GetFormat%2A> 方法必须实例化并返回 <xref:System.Globalization.NumberFormatInfo> 提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-418">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8aedd-419">如果 `provider` 为 `null` ，则 <xref:System.Globalization.NumberFormatInfo> 使用当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-419">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-420">下面的示例使用 <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 方法将数字的各种字符串表示形式转换为64位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-420">The following example uses the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 64-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt64.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8aedd-421"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-421">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8aedd-422"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-422"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="8aedd-423">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8aedd-423">-or-</span></span> 
 <span data-ttu-id="8aedd-424"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="8aedd-424"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8aedd-425">参数 <paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-425">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8aedd-426">参数 <paramref name="s" /> 表示一个小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-426">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span>  
  
<span data-ttu-id="8aedd-427">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8aedd-427">-or-</span></span> 
 <span data-ttu-id="8aedd-428"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="8aedd-428"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8aedd-429">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8aedd-429">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="uint64.System.IComparable.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8aedd-430">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-430">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8aedd-431">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="8aedd-431">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="8aedd-432">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-432">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>
          <list type="table"><listheader><term><span data-ttu-id="8aedd-433">返回值</span><span class="sxs-lookup"><span data-stu-id="8aedd-433">Return Value</span></span></term><description><span data-ttu-id="8aedd-434">说明</span><span class="sxs-lookup"><span data-stu-id="8aedd-434">Description</span></span></description></listheader><item><term><span data-ttu-id="8aedd-435">小于零</span><span class="sxs-lookup"><span data-stu-id="8aedd-435">Less than zero</span></span></term><description><span data-ttu-id="8aedd-436">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-436">This instance is less than <paramref name="value" />.</span></span></description></item><item><term><span data-ttu-id="8aedd-437">零</span><span class="sxs-lookup"><span data-stu-id="8aedd-437">Zero</span></span></term><description><span data-ttu-id="8aedd-438">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-438">This instance is equal to <paramref name="value" />.</span></span></description></item><item><term><span data-ttu-id="8aedd-439">大于零</span><span class="sxs-lookup"><span data-stu-id="8aedd-439">Greater than zero</span></span></term><description><span data-ttu-id="8aedd-440">此实例大于 <paramref name="value" />，或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-440">This instance is greater than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="8aedd-441">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-441">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-442">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-442">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span>

<span data-ttu-id="8aedd-443">的任何实例 <xref:System.UInt64> ，无论其值如何，都视为大于 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-443">Any instance of <xref:System.UInt64>, regardless of its value, is considered greater than `null`.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8aedd-444"><paramref name="value" /> 不是 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-444"><paramref name="value" /> is not a <see cref="T:System.UInt64" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.GetTypeCode : unit -&gt; TypeCode&#xA;override this.System.IConvertible.GetTypeCode : unit -&gt; TypeCode" Usage="uint64.System.IConvertible.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8aedd-445">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-445">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-446">枚举常数 <see cref="F:System.TypeCode.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-446">The enumerated constant, <see cref="F:System.TypeCode.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="8aedd-447">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-447">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-448">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-448">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToBoolean : IFormatProvider -&gt; bool&#xA;override this.System.IConvertible.ToBoolean : IFormatProvider -&gt; bool" Usage="uint64.System.IConvertible.ToBoolean provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-449">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-449">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-450">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-450">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-451">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-451"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-452">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-452">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-453">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-453">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-454">建议的替代方法是调用 <xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-454">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToByte : IFormatProvider -&gt; byte&#xA;override this.System.IConvertible.ToByte : IFormatProvider -&gt; byte" Usage="uint64.System.IConvertible.ToByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-455">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-455">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-456">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-456">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-457">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-457">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-458">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-458">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-459">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-459">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-460">建议的替代方法是调用 <xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-460">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToChar : IFormatProvider -&gt; char&#xA;override this.System.IConvertible.ToChar : IFormatProvider -&gt; char" Usage="uint64.System.IConvertible.ToChar provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-461">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-461">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-462">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-462">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-463">当前实例的值，已转换为 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-463">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-464">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-464">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-465">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-465">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-466">建议的替代方法是调用 <xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-466">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime&#xA;override this.System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime" Usage="uint64.System.IConvertible.ToDateTime provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-467">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-467">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-468">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="8aedd-468">This conversion is not supported.</span></span> <span data-ttu-id="8aedd-469">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-469">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-470">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="8aedd-470">This conversion is not supported.</span></span> <span data-ttu-id="8aedd-471">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-471">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="8aedd-472">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="8aedd-472">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal&#xA;override this.System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal" Usage="uint64.System.IConvertible.ToDecimal provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-473">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-473">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-474">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-474">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-475">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-475">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-476">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-476">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-477">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-477">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-478">建议的替代方法是调用 <xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-478">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDouble : IFormatProvider -&gt; double&#xA;override this.System.IConvertible.ToDouble : IFormatProvider -&gt; double" Usage="uint64.System.IConvertible.ToDouble provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-479">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-479">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-480">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-480">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-481">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-481">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-482">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-483">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-483">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-484">建议的替代方法是调用 <xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-484">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt16 : IFormatProvider -&gt; int16&#xA;override this.System.IConvertible.ToInt16 : IFormatProvider -&gt; int16" Usage="uint64.System.IConvertible.ToInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-485">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-485">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-486">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-486">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-487">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-487">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-488">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-488">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-489">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-489">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-490">建议的替代方法是调用 <xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-490">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt32 : IFormatProvider -&gt; int&#xA;override this.System.IConvertible.ToInt32 : IFormatProvider -&gt; int" Usage="uint64.System.IConvertible.ToInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-491">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-491">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-492">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-492">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-493">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-493">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-494">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-494">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-495">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-495">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-496">建议的替代方法是调用 <xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-496">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt64 : IFormatProvider -&gt; int64&#xA;override this.System.IConvertible.ToInt64 : IFormatProvider -&gt; int64" Usage="uint64.System.IConvertible.ToInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-497">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-497">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-498">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-498">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-499">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-499">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-500">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-500">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-501">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-501">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-502">建议的替代方法是调用 <xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-502">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte&#xA;override this.System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte" Usage="uint64.System.IConvertible.ToSByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-503">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-503">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-504">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-504">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-505">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-505">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-506">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-506">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-507">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-507">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-508">建议的替代方法是调用 <xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-508">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSingle : IFormatProvider -&gt; single&#xA;override this.System.IConvertible.ToSingle : IFormatProvider -&gt; single" Usage="uint64.System.IConvertible.ToSingle provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-509">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-509">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-510">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-510">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-511">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-511">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-512">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-512">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-513">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-513">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-514">建议的替代方法是调用 <xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-514">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToType (type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToType : Type * IFormatProvider -&gt; obj&#xA;override this.System.IConvertible.ToType : Type * IFormatProvider -&gt; obj" Usage="uint64.System.IConvertible.ToType (type, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8aedd-515">此 <see cref="T:System.UInt64" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="8aedd-515">The type to which to convert this <see cref="T:System.UInt64" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="8aedd-516">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值格式的信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-516">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="8aedd-517">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-517">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-518">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-518">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-519">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-519">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-520">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-520">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-521">建议的替代 `static` `Shared` 项是在 Visual Basic) 方法中调用 (<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-521">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16&#xA;override this.System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16" Usage="uint64.System.IConvertible.ToUInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-522">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-522">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-523">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-523">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-524">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-524">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-525">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-525">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-526">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-526">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-527">建议的替代方法是调用 <xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-527">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32&#xA;override this.System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32" Usage="uint64.System.IConvertible.ToUInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-528">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-528">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-529">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-529">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-530">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-530">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-531">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-531">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-532">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-532">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8aedd-533">建议的替代方法是调用 <xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-533">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64&#xA;override this.System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64" Usage="uint64.System.IConvertible.ToUInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-534">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-534">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8aedd-535">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-535">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8aedd-536">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="8aedd-536">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-537">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-537">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8aedd-538">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8aedd-538">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8aedd-539">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-539">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uint64.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8aedd-540">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-540">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="8aedd-541">此实例的值的字符串表示形式，由一系列从 0 到 9 之间的数字组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="8aedd-541">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-542"><xref:System.UInt64.ToString>方法 <xref:System.UInt64> 使用当前区域性的对象设置默认 ( "G" 或常规) 格式的值的格式 <xref:System.Globalization.NumberFormatInfo> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-542">The <xref:System.UInt64.ToString> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="8aedd-543">如果要指定其他格式或区域性，请使用方法的其他重载 <xref:System.UInt64.ToString%2A> ，如下所示：</span><span class="sxs-lookup"><span data-stu-id="8aedd-543">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8aedd-544">使用格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-544">To use format</span></span>|<span data-ttu-id="8aedd-545">对于区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-545">For culture</span></span>|<span data-ttu-id="8aedd-546">使用重载</span><span class="sxs-lookup"><span data-stu-id="8aedd-546">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8aedd-547">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-547">Default ("G") format</span></span>|<span data-ttu-id="8aedd-548">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-548">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8aedd-549">特定格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-549">A specific format</span></span>|<span data-ttu-id="8aedd-550">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-550">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="8aedd-551">特定格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-551">A specific format</span></span>|<span data-ttu-id="8aedd-552">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-552">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-553">下面的示例 <xref:System.UInt64> 使用默认方法显示一个值 <xref:System.UInt64.ToString> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-553">The following example displays a <xref:System.UInt64> value by using the default <xref:System.UInt64.ToString> method.</span></span> <span data-ttu-id="8aedd-554">它还显示 <xref:System.UInt64> 使用某些标准格式说明符生成的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-554">It also displays the string representations of the <xref:System.UInt64> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="8aedd-555">这些示例使用 en-us 区域性的格式设置约定来显示。</span><span class="sxs-lookup"><span data-stu-id="8aedd-555">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt64.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="8aedd-556">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-556">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="uint64.ToString provider" />
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8aedd-557">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-557">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8aedd-558">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-558">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="8aedd-559">此实例的值的字符串表示形式，由范围从 0 到 9 的数字序列组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="8aedd-559">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-560"><xref:System.UInt64.ToString%28System.IFormatProvider%29>方法 <xref:System.UInt64> 使用指定区域性的对象设置默认 ( "G" 或常规) 格式的值的格式 <xref:System.Globalization.NumberFormatInfo> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-560">The <xref:System.UInt64.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="8aedd-561">如果要指定其他格式或当前区域性，请使用方法的其他重载，如下所示 <xref:System.UInt64.ToString%2A> ：</span><span class="sxs-lookup"><span data-stu-id="8aedd-561">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8aedd-562">使用格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-562">To use format</span></span>|<span data-ttu-id="8aedd-563">对于区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-563">For culture</span></span>|<span data-ttu-id="8aedd-564">使用重载</span><span class="sxs-lookup"><span data-stu-id="8aedd-564">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8aedd-565">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-565">Default ("G") format</span></span>|<span data-ttu-id="8aedd-566">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-566">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="8aedd-567">特定格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-567">A specific format</span></span>|<span data-ttu-id="8aedd-568">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-568">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="8aedd-569">特定格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-569">A specific format</span></span>|<span data-ttu-id="8aedd-570">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-570">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="8aedd-571">`provider`参数是一个 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-571">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="8aedd-572">其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供区域性特定的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-572">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="8aedd-573">但是，在 <xref:System.Globalization.NumberFormatInfo> 使用一般数值格式说明符进行格式设置时，不会使用的任何属性 ( "G" ) 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-573">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-574">下面的示例使用多个格式提供程序（包括一个用于固定区域性的格式提供程序）设置64位有符号整数值的格式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-574">The following example formats a 64-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="8aedd-575">该示例的输出说明， <xref:System.UInt64.ToString%28System.IFormatProvider%29> 无论格式提供程序是什么，方法返回的格式化字符串都是相同的。</span><span class="sxs-lookup"><span data-stu-id="8aedd-575">The output from the example illustrates that the formatted string returned by the <xref:System.UInt64.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt64.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="8aedd-576">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-576">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="uint64.ToString format" />
      <MemberSignature Language="C#" Value="public string ToString (string? format);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8aedd-577">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="8aedd-577">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="8aedd-578">使用指定的格式将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-578">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="8aedd-579">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="8aedd-579">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-580"><xref:System.UInt64.ToString%28System.String%29>方法 <xref:System.UInt64> 使用 <xref:System.Globalization.NumberFormatInfo> 表示当前区域性约定的对象来设置指定格式的值的格式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-580">The <xref:System.UInt64.ToString%28System.String%29> method formats a <xref:System.UInt64> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="8aedd-581">如果要使用默认 ( "G" 或常规) 格式或指定不同的区域性，请使用方法的其他重载，如下所示 <xref:System.UInt64.ToString%2A> ：</span><span class="sxs-lookup"><span data-stu-id="8aedd-581">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8aedd-582">使用格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-582">To use format</span></span>|<span data-ttu-id="8aedd-583">对于区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-583">For culture</span></span>|<span data-ttu-id="8aedd-584">使用重载</span><span class="sxs-lookup"><span data-stu-id="8aedd-584">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8aedd-585">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-585">Default ("G") format</span></span>|<span data-ttu-id="8aedd-586">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-586">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="8aedd-587">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-587">Default ("G") format</span></span>|<span data-ttu-id="8aedd-588">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-588">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8aedd-589">特定格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-589">A specific format</span></span>|<span data-ttu-id="8aedd-590">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-590">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="8aedd-591">`format`参数可以是任何有效的[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)，也可以是[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)的任意组合。</span><span class="sxs-lookup"><span data-stu-id="8aedd-591">The `format` parameter can be any valid [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings), or any combination of [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span> <span data-ttu-id="8aedd-592">如果 `format` 等于 <xref:System.String.Empty?displayProperty=nameWithType> 或为，则 `null` 当前对象的返回值的格式 <xref:System.UInt64> 为常规格式说明符 ( "G" ) 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-592">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="8aedd-593">如果 `format` 是其他任何值，则该方法将引发 <xref:System.FormatException> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-593">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="8aedd-594">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="8aedd-594">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8aedd-595">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="8aedd-595">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="8aedd-596">有关 .NET Framework 中的格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="8aedd-596">For more information about support for formatting in the .NET Framework, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="8aedd-597">返回字符串的格式由 <xref:System.Globalization.NumberFormatInfo> 当前区域性的对象确定。</span><span class="sxs-lookup"><span data-stu-id="8aedd-597">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="8aedd-598">根据 `format` 参数，此对象控制输出字符串中的符号，如组分隔符和小数点符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-598">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="8aedd-599">若要为当前区域性以外的区域性提供格式设置信息，请调用 <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="8aedd-599">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-600">下面的示例通过使用每个标准格式字符串和一些自定义格式字符串来显示64位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-600">The following example displays a 64-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt64.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="8aedd-601"><paramref name="format" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="8aedd-601">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="8aedd-602">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-602">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="8aedd-603">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="8aedd-603">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="uint64.ToString (format, provider)" />
      <MemberSignature Language="C#" Value="public string? ToString (string format, IFormatProvider provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8aedd-604">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="8aedd-604">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="8aedd-605">一个对象，它提供有关此实例的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-605">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="8aedd-606">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-606">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="8aedd-607">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="8aedd-607">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-608"><xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>方法 <xref:System.UInt64> 使用 <xref:System.Globalization.NumberFormatInfo> 指定的区域性的对象设置指定格式的值的格式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-608">The <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt64> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="8aedd-609">如果要使用默认格式或区域性设置，请使用方法的其他重载 <xref:System.UInt64.ToString%2A> ，如下所示：</span><span class="sxs-lookup"><span data-stu-id="8aedd-609">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8aedd-610">使用格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-610">To use format</span></span>|<span data-ttu-id="8aedd-611">对于区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-611">For culture</span></span>|<span data-ttu-id="8aedd-612">使用重载</span><span class="sxs-lookup"><span data-stu-id="8aedd-612">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8aedd-613">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-613">Default ("G") format</span></span>|<span data-ttu-id="8aedd-614">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-614">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="8aedd-615">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-615">Default ("G") format</span></span>|<span data-ttu-id="8aedd-616">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-616">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8aedd-617">特定格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-617">A specific format</span></span>|<span data-ttu-id="8aedd-618">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8aedd-618">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
  
 <span data-ttu-id="8aedd-619">`format`参数可以是任何有效的[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)，也可以是[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)的任意组合。</span><span class="sxs-lookup"><span data-stu-id="8aedd-619">The `format` parameter can be any valid [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings), or any combination of [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span> <span data-ttu-id="8aedd-620">如果 `format` 等于 <xref:System.String.Empty?displayProperty=nameWithType> 或为，则 `null` 当前对象的返回值的格式 <xref:System.UInt64> 为常规格式说明符 ( "G" ) 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-620">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="8aedd-621">如果 `format` 是其他任何值，则该方法将引发 <xref:System.FormatException> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-621">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="8aedd-622">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="8aedd-622">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8aedd-623">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="8aedd-623">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="8aedd-624">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="8aedd-624">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="8aedd-625">`provider`参数是一个 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-625">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="8aedd-626">其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关此方法返回的字符串格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-626">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="8aedd-627"><xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>调用方法时，它调用 `provider` 参数的 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 方法并向其传递一个 <xref:System.Type> 表示类型的对象 <xref:System.Globalization.NumberFormatInfo> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-627">When the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="8aedd-628"><xref:System.IFormatProvider.GetFormat%2A>然后，方法返回 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供用于设置当前值的格式的信息 <xref:System.UInt64> ，如组分隔符符号或小数点符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-628">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt64> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="8aedd-629">使用 `provider` 参数为方法提供格式设置信息的方法有三种 <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> ：</span><span class="sxs-lookup"><span data-stu-id="8aedd-629">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="8aedd-630">可以传递一个 <xref:System.Globalization.CultureInfo> 对象，该对象表示提供格式设置信息的区域性。</span><span class="sxs-lookup"><span data-stu-id="8aedd-630">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="8aedd-631">其 <xref:System.Globalization.CultureInfo.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供该区域性的数字格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-631">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="8aedd-632">可以传递 <xref:System.Globalization.NumberFormatInfo> 提供数字格式设置信息的实际对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-632">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="8aedd-633"> (其实现 <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> 仅返回自身。 ) </span><span class="sxs-lookup"><span data-stu-id="8aedd-633">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="8aedd-634">可以传递实现的自定义对象 <xref:System.IFormatProvider> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-634">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="8aedd-635">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法实例化并返回 <xref:System.Globalization.NumberFormatInfo> 提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-635">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8aedd-636">如果 `provider` 为 `null` ，则返回的字符串的格式基于 <xref:System.Globalization.NumberFormatInfo> 当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-636">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-637">下面的示例使用标准数值格式说明符和多个特定的对象来显示32位无符号整数值 <xref:System.Globalization.CultureInfo> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-637">The following example displays a 32-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt64.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="8aedd-638"><paramref name="format" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="8aedd-638">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="8aedd-639">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="8aedd-639">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="8aedd-640">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="8aedd-640">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="8aedd-641">示例： .NET Core WinForms 格式设置实用工具 (c # ) </span><span class="sxs-lookup"><span data-stu-id="8aedd-641">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="8aedd-642">示例： .NET Core WinForms 格式设置实用工具 (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="8aedd-642">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider? provider = default);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = Nothing, Optional provider As IFormatProvider = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="uint64.TryFormat (destination, charsWritten, format, provider)" />
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider provider = default);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="8aedd-643">此方法返回时，此实例的值格式化为一段字符。</span><span class="sxs-lookup"><span data-stu-id="8aedd-643">When this method returns, this instance's value formatted as a span of characters.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="8aedd-644">此方法返回时，为写入到 <paramref name="destination" /> 的字符数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-644">When this method returns, the number of characters that were written in <paramref name="destination" />.</span></span></param>
        <param name="format"><span data-ttu-id="8aedd-645">一个包含字符的范围，这些字符表示定义可接受的 <paramref name="destination" /> 格式的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="8aedd-645">A span containing the characters that represent a standard or custom format string that defines the acceptable format of <paramref name="destination" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8aedd-646">一个可选对象，提供有关 <paramref name="destination" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-646">An optional object that supplies culture-specific formatting information for <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="8aedd-647">尝试将当前无符号长数字实例的值的格式设置为提供的字符范围。</span><span class="sxs-lookup"><span data-stu-id="8aedd-647">Tries to format the value of the current unsigned long number instance into the provided span of characters.</span></span></summary>
        <returns><span data-ttu-id="8aedd-648">如果格式设置成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-648"><see langword="true" /> if the formatting was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8aedd-649">尝试将数字的字符串表示形式转换为等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-649">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="8aedd-650">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-650">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.UInt64.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * uint64 -&gt; bool" Usage="System.uint64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8aedd-651">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="8aedd-651">A span containing the characters that represent the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="8aedd-652">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 64 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="8aedd-652">When this method returns, contains the 64-bit unsigned integer value that is equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8aedd-653">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不正确，或者表示的数字小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="8aedd-653">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span> <span data-ttu-id="8aedd-654">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="8aedd-654">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8aedd-655">尝试将数字的范围表示形式转换为其等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-655">Tries to convert the span representation of a number to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="8aedd-656">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-656">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="8aedd-657">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-657"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * uint64 -&gt; bool" Usage="System.uint64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8aedd-658">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8aedd-658">A string that represents the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="8aedd-659">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 64 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="8aedd-659">When this method returns, contains the 64-bit unsigned integer value that is equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8aedd-660">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不正确，或者表示的数字小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="8aedd-660">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span> <span data-ttu-id="8aedd-661">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="8aedd-661">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8aedd-662">尝试将数字的字符串表示形式转换为等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-662">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="8aedd-663">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-663">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="8aedd-664">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-664"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-665"><xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29>方法与 <xref:System.UInt64.Parse%28System.String%29> 方法类似，不同之处在于它不会在转换失败时引发异常。</span><span class="sxs-lookup"><span data-stu-id="8aedd-665">The <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="8aedd-666">此方法无需使用异常处理来测试 <xref:System.FormatException> if `s` 是否无效且无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="8aedd-666">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="8aedd-667">`s`参数应为以下形式的十进制数的字符串表示形式：</span><span class="sxs-lookup"><span data-stu-id="8aedd-667">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="8aedd-668">[*ws*][*sign*]*数字*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="8aedd-668">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="8aedd-669">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="8aedd-669">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8aedd-670">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8aedd-670">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8aedd-671">元素</span><span class="sxs-lookup"><span data-stu-id="8aedd-671">Element</span></span>|<span data-ttu-id="8aedd-672">说明</span><span class="sxs-lookup"><span data-stu-id="8aedd-672">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8aedd-673">*ws*</span><span class="sxs-lookup"><span data-stu-id="8aedd-673">*ws*</span></span>|<span data-ttu-id="8aedd-674">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8aedd-674">Optional white space.</span></span>|  
|<span data-ttu-id="8aedd-675">*sign*</span><span class="sxs-lookup"><span data-stu-id="8aedd-675">*sign*</span></span>|<span data-ttu-id="8aedd-676">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-676">An optional sign.</span></span> <span data-ttu-id="8aedd-677">有效的符号字符由 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> 当前区域性的和属性确定。</span><span class="sxs-lookup"><span data-stu-id="8aedd-677">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="8aedd-678">*位数*</span><span class="sxs-lookup"><span data-stu-id="8aedd-678">*digits*</span></span>|<span data-ttu-id="8aedd-679">十进制数字的序列，范围为0到9。</span><span class="sxs-lookup"><span data-stu-id="8aedd-679">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="8aedd-680">`s`使用样式对参数进行解释 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-680">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8aedd-681">除十进制数字外，只允许使用前导符号和尾随空格。</span><span class="sxs-lookup"><span data-stu-id="8aedd-681">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="8aedd-682">若要显式定义具有可在中存在的区域性特定格式设置信息的样式元素 `s` ，请调用 <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-682">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8aedd-683">参数指定的字符串 `s` 不能包含任何组分隔符或小数分隔符，并且它不能包含小数部分。</span><span class="sxs-lookup"><span data-stu-id="8aedd-683">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a fractional portion.</span></span>  
  
 <span data-ttu-id="8aedd-684">`s`使用 <xref:System.Globalization.NumberFormatInfo> 为当前系统区域性初始化的对象中的格式设置信息分析参数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-684">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="8aedd-685">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8aedd-685">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8aedd-686">此重载将参数中的所有数字解释 `s` 为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-686">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="8aedd-687">若要分析十六进制数的字符串表示形式，请改为调用 <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="8aedd-687">To parse the string representation of a hexadecimal number, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-688">下面的示例 <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> 为字符串数组中的每个元素调用一次方法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-688">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt64.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8aedd-689">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8aedd-689">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="8aedd-690">示例： .NET Core WinForms 格式设置实用工具 (c # ) </span><span class="sxs-lookup"><span data-stu-id="8aedd-690">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="8aedd-691">示例： .NET Core WinForms 格式设置实用工具 (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="8aedd-691">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider? provider, out ulong result);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * uint64 -&gt; bool" Usage="System.uint64.TryParse (s, style, provider, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8aedd-692">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="8aedd-692">A span containing the characters that represent the number to convert.</span></span> <span data-ttu-id="8aedd-693">该范围使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="8aedd-693">The span is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="8aedd-694">枚举值的一个按位组合，指示 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-694">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="8aedd-695">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-695">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8aedd-696">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-696">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="8aedd-697">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 64 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="8aedd-697">When this method returns, contains the 64-bit unsigned integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8aedd-698">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />，或者表示的数字小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="8aedd-698">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span> <span data-ttu-id="8aedd-699">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="8aedd-699">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8aedd-700">尝试将指定样式和区域性特定格式的数字的范围表示形式转换为其等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-700">Tries to convert the span representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="8aedd-701">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-701">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="8aedd-702">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-702"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * uint64 -&gt; bool" Usage="System.uint64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8aedd-703">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8aedd-703">A string that represents the number to convert.</span></span> <span data-ttu-id="8aedd-704">该字符串使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="8aedd-704">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="8aedd-705">枚举值的一个按位组合，指示 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="8aedd-705">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="8aedd-706">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-706">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8aedd-707">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-707">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="8aedd-708">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 64 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="8aedd-708">When this method returns, contains the 64-bit unsigned integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8aedd-709">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />，或者表示的数字小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="8aedd-709">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span> <span data-ttu-id="8aedd-710">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="8aedd-710">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8aedd-711">尝试将数字的指定样式和区域性特定格式的字符串表示形式转换为其等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-711">Tries to convert the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="8aedd-712">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-712">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="8aedd-713">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8aedd-713"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aedd-714"><xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>方法与 <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 方法类似，不同之处在于它不会在转换失败时引发异常。</span><span class="sxs-lookup"><span data-stu-id="8aedd-714">The <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="8aedd-715">此方法无需使用异常处理来测试是否 <xref:System.FormatException> `s` 无效，并且无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="8aedd-715">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="8aedd-716">`style`参数定义 (（如空白）或正号或负号) 等样式元素，以便 `s` 分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="8aedd-716">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8aedd-717">它必须是枚举中的位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-717">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="8aedd-718">根据的值 `style` ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="8aedd-718">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8aedd-719">[*ws*][ *$* ] [*sign*] [*数字*，]*位数*[。*fractional_digits*] [E [*sign*]*exponential_digits*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="8aedd-719">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="8aedd-720">方括号 ( [和] ) 中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="8aedd-720">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8aedd-721">或者，如果 `style` 参数包含 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="8aedd-721">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8aedd-722">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="8aedd-722">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="8aedd-723">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8aedd-723">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8aedd-724">元素</span><span class="sxs-lookup"><span data-stu-id="8aedd-724">Element</span></span>|<span data-ttu-id="8aedd-725">说明</span><span class="sxs-lookup"><span data-stu-id="8aedd-725">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8aedd-726">*ws*</span><span class="sxs-lookup"><span data-stu-id="8aedd-726">*ws*</span></span>|<span data-ttu-id="8aedd-727">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8aedd-727">Optional white space.</span></span> <span data-ttu-id="8aedd-728">如果包含标志，则可以在的开头出现空格; `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> `s` 如果包含标志，则为末尾处 `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-728">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="8aedd-729">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-729">A culture-specific currency symbol.</span></span> <span data-ttu-id="8aedd-730">其在字符串中的位置由 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> <xref:System.Globalization.NumberFormatInfo> 参数方法返回的对象的属性定义 <xref:System.IFormatProvider.GetFormat%2A> `provider` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-730">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="8aedd-731">`s`如果包含标志，则货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-731">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-732">*sign*</span><span class="sxs-lookup"><span data-stu-id="8aedd-732">*sign*</span></span>|<span data-ttu-id="8aedd-733">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-733">An optional sign.</span></span> <span data-ttu-id="8aedd-734">如果包含标志，则符号可以出现在的开头 `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> ，如果包含标志，则它可以出现在的结尾 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-734">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8aedd-735">如果包含标志，则可以在中使用括号 `s` 来表示负值 `style` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-735">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8aedd-736">但是，如果存在负号，则 `s` 只能表示值零，分析操作才能成功。</span><span class="sxs-lookup"><span data-stu-id="8aedd-736">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>|  
|<span data-ttu-id="8aedd-737">*位数*</span><span class="sxs-lookup"><span data-stu-id="8aedd-737">*digits*</span></span>|<span data-ttu-id="8aedd-738">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-738">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="8aedd-739">*,*</span><span class="sxs-lookup"><span data-stu-id="8aedd-739">*,*</span></span>|<span data-ttu-id="8aedd-740">区域性特定的组分隔符。</span><span class="sxs-lookup"><span data-stu-id="8aedd-740">A culture-specific group separator.</span></span> <span data-ttu-id="8aedd-741">如果包含标志，则所指定的区域性的组分隔符 `provider` 可以出现在中 `s` `style` <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-741">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-742">*.*</span><span class="sxs-lookup"><span data-stu-id="8aedd-742">*.*</span></span>|<span data-ttu-id="8aedd-743">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="8aedd-743">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8aedd-744">如果包含标志，则指定的区域性的小数点符号 `provider` 可以出现在中 `s` `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-744">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-745">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8aedd-745">*fractional_digits*</span></span>|<span data-ttu-id="8aedd-746">数字0的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="8aedd-746">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="8aedd-747">`s`仅当包含标志时，小数位才能出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-747">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-748">E</span><span class="sxs-lookup"><span data-stu-id="8aedd-748">E</span></span>|<span data-ttu-id="8aedd-749">"E" 或 "E" 字符，指示以指数 (科学) 记数法表示的值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-749">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="8aedd-750">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-750">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-751">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="8aedd-751">*exponential_digits*</span></span>|<span data-ttu-id="8aedd-752">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-752">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="8aedd-753">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-753">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8aedd-754">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8aedd-754">*hexdigits*</span></span>|<span data-ttu-id="8aedd-755">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="8aedd-755">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="8aedd-756">`s`无论参数的值如何，分析操作都将忽略中任何终止的 NUL (U + 0000) 字符 `style` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-756">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="8aedd-757">只包含十进制数字的字符串 (对应于 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 标记) 总是成功分析。</span><span class="sxs-lookup"><span data-stu-id="8aedd-757">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="8aedd-758">大多数其余 <xref:System.Globalization.NumberStyles> 成员控件在此输入字符串中可能存在但并不需要存在的元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-758">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="8aedd-759">下表指示各个成员如何 <xref:System.Globalization.NumberStyles> 影响可能出现在中的元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-759">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8aedd-760">非复合 `NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="8aedd-760">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="8aedd-761">除了数字以外，还允许在值中使用元素</span><span class="sxs-lookup"><span data-stu-id="8aedd-761">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="8aedd-762">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-762">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="8aedd-763">小数点 () 和*fractional_digits* *元素。*</span><span class="sxs-lookup"><span data-stu-id="8aedd-763">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="8aedd-764">但 *fractional_digits* 只能包含一个或多个0位数字，否则该方法将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-764">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="8aedd-765">"E" 或 "E" 字符（指示指数表示法）以及 *exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="8aedd-765">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="8aedd-766">如果 `s` 表示指数表示法中的数字，则它不能包含非零的小数部分。</span><span class="sxs-lookup"><span data-stu-id="8aedd-766">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="8aedd-767">开头的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-767">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="8aedd-768">末尾处的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-768">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="8aedd-769">*数字*前面的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-769">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="8aedd-770">*数字*后的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-770">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="8aedd-771">用括号括起零数值的 *符号* 元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-771">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="8aedd-772">组分隔符 (*，*) 元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-772">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="8aedd-773">货币 (*$*) 元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-773">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="8aedd-774">所有元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-774">All elements.</span></span> <span data-ttu-id="8aedd-775">但是， `s` 不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="8aedd-775">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="8aedd-776">开头或结尾处的*ws*元素，在 `s` 的开头处进行*签名*， `s` 小数点 () 符号。 *.*</span><span class="sxs-lookup"><span data-stu-id="8aedd-776">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="8aedd-777">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="8aedd-777">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="8aedd-778">*Ws*、 *sign*、group 分隔符 (*、*) 和*小数点 () 元素。*</span><span class="sxs-lookup"><span data-stu-id="8aedd-778">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="8aedd-779">所有元素。</span><span class="sxs-lookup"><span data-stu-id="8aedd-779">All elements.</span></span> <span data-ttu-id="8aedd-780">但是， `s` 不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-780">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="8aedd-781">如果 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 使用标志，则 `s` 必须是十六进制值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-781">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="8aedd-782">有效的十六进制字符为0-9、A-f 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="8aedd-782">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="8aedd-783">前缀（如 "0x"）不受支持，导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="8aedd-783">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="8aedd-784">中可以存在的唯一其他标志 `style` 是 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-784">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8aedd-785"> (<xref:System.Globalization.NumberStyles> 枚举具有复合样式， <xref:System.Globalization.NumberStyles.HexNumber> 其中包含两个空白标志。 ) </span><span class="sxs-lookup"><span data-stu-id="8aedd-785">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8aedd-786">如果 `s` 是十六进制数的字符串表示形式，则它的前面不能有任何修饰 (例如 `0x` 或 `&h`) ，它将其视为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="8aedd-786">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="8aedd-787">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="8aedd-787">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="8aedd-788">`provider`参数是一个 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="8aedd-788">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="8aedd-789">其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关格式的区域性特定信息 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-789">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="8aedd-790">`provider`参数可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="8aedd-790">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="8aedd-791">一个 <xref:System.Globalization.CultureInfo> 对象，该对象表示提供格式设置信息的区域性。</span><span class="sxs-lookup"><span data-stu-id="8aedd-791">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="8aedd-792">其 <xref:System.Globalization.CultureInfo.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供该区域性的数字格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8aedd-792">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="8aedd-793"><xref:System.Globalization.NumberFormatInfo>提供数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-793">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="8aedd-794"> (其实现 <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> 仅返回自身。 ) </span><span class="sxs-lookup"><span data-stu-id="8aedd-794">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="8aedd-795">实现的自定义对象 <xref:System.IFormatProvider> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-795">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="8aedd-796">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法实例化并返回 <xref:System.Globalization.NumberFormatInfo> 提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-796">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8aedd-797">如果 `provider` 为 `null` ，则 <xref:System.Globalization.NumberFormatInfo> 使用当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="8aedd-797">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aedd-798">下面的示例 <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> 使用多个不同的字符串和值调用方法 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="8aedd-798">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt64.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8aedd-799"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8aedd-799"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="8aedd-800">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8aedd-800">-or-</span></span> 
 <span data-ttu-id="8aedd-801"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="8aedd-801"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8aedd-802">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8aedd-802">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
