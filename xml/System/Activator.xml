<Type Name="Activator" FullName="System.Activator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81ad07da1655956a909eee83abba57f9a21cb9f2" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102075233" /></Metadata><TypeSignature Language="C#" Value="public static class Activator" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Activator extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Activator" />
  <TypeSignature Language="VB.NET" Value="Public Class Activator" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator abstract sealed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type Activator = class" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public sealed class Activator : System.Runtime.InteropServices._Activator" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activator extends System.Object implements class System.Runtime.InteropServices._Activator" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activator&#xA;Implements _Activator" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator sealed : System::Runtime::InteropServices::_Activator" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Activator = class&#xA;    interface _Activator" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Runtime.InteropServices._Activator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2aa7c-101">包含特定的方法，用以在本地或从远程创建对象类型，或获取对现有远程对象的引用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-101">Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</span></span> <span data-ttu-id="2aa7c-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-103"><xref:System.Activator.CreateInstance%2A>方法通过调用与指定参数匹配程度最高的构造函数来创建在程序集中定义的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-103">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</span></span> <span data-ttu-id="2aa7c-104">如果未指定任何参数，则调用不带任何参数的构造函数（即无参数的构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-104">If no arguments are specified, the constructor that takes no parameters, that is, the parameterless constructor, is invoked.</span></span>  
  
 <span data-ttu-id="2aa7c-105">您必须具有足够的权限才能搜索和调用构造函数;否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-105">You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</span></span> <span data-ttu-id="2aa7c-106">默认情况下，在搜索构造函数期间只考虑公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-106">By default, only public constructors are considered during the search for a constructor.</span></span> <span data-ttu-id="2aa7c-107">如果找不到任何构造函数或无参数构造函数，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-107">If no constructor or parameterless constructor can be found, an exception is thrown.</span></span>  
  
 <span data-ttu-id="2aa7c-108">联编程序参数指定一个对象，该对象在程序集上搜索合适的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-108">A binder parameter specifies an object that searches an assembly for a suitable constructor.</span></span> <span data-ttu-id="2aa7c-109">您可以指定自己的联编程序和搜索条件。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-109">You can specify your own binder and search criteria.</span></span> <span data-ttu-id="2aa7c-110">如果未指定联编程序，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-110">If no binder is specified, a default binder is used.</span></span> <span data-ttu-id="2aa7c-111">有关更多信息，请参见 <xref:System.Reflection.Binder?displayProperty=nameWithType> 和 <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-111">For more information, see the <xref:System.Reflection.Binder?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> classes.</span></span>  
  
 <span data-ttu-id="2aa7c-112">证据参数会影响构造函数的安全策略和权限。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-112">An evidence parameter affects the security policy and permissions for the constructor.</span></span> <span data-ttu-id="2aa7c-113">有关更多信息，请参见 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-113">For more information, see the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="2aa7c-114">可以在本地或远程站点创建类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-114">An instance of a type can be created at a local or remote site.</span></span> <span data-ttu-id="2aa7c-115">如果类型是远程创建的，则激活特性参数将指定远程站点的 URI。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-115">If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</span></span> <span data-ttu-id="2aa7c-116">创建实例的调用可能会在到达远程站点之前通过中间站点。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-116">The call to create the instance might pass through intermediary sites before it reaches the remote site.</span></span> <span data-ttu-id="2aa7c-117">其他激活属性可以修改调用在远程和中间站点上的运行环境或上下文。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-117">Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</span></span>  
  
 <span data-ttu-id="2aa7c-118">如果实例是在本地创建的，则返回对该对象的引用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-118">If the instance is created locally, a reference to that object is returned.</span></span> <span data-ttu-id="2aa7c-119">如果实例是远程创建的，则返回对代理的引用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-119">If the instance is created remotely, a reference to a proxy is returned.</span></span> <span data-ttu-id="2aa7c-120">远程对象通过代理操作，就像它是本地对象一样。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-120">The remote object is manipulated through the proxy as if it were a local object.</span></span>  
  
 <span data-ttu-id="2aa7c-121"><xref:System.Activator.GetObject%2A>方法为当前正在运行的远程对象、服务器激活的已知对象或 XML Web service 创建代理。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-121">The <xref:System.Activator.GetObject%2A> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</span></span> <span data-ttu-id="2aa7c-122">可以指定连接介质，即通道。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-122">You can specify the connection medium, that is, the channel.</span></span> <span data-ttu-id="2aa7c-123">有关更多信息，请参见 <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-123">For more information, see the <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="2aa7c-124">程序集包含类型定义。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-124">Assemblies contain type definitions.</span></span> <span data-ttu-id="2aa7c-125"><xref:System.Activator.CreateInstance%2A>方法从当前运行的程序集创建类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-125">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type from a currently running assembly.</span></span> <span data-ttu-id="2aa7c-126"><xref:System.Activator.CreateInstanceFrom%2A>方法从包含程序集的文件创建实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-126">The <xref:System.Activator.CreateInstanceFrom%2A> method creates an instance from a file that contains an assembly.</span></span> <span data-ttu-id="2aa7c-127"><xref:System.Activator.CreateComInstanceFrom%2A>方法从包含程序集的文件创建 COM 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-127">The <xref:System.Activator.CreateComInstanceFrom%2A> method creates an instance of a COM object from a file that contains an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2aa7c-128">下面的示例演示如何使用 <xref:System.Activator> 类在运行时动态构造对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-128">The following example shows how to use the <xref:System.Activator> class to dynamically construct objects at run time.</span></span>  
  
 [!code-cpp[ActivatorX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#1)]
 [!code-csharp[ActivatorX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#1)]
 [!code-vb[ActivatorX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2aa7c-129">创建指定名称的 COM 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-129">Creates an instance of the COM object whose name is specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="2aa7c-130">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-130">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-131">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-131">The name of the type to create an instance of.</span></span></param>
        <summary><span data-ttu-id="2aa7c-132">使用已命名的程序集文件和无参数构造函数，创建指定名称的 COM 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-132">Creates an instance of the COM object whose name is specified, using the named assembly file and the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-133">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-133">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-134">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-134">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2aa7c-135"><xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> `true` 必须显式或默认情况下将值为的属性应用于 COM 类型，这样 <xref:System.Activator.CreateComInstanceFrom%2A> 方法才能创建该类型的实例; 否则， <xref:System.TypeLoadException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="2aa7c-136">有关可通过调用方法引发的其他异常的信息，请参阅和方法的异常部分 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> <xref:System.Activator.CreateInstance%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-136">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2aa7c-137">从 .NET Framework 2.0 Service Pack 1 开始，如果调用方已获得 <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志并且包含非公共类型的程序集的授予集限制为调用方的授予集或其子集，则可以使用此方法来创建非公共类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-137">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-138"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-138">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-139">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-139">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-140"><paramref name="typeName" /> 或 <paramref name="assemblyName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-140"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-141">无法通过 COM 创建实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-141">An instance cannot be created through COM.</span></span>  
  
<span data-ttu-id="2aa7c-142">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-142">-or-</span></span> 
 <span data-ttu-id="2aa7c-143">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-143"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-144">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-144">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-145">未找到 <paramref name="assemblyName" />，或者你正在试图加载的模块未指定文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-145"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-146">无法创建抽象类的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-146">Cannot create an instance of an abstract class.</span></span>  
  
 <span data-ttu-id="2aa7c-147">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-147">-or-</span></span>  
  
 <span data-ttu-id="2aa7c-148">使用晚期绑定机制调用了此成员。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-148">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-149">调用方不能为非继承自 <see cref="T:System.MarshalByRefObject" /> 的对象提供激活属性。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-149">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2aa7c-150"><paramref name="assemblyName" /> 为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-150"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashValue" Type="System.Byte[]" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="2aa7c-151">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-151">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-152">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-152">The name of the type to create an instance of.</span></span></param>
        <param name="hashValue"><span data-ttu-id="2aa7c-153">计算所得的哈希代码的值。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-153">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="2aa7c-154">用于对文件进行哈希计算并生成强名称的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-154">The hash algorithm used for hashing files and generating the strong name.</span></span></param>
        <summary><span data-ttu-id="2aa7c-155">使用已命名的程序集文件和无参数构造函数，创建指定名称的 COM 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-155">Creates an instance of the COM object whose name is specified, using the named assembly file and the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-156">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-156">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-157">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-157">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2aa7c-158"><xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> `true` 必须显式或默认情况下将值为的属性应用于 COM 类型，这样 <xref:System.Activator.CreateComInstanceFrom%2A> 方法才能创建该类型的实例; 否则， <xref:System.TypeLoadException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-158">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="2aa7c-159">有关可通过调用方法引发的其他异常的信息，请参阅和方法的异常部分 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> <xref:System.Activator.CreateInstance%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-159">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2aa7c-160">从 .NET Framework 2.0 Service Pack 1 开始，如果调用方已获得 <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志并且包含非公共类型的程序集的授予集限制为调用方的授予集或其子集，则可以使用此方法来创建非公共类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-160">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-161"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-161">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-162">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-162">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-163"><paramref name="typeName" /> 或 <paramref name="assemblyName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-163"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2aa7c-164"><paramref name="assemblyName" /> 为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-164"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="2aa7c-165">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-165">An assembly or module was loaded twice with two different evidences.</span></span>
        
<span data-ttu-id="2aa7c-166">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-166">-or-</span></span> 
 <span data-ttu-id="2aa7c-167"><paramref name="assemblyName" /> 超过系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-167"><paramref name="assemblyName" /> is longer than the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-168">未找到 <paramref name="assemblyName" />，或者你正在试图加载的模块未指定文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-168"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="2aa7c-169"><paramref name="assemblyName" /> 已找到，但无法加载。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-169"><paramref name="assemblyName" /> is found but cannot be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-170"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-170"><paramref name="assemblyName" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2aa7c-171">指定了不以“file://”开头的基本代码，且没有所需的 <see langword="WebPermission" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-171">A code base that does not start with "file://" was specified without the required <see langword="WebPermission" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-172">无法通过 COM 创建实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-172">An instance cannot be created through COM.</span></span>  
  
<span data-ttu-id="2aa7c-173">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-173">-or-</span></span> 
 <span data-ttu-id="2aa7c-174">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-174"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-175">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-175">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-176">无法创建抽象类的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-176">An instance of an abstract class cannot be created.</span></span>  
  
 <span data-ttu-id="2aa7c-177">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-177">-or-</span></span>  
  
 <span data-ttu-id="2aa7c-178">使用晚期绑定机制调用了此成员。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-178">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-179">调用方不能为非继承自 <see cref="T:System.MarshalByRefObject" /> 的对象提供激活属性。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-179">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2aa7c-180">使用最符合指定参数的构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-180">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (activationContext As ActivationContext) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="2aa7c-181">一个激活上下文对象，用于指定要创建的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-181">An activation context object that specifies the object to create.</span></span></param>
        <summary><span data-ttu-id="2aa7c-182">创建类型的一个实例，该类型由指定的 <see cref="T:System.ActivationContext" /> 对象指定。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-182">Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-183">要访问新创建的对象则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-183">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-184">方法 `null` 为 <xref:System.Nullable%601> 实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-184">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

 <span data-ttu-id="2aa7c-185">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-185">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2aa7c-186">激活上下文在基于清单的激活过程中用于设置域策略并提供基于应用程序的安全模型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-186">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="2aa7c-187"><xref:System.ActivationContext>类包含一个 <xref:System.ApplicationIdentity> 对象，该对象提供对应用程序清单的访问。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-187">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="2aa7c-188">有关更多信息，请参见 <xref:System.Security.Policy.ApplicationSecurityManager> 类。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-188">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type -&gt; obj" Usage="System.Activator.CreateInstance type" />
      <MemberSignature Language="C#" Value="public static object? CreateInstance (Type type);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2aa7c-189">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-189">The type of object to create.</span></span></param>
        <summary><span data-ttu-id="2aa7c-190">使用类型的无参数构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-190">Creates an instance of the specified type using that type's parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-191">对新创建的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-191">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-192">要调用的构造函数必须是可访问的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-192">The constructor to be invoked must be accessible.</span></span>  

 <span data-ttu-id="2aa7c-193">方法 `null` 为 <xref:System.Nullable%601> 实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-193">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

> [!NOTE]
>  <span data-ttu-id="2aa7c-194">从 .NET Framework 2.0 Service Pack 1 开始，如果调用方已获得 <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志，并且包含非公共类型的程序集的授予集限制为调用方的授予集或其子集，则可以使用此方法访问非公共类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-194">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-195"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-195">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-196">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-196">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2aa7c-197">下面的代码示例演示如何调用 <xref:System.Activator.CreateInstance%28System.Type%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-197">The following code example demonstrates how to call the <xref:System.Activator.CreateInstance%28System.Type%29> method.</span></span> <span data-ttu-id="2aa7c-198">将创建几个不同类型的实例，并显示其默认值。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-198">Instances of several different types are created and their default values are displayed.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/source2.cpp" id="Snippet4":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/source2.cs" interactive="try-dotnet" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/source2.vb" id="Snippet4":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-199"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-199"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2aa7c-200"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-200"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="2aa7c-201">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-201">-or-</span></span> 
 <span data-ttu-id="2aa7c-202"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-202"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-203"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-203"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="2aa7c-204">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-204">-or-</span></span> 
<span data-ttu-id="2aa7c-205">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-205">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="2aa7c-206">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-206">-or-</span></span> 
<span data-ttu-id="2aa7c-207">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-207">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-208">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-208">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="2aa7c-209">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.MemberAccessException" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-209">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="2aa7c-210">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-210">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-211">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-211">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-212">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-212">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="2aa7c-213">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.MissingMemberException" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-213">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="2aa7c-214">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-214">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="2aa7c-215"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-215"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-216"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-216"><paramref name="type" /> is not a valid type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (activationContext As ActivationContext, activationCustomData As String()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
        <Parameter Name="activationCustomData" Type="System.String[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="2aa7c-217">一个激活上下文对象，用于指定要创建的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-217">An activation context object that specifies the object to create.</span></span></param>
        <param name="activationCustomData"><span data-ttu-id="2aa7c-218">一个包含自定义激活数据的 Unicode 字符串数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-218">An array of Unicode strings that contain custom activation data.</span></span></param>
        <summary><span data-ttu-id="2aa7c-219">创建类型的一个实例，该类型由指定的 <see cref="T:System.ActivationContext" /> 对象指定，并由指定的自定义激活数据激活。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-219">Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-220">要访问新创建的对象则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-220">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-221">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-221">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2aa7c-222">激活上下文在基于清单的激活过程中用于设置域策略并提供基于应用程序的安全模型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-222">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="2aa7c-223"><xref:System.ActivationContext>类包含一个 <xref:System.ApplicationIdentity> 对象，该对象提供对应用程序清单的访问。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-223">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="2aa7c-224">有关更多信息，请参见 <xref:System.Security.Policy.ApplicationSecurityManager> 类。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-224">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle? CreateInstance (string assemblyName, string typeName);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName)" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="2aa7c-225">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-225">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="2aa7c-226">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-226">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-227">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-227">The fully qualified name of the type to create an instance of.</span></span></param>
        <summary><span data-ttu-id="2aa7c-228">使用已命名的程序集和无参数构造函数，创建名称已指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-228">Creates an instance of the type whose name is specified, using the named assembly and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-229">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-229">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-230">方法 `null` 为 <xref:System.Nullable%601> 实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-230">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

 <span data-ttu-id="2aa7c-231">使用将 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-231">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2aa7c-232">`assemblyName` 可以是以下项之一：</span><span class="sxs-lookup"><span data-stu-id="2aa7c-232">`assemblyName` can be either of the following:</span></span>  
  
-   <span data-ttu-id="2aa7c-233">程序集的简单名称，没有路径或文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-233">The simple name of an assembly, without its path or file extension.</span></span> <span data-ttu-id="2aa7c-234">例如，你需要 `TypeExtensions` 为 .\bin\TypeExtensions.dll 的路径和名称指定程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-234">For example, you would specify `TypeExtensions` for an assembly whose path and name are .\bin\TypeExtensions.dll.</span></span>  
  
-   <span data-ttu-id="2aa7c-235">签名程序集的全名，由其简单名称、版本、区域性和公钥标记组成;例如，"TypeExtensions，Version = 1.0.0.0，Culture = 中立，PublicKeyToken = 181869f2f7435b51"。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-235">The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</span></span>  
  
 <span data-ttu-id="2aa7c-236">有关公共语言运行时如何识别和加载程序集的详细信息，请参阅 [运行时如何定位程序集](/dotnet/framework/deployment/how-the-runtime-locates-assemblies)。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-236">For more information on how the common language runtime identifies and loads assemblies, see [How the Runtime Locates Assemblies](/dotnet/framework/deployment/how-the-runtime-locates-assemblies).</span></span> <span data-ttu-id="2aa7c-237">有关使用应用程序配置文件来定义程序集位置的信息，请参阅 [指定程序集的位置](/dotnet/framework/configure-apps/specify-assembly-location)。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-237">For information on using the application configuration file to define assembly locations, see [Specifying an Assembly's Location](/dotnet/framework/configure-apps/specify-assembly-location).</span></span> <span data-ttu-id="2aa7c-238">如果 `assemblyName` 找到，它将加载到默认上下文中。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-238">If `assemblyName` is found, it is loaded in the default context.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2aa7c-239">从 .NET Framework 2.0 Service Pack 1 开始，如果调用方已获得 <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志并且包含非公共类型的程序集的授予集限制为调用方的授予集或其子集，则可以使用此方法来创建非公共类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-239">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-240"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-240">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-241">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-241">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2aa7c-242">下面的示例定义名为的程序集中名为的类 `Person` `PersonInfo` 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-242">The following example defines a class named `Person` in an assembly named `PersonInfo`.</span></span> <span data-ttu-id="2aa7c-243">请注意， `Person` 类具有两个构造函数，其中一个构造函数是无参数的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-243">Note that the `Person` class has two constructors, one of which is parameterless.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/personinfo.cs#1)]
 [!code-vb[System.Activator.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/personinfo.vb#1)]  
  
 <span data-ttu-id="2aa7c-244">下面的示例调用 <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> 方法来实例化 `Person` 类。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-244">The following example calls the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method to instantiate the `Person` class.</span></span> <span data-ttu-id="2aa7c-245">它需要将对 PersonInfo.dll 的引用添加到该项目中。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-245">It requires a reference to PersonInfo.dll to be added to the project.</span></span> <span data-ttu-id="2aa7c-246">由于 <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> 方法调用 `Person` 类无参数构造函数，因此该示例将值赋给其 `Name` 属性。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-246">Because the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method calls the `Person` class parameterless constructor,  the example assigns a value to its `Name` property.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1.cs#2)]
 [!code-vb[System.Activator.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1.vb#2)]  
  
 <span data-ttu-id="2aa7c-247">不过， <xref:System.Activator.CreateInstance%2A> 通常会调用来实例化一个与计算机边界交叉或在设计时未知的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-247">However, <xref:System.Activator.CreateInstance%2A> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</span></span> <span data-ttu-id="2aa7c-248">在这种情况下，不能在项目中包括对程序集的引用，并且无法对类型的成员进行早期绑定调用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-248">In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</span></span> <span data-ttu-id="2aa7c-249">若要解决此限制，下面的示例使用 <xref:System.Activator.CreateInstance%2A> 方法和反射将值分配给 `Person` 对象的 `Name` 属性并显示其值。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-249">To work around this limitation, the following example uses the <xref:System.Activator.CreateInstance%2A> method along with reflection to assign a value to the `Person` object's `Name` property and to display its value.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1a.cs#3)]
 [!code-vb[System.Activator.CreateInstance#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1a.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-250"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-250"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-251">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-251">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-252">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-252"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-253">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-253"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-254">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-254">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-255">你无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-255">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-256">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-256">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-257">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-257">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-258">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-258">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-259"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-259"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-260">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-260">-or-</span></span> 
<span data-ttu-id="2aa7c-261">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-261">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-262">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-262">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="2aa7c-263">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-263">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="2aa7c-264">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-264">-or-</span></span>  
  
 <span data-ttu-id="2aa7c-265">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-265">The assembly name or code base is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object? CreateInstance (Type type, bool nonPublic);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (type As Type, nonPublic As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, bool nonPublic);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * bool -&gt; obj" Usage="System.Activator.CreateInstance (type, nonPublic)" />
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, bool nonPublic);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="nonPublic" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2aa7c-266">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-266">The type of object to create.</span></span></param>
        <param name="nonPublic"><span data-ttu-id="2aa7c-267">如果公共或非公共无参数构造函数可以匹配，则为 <see langword="true" />；如果只有公共无参数构造函数可以匹配，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-267"><see langword="true" /> if a public or nonpublic parameterless constructor can match; <see langword="false" /> if only a public parameterless constructor can match.</span></span></param>
        <summary><span data-ttu-id="2aa7c-268">使用类型的无参数构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-268">Creates an instance of the specified type using that type's parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-269">对新创建的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-269">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="2aa7c-270">方法 `null` 为 <xref:System.Nullable%601> 实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-270">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

> [!NOTE]
>  <span data-ttu-id="2aa7c-271">从 .NET Framework 2.0 Service Pack 1 开始，此方法可用于访问非公共类型和成员（如果调用方已获得标志） <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> ，并且如果包含非公共类型和成员的程序集的授予集限制为调用方的授权集或其子集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-271">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-272"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-272">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-273">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-273">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-274"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-274"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2aa7c-275"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-275"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="2aa7c-276">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-276">-or-</span></span> 
 <span data-ttu-id="2aa7c-277"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-277"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-278"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-278"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="2aa7c-279">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-279">-or-</span></span> 
<span data-ttu-id="2aa7c-280">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-280">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="2aa7c-281">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-281">-or-</span></span> 
<span data-ttu-id="2aa7c-282">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-282">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-283">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-283">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-284">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-284">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-285">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-285">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-286">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-286">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-287">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-287">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="2aa7c-288"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-288"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-289"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-289"><paramref name="type" /> is not a valid type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, params object[] args);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (type As Type, ParamArray args As Object()) As Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args)" />
      <MemberSignature Language="C#" Value="public static object? CreateInstance (Type type, params object?[]? args);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (type As Type, args As Object()) As Object" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2aa7c-290">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-290">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-291">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-291">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-292">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-292">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <summary><span data-ttu-id="2aa7c-293">使用最符合指定参数的构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-293">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-294">对新创建的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-294">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-295">要调用的构造函数必须是可访问的，并且必须提供与指定参数列表最具体的匹配项。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-295">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
 <span data-ttu-id="2aa7c-296">方法 `null` 为 <xref:System.Nullable%601> 没有值的实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-296">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="2aa7c-297">从 .NET Framework 2.0 Service Pack 1 开始，如果调用方已获得 <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志，并且包含非公共类型的程序集的授予集限制为调用方的授予集或其子集，则可以使用此方法访问非公共类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-297">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-298"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-298">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-299">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-299">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2aa7c-300">下面的示例调用  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> 方法来创建 <xref:System.String> 对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-300">The following example calls the  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to create a <xref:System.String> object.</span></span> <span data-ttu-id="2aa7c-301">它调用 <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 构造函数来实例化一个字符串，该字符串包含从第十四个位置开始的字符数组中的十个元素。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-301">It calls the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/CreateInstance5.cs" interactive="try-dotnet" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/CreateInstance5.vb" id="Snippet5":::
  
 <span data-ttu-id="2aa7c-302">下面的示例创建一个交错数组，其元素是要传递给 <xref:System.String> 构造函数的参数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-302">The following example creates a jagged array whose elements are arguments to be passed to a <xref:System.String> constructor.</span></span> <span data-ttu-id="2aa7c-303">然后，该示例将每个数组传递给 <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> 方法，以调用适当的字符串构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-303">The example then passes each array to the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to invoke the appropriate string constructor.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstance2.cs" interactive="try-dotnet" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstance2.vb" id="Snippet4":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-304"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-304"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2aa7c-305"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-305"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="2aa7c-306">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-306">-or-</span></span> 
 <span data-ttu-id="2aa7c-307"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-307"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-308"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-308"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="2aa7c-309">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-309">-or-</span></span> 
<span data-ttu-id="2aa7c-310">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-310">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="2aa7c-311">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-311">-or-</span></span> 
<span data-ttu-id="2aa7c-312">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-312">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="2aa7c-313">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-313">-or-</span></span> 
<span data-ttu-id="2aa7c-314">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-314">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-315">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-315">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="2aa7c-316">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.MemberAccessException" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-316">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="2aa7c-317">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-317">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-318">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-318">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-319">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-319">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="2aa7c-320">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.MissingMemberException" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-320">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="2aa7c-321">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-321">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="2aa7c-322"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-322"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-323"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-323"><paramref name="type" /> is not a valid type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="2aa7c-324">在其中创建名为 <paramref name="typeName" /> 的类型的远程域。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-324">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="2aa7c-325">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-325">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="2aa7c-326">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-326">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-327">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-327">The fully qualified name of the type to create an instance of.</span></span></param>
        <summary><span data-ttu-id="2aa7c-328">使用命名的程序集和无参数构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-328">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-329">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-329">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-330">方法 `null` 为 <xref:System.Nullable%601> 实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-330">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

 <span data-ttu-id="2aa7c-331"><xref:System.Activator.CreateInstance%2A>当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-331">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2aa7c-332">使用将 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-332">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2aa7c-333">此方法使用 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 要求直接调用方具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-333">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-334"><paramref name="typeName" /> 或 <paramref name="domain" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-334"><paramref name="typeName" /> or <paramref name="domain" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-335">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-335">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-336">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-336"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-337">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-337"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-338">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-338">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-339">无法创建抽象类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-339">Cannot create an instance of an abstract type.</span></span>  
  
 <span data-ttu-id="2aa7c-340">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-340">-or-</span></span>  
  
 <span data-ttu-id="2aa7c-341">使用晚期绑定机制调用了此成员。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-341">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-342">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-342">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-343">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-343">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-344">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-344">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-345"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-345"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-346">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-346">-or-</span></span> 
<span data-ttu-id="2aa7c-347">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-347">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-348">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-348">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="2aa7c-349">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-349">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="2aa7c-350">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-350">-or-</span></span>  
  
 <span data-ttu-id="2aa7c-351">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-351">The assembly name or code base is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle? CreateInstance (string assemblyName, string typeName, object?[]? activationAttributes);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, activationAttributes)" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="2aa7c-352">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-352">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="2aa7c-353">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-353">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-354">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-354">The fully qualified name of the type to create an instance of.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-355">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-355">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-356">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-356">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="2aa7c-357">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-357">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="2aa7c-358">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-358">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="2aa7c-359">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-359">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="2aa7c-360">使用已命名的程序集和无参数构造函数，创建名称已指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-360">Creates an instance of the type whose name is specified, using the named assembly and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-361">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-361">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-362">方法 `null` 为 <xref:System.Nullable%601> 实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-362">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

 <span data-ttu-id="2aa7c-363">使用将 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-363">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2aa7c-364">从 .NET Framework 2.0 Service Pack 1 开始，如果调用方已 <xref:System.Security.Permissions.ReflectionPermission> 使用标志授予， <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 并且非公共类型的授予集限制为调用方的授权集或其子集，则可以使用此方法来创建非公共类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-364">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-365"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-365">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-366">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-366">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-367"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-367"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-368">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-368">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-369">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-369"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-370">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-370"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-371">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-371">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-372">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-372">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-373">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-373">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-374">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-374">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="2aa7c-375">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-375">-or-</span></span> 
 <span data-ttu-id="2aa7c-376"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-376"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="2aa7c-377">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-377">-or-</span></span> 
 <span data-ttu-id="2aa7c-378"><paramref name="activationAttributes" /> 不是 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-378"><paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /></span></span>  
  
<span data-ttu-id="2aa7c-379">数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-379">array.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-380"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-380"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-381">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-381">-or-</span></span> 
<span data-ttu-id="2aa7c-382">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-382">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-383">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-383">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="2aa7c-384">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-384">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="2aa7c-385">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-385">-or-</span></span>  
  
 <span data-ttu-id="2aa7c-386">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-386">The assembly name or code base is invalid.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-387">在 <paramref name="activationAttributes" /> 中指定的目标中尝试远程激活时出错。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-387">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object? CreateInstance (Type type, object?[]? args, object?[]? activationAttributes);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (type As Type, args As Object(), activationAttributes As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args, activationAttributes)" />
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args, object[] activationAttributes);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2aa7c-388">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-388">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-389">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-389">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-390">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-390">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-391">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-391">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-392">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-392">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="2aa7c-393">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-393">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="2aa7c-394">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-394">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="2aa7c-395">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-395">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="2aa7c-396">使用最符合指定参数的构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-396">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-397">对新创建的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-397">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-398">要调用的构造函数必须是可访问的，并且必须提供与指定参数列表最具体的匹配项。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-398">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
 <span data-ttu-id="2aa7c-399">方法 `null` 为 <xref:System.Nullable%601> 没有值的实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-399">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="2aa7c-400">从 .NET Framework 2.0 Service Pack 1 开始，如果调用方已获得 <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志，并且包含非公共类型的程序集的授予集限制为调用方的授予集或其子集，则可以使用此方法访问非公共类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-400">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-401"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-401">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-402">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-402">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-403"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-403"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2aa7c-404"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-404"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="2aa7c-405">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-405">-or-</span></span> 
 <span data-ttu-id="2aa7c-406"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-406"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-407"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-407"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="2aa7c-408">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-408">-or-</span></span> 
<span data-ttu-id="2aa7c-409">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-409">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="2aa7c-410">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-410">-or-</span></span> 
 <span data-ttu-id="2aa7c-411"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-411"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="2aa7c-412">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-412">-or-</span></span> 
<span data-ttu-id="2aa7c-413">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-413">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="2aa7c-414">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-414">-or-</span></span> 
<span data-ttu-id="2aa7c-415">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-415">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-416">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-416">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-417">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-417">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-418">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-418">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-419">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-419">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-420">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-420">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="2aa7c-421"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-421"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-422"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-422"><paramref name="type" /> is not a valid type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object? CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder? binder, object?[]? args, System.Globalization.CultureInfo? culture);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (type As Type, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture)" />
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2aa7c-423">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-423">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2aa7c-424">影响 <paramref name="type" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-424">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="2aa7c-425">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-425">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="2aa7c-426">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="type" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-426">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="2aa7c-427">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-427">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-428">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-428">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-429">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-429">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="2aa7c-430">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="type" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-430">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="2aa7c-431">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-431">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="2aa7c-432">使用最符合指定参数的构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-432">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-433">对新创建的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-433">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-434">要调用的构造函数必须在指定的联编程序和绑定特性的约束下，提供与指定参数列表最具体的匹配项。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-434">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
  <span data-ttu-id="2aa7c-435">方法 `null` 为 <xref:System.Nullable%601> 没有值的实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-435">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="2aa7c-436">从 .NET Framework 2.0 Service Pack 1 开始，此方法可用于访问非公共类型和成员（如果调用方已获得标志） <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> ，并且如果包含非公共类型和成员的程序集的授予集限制为调用方的授权集或其子集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-436">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-437"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-437">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-438">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-438">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-439"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-439"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2aa7c-440"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-440"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="2aa7c-441">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-441">-or-</span></span> 
 <span data-ttu-id="2aa7c-442"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-442"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-443"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-443"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="2aa7c-444">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-444">-or-</span></span> 
<span data-ttu-id="2aa7c-445">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-445">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="2aa7c-446">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-446">-or-</span></span> 
<span data-ttu-id="2aa7c-447">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-447">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="2aa7c-448">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-448">-or-</span></span> 
<span data-ttu-id="2aa7c-449">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-449">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-450">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-450">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-451">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-451">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-452">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-452">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-453">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-453">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-454">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-454">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="2aa7c-455"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-455"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-456"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-456"><paramref name="type" /> is not a valid type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object? CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder? binder, object?[]? args, System.Globalization.CultureInfo? culture, object?[]? activationAttributes);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (type As Type, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2aa7c-457">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-457">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2aa7c-458">影响 <paramref name="type" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-458">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="2aa7c-459">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-459">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="2aa7c-460">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="type" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-460">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="2aa7c-461">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-461">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-462">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-462">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-463">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-463">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="2aa7c-464">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="type" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-464">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="2aa7c-465">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-465">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-466">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-466">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-467">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-467">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="2aa7c-468">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-468">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="2aa7c-469">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-469">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="2aa7c-470">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-470">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="2aa7c-471">使用最符合指定参数的构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-471">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-472">对新创建的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-472">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-473">要调用的构造函数必须在指定的联编程序和绑定特性的约束下，提供与指定参数列表最具体的匹配项。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-473">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
 <span data-ttu-id="2aa7c-474">方法 `null` 为 <xref:System.Nullable%601> 没有值的实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-474">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="2aa7c-475">从 .NET Framework 2.0 Service Pack 1 开始，此方法可用于访问非公共类型和成员（如果已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermission> 标志） <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> ，并且非公共类型和成员的授予集限制为调用方的授权集或其子集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-475">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-476"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-476">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-477">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-477">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-478"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-478"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2aa7c-479"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-479"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="2aa7c-480">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-480">-or-</span></span> 
 <span data-ttu-id="2aa7c-481"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-481"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-482"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-482"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="2aa7c-483">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-483">-or-</span></span> 
<span data-ttu-id="2aa7c-484">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-484">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="2aa7c-485">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-485">-or-</span></span> 
 <span data-ttu-id="2aa7c-486"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-486"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="2aa7c-487">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-487">-or-</span></span> 
<span data-ttu-id="2aa7c-488">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-488">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="2aa7c-489">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-489">-or-</span></span> 
<span data-ttu-id="2aa7c-490">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-490">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-491">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-491">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-492">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-492">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-493">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-493">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-494">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-494">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-495">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-495">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="2aa7c-496"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-496"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-497"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-497"><paramref name="type" /> is not a valid type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle? CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder? binder, object?[]? args, System.Globalization.CultureInfo? culture, object?[]? activationAttributes);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="2aa7c-498">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-498">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="2aa7c-499">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-499">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-500">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-500">The fully qualified name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="2aa7c-501">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-501"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2aa7c-502">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-502">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-503">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-503">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="2aa7c-504">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-504">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-505">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-505">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-506">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-506">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-507">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-507">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="2aa7c-508">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-508">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-509">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-509">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-510">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-510">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-511">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-511">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="2aa7c-512">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-512">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="2aa7c-513">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-513">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="2aa7c-514">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-514">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="2aa7c-515">使用指定的程序集和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-515">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-516">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-516">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-517">使用将 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-517">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2aa7c-518">方法 `null` 为 <xref:System.Nullable%601> 没有值的实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-518">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="2aa7c-519">从 .NET Framework 2.0 Service Pack 1 开始，如果调用方已获得 <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志，并且包含非公共类型和成员的程序集的授予集限制为调用方的授权集或其子集，则可以使用此方法来创建非公共类型和成员。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-519">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-520"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-520">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-521">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-521">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-522"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-522"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-523">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-523">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-524">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-524"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-525">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-525"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-526">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-526">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-527">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-527">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-528">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-528">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-529">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-529">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-530">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-530">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="2aa7c-531">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-531">-or-</span></span> 
 <span data-ttu-id="2aa7c-532"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-532"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="2aa7c-533">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-533">-or-</span></span> 
<span data-ttu-id="2aa7c-534">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-534">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-535"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-535"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-536">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-536">-or-</span></span> 
<span data-ttu-id="2aa7c-537">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-537">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-538">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-538">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="2aa7c-539">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-539">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="2aa7c-540">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-540">-or-</span></span>  
  
 <span data-ttu-id="2aa7c-541">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-541">The assembly name or code base is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="2aa7c-542">在其中创建名为 <paramref name="typeName" /> 的类型的域。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-542">The domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="2aa7c-543">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-543">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="2aa7c-544">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-544">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-545">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-545">The fully qualified name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="2aa7c-546">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-546"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2aa7c-547">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-547">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-548">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-548">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="2aa7c-549">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-549">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-550">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-550">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-551">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-551">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-552">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-552">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="2aa7c-553">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-553">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-554">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-554">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-555">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-555">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-556">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-556">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="2aa7c-557">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-557">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="2aa7c-558">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-558">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="2aa7c-559">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-559">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="2aa7c-560">使用命名的程序集和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-560">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-561">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-561">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-562"><xref:System.Activator.CreateInstance%2A>当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-562">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2aa7c-563">方法 `null` 为 <xref:System.Nullable%601> 没有值的实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-563">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>

 <span data-ttu-id="2aa7c-564">使用将 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-564">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2aa7c-565">此方法使用 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 要求直接调用方具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-565">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-566"><paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-566"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-567">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-567">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-568">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-568"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-569">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-569"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-570">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-570">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-571">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-571">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-572">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-572">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-573">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-573">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-574">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-574">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="2aa7c-575">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-575">-or-</span></span> 
 <span data-ttu-id="2aa7c-576"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-576"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="2aa7c-577">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-577">-or-</span></span> 
<span data-ttu-id="2aa7c-578">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-578">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-579"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-579"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-580">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-580">-or-</span></span> 
<span data-ttu-id="2aa7c-581">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-581">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-582">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-582">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="2aa7c-583">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-583">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="2aa7c-584">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-584">-or-</span></span>  
  
 <span data-ttu-id="2aa7c-585">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-585">The assembly name or code base is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object(), securityInfo As Evidence) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" Index="8" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="2aa7c-586">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-586">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="2aa7c-587">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-587">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-588">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-588">The fully qualified name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="2aa7c-589">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-589"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2aa7c-590">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-590">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-591">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-591">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="2aa7c-592">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-592">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-593">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-593">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-594">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-594">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-595">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-595">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="2aa7c-596">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-596">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-597">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-597">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-598">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-598">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-599">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-599">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="2aa7c-600">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-600">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="2aa7c-601">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-601">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="2aa7c-602">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-602">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="2aa7c-603">用于做出安全策略决策和授予代码权限的信息。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-603">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="2aa7c-604">使用指定的程序集和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-604">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-605">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-605">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-606">方法 `null` 为 <xref:System.Nullable%601> 没有值的实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-606">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>

 <span data-ttu-id="2aa7c-607">使用将 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-607">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2aa7c-608">从 .NET Framework 2.0 Service Pack 1 开始，如果调用方已获得 <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志，并且包含非公共类型和成员的程序集的授予集限制为调用方的授权集或其子集，则可以使用此方法来创建非公共类型和成员。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-608">Starting with the .NET Framework 2.0 Service Pack 1, this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="2aa7c-609"> (参阅 [反射的安全注意事项](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection)) </span><span class="sxs-lookup"><span data-stu-id="2aa7c-609">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="2aa7c-610">若要使用此功能，应用程序应面向 .NET Framework 3.5 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-610">To use this functionality, your application should target the .NET Framework 3.5 or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-611"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-611"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-612">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-612">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-613">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-613"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-614">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-614"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-615">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-615">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-616">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-616">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-617">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-617">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-618">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-618">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-619">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-619">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="2aa7c-620">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-620">-or-</span></span> 
 <span data-ttu-id="2aa7c-621"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-621"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="2aa7c-622">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-622">-or-</span></span> 
<span data-ttu-id="2aa7c-623">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-623">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-624"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-624"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-625">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-625">-or-</span></span> 
<span data-ttu-id="2aa7c-626">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-626">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-627">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-627">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="2aa7c-628">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-628">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="2aa7c-629">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-629">-or-</span></span>  
  
 <span data-ttu-id="2aa7c-630">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-630">The assembly name or code base is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object(), securityAttributes As Evidence) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" Index="9" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="2aa7c-631">在其中创建名为 <paramref name="typeName" /> 的类型的域。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-631">The domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="2aa7c-632">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-632">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="2aa7c-633">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-633">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-634">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-634">The fully qualified name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="2aa7c-635">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-635"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2aa7c-636">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-636">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-637">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-637">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="2aa7c-638">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-638">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-639">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-639">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-640">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-640">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-641">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-641">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="2aa7c-642">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-642">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-643">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-643">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-644">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-644">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-645">通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-645">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span></span> <span data-ttu-id="2aa7c-646"><see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-646">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="2aa7c-647">用于做出安全策略决策和授予代码权限的信息。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-647">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="2aa7c-648">使用命名的程序集和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-648">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-649">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-649">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-650">方法 `null` 为 <xref:System.Nullable%601> 没有值的实例返回。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-650">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>

 <span data-ttu-id="2aa7c-651"><xref:System.Activator.CreateInstance%2A>当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-651">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2aa7c-652">使用将 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-652">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2aa7c-653">此方法使用 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 要求直接调用方具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-653">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-654"><paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-654"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-655">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-655">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-656">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-656"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-657">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-657"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-658">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-658">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-659">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-659">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-660">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-660">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="2aa7c-661">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-661">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-662">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-662">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="2aa7c-663">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-663">-or-</span></span> 
 <span data-ttu-id="2aa7c-664"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-664"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="2aa7c-665">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-665">-or-</span></span> 
<span data-ttu-id="2aa7c-666">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-666">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-667"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-667"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-668">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-668">-or-</span></span> 
<span data-ttu-id="2aa7c-669">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-669">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-670">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-670">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="2aa7c-671">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-671">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="2aa7c-672">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-672">-or-</span></span>  
  
 <span data-ttu-id="2aa7c-673">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-673">The assembly name or code base is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CreateInstance&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CreateInstance&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T CreateInstance();" />
      <MemberSignature Language="F#" Value="static member CreateInstance : unit -&gt; 'T" Usage="System.Activator.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="2aa7c-674">要创建的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-674">The type to create.</span></span></typeparam>
        <summary><span data-ttu-id="2aa7c-675">使用无参数构造函数，创建指定泛型类型参数所指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-675">Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-676">对新创建的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-676">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-677"><xref:System.Activator.CreateInstance%60%601>编译器使用泛型方法来实现由类型参数指定的类型的实例化。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-677">The <xref:System.Activator.CreateInstance%60%601> generic method is used by compilers to implement the instantiation of types specified by type parameters.</span></span> <span data-ttu-id="2aa7c-678">例如，在下面的泛型方法中， `new T()` `gcnew T()` c + + 中 (的实现) 使用 <xref:System.Activator.CreateInstance%60%601> 泛型方法。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-678">For example, in the following generic method, the implementation of `new T()` (`gcnew T()` in C++) uses the <xref:System.Activator.CreateInstance%60%601> generic method.</span></span>  
  
 [!code-cpp[System.Activation.CreateInstance~~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cpp/remarks.cpp#1)]
 [!code-csharp[System.Activation.CreateInstance~~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cs/remarks.cs#1)]
 [!code-vb[System.Activation.CreateInstance~~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activation.createinstance~~1/vb/remarks.vb#1)]  
  
 <span data-ttu-id="2aa7c-679">通常， <xref:System.Activator.CreateInstance%60%601> 应用程序代码中不使用泛型方法，因为该类型在编译时必须是已知的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-679">In general, there is no use for the <xref:System.Activator.CreateInstance%60%601> generic method in application code, because the type must be known at compile time.</span></span> <span data-ttu-id="2aa7c-680">如果该类型在编译时是已知的，则可以在 c # 中 (运算符使用一般的实例化语法，如 Visual Basic 中的 `new` `New` `gcnew` c + +) 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-680">If the type is known at compile time, normal instantiation syntax can be used (`new` operator in C#, `New` in Visual Basic, `gcnew` in C++).</span></span> <span data-ttu-id="2aa7c-681">如果类型在编译时未知，则可以调用的非泛型重载 <xref:System.Activator.CreateInstance%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-681">If the type is not known at compile time, you can call a non-generic overload of <xref:System.Activator.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="2aa7c-682">没有 <xref:System.Activator.CreateInstance%60%601> 采用参数列表的泛型方法的重载，因为的非泛型重载 <xref:System.Activator.CreateInstance%2A> 已经提供了后期绑定构造函数解析。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-682">There are no overloads of the <xref:System.Activator.CreateInstance%60%601> generic method that take argument lists, because the non-generic overloads of <xref:System.Activator.CreateInstance%2A> already provide late-bound constructor resolution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="2aa7c-683">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.MissingMemberException" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-683">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="2aa7c-684">无法创建抽象类的实例；或者，为 <typeparamref name="T" /> 指定的类型没有无参数的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-684">Cannot create an instance of an abstract class, or the type that is specified for <typeparamref name="T" /> does not have a parameterless constructor.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2aa7c-685">使用指定的程序集文件和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-685">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle? CreateInstanceFrom (string assemblyFile, string typeName);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName)" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Type and its constructor could be removed")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Type and its constructor could be removed")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="2aa7c-686">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-686">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-687">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-687">The name of the type to create an instance of.</span></span></param>
        <summary><span data-ttu-id="2aa7c-688">使用已命名的程序集文件和无参数构造函数，创建名称已指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-688">Creates an instance of the type whose name is specified, using the named assembly file and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-689">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-689">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-690">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-690">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2aa7c-691">有关可通过调用方法引发的其他异常的信息，请参阅和方法的异常部分 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> <xref:System.Activator.CreateInstance%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-691">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2aa7c-692">下面的代码示例演示如何调用 <xref:System.Activator.CreateInstanceFrom%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-692">The following code example demonstrates how to call the <xref:System.Activator.CreateInstanceFrom%2A> method.</span></span> <span data-ttu-id="2aa7c-693">此代码示例是为类提供的更大示例的一部分 <xref:System.Activator> 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-693">This code example is part of a larger example provided for the <xref:System.Activator> class.</span></span>  
  
 [!code-cpp[ActivatorX#3](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#3)]
 [!code-csharp[ActivatorX#3](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#3)]
 [!code-vb[ActivatorX#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-694"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-694"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-695">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-695">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-696">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-696"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-697">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-697"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-698">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-698">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-699">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-699">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-700">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-700">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2aa7c-701">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-701">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-702"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-702"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-703">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-703">-or-</span></span> 
<span data-ttu-id="2aa7c-704">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-704">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-705">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-705">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyFile" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="2aa7c-706">在其中创建名为 <paramref name="typeName" /> 的类型的远程域。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-706">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="2aa7c-707">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-707">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-708">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-708">The name of the type to create an instance of.</span></span></param>
        <summary><span data-ttu-id="2aa7c-709">使用已命名的程序集文件和无参数构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-709">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-710">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-710">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-711"><xref:System.Activator.CreateInstanceFrom%2A>当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-711">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2aa7c-712">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-712">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2aa7c-713">此方法使用 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 要求直接调用方具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-713">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="2aa7c-714">有关可通过调用方法引发的其他异常的信息，请参阅和方法的异常部分 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> <xref:System.Activator.CreateInstance%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-714">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-715"><paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-715"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-716">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-716">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-717">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-717"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-718">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-718"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-719">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-719">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-720">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-720">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-721">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-721">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2aa7c-722">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-722">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-723"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-723"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-724">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-724">-or-</span></span> 
<span data-ttu-id="2aa7c-725">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-725">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-726">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-726">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle? CreateInstanceFrom (string assemblyFile, string typeName, object?[]? activationAttributes);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, activationAttributes)" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Type and its constructor could be removed")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Type and its constructor could be removed")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="2aa7c-727">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-727">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-728">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-728">The name of the type to create an instance of.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-729">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-729">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-730">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-730">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="2aa7c-731">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-731">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="2aa7c-732">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-732">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="2aa7c-733">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-733">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="2aa7c-734">使用已命名的程序集文件和无参数构造函数，创建名称已指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-734">Creates an instance of the type whose name is specified, using the named assembly file and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-735">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-735">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-736">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-736">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2aa7c-737">有关可通过调用方法引发的其他异常的信息，请参阅和方法的异常部分 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> <xref:System.Activator.CreateInstance%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-737">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-738"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-738"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-739">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-739">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-740">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-740"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-741">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-741"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-742">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-742">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-743">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-743">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-744">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-744">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-745"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-745"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2aa7c-746">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-746">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-747"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-747"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-748">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-748">-or-</span></span> 
<span data-ttu-id="2aa7c-749">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-749">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-750">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-750">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle? CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder? binder, object?[]? args, System.Globalization.CultureInfo? culture, object?[]? activationAttributes);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Type and its constructor could be removed")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Type and its constructor could be removed")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="2aa7c-751">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-751">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-752">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-752">The name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="2aa7c-753">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-753"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2aa7c-754">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-754">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-755">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-755">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="2aa7c-756">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-756">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-757">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-757">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-758">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-758">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-759">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-759">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="2aa7c-760">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-760">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-761">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-761">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-762">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-762">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-763">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-763">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="2aa7c-764">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-764">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="2aa7c-765">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-765">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="2aa7c-766">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-766">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="2aa7c-767">使用指定的程序集文件和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-767">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-768">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-768">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-769">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-769">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2aa7c-770">有关可通过调用方法引发的其他异常的信息，请参阅和方法的异常部分 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> <xref:System.Activator.CreateInstance%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-770">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-771"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-771"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-772">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-772">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-773">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-773"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-774">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-774"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-775">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-775">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-776">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-776">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-777">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-777">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2aa7c-778">调用方没有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-778">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-779"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-779"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-780"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-780"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-781">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-781">-or-</span></span> 
<span data-ttu-id="2aa7c-782">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-782">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-783">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-783">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyFile" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="2aa7c-784">在其中创建名为 <paramref name="typeName" /> 的类型的远程域。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-784">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="2aa7c-785">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-785">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-786">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-786">The name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="2aa7c-787">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-787"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2aa7c-788">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-788">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-789">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-789">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="2aa7c-790">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-790">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-791">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-791">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-792">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-792">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-793">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-793">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="2aa7c-794">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-794">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-795">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-795">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-796">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-796">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-797">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-797">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="2aa7c-798">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-798">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="2aa7c-799">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-799">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="2aa7c-800">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-800">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="2aa7c-801">使用命名的程序集文件和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-801">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-802">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-802">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-803"><xref:System.Activator.CreateInstanceFrom%2A>当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-803">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2aa7c-804">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-804">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2aa7c-805">有关可通过调用方法引发的其他异常的信息，请参阅和方法的异常部分 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> <xref:System.Activator.CreateInstance%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-805">For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-806"><paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-806"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-807">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-807">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-808">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-808"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-809">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-809"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-810">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-810">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-811">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-811">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-812">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-812">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2aa7c-813">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-813">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-814"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-814"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-815"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-815"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-816">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-816">-or-</span></span> 
 <span data-ttu-id="2aa7c-817"><paramref name="assemblyName" /> 是针对晚于当前加载版本的公共语言运行时版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-817"><paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object(), securityInfo As Evidence) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" Index="8" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="2aa7c-818">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-818">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-819">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-819">The name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="2aa7c-820">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-820"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2aa7c-821">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-821">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-822">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-822">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="2aa7c-823">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-823">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-824">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-824">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-825">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-825">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-826">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-826">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="2aa7c-827">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-827">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-828">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-828">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-829">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-829">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-830">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-830">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="2aa7c-831">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-831">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="2aa7c-832">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-832">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="2aa7c-833">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-833">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="2aa7c-834">用于做出安全策略决策和授予代码权限的信息。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-834">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="2aa7c-835">使用指定的程序集文件和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-835">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-836">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-836">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-837">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-837">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="2aa7c-838">有关可通过调用方法引发的其他异常的信息，请参阅和方法的异常部分 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> <xref:System.Activator.CreateInstance%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-838">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-839"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-839"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-840">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-840">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-841">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-841"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-842">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-842"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-843">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-843">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-844">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-844">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-845">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-845">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2aa7c-846">调用方没有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-846">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-847"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-847"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-848"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-848"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-849">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-849">-or-</span></span> 
<span data-ttu-id="2aa7c-850">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-850">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-851">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-851">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object(), securityAttributes As Evidence) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyFile" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" Index="9" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="2aa7c-852">在其中创建名为 <paramref name="typeName" /> 的类型的远程域。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-852">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="2aa7c-853">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-853">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="2aa7c-854">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-854">The name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="2aa7c-855">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-855"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2aa7c-856">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-856">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-857">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-857">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="2aa7c-858">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-858">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-859">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-859">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="2aa7c-860">与要调用的构造函数的参数的编号、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-860">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="2aa7c-861">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-861">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="2aa7c-862">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-862">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="2aa7c-863">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-863">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="2aa7c-864">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-864">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="2aa7c-865">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-865">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="2aa7c-866">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-866">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="2aa7c-867">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-867">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="2aa7c-868">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-868">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="2aa7c-869">用于做出安全策略决策和授予代码权限的信息。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-869">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="2aa7c-870">使用命名的程序集文件和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-870">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-871">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-871">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-872"><xref:System.Activator.CreateInstanceFrom%2A>当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-872">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="2aa7c-873">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-873">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2aa7c-874">此方法使用 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 要求直接调用方具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-874">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="2aa7c-875">有关可通过调用方法引发的其他异常的信息，请参阅和方法的异常部分 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> <xref:System.Activator.CreateInstance%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-875">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-876"><paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-876"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2aa7c-877">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-877">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2aa7c-878">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-878"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="2aa7c-879">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-879"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="2aa7c-880">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-880">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-881">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-881">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="2aa7c-882">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-882">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2aa7c-883">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-883">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2aa7c-884"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-884"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="2aa7c-885"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-885"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="2aa7c-886">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2aa7c-886">-or-</span></span> 
<span data-ttu-id="2aa7c-887">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-887">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="2aa7c-888">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-888">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2aa7c-889">为已知对象或 XML Web services 创建一个代理。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-889">Creates a proxy for a well-known object or XML Web service.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObject (type As Type, url As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string -&gt; obj" Usage="System.Activator.GetObject (type, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="url" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2aa7c-890">希望连接到的已知对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-890">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="2aa7c-891">已知对象的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-891">The URL of the well-known object.</span></span></param>
        <summary><span data-ttu-id="2aa7c-892">为指定类型和 URL 所指示的已知对象创建一个代理。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-892">Creates a proxy for the well-known object indicated by the specified type and URL.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-893">一个代理，它指向由所请求的已知对象服务的终结点。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-893">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-894">调用代理以将消息发送到远程对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-894">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="2aa7c-895">在代理上调用方法之前，不会通过网络发送消息。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-895">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-896"><paramref name="type" /> 或 <paramref name="url" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-896"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="2aa7c-897"><paramref name="type" /> 不会通过参考封送并且并非接口。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-897"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-898">使用晚期绑定机制调用了此成员。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-898">This member was invoked with a late-binding mechanism.</span></span></exception>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObject (type As Type, url As String, state As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string * obj -&gt; obj" Usage="System.Activator.GetObject (type, url, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="url" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2aa7c-899">希望连接到的已知对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-899">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="2aa7c-900">已知对象的 URL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-900">The URL of the well-known object.</span></span></param>
        <param name="state"><span data-ttu-id="2aa7c-901">通道特定的数据或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-901">Channel-specific data or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="2aa7c-902">为指定类型、URL 和通道数据所指示的已知对象创建一个代理。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-902">Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</span></span></summary>
        <returns><span data-ttu-id="2aa7c-903">一个代理，它指向由所请求的已知对象服务的终结点。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-903">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-904">调用代理以将消息发送到远程对象。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-904">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="2aa7c-905">在代理上调用方法之前，不会通过网络发送消息。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-905">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 <span data-ttu-id="2aa7c-906">`state`参数将信息传递给通道，并将其传递给 <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-906">The `state` parameter communicates information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2aa7c-907"><paramref name="type" /> 或 <paramref name="url" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-907"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="2aa7c-908"><paramref name="type" /> 不会通过参考封送并且并非接口。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-908"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="2aa7c-909">使用晚期绑定机制调用了此成员。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-909">This member was invoked with a late-binding mechanism.</span></span></exception>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Activator.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Activator::GetIDsOfNames;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._Activator.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._Activator.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="activator.System.Runtime.InteropServices._Activator.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="2aa7c-910">留待将来使用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-910">Reserved for future use.</span></span> <span data-ttu-id="2aa7c-911">必须为 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-911">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="2aa7c-912">要映射的名称的传入数组。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-912">The passed-in array of names to map.</span></span></param>
        <param name="cNames"><span data-ttu-id="2aa7c-913">要映射的名称的计数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-913">The count of the names to map.</span></span></param>
        <param name="lcid"><span data-ttu-id="2aa7c-914">要在其中解释名称的区域设置上下文。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-914">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="2aa7c-915">调用方分配的数组，用于接收与名称对应的 ID。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-915">The caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="2aa7c-916">将一组名称映射为对应的一组调度标识符。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-916">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-917">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-917">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2aa7c-918">有关详细信息，请参阅 [IDispatch：： idispatch.getidsofnames](/windows/win32/api/oaidl/nf-oaidl-idispatch-getidsofnames)。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-918">For more information, see [IDispatch::GetIDsOfNames](/windows/win32/api/oaidl/nf-oaidl-idispatch-getidsofnames).</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2aa7c-919">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-919">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Activator.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfo;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._Activator.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._Activator.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="activator.System.Runtime.InteropServices._Activator.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="2aa7c-920">要返回的类型信息。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-920">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="2aa7c-921">类型信息的区域设置标识符。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-921">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="2aa7c-922">一个对象，该对象接收指向请求的类型信息对象的指针。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-922">An object that receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="2aa7c-923">检索对象的类型信息，然后可以使用该信息获取接口的类型信息。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-923">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-924">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-924">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2aa7c-925">有关详细信息，请参阅 [IDispatch：： GetTypeInfo](/windows/win32/api/oaidl/nf-oaidl-idispatch-gettypeinfo)。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-925">For more information, see [IDispatch::GetTypeInfo](/windows/win32/api/oaidl/nf-oaidl-idispatch-gettypeinfo).</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2aa7c-926">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-926">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Activator.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfoCount;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._Activator.GetTypeInfoCount : uint32 -&gt; unit&#xA;override this.System.Runtime.InteropServices._Activator.GetTypeInfoCount : uint32 -&gt; unit" Usage="activator.System.Runtime.InteropServices._Activator.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="2aa7c-927">此方法返回时包含一个用于接收对象提供的类型信息接口数量的位置指针。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-927">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span></span> <span data-ttu-id="2aa7c-928">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-928">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="2aa7c-929">检索对象提供的类型信息接口的数量（0 或 1）。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-929">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-930">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-930">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2aa7c-931">有关详细信息，请参阅 [IDispatch：： GetTypeInfoCount](/windows/win32/api/oaidl/nf-oaidl-idispatch-gettypeinfocount)。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-931">For more information, see [IDispatch::GetTypeInfoCount](/windows/win32/api/oaidl/nf-oaidl-idispatch-gettypeinfocount).</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2aa7c-932">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-932">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.Invoke">
      <MemberSignature Language="C#" Value="void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Activator.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Activator::Invoke;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._Activator.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._Activator.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="activator.System.Runtime.InteropServices._Activator.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="2aa7c-933">一个用于标识成员的调度标识符。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-933">A dispatch identifier that identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="2aa7c-934">留待将来使用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-934">Reserved for future use.</span></span> <span data-ttu-id="2aa7c-935">必须为 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-935">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="2aa7c-936">要在其中解释自变量的区域设置上下文。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-936">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="2aa7c-937">描述调用的上下文的标志。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-937">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="2aa7c-938">指向一个结构的指针，该结构包含一个自变量数组、一个命名自变量的 DISPID 自变量数组和数组元素的计数。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-938">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="2aa7c-939">指向要存储结果的位置的指针。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-939">A pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="2aa7c-940">指向一个包含异常信息的结构的指针。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-940">A pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="2aa7c-941">第一个出错参数的索引。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-941">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="2aa7c-942">提供对某一对象公开的属性和方法的访问。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-942">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aa7c-943">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-943">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2aa7c-944">有关详细信息，请参阅 [IDispatch：： Invoke](/windows/win32/api/oaidl/nf-oaidl-idispatch-invoke)。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-944">For more information, see [IDispatch::Invoke](/windows/win32/api/oaidl/nf-oaidl-idispatch-invoke).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2aa7c-945">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span><span class="sxs-lookup"><span data-stu-id="2aa7c-945">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
