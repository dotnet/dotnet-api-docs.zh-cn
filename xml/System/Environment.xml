<Type Name="Environment" FullName="System.Environment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b2dce8b3fe21190bb9fe408aed22fb6a2667098" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91908813" /></Metadata><TypeSignature Language="C#" Value="public static class Environment" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Environment extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Environment" />
  <TypeSignature Language="VB.NET" Value="Public Class Environment" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Environment abstract sealed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Environment = class" />
  <TypeSignature Language="C#" Value="public sealed class Environment" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Environment extends System.Object" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Environment" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class Environment sealed" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime.Extensions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8b694-101">提供有关当前环境和平台的信息以及操作它们的方法。</span><span class="sxs-lookup"><span data-stu-id="8b694-101">Provides information about, and means to manipulate, the current environment and platform.</span></span> <span data-ttu-id="8b694-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="8b694-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-103">使用 <xref:System.Environment> 类可以检索信息，如命令行参数、退出代码、环境变量设置、调用堆栈的内容、自上次系统启动以来的时间和公共语言运行时的版本。</span><span class="sxs-lookup"><span data-stu-id="8b694-103">Use the <xref:System.Environment> class to retrieve information such as command-line arguments, the exit code, environment variable settings, contents of the call stack, time since last system boot, and the version of the common language runtime.</span></span>
  
## Examples  
 <span data-ttu-id="8b694-104">下面的示例演示如何显示有关当前环境的信息列表。</span><span class="sxs-lookup"><span data-stu-id="8b694-104">The following example demonstrates displays a list of information about the current environment.</span></span>  
  
 [!code-cpp[environment.class#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.class/CPP/env0.cpp#1)]
 [!code-csharp[environment.class#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.class/CS/env0.cs#1)]
 [!code-vb[environment.class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.class/VB/env0.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="public static string CommandLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CommandLine" />
      <MemberSignature Language="DocId" Value="P:System.Environment.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CommandLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CommandLine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandLine : string" Usage="System.Environment.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-105">获取该进程的命令行。</span><span class="sxs-lookup"><span data-stu-id="8b694-105">Gets the command line for this process.</span></span></summary>
        <value><span data-ttu-id="8b694-106">包含命令行参数的字符串。</span><span class="sxs-lookup"><span data-stu-id="8b694-106">A string containing command-line arguments.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-107">此属性提供对程序名称和当前进程启动时在命令行上指定的任何参数的访问。</span><span class="sxs-lookup"><span data-stu-id="8b694-107">This property provides access to the program name and any arguments specified on the command line when the current process was started.</span></span>  
  
 <span data-ttu-id="8b694-108">程序名称可以包含路径信息，但这不是必需的。</span><span class="sxs-lookup"><span data-stu-id="8b694-108">The program name can  include path information, but is not required to do so.</span></span> <span data-ttu-id="8b694-109">使用 <xref:System.Environment.GetCommandLineArgs%2A> 方法检索已分析并存储在字符串数组中的命令行信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-109">Use the <xref:System.Environment.GetCommandLineArgs%2A> method to retrieve the command-line information parsed and stored in an array of strings.</span></span>  
  
 <span data-ttu-id="8b694-110">命令行缓冲区的最大大小未设置为特定数量的字符;这取决于计算机上运行的 Windows 操作系统。</span><span class="sxs-lookup"><span data-stu-id="8b694-110">The maximum size of the command-line buffer is not set to a specific number of characters; it varies depending on the Windows operating system that is running on the computer.</span></span>
  
## Examples  
 <span data-ttu-id="8b694-111">下面的示例显示其自己的命令行。</span><span class="sxs-lookup"><span data-stu-id="8b694-111">The following example displays its own command line.</span></span>  
  
 [!code-cpp[environment.commandline#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.CommandLine/CPP/commandline.cpp#1)]
 [!code-csharp[environment.commandline#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.CommandLine/CS/commandline.cs#1)]
 [!code-vb[environment.commandline#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.CommandLine/VB/commandline.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Environment.GetCommandLineArgs" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDirectory">
      <MemberSignature Language="C#" Value="public static string CurrentDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string CurrentDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Environment.CurrentDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CurrentDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDirectory : string with get, set" Usage="System.Environment.CurrentDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-112">获取或设置当前工作目录的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="8b694-112">Gets or sets the fully qualified path of the current working directory.</span></span></summary>
        <value><span data-ttu-id="8b694-113">目录路径。</span><span class="sxs-lookup"><span data-stu-id="8b694-113">The directory path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-114">按照定义，如果此进程在本地或网络驱动器的根目录下启动，则此属性的值为驱动器名称后跟尾随斜杠 (例如，"C： \\ " ) 。</span><span class="sxs-lookup"><span data-stu-id="8b694-114">By definition, if this process starts in the root directory of a local or network drive, the value of this property is the drive name followed by a trailing slash (for example, "C:\\").</span></span> <span data-ttu-id="8b694-115">如果此过程在子目录中启动，则此属性的值为驱动器和子目录路径，无尾随斜杠 (例如，"C:\mySubDirectory" ) 。</span><span class="sxs-lookup"><span data-stu-id="8b694-115">If this process starts in a subdirectory, the value of this property is the drive and subdirectory path, without a trailing slash (for example, "C:\mySubDirectory").</span></span>
  
## Examples  
 <span data-ttu-id="8b694-116">下面的示例演示如何设置 <xref:System.Environment.CurrentDirectory%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="8b694-116">The following example demonstrates setting the <xref:System.Environment.CurrentDirectory%2A> property.</span></span>  
  
 [!code-cpp[System.Environment#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Environment/CPP/Vars1.cpp#4)]
 [!code-csharp[System.Environment#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Environment/CS/Vars1.cs#4)]
 [!code-vb[System.Environment#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Environment/VB/Vars1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b694-117">已尝试设置为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="8b694-117">Attempted to set to an empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b694-118">已尝试设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-118">Attempted to set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8b694-119">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="8b694-119">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="8b694-120">已尝试设置一个找不到的本地路径。</span><span class="sxs-lookup"><span data-stu-id="8b694-120">Attempted to set a local path that cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8b694-121">调用方没有相应的权限。</span><span class="sxs-lookup"><span data-stu-id="8b694-121">The caller does not have the appropriate permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentManagedThreadId">
      <MemberSignature Language="C#" Value="public static int CurrentManagedThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CurrentManagedThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Environment.CurrentManagedThreadId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentManagedThreadId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CurrentManagedThreadId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentManagedThreadId : int" Usage="System.Environment.CurrentManagedThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-122">获取当前托管线程的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="8b694-122">Gets a unique identifier for the current managed thread.</span></span></summary>
        <value><span data-ttu-id="8b694-123">此托管线程的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="8b694-123">A unique identifier for this managed thread.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exit">
      <MemberSignature Language="C#" Value="public static void Exit (int exitCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Exit(int32 exitCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.Exit(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Exit (exitCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Exit(int exitCode);" />
      <MemberSignature Language="F#" Value="static member Exit : int -&gt; unit" Usage="System.Environment.Exit exitCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitCode" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="exitCode"><span data-ttu-id="8b694-124">返回到操作系统的退出代码。</span><span class="sxs-lookup"><span data-stu-id="8b694-124">The exit code to return to the operating system.</span></span> <span data-ttu-id="8b694-125">使用 0（零）指示处理已成功完成。</span><span class="sxs-lookup"><span data-stu-id="8b694-125">Use 0 (zero) to indicate that the process completed successfully.</span></span></param>
        <summary><span data-ttu-id="8b694-126">终止此进程，并将退出代码返回到操作系统。</span><span class="sxs-lookup"><span data-stu-id="8b694-126">Terminates this process and returns an exit code to the operating system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-127">对于 `exitCode` 参数，请使用非零数字来指示错误。</span><span class="sxs-lookup"><span data-stu-id="8b694-127">For the `exitCode` parameter, use a non-zero number to indicate an error.</span></span> <span data-ttu-id="8b694-128">在应用程序中，你可以在枚举中定义自己的错误代码，并根据方案返回相应的错误代码。</span><span class="sxs-lookup"><span data-stu-id="8b694-128">In your application, you can define your own error codes in an enumeration, and return the appropriate error code based on the scenario.</span></span> <span data-ttu-id="8b694-129">例如，返回的值为1，表示所需的文件不存在，值为2，表示该文件的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="8b694-129">For example, return a value of 1 to indicate that the required file is not present, and a value of 2 to indicate that the file is in the wrong format.</span></span> <span data-ttu-id="8b694-130">有关 Windows 操作系统使用的退出代码的列表，请参阅 Windows 文档中的 " [系统错误代码](/windows/win32/debug/system-error-codes) "。</span><span class="sxs-lookup"><span data-stu-id="8b694-130">For a list of exit codes used by the Windows operating system, see [System Error Codes](/windows/win32/debug/system-error-codes) in the Windows documentation.</span></span>  
  
 <span data-ttu-id="8b694-131">调用 <xref:System.Environment.Exit%2A> 方法不同于通过以下方式使用编程语言的 `return` 语句：</span><span class="sxs-lookup"><span data-stu-id="8b694-131">Calling the <xref:System.Environment.Exit%2A> method differs from using your programming language's `return` statement in the following ways:</span></span>  
  
-   <span data-ttu-id="8b694-132"><xref:System.Environment.Exit%2A> 始终终止应用程序。</span><span class="sxs-lookup"><span data-stu-id="8b694-132"><xref:System.Environment.Exit%2A> always terminates an application.</span></span> <span data-ttu-id="8b694-133">`return`仅当应用程序入口点（例如方法）中使用了应用程序时，才能使用该语句终止应用程序 `Main` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-133">Using the `return` statement may terminate an application only if it is used in the application entry point, such as in the `Main` method.</span></span>  
  
-   <span data-ttu-id="8b694-134"><xref:System.Environment.Exit%2A> 立即终止应用程序，即使其他线程正在运行也是如此。</span><span class="sxs-lookup"><span data-stu-id="8b694-134"><xref:System.Environment.Exit%2A> terminates an application immediately, even if other threads are running.</span></span> <span data-ttu-id="8b694-135">如果 `return` 在应用程序入口点调用该语句，则会使应用程序仅在所有前台线程终止后终止。</span><span class="sxs-lookup"><span data-stu-id="8b694-135">If the `return` statement is called in the application entry point, it causes an application to terminate only after all foreground threads have terminated.</span></span>  
  
-   <span data-ttu-id="8b694-136"><xref:System.Environment.Exit%2A> 要求调用方具有调用非托管代码的权限。</span><span class="sxs-lookup"><span data-stu-id="8b694-136"><xref:System.Environment.Exit%2A> requires the caller to have permission to call unmanaged code.</span></span> <span data-ttu-id="8b694-137">`return`语句不会。</span><span class="sxs-lookup"><span data-stu-id="8b694-137">The `return` statement does not.</span></span>  
  
-   <span data-ttu-id="8b694-138">如果 <xref:System.Environment.Exit%2A> 从 `try` 或 `catch` 块调用，则 `finally` 不会执行任何块中的代码。</span><span class="sxs-lookup"><span data-stu-id="8b694-138">If <xref:System.Environment.Exit%2A> is called from a `try` or `catch` block, the code in any `finally` block does not execute.</span></span> <span data-ttu-id="8b694-139">如果 `return` 使用语句，则块中的代码 `finally` 执行。</span><span class="sxs-lookup"><span data-stu-id="8b694-139">If the `return` statement is used, the code in the `finally` block does execute.</span></span>  
  
-   <span data-ttu-id="8b694-140">如果在 <xref:System.Environment.Exit%2A> [受约束的执行区域](/dotnet/framework/performance/constrained-execution-regions) 中的代码 (CER) 正在运行时调用，则 cer 将不会完成执行。</span><span class="sxs-lookup"><span data-stu-id="8b694-140">If <xref:System.Environment.Exit%2A> is called when code in a [constrained execution region](/dotnet/framework/performance/constrained-execution-regions) (CER) is running, the CER will not complete execution.</span></span> <span data-ttu-id="8b694-141">如果 `return` 使用语句，则 CER 将完成执行。</span><span class="sxs-lookup"><span data-stu-id="8b694-141">If the `return` statement is used, the CER completes execution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8b694-142">调用方没有足够的安全权限来执行此函数。</span><span class="sxs-lookup"><span data-stu-id="8b694-142">The caller does not have sufficient security permission to perform this function.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public static int ExitCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:System.Environment.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int ExitCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExitCode : int with get, set" Usage="System.Environment.ExitCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-143">获取或设置进程的退出代码。</span><span class="sxs-lookup"><span data-stu-id="8b694-143">Gets or sets the exit code of the process.</span></span></summary>
        <value><span data-ttu-id="8b694-144">包含退出代码的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b694-144">A 32-bit signed integer containing the exit code.</span></span> <span data-ttu-id="8b694-145">默认值为 0（零），这指示已成功完成处理。</span><span class="sxs-lookup"><span data-stu-id="8b694-145">The default value is 0 (zero), which indicates that the process completed successfully.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-146">如果该 `Main` 方法返回 `void` ，则可以使用此属性来设置将返回到调用环境中的退出代码。</span><span class="sxs-lookup"><span data-stu-id="8b694-146">If the `Main` method returns `void`, you can use this property to set the exit code that will be returned to the calling environment.</span></span> <span data-ttu-id="8b694-147">如果 `Main` 未返回 `void` ，则忽略此属性。</span><span class="sxs-lookup"><span data-stu-id="8b694-147">If `Main` does not return `void`, this property is ignored.</span></span> <span data-ttu-id="8b694-148">此属性的初始值为零。</span><span class="sxs-lookup"><span data-stu-id="8b694-148">The initial value of this property is zero.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="8b694-149">该 <xref:System.Environment.ExitCode%2A> 属性是一个有符号的32位整数。</span><span class="sxs-lookup"><span data-stu-id="8b694-149">The <xref:System.Environment.ExitCode%2A> property is a signed 32-bit integer.</span></span> <span data-ttu-id="8b694-150">若要防止属性返回一个负的退出代码，则不应使用大于或等于0x80000000 的值。</span><span class="sxs-lookup"><span data-stu-id="8b694-150">To prevent the property from returning a negative exit code, you should not use values greater than or equal to 0x80000000.</span></span>  
  
 <span data-ttu-id="8b694-151">使用非零值表示错误。</span><span class="sxs-lookup"><span data-stu-id="8b694-151">Use a non-zero number to indicate an error.</span></span> <span data-ttu-id="8b694-152">在应用程序中，你可以在枚举中定义自己的错误代码，并根据方案返回相应的错误代码。</span><span class="sxs-lookup"><span data-stu-id="8b694-152">In your application, you can define your own error codes in an enumeration, and return the appropriate error code based on the scenario.</span></span> <span data-ttu-id="8b694-153">例如，返回的值为1，表示所需的文件不存在，值为2，表示该文件的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="8b694-153">For example, return a value of 1 to indicate that the required file is not present and a value of 2 to indicate that the file is in the wrong format.</span></span> <span data-ttu-id="8b694-154">有关 Windows 操作系统使用的退出代码的列表，请参阅 Windows 文档中的 " [系统错误代码](/windows/win32/debug/system-error-codes) "。</span><span class="sxs-lookup"><span data-stu-id="8b694-154">For a list of exit codes used by the Windows operating system, see [System Error Codes](/windows/win32/debug/system-error-codes) in the Windows documentation.</span></span>
  
## Examples  
 <span data-ttu-id="8b694-155">下面是一个名为 Double.exe 的简单应用，它将作为命令行参数传递给它的整数值加倍。</span><span class="sxs-lookup"><span data-stu-id="8b694-155">The following is a simple app named Double.exe that doubles an integer value passed to it as a command-line argument.</span></span> <span data-ttu-id="8b694-156">值将错误代码分配给 <xref:System.Environment.ExitCode%2A> 属性，以指示错误条件。</span><span class="sxs-lookup"><span data-stu-id="8b694-156">The value assigns error codes to the <xref:System.Environment.ExitCode%2A> property to indicate error conditions.</span></span> <span data-ttu-id="8b694-157">请注意，必须添加对 System.Numerics.dll 程序集的引用才能成功编译此示例。</span><span class="sxs-lookup"><span data-stu-id="8b694-157">Note that you must add a reference to the System.Numerics.dll assembly to successfully compile the example.</span></span>  
  
 [!code-csharp[System.Environment.ExitCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.exitcode/cs/double.cs#1)]
 [!code-vb[System.Environment.ExitCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.exitcode/vb/double.vb#1)]  
  
 <span data-ttu-id="8b694-158">然后，可以从如下所示的批处理文件中调用该示例，这使其错误代码可以通过使用命令来访问 `ERRORLEVEL` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-158">The example can then be invoked from a batch file such as the following, which makes its error codes accessible by using the `ERRORLEVEL` command.</span></span>  
  
```
echo off  
Double.exe %1  
If errorlevel 1639 goto NoArg   
if errorlevel 534 goto Overflow  
if errorlevel 160 goto BadArg  
if errorlevel 0 echo Completed Successfully   
goto :EOF  
  
:NoArg  
echo Missing argument  
goto :EOF  
  
: Overflow  
echo Arithmetic overflow  
goto :EOF  
  
:BadArg  
echo Invalid argument  
goto :EOF
```
  
 <span data-ttu-id="8b694-159">下面显示了通过调用批处理文件而产生的一些示例输出。</span><span class="sxs-lookup"><span data-stu-id="8b694-159">The following shows some sample output produced by invoking the batch file.</span></span>  
  
```
>getdouble 123>echo offResult: 246Completed Successfully>getdouble 5912323109093>echo offArithmetic overflow>getdouble>echo offMissing argument>getdouble "a string">echo offInvalid argument
```
  
 <span data-ttu-id="8b694-160">请注意，Double.exe 的代码在函数中与下面的示例相同，不同之处在于前者定义了一个名为 `Main` 且没有返回值的入口点，而此示例定义了一个名为的入口点， `Main` 它返回整数。</span><span class="sxs-lookup"><span data-stu-id="8b694-160">Note that code for Double.exe is identical in function to the following example, except that the former defines an entry point named `Main` that has no return value, whereas this example defines an entry point named `Main` that returns an integer.</span></span>  
  
 [!code-csharp[System.Environment.ExitCode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.exitcode/cs/double1.cs#2)]
 [!code-vb[System.Environment.ExitCode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.exitcode/vb/double1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandEnvironmentVariables">
      <MemberSignature Language="C#" Value="public static string ExpandEnvironmentVariables (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ExpandEnvironmentVariables(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.ExpandEnvironmentVariables(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExpandEnvironmentVariables (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ExpandEnvironmentVariables(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member ExpandEnvironmentVariables : string -&gt; string" Usage="System.Environment.ExpandEnvironmentVariables name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8b694-161">包含零个或多个环境变量名的字符串。</span><span class="sxs-lookup"><span data-stu-id="8b694-161">A string containing the names of zero or more environment variables.</span></span> <span data-ttu-id="8b694-162">每个环境变量都用百分号 (%) 引起来。</span><span class="sxs-lookup"><span data-stu-id="8b694-162">Each environment variable is quoted with the percent sign character (%).</span></span></param>
        <summary><span data-ttu-id="8b694-163">将嵌入到指定字符串中的每个环境变量的名称替换为该变量的值的等效字符串，然后返回结果字符串。</span><span class="sxs-lookup"><span data-stu-id="8b694-163">Replaces the name of each environment variable embedded in the specified string with the string equivalent of the value of the variable, then returns the resulting string.</span></span></summary>
        <returns><span data-ttu-id="8b694-164">一个字符串，其中的每个环境变量均被替换为该变量的值。</span><span class="sxs-lookup"><span data-stu-id="8b694-164">A string with each environment variable replaced by its value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-165">COM 互操作用于从操作系统检索环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-165">COM interop is used to retrieve the environment variables from the operating system.</span></span> <span data-ttu-id="8b694-166">如果由于 COM 错误而无法检索环境变量，则将使用用于说明失败原因的 HRESULT 来生成几个可能的异常之一;也就是说，异常依赖于 HRESULT。</span><span class="sxs-lookup"><span data-stu-id="8b694-166">If the environment variables cannot be retrieved due to a COM error, the HRESULT that explains the cause of the failure is used to generate one of several possible exceptions; that is, the exception depends on the HRESULT.</span></span> <span data-ttu-id="8b694-167">有关如何处理 HRESULT 的详细信息，请参阅方法的 "备注" 部分 <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-167">For more information about how the HRESULT is processed, see the Remarks section of the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8b694-168">仅对设置的环境变量进行替换。</span><span class="sxs-lookup"><span data-stu-id="8b694-168">Replacement only occurs for environment variables that are set.</span></span> <span data-ttu-id="8b694-169">例如，假设 `name` 为 "MyENV =% MyENV%"。</span><span class="sxs-lookup"><span data-stu-id="8b694-169">For example, suppose `name` is "MyENV = %MyENV%".</span></span> <span data-ttu-id="8b694-170">如果环境变量 MyENV 设置为42，则此方法将返回 "MyENV = 42"。</span><span class="sxs-lookup"><span data-stu-id="8b694-170">If the environment variable, MyENV, is set to 42, this method returns "MyENV = 42".</span></span> <span data-ttu-id="8b694-171">如果未设置 MyENV，则不进行任何更改;此方法返回 "MyENV =% MyENV%"。</span><span class="sxs-lookup"><span data-stu-id="8b694-171">If MyENV is not set, no change occurs; this method returns "MyENV = %MyENV%".</span></span>  
  
 <span data-ttu-id="8b694-172">返回值的大小限制为32K。</span><span class="sxs-lookup"><span data-stu-id="8b694-172">The size of the return value is limited to 32K.</span></span>
  
## Examples  
 <span data-ttu-id="8b694-173">下面的示例演示如何获取系统驱动器和系统根变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-173">The following example shows how to obtain the system drive and system root variables.</span></span>  
  
 [!code-cpp[Environment.ExpandEnvironmentVariables#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.ExpandEnvironmentVariables/CPP/expandenvironmentvariables.cpp#1)]
 [!code-csharp[Environment.ExpandEnvironmentVariables#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.ExpandEnvironmentVariables/CS/expandenvironmentvariables.cs#1)]
 [!code-vb[Environment.ExpandEnvironmentVariables#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.ExpandEnvironmentVariables/VB/expandenvironmentvariables.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b694-174"><paramref name="name" /> 上声明的默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-174"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FailFast">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b694-175">向 Windows 的应用程序事件日志写入消息后立即终止进程，然后在发往 Microsoft 的错误报告中加入该消息和可选的异常信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-175">Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message and optional exception information in error reporting to Microsoft.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FailFast">
      <MemberSignature Language="C#" Value="public static void FailFast (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailFast(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.FailFast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FailFast (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FailFast(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member FailFast : string -&gt; unit" Usage="System.Environment.FailFast message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8b694-176">一条解释进程终止原因的消息；如果未提供解释，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-176">A message that explains why the process was terminated, or <see langword="null" /> if no explanation is provided.</span></span></param>
        <summary><span data-ttu-id="8b694-177">向 Windows 的应用程序事件日志写入消息后立即终止进程，然后在发往 Microsoft 的错误报告中加入该消息。</span><span class="sxs-lookup"><span data-stu-id="8b694-177">Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message in error reporting to Microsoft.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-178">此方法终止进程，而不运行任何活动 `try` / `finally` 的块或终结器。</span><span class="sxs-lookup"><span data-stu-id="8b694-178">This method terminates a process without running any active `try`/`finally` blocks or finalizers.</span></span>
  
 <span data-ttu-id="8b694-179">`Environment.FailFast`方法将字符串写入 `message` Windows 应用程序事件日志，创建应用程序的转储，然后终止当前进程。</span><span class="sxs-lookup"><span data-stu-id="8b694-179">The `Environment.FailFast` method writes the `message` string to the Windows Application event log, creates a dump of your application, and then terminates the current process.</span></span> <span data-ttu-id="8b694-180">此 `message` 字符串也包含在向 Microsoft 报告错误。</span><span class="sxs-lookup"><span data-stu-id="8b694-180">The `message` string is also included in error reporting to Microsoft.</span></span>  
  
 <span data-ttu-id="8b694-181">使用 `Environment.FailFast` 方法而不是 <xref:System.Environment.Exit%2A> 方法来终止应用程序，前提是应用程序的状态已损坏，无法修复，执行应用程序的 `try` / `finally` 块和终结器将损坏程序资源。</span><span class="sxs-lookup"><span data-stu-id="8b694-181">Use the `Environment.FailFast` method instead of the <xref:System.Environment.Exit%2A> method to terminate your application if the state of your application is damaged beyond repair, and executing your application's `try`/`finally` blocks and finalizers will corrupt program resources.</span></span>  
  
 <span data-ttu-id="8b694-182">使用 Windows 错误报告向 Microsoft 报告信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-182">Information is reported to Microsoft by using Windows Error Reporting.</span></span> <span data-ttu-id="8b694-183">有关详细信息，请参阅 [Windows 错误报告：入门](/windows-hardware/drivers/dashboard/)。</span><span class="sxs-lookup"><span data-stu-id="8b694-183">For more information, see [Windows Error Reporting: Getting Started](/windows-hardware/drivers/dashboard/).</span></span>  

<span data-ttu-id="8b694-184">调用 `Environment.FailFast` 方法以终止在 Visual Studio 调试器中运行的应用程序的执行会引发 <xref:System.ExecutionEngineException> ，并自动触发 [fatalExecutionEngineError 托管调试助手 (MDA) ](https://github.com/dotnet/docs/blob/master/docs/framework/debug-trace-profile/fatalexecutionengineerror-mda.md)。</span><span class="sxs-lookup"><span data-stu-id="8b694-184">Calling the `Environment.FailFast` method to terminate execution of an application running in the Visual Studio debugger throws an <xref:System.ExecutionEngineException> and automatically triggers the [fatalExecutionEngineError managed debugging assistant (MDA)](https://github.com/dotnet/docs/blob/master/docs/framework/debug-trace-profile/fatalexecutionengineerror-mda.md).</span></span>
  
## Examples  
 <span data-ttu-id="8b694-185">下面的示例向 Windows 应用程序事件日志中写入一个日志项，并终止当前进程。</span><span class="sxs-lookup"><span data-stu-id="8b694-185">The following example writes a log entry to the Windows Application event log and terminates the current process.</span></span>  
  
 [!code-csharp[environment.FailFast#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.FailFast/cs/ff.cs#1)]
 [!code-vb[environment.FailFast#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.FailFast/vb/ff.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FailFast">
      <MemberSignature Language="C#" Value="public static void FailFast (string message, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailFast(string message, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.FailFast(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FailFast (message As String, exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FailFast(System::String ^ message, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="static member FailFast : string * Exception -&gt; unit" Usage="System.Environment.FailFast (message, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8b694-186">一条解释进程终止原因的消息；如果未提供解释，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-186">A message that explains why the process was terminated, or <see langword="null" /> if no explanation is provided.</span></span></param>
        <param name="exception"><span data-ttu-id="8b694-187">一个异常，表示导致终止的错误。</span><span class="sxs-lookup"><span data-stu-id="8b694-187">An exception that represents the error that caused the termination.</span></span> <span data-ttu-id="8b694-188">通常这是 <see langword="catch" /> 块中的异常。</span><span class="sxs-lookup"><span data-stu-id="8b694-188">This is typically the exception in a <see langword="catch" /> block.</span></span></param>
        <summary><span data-ttu-id="8b694-189">向 Windows 的应用程序事件日志写入消息后立即终止进程，然后在发往 Microsoft 的错误报告中加入该消息和异常信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-189">Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message and exception information in error reporting to Microsoft.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-190">此方法终止进程，而不运行任何活动 `try` / `finally` 的块或终结器。</span><span class="sxs-lookup"><span data-stu-id="8b694-190">This method terminates the process without running any active `try`/`finally` blocks or finalizers.</span></span>  
  
 <span data-ttu-id="8b694-191">`Environment.FailFast`方法将字符串写入 `message` Windows 应用程序事件日志，创建应用程序的转储，然后终止当前进程。</span><span class="sxs-lookup"><span data-stu-id="8b694-191">The `Environment.FailFast` method writes the `message` string to the Windows Application event log, creates a dump of your application, and then terminates the current process.</span></span>  
  
 <span data-ttu-id="8b694-192">使用 Windows 错误报告向 Microsoft 报告信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-192">Information is reported to Microsoft by using Windows Error Reporting.</span></span> <span data-ttu-id="8b694-193">有关详细信息，请参阅 [Windows 错误报告：入门](/windows-hardware/drivers/dashboard/)。</span><span class="sxs-lookup"><span data-stu-id="8b694-193">For more information, see [Windows Error Reporting: Getting Started](/windows-hardware/drivers/dashboard/).</span></span> <span data-ttu-id="8b694-194">向 Microsoft 提供错误报告包括 `message` 和 `exception` 信息，其中提供了用于分类错误的详细信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-194">Error reporting to Microsoft includes `message` and `exception` information, which provides details used to classify the error.</span></span> <span data-ttu-id="8b694-195">尽管 `exception` 因为进程已终止而未进行处理，但仍会获取引发异常的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-195">Although `exception` is not handled because the process is terminated, the contextual information that raised the exception is still obtained.</span></span>  
  
 <span data-ttu-id="8b694-196">如果 `exception` 为 `null` ，或者 `exception` 不引发，则此方法与方法重载的操作相同 <xref:System.Environment.FailFast%28System.String%29> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-196">If `exception` is `null`, or if `exception` is not thrown, this method operates the same as the <xref:System.Environment.FailFast%28System.String%29> method overload.</span></span>  
  
 <span data-ttu-id="8b694-197">使用 `Environment.FailFast` 方法而不是 <xref:System.Environment.Exit%2A> 方法来终止应用程序，前提是应用程序的状态已损坏，无法修复，执行应用程序的 `try` / `finally` 块和终结器将损坏程序资源。</span><span class="sxs-lookup"><span data-stu-id="8b694-197">Use the `Environment.FailFast` method instead of the <xref:System.Environment.Exit%2A> method to terminate your application if the state of your application is damaged beyond repair, and executing your application's `try`/`finally` blocks and finalizers will corrupt program resources.</span></span>  

<span data-ttu-id="8b694-198">调用 `Environment.FailFast` 方法以终止在 Visual Studio 调试器中运行的应用程序的执行会引发 <xref:System.ExecutionEngineException> ，并自动触发 [fatalExecutionEngineError 托管调试助手 (MDA) ](https://github.com/dotnet/docs/blob/master/docs/framework/debug-trace-profile/fatalexecutionengineerror-mda.md)。</span><span class="sxs-lookup"><span data-stu-id="8b694-198">Calling the `Environment.FailFast` method to terminate execution of an application running in the Visual Studio debugger throws an <xref:System.ExecutionEngineException> and automatically triggers the [fatalExecutionEngineError managed debugging assistant (MDA)](https://github.com/dotnet/docs/blob/master/docs/framework/debug-trace-profile/fatalexecutionengineerror-mda.md).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommandLineArgs">
      <MemberSignature Language="C#" Value="public static string[] GetCommandLineArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetCommandLineArgs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetCommandLineArgs" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCommandLineArgs () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetCommandLineArgs();" />
      <MemberSignature Language="F#" Value="static member GetCommandLineArgs : unit -&gt; string[]" Usage="System.Environment.GetCommandLineArgs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b694-199">返回包含当前进程的命令行自变量的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="8b694-199">Returns a string array containing the command-line arguments for the current process.</span></span></summary>
        <returns><span data-ttu-id="8b694-200">字符串数组，其中的每个元素都包含一个命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-200">An array of string where each element contains a command-line argument.</span></span> <span data-ttu-id="8b694-201">第一个元素是可执行文件名，后面的零个或多个元素包含其余的命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-201">The first element is the executable file name, and the following zero or more elements contain the remaining command-line arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-202">数组中的第一个元素包含执行程序的文件名。</span><span class="sxs-lookup"><span data-stu-id="8b694-202">The first element in the array contains the file name of the executing program.</span></span> <span data-ttu-id="8b694-203">如果文件名不可用，则第一个元素等于 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-203">If the file name is not available, the first element is equal to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8b694-204">剩余的元素包含在命令行中输入的任何其他标记。</span><span class="sxs-lookup"><span data-stu-id="8b694-204">The remaining elements contain any additional tokens entered on the command line.</span></span>  
  
 <span data-ttu-id="8b694-205">程序文件名称可以（但不需要）包含路径信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-205">The program file name can, but is not required to, include path information.</span></span>  
  
 <span data-ttu-id="8b694-206">命令行参数由空格分隔。</span><span class="sxs-lookup"><span data-stu-id="8b694-206">Command line arguments are delimited by spaces.</span></span> <span data-ttu-id="8b694-207">您可以使用双引号 ( ") 在参数内包括空格。</span><span class="sxs-lookup"><span data-stu-id="8b694-207">You can use double quotation marks (") to include spaces within an argument.</span></span> <span data-ttu-id="8b694-208">但单引号 ( ") 不提供此功能。</span><span class="sxs-lookup"><span data-stu-id="8b694-208">The single quotation mark ('), however, does not provide this functionality.</span></span>  
  
 <span data-ttu-id="8b694-209">如果双引号后跟两个或偶数个反斜杠，则每个后续反斜杠对将替换为一个反斜杠，并删除双引号。</span><span class="sxs-lookup"><span data-stu-id="8b694-209">If a double quotation mark follows two or an even number of backslashes, each proceeding backslash pair is replaced with one backslash and the double quotation mark is removed.</span></span> <span data-ttu-id="8b694-210">如果双引号后跟奇数个反斜杠（仅包括一个反斜杠），则前面的每个配对都将替换为一个反斜杠，并删除其余反斜杠;但在这种情况下，不会删除双引号。</span><span class="sxs-lookup"><span data-stu-id="8b694-210">If a double quotation mark follows an odd number of backslashes, including just one, each preceding pair is replaced with one backslash and the remaining backslash is removed; however, in this case the double quotation mark is not removed.</span></span>  
  
 <span data-ttu-id="8b694-211">下表显示了如何分隔命令行参数，并将其假定 `MyApp` 为当前正在执行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="8b694-211">The following table shows how command line arguments can be delimited, and assumes `MyApp` as the current executing application.</span></span>  
  
|<span data-ttu-id="8b694-212">命令行中的输入</span><span class="sxs-lookup"><span data-stu-id="8b694-212">Input at the command line</span></span>|<span data-ttu-id="8b694-213">生成的命令行参数</span><span class="sxs-lookup"><span data-stu-id="8b694-213">Resulting command line arguments</span></span>|  
|-------------------------------|--------------------------------------|  
|`MyApp alpha beta`|`MyApp, alpha, beta`|  
|`MyApp "alpha with spaces" "beta with spaces"`|`MyApp, alpha with spaces, beta with spaces`|  
|`MyApp 'alpha with spaces' beta`|`MyApp, 'alpha, with, spaces', beta`|  
|`MyApp \\\alpha \\\\"beta`|`MyApp, \\\alpha, \\beta`|  
|`MyApp \\\\\"alpha \"beta`|`MyApp, \\"alpha, "beta`|  
  
 <span data-ttu-id="8b694-214">若要以单个字符串的形式获取命令行，请使用 <xref:System.Environment.CommandLine%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="8b694-214">To obtain the command line as a single string, use the <xref:System.Environment.CommandLine%2A> property.</span></span>
  
## Examples  
 <span data-ttu-id="8b694-215">下面的示例显示应用程序的命令行参数。</span><span class="sxs-lookup"><span data-stu-id="8b694-215">The following example displays the application's command line arguments.</span></span>  
  
 [!code-cpp[Environment.GetCommandLineArgs#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetCommandLineArgs/CPP/getcommandlineargs.cpp#1)]
 [!code-csharp[Environment.GetCommandLineArgs#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetCommandLineArgs/CS/getcommandlineargs.cs#1)]
 [!code-vb[Environment.GetCommandLineArgs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetCommandLineArgs/VB/getcommandlineargs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8b694-216">系统不支持命令行参数。</span><span class="sxs-lookup"><span data-stu-id="8b694-216">The system does not support command-line arguments.</span></span></exception>
        <altmember cref="P:System.Environment.CommandLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnvironmentVariable">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b694-217">检索环境变量的值。</span><span class="sxs-lookup"><span data-stu-id="8b694-217">Retrieves the value of an environment variable.</span></span></summary>
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static string GetEnvironmentVariable (string variable);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEnvironmentVariable(string variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariable (variable As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEnvironmentVariable(System::String ^ variable);" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariable : string -&gt; string" Usage="System.Environment.GetEnvironmentVariable variable" />
      <MemberSignature Language="C#" Value="public static string? GetEnvironmentVariable (string variable);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="8b694-218">环境变量名。</span><span class="sxs-lookup"><span data-stu-id="8b694-218">The name of the environment variable.</span></span></param>
        <summary><span data-ttu-id="8b694-219">从当前进程检索环境变量的值。</span><span class="sxs-lookup"><span data-stu-id="8b694-219">Retrieves the value of an environment variable from the current process.</span></span></summary>
        <returns><span data-ttu-id="8b694-220"><paramref name="variable" /> 指定的环境变量的值；或者如果找不到环境变量，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-220">The value of the environment variable specified by <paramref name="variable" />, or <see langword="null" /> if the environment variable is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="8b694-221"><xref:System.Environment.GetEnvironmentVariable%28System.String%29>方法只从当前进程的环境块中检索环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-221">The <xref:System.Environment.GetEnvironmentVariable%28System.String%29> method retrieves an environment variable from the environment block of the current process only.</span></span> <span data-ttu-id="8b694-222">它等效于 <xref:System.Environment.GetEnvironmentVariable%28System.String%2CSystem.EnvironmentVariableTarget%29> 使用值调用方法 `target` <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-222">It is equivalent to calling the <xref:System.Environment.GetEnvironmentVariable%28System.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span> 

<span data-ttu-id="8b694-223">若要检索所有环境变量及其值，请调用 <xref:System.Environment.GetEnvironmentVariables%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b694-223">To retrieve all environment variables along with their values, call the <xref:System.Environment.GetEnvironmentVariables%2A> method.</span></span>  
  
<span data-ttu-id="8b694-224">环境变量名称在 Linux 和 macOS 上区分大小写，但在 Windows 上不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="8b694-224">Environment variable names are case-sensitive on Linux and macOS but are not case-sensitive on Windows.</span></span>  
 
### <a name="on-windows-systems"></a><span data-ttu-id="8b694-225">在 Windows 系统上</span><span class="sxs-lookup"><span data-stu-id="8b694-225">On Windows systems</span></span>

 <span data-ttu-id="8b694-226">在 Windows 系统中，当前进程的环境块包括：</span><span class="sxs-lookup"><span data-stu-id="8b694-226">On Windows systems, the environment block of the current process includes:</span></span>
 
- <span data-ttu-id="8b694-227">由创建它的父进程为其提供的所有环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-227">All environment variables that are provided to it by the parent process that created it.</span></span> <span data-ttu-id="8b694-228">例如，从控制台窗口启动的 .NET 应用程序继承了控制台窗口的所有环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-228">For example, a .NET application launched from a console window inherits all of the console window's environment variables.</span></span> 

  <span data-ttu-id="8b694-229">如果没有父进程，则改用每个计算机和每个用户的环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-229">If there is no parent process, per-machine and per-user environment variables are used instead.</span></span> <span data-ttu-id="8b694-230">例如，新的控制台窗口包含启动时定义的每个计算机和每个用户的环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-230">For example, a new console window has all per-machine and per-user environment variables defined at the time it was launched.</span></span>

- <span data-ttu-id="8b694-231">当进程正在运行时，通过 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> 使用值调用方法或方法，添加到进程块的任何变量 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> `target` <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-231">Any variables added to the process block while the process is running by calling either the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8b694-232">这些环境变量将一直保持到 .NET 应用程序终止为止。</span><span class="sxs-lookup"><span data-stu-id="8b694-232">These environment variables persist until the .NET application terminates.</span></span>  
  
<span data-ttu-id="8b694-233">如果在进程启动之后创建环境变量，则可以使用此方法只检索通过调用 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> 方法或 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 使用 `target` 值的方法创建的那些 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-233">If environment variables are created after the process has started, you can use this method to retrieve only those variables that were created by calling the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of .<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span>  

### <a name="on-macos-and-linux-systems"></a><span data-ttu-id="8b694-234">在 macOS 和 Linux 系统上</span><span class="sxs-lookup"><span data-stu-id="8b694-234">On macOS and Linux systems</span></span>

<span data-ttu-id="8b694-235">在 macOS 和 Linux 上，当前进程的环境块包含以下环境变量：</span><span class="sxs-lookup"><span data-stu-id="8b694-235">On macOS and Linux, the environment block of the current process includes the following environment variables:</span></span>

- <span data-ttu-id="8b694-236">由创建它的父进程为其提供的所有环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-236">All environment variables that are provided to it by the parent process that created it.</span></span> <span data-ttu-id="8b694-237">对于从 shell 启动的 .NET 应用程序，这包括 shell 中定义的所有环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-237">For .NET applications launched from a shell, this includes all environment variables defined in the shell.</span></span>

- <span data-ttu-id="8b694-238">当进程正在运行时，通过 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> 使用值调用方法或方法，添加到进程块的任何变量 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> `target` <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-238">Any variables added to the process block while the process is running by calling either the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8b694-239">这些环境变量将一直保持到 .NET 应用程序终止为止。</span><span class="sxs-lookup"><span data-stu-id="8b694-239">These environment variables persist until the .NET application terminates.</span></span>  

<span data-ttu-id="8b694-240">MacOS 和 Linux 上的 .NET Core 不支持每计算机或每用户环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-240">.NET Core on macOS and Linux does not support per-machine or per-user environment variables.</span></span>   
  
## Examples  
 <span data-ttu-id="8b694-241">下面的示例使用 <xref:System.Environment.GetEnvironmentVariable%2A> 方法来检索 `windir` 包含 Windows 目录路径的环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-241">The following example uses the <xref:System.Environment.GetEnvironmentVariable%2A> method to retrieve the `windir` environment variable, which contains the path of the Windows directory.</span></span>  
  
 [!code-cpp[System.Environment#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Environment/CPP/Vars1.cpp#4)]
 [!code-csharp[System.Environment#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Environment/CS/Vars1.cs#4)]
 [!code-vb[System.Environment#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Environment/VB/Vars1.vb#4)]  
  
 <span data-ttu-id="8b694-242">下面的示例尝试 `Test1` 从进程环境块中检索名为的环境变量的值。</span><span class="sxs-lookup"><span data-stu-id="8b694-242">The following example attempts to retrieve the value of an environment variable named `Test1` from the process environment block.</span></span> <span data-ttu-id="8b694-243">如果该变量不存在，则该示例将创建其并检索其值。</span><span class="sxs-lookup"><span data-stu-id="8b694-243">If the variable doesn't exist, the example creates its and retrieves its value.</span></span> <span data-ttu-id="8b694-244">该示例显示变量的值。</span><span class="sxs-lookup"><span data-stu-id="8b694-244">The example displays the value of the variable.</span></span> <span data-ttu-id="8b694-245">如果该示例创建了变量，它还将对 <xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29> 枚举的每个成员调用方法， <xref:System.EnvironmentVariableTarget> 以确定只能从当前进程环境块检索变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-245">If the example created the variable, it also calls the <xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29> method with each member of the <xref:System.EnvironmentVariableTarget> enumeration to establish that the variable can be retrieved only from the current process environment block.</span></span> <span data-ttu-id="8b694-246">最后，如果该示例创建了变量，则将其删除。</span><span class="sxs-lookup"><span data-stu-id="8b694-246">Finally, if the example created the variable, it deletes it.</span></span>  
  
 [!code-csharp[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/cs/getenvironmentvariableex1.cs)]
 [!code-vb[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/vb/getenvironmentvariableex1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b694-247"><paramref name="variable" /> 上声明的默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-247"><paramref name="variable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8b694-248">调用方没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="8b694-248">The caller does not have the required permission to perform this operation.</span></span></exception>
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
        <altmember cref="M:System.Environment.SetEnvironmentVariable(System.String,System.String)" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static string? GetEnvironmentVariable (string variable, EnvironmentVariableTarget target);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEnvironmentVariable(string variable, valuetype System.EnvironmentVariableTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariable (variable As String, target As EnvironmentVariableTarget) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEnvironmentVariable(System::String ^ variable, EnvironmentVariableTarget target);" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariable : string * EnvironmentVariableTarget -&gt; string" Usage="System.Environment.GetEnvironmentVariable (variable, target)" />
      <MemberSignature Language="C#" Value="public static string GetEnvironmentVariable (string variable, EnvironmentVariableTarget target);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="target" Type="System.EnvironmentVariableTarget" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="8b694-249">环境变量名。</span><span class="sxs-lookup"><span data-stu-id="8b694-249">The name of an environment variable.</span></span></param>
        <param name="target"><span data-ttu-id="8b694-250"><see cref="T:System.EnvironmentVariableTarget" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="8b694-250">One of the <see cref="T:System.EnvironmentVariableTarget" /> values.</span></span> <span data-ttu-id="8b694-251">在基于 Unix 的系统上运行的 .NET Core 仅支持 <see cref="F:System.EnvironmentVariableTarget.Process" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-251">Only <see cref="F:System.EnvironmentVariableTarget.Process" /> is supported on .NET Core running on Unix-bases systems.</span></span></param>
        <summary><span data-ttu-id="8b694-252">从当前进程或者从当前用户或本地计算机的 Windows 操作系统注册表项检索环境变量的值。</span><span class="sxs-lookup"><span data-stu-id="8b694-252">Retrieves the value of an environment variable from the current process or from the Windows operating system registry key for the current user or local machine.</span></span></summary>
        <returns><span data-ttu-id="8b694-253"><paramref name="variable" /> 和 <paramref name="target" /> 参数指定的环境变量的值；或者如果找不到环境变量，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-253">The value of the environment variable specified by the <paramref name="variable" /> and <paramref name="target" /> parameters, or <see langword="null" /> if the environment variable is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks 

<span data-ttu-id="8b694-254">若要检索所有环境变量及其值，请调用 <xref:System.Environment.GetEnvironmentVariables%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b694-254">To retrieve all environment variables along with their values, call the <xref:System.Environment.GetEnvironmentVariables%2A> method.</span></span>  
  
<span data-ttu-id="8b694-255">环境变量名称在 Linux 和 macOS 上区分大小写，但在 Windows 上不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="8b694-255">Environment variable names are case-sensitive on Linux and macOS but are not case-sensitive on Windows.</span></span> 

### <a name="on-windows-systems"></a><span data-ttu-id="8b694-256">在 Windows 系统上</span><span class="sxs-lookup"><span data-stu-id="8b694-256">On Windows systems</span></span>

<span data-ttu-id="8b694-257">在 Windows 上， `target` 参数指定是从当前进程还是从当前用户或本地计算机的 Windows 操作系统注册表项检索环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-257">On Windows, the `target` parameter specifies whether the environment variable is retrieved from the current process or from the Windows operating system registry key for the current user or local machine.</span></span> <span data-ttu-id="8b694-258">所有基于用户和每台计算机的环境变量都将自动复制到当前进程的环境块中，这与创建 .NET 进程的父进程可用的任何其他环境变量一样。</span><span class="sxs-lookup"><span data-stu-id="8b694-258">All per-user and per-machine environment variables are automatically copied into the environment block of the current process, as are any other environment variables that are available to the parent process that created the .NET process.</span></span> <span data-ttu-id="8b694-259">但是，通过在 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 进程的持续时间内调用方法或方法（其 `target` 值 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 仅为持久性），只会将环境变量添加到当前进程的环境块。</span><span class="sxs-lookup"><span data-stu-id="8b694-259">However, environment variables added only to the environment block of the current process by calling either the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> persist only for the duration of the process.</span></span>  
  
### <a name="on-macos-and-linux-systems"></a><span data-ttu-id="8b694-260">在 macOS 和 Linux 系统上</span><span class="sxs-lookup"><span data-stu-id="8b694-260">On macOS and Linux systems</span></span>

<span data-ttu-id="8b694-261">在 macOS 和 Linux 上， `GetEnvironmentVariable(String, EnvironmentVariableTarget)` 方法只支持 `target` 值 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-261">On macOS and Linux, the `GetEnvironmentVariable(String, EnvironmentVariableTarget)` method supports a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> only.</span></span> <span data-ttu-id="8b694-262">`target`不支持值为或的调用 <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> ，返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-262">Calls with a `target` value of <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> or <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> are not supported and return `null`.</span></span> 

<span data-ttu-id="8b694-263">每进程环境变量为：</span><span class="sxs-lookup"><span data-stu-id="8b694-263">Per-process environment variables are:</span></span>

- <span data-ttu-id="8b694-264">继承自父进程的那些对象，通常是用于调用 `dotnet.exe` 或启动 .net 应用程序的 shell。</span><span class="sxs-lookup"><span data-stu-id="8b694-264">Those inherited from the parent process, typically the shell used to invoke `dotnet.exe` or to launch the .NET application.</span></span>

- <span data-ttu-id="8b694-265">通过 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> 使用值调用方法或方法定义的 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> `target` <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-265">Those defined by calling either the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8b694-266">这些环境变量仅在 `dotnet` 进程或 .net 应用程序终止之前保持。</span><span class="sxs-lookup"><span data-stu-id="8b694-266">These environment variables persist only until the `dotnet` process or the .NET application terminates.</span></span>   
  
## Examples

<span data-ttu-id="8b694-267">下面的示例为 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 、和目标创建环境变量 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> <xref:System.EnvironmentVariableTarget.Machine> ，检查操作系统注册表是否包含用户和计算机环境变量，然后删除环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-267">The following example creates environment variables for the <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>, <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>, and <xref:System.EnvironmentVariableTarget.Machine> targets, checks whether the operating system registry contains the user and machine environment variables, then deletes the environment variables.</span></span> <span data-ttu-id="8b694-268">由于基于 Unix 的系统上的 .NET 不支持每用户和每台计算机的环境变量，因此只有 <xref:System.Environment.SetEnvironmentVariable(System.String,System.String)> 和 <xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)> 值才能 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 成功地将环境变量存储到进程环境块。</span><span class="sxs-lookup"><span data-stu-id="8b694-268">Because .NET on Unix-based systems does not support per-user and per-machine environment variables, only <xref:System.Environment.SetEnvironmentVariable(System.String,System.String)> and <xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)> with a value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> successfully store an environment variable to the process environment block.</span></span>

[!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs)]
[!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b694-269"><paramref name="variable" /> 上声明的默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-269"><paramref name="variable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b694-270"><paramref name="target" /> 不是有效的 <see cref="T:System.EnvironmentVariableTarget" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8b694-270"><paramref name="target" /> is not a valid <see cref="T:System.EnvironmentVariableTarget" /> value.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8b694-271">调用方没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="8b694-271">The caller does not have the required permission to perform this operation.</span></span></exception>
        <altmember cref="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)" />
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnvironmentVariables">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b694-272">检索所有环境变量名及其值。</span><span class="sxs-lookup"><span data-stu-id="8b694-272">Retrieves all environment variable names and their values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnvironmentVariables">
      <MemberSignature Language="C#" Value="public static System.Collections.IDictionary GetEnvironmentVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IDictionary GetEnvironmentVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariables () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IDictionary ^ GetEnvironmentVariables();" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariables : unit -&gt; System.Collections.IDictionary" Usage="System.Environment.GetEnvironmentVariables " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b694-273">从当前进程检索所有环境变量名及其值。</span><span class="sxs-lookup"><span data-stu-id="8b694-273">Retrieves all environment variable names and their values from the current process.</span></span></summary>
        <returns><span data-ttu-id="8b694-274">包含所有环境变量名及其值的字典；如果找不到任何环境变量，则返回空字典。</span><span class="sxs-lookup"><span data-stu-id="8b694-274">A dictionary that contains all environment variable names and their values; otherwise, an empty dictionary if no environment variables are found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-275">环境变量的名称和值作为键值对存储在返回的中 <xref:System.Collections.IDictionary> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-275">The names and values for the environment variables are stored as key-value pairs in the returned <xref:System.Collections.IDictionary>.</span></span>  
  
### <a name="on-windows-systems"></a><span data-ttu-id="8b694-276">在 Windows 系统上</span><span class="sxs-lookup"><span data-stu-id="8b694-276">On Windows systems</span></span>

<span data-ttu-id="8b694-277">在 Windows 系统上，此 `GetEnvironmentVariables` 方法返回以下环境变量：</span><span class="sxs-lookup"><span data-stu-id="8b694-277">On Windows systems, the `GetEnvironmentVariables` method returns the following environment variables:</span></span>
  
- <span data-ttu-id="8b694-278">创建进程时定义的每个计算机环境变量及其值。</span><span class="sxs-lookup"><span data-stu-id="8b694-278">All per-machine environment variables that are defined at the time the process is created, along with their values.</span></span>  
  
- <span data-ttu-id="8b694-279">创建进程时定义的所有每用户环境变量及其值。</span><span class="sxs-lookup"><span data-stu-id="8b694-279">All per-user environment variables that are defined at the time the process is created, along with their values.</span></span>  

- <span data-ttu-id="8b694-280">从父进程继承的任何变量，从该进程中启动 .NET 应用程序，或在进程运行时将其添加到进程块。</span><span class="sxs-lookup"><span data-stu-id="8b694-280">Any variables inherited from the parent process from which the .NET application was launched or added to the process block while the process is running.</span></span> <span data-ttu-id="8b694-281">通过调用 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> 方法或 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> `target` 值为的方法，在进程运行时添加环境变量 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-281">Environment variables are added while the process is running by calling either the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span>  

### <a name="on-macos-and-linux-systems"></a><span data-ttu-id="8b694-282">在 macOS 和 Linux 系统上</span><span class="sxs-lookup"><span data-stu-id="8b694-282">On macOS and Linux systems</span></span>

<span data-ttu-id="8b694-283">在 MacOS 和 Linux 上， `GetEnvironmentVariables` 方法会检索从启动进程的父进程中继承的 `dotnet` 或在进程本身的作用域内定义的所有环境变量的名称和值 `dotnet` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-283">On MacOS and Linux, the `GetEnvironmentVariables` method retrieves the name and value of all environment variables that are inherited from the parent process that launched the `dotnet` process or that are defined within the scope of the `dotnet` process itself.</span></span> <span data-ttu-id="8b694-284">`dotnet`进程结束后，后面的后一种环境变量将停止存在。</span><span class="sxs-lookup"><span data-stu-id="8b694-284">Once the `dotnet` process ends, these latter environment variables cease to exist.</span></span> 

<span data-ttu-id="8b694-285">在基于 Unix 的系统上运行的 .NET Core 不支持每计算机或每用户环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-285">.NET Core running on Unix-based systems does not support per-machine or per-user environment variables.</span></span>   
  
## Examples  
 <span data-ttu-id="8b694-286">下面的示例演示 <xref:System.Environment.GetEnvironmentVariables%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b694-286">The following example demonstrates the <xref:System.Environment.GetEnvironmentVariables%2A> method.</span></span>  
  
 [!code-cpp[Environment.GetEnvironmentVariables#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetEnvironmentVariables/CPP/getenvironmentvariables.cpp#1)]
 [!code-csharp[Environment.GetEnvironmentVariables#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetEnvironmentVariables/CS/getenvironmentvariables.cs#1)]
 [!code-vb[Environment.GetEnvironmentVariables#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetEnvironmentVariables/VB/getenvironmentvariables.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8b694-287">调用方没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="8b694-287">The caller does not have the required permission to perform this operation.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8b694-288">缓冲区内存不足。</span><span class="sxs-lookup"><span data-stu-id="8b694-288">The buffer is out of memory.</span></span></exception>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentVariables">
      <MemberSignature Language="C#" Value="public static System.Collections.IDictionary GetEnvironmentVariables (EnvironmentVariableTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IDictionary GetEnvironmentVariables(valuetype System.EnvironmentVariableTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariables (target As EnvironmentVariableTarget) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IDictionary ^ GetEnvironmentVariables(EnvironmentVariableTarget target);" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariables : EnvironmentVariableTarget -&gt; System.Collections.IDictionary" Usage="System.Environment.GetEnvironmentVariables target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.EnvironmentVariableTarget" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8b694-289"><see cref="T:System.EnvironmentVariableTarget" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="8b694-289">One of the <see cref="T:System.EnvironmentVariableTarget" /> values.</span></span> <span data-ttu-id="8b694-290">在基于 Unix 的系统上运行的 .NET Core 仅支持 <see cref="F:System.EnvironmentVariableTarget.Process" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-290">Only <see cref="F:System.EnvironmentVariableTarget.Process" /> is supported on .NET Core running on Unix-based systems.</span></span></param>
        <summary><span data-ttu-id="8b694-291">从当前进程或者从当前用户或本地计算机的 Windows 操作系统注册表项检索所有环境变量名及其值。</span><span class="sxs-lookup"><span data-stu-id="8b694-291">Retrieves all environment variable names and their values from the current process, or from the Windows operating system registry key for the current user or local machine.</span></span></summary>
        <returns><span data-ttu-id="8b694-292">包含 <paramref name="target" /> 参数所指定的源中所有环境变量名及其值的字典；否则，如果找不到任何环境变量，则返回空字典。</span><span class="sxs-lookup"><span data-stu-id="8b694-292">A dictionary that contains all environment variable names and their values from the source specified by the <paramref name="target" /> parameter; otherwise, an empty dictionary if no environment variables are found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="8b694-293">环境变量的名称和值作为键/值对存储在返回的 <xref:System.Collections.IDictionary> 对象中。</span><span class="sxs-lookup"><span data-stu-id="8b694-293">The names and values of the environment variables are stored as key/value pairs in the returned <xref:System.Collections.IDictionary> object.</span></span>  

### <a name="on-windows-systems"></a><span data-ttu-id="8b694-294">在 Windows 系统上</span><span class="sxs-lookup"><span data-stu-id="8b694-294">On Windows systems</span></span>

<span data-ttu-id="8b694-295">在 Windows 系统上， `target` 参数指定源是否为当前进程、当前用户的注册表项或本地计算机的注册表项。</span><span class="sxs-lookup"><span data-stu-id="8b694-295">On Windows systems, the `target` parameter specifies whether the source is the current process, the registry key for the current user, or the registry key for the local machine.</span></span>  

### <a name="on-macos-and-linux-systems"></a><span data-ttu-id="8b694-296">在 macOS 和 Linux 系统上</span><span class="sxs-lookup"><span data-stu-id="8b694-296">On macOS and Linux systems</span></span>

<span data-ttu-id="8b694-297">在 macOS 和 Linux 上，只 `target` 支持值 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-297">On macOS and Linux, only a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> is supported.</span></span> <span data-ttu-id="8b694-298">每个进程的环境变量都继承自父进程 (通常是用来启动进程的 shell) ， `dotnet` 还是在进程本身的作用域内定义的 `dotnet` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-298">Per-process environment variables are inherited from the parent process (typically the shell) used to launch the `dotnet` process or are defined within the scope of the `dotnet` process itself.</span></span> <span data-ttu-id="8b694-299">Dotnet 进程结束后，后面的后一种环境变量将停止存在。</span><span class="sxs-lookup"><span data-stu-id="8b694-299">Once the dotnet process ends, these latter environment variables cease to exist.</span></span>  

<span data-ttu-id="8b694-300">不支持每计算机和每用户环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-300">Per-machine and per-user environment variables are not supported.</span></span> <span data-ttu-id="8b694-301">`target`值 <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> 或 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> 返回空数组。</span><span class="sxs-lookup"><span data-stu-id="8b694-301">A `target` value of <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> or <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> returns an empty array.</span></span>
  
## Examples

<span data-ttu-id="8b694-302">下面的示例为 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 、和目标创建环境变量 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> <xref:System.EnvironmentVariableTarget.Machine> ，检查操作系统注册表是否包含用户和计算机环境变量，然后删除环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-302">The following example creates environment variables for the <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>, <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>, and <xref:System.EnvironmentVariableTarget.Machine> targets, checks whether the operating system registry contains the user and machine environment variables, then deletes the environment variables.</span></span> <span data-ttu-id="8b694-303">由于基于 Unix 的系统上的 .NET 不支持每用户和每台计算机的环境变量，因此只有 <xref:System.Environment.SetEnvironmentVariable(System.String,System.String)> 和 <xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)> 值才能 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 成功地将环境变量存储到进程环境块。</span><span class="sxs-lookup"><span data-stu-id="8b694-303">Because .NET on Unix-based systems does not support per-user and per-machine environment variables, only <xref:System.Environment.SetEnvironmentVariable(System.String,System.String)> and <xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)> with a value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> successfully store an environment variable to the process environment block.</span></span>

[!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs)]
[!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8b694-304">调用方不具有针对 <paramref name="target" /> 的指定值执行此操作的所需权限。</span><span class="sxs-lookup"><span data-stu-id="8b694-304">The caller does not have the required permission to perform this operation for the specified value of <paramref name="target" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b694-305"><paramref name="target" /> 包含非法值。</span><span class="sxs-lookup"><span data-stu-id="8b694-305"><paramref name="target" /> contains an illegal value.</span></span></exception>
        <altmember cref="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFolderPath">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b694-306">获取由指定枚举标识的系统特殊文件夹的路径。</span><span class="sxs-lookup"><span data-stu-id="8b694-306">Gets the path to the system special folder that is identified by the specified enumeration.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFolderPath">
      <MemberSignature Language="C#" Value="public static string GetFolderPath (Environment.SpecialFolder folder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFolderPath(valuetype System.Environment/SpecialFolder folder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFolderPath (folder As Environment.SpecialFolder) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFolderPath(Environment::SpecialFolder folder);" />
      <MemberSignature Language="F#" Value="static member GetFolderPath : Environment.SpecialFolder -&gt; string" Usage="System.Environment.GetFolderPath folder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="System.Environment+SpecialFolder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="folder"><span data-ttu-id="8b694-307">标识系统特殊文件夹的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="8b694-307">One of enumeration values that identifies a system special folder.</span></span></param>
        <summary><span data-ttu-id="8b694-308">获取由指定枚举标识的系统特殊文件夹的路径。</span><span class="sxs-lookup"><span data-stu-id="8b694-308">Gets the path to the system special folder that is identified by the specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="8b694-309">如果指定的系统特殊文件夹实际存在于您的计算机上，则为到该文件夹的路径；否则为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="8b694-309">The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").</span></span>  
  
 <span data-ttu-id="8b694-310">如果系统未创建文件夹、已删除现有文件夹，或者文件夹是不对应物理路径的虚拟目录（例如"我的电脑"），则该文件夹不会实际存在。</span><span class="sxs-lookup"><span data-stu-id="8b694-310">A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-311">此方法检索系统特殊文件夹的路径，例如，可用于访问常见信息的程序文件、程序、系统或启动。</span><span class="sxs-lookup"><span data-stu-id="8b694-311">This method retrieves the path to a system special folder, such as Program Files, Programs, System, or Startup, which can be used to access common information.</span></span> <span data-ttu-id="8b694-312">默认情况下，特殊文件夹由系统设置，或在安装 Windows 版本时由用户显式设置。</span><span class="sxs-lookup"><span data-stu-id="8b694-312">Special folders are set by default by the system, or explicitly by the user, when installing a version of Windows.</span></span>  
  
 <span data-ttu-id="8b694-313">`folder`参数指定要检索的特殊文件夹，并且必须是枚举中的值之一 <xref:System.Environment.SpecialFolder> ; 其他任何值都会引发异常。</span><span class="sxs-lookup"><span data-stu-id="8b694-313">The `folder` parameter designates the special folder to retrieve and must be one of the values in the <xref:System.Environment.SpecialFolder> enumeration; any other value throws an exception.</span></span>  
  
 <span data-ttu-id="8b694-314">有关特殊文件夹的详细信息，请参阅 [CSIDL](https://go.microsoft.com/fwlink/?LinkId=116664) 值主题。</span><span class="sxs-lookup"><span data-stu-id="8b694-314">For more information about special folders, see the [CSIDL](https://go.microsoft.com/fwlink/?LinkId=116664) values topic.</span></span>
  
## Examples  
 <span data-ttu-id="8b694-315">下面的示例演示如何使用 <xref:System.Environment.GetFolderPath%2A> 方法返回并显示与参数关联的路径 `folder` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-315">The following example demonstrates how to use the <xref:System.Environment.GetFolderPath%2A> method to return and display the path associated with the `folder` parameter.</span></span>  
  
 [!code-cpp[Environment.GetFolderPath#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetFolderPath/CPP/getfolderpath.cpp#1)]
 [!code-csharp[Environment.GetFolderPath#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetFolderPath/CS/getfolderpath.cs#1)]
 [!code-vb[Environment.GetFolderPath#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetFolderPath/VB/getfolderpath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b694-316"><paramref name="folder" /> 不是 <see cref="T:System.Environment.SpecialFolder" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="8b694-316"><paramref name="folder" /> is not a member of <see cref="T:System.Environment.SpecialFolder" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="8b694-317">不支持当前平台。</span><span class="sxs-lookup"><span data-stu-id="8b694-317">The current platform is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFolderPath">
      <MemberSignature Language="C#" Value="public static string GetFolderPath (Environment.SpecialFolder folder, Environment.SpecialFolderOption option);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFolderPath(valuetype System.Environment/SpecialFolder folder, valuetype System.Environment/SpecialFolderOption option) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFolderPath (folder As Environment.SpecialFolder, option As Environment.SpecialFolderOption) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFolderPath(Environment::SpecialFolder folder, Environment::SpecialFolderOption option);" />
      <MemberSignature Language="F#" Value="static member GetFolderPath : Environment.SpecialFolder * Environment.SpecialFolderOption -&gt; string" Usage="System.Environment.GetFolderPath (folder, option)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="System.Environment+SpecialFolder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="option" Type="System.Environment+SpecialFolderOption" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="folder"><span data-ttu-id="8b694-318">标识系统特殊文件夹的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="8b694-318">One of the enumeration values that identifies a system special folder.</span></span></param>
        <param name="option"><span data-ttu-id="8b694-319">指定用于访问特殊文件夹的选项的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="8b694-319">One of the enumeration values that specifies options to use for accessing a special folder.</span></span></param>
        <summary><span data-ttu-id="8b694-320">获取由指定枚举标识的系统特殊文件夹的路径，并使用用于访问特殊文件夹的指定选项。</span><span class="sxs-lookup"><span data-stu-id="8b694-320">Gets the path to the system special folder that is identified by the specified enumeration, and uses a specified option for accessing special folders.</span></span></summary>
        <returns><span data-ttu-id="8b694-321">如果指定的系统特殊文件夹实际存在于您的计算机上，则为到该文件夹的路径；否则为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="8b694-321">The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").</span></span>  
  
 <span data-ttu-id="8b694-322">如果系统未创建文件夹、已删除现有文件夹，或者文件夹是不对应物理路径的虚拟目录（例如"我的电脑"），则该文件夹不会实际存在。</span><span class="sxs-lookup"><span data-stu-id="8b694-322">A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-323">此方法检索系统特殊文件夹的路径，例如，可用于访问常见信息的程序文件、程序、系统或启动。</span><span class="sxs-lookup"><span data-stu-id="8b694-323">This method retrieves the path to a system special folder, such as Program Files, Programs, System, or Startup, which can be used to access common information.</span></span> <span data-ttu-id="8b694-324">默认情况下，特殊文件夹由系统设置，或在安装 Windows 版本时由用户显式设置。</span><span class="sxs-lookup"><span data-stu-id="8b694-324">Special folders are set by default by the system, or explicitly by the user, when installing a version of Windows.</span></span>  
  
 <span data-ttu-id="8b694-325">`folder`参数指定要检索的特殊文件夹，并且必须是枚举中的值之一 <xref:System.Environment.SpecialFolder> ; 其他任何值都会引发异常。</span><span class="sxs-lookup"><span data-stu-id="8b694-325">The `folder` parameter designates the special folder to retrieve and must be one of the values in the <xref:System.Environment.SpecialFolder> enumeration; any other value throws an exception.</span></span>  
  
 <span data-ttu-id="8b694-326">有关特殊文件夹的详细信息，请参阅 [CSIDL](https://go.microsoft.com/fwlink/?LinkId=116664) 值主题。</span><span class="sxs-lookup"><span data-stu-id="8b694-326">For more information about special folders, see the [CSIDL](https://go.microsoft.com/fwlink/?LinkId=116664) values topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b694-327"><paramref name="folder" /> 不是 <see cref="T:System.Environment.SpecialFolder" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="8b694-327"><paramref name="folder" /> is not a member of <see cref="T:System.Environment.SpecialFolder" />.</span></span>
<span data-ttu-id="8b694-328">或</span><span class="sxs-lookup"><span data-stu-id="8b694-328">-or-</span></span>

<span data-ttu-id="8b694-329"><paramref name="options" /> 不是 <see cref="T:System.Environment.SpecialFolderOption" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="8b694-329"><paramref name="options" /> is not a member of <see cref="T:System.Environment.SpecialFolderOption" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="8b694-330">不支持当前平台。</span><span class="sxs-lookup"><span data-stu-id="8b694-330">The current platform is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalDrives">
      <MemberSignature Language="C#" Value="public static string[] GetLogicalDrives ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetLogicalDrives() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetLogicalDrives" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLogicalDrives () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetLogicalDrives();" />
      <MemberSignature Language="F#" Value="static member GetLogicalDrives : unit -&gt; string[]" Usage="System.Environment.GetLogicalDrives " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b694-331">返回包含当前计算机中的逻辑驱动器名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="8b694-331">Returns an array of string containing the names of the logical drives on the current computer.</span></span></summary>
        <returns><span data-ttu-id="8b694-332">字符串数组，其中的每个元素都包含逻辑驱动器名称。</span><span class="sxs-lookup"><span data-stu-id="8b694-332">An array of strings where each element contains the name of a logical drive.</span></span> <span data-ttu-id="8b694-333">例如，如果计算机的硬盘是第一个逻辑驱动器，则返回的第一个元素是“C:\\”。</span><span class="sxs-lookup"><span data-stu-id="8b694-333">For example, if the computer's hard drive is the first logical drive, the first element returned is "C:\\".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b694-334">下面的示例演示如何使用方法显示当前计算机的逻辑驱动器 <xref:System.Environment.GetLogicalDrives%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-334">The following example shows how to display the logical drives of the current computer using the <xref:System.Environment.GetLogicalDrives%2A> method.</span></span>  
  
 [!code-cpp[Environment.GetLogicalDrives#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetLogicalDrives/CPP/getlogicaldrives.cpp#1)]
 [!code-csharp[Environment.GetLogicalDrives#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetLogicalDrives/CS/getlogicaldrives.cs#1)]
 [!code-vb[Environment.GetLogicalDrives#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetLogicalDrives/VB/getlogicaldrives.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8b694-335">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="8b694-335">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8b694-336">调用方没有所需的权限。</span><span class="sxs-lookup"><span data-stu-id="8b694-336">The caller does not have the required permissions.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownStarted">
      <MemberSignature Language="C#" Value="public static bool HasShutdownStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool HasShutdownStarted" />
      <MemberSignature Language="DocId" Value="P:System.Environment.HasShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HasShutdownStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool HasShutdownStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownStarted : bool" Usage="System.Environment.HasShutdownStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-337">获取一个值，该值指示当前的应用程序域是否正在卸载或者公共语言运行时 (CLR) 是否正在关闭。</span><span class="sxs-lookup"><span data-stu-id="8b694-337">Gets a value that indicates whether the current application domain is being unloaded or the common language runtime (CLR) is shutting down.</span></span></summary>
        <value><span data-ttu-id="8b694-338"><see langword="true" /> 如果当前的应用程序域正在卸载或者 CLR 正在关闭，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-338"><see langword="true" /> if the current application domain is being unloaded or the CLR is shutting down; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-339">**仅 .NET Framework**：当 CLR 卸载应用程序域时，它将对在该应用程序域中具有终结器方法的所有对象运行终结器。</span><span class="sxs-lookup"><span data-stu-id="8b694-339">**.NET Framework only**: When the CLR unloads an application domain, it runs the finalizers on all objects that have a finalizer method in that application domain.</span></span> <span data-ttu-id="8b694-340">CLR 关闭时，它将在具有终结器方法的所有对象上启动终结器线程。</span><span class="sxs-lookup"><span data-stu-id="8b694-340">When the CLR shuts down, it starts the finalizer thread on all objects that have a finalizer method.</span></span> <span data-ttu-id="8b694-341"><xref:System.Environment.HasShutdownStarted%2A>属性仅在 `true` 终结器线程启动后返回。</span><span class="sxs-lookup"><span data-stu-id="8b694-341">The <xref:System.Environment.HasShutdownStarted%2A> property returns `true` only after the finalizer thread has been started.</span></span> <span data-ttu-id="8b694-342">当属性返回时 `true` ，可以通过调用方法来确定应用程序域是否正在卸载或者 CLR 本身是否正在关闭 <xref:System.AppDomain.IsFinalizingForUnload%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-342">When the property returns `true`, you can determine whether an application domain is being unloaded or the CLR itself is shutting down by calling the <xref:System.AppDomain.IsFinalizingForUnload%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8b694-343">`true`如果因为应用程序域正在卸载或者 CLR 正在关闭而调用终结器，则此方法返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-343">This method returns `true` if finalizers are called because the application domain is unloading or `false` if the CLR is shutting down.</span></span>  
  
 <span data-ttu-id="8b694-344"><xref:System.Environment.HasShutdownStarted%2A> `false` 如果终结器线程尚未启动，则属性将返回。</span><span class="sxs-lookup"><span data-stu-id="8b694-344">The <xref:System.Environment.HasShutdownStarted%2A> property returns `false` if the finalizer thread has not been started.</span></span>  
  
 <span data-ttu-id="8b694-345">通过使用此属性，您可以确定是否在终止代码中访问静态变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-345">By using this property, you can determine whether to access static variables in your finalization code.</span></span> <span data-ttu-id="8b694-346">如果应用程序域或 CLR 正在关闭，则无法可靠地访问包含终止方法并且由静态字段引用的任何对象。</span><span class="sxs-lookup"><span data-stu-id="8b694-346">If either an application domain or the CLR is shutting down, you cannot reliably access any object that has a finalization method and that is referenced by a static field.</span></span> <span data-ttu-id="8b694-347">这是因为这些对象可能已经完成了。</span><span class="sxs-lookup"><span data-stu-id="8b694-347">This is because these objects may have already been finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.AppDomain.IsFinalizingForUnload" />
      </Docs>
    </Member>
    <Member MemberName="Is64BitOperatingSystem">
      <MemberSignature Language="C#" Value="public static bool Is64BitOperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Is64BitOperatingSystem" />
      <MemberSignature Language="DocId" Value="P:System.Environment.Is64BitOperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Is64BitOperatingSystem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Is64BitOperatingSystem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Is64BitOperatingSystem : bool" Usage="System.Environment.Is64BitOperatingSystem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-348">获取一个值，该值指示当前操作系统是否为 64 位操作系统。</span><span class="sxs-lookup"><span data-stu-id="8b694-348">Gets a value that indicates whether the current operating system is a 64-bit operating system.</span></span></summary>
        <value><span data-ttu-id="8b694-349">如果操作系统为 64 位操作系统，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-349"><see langword="true" /> if the operating system is 64-bit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Is64BitProcess">
      <MemberSignature Language="C#" Value="public static bool Is64BitProcess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Is64BitProcess" />
      <MemberSignature Language="DocId" Value="P:System.Environment.Is64BitProcess" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Is64BitProcess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Is64BitProcess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Is64BitProcess : bool" Usage="System.Environment.Is64BitProcess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-350">获取一个值，该值指示当前进程是否为 64 位进程。</span><span class="sxs-lookup"><span data-stu-id="8b694-350">Gets a value that indicates whether the current process is a 64-bit process.</span></span></summary>
        <value><span data-ttu-id="8b694-351">如果进程为 64 位进程，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-351"><see langword="true" /> if the process is 64-bit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public static string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Environment.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Environment.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-352">获取此本地计算机的 NetBIOS 名称。</span><span class="sxs-lookup"><span data-stu-id="8b694-352">Gets the NetBIOS name of this local computer.</span></span></summary>
        <value><span data-ttu-id="8b694-353">当前计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="8b694-353">The name of this computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-354">在系统启动时，将在从注册表中读取名称时建立此计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="8b694-354">The name of this computer is established at system startup when the name is read from the registry.</span></span> <span data-ttu-id="8b694-355">如果此计算机是群集中的节点，则返回该节点的名称。</span><span class="sxs-lookup"><span data-stu-id="8b694-355">If this computer is a node in a cluster, the name of the node is returned.</span></span>
  
## Examples  
 <span data-ttu-id="8b694-356">下面的示例显示运行代码示例的计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="8b694-356">The following example displays the name of the computer that runs the code example.</span></span> <span data-ttu-id="8b694-357">出于安全原因，示例输出中省略了计算机名称 (。 ) </span><span class="sxs-lookup"><span data-stu-id="8b694-357">(The machine name is omitted from the example output for security reasons.)</span></span>  
  
 [!code-cpp[environment.machinename#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.MachineName/CPP/machinename.cpp#1)]
 [!code-csharp[environment.machinename#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.MachineName/CS/machinename.cs#1)]
 [!code-vb[environment.machinename#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.MachineName/VB/machinename.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8b694-358">无法获取此计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="8b694-358">The name of this computer cannot be obtained.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public static string NewLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Environment.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ NewLine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string" Usage="System.Environment.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-359">获取为此环境定义的换行字符串。</span><span class="sxs-lookup"><span data-stu-id="8b694-359">Gets the newline string defined for this environment.</span></span></summary>
        <value><span data-ttu-id="8b694-360"><see langword="\r\n" /> 适用于非 Unix 平台或 <see langword="\n" /> unix 平台。</span><span class="sxs-lookup"><span data-stu-id="8b694-360"><see langword="\r\n" /> for non-Unix platforms, or <see langword="\n" /> for Unix platforms.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-361">的属性值 <xref:System.Environment.NewLine%2A> 是专门为当前平台和实现 .NET Framework 而自定义的常量。</span><span class="sxs-lookup"><span data-stu-id="8b694-361">The property value of <xref:System.Environment.NewLine%2A> is a constant customized specifically for the current platform and implementation of the .NET Framework.</span></span> <span data-ttu-id="8b694-362">有关属性值中转义符的详细信息，请参阅 [字符转义](/dotnet/standard/base-types/character-escapes-in-regular-expressions)。</span><span class="sxs-lookup"><span data-stu-id="8b694-362">For more information about the escape characters in the property value, see [Character Escapes](/dotnet/standard/base-types/character-escapes-in-regular-expressions).</span></span>  
  
 <span data-ttu-id="8b694-363">所提供的功能 <xref:System.Environment.NewLine%2A> 通常由字词换行符、换行符、换行符、回车符、CRLF 和行尾所指。</span><span class="sxs-lookup"><span data-stu-id="8b694-363">The functionality provided by <xref:System.Environment.NewLine%2A> is often what is meant by the terms newline, line feed, line break, carriage return, CRLF, and end of line.</span></span>  
  
 <span data-ttu-id="8b694-364"><xref:System.Environment.NewLine%2A> 可以与特定于语言的换行符（如 Microsoft c # 和 C/c + + 中的转义符和 "\n"）或 Microsoft Visual Basic 结合使用 `vbCrLf` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-364"><xref:System.Environment.NewLine%2A> can be used in conjunction with language-specific newline support such as the escape characters '\r' and '\n' in Microsoft C# and C/C++, or `vbCrLf` in Microsoft Visual Basic.</span></span>  
  
 <span data-ttu-id="8b694-365"><xref:System.Environment.NewLine%2A> 自动追加到由和方法处理的文本上 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> <xref:System.Text.StringBuilder.AppendLine%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-365"><xref:System.Environment.NewLine%2A> is automatically appended to text processed by the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> and <xref:System.Text.StringBuilder.AppendLine%2A?displayProperty=nameWithType> methods.</span></span>
  
## Examples  
 <span data-ttu-id="8b694-366">下面的示例显示了由换行符分隔的三行。</span><span class="sxs-lookup"><span data-stu-id="8b694-366">The following example displays three lines separated by newlines.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/Environment.NewLine/CPP/newline.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Environment.NewLine/CS/newline.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.NewLine/VB/newline.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public static OperatingSystem OSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.OperatingSystem OSVersion" />
      <MemberSignature Language="DocId" Value="P:System.Environment.OSVersion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OSVersion As OperatingSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property OperatingSystem ^ OSVersion { OperatingSystem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSVersion : OperatingSystem" Usage="System.Environment.OSVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.OperatingSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-367">获取当前平台标识符和版本号。</span><span class="sxs-lookup"><span data-stu-id="8b694-367">Gets the current platform identifier and version number.</span></span></summary>
        <value><span data-ttu-id="8b694-368">平台标识符和版本号。</span><span class="sxs-lookup"><span data-stu-id="8b694-368">The platform identifier and version number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="8b694-369">在 .NET 5.0 之前的 .NET 版本中，在 <xref:System.Environment.OSVersion?displayProperty=nameWithType> Windows 兼容模式下运行应用程序时，将返回可能不正确的操作系统版本。</span><span class="sxs-lookup"><span data-stu-id="8b694-369">In .NET versions prior to .NET 5.0, <xref:System.Environment.OSVersion?displayProperty=nameWithType> returns an OS version that may be incorrect when an application runs under Windows compatibility mode.</span></span> <span data-ttu-id="8b694-370">有关详细信息，请参阅 [GetVersionExA 函数备注](/windows/win32/api/sysinfoapi/nf-sysinfoapi-getversionexa#remarks)。</span><span class="sxs-lookup"><span data-stu-id="8b694-370">For more information, see [GetVersionExA function remarks](/windows/win32/api/sysinfoapi/nf-sysinfoapi-getversionexa#remarks).</span></span> <span data-ttu-id="8b694-371">在 .NET 5.0 和更高 <xref:System.Environment.OSVersion?displayProperty=nameWithType> 版本中，始终返回实际的操作系统版本。</span><span class="sxs-lookup"><span data-stu-id="8b694-371">In .NET 5.0 and later, <xref:System.Environment.OSVersion?displayProperty=nameWithType> always returns the actual OS version.</span></span> <span data-ttu-id="8b694-372">有关详细信息，请参阅 [环境。 OSVersion 返回正确的操作系统版本](/dotnet/core/compatibility/corefx#environmentosversion-returns-the-correct-operating-system-version)。</span><span class="sxs-lookup"><span data-stu-id="8b694-372">For more information, see [Environment.OSVersion returns the correct operating system version](/dotnet/core/compatibility/corefx#environmentosversion-returns-the-correct-operating-system-version).</span></span>

<span data-ttu-id="8b694-373">若要确定操作系统平台（如 Linux 或 Windows），可以使用 <xref:System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b694-373">To identify the operating system platform, for example, Linux or Windows, you can use the <xref:System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform%2A?displayProperty=nameWithType> method.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8b694-374">此属性不能获得系统版本。</span><span class="sxs-lookup"><span data-stu-id="8b694-374">This property was unable to obtain the system version.</span></span>  
  
<span data-ttu-id="8b694-375">或</span><span class="sxs-lookup"><span data-stu-id="8b694-375">-or-</span></span> 
<span data-ttu-id="8b694-376">获得的平台标识符不是 <see cref="T:System.PlatformID" /> 的成员</span><span class="sxs-lookup"><span data-stu-id="8b694-376">The obtained platform identifier is not a member of <see cref="T:System.PlatformID" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public static int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Environment.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Environment.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-377">获取当前进程的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="8b694-377">Gets the unique identifier for the current process.</span></span></summary>
        <value><span data-ttu-id="8b694-378">一个数字，表示当前进程的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="8b694-378">A number that represents the unique identifier for the current process.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessorCount">
      <MemberSignature Language="C#" Value="public static int ProcessorCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ProcessorCount" />
      <MemberSignature Language="DocId" Value="P:System.Environment.ProcessorCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ProcessorCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int ProcessorCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessorCount : int" Usage="System.Environment.ProcessorCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-379">获取当前计算机上的处理器数。</span><span class="sxs-lookup"><span data-stu-id="8b694-379">Gets the number of processors on the current machine.</span></span></summary>
        <value><span data-ttu-id="8b694-380">指定当前计算机上处理器个数的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b694-380">The 32-bit signed integer that specifies the number of processors on the current machine.</span></span> <span data-ttu-id="8b694-381">没有默认值。</span><span class="sxs-lookup"><span data-stu-id="8b694-381">There is no default.</span></span> <span data-ttu-id="8b694-382">如果当前计算机包含多个处理器组，则此属性返回可用的逻辑处理器数以供公共语言运行时 (CLR) 使用。</span><span class="sxs-lookup"><span data-stu-id="8b694-382">If the current machine contains multiple processor groups, this property returns the number of logical processors that are available for use by the common language runtime (CLR).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-383">有关处理器组和逻辑处理器的详细信息，请参阅 [处理器组](/windows/win32/procthread/processor-groups)。</span><span class="sxs-lookup"><span data-stu-id="8b694-383">For more information about processor groups and logical processors, see [Processor Groups](/windows/win32/procthread/processor-groups).</span></span>
  
## Examples  
 <span data-ttu-id="8b694-384">下面的示例演示了 <xref:System.Environment.ProcessorCount%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="8b694-384">The following example demonstrates the <xref:System.Environment.ProcessorCount%2A> property.</span></span>  
  
 [!code-cpp[environment.processorcount#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.processorcount/CPP/pc.cpp#1)]
 [!code-csharp[environment.processorcount#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.processorcount/CS/pc.cs#1)]
 [!code-vb[environment.processorcount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.processorcount/VB/pc.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetEnvironmentVariable">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b694-385">创建、修改或删除环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-385">Creates, modifies, or deletes an environment variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static void SetEnvironmentVariable (string variable, string value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEnvironmentVariable(string variable, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.SetEnvironmentVariable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetEnvironmentVariable (variable As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetEnvironmentVariable(System::String ^ variable, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member SetEnvironmentVariable : string * string -&gt; unit" Usage="System.Environment.SetEnvironmentVariable (variable, value)" />
      <MemberSignature Language="C#" Value="public static void SetEnvironmentVariable (string variable, string? value);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="8b694-386">环境变量名。</span><span class="sxs-lookup"><span data-stu-id="8b694-386">The name of an environment variable.</span></span></param>
        <param name="value"><span data-ttu-id="8b694-387">要分配给 <paramref name="variable" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="8b694-387">A value to assign to <paramref name="variable" />.</span></span></param>
        <summary><span data-ttu-id="8b694-388">创建、修改或删除当前进程中存储的环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-388">Creates, modifies, or deletes an environment variable stored in the current process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-389">调用此方法等效于 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 使用参数的值调用重载 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> `target` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-389">Calling this method is equivalent to calling the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> overload with a value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> for the `target` argument.</span></span>  
  
 <span data-ttu-id="8b694-390">如果 `value` 参数不为空 (请参阅本节稍后部分中的 "为空值的定义删除环境变量) " 和参数命名的环境变量不 `variable` 存在，创建环境变量并为其分配内容 `value` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-390">If the `value` argument is not empty (see the discussion of deleting an environment variable later in this section for the definition of an empty value) and the environment variable named by the `variable` parameter does not exist, the environment variable is created and assigned the contents of `value`.</span></span> <span data-ttu-id="8b694-391">如果它存在，则修改其值。</span><span class="sxs-lookup"><span data-stu-id="8b694-391">If it does exist, its value is modified.</span></span> <span data-ttu-id="8b694-392">由于环境变量是在当前进程的环境块中定义的，因此在进程结束后，它不会持久保存。</span><span class="sxs-lookup"><span data-stu-id="8b694-392">Because the environment variable is defined in the environment block of the current process only, it does not persist after the process has ended.</span></span>  
  
 <span data-ttu-id="8b694-393">如果 `variable` 包含非初始的十六进制零字符，则在零字符之前的字符被视为环境变量名称，而所有后续字符都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="8b694-393">If `variable` contains a non-initial hexadecimal zero character, the characters before the zero character are considered the environment variable name and all subsequent characters are ignored.</span></span>  
  
 <span data-ttu-id="8b694-394">如果 `value` 包含非初始的十六进制零字符，则零字符之前的字符将被分配给环境变量，并且所有后续字符都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="8b694-394">If `value` contains a non-initial hexadecimal zero character, the characters before the zero character are assigned to the environment variable and all subsequent characters are ignored.</span></span>  
  
 <span data-ttu-id="8b694-395">如果 `value` 为空且名为的环境变量 `variable` 存在，则将删除环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-395">If `value` is empty and the environment variable named by `variable` exists, the environment variable is deleted.</span></span> <span data-ttu-id="8b694-396">如果不 `variable` 存在，即使无法执行该操作，也不会发生错误。</span><span class="sxs-lookup"><span data-stu-id="8b694-396">If `variable` does not exist, no error occurs even though the operation cannot be performed.</span></span> <span data-ttu-id="8b694-397">`value` 在下列任一情况下，都被视为空：</span><span class="sxs-lookup"><span data-stu-id="8b694-397">`value` is considered empty under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="8b694-398">它是 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-398">It is `null`.</span></span>  
  
-   <span data-ttu-id="8b694-399">它是 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-399">It is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="8b694-400">它包含值为 U + 0000 的单个字符。</span><span class="sxs-lookup"><span data-stu-id="8b694-400">It consists of a single character whose value is U+0000.</span></span>  
  
## Examples

<span data-ttu-id="8b694-401">下面的示例尝试 `Test1` 从进程环境块中检索名为的环境变量的值。</span><span class="sxs-lookup"><span data-stu-id="8b694-401">The following example attempts to retrieve the value of an environment variable named `Test1` from the process environment block.</span></span> <span data-ttu-id="8b694-402">如果该变量不存在，则此示例将创建变量并检索其值。</span><span class="sxs-lookup"><span data-stu-id="8b694-402">If the variable doesn't exist, the example creates the variable and retrieves its value.</span></span> <span data-ttu-id="8b694-403">该示例显示变量的值。</span><span class="sxs-lookup"><span data-stu-id="8b694-403">The example displays the value of the variable.</span></span> <span data-ttu-id="8b694-404">对于在 Windows 系统上运行的 .NET 实现，它还将调用 <xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29> 方法和枚举的每个成员， <xref:System.EnvironmentVariableTarget> 以确定只能从当前进程环境块检索变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-404">For .NET implementations running on Windows systems, it also calls the <xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29> method with each member of the <xref:System.EnvironmentVariableTarget> enumeration to establish that the variable can be retrieved only from the current process environment block.</span></span> <span data-ttu-id="8b694-405">基于 Unix 的系统上的 ( .NET 实现仅支持进程环境块中的变量。 ) 最后，如果该示例创建了该变量，则将删除该变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-405">(.NET implementations on Unix-based systems only support variables in the process environment block.) Finally, if the example created the variable, it deletes it.</span></span>  
  
 [!code-csharp[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/cs/getenvironmentvariableex1.cs)]
 [!code-vb[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/vb/getenvironmentvariableex1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b694-406"><paramref name="variable" /> 上声明的默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-406"><paramref name="variable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b694-407"><paramref name="variable" /> 包含一个长度为零的字符串、一个初始十六进制零字符 (0x00) 或一个等号 ("=")。</span><span class="sxs-lookup"><span data-stu-id="8b694-407"><paramref name="variable" /> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("=").</span></span>  
  
<span data-ttu-id="8b694-408">或</span><span class="sxs-lookup"><span data-stu-id="8b694-408">-or-</span></span> 
<span data-ttu-id="8b694-409"><paramref name="variable" /> 或 <paramref name="value" /> 的长度大于或等于 32,767 个字符。</span><span class="sxs-lookup"><span data-stu-id="8b694-409">The length of <paramref name="variable" /> or <paramref name="value" /> is greater than or equal to 32,767 characters.</span></span>  
  
<span data-ttu-id="8b694-410">或</span><span class="sxs-lookup"><span data-stu-id="8b694-410">-or-</span></span> 
<span data-ttu-id="8b694-411">执行此操作期间出错。</span><span class="sxs-lookup"><span data-stu-id="8b694-411">An error occurred during the execution of this operation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8b694-412">调用方没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="8b694-412">The caller does not have the required permission to perform this operation.</span></span></exception>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String)" />
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
      </Docs>
    </Member>
    <Member MemberName="SetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static void SetEnvironmentVariable (string variable, string? value, EnvironmentVariableTarget target);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEnvironmentVariable(string variable, string value, valuetype System.EnvironmentVariableTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetEnvironmentVariable (variable As String, value As String, target As EnvironmentVariableTarget)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetEnvironmentVariable(System::String ^ variable, System::String ^ value, EnvironmentVariableTarget target);" />
      <MemberSignature Language="F#" Value="static member SetEnvironmentVariable : string * string * EnvironmentVariableTarget -&gt; unit" Usage="System.Environment.SetEnvironmentVariable (variable, value, target)" />
      <MemberSignature Language="C#" Value="public static void SetEnvironmentVariable (string variable, string value, EnvironmentVariableTarget target);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="target" Type="System.EnvironmentVariableTarget" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="8b694-413">环境变量名。</span><span class="sxs-lookup"><span data-stu-id="8b694-413">The name of an environment variable.</span></span></param>
        <param name="value"><span data-ttu-id="8b694-414">要分配给 <paramref name="variable" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="8b694-414">A value to assign to <paramref name="variable" />.</span></span></param>
        <param name="target"><span data-ttu-id="8b694-415">一个用于指定环境变量的位置的枚举值。</span><span class="sxs-lookup"><span data-stu-id="8b694-415">One of the enumeration values that specifies the location of the environment variable.</span></span></param>
        <summary><span data-ttu-id="8b694-416">创建、修改或删除当前进程中或者为当前用户或本地计算机保留的 Windows 操作系统注册表项中存储的环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-416">Creates, modifies, or deletes an environment variable stored in the current process or in the Windows operating system registry key reserved for the current user or local machine.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="8b694-417">使用 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 方法，您可以定义一个可用于当前进程 () 值的环境变量 <xref:System.EnvironmentVariableTarget.Process> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-417">The <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method lets you define an environment variable that is available to the current process (the <xref:System.EnvironmentVariableTarget.Process> value).</span></span> <span data-ttu-id="8b694-418">当前进程环境块独有的环境变量仅在进程结束之前持久存在。</span><span class="sxs-lookup"><span data-stu-id="8b694-418">Environment variables that are unique to the current process environment block persist only until the process ends.</span></span>

<span data-ttu-id="8b694-419">此外，在 Windows 系统上，该 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 方法允许您定义一个环境变量，该变量可用于在计算机上运行的所有进程 (<xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>) 的值和用户运行的所有进程 (<xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> 值) 。</span><span class="sxs-lookup"><span data-stu-id="8b694-419">In addition, on Windows systems only, the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method lets you define an environment variable that is available to all processes that run on a machine (the <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> value) and to all processes run by a user (the <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> value).</span></span> <span data-ttu-id="8b694-420">每计算机和每用户环境变量将复制到当前进程的环境块中。</span><span class="sxs-lookup"><span data-stu-id="8b694-420">Per-machine and per-user environment variables are copied into the environment block of the current process.</span></span>  
 
<span data-ttu-id="8b694-421">在 macOS 和 Linux 系统上的 .NET Core 中，将  <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 忽略值为或的对方法的调用 <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-421">On .NET Core on macOS and Linux systems, calls to the  <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a value of <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> or <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> are ignored.</span></span> 
  
 <span data-ttu-id="8b694-422">如果 `value` 参数不为空 (请参阅本节稍后部分中的 "为空值的定义删除环境变量") ，并为参数指定的环境变量不 `variable` 存在，将创建环境变量并为其分配内容 `value` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-422">If the `value` argument is not empty (see the discussion of deleting an environment variable later in this section for the definition of an empty value) and the environment variable named by the `variable` argument does not exist, the environment variable is created and assigned the contents of `value`.</span></span>  <span data-ttu-id="8b694-423">如果它存在，则修改其值。</span><span class="sxs-lookup"><span data-stu-id="8b694-423">If it does exist, its value is modified.</span></span>  
  
 <span data-ttu-id="8b694-424">如果 `variable` 包含非初始的十六进制零字符，则在零字符之前的字符被视为环境变量名称，而所有后续字符都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="8b694-424">If `variable` contains a non-initial hexadecimal zero character, the characters before the zero character are considered the environment variable name and all subsequent characters are ignored.</span></span>  
  
 <span data-ttu-id="8b694-425">如果 `value` 包含非初始的十六进制零字符，则零字符之前的字符将被分配给环境变量，并且所有后续字符都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="8b694-425">If `value` contains a non-initial hexadecimal zero character, the characters before the zero character are assigned to the environment variable and all subsequent characters are ignored.</span></span>  
  
 <span data-ttu-id="8b694-426">如果 `value` 为空且名为的环境变量 `variable` 存在，则将删除环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-426">If `value` is empty and the environment variable named by `variable` exists, the environment variable is deleted.</span></span> <span data-ttu-id="8b694-427">`value` 在下列任一情况下，都被视为空：</span><span class="sxs-lookup"><span data-stu-id="8b694-427">`value` is considered empty under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="8b694-428">它是 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-428">It is `null`.</span></span>  
  
-   <span data-ttu-id="8b694-429">它是 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-429">It is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="8b694-430">它包含值为 U + 0000 的单个字符。</span><span class="sxs-lookup"><span data-stu-id="8b694-430">It consists of a single character whose value is U+0000.</span></span>  
  
 <span data-ttu-id="8b694-431">如果不 `variable` 存在，则不会发生任何错误，但无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="8b694-431">If `variable` does not exist, no error occurs although the operation cannot be performed.</span></span> <span data-ttu-id="8b694-432">当是时 `target` <xref:System.EnvironmentVariableTarget.Machine> ，请小心，因为你可能会意外删除影响整个本地计算机的环境变量，而不只是当前进程或用户。</span><span class="sxs-lookup"><span data-stu-id="8b694-432">Be careful when `target` is <xref:System.EnvironmentVariableTarget.Machine>, because you can accidentally delete an environment variable that affects your entire local machine, not just the current process or user.</span></span>  

### <a name="environmentvariabletargetmachine-and-environmentvariabletargetuser-on-windows-systems"></a><span data-ttu-id="8b694-433">Windows 系统上的 EnvironmentVariableTarget 和 EnvironmentVariableTarget</span><span class="sxs-lookup"><span data-stu-id="8b694-433">EnvironmentVariableTarget.Machine and EnvironmentVariableTarget.User on Windows systems</span></span>

<span data-ttu-id="8b694-434">如果 `target` 为 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> ，则将环境变量存储在本地计算机注册表的 HKEY_CURRENT_USER\Environment 密钥中。</span><span class="sxs-lookup"><span data-stu-id="8b694-434">If `target` is <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>, the environment variable is stored in the HKEY_CURRENT_USER\Environment key of the local computer's registry.</span></span> <span data-ttu-id="8b694-435">它还会复制到以当前用户身份运行的文件资源管理器实例。</span><span class="sxs-lookup"><span data-stu-id="8b694-435">It is also copied to instances of File Explorer that are running as the current user.</span></span> <span data-ttu-id="8b694-436">然后，用户从文件资源管理器启动的任何新进程都将继承该环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-436">The environment variable is then inherited by any new processes that the user launches from File Explorer.</span></span>  
  
 <span data-ttu-id="8b694-437">同样，如果 `target` 为 <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> ，则将环境变量存储在本地计算机注册表的 HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Environment 密钥中。</span><span class="sxs-lookup"><span data-stu-id="8b694-437">Similarly, if `target` is <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>, the environment variable is stored in the HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Environment key of the local computer's registry.</span></span> <span data-ttu-id="8b694-438">它还会复制到文件资源管理器的所有实例。</span><span class="sxs-lookup"><span data-stu-id="8b694-438">It is also copied to all instances of File Explorer.</span></span> <span data-ttu-id="8b694-439">然后，环境变量由从文件资源管理器启动的任何新进程继承。</span><span class="sxs-lookup"><span data-stu-id="8b694-439">The environment variable is then inherited by any new processes that are launched from File Explorer.</span></span>  
  
 <span data-ttu-id="8b694-440">如果 `target` 为 <xref:System.EnvironmentVariableTarget.User> 或 <xref:System.EnvironmentVariableTarget.Machine> ，则由 Windows 消息通知其他应用程序的设置操作 `WM_SETTINGCHANGE` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-440">If `target` is <xref:System.EnvironmentVariableTarget.User> or <xref:System.EnvironmentVariableTarget.Machine>, other applications are notified of the set operation by a Windows `WM_SETTINGCHANGE` message.</span></span>  
  
 <span data-ttu-id="8b694-441">如果 `target` 为 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> 或 <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> ，则建议长度 `value` 小于2048个字符。</span><span class="sxs-lookup"><span data-stu-id="8b694-441">If `target` is <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> or <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>, we recommend that the length of `value` be less than 2048 characters.</span></span>  
  
## Examples

<span data-ttu-id="8b694-442">下面的示例为 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 、和目标创建环境变量 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> <xref:System.EnvironmentVariableTarget.Machine> ，检查操作系统注册表是否包含用户和计算机环境变量，然后删除环境变量。</span><span class="sxs-lookup"><span data-stu-id="8b694-442">The following example creates environment variables for the <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>, <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>, and <xref:System.EnvironmentVariableTarget.Machine> targets, checks whether the operating system registry contains the user and machine environment variables, then deletes the environment variables.</span></span> <span data-ttu-id="8b694-443">由于基于 Unix 的系统上的 .NET 不支持每用户和每台计算机的环境变量，因此只有 <xref:System.Environment.SetEnvironmentVariable(System.String,System.String)> 和 <xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)> 值才能 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 成功地将环境变量存储到进程环境块。</span><span class="sxs-lookup"><span data-stu-id="8b694-443">Because .NET on Unix-based systems does not support per-user and per-machine environment variables, only <xref:System.Environment.SetEnvironmentVariable(System.String,System.String)> and <xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)> with a value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> successfully store an environment variable to the process environment block.</span></span>
  
[!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs)]
[!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b694-444"><paramref name="variable" /> 上声明的默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-444"><paramref name="variable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b694-445"><paramref name="variable" /> 包含一个长度为零的字符串、一个初始十六进制零字符 (0x00) 或一个等号 ("=")。</span><span class="sxs-lookup"><span data-stu-id="8b694-445"><paramref name="variable" /> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("=").</span></span>  
  
<span data-ttu-id="8b694-446">或</span><span class="sxs-lookup"><span data-stu-id="8b694-446">-or-</span></span> 
<span data-ttu-id="8b694-447"><paramref name="variable" /> 的长度大于或等于 32,767 个字符。</span><span class="sxs-lookup"><span data-stu-id="8b694-447">The length of <paramref name="variable" /> is greater than or equal to 32,767 characters.</span></span>  
  
<span data-ttu-id="8b694-448">或</span><span class="sxs-lookup"><span data-stu-id="8b694-448">-or-</span></span> 
 <span data-ttu-id="8b694-449"><paramref name="target" /> 不是 <see cref="T:System.EnvironmentVariableTarget" /> 枚举的一个成员。</span><span class="sxs-lookup"><span data-stu-id="8b694-449"><paramref name="target" /> is not a member of the <see cref="T:System.EnvironmentVariableTarget" /> enumeration.</span></span>  
  
<span data-ttu-id="8b694-450">或</span><span class="sxs-lookup"><span data-stu-id="8b694-450">-or-</span></span> 
 <span data-ttu-id="8b694-451"><paramref name="target" /> 为 <see cref="F:System.EnvironmentVariableTarget.Machine" /> 或 <see cref="F:System.EnvironmentVariableTarget.User" />，且 <paramref name="variable" /> 的长度大于或等于 255。</span><span class="sxs-lookup"><span data-stu-id="8b694-451"><paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.Machine" /> or <see cref="F:System.EnvironmentVariableTarget.User" />, and the length of <paramref name="variable" /> is greater than or equal to 255.</span></span>  
  
<span data-ttu-id="8b694-452">或</span><span class="sxs-lookup"><span data-stu-id="8b694-452">-or-</span></span> 
 <span data-ttu-id="8b694-453"><paramref name="target" /> 为 <see cref="F:System.EnvironmentVariableTarget.Process" /> ，且 <paramref name="value" /> 的长度大于或等于 32767 个字符。</span><span class="sxs-lookup"><span data-stu-id="8b694-453"><paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.Process" /> and the length of <paramref name="value" /> is greater than or equal to 32,767 characters.</span></span>  
  
<span data-ttu-id="8b694-454">或</span><span class="sxs-lookup"><span data-stu-id="8b694-454">-or-</span></span> 
<span data-ttu-id="8b694-455">执行此操作期间出错。</span><span class="sxs-lookup"><span data-stu-id="8b694-455">An error occurred during the execution of this operation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8b694-456">调用方没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="8b694-456">The caller does not have the required permission to perform this operation.</span></span></exception>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)" />
        <altmember cref="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public static string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Environment.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Environment.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-457">获取当前的堆栈跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-457">Gets current stack trace information.</span></span></summary>
        <value><span data-ttu-id="8b694-458">包含堆栈跟踪信息的字符串。</span><span class="sxs-lookup"><span data-stu-id="8b694-458">A string containing stack trace information.</span></span> <span data-ttu-id="8b694-459">此值可为 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-459">This value can be <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-460"><xref:System.Environment.StackTrace%2A>属性以反向时间顺序列出方法调用，也就是说，最新的方法调用将首先进行描述，并为堆栈上的每个方法调用列出一条堆栈跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-460">The <xref:System.Environment.StackTrace%2A> property lists method calls in reverse chronological order, that is, the most recent method call is described first, and one line of stack trace information is listed for each method call on the stack.</span></span> <span data-ttu-id="8b694-461">但是， <xref:System.Environment.StackTrace%2A> 由于优化期间发生的代码转换，属性可能不会按预期方式报告任意数量的方法调用。</span><span class="sxs-lookup"><span data-stu-id="8b694-461">However, the <xref:System.Environment.StackTrace%2A> property might not report as many method calls as expected due to code transformations that occur during optimization.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b694-462">对于类的堆栈跟踪信息，请使用 <xref:System.Diagnostics.StackTrace> 类。</span><span class="sxs-lookup"><span data-stu-id="8b694-462">For a hierarchical view of the stack trace information by class, use the <xref:System.Diagnostics.StackTrace> class.</span></span>  
  
 <span data-ttu-id="8b694-463"><xref:System.Environment.StackTrace%2A>属性为每个方法调用设置堆栈跟踪信息的格式，如下所示：</span><span class="sxs-lookup"><span data-stu-id="8b694-463">The <xref:System.Environment.StackTrace%2A> property formats the stack trace information for each method call as follows:</span></span>  
  
 <span data-ttu-id="8b694-464">"位置 `FullClassName` 。 `MethodName` (`MethodParams`) `FileName` ：行 `LineNumber` "</span><span class="sxs-lookup"><span data-stu-id="8b694-464">"at `FullClassName`.`MethodName`(`MethodParams`) in `FileName` :line `LineNumber` "</span></span>  
  
 <span data-ttu-id="8b694-465">文本 "at" 前面有三个空格，如果调试符号不可用，则省略以 "in" 开头的整个子字符串。</span><span class="sxs-lookup"><span data-stu-id="8b694-465">The literal "at" is preceded by three spaces, and the entire substring starting with "in" is omitted if debug symbols are not available.</span></span> <span data-ttu-id="8b694-466">占位符、、 `FullClassName` `MethodName` 、、 `MethodParams` `FileName` 和 `LineNumber` 将替换为实际值，并按如下所示定义：</span><span class="sxs-lookup"><span data-stu-id="8b694-466">The placeholders, `FullClassName`, `MethodName`, `MethodParams`, `FileName`, and `LineNumber`, are replaced by actual values, and are defined as follows:</span></span>  
  
 `FullClassName`  
 <span data-ttu-id="8b694-467">类的完整名称，包括命名空间。</span><span class="sxs-lookup"><span data-stu-id="8b694-467">The full name of the class, including the namespace.</span></span>  
  
 `MethodName`  
 <span data-ttu-id="8b694-468">方法的名称。</span><span class="sxs-lookup"><span data-stu-id="8b694-468">The name of the method.</span></span>  
  
 `MethodParams`  
 <span data-ttu-id="8b694-469">参数类型/名称对的列表。</span><span class="sxs-lookup"><span data-stu-id="8b694-469">The list of parameter type/name pairs.</span></span> <span data-ttu-id="8b694-470">每个对由逗号分隔 ( "，" ) 。</span><span class="sxs-lookup"><span data-stu-id="8b694-470">Each pair is separated by a comma (",").</span></span> <span data-ttu-id="8b694-471">如果不使用参数，则忽略此信息 `MethodName` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-471">This information is omitted if `MethodName` takes no parameters.</span></span>  
  
 `FileName`  
 <span data-ttu-id="8b694-472">声明方法的源文件的名称 `MethodName` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-472">The name of the source file where the `MethodName` method is declared.</span></span> <span data-ttu-id="8b694-473">如果调试符号不可用，则忽略此信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-473">This information is omitted if debug symbols are not available.</span></span>  
  
 `LineNumber`  
 <span data-ttu-id="8b694-474">中的行号 `FileName` ，其中包含 `MethodName` 调用堆栈上的指令的源代码。</span><span class="sxs-lookup"><span data-stu-id="8b694-474">The number of the line in `FileName` that contains the source code from `MethodName` for the instruction that is on the call stack.</span></span> <span data-ttu-id="8b694-475">如果调试符号不可用，则忽略此信息。</span><span class="sxs-lookup"><span data-stu-id="8b694-475">This information is omitted if debug symbols are not available.</span></span>  
  
 <span data-ttu-id="8b694-476"><xref:System.Environment.NewLine%2A?displayProperty=nameWithType>字符串终止堆栈跟踪的每一行。</span><span class="sxs-lookup"><span data-stu-id="8b694-476">The <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> string terminates each line of the stack trace.</span></span>
  
## Examples  
 <span data-ttu-id="8b694-477">下面的示例演示了 <xref:System.Environment.StackTrace%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="8b694-477">The following example demonstrates the <xref:System.Environment.StackTrace%2A> property.</span></span>  
  
 [!code-cpp[environment.stacktrace#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.StackTrace/CPP/stacktrace.cpp#1)]
 [!code-csharp[environment.stacktrace#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.StackTrace/CS/stacktrace.cs#1)]
 [!code-vb[environment.stacktrace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.StackTrace/VB/stacktrace.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemDirectory">
      <MemberSignature Language="C#" Value="public static string SystemDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SystemDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Environment.SystemDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SystemDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemDirectory : string" Usage="System.Environment.SystemDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-478">获取系统目录的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="8b694-478">Gets the fully qualified path of the system directory.</span></span></summary>
        <value><span data-ttu-id="8b694-479">包含目录路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="8b694-479">A string containing a directory path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-480">返回的值的示例为字符串 "C:\WinNT\System32"。</span><span class="sxs-lookup"><span data-stu-id="8b694-480">An example of the value returned is the string "C:\WinNT\System32".</span></span>
  
## Examples  
 <span data-ttu-id="8b694-481">下面的示例显示运行代码示例的计算机的系统目录。</span><span class="sxs-lookup"><span data-stu-id="8b694-481">The following example displays the system directory of the computer that runs the code example.</span></span> <span data-ttu-id="8b694-482">出于安全原因，示例输出中省略了系统目录 (。 ) </span><span class="sxs-lookup"><span data-stu-id="8b694-482">(The system directory is omitted from the example output for security reasons.)</span></span>  
  
 [!code-cpp[environment.systemdirectory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.SystemDirectory/CPP/systemdirectory.cpp#1)]
 [!code-csharp[environment.systemdirectory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.SystemDirectory/CS/systemdirectory.cs#1)]
 [!code-vb[environment.systemdirectory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.SystemDirectory/VB/systemdirectory.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemPageSize">
      <MemberSignature Language="C#" Value="public static int SystemPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 SystemPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Environment.SystemPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int SystemPageSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemPageSize : int" Usage="System.Environment.SystemPageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-483">获取操作系统的内存页的字节数。</span><span class="sxs-lookup"><span data-stu-id="8b694-483">Gets the number of bytes in the operating system's memory page.</span></span></summary>
        <value><span data-ttu-id="8b694-484">系统内存页中的字节数。</span><span class="sxs-lookup"><span data-stu-id="8b694-484">The number of bytes in the system memory page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-485">当 <xref:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages?displayProperty=nameWithType> 你使用内存映射文件时，确定是否使用选项时，此信息很有用。</span><span class="sxs-lookup"><span data-stu-id="8b694-485">This information can be useful when determining whether to use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages?displayProperty=nameWithType> option when you work with memory-mapped files.</span></span>  
  
 <span data-ttu-id="8b694-486">在 Windows 中，此值是 `dwPageSize` 结构中的成员 `SYSTEM_INFO` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-486">In Windows, this value is the `dwPageSize` member in the `SYSTEM_INFO` structure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TickCount">
      <MemberSignature Language="C#" Value="public static int TickCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 TickCount" />
      <MemberSignature Language="DocId" Value="P:System.Environment.TickCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TickCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int TickCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TickCount : int" Usage="System.Environment.TickCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-487">获取系统启动后经过的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="8b694-487">Gets the number of milliseconds elapsed since the system started.</span></span></summary>
        <value><span data-ttu-id="8b694-488">一个 32 位带符号整数，它包含自上次启动计算机以来所经过的时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="8b694-488">A 32-bit signed integer containing the amount of time in milliseconds that has passed since the last time the computer was started.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-489">此属性的值派生自系统计时器，并存储为32位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b694-489">The value of this property is derived from the system timer and is stored as a 32-bit signed integer.</span></span> <span data-ttu-id="8b694-490">请注意，因为它是从系统计时器派生的，所以，属性的分辨率 <xref:System.Environment.TickCount%2A> 限制为系统计时器的分辨率，这通常在10到16毫秒的范围内。</span><span class="sxs-lookup"><span data-stu-id="8b694-490">Note that, because it is derived from the system timer, the resolution of the <xref:System.Environment.TickCount%2A> property is limited to the resolution of the system timer, which is typically in the range of 10 to 16 milliseconds.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="8b694-491">由于属性值的值 <xref:System.Environment.TickCount%2A> 为32位有符号整数，因此，如果系统连续运行，则 <xref:System.Environment.TickCount%2A> 将从零递增到 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 约24.9 天，然后跳转到 <xref:System.Int32.MinValue?displayProperty=nameWithType> ，该数字为负数，然后在下一个24.9 天内递增为零。</span><span class="sxs-lookup"><span data-stu-id="8b694-491">Because the value of the <xref:System.Environment.TickCount%2A> property value is a 32-bit signed integer, if the system runs continuously, <xref:System.Environment.TickCount%2A> will increment from zero to <xref:System.Int32.MaxValue?displayProperty=nameWithType> for approximately 24.9 days, then jump to <xref:System.Int32.MinValue?displayProperty=nameWithType>, which is a negative number, then increment back to zero during the next 24.9 days.</span></span> <span data-ttu-id="8b694-492">若要解决此问题，可以调用 Windows [GetTickCount](/windows/win32/api/sysinfoapi/nf-sysinfoapi-gettickcount) 函数，该函数在大约49.7 天后将重置为零，或调用 [GetTickCount64](/windows/win32/api/sysinfoapi/nf-sysinfoapi-gettickcount64) 函数。</span><span class="sxs-lookup"><span data-stu-id="8b694-492">You can work around this issue by calling the Windows [GetTickCount](/windows/win32/api/sysinfoapi/nf-sysinfoapi-gettickcount) function, which resets to zero after approximately 49.7 days, or by calling the [GetTickCount64](/windows/win32/api/sysinfoapi/nf-sysinfoapi-gettickcount64) function.</span></span>  
  
 <span data-ttu-id="8b694-493"><xref:System.Environment.TickCount%2A> 与 <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> 属性不同，后者是自1/1/0001，12： 00 (以来经过的100纳秒间隔数。</span><span class="sxs-lookup"><span data-stu-id="8b694-493"><xref:System.Environment.TickCount%2A> is different from the <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> property, which is the number of 100-nanosecond intervals that have elapsed since 1/1/0001, 12:00am.</span></span>  
  
 <span data-ttu-id="8b694-494">使用 <xref:System.DateTime.Now%2A?displayProperty=nameWithType> 属性可获取此计算机上的当前本地日期和时间。</span><span class="sxs-lookup"><span data-stu-id="8b694-494">Use the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property to obtain the current local date and time on this computer.</span></span>
  
## Examples  
 <span data-ttu-id="8b694-495">下面的示例演示如何检索由属性返回的值的正范围 <xref:System.Environment.TickCount%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-495">The following example demonstrates how to retrieve the positive range of values returned by the <xref:System.Environment.TickCount%2A> property.</span></span> <span data-ttu-id="8b694-496"><xref:System.Environment.TickCount%2A>属性在之间循环 <xref:System.Int32.MinValue?displayProperty=nameWithType> ，这是一个负数， <xref:System.Int32.MaxValue?displayProperty=nameWithType> 每49.8 天一次。</span><span class="sxs-lookup"><span data-stu-id="8b694-496">The <xref:System.Environment.TickCount%2A> property cycles between <xref:System.Int32.MinValue?displayProperty=nameWithType>, which is a negative number, and <xref:System.Int32.MaxValue?displayProperty=nameWithType> once every 49.8 days.</span></span> <span data-ttu-id="8b694-497">此代码示例将删除符号位以产生一个介于零和 <xref:System.Int32.MaxValue> 每24.9 天之间循环一次的非负数。</span><span class="sxs-lookup"><span data-stu-id="8b694-497">This code sample removes the sign bit to yield a nonnegative number that cycles between zero and <xref:System.Int32.MaxValue> once every 24.9 days.</span></span>  
  
 [!code-cpp[environment.tickcount#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.TickCount/CPP/tickcount.cpp#1)]
 [!code-csharp[environment.tickcount#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.TickCount/CS/tickcount.cs#1)]
 [!code-vb[environment.tickcount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.TickCount/VB/tickcount.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TickCount64">
      <MemberSignature Language="C#" Value="public static long TickCount64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 TickCount64" />
      <MemberSignature Language="DocId" Value="P:System.Environment.TickCount64" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TickCount64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property long TickCount64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.TickCount64 : int64" Usage="System.Environment.TickCount64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-498">获取系统启动后经过的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="8b694-498">Gets the number of milliseconds elapsed since the system started.</span></span></summary>
        <value><span data-ttu-id="8b694-499">自系统启动以来经过的时间（毫秒）。</span><span class="sxs-lookup"><span data-stu-id="8b694-499">The elapsed milliseconds since the system started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDomainName">
      <MemberSignature Language="C#" Value="public static string UserDomainName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UserDomainName" />
      <MemberSignature Language="DocId" Value="P:System.Environment.UserDomainName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserDomainName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ UserDomainName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserDomainName : string" Usage="System.Environment.UserDomainName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-500">获取与当前用户关联的网络域名。</span><span class="sxs-lookup"><span data-stu-id="8b694-500">Gets the network domain name associated with the current user.</span></span></summary>
        <value><span data-ttu-id="8b694-501">与当前用户关联的网络域名。</span><span class="sxs-lookup"><span data-stu-id="8b694-501">The network domain name associated with the current user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-502">用户的域帐户凭据的格式为用户的域名、" \\ " 字符和用户名。</span><span class="sxs-lookup"><span data-stu-id="8b694-502">The domain account credentials for a user are formatted as the user's domain name, the '\\' character, and user name.</span></span> <span data-ttu-id="8b694-503">使用 <xref:System.Environment.UserDomainName%2A> 属性获取用户的域名而不使用用户名，并使用 <xref:System.Environment.UserName%2A> 属性获取不带域名的用户名。</span><span class="sxs-lookup"><span data-stu-id="8b694-503">Use the <xref:System.Environment.UserDomainName%2A> property to obtain the user's domain name without the user name, and the <xref:System.Environment.UserName%2A> property to obtain the user name without the domain name.</span></span>  <span data-ttu-id="8b694-504">例如，如果用户的域名和用户名为 CORPORATENETWORK\john，则 <xref:System.Environment.UserDomainName%2A> 属性将返回 "企业网络"。</span><span class="sxs-lookup"><span data-stu-id="8b694-504">For example, if a user's domain name and user name are CORPORATENETWORK\john, the <xref:System.Environment.UserDomainName%2A> property returns "CORPORATENETWORK".</span></span>  
  
 <span data-ttu-id="8b694-505"><xref:System.Environment.UserDomainName%2A>属性首先尝试获取当前用户的 Windows 帐户名称的域名部分。</span><span class="sxs-lookup"><span data-stu-id="8b694-505">The <xref:System.Environment.UserDomainName%2A> property first attempts to get the domain name component of the Windows account name for the current user.</span></span> <span data-ttu-id="8b694-506">如果此尝试失败，则此属性将尝试获取与属性提供的用户名相关联的域名 <xref:System.Environment.UserName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8b694-506">If that attempt fails, this property attempts to get the domain name associated with the user name provided by the <xref:System.Environment.UserName%2A> property.</span></span> <span data-ttu-id="8b694-507">如果此尝试失败，因为主机未加入域，则返回主机名。</span><span class="sxs-lookup"><span data-stu-id="8b694-507">If that attempt fails because the host computer is not joined to a domain, then the host computer name is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="8b694-508">操作系统不支持检索网络域名。</span><span class="sxs-lookup"><span data-stu-id="8b694-508">The operating system does not support retrieving the network domain name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8b694-509">无法检索的网络域名。</span><span class="sxs-lookup"><span data-stu-id="8b694-509">The network domain name cannot be retrieved.</span></span></exception>
        <altmember cref="P:System.Environment.UserName" />
      </Docs>
    </Member>
    <Member MemberName="UserInteractive">
      <MemberSignature Language="C#" Value="public static bool UserInteractive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UserInteractive" />
      <MemberSignature Language="DocId" Value="P:System.Environment.UserInteractive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserInteractive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UserInteractive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UserInteractive : bool" Usage="System.Environment.UserInteractive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-510">获取一个值，用以指示当前进程是否在用户交互模式中运行。</span><span class="sxs-lookup"><span data-stu-id="8b694-510">Gets a value indicating whether the current process is running in user interactive mode.</span></span></summary>
        <value><span data-ttu-id="8b694-511">如果当前进程在用户交互模式中运行，则为<see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b694-511"><see langword="true" /> if the current process is running in user interactive mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-512">此 <xref:System.Environment.UserInteractive%2A> 属性报告 `false` 的 Windows 进程或服务（如 IIS）在没有用户界面的情况下运行。</span><span class="sxs-lookup"><span data-stu-id="8b694-512">The <xref:System.Environment.UserInteractive%2A> property reports `false` for a Windows process or a service like IIS that runs without a user interface.</span></span> <span data-ttu-id="8b694-513">如果此属性为 `false` ，则不会显示模式对话框或消息框，因为没有可供用户与之交互的图形用户界面。</span><span class="sxs-lookup"><span data-stu-id="8b694-513">If this property is `false`, do not display modal dialogs or message boxes because there is no graphical user interface for the user to interact with.</span></span>
  
## Examples  
 <span data-ttu-id="8b694-514">下面的示例显示当前进程是否正在用户交互模式下运行。</span><span class="sxs-lookup"><span data-stu-id="8b694-514">The following example displays whether the current process is running in user interactive mode.</span></span>  
  
 [!code-cpp[Environment.UserInteractive#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.UserInteractive/CPP/userinteractive.cpp#1)]
 [!code-csharp[Environment.UserInteractive#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.UserInteractive/CS/userinteractive.cs#1)]
 [!code-vb[Environment.UserInteractive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.UserInteractive/VB/userinteractive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemInformation" />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public static string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Environment.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.Environment.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-515">获取与当前线程相关联的用户的用户名。</span><span class="sxs-lookup"><span data-stu-id="8b694-515">Gets the user name of the person who is associated with the current thread.</span></span></summary>
        <value><span data-ttu-id="8b694-516">与当前线程关联的人员的用户名。</span><span class="sxs-lookup"><span data-stu-id="8b694-516">The user name of the person who is associated with the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-517">您可以使用 <xref:System.Environment.UserName%2A> 属性将当前线程上的用户标识到系统和应用程序，以进行安全或访问。</span><span class="sxs-lookup"><span data-stu-id="8b694-517">You can use the <xref:System.Environment.UserName%2A> property to identify the user on the current thread, to the system and application for security or access purposes.</span></span> <span data-ttu-id="8b694-518">还可用于为每个用户自定义特定的应用程序。</span><span class="sxs-lookup"><span data-stu-id="8b694-518">It can also be used to customize a particular application for each user.</span></span>  
 
 <span data-ttu-id="8b694-519">在 Windows 上， <xref:System.Environment.UserName%2A> 属性包装对 Windows [GetUserName](/windows/win32/api/winbase/nf-winbase-getusernamea) 函数的调用。</span><span class="sxs-lookup"><span data-stu-id="8b694-519">On Windows the <xref:System.Environment.UserName%2A> property wraps a call to the Windows [GetUserName](/windows/win32/api/winbase/nf-winbase-getusernamea) function.</span></span> <span data-ttu-id="8b694-520">用户的域帐户凭据的格式为用户的域名、" \\ " 字符和用户名。</span><span class="sxs-lookup"><span data-stu-id="8b694-520">The domain account credentials for a user are formatted as the user's domain name, the '\\' character, and user name.</span></span> <span data-ttu-id="8b694-521">使用 <xref:System.Environment.UserDomainName%2A> 属性获取用户的域名和 <xref:System.Environment.UserName%2A> 属性以获取用户名。</span><span class="sxs-lookup"><span data-stu-id="8b694-521">Use the <xref:System.Environment.UserDomainName%2A> property to obtain the user's domain name and the <xref:System.Environment.UserName%2A> property to obtain the user name.</span></span>  
 
 <span data-ttu-id="8b694-522">在 Unix 平台上， <xref:System.Environment.UserName%2A> 属性包装对函数的调用 `getpwuid_r` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-522">On Unix platforms the <xref:System.Environment.UserName%2A> property wraps a call to the `getpwuid_r` function.</span></span>
 
 <span data-ttu-id="8b694-523">如果在开发环境中运行 ASP.NET 应用程序，则 <xref:System.Environment.UserName%2A> 属性将返回当前用户的名称。</span><span class="sxs-lookup"><span data-stu-id="8b694-523">If an ASP.NET application runs in a development environment, the <xref:System.Environment.UserName%2A> property returns the name of the current user.</span></span> <span data-ttu-id="8b694-524">在已发布的 ASP.NET 应用程序中，此属性将返回 (的应用程序池帐户的名称，例如默认 AppPool) 。</span><span class="sxs-lookup"><span data-stu-id="8b694-524">In a published ASP.NET application, this property returns the name of the application pool account (such as Default AppPool).</span></span>

## Examples  
 <span data-ttu-id="8b694-525">下面的示例显示了启动当前线程的人员的用户名。</span><span class="sxs-lookup"><span data-stu-id="8b694-525">The following example displays the user name of the person who started the current thread.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/Environment.UserName/CPP/username.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Environment.UserName/CS/username.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.UserName/VB/username.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Environment.UserDomainName" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public static Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Environment.Version" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="System.Environment.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-526">获取由公共语言运行时的主要版本号、次要版本号、内部版本号和修订号组成的版本。</span><span class="sxs-lookup"><span data-stu-id="8b694-526">Gets a version consisting of the major, minor, build, and revision numbers of the common language runtime.</span></span></summary>
        <value><span data-ttu-id="8b694-527">公共语言运行时的版本。</span><span class="sxs-lookup"><span data-stu-id="8b694-527">The version of the common language runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b694-528">对于 .NET Framework 版本 4、4.5、4.5.1 和 4.5.2，<xref:System.Environment.Version%2A?displayProperty=nameWithType> 属性返回字符串表现形式具有窗体 `4.0.30319.xxxxx` 的 <xref:System.Version> 对象。</span><span class="sxs-lookup"><span data-stu-id="8b694-528">For the .NET Framework Versions 4, 4.5, 4.5.1, and 4.5.2, the <xref:System.Environment.Version%2A?displayProperty=nameWithType> property returns a <xref:System.Version> object whose string representation has the form `4.0.30319.xxxxx`.</span></span> <span data-ttu-id="8b694-529">对于 .NET Framework 4.6 及更高版本，格式为 `4.0.30319.42000` 。</span><span class="sxs-lookup"><span data-stu-id="8b694-529">For the .NET Framework 4.6 and later versions, it has the form `4.0.30319.42000`.</span></span>  
  
> [!WARNING]
> <span data-ttu-id="8b694-530">对于 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 和更高版本，我们不建议使用 <xref:System.Environment.Version%2A> 属性来检测运行时的版本; 相反，你可以通过查询注册表来确定公共语言运行时的版本。</span><span class="sxs-lookup"><span data-stu-id="8b694-530">For the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] and later, we do not recommend using the <xref:System.Environment.Version%2A> property to detect the version of the runtime; instead, you can determine the version of the common language runtime by querying the registry.</span></span> <span data-ttu-id="8b694-531">有关详细信息，请参阅 [如何：确定安装了哪些 .NET Framework 版本](/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed)。</span><span class="sxs-lookup"><span data-stu-id="8b694-531">For more information, see [How to: Determine Which .NET Framework Versions Are Installed](/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed).</span></span>  
  
 <span data-ttu-id="8b694-532">有关随每个版本的 .NET Framework 一起安装的公共语言运行时版本的详细信息，请参阅 [版本和依赖项](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="8b694-532">For more information about the version of the common language runtime that is installed with each version of the .NET Framework, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>
  
## Examples  
 <span data-ttu-id="8b694-533">下面的示例显示公共语言运行时的版本。</span><span class="sxs-lookup"><span data-stu-id="8b694-533">The following example displays the version of the common language runtime.</span></span> <span data-ttu-id="8b694-534"> (出于安全原因，示例输出中省略了版本。 ) </span><span class="sxs-lookup"><span data-stu-id="8b694-534">(The version is omitted from the example output for security reasons.)</span></span>  
  
 [!code-cpp[Environment.Version#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.Version/CPP/version.cpp#1)]
 [!code-csharp[Environment.Version#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.Version/CS/version.cs#1)]
 [!code-vb[Environment.Version#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.Version/VB/version.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public static long WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:System.Environment.WorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WorkingSet As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property long WorkingSet { long get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkingSet : int64" Usage="System.Environment.WorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b694-535">获取映射到进程上下文的物理内存量。</span><span class="sxs-lookup"><span data-stu-id="8b694-535">Gets the amount of physical memory mapped to the process context.</span></span></summary>
        <value><span data-ttu-id="8b694-536">一个 64 位带符号整数，包含映射到进程上下文的物理内存字节的数目。</span><span class="sxs-lookup"><span data-stu-id="8b694-536">A 64-bit signed integer containing the number of bytes of physical memory mapped to the process context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b694-537">下面的示例显示运行代码示例的计算机的工作集的大小。</span><span class="sxs-lookup"><span data-stu-id="8b694-537">The following example displays the size of the working set of the computer that runs the code example.</span></span>  
  
 [!code-cpp[Environment.WorkingSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.WorkingSet/CPP/workingset.cpp#1)]
 [!code-csharp[Environment.WorkingSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.WorkingSet/CS/workingset.cs#1)]
 [!code-vb[Environment.WorkingSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.WorkingSet/VB/workingset.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
