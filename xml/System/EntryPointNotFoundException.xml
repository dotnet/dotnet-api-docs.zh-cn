<Type Name="EntryPointNotFoundException" FullName="System.EntryPointNotFoundException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27015ced5a51d577ecc51d050db2ffd146c1ec14" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91908863" /></Metadata><TypeSignature Language="C#" Value="public class EntryPointNotFoundException : TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntryPointNotFoundException extends System.TypeLoadException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.EntryPointNotFoundException" />
  <TypeSignature Language="VB.NET" Value="Public Class EntryPointNotFoundException&#xA;Inherits TypeLoadException" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntryPointNotFoundException : TypeLoadException" />
  <TypeSignature Language="F#" Value="type EntryPointNotFoundException = class&#xA;    inherit TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit EntryPointNotFoundException extends System.TypeLoadException" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.TypeLoadException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="196d7-101">因不存在项方法而导致加载类的尝试失败时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="196d7-101">The exception that is thrown when an attempt to load a class fails due to the absence of an entry method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="196d7-102"><xref:System.EntryPointNotFoundException>如果公共语言运行时无法加载程序集，则会引发异常，因为它无法标识程序集的入口点。</span><span class="sxs-lookup"><span data-stu-id="196d7-102">An <xref:System.EntryPointNotFoundException> exception is thrown when the common language runtime is unable to load an assembly because it cannot identify the assembly's entry point.</span></span>  <span data-ttu-id="196d7-103">在下列情况下，可能会引发此异常：</span><span class="sxs-lookup"><span data-stu-id="196d7-103">This exception can be thrown under the following conditions:</span></span>  
  
-   <span data-ttu-id="196d7-104">公共语言运行时找不到 (通常为 `Main` 可执行程序集中的方法) 的应用程序入口点。</span><span class="sxs-lookup"><span data-stu-id="196d7-104">The common language runtime is unable to locate an application entry point (typically a `Main` method) in an executable assembly.</span></span> <span data-ttu-id="196d7-105">应用程序入口点必须是 `static` 不带任何参数的全局或方法，或者不是字符串数组的唯一参数。</span><span class="sxs-lookup"><span data-stu-id="196d7-105">The application entry point must be a global or `static` method that has either no parameters or a string array as its only parameter.</span></span> <span data-ttu-id="196d7-106">入口点可以返回 `void` ，或者它可以返回 <xref:System.Int32> 或 <xref:System.UInt32> 退出代码。</span><span class="sxs-lookup"><span data-stu-id="196d7-106">The entry point can return `void`, or it can return an <xref:System.Int32> or <xref:System.UInt32> exit code.</span></span> <span data-ttu-id="196d7-107">应用程序程序集不能定义多个入口点。</span><span class="sxs-lookup"><span data-stu-id="196d7-107">An application assembly cannot define more than one entry point.</span></span>  
  
-   <span data-ttu-id="196d7-108">无法解析对 Windows DLL 中函数的调用，因为找不到该函数。</span><span class="sxs-lookup"><span data-stu-id="196d7-108">The call to a function in a Windows DLL cannot be resolved because the function cannot be found.</span></span> <span data-ttu-id="196d7-109">在下面的示例中， <xref:System.EntryPointNotFoundException> 引发了异常，因为 User32.dll 不包含名为的函数 `GetMyNumber` 。</span><span class="sxs-lookup"><span data-stu-id="196d7-109">In the following example, an <xref:System.EntryPointNotFoundException> exception is thrown because User32.dll does not include a function named `GetMyNumber`.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/nofunction1.cs#1)]
     [!code-vb[System.EntryPointNotFoundException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/nofunction1.vb#1)]  
  
-   <span data-ttu-id="196d7-110">由于在方法调用中使用的名称与在程序集中找到的名称不匹配，因此无法解析对 Windows DLL 中函数的调用。</span><span class="sxs-lookup"><span data-stu-id="196d7-110">The call to a function in a Windows DLL cannot be resolved because the name used in the method call does not match a name found in the assembly.</span></span> <span data-ttu-id="196d7-111">通常，发生这种情况的原因 <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=nameWithType> 是：字段隐式或显式设置为 `true` ，被调用的方法包含一个或多个字符串参数，同时包含 ANSI 和 unicode 版本，并且在方法调用中使用的名称不与此 ANSI 或 unicode 版本的名称相对应。</span><span class="sxs-lookup"><span data-stu-id="196d7-111">Frequently, this occurs because the <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=nameWithType> field is either implicitly or explicitly set to `true`, the called method includes one or more string parameters and has both an ANSI and a Unicode version, and the name used in the method call does not correspond to the name of this ANSI or Unicode version.</span></span> <span data-ttu-id="196d7-112">下面的示例通过尝试在 User32.dll 中调用 Windows 函数来提供说明 `MessageBox` 。</span><span class="sxs-lookup"><span data-stu-id="196d7-112">The following example provides an illustration by attempting to call the Windows `MessageBox` function in User32.dll.</span></span> <span data-ttu-id="196d7-113">由于第一个方法定义 <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType> 为字符串封送指定了，公共语言将查找函数的宽字符版本， `MessageBoxW` 而不是在方法调用中使用的名称 `MessageBox` 。</span><span class="sxs-lookup"><span data-stu-id="196d7-113">Because the first method definition specifies <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType> for string marshaling, the common language looks for the wide-character version of the function, `MessageBoxW`, instead of the name used in the method call, `MessageBox`.</span></span>  <span data-ttu-id="196d7-114">第二个方法定义通过调用 `MessageBoxW` 而不是函数来更正此问题 `MessageBox` 。</span><span class="sxs-lookup"><span data-stu-id="196d7-114">The second method definition corrects this problem by calling the `MessageBoxW` instead of the `MessageBox` function.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/badcall1.cs#2)]
     [!code-vb[System.EntryPointNotFoundException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/badcall1.vb#2)]  
  
-   <span data-ttu-id="196d7-115">尝试通过简单名称（而不是修饰名称）在动态链接库中调用函数。</span><span class="sxs-lookup"><span data-stu-id="196d7-115">You are trying to call a function in a dynamic link library by its simple name rather than its decorated name.</span></span> <span data-ttu-id="196d7-116">通常，c + + 编译器会为 DLL 函数生成修饰名。</span><span class="sxs-lookup"><span data-stu-id="196d7-116">Typically, the C++ compiler generates a decorated name for DLL functions.</span></span> <span data-ttu-id="196d7-117">例如，下面的 c + + 代码 `Double` 在名为 TestDll.dll 的库中定义名为的函数。</span><span class="sxs-lookup"><span data-stu-id="196d7-117">For example, the following C++ code defines a function named `Double` in a library named TestDll.dll.</span></span>  
  
     [!code-cpp[System.EntryPointNotFoundException.Class#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cpp/testdll.cpp#6)]  
  
     <span data-ttu-id="196d7-118">当下面的示例中的代码尝试调用函数时， <xref:System.EntryPointNotFoundException> 将引发异常，因为 `Double` 找不到该函数。</span><span class="sxs-lookup"><span data-stu-id="196d7-118">When the code in the following example tries to call the function, an <xref:System.EntryPointNotFoundException> exception is thrown because the `Double` function cannot be found.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle1.cs#7)]
     [!code-vb[System.EntryPointNotFoundException.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle1.vb#7)]  
  
     <span data-ttu-id="196d7-119">但是，如果使用其修饰名称调用函数 (在本例中为 `?Double@@YAHH@Z`) ，则函数调用成功，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="196d7-119">However, if the function is called by using its decorated name (in this case, `?Double@@YAHH@Z`), the function call succeeds, as the following example shows.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle2.cs#8)]
     [!code-vb[System.EntryPointNotFoundException.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle2.vb#8)]  
  
     <span data-ttu-id="196d7-120">您可以通过使用诸如 Dumpbin.exe 的实用工具来查找 DLL 导出的函数的修饰名。</span><span class="sxs-lookup"><span data-stu-id="196d7-120">You can find the decorated names of functions exported by a DLL by using a utility such as Dumpbin.exe.</span></span>  
  
-   <span data-ttu-id="196d7-121">您正尝试调用托管程序集中的方法，就像它是非托管动态链接库一样。</span><span class="sxs-lookup"><span data-stu-id="196d7-121">You are attempting to call a method in a managed assembly as if it were an unmanaged dynamic link library.</span></span> <span data-ttu-id="196d7-122">若要查看此操作，请将下面的示例编译为名为 StringUtilities.dll 的程序集。</span><span class="sxs-lookup"><span data-stu-id="196d7-122">To see this in action, compile the following example to an assembly named StringUtilities.dll.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/stringutilities.cs#3)]
     [!code-vb[System.EntryPointNotFoundException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/stringutilities.vb#3)]  
  
     <span data-ttu-id="196d7-123">然后，编译并执行以下示例，该示例尝试 `StringUtilities.SayGoodMorning` 在 StringUtilities.dll 的动态链接库中调用方法，就像它是非托管代码一样。</span><span class="sxs-lookup"><span data-stu-id="196d7-123">Then compile and execute the following example, which attempts to call the `StringUtilities.SayGoodMorning` method in the StringUtilities.dll dynamic link library as if it were unmanaged code.</span></span> <span data-ttu-id="196d7-124">结果为 <xref:System.EntryPointNotFoundException> 异常。</span><span class="sxs-lookup"><span data-stu-id="196d7-124">The result is an <xref:System.EntryPointNotFoundException> exception.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/importassembly1.cs#4)]
     [!code-vb[System.EntryPointNotFoundException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/importassembly1.vb#4)]  
  
     <span data-ttu-id="196d7-125">若要消除此异常，请添加对托管程序集的引用并访问 `StringUtilities.SayGoodMorning` 方法，就像在托管代码中访问任何其他方法一样，如下例所示。</span><span class="sxs-lookup"><span data-stu-id="196d7-125">To eliminate the exception, add a reference to the managed assembly and access the `StringUtilities.SayGoodMorning` method just as you would access any other method in managed code, as the following example does.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/fiximportassembly1.cs#5)]
     [!code-vb[System.EntryPointNotFoundException.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/fiximportassembly1.vb#5)]  
  
-   <span data-ttu-id="196d7-126">尝试在 COM DLL 中调用方法，就像它是 Windows DLL 一样。</span><span class="sxs-lookup"><span data-stu-id="196d7-126">You are trying to call a method in a COM DLL as if it were a Windows DLL.</span></span> <span data-ttu-id="196d7-127">若要访问 COM DLL，请选择 Visual Studio 中的 " **添加引用** " 选项以添加对该项目的引用，然后从 " **COM** " 选项卡中选择类型库。</span><span class="sxs-lookup"><span data-stu-id="196d7-127">To access a COM DLL, select the **Add Reference** option in Visual Studio to add a reference to the project, and then select the type library from the **COM** tab.</span></span>  
  
 <span data-ttu-id="196d7-128">有关实例的初始属性值的列表<xref:System.EntryPointNotFoundException>，请参阅<xref:System.EntryPointNotFoundException.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="196d7-128">For a list of initial property values for an instance of <xref:System.EntryPointNotFoundException>, see the <xref:System.EntryPointNotFoundException.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="196d7-129">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="196d7-129">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="196d7-130">初始化 <see cref="T:System.EntryPointNotFoundException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="196d7-130">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="196d7-131">初始化 <see cref="T:System.EntryPointNotFoundException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="196d7-131">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="196d7-132">此构造函数将 <xref:System.Exception.Message%2A> 新实例的属性初始化为系统提供的描述错误的消息，如 "找不到入口点"。</span><span class="sxs-lookup"><span data-stu-id="196d7-132">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Entry point was not found."</span></span> <span data-ttu-id="196d7-133">此消息会考虑当前系统区域性。</span><span class="sxs-lookup"><span data-stu-id="196d7-133">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="196d7-134">下表显示了 <xref:System.EntryPointNotFoundException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="196d7-134">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="196d7-135">properties</span><span class="sxs-lookup"><span data-stu-id="196d7-135">Property</span></span>|<span data-ttu-id="196d7-136">值</span><span class="sxs-lookup"><span data-stu-id="196d7-136">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="196d7-137">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="196d7-137">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="196d7-138">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="196d7-138">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : string -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="196d7-139">解释异常原因的错误消息。</span><span class="sxs-lookup"><span data-stu-id="196d7-139">The error message that explains the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="196d7-140">用指定的错误消息初始化 <see cref="T:System.EntryPointNotFoundException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="196d7-140">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="196d7-141">`message` 的内容设计为易于理解。</span><span class="sxs-lookup"><span data-stu-id="196d7-141">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="196d7-142">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="196d7-142">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="196d7-143">下表显示了 <xref:System.EntryPointNotFoundException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="196d7-143">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="196d7-144">properties</span><span class="sxs-lookup"><span data-stu-id="196d7-144">Property</span></span>|<span data-ttu-id="196d7-145">值</span><span class="sxs-lookup"><span data-stu-id="196d7-145">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="196d7-146">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="196d7-146">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="196d7-147">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="196d7-147">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EntryPointNotFoundException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="196d7-148">承载序列化对象数据的对象。</span><span class="sxs-lookup"><span data-stu-id="196d7-148">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="196d7-149">关于来源和目标的上下文信息</span><span class="sxs-lookup"><span data-stu-id="196d7-149">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="196d7-150">用序列化数据初始化 <see cref="T:System.EntryPointNotFoundException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="196d7-150">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="196d7-151">在反序列化期间调用此构造函数以重新构造在流上传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="196d7-151">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : string * Exception -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="196d7-152">解释异常原因的错误消息。</span><span class="sxs-lookup"><span data-stu-id="196d7-152">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="196d7-153">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="196d7-153">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="196d7-154">如果 <paramref name="inner" /> 参数不是 null 引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 <see langword="catch" /> 块中引发当前异常。</span><span class="sxs-lookup"><span data-stu-id="196d7-154">If the <paramref name="inner" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="196d7-155">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.EntryPointNotFoundException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="196d7-155">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="196d7-156">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="196d7-156">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="196d7-157"><xref:System.Exception.InnerException%2A> 属性返回传递到构造函数中的相同值，或者如果 `Nothing` 属性不向构造函数提供内部异常值，则为空引用（在 Visual Basic 中为 <xref:System.Exception.InnerException%2A>）。</span><span class="sxs-lookup"><span data-stu-id="196d7-157">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="196d7-158">下表显示了 <xref:System.EntryPointNotFoundException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="196d7-158">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="196d7-159">properties</span><span class="sxs-lookup"><span data-stu-id="196d7-159">Property</span></span>|<span data-ttu-id="196d7-160">“值”</span><span class="sxs-lookup"><span data-stu-id="196d7-160">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="196d7-161">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="196d7-161">The inner exception reference.</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="196d7-162">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="196d7-162">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="196d7-163">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="196d7-163">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
