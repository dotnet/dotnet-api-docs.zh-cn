<Type Name="SqlMethodAttribute" FullName="Microsoft.SqlServer.Server.SqlMethodAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c6cbf75b884f305862fa4399d7b5c30558b5c22" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89823721" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlMethodAttribute : Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlMethodAttribute extends Microsoft.SqlServer.Server.SqlFunctionAttribute" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlMethodAttribute&#xA;Inherits SqlFunctionAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMethodAttribute sealed : Microsoft::SqlServer::Server::SqlFunctionAttribute" />
  <TypeSignature Language="F#" Value="type SqlMethodAttribute = class&#xA;    inherit SqlFunctionAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlMethodAttribute extends Microsoft.SqlServer.Server.SqlFunctionAttribute" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.Server.SqlFunctionAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指示用户定义类型 (UDT) 的方法或属性的确定性和数据访问性质。 该特性的属性反映了向 SQL Server 注册该类型时所使用的实体特性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于属性， <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> 应直接在 setter 或 getter 上使用。  
  
 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> 继承自 <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute> ，因此 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> 继承了 `FillRowMethodName` 和中的 `TableDefinition` 字段 <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute> 。 请注意，虽然这些字段的名称可能会表明可能，但不能编写表值方法。  
  
   
  
## Examples  
 下面的示例演示了一个 UDT 方法，该方法具有以下特性：指示将不会在类型的 null 实例上调用此方法，该方法将不会更改该类型的状态，并且在 `null` 向方法调用提供参数时将不会调用此方法。  
  
 [!code-csharp[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>用户定义类型 (UDT) 的特性，用于指示 UDT 的方法或属性的确定性和数据访问性质。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeIfReceiverIsNull">
      <MemberSignature Language="C#" Value="public bool InvokeIfReceiverIsNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeIfReceiverIsNull" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberSignature Language="VB.NET" Value="Public Property InvokeIfReceiverIsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeIfReceiverIsNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InvokeIfReceiverIsNull : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示 SQL Server 是否应在 null 实例上调用此方法。</summary>
        <value>如果 SQL Server 应在 null 实例上调用此方法，则为 <see langword="true" />；否则为 <see langword="false" />。 如果无法调用方法 (因为) 方法上的属性，则 <see langword="DbNull" /> 返回 SQL Server。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
属性的默认值 `InvokeIfReceiverIsNull` 为 `false` 。 也就是说，不会在 null 实例上调用方法。 如果 `InvokeIfReceiverIsNull` 为 `true` ，则方法的返回值取决于其类型。 如果该方法的返回类型可以为 null，则返回该类型的可分辨 null 值。 如果返回类型不可以为 null，则返回该类型的默认 CLR 值。 引用类型的默认值为 `null` 。 值类型的默认值是调用类型的无参数构造函数时返回的值。
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutator">
      <MemberSignature Language="C#" Value="public bool IsMutator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMutator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMutator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMutator : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示用户定义类型 (UDT) 的方法是否为转变器。</summary>
        <value>如果该方法是转变器，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> 属性设置为， `true` 并且该方法的返回类型为，则 SQL Server 会将 `void` 方法标记为赋值函数。 赋值函数方法是导致 UDT 实例中的状态发生更改。 可在赋值语句或数据修改语句中调用赋值函数方法，但不能在查询中使用。 如果方法被标记为赋值函数但不返回 void，则 CREATE TYPE 不会失败并出现错误。 即使除之外的返回值不 `void` 会引发错误，返回的值也不可访问，因此无法使用。  
  
 属性的默认值 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> 为 `false` 。  
  
 如果在资源库 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> 中使用并且设置为，则属性可以是赋值函数 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> `true` 。 但是，属性 setter 将隐式视为赋值函数，因此不需要将 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> 的属性设置 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> 为 `true` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNullCall">
      <MemberSignature Language="C#" Value="public bool OnNullCall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OnNullCall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberSignature Language="VB.NET" Value="Public Property OnNullCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OnNullCall { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OnNullCall : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在方法调用中使用 <see langword="null" /> 输入参数时指示是否调用用户定义类型 (UDT) 上的方法。</summary>
        <value>如果 <see langword="null" /> 输入参数在方法调用中指定时，调用了该方法，则为 <see langword="true" />；如果任意输入参数为 <see langword="null" /> 时，该方法返回了 <see langword="null" /> 值，则为 <see langword="false" />。 如果无法调用方法 (因为) 方法上的属性，则 <see langword="DbNull" /> 返回 SQL Server。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性的默认值 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A> 为 `true` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
