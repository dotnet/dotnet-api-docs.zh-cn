<Type Name="SqlTriggerContext" FullName="Microsoft.SqlServer.Server.SqlTriggerContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bbac181f84d245f3332012ab5580b5f07b87aa13" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69303518" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlTriggerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTriggerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlTriggerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTriggerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTriggerContext sealed" />
  <TypeSignature Language="F#" Value="type SqlTriggerContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b42a1-101">提供所激发的触发器的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="b42a1-101">Provides contextual information about the trigger that was fired.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b42a1-102">提供的上下文信息包括导致触发器激发的操作的类型、在更新操作中修改的列，以及在数据定义语言（DDL）触发器的情况下，用于描述触发操作的 XML EventData 结构（请参阅[Transact-sql 引用](/sql/t-sql/language-reference)）。</span><span class="sxs-lookup"><span data-stu-id="b42a1-102">The contextual information provided includes the type of action that caused the trigger to fire, which columns were modified in an UPDATE operation, and, in the case of a data definition language (DDL) trigger, an XML EventData structure (see [Transact-SQL Reference](/sql/t-sql/language-reference)) that describes the triggering operation.</span></span>  
  
 <span data-ttu-id="b42a1-103"><xref:Microsoft.SqlServer.Server.SqlTriggerContext> <xref:Microsoft.SqlServer.Server.SqlContext> 当代码在触发器中通过属性运行时，可以从类中获取的实例 <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b42a1-103">An instance of <xref:Microsoft.SqlServer.Server.SqlTriggerContext> is available from the <xref:Microsoft.SqlServer.Server.SqlContext> class, when the code is running inside a trigger through the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b42a1-104">下面的示例演示了一个 <xref:Microsoft.SqlServer.Server.SqlTriggerContext> 对象，该对象用于确定是否发生了某个 <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> 操作。</span><span class="sxs-lookup"><span data-stu-id="b42a1-104">The following example shows a <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object being used to determine if an <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> action occurred.</span></span> <span data-ttu-id="b42a1-105">如果在的表中插入了一行 `user` ，则将从插入的行中检索用户名和真实名称，然后将其添加到**UserNameAudit**表中。</span><span class="sxs-lookup"><span data-stu-id="b42a1-105">If a row was inserted into the `user`'s table, the user name and real name are retrieved from the inserted row and then added to the **UserNameAudit** table.</span></span>  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnCount : int" Usage="Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b42a1-106">获取绑定到触发器的数据表所包含的列的数目。</span><span class="sxs-lookup"><span data-stu-id="b42a1-106">Gets the number of columns contained by the data table bound to the trigger.</span></span> <span data-ttu-id="b42a1-107">此属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="b42a1-107">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="b42a1-108">绑定到触发器的数据表所包含的列的数目（整数类型）。</span><span class="sxs-lookup"><span data-stu-id="b42a1-108">The number of columns contained by the data table bound to the trigger, as an integer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b42a1-109"><xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A>属性用于确定 <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> 允许给定触发器调用的最大序号。</span><span class="sxs-lookup"><span data-stu-id="b42a1-109"><xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A> property is useful to determine the maximum ordinal that <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> allows for a given trigger invocation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventData">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlXml EventData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlTypes.SqlXml EventData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.EventData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventData As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlXml ^ EventData { System::Data::SqlTypes::SqlXml ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventData : System.Data.SqlTypes.SqlXml" Usage="Microsoft.SqlServer.Server.SqlTriggerContext.EventData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b42a1-110">获取特定于激发触发器的操作的事件数据。</span><span class="sxs-lookup"><span data-stu-id="b42a1-110">Gets the event data specific to the action that fired the trigger.</span></span></summary>
        <value><span data-ttu-id="b42a1-111">如果有更多信息可用，则为特定于激发触发器的操作的事件数据（其形式为 <see cref="T:System.Data.SqlTypes.SqlXml" />）；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b42a1-111">The event data specific to the action that fired the trigger as a <see cref="T:System.Data.SqlTypes.SqlXml" /> if more information is available; <see langword="null" /> otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b42a1-112">此信息可用于数据定义语言（DDL）触发器。</span><span class="sxs-lookup"><span data-stu-id="b42a1-112">This information is available for data definition language (DDL) triggers.</span></span> <span data-ttu-id="b42a1-113">数据操作语言（DML）触发器的此属性不提供任何信息。</span><span class="sxs-lookup"><span data-stu-id="b42a1-113">No information is available through this property for data manipulation language (DML) triggers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatedColumn">
      <MemberSignature Language="C#" Value="public bool IsUpdatedColumn (int columnOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUpdatedColumn(int32 columnOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpdatedColumn (columnOrdinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpdatedColumn(int columnOrdinal);" />
      <MemberSignature Language="F#" Value="member this.IsUpdatedColumn : int -&gt; bool" Usage="sqlTriggerContext.IsUpdatedColumn columnOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnOrdinal"><span data-ttu-id="b42a1-114">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b42a1-114">The zero-based ordinal of the column.</span></span></param>
        <summary><span data-ttu-id="b42a1-115">如果列受 INSERT 或 UPDATE 语句的影响，则返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b42a1-115">Returns <see langword="true" /> if a column was affected by an INSERT or UPDATE statement.</span></span></summary>
        <returns><span data-ttu-id="b42a1-116">如果列受 INSERT 或 UPDATE 操作的影响，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b42a1-116"><see langword="true" /> if the column was affected by an INSERT or UPDATE operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b42a1-117">在触发器的上下文中被调用，其中 <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> 属性的值不是 <see langword="Insert" /> 或 <see langword="Update" />。</span><span class="sxs-lookup"><span data-stu-id="b42a1-117">Called in the context of a trigger where the value of the <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> property is not <see langword="Insert" /> or <see langword="Update" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerAction">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.TriggerAction TriggerAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.TriggerAction TriggerAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TriggerAction As TriggerAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::TriggerAction TriggerAction { Microsoft::SqlServer::Server::TriggerAction get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerAction : Microsoft.SqlServer.Server.TriggerAction" Usage="Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.TriggerAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b42a1-118">指示激发触发器的操作。</span><span class="sxs-lookup"><span data-stu-id="b42a1-118">Indicates what action fired the trigger.</span></span></summary>
        <value><span data-ttu-id="b42a1-119">激发触发器的操作，形式为 <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />。</span><span class="sxs-lookup"><span data-stu-id="b42a1-119">The action that fired the trigger as a <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b42a1-120">下面的示例演示了一个审核触发器。</span><span class="sxs-lookup"><span data-stu-id="b42a1-120">The following example shows an auditing trigger.</span></span> <span data-ttu-id="b42a1-121">如果 <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> 发生了或 <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> 操作，则会从插入的表和删除的表中检索受影响的行。</span><span class="sxs-lookup"><span data-stu-id="b42a1-121">If an <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> or <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> action occurred, the affected rows are retrieved from the INSERTED and DELETED tables.</span></span>  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#2)]
 [!code-vb[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
