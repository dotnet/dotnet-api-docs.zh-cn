<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f261a9c5fa0b56130845f586aceb40db77bb5f2d" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83955015" /></Metadata><TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="1df71-101">由 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> 和 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> 用来指示用户定义类型 (UDT) 或聚合的序列化格式。</span><span class="sxs-lookup"><span data-stu-id="1df71-101">Used by <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> and <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="1df71-102">此枚举由和用于 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> 指示用户定义类型（UDT）或聚合的序列化格式。</span><span class="sxs-lookup"><span data-stu-id="1df71-102">This enumeration is used by <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> and <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span></span> <span data-ttu-id="1df71-103">`Native`和 `UserDefined` 枚举成员的使用具有特殊要求。</span><span class="sxs-lookup"><span data-stu-id="1df71-103">Use of the `Native` and `UserDefined` enumeration members has special requirements.</span></span>   

- `Format.Native`

   <span data-ttu-id="1df71-104">格式的要求如下 `Format.Native` ：</span><span class="sxs-lookup"><span data-stu-id="1df71-104">The requirements for the `Format.Native` format are:</span></span>  
  
   - <span data-ttu-id="1df71-105"><xref:System.Runtime.InteropServices.StructLayoutAttribute> <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value> 如果属性值为，则 <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> 必须将其应用到聚合或 UDT （如果它是在类中定义的，而不是在结构中定义的）。</span><span class="sxs-lookup"><span data-stu-id="1df71-105">The <xref:System.Runtime.InteropServices.StructLayoutAttribute> with a <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value> property value of <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> must be applied to the aggregate or UDT if it is defined in a class and not a structure.</span></span> <span data-ttu-id="1df71-106">这会控制数据字段的物理布局，并用于强制成员按其出现的顺序进行排列。</span><span class="sxs-lookup"><span data-stu-id="1df71-106">This controls the physical layout of the data fields and is used to force the members to be laid out sequentially in the order they appear.</span></span> <span data-ttu-id="1df71-107">SQL Server 使用此属性确定具有多个字段的 Udt 的字段顺序。</span><span class="sxs-lookup"><span data-stu-id="1df71-107">SQL Server uses this attribute to determine the field order for UDTs with multiple fields.</span></span>
  
   - <span data-ttu-id="1df71-108">该类型必须包含至少一个成员（序列化值的大小不能为零个字节）。</span><span class="sxs-lookup"><span data-stu-id="1df71-108">The type must contain at least one member (serialized values cannot be zero bytes in size).</span></span>  
  
   - <span data-ttu-id="1df71-109">聚合的所有字段必须是可*复制*的;也就是说，它们必须在托管内存和非托管内存中都有共同的表示形式，并且不需要互操作封送拆收器进行特殊处理。</span><span class="sxs-lookup"><span data-stu-id="1df71-109">All the fields of the aggregate must be *blittable*; that is, they must have a common representation in both managed and unmanaged memory and not require special handling by the interop marshaler.</span></span>  
  
   - <span data-ttu-id="1df71-110">UDT 的所有字段应为以下类型之一：、、、、、、、、、、、、、、、、、、 `bool` `byte` `sbyte` `short` `ushort` `int` `uint` `long` `ulong` `float` `double` <xref:System.Data.SqlTypes.SqlByte> <xref:System.Data.SqlTypes.SqlInt16> <xref:System.Data.SqlTypes.SqlInt32> <xref:System.Data.SqlTypes.SqlInt64> <xref:System.Data.SqlTypes.SqlDateTime> <xref:System.Data.SqlTypes.SqlSingle> <xref:System.Data.SqlTypes.SqlDouble> <xref:System.Data.SqlTypes.SqlMoney> 或由包含其中一种类型的字段的用户定义的值类型。</span><span class="sxs-lookup"><span data-stu-id="1df71-110">All the fields of the UDT should be of one of the following types that can be serialized: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, or other value types defined by the user that contain fields of one of these types.</span></span>  

   - <span data-ttu-id="1df71-111">聚合不得为指定值 `MaxByteSize` 。</span><span class="sxs-lookup"><span data-stu-id="1df71-111">The aggregate must not specify a value for `MaxByteSize`.</span></span>  
  
   - <span data-ttu-id="1df71-112">聚合不能包含任何 [非系列化] 字段。</span><span class="sxs-lookup"><span data-stu-id="1df71-112">The aggregate must not have any [NonSerialized] fields.</span></span>  
  
   - <span data-ttu-id="1df71-113">字段不能标记为显式布局（具有 <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value?displayProperty=nameWithType> 的 <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> ）。</span><span class="sxs-lookup"><span data-stu-id="1df71-113">Fields must not be marked as an explicit layout (with a <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value?displayProperty=nameWithType> of <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>).</span></span>  

- `Format.UserDefined`

   <span data-ttu-id="1df71-114">格式的要求如下 `Format.UserDefined` ：</span><span class="sxs-lookup"><span data-stu-id="1df71-114">The requirements for the `Format.UserDefined` format are:</span></span>

   - <span data-ttu-id="1df71-115">聚合必须为指定一个值 `MaxByteSize` 。</span><span class="sxs-lookup"><span data-stu-id="1df71-115">The aggregate must specify a value for `MaxByteSize`.</span></span>  
  
   - <span data-ttu-id="1df71-116">指定 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A?displayProperty=nameWithType> 特性属性。</span><span class="sxs-lookup"><span data-stu-id="1df71-116">Specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A?displayProperty=nameWithType> attribute property.</span></span> <span data-ttu-id="1df71-117">默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="1df71-117">The default value is `false`.</span></span>  
  
   - <span data-ttu-id="1df71-118">如果省略或方法中的任何 <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A?displayProperty=nameWithType> 字段 <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A?displayProperty=nameWithType> ，则不会序列化该字段的状态。</span><span class="sxs-lookup"><span data-stu-id="1df71-118">If you omit any field in the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A?displayProperty=nameWithType> or <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A?displayProperty=nameWithType> methods, the state of that field is not serialized.</span></span>  

## Examples  

<span data-ttu-id="1df71-119">下面的示例演示 `UserDefinedType` 点 UDT 的特性。</span><span class="sxs-lookup"><span data-stu-id="1df71-119">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="1df71-120">UDT 按字节顺序排序，命名为 "Point"，包含一个名为 "ValidatePoint" 的验证方法，并使用本机序列化格式。</span><span class="sxs-lookup"><span data-stu-id="1df71-120">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
[!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
[!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1df71-121">此序列化格式使用非常简单的算法，以便于 SQL Server 能够在磁盘上存储 UDT 的高效表示形式。</span><span class="sxs-lookup"><span data-stu-id="1df71-121">This serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk.</span></span> <span data-ttu-id="1df71-122">标记为 <see langword="Native" /> 序列化的类型只能将值类型（在 Microsoft Visual C# 中为 struct，在 Microsoft Visual Basic .NET 中为 structure）用作成员。</span><span class="sxs-lookup"><span data-stu-id="1df71-122">Types marked for <see langword="Native" /> serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members.</span></span> <span data-ttu-id="1df71-123">不支持引用类型（如 Visual C# 和 Visual Basic 中的类）的成员，无论是用户定义的成员，还是 .NET 类库中的现有成员（如 <see cref="T:System.String" />）。</span><span class="sxs-lookup"><span data-stu-id="1df71-123">Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in .NET class libraries (such as <see cref="T:System.String" />), are not supported.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1df71-124">该序列化格式是未知的。</span><span class="sxs-lookup"><span data-stu-id="1df71-124">The serialization format is unknown.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1df71-125">使用此序列化格式，开发人员可以通过 <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)" /> 和 <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)" /> 方法完全控制二进制格式。</span><span class="sxs-lookup"><span data-stu-id="1df71-125">This serialization format gives the developer full control over the binary format through the <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)" /> and <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)" /> methods.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
