<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="86736fb4a2c854d1a86cf49301c9fc734cd3de23" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86623101" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlUserDefinedTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlUserDefinedTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SqlUserDefinedTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8ee61-101">用于将程序集中的类型定义标记为 SQL Server 中的用户定义类型 (UDT)。</span><span class="sxs-lookup"><span data-stu-id="8ee61-101">Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server.</span></span> <span data-ttu-id="8ee61-102">该特性的属性反映了向 SQL Server 注册该类型时所使用的实体特征。</span><span class="sxs-lookup"><span data-stu-id="8ee61-102">The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.</span></span> <span data-ttu-id="8ee61-103">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="8ee61-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ee61-104">SQL Server 创建一个用户定义的类型，该类型绑定到具有 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> 自定义属性的类型定义。</span><span class="sxs-lookup"><span data-stu-id="8ee61-104">SQL Server creates a user-defined type that is bound to the type definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> custom attribute.</span></span> <span data-ttu-id="8ee61-105">每个 UDT 都必须用此属性进行批注。</span><span class="sxs-lookup"><span data-stu-id="8ee61-105">Every UDT must be annotated with this attribute.</span></span> <span data-ttu-id="8ee61-106">有关 Udt 的详细信息（包括 UDT 的示例），请参阅 [CLR 用户定义类型](https://go.microsoft.com/fwlink/?LinkId=128028) 。</span><span class="sxs-lookup"><span data-stu-id="8ee61-106">See [CLR User-Defined Types](https://go.microsoft.com/fwlink/?LinkId=128028) for more information about UDTs, including an example of a UDT.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ee61-107">下面的示例演示 `UserDefinedType` 点 UDT 的特性。</span><span class="sxs-lookup"><span data-stu-id="8ee61-107">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="8ee61-108">UDT 按字节顺序排序，命名为 "Point"，包含一个名为 "ValidatePoint" 的验证方法，并使用本机序列化格式。</span><span class="sxs-lookup"><span data-stu-id="8ee61-108">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlUserDefinedTypeAttribute(Microsoft::SqlServer::Server::Format format);" />
      <MemberSignature Language="F#" Value="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute : Microsoft.SqlServer.Server.Format -&gt; Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" Usage="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute format" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8ee61-109"><see cref="T:Microsoft.SqlServer.Server.Format" /> 值之一，表示类型的序列化格式。</span><span class="sxs-lookup"><span data-stu-id="8ee61-109">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the type.</span></span></param>
        <summary><span data-ttu-id="8ee61-110">用户定义类型 (UDT) 的一个必需特性，用于确认给定的类型属于 UDT 并指示 UDT 的存储格式。</span><span class="sxs-lookup"><span data-stu-id="8ee61-110">A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ee61-111">下面的示例指定， `Format` 用户定义类型的为 `SerializedDataWithMetadata` ，且 `MaxByteSize` 为8000字节。</span><span class="sxs-lookup"><span data-stu-id="8ee61-111">The following example specifies that the `Format` of the user-defined type is `SerializedDataWithMetadata` and the `MaxByteSize` is 8000 bytes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::Format Format { Microsoft::SqlServer::Server::Format get(); };" />
      <MemberSignature Language="F#" Value="member this.Format : Microsoft.SqlServer.Server.Format" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ee61-112">序列化格式为 <see cref="T:Microsoft.SqlServer.Server.Format" /> 的值之一。</span><span class="sxs-lookup"><span data-stu-id="8ee61-112">The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</span></span></summary>
        <value><span data-ttu-id="8ee61-113">一个 <see cref="T:Microsoft.SqlServer.Server.Format" /> 值，表示序列化格式。</span><span class="sxs-lookup"><span data-stu-id="8ee61-113">A <see cref="T:Microsoft.SqlServer.Server.Format" /> value representing the serialization format.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsByteOrdered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByteOrdered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsByteOrdered : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ee61-114">指示用户定义的类型是否根据字节进行排序。</span><span class="sxs-lookup"><span data-stu-id="8ee61-114">Indicates whether the user-defined type is byte ordered.</span></span></summary>
        <value><span data-ttu-id="8ee61-115">如果用户定义的类型是按字节进行排序的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ee61-115"><see langword="true" /> if the user-defined type is byte ordered; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ee61-116">如果设置为 `true` ，则 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> 有效的属性可确保序列化的二进制数据可用于信息的语义排序。</span><span class="sxs-lookup"><span data-stu-id="8ee61-116">When set to `true`, the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> property in effect guarantees that the serialized binary data can be used for semantic ordering of the information.</span></span> <span data-ttu-id="8ee61-117">因此，以字节排序的 UDT 对象的每个实例只能有一种序列化表示形式。</span><span class="sxs-lookup"><span data-stu-id="8ee61-117">Thus, each instance of a byte-ordered UDT object can only have one serialized representation.</span></span> <span data-ttu-id="8ee61-118">当在序列化的字节 SQL Server 上执行比较运算时，其结果应与在托管代码中进行相同的比较操作时的结果相同。</span><span class="sxs-lookup"><span data-stu-id="8ee61-118">When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code.</span></span>  
  
 <span data-ttu-id="8ee61-119">当设置为时，支持以下功能 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> `true` ：</span><span class="sxs-lookup"><span data-stu-id="8ee61-119">The following features are supported when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="8ee61-120">可以对此类型的列创建索引。</span><span class="sxs-lookup"><span data-stu-id="8ee61-120">The ability to create indexes on columns of this type.</span></span>  
  
-   <span data-ttu-id="8ee61-121">可以对此类型的列创建主键和外键以及 CHECK 和 UNIQUE 约束。</span><span class="sxs-lookup"><span data-stu-id="8ee61-121">The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.</span></span>  
  
-   <span data-ttu-id="8ee61-122">使用 Transact-sql ORDER BY、GROUP BY 和 PARTITION BY 子句的功能。</span><span class="sxs-lookup"><span data-stu-id="8ee61-122">The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses.</span></span> <span data-ttu-id="8ee61-123">此时，将使用该类型的二进制表示形式确定顺序。</span><span class="sxs-lookup"><span data-stu-id="8ee61-123">In these cases, the binary representation of the type is used to determine the order.</span></span>  
  
-   <span data-ttu-id="8ee61-124">可以在 Transact-sql 语句中使用比较运算符。</span><span class="sxs-lookup"><span data-stu-id="8ee61-124">The ability to use comparison operators in Transact-SQL statements.</span></span>  
  
-   <span data-ttu-id="8ee61-125">可以保持此类型的计算列。</span><span class="sxs-lookup"><span data-stu-id="8ee61-125">The ability to persist computed columns of this type.</span></span>  
  
 <span data-ttu-id="8ee61-126">请注意，如果将 `Native` 设置为 `UserDefined`，<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> 和 `true` 序列化格式将支持以下比较运算符：</span><span class="sxs-lookup"><span data-stu-id="8ee61-126">Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="8ee61-127">等于 (=)</span><span class="sxs-lookup"><span data-stu-id="8ee61-127">Equal to (=)</span></span>  
  
-   <span data-ttu-id="8ee61-128">不等于 (!=)</span><span class="sxs-lookup"><span data-stu-id="8ee61-128">Not equal to (!=)</span></span>  
  
-   <span data-ttu-id="8ee61-129">大于号 (>)</span><span class="sxs-lookup"><span data-stu-id="8ee61-129">Greater than (>)</span></span>  
  
-   <span data-ttu-id="8ee61-130">小于号 (\<)</span><span class="sxs-lookup"><span data-stu-id="8ee61-130">Less than (\<)</span></span>  
  
-   <span data-ttu-id="8ee61-131">大于或等于 (>=)</span><span class="sxs-lookup"><span data-stu-id="8ee61-131">Greater than or equal to (>=)</span></span>  
  
-   <span data-ttu-id="8ee61-132">小于或等于 (&lt;=)</span><span class="sxs-lookup"><span data-stu-id="8ee61-132">Less than or equal to (<=)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedLength { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedLength : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ee61-133">指示此用户定义类型的所有实例是否都具有相同的长度。</span><span class="sxs-lookup"><span data-stu-id="8ee61-133">Indicates whether all instances of this user-defined type are the same length.</span></span></summary>
        <value><span data-ttu-id="8ee61-134">如果此类型的所有实例都具有相同的长度，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ee61-134"><see langword="true" /> if all instances of this type are the same length; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ee61-135">如果设置为 `true` ，则与此公共语言运行时 (CLR) 类型对应的 udt 的所有实例的长度必须正好等于 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8ee61-135">If set to `true`, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</span></span> <span data-ttu-id="8ee61-136">此属性仅适用于具有 `UserDefined` 序列化的 udt <xref:Microsoft.SqlServer.Server.Format> 。</span><span class="sxs-lookup"><span data-stu-id="8ee61-136">This attribute is only relevant for UDTs with `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxByteSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxByteSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxByteSize : int with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ee61-137">实例的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="8ee61-137">The maximum size of the instance, in bytes.</span></span></summary>
        <value><span data-ttu-id="8ee61-138">一个 <see cref="T:System.Int32" /> 值，表示实例的最大大小。</span><span class="sxs-lookup"><span data-stu-id="8ee61-138">An <see cref="T:System.Int32" /> value representing the maximum size of the instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ee61-139">您必须指定 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> 具有 `UserDefined` 序列化的属性 <xref:Microsoft.SqlServer.Server.Format> 。</span><span class="sxs-lookup"><span data-stu-id="8ee61-139">You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> property with the `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 <span data-ttu-id="8ee61-140">连接到 SQL Server 2005 或更早版本时， <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> 必须介于1和8000之间。</span><span class="sxs-lookup"><span data-stu-id="8ee61-140">When connecting to SQL Server 2005 or earlier, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> must be between 1 and 8000.</span></span>  
  
 <span data-ttu-id="8ee61-141">连接到 SQL Server 2008 或更高版本时，请在 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> 1 到8000之间设置，该类型的实例始终是8000字节或更少。</span><span class="sxs-lookup"><span data-stu-id="8ee61-141">When connecting to SQL Server 2008 or later, set <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> between 1 and 8000, for a type whose instances are always 8,000 bytes or less.</span></span> <span data-ttu-id="8ee61-142">对于可能具有大于8000的实例的类型，请指定-1。</span><span class="sxs-lookup"><span data-stu-id="8ee61-142">For types that can have instances larger than 8000, specify -1.</span></span>  
  
 <span data-ttu-id="8ee61-143">对于指定了用户定义的序列化的 UDT，<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> 是指采用用户定义的序列化格式的 UDT 的总大小。</span><span class="sxs-lookup"><span data-stu-id="8ee61-143">For a UDT with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> refers to the total size of the UDT in its serialized form as defined by the user.</span></span> <span data-ttu-id="8ee61-144">考虑这样一个 UDT：它有一个由 10 个字符组成的字符串属性 (<xref:System.Char>)。</span><span class="sxs-lookup"><span data-stu-id="8ee61-144">Consider a UDT with a property of a string of 10 characters (<xref:System.Char>).</span></span> <span data-ttu-id="8ee61-145">使用对 UDT 进行序列化时 <xref:System.IO.BinaryWriter> ，序列化字符串的总大小为22字节：每个 UNICODE utf-16 字符2个字节，乘以最大字符数，再加上序列化二进制流时产生的2个控制字节。</span><span class="sxs-lookup"><span data-stu-id="8ee61-145">When the UDT is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream.</span></span> <span data-ttu-id="8ee61-146">因此，在确定的值时 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> ，必须考虑序列化 UDT 的总大小：以二进制形式序列化的数据的大小加上序列化导致的开销。</span><span class="sxs-lookup"><span data-stu-id="8ee61-146">So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.</span></span>  
  
 <span data-ttu-id="8ee61-147">此属性不应与 `Native` 序列化一起使用 <xref:Microsoft.SqlServer.Server.Format> 。</span><span class="sxs-lookup"><span data-stu-id="8ee61-147">This property should not be used with `Native` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ee61-148">用户定义类型的 SQL Server 名称。</span><span class="sxs-lookup"><span data-stu-id="8ee61-148">The SQL Server name of the user-defined type.</span></span></summary>
        <value><span data-ttu-id="8ee61-149">一个 <see cref="T:System.String" /> 值，表示用户定义类型的 SQL Server 名称。</span><span class="sxs-lookup"><span data-stu-id="8ee61-149">A <see cref="T:System.String" /> value representing the SQL Server name of the user-defined type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ee61-150"><xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A>SQL Server 中不使用属性，但它由 Microsoft Visual Studio .Net 集成开发环境 (IDE) 使用。</span><span class="sxs-lookup"><span data-stu-id="8ee61-150">The <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationMethodName : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ee61-151">方法的名称，该方法用于验证用户定义类型的实例。</span><span class="sxs-lookup"><span data-stu-id="8ee61-151">The name of the method used to validate instances of the user-defined type.</span></span></summary>
        <value><span data-ttu-id="8ee61-152">一个 <see cref="T:System.String" />，表示用于验证用户定义类型的实例的方法名称。</span><span class="sxs-lookup"><span data-stu-id="8ee61-152">A <see cref="T:System.String" /> representing the name of the method used to validate instances of the user-defined type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ee61-153">此特性指定的方法将验证 udt 的实例是否从不可信的二进制值反序列化。</span><span class="sxs-lookup"><span data-stu-id="8ee61-153">The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
