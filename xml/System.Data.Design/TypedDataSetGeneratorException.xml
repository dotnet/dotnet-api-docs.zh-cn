<Type Name="TypedDataSetGeneratorException" FullName="System.Data.Design.TypedDataSetGeneratorException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc43c9c9225839687006af4d953782f31171cce3" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83967653" /></Metadata><TypeSignature Language="C#" Value="public class TypedDataSetGeneratorException : System.Data.DataException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypedDataSetGeneratorException extends System.Data.DataException" />
  <TypeSignature Language="DocId" Value="T:System.Data.Design.TypedDataSetGeneratorException" />
  <TypeSignature Language="VB.NET" Value="Public Class TypedDataSetGeneratorException&#xA;Inherits DataException" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypedDataSetGeneratorException : System::Data::DataException" />
  <TypeSignature Language="F#" Value="type TypedDataSetGeneratorException = class&#xA;    inherit DataException" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.DataException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在生成强类型 <see cref="T:System.Data.DataSet" /> 时发生名称冲突的情况下引发的异常。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Design.TypedDataSetGeneratorException> 类指示在尝试生成类型化数据集类时出现冲突。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Design.TypedDataSetGeneratorException> 类指示在尝试生成类型化数据集类时出现冲突。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypedDataSetGeneratorException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGeneratorException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypedDataSetGeneratorException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用说明错误的系统提供的消息初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数将新实例的 <xref:System.Exception.Message%2A> 属性初始化为系统提供的描述错误的消息，如 "DefaultMessageDisplayedByParameterlessCtorWriterMustSupply"。此消息将考虑当前系统区域性。  
  
 下表显示了 <xref:System.InsufficientMemoryException> 实例的初始属性值。  
  
|属性|值|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null` 列中的一个值匹配。|  
|<xref:System.Exception.Message%2A>|本地化的错误消息字符串。|  
  
 <xref:System.Data.Design.TypedDataSetGeneratorException> 类指示在尝试生成类型化数据集类时出现冲突。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypedDataSetGeneratorException (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (list As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypedDataSetGeneratorException(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="new System.Data.Design.TypedDataSetGeneratorException : System.Collections.IList -&gt; System.Data.Design.TypedDataSetGeneratorException" Usage="new System.Data.Design.TypedDataSetGeneratorException list" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">错误的 <see cref="T:System.Collections.IList" />。</param>
        <summary>通过传入错误集合初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Design.TypedDataSetGeneratorException> 类指示在尝试生成类型化数据集类时出现冲突。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypedDataSetGeneratorException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypedDataSetGeneratorException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Data.Design.TypedDataSetGeneratorException : string -&gt; System.Data.Design.TypedDataSetGeneratorException" Usage="new System.Data.Design.TypedDataSetGeneratorException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">描述异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
        <summary>使用说明错误的指定消息初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示了 <xref:System.Data.Design.TypedDataSetGeneratorException> 实例的初始属性值。  
  
|属性|值|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null` 列中的一个值匹配。|  
|<xref:System.Exception.Message%2A>|`message` 中指定的错误消息字符串。|  
  
 <xref:System.Data.Design.TypedDataSetGeneratorException> 类指示在尝试生成类型化数据集类时出现冲突。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypedDataSetGeneratorException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypedDataSetGeneratorException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Data.Design.TypedDataSetGeneratorException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Data.Design.TypedDataSetGeneratorException" Usage="new System.Data.Design.TypedDataSetGeneratorException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
        <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构。</param>
        <summary>使用指定的序列化信息和流上下文初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在反序列化期间调用此构造函数以重新构造在流上传输的异常对象。 有关详细信息，请参阅[XML 和 SOAP 序列化](/dotnet/standard/serialization/xml-and-soap-serialization)。 <xref:System.Data.Design.TypedDataSetGeneratorException> 类指示在尝试生成类型化数据集类时出现冲突。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypedDataSetGeneratorException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypedDataSetGeneratorException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Data.Design.TypedDataSetGeneratorException : string * Exception -&gt; System.Data.Design.TypedDataSetGeneratorException" Usage="new System.Data.Design.TypedDataSetGeneratorException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">描述异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
        <param name="innerException">引起当前异常的异常。 如果 <paramref name="innerException" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</param>
        <summary>使用指定的字符串和内部异常初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作为前一个异常的直接结果引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。 <xref:System.Exception.InnerException%2A> 属性将返回传递给构造函数的同一值；如果 <xref:System.Exception.InnerException%2A> 属性不向构造函数提供内部异常值，则返回 `null`。  
  
 下表显示了 <xref:System.Data.Design.TypedDataSetGeneratorException> 实例的初始属性值。  
  
|属性|值|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null` 列中的一个值匹配。|  
|<xref:System.Exception.Message%2A>|`message` 中指定的错误消息字符串。|  
  
 <xref:System.Data.Design.TypedDataSetGeneratorException> 类指示在尝试生成类型化数据集类时出现冲突。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorList">
      <MemberSignature Language="C#" Value="public System.Collections.IList ErrorList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList ErrorList" />
      <MemberSignature Language="DocId" Value="P:System.Data.Design.TypedDataSetGeneratorException.ErrorList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorList As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ ErrorList { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorList : System.Collections.IList" Usage="System.Data.Design.TypedDataSetGeneratorException.ErrorList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取生成的错误的动态列表。</summary>
        <value>错误列表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Design.TypedDataSetGeneratorException> 类指示在尝试生成类型化数据集类时出现冲突。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="typedDataSetGeneratorException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
        <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构。</param>
        <summary>实现 <see langword="ISerializable" /> 接口并返回序列化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 对象所必需的数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在反序列化期间调用此构造函数以重新构造在流上传输的异常对象。 有关详细信息，请参阅[XML 和 SOAP 序列化](/dotnet/standard/serialization/xml-and-soap-serialization)。 <xref:System.Data.Design.TypedDataSetGeneratorException> 类指示在尝试生成类型化数据集类时出现冲突。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
