<Type Name="MsmqMessage&lt;T&gt;" FullName="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d212fcab4220c4d4d0d69d345a1254db7548018" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89691866" /></Metadata><TypeSignature Language="C#" Value="public sealed class MsmqMessage&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MsmqMessage`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MsmqMessage(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class MsmqMessage sealed" />
  <TypeSignature Language="F#" Value="type MsmqMessage&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ServiceModel.MessageContract(IsWrapped=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ServiceModel.MessageContract(IsWrapped=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="bc60c-101">表示消息正文。</span><span class="sxs-lookup"><span data-stu-id="bc60c-101">Represents the message body.</span></span></typeparam>
    <summary><span data-ttu-id="bc60c-102"><see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> 类可对通过消息队列集成通道，发送往现有消息队列应用程序的消息队列 (MSMQ) 消息和从现有消息队列应用程序接收的消息队列 (MSMQ) 消息进行封装。</span><span class="sxs-lookup"><span data-stu-id="bc60c-102">The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> class encapsulates aMessage Queuing (MSMQ) message that is sent and received, over a Message Queuing integration channel, to and from an existing Message Queuing application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-103">使用 <xref:System.ServiceModel.MsmqIntegration.MsmqMessage%601> 类可以访问消息队列消息的属性。</span><span class="sxs-lookup"><span data-stu-id="bc60c-103">Use the <xref:System.ServiceModel.MsmqIntegration.MsmqMessage%601> class to access the properties of the Message Queuing message.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#1](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#1)]
 [!code-vb[UEMsmqMessage#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bc60c-104">消息正文为 null。</span><span class="sxs-lookup"><span data-stu-id="bc60c-104">Message body is null.</span></span></exception>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsmqMessage (T body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqMessage`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MsmqMessage(T body);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt; : 'T -&gt; System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;" Usage="new System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt; body" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="T" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="bc60c-105">用以初始化 <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> 类的新实例的消息正文。</span><span class="sxs-lookup"><span data-stu-id="bc60c-105">The message body with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> class.</span></span></param>
        <summary><span data-ttu-id="bc60c-106">利用所提供的消息正文初始化 <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bc60c-106">Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> class with the provided message body.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-107">可以利用 T 类型的正文构造消息队列 (MSMQ) 消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-107">A Message Queuing (MSMQ) message can be constructed with a body of type T.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#2](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#2)]
 [!code-vb[UEMsmqMessage#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bc60c-108">消息正文为 null。</span><span class="sxs-lookup"><span data-stu-id="bc60c-108">Message body is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public System.Messaging.AcknowledgeTypes? AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Messaging.AcknowledgeTypes&gt; AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AcknowledgeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgeType As Nullable(Of AcknowledgeTypes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Messaging::AcknowledgeTypes&gt; AcknowledgeType { Nullable&lt;System::Messaging::AcknowledgeTypes&gt; get(); void set(Nullable&lt;System::Messaging::AcknowledgeTypes&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.AcknowledgeType : Nullable&lt;System.Messaging.AcknowledgeTypes&gt; with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.AcknowledgeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Messaging.AcknowledgeTypes&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-109">获取或设置与此消息关联的 <see cref="T:System.Messaging.AcknowledgeTypes" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-109">Gets or sets the <see cref="T:System.Messaging.AcknowledgeTypes" /> that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="bc60c-110">与此消息关联的 <see cref="T:System.Messaging.AcknowledgeTypes" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-110">The <see cref="T:System.Messaging.AcknowledgeTypes" /> that is associated with this message.</span></span> <span data-ttu-id="bc60c-111">可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-111">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-112">此属性可以指定发送应用程序所请求的确认消息的类型。</span><span class="sxs-lookup"><span data-stu-id="bc60c-112">This property specifies the type of acknowledgment messages that are requested by the sending application.</span></span> <span data-ttu-id="bc60c-113">该应用程序可使用此属性来请求某些事件的通知。</span><span class="sxs-lookup"><span data-stu-id="bc60c-113">The application can use this property to request notification of certain events.</span></span> <span data-ttu-id="bc60c-114">例如，该应用程序可能会希望在出现以下情况时收到通知：消息到达目标队列、检索消息、或消息到达目标队列或被检索到之前超时。</span><span class="sxs-lookup"><span data-stu-id="bc60c-114">For example, the application might want to be notified when the message reaches its destination queue, when the message is retrieved, or if the message times out before it reaches its destination queue or is retrieved.</span></span> <span data-ttu-id="bc60c-115">有关成员的详细信息，请参见 <xref:System.Messaging.AcknowledgeTypes>。</span><span class="sxs-lookup"><span data-stu-id="bc60c-115">For member details, see <xref:System.Messaging.AcknowledgeTypes>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#3](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#3)]
 [!code-vb[UEMsmqMessage#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acknowledgment">
      <MemberSignature Language="C#" Value="public System.Messaging.Acknowledgment? Acknowledgment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Messaging.Acknowledgment&gt; Acknowledgment" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Acknowledgment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Acknowledgment As Nullable(Of Acknowledgment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Messaging::Acknowledgment&gt; Acknowledgment { Nullable&lt;System::Messaging::Acknowledgment&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Acknowledgment : Nullable&lt;System.Messaging.Acknowledgment&gt;" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Acknowledgment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Messaging.Acknowledgment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-116">获取与此消息关联的 <see cref="T:System.Messaging.Acknowledgment" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-116">Gets the <see cref="T:System.Messaging.Acknowledgment" /> that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="bc60c-117">与此消息关联的 <see cref="T:System.Messaging.Acknowledgment" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-117">The <see cref="T:System.Messaging.Acknowledgment" /> that is associated with this message.</span></span> <span data-ttu-id="bc60c-118">默认值是 Acknowledgement.None。</span><span class="sxs-lookup"><span data-stu-id="bc60c-118">The default value is Acknowledgement.None.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-119">接收来自管理队列的消息时，此值可用于验证原始消息的状态。</span><span class="sxs-lookup"><span data-stu-id="bc60c-119">When you receive a message from an administration queue, you can use this property to verify the status of the original message.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#4](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#4)]
 [!code-vb[UEMsmqMessage#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public Uri AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AdministrationQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property AdministrationQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ AdministrationQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdministrationQueue : Uri with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.AdministrationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-120">获取或设置与此消息关联的管理队列的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-120">Gets or sets the <see cref="T:System.Uri" /> of the administration queue that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="bc60c-121">与此消息关联的管理队列的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-121">The <see cref="T:System.Uri" /> of the administration queue that is associated with this message.</span></span> <span data-ttu-id="bc60c-122">默认值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-122">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-123">与消息关联的管理队列将会接收所有指示原始消息是否已到达其目标队列以及是否已从队列中移除的确认消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-123">The administration queue that is associated with a message will receive any acknowledgment messages that indicate whether the original message reached its destination queue and whether it has been removed from the queue.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#5](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#5)]
 [!code-vb[UEMsmqMessage#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public int? AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AppSpecific" />
      <MemberSignature Language="VB.NET" Value="Public Property AppSpecific As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; AppSpecific { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.AppSpecific : Nullable&lt;int&gt; with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.AppSpecific" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-124">获取或设置一个 <see cref="T:System.Int32" /> 值，该值可表示与此消息关联的应用程序特定的任何附加信息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-124">Gets or sets an <see cref="T:System.Int32" /> value that represents any additional application-specific information that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="bc60c-125">一个 <see cref="T:System.Int32" /> 值，该值可表示与此消息关联的应用程序特定的任何附加信息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-125">An <see cref="T:System.Int32" /> value that represents any additional application-specific information that is associated with this message.</span></span> <span data-ttu-id="bc60c-126">发送应用程序访问时，默认值是 <see langword="null" />；接收应用程序访问时，默认值是 0。</span><span class="sxs-lookup"><span data-stu-id="bc60c-126">The default value is <see langword="null" /> when accessed by the sending application and 0 when accessed by the receiving application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEMsmqMessage#6](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#6)]
 [!code-vb[UEMsmqMessage#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrivedTime">
      <MemberSignature Language="C#" Value="public DateTime? ArrivedTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; ArrivedTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.ArrivedTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArrivedTime As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; ArrivedTime { Nullable&lt;DateTime&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ArrivedTime : Nullable&lt;DateTime&gt;" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.ArrivedTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-127">获取或设置一个 <see cref="T:System.DateTime" />，它指示消息到达目标队列的时间。</span><span class="sxs-lookup"><span data-stu-id="bc60c-127">Gets or sets a <see cref="T:System.DateTime" /> that indicates when the message arrived in the destination queue.</span></span></summary>
        <value><span data-ttu-id="bc60c-128">一个指示消息到达目标队列的时间的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-128">A <see cref="T:System.DateTime" /> that indicates when the message arrived in the destination queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEMsmqMessage#7](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#7)]
 [!code-vb[UEMsmqMessage#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool? Authenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authenticated As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Authenticated { Nullable&lt;bool&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : Nullable&lt;bool&gt;" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-129">获取一个布尔值，该值指示消息是否已验证。</span><span class="sxs-lookup"><span data-stu-id="bc60c-129">Gets a Boolean value that indicates whether the message is authenticated.</span></span></summary>
        <value><span data-ttu-id="bc60c-130">如果消息已验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-130"><see langword="true" /> if the message is authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-131">如果发送方请求验证，或向配置为需要验证的消息队列发送消息，则就会进行消息验证。</span><span class="sxs-lookup"><span data-stu-id="bc60c-131">A message is authenticated when the sender requests authentication or sends the message to a message queue that is configured to require authentication.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#8](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#8)]
 [!code-vb[UEMsmqMessage#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public T Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Body" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Body { T get(); void set(T value); };" />
      <MemberSignature Language="F#" Value="member this.Body : 'T with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-132">获取或设置消息的正文。</span><span class="sxs-lookup"><span data-stu-id="bc60c-132">Gets or sets the body of the message.</span></span></summary>
        <value><span data-ttu-id="bc60c-133">消息正文。</span><span class="sxs-lookup"><span data-stu-id="bc60c-133">The body of the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEMsmqMessage#9](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#9)]
 [!code-vb[UEMsmqMessage#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bc60c-134">消息正文为 null。</span><span class="sxs-lookup"><span data-stu-id="bc60c-134">Message body is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BodyType">
      <MemberSignature Language="C#" Value="public int? BodyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; BodyType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.BodyType" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyType As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; BodyType { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.BodyType : Nullable&lt;int&gt; with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.BodyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-135">获取或设置一个指示消息正文的类型的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="bc60c-135">Gets or sets an <see cref="T:System.Int32" /> value that indicates the type of the body of the message.</span></span></summary>
        <value><span data-ttu-id="bc60c-136">一个指示消息正文的类型的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="bc60c-136">An <see cref="T:System.Int32" /> value that indicates the type of the body of the message.</span></span> <span data-ttu-id="bc60c-137">可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-137">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-138">消息队列 (MSMQ) 会将消息正文内容视为一个对象或一个序列化的流。</span><span class="sxs-lookup"><span data-stu-id="bc60c-138">Message Queuing (MSMQ) recognizes the body contents as an object or as a serialized stream.</span></span> <span data-ttu-id="bc60c-139">`BodyType` 属性指示消息的 Body（正文）属性中的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="bc60c-139">The `BodyType` property indicates the type of the object within the Body property of the message.</span></span>  
  
 <span data-ttu-id="bc60c-140">ActiveX 格式化程序可完成消息正文中本机类型与对象之间的绑定。</span><span class="sxs-lookup"><span data-stu-id="bc60c-140">The ActiveX formatter performs binding between native types and the object in a message body.</span></span> <span data-ttu-id="bc60c-141">如果使用 ActiveX 格式化程序，则该格式化程序将会为您设置 `BodyType` 属性。</span><span class="sxs-lookup"><span data-stu-id="bc60c-141">If you use the ActiveX formatter, the formatter sets the `BodyType` property for you.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#10](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#10)]
 [!code-vb[UEMsmqMessage#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationId">
      <MemberSignature Language="C#" Value="public string CorrelationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CorrelationId" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.CorrelationId" />
      <MemberSignature Language="VB.NET" Value="Public Property CorrelationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CorrelationId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationId : string with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.CorrelationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-142">获取或设置一个 <see cref="T:System.String" />，它包含此消息的相关标识符。</span><span class="sxs-lookup"><span data-stu-id="bc60c-142">Gets or sets a <see cref="T:System.String" /> that contains the correlation identifier for this message.</span></span></summary>
        <value><span data-ttu-id="bc60c-143">一个包含此消息的相关标识符的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-143">A <see cref="T:System.String" /> that contains the correlation identifier for this message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-144">消息队列 (MSMQ) 生成确认或报告消息时，它会使用此属性来指定原始消息的消息标识符。</span><span class="sxs-lookup"><span data-stu-id="bc60c-144">When Message Queuing (MSMQ) generates an acknowledgment or report message, it uses this property to specify the message identifier of the original message.</span></span> <span data-ttu-id="bc60c-145">发送原始消息的应用程序在接收确认或报告消息时，可从其接收的消息获取此属性，从而验证原始消息的消息标识符。</span><span class="sxs-lookup"><span data-stu-id="bc60c-145">The application that sent the original message, when it receives an acknowledgment or report message, can get this property from the message it receives to verify the message identifier of the original message.</span></span>  
  
 <span data-ttu-id="bc60c-146">该应用程序还可以使用此属性来为自己关联这些消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-146">The application can also use this property to correlate messages for its own purposes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#11](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#11)]
 [!code-vb[UEMsmqMessage#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationQueue">
      <MemberSignature Language="C#" Value="public Uri DestinationQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri DestinationQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.DestinationQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DestinationQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ DestinationQueue { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DestinationQueue : Uri" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.DestinationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-147">获取此消息的目标队列的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-147">Gets the <see cref="T:System.Uri" /> of the destination queue for this message.</span></span></summary>
        <value><span data-ttu-id="bc60c-148">此消息的目标队列的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-148">The <see cref="T:System.Uri" /> of the destination queue for this message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEMsmqMessage#12](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#12)]
 [!code-vb[UEMsmqMessage#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Extension { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Extension : byte[] with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-149">获取或设置 <see cref="T:System.Byte" /> 的数组，其中包含有与此消息关联的应用程序定义的附加信息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-149">Gets or sets an array of <see cref="T:System.Byte" /> that contains any additional, application-defined information that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="bc60c-150">一个 <see cref="T:System.Byte" /> 的数组，其中包含有与此消息关联的应用程序定义的附加信息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-150">An array of <see cref="T:System.Byte" /> that contains any additional, application-defined information that is associated with this message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-151">使用此属性可存储附加信息，例如大型二进制对象。</span><span class="sxs-lookup"><span data-stu-id="bc60c-151">Use this property to store additional information, such as a large binary object.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#13](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#13)]
 [!code-vb[UEMsmqMessage#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-152">获取一个 <see cref="T:System.String" />，它包含此消息的消息标识符。</span><span class="sxs-lookup"><span data-stu-id="bc60c-152">Gets a <see cref="T:System.String" /> that contains the message identifier for this message.</span></span></summary>
        <value><span data-ttu-id="bc60c-153">一个 <see cref="T:System.String" />，它包含此消息的消息标识符。</span><span class="sxs-lookup"><span data-stu-id="bc60c-153">A <see cref="T:System.String" /> that contains the message identifier for this message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-154">此属性只可在发送消息之后访问。</span><span class="sxs-lookup"><span data-stu-id="bc60c-154">This property can only be accessed after the message is sent.</span></span>  
  
 <span data-ttu-id="bc60c-155">发送消息时，消息队列 (MSMQ) 会生成消息的消息标识符。</span><span class="sxs-lookup"><span data-stu-id="bc60c-155">Message Queuing (MSMQ) generates a message identifier for the message when it is sent.</span></span> <span data-ttu-id="bc60c-156">该标识符长度为 20 个字节，其中包括部分：发送计算机的计算机 GUID 和消息在发送计算机上的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="bc60c-156">The identifier is composed of 20 bytes and includes two parts: the machine GUID of the sending computer, and a message identifier that is unique on the sending computer.</span></span> <span data-ttu-id="bc60c-157">这两部分组合在一起，就产生了一个在网络上唯一的消息标识符。</span><span class="sxs-lookup"><span data-stu-id="bc60c-157">The combination of these two parts forms a message identifier that is unique on the network.</span></span>  
  
 <span data-ttu-id="bc60c-158">消息队列会为所有消息生成消息标识符，其中包括确认消息和报告消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-158">Message Queuing generates message identifiers for all messages, including acknowledgment and report messages.</span></span> <span data-ttu-id="bc60c-159">消息队列会发送确认消息，以作为对应用程序发送的消息的到达或失败的响应。</span><span class="sxs-lookup"><span data-stu-id="bc60c-159">Message Queuing sends an acknowledgment message in response to the arrival or failure of a message that is sent by an application.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#14](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#14)]
 [!code-vb[UEMsmqMessage#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-160">获取或设置包含消息标签的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-160">Gets or sets a <see cref="T:System.String" /> that contains the message label.</span></span></summary>
        <value><span data-ttu-id="bc60c-161">包含消息标签的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-161">A <see cref="T:System.String" /> that contains the message label.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-162">对于消息队列 (MSMQ)，消息标签没有任何实质意义。</span><span class="sxs-lookup"><span data-stu-id="bc60c-162">The message label has no intrinsic meaning to Message Queuing (MSMQ).</span></span> <span data-ttu-id="bc60c-163">它可用于以人可识别方式标识消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-163">It is used to identify messages in a human-readable way.</span></span> <span data-ttu-id="bc60c-164">您的应用程序负责解释这些消息标签。</span><span class="sxs-lookup"><span data-stu-id="bc60c-164">Your applications are responsible for interpreting message labels.</span></span> <span data-ttu-id="bc60c-165">消息标签不必是唯一的。</span><span class="sxs-lookup"><span data-stu-id="bc60c-165">You do not need to make the message label unique.</span></span>  
  
 <span data-ttu-id="bc60c-166">消息标签有多种用途，例如显示消息标签，或根据标签有选择地处理消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-166">You can use the message label for various purposes, such as displaying it or selectively processing messages based on their labels.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#15](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#15)]
 [!code-vb[UEMsmqMessage#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageType">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageType? MessageType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Messaging.MessageType&gt; MessageType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.MessageType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageType As Nullable(Of MessageType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Messaging::MessageType&gt; MessageType { Nullable&lt;System::Messaging::MessageType&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageType : Nullable&lt;System.Messaging.MessageType&gt;" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.MessageType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Messaging.MessageType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-167">获取与此消息关联的 <see cref="T:System.Messaging.MessageType" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-167">Gets the <see cref="T:System.Messaging.MessageType" /> that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="bc60c-168">与此消息关联的 <see cref="T:System.Messaging.MessageType" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-168">The <see cref="T:System.Messaging.MessageType" /> that is associated with this message.</span></span> <span data-ttu-id="bc60c-169">可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-169">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-170">消息队列 (MSMQ) 会在发送消息时设置此属性。</span><span class="sxs-lookup"><span data-stu-id="bc60c-170">Message Queuing (MSMQ) sets this property when it sends a message.</span></span> <span data-ttu-id="bc60c-171">消息可以具有下列类型之一：</span><span class="sxs-lookup"><span data-stu-id="bc60c-171">A message can have one of the following types:</span></span>  
  
-   <span data-ttu-id="bc60c-172"><xref:System.Messaging.MessageType.Normal>：应用程序发送的消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-172"><xref:System.Messaging.MessageType.Normal>: A message sent by an application.</span></span>  
  
-   <span data-ttu-id="bc60c-173"><xref:System.Messaging.MessageType.Acknowledgment>：应用程序发送普通消息并请求确认时，消息队列生成的消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-173"><xref:System.Messaging.MessageType.Acknowledgment>: A message that Message Queuing generates when an application sends a normal message and requests an acknowledgment.</span></span> <span data-ttu-id="bc60c-174">例如，消息队列可以生成肯定或否定确认，以指示原始消息是否已到达其目标队列，或接收应用程序是否在目标队列中检索到了该消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-174">For example, Message Queuing can generate a positive or negative acknowledgment to indicate whether the original message arrived at its destination queue, or whether it was retrieved from the destination queue by the receiving application.</span></span> <span data-ttu-id="bc60c-175">消息队列会将相应的确认消息返回到发送应用程序所指定的管理队列。</span><span class="sxs-lookup"><span data-stu-id="bc60c-175">Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.</span></span>  
  
-   <span data-ttu-id="bc60c-176"><xref:System.Messaging.MessageType.Report>：当应用程序发送消息时，如果本地队列管理器定义了报告队列，则消息队列将生成报告消息并会将其发送到此报告队列。</span><span class="sxs-lookup"><span data-stu-id="bc60c-176"><xref:System.Messaging.MessageType.Report>: Whenever an application sends a message, if the local Queue Manager has a report queue defined, Message Queuing generates a report message and sends it to the report queue.</span></span> <span data-ttu-id="bc60c-177">如果启用了跟踪，则每当原始消息进入或离开消息队列服务器时，消息队列都会向消息队列报告队列发送报告消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-177">If tracing is enabled, Message Queuing sends a report message to the report queue each time the original message enters or leaves a Message Queuing server.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#16](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#16)]
 [!code-vb[UEMsmqMessage#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePriority? Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Messaging.MessagePriority&gt; Priority" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Nullable(Of MessagePriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Messaging::MessagePriority&gt; Priority { Nullable&lt;System::Messaging::MessagePriority&gt; get(); void set(Nullable&lt;System::Messaging::MessagePriority&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : Nullable&lt;System.Messaging.MessagePriority&gt; with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Messaging.MessagePriority&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-178">获取或设置与此消息关联的 <see cref="T:System.Messaging.MessagePriority" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-178">Gets or sets the <see cref="T:System.Messaging.MessagePriority" /> that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="bc60c-179">与此消息关联的 <see cref="T:System.Messaging.MessagePriority" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-179">The <see cref="T:System.Messaging.MessagePriority" /> that is associated with this message.</span></span> <span data-ttu-id="bc60c-180">可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-180">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-181">消息优先级会影响消息队列 (MSMQ) 处理处于传递过程中的消息以及到达目标队列的消息的方式。</span><span class="sxs-lookup"><span data-stu-id="bc60c-181">The message priority affects how Message Queuing (MSMQ) handles the message both while the message is in transit and when it reaches its destination queue.</span></span> <span data-ttu-id="bc60c-182">在路由过程中，优先级高的消息具有优先权，将会插入到其目标队列的更靠近队首的位置。</span><span class="sxs-lookup"><span data-stu-id="bc60c-182">A message with a higher priority is given preference during routing, and is inserted closer to the front of its destination queue.</span></span> <span data-ttu-id="bc60c-183">而具有相同优先级的消息则会按照到达的先后时间插入到目标队列中。</span><span class="sxs-lookup"><span data-stu-id="bc60c-183">Messages with the same priority are placed in the destination queue according to their arrival times.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#17](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#17)]
 [!code-vb[UEMsmqMessage#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public Uri ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.ResponseQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ResponseQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseQueue : Uri with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.ResponseQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-184">获取或设置从接收应用程序接收响应消息的消息队列的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-184">Gets or sets the <see cref="T:System.Uri" /> of the message queue that receives response messages from the receiving application.</span></span></summary>
        <value><span data-ttu-id="bc60c-185">此属性的默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-185">This property defaults to <see langword="null" />.</span></span>  
  
<span data-ttu-id="bc60c-186">此属性可标识接收应用程序返回给发送应用程序的响应消息的队列。</span><span class="sxs-lookup"><span data-stu-id="bc60c-186">This property identifies the queue that receives response messages that the receiving application returns to the sending application.</span></span> <span data-ttu-id="bc60c-187">发送应用程序会在向接收应用程序发送消息时指定响应队列。</span><span class="sxs-lookup"><span data-stu-id="bc60c-187">The sending application specifies the response queue when it sends messages to the receiving application.</span></span> <span data-ttu-id="bc60c-188">发送应用程序可以指定任何可用的队列为响应队列。</span><span class="sxs-lookup"><span data-stu-id="bc60c-188">The sending application can specify any available queue as the response queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEMsmqMessage#18](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#18)]
 [!code-vb[UEMsmqMessage#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SenderId">
      <MemberSignature Language="C#" Value="public byte[] SenderId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SenderId" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.SenderId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SenderId As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SenderId { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SenderId : byte[]" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.SenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-189">获取一个 <see cref="T:System.Byte" /> 的数组，其中包含有发送应用程序的发送方标识符。</span><span class="sxs-lookup"><span data-stu-id="bc60c-189">Gets an array of <see cref="T:System.Byte" /> that contains the sender identifier of the sending application.</span></span></summary>
        <value><span data-ttu-id="bc60c-190">一个包含发送应用程序的发送方标识符的 <see cref="T:System.Byte" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="bc60c-190">An array of <see cref="T:System.Byte" /> that contains the sender identifier of the sending application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-191">消息队列 (MSMQ) 会将发送应用程序的发送方标识符附加到消息中。</span><span class="sxs-lookup"><span data-stu-id="bc60c-191">Message Queuing (MSMQ) attaches the sender identifier of the sending application to the message.</span></span> <span data-ttu-id="bc60c-192">接收应用程序可利用此属性执行授权检查。</span><span class="sxs-lookup"><span data-stu-id="bc60c-192">This property can be used by the receiving application to perform authorization checks.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#19](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#19)]
 [!code-vb[UEMsmqMessage#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SentTime">
      <MemberSignature Language="C#" Value="public DateTime? SentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; SentTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.SentTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SentTime As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; SentTime { Nullable&lt;DateTime&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.SentTime : Nullable&lt;DateTime&gt;" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.SentTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-193">获取一个 <see cref="T:System.DateTime" />，它指示发送应用程序计算机的队列管理器发送该消息的时间。</span><span class="sxs-lookup"><span data-stu-id="bc60c-193">Gets a <see cref="T:System.DateTime" /> that indicates when the message was sent by the queue manager of the sending application's computer.</span></span></summary>
        <value><span data-ttu-id="bc60c-194">一个 <see cref="T:System.DateTime" />，它指示发送应用程序计算机的队列管理器发送该消息的时间。</span><span class="sxs-lookup"><span data-stu-id="bc60c-194">A <see cref="T:System.DateTime" /> that indicates when the message was sent by the queue manager of the sending application's computer.</span></span> <span data-ttu-id="bc60c-195">可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-195">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-196">发送时间将会调整为发送应用程序所在计算机的本地时间。</span><span class="sxs-lookup"><span data-stu-id="bc60c-196">The sent time is adjusted to the local time of the sending application's computer.</span></span> <span data-ttu-id="bc60c-197">源队列和目标队列可在位于不同时区的计算机上。</span><span class="sxs-lookup"><span data-stu-id="bc60c-197">The source and destination queues may be on computers with different time zones.</span></span>  
  
 <span data-ttu-id="bc60c-198">此属性的默认值为 `null`。</span><span class="sxs-lookup"><span data-stu-id="bc60c-198">The default for this property is `null`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#20](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#20)]
 [!code-vb[UEMsmqMessage#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public TimeSpan? TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.TimeToReachQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToReachQueue As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; TimeToReachQueue { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToReachQueue : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.TimeToReachQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc60c-199">获取或设置一个 <see cref="T:System.TimeSpan" />，它指示所允许的消息到达目标队列的最长时间。</span><span class="sxs-lookup"><span data-stu-id="bc60c-199">Gets or sets a <see cref="T:System.TimeSpan" /> that indicates the maximum amount of time allowed for the message to reach the destination queue.</span></span></summary>
        <value><span data-ttu-id="bc60c-200">一个 <see cref="T:System.TimeSpan" />，它指示所允许的消息到达目标队列的最长时间。</span><span class="sxs-lookup"><span data-stu-id="bc60c-200">A <see cref="T:System.TimeSpan" /> that indicates the maximum amount of time allowed for the message to reach the destination queue.</span></span> <span data-ttu-id="bc60c-201">可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bc60c-201">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc60c-202">如果在消息到达其目标队列之前，此属性所指定的时间间隔就已到期，则消息队列 (MSMQ) 将按照下列两种方式之一，放弃该消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-202">If the interval specified by this property expires before the message reaches its destination queue, Message Queuing (MSMQ) discards the message in one of two ways.</span></span> <span data-ttu-id="bc60c-203">如果消息的 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 属性为 `true`，则将该消息发送到死信队列。</span><span class="sxs-lookup"><span data-stu-id="bc60c-203">If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue.</span></span> <span data-ttu-id="bc60c-204">否则，丢弃该消息。</span><span class="sxs-lookup"><span data-stu-id="bc60c-204">Otherwise, the message is dropped.</span></span>  
  
 <span data-ttu-id="bc60c-205">此属性的默认值为 `null`。</span><span class="sxs-lookup"><span data-stu-id="bc60c-205">The default for this property is `null`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#21](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#21)] 
 [!code-vb[UEMsmqMessage#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#21)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
