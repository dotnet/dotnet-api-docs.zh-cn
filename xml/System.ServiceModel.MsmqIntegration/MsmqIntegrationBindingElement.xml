<Type Name="MsmqIntegrationBindingElement" FullName="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2670271ac9be24c635eeea498d63b5dedbd4f669" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86570656" /></Metadata><TypeSignature Language="C#" Value="public sealed class MsmqIntegrationBindingElement : System.ServiceModel.Channels.MsmqBindingElementBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MsmqIntegrationBindingElement extends System.ServiceModel.Channels.MsmqBindingElementBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MsmqIntegrationBindingElement&#xA;Inherits MsmqBindingElementBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqIntegrationBindingElement sealed : System::ServiceModel::Channels::MsmqBindingElementBase" />
  <TypeSignature Language="F#" Value="type MsmqIntegrationBindingElement = class&#xA;    inherit MsmqBindingElementBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.MsmqBindingElementBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="034d6-101">此绑定元素可用于使 Windows Communication Foundation (WCF) 应用程序发送消息到满足以下条件的现有 MSMQ 应用程序或接受来自这些应用程序的消息：或者使用 COM、MSMQ 本机 API，或者使用 <see cref="N:System.Messaging" /> 中的 API。</span><span class="sxs-lookup"><span data-stu-id="034d6-101">This binding element can be used to enable Windows Communication Foundation (WCF) applications to send messages to and receive messages from existing MSMQ applications that use either COM, MSMQ native APIs, or the APIs in <see cref="N:System.Messaging" />.</span></span> <span data-ttu-id="034d6-102">使用此类可以向基于 MSMQ 的消息应用程序发送消息，或从这些应用程序接收消息。</span><span class="sxs-lookup"><span data-stu-id="034d6-102">Use this class to send and receive messages from MSMQ-based messaging applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/service.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsmqIntegrationBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MsmqIntegrationBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="034d6-103">初始化 <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="034d6-103">Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/service.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="msmqIntegrationBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="034d6-104">通道的类型。</span><span class="sxs-lookup"><span data-stu-id="034d6-104">The type of channel.</span></span></typeparam>
        <param name="context"><span data-ttu-id="034d6-105">用以生成通道工厂的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-105">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel factory.</span></span></param>
        <summary><span data-ttu-id="034d6-106">使用提供的上下文生成通道工厂。</span><span class="sxs-lookup"><span data-stu-id="034d6-106">Builds a channel factory using the context provided.</span></span></summary>
        <returns><span data-ttu-id="034d6-107">可用于创建可向现有 MSMQ 应用程序发送消息的通道的 MSMQ 集成通道工厂。</span><span class="sxs-lookup"><span data-stu-id="034d6-107">An MSMQ integration channel factory that can be used to create channels to send messages to existing MSMQ applications.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="034d6-108">此方法可生成通道工厂，这样开发人员就可创建客户端通道，从而与服务进行通信。</span><span class="sxs-lookup"><span data-stu-id="034d6-108">This method builds a channel factory that enables the developer to create a client channel to communicate with a service.</span></span> <span data-ttu-id="034d6-109">通道工厂不是一个通道，而是一个能够创建通道的工厂。</span><span class="sxs-lookup"><span data-stu-id="034d6-109">The channel factory is not a channel, but rather a factory that can create a channel.</span></span> <span data-ttu-id="034d6-110">您可通过调用 `IChannelFactory<TChannel>.CreateChannel` 来创建通道。</span><span class="sxs-lookup"><span data-stu-id="034d6-110">You create a channel by calling `IChannelFactory<TChannel>.CreateChannel`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="034d6-111">上下文值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-111">The context value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="034d6-112"><paramref name="TChannel" /> 不为 <see langword="IOutputChannel" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-112">The <paramref name="TChannel" /> is not <see langword="IOutputChannel" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="034d6-113"><paramref name="ExactlyOnce" /> 为 <see langword="true" />，而 <paramref name="Durable" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-113"><paramref name="ExactlyOnce" /> is <see langword="true" /> and <paramref name="Durable" /> is <see langword="false" />.</span></span>

<span data-ttu-id="034d6-114">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-114">-or-</span></span>

<span data-ttu-id="034d6-115">CustomDeadLetterQueue 不为 null，DeadLetterQueue 不为 Custom。</span><span class="sxs-lookup"><span data-stu-id="034d6-115">CustomDeadLetterQueue is not null and DeadLetterQueue is not Custom.</span></span>

<span data-ttu-id="034d6-116">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-116">-or-</span></span>

<span data-ttu-id="034d6-117">在 Windows 2003/XP 中，DeadLetterQueue 设置为 Custom。</span><span class="sxs-lookup"><span data-stu-id="034d6-117">DeadLetterQueue is set to Custom on Windows 2003/XP.</span></span>

<span data-ttu-id="034d6-118">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-118">-or-</span></span>

<span data-ttu-id="034d6-119">ExactlyOnce 为 false，而 DeadLetterQueue 为 Custom。</span><span class="sxs-lookup"><span data-stu-id="034d6-119">ExactlyOnce is false and DeadLetterQueue is Custom.</span></span>

<span data-ttu-id="034d6-120">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-120">-or-</span></span>

<span data-ttu-id="034d6-121">设置了 CustomDeadLetterQueue，但是对队列没有写权限或队列不存在。</span><span class="sxs-lookup"><span data-stu-id="034d6-121">CustomDeadLetterQueue is set and if there is no write permission to write to queue or if queue does not exist.</span></span>

<span data-ttu-id="034d6-122">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-122">-or-</span></span>

<span data-ttu-id="034d6-123">CustomDeadLetterQueue 是非事务性的。</span><span class="sxs-lookup"><span data-stu-id="034d6-123">If CustomDeadLetterQueue is non-transactional.</span></span>

<span data-ttu-id="034d6-124">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-124">-or-</span></span>

<span data-ttu-id="034d6-125"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> 设置为 WindowsDomain，且 MSMQ 是在没有 Active Directory 集成的情况下安装的。</span><span class="sxs-lookup"><span data-stu-id="034d6-125"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is set to WindowsDomain and if MSMQ is installed without Active Directory integration.</span></span>

<span data-ttu-id="034d6-126">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-126">-or-</span></span>

<span data-ttu-id="034d6-127"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> 为 None，而 <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> 不为 None。</span><span class="sxs-lookup"><span data-stu-id="034d6-127"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is None and <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> is not None.</span></span>

<span data-ttu-id="034d6-128">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-128">-or-</span></span>

<span data-ttu-id="034d6-129"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> 为 Certificate 或 WindowsDomain，而 <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> 为 None。</span><span class="sxs-lookup"><span data-stu-id="034d6-129"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is Certificate or WindowsDomain and <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> is None.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="msmqIntegrationBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="034d6-130">通道的类型。</span><span class="sxs-lookup"><span data-stu-id="034d6-130">The type of channel.</span></span></typeparam>
        <param name="context"><span data-ttu-id="034d6-131">用以生成通道侦听器的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-131">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel listener.</span></span></param>
        <summary><span data-ttu-id="034d6-132">使用提供的上下文生成通道侦听器。</span><span class="sxs-lookup"><span data-stu-id="034d6-132">Builds a channel listener using the context provided.</span></span></summary>
        <returns><span data-ttu-id="034d6-133">可用于创建可从现有 MSMQ 应用程序接收消息的通道的 MSMQ 集成通道侦听器。</span><span class="sxs-lookup"><span data-stu-id="034d6-133">An MSMQ integration channel listener that can be used to create channels to receive messages from existing MSMQ applications.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="034d6-134">通道侦听器在服务端创建，用于接收客户端通道发送的消息。</span><span class="sxs-lookup"><span data-stu-id="034d6-134">Channel listeners are created on the service and are used to receive messages sent by a client channel.</span></span> <span data-ttu-id="034d6-135">该服务必须先调用 `IChannelListener.Open`，接着调用 `IChannelListener.AcceptChannel`，以获取实际通道的引用。</span><span class="sxs-lookup"><span data-stu-id="034d6-135">The service must call `IChannelListener.Open` and then `IChannelListener.AcceptChannel` to get a reference to the actual channel.</span></span> <span data-ttu-id="034d6-136">然后，必须调用 `IChannel.Open` 来打开通道。</span><span class="sxs-lookup"><span data-stu-id="034d6-136">Then `IChannel.Open` must be called to open the channel.</span></span> <span data-ttu-id="034d6-137">此时，该渠道就可用于检索消息了。</span><span class="sxs-lookup"><span data-stu-id="034d6-137">At this point, the channel can be used to retrieve messages.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="034d6-138">上下文值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-138">The context value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="034d6-139"><paramref name="TChannel" /> 不为 <see langword="IInputChannel" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-139">The <paramref name="TChannel" /> is not <see langword="IInputChannel" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="034d6-140">ExactlyOnce 为 <see langword="true" />，而 Durable 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-140">ExactlyOnce is <see langword="true" /> and Durable is <see langword="false" />.</span></span>

<span data-ttu-id="034d6-141">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-141">-or-</span></span>

<span data-ttu-id="034d6-142">队列不可读。</span><span class="sxs-lookup"><span data-stu-id="034d6-142">Queue is not readable.</span></span>

<span data-ttu-id="034d6-143">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-143">-or-</span></span>

<span data-ttu-id="034d6-144">ExactlyOnce 为 <see langword="true" />，而队列是非事务性的。</span><span class="sxs-lookup"><span data-stu-id="034d6-144">ExactlyOnce is <see langword="true" /> and queue is non-transactional.</span></span>

<span data-ttu-id="034d6-145">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-145">-or-</span></span>

<span data-ttu-id="034d6-146">ExactlyOnce 为 <see langword="false" />，而队列是事务性的。</span><span class="sxs-lookup"><span data-stu-id="034d6-146">ExactlyOnce is <see langword="false" /> and queue is transactional.</span></span>

<span data-ttu-id="034d6-147">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-147">-or-</span></span>

<span data-ttu-id="034d6-148">在 Windows Vista 中，ReceiveErrorHandling 设置为 Move，而队列名称中包含一个“;”。</span><span class="sxs-lookup"><span data-stu-id="034d6-148">ReceiveErrorHandling is set to Move and queue name contains a ";" in Windows Vista.</span></span>

<span data-ttu-id="034d6-149">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-149">-or-</span></span>

<span data-ttu-id="034d6-150">在 Windows Vista 中，ExactlyOnce 设置为 <see langword="true" />，但是不能打开重试子队列。</span><span class="sxs-lookup"><span data-stu-id="034d6-150">ExactlyOnce is set to <see langword="true" /> and cannot open retry sub-queue in Windows Vista.</span></span>

<span data-ttu-id="034d6-151">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-151">-or-</span></span>

<span data-ttu-id="034d6-152">ReceiveErrorHandling 设置为 Reject 或 Move，而平台是 Windows Vista。</span><span class="sxs-lookup"><span data-stu-id="034d6-152">ReceiveErrorHandling is set to Reject or Move and the platform is Windows Vista.</span></span>

<span data-ttu-id="034d6-153">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-153">-or-</span></span>

<span data-ttu-id="034d6-154"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> 设置为 WindowsDomain，且 MSMQ 是在没有 Active Directory 集成的情况下安装的。</span><span class="sxs-lookup"><span data-stu-id="034d6-154"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is set to WindowsDomain and if MSMQ is installed without Active Directory integration.</span></span>

<span data-ttu-id="034d6-155">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-155">-or-</span></span>

<span data-ttu-id="034d6-156"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> 为 None，而 <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> 不为 None。</span><span class="sxs-lookup"><span data-stu-id="034d6-156"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is None and <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> is not None.</span></span>

<span data-ttu-id="034d6-157">- 或 -</span><span class="sxs-lookup"><span data-stu-id="034d6-157">-or-</span></span>

<span data-ttu-id="034d6-158"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> 为 Certificate 或 WindowsDomain，而 <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> 为 None。</span><span class="sxs-lookup"><span data-stu-id="034d6-158"><see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is Certificate or WindowsDomain and <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> is None.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="msmqIntegrationBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="034d6-159">通道的类型。</span><span class="sxs-lookup"><span data-stu-id="034d6-159">The type of channel.</span></span></typeparam>
        <param name="context"><span data-ttu-id="034d6-160">用以生成通道工厂的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-160">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel factory.</span></span></param>
        <summary><span data-ttu-id="034d6-161">返回一个值，该值指示是否能够使用提供的上下文生成通道工厂。</span><span class="sxs-lookup"><span data-stu-id="034d6-161">Returns a value that indicates whether you can build a channel factory with the context provided.</span></span></summary>
        <returns><span data-ttu-id="034d6-162">如果利用所提供的上下文可生成通道工厂，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-162"><see langword="true" /> if you can build a channel factory with the context provided; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="034d6-163">仅当 <see langword="true" /> 为 <paramref name="TChannel" /> 时，此方法才返回 <see cref="T:System.ServiceModel.Channels.IOutputChannel" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-163">This method returns <see langword="true" /> only if <paramref name="TChannel" /> is <see cref="T:System.ServiceModel.Channels.IOutputChannel" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="msmqIntegrationBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="034d6-164">通道的类型。</span><span class="sxs-lookup"><span data-stu-id="034d6-164">The type of channel.</span></span></typeparam>
        <param name="context"><span data-ttu-id="034d6-165">用以生成通道侦听器的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-165">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel listener.</span></span></param>
        <summary><span data-ttu-id="034d6-166">返回一个值，该值指示是否能够使用提供的上下文生成通道侦听器。</span><span class="sxs-lookup"><span data-stu-id="034d6-166">Returns a value that indicates whether you can build a channel listener with the context provided.</span></span></summary>
        <returns><span data-ttu-id="034d6-167">如果利用所提供的上下文可生成通道侦听器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-167"><see langword="true" /> if you can build a channel listener with the context provided; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="034d6-168">仅当 <see langword="true" /> 为 <paramref name="TChannel" /> 时，此方法才返回 <see cref="T:System.ServiceModel.Channels.IInputChannel" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-168">This method returns <see langword="true" /> only if <paramref name="TChannel" /> is <see cref="T:System.ServiceModel.Channels.IInputChannel" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="msmqIntegrationBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="034d6-169">返回绑定元素的复本。</span><span class="sxs-lookup"><span data-stu-id="034d6-169">Returns a clone of the binding element.</span></span></summary>
        <returns><span data-ttu-id="034d6-170">绑定元素的复本。</span><span class="sxs-lookup"><span data-stu-id="034d6-170">A clone of the binding element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/snippets.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="msmqIntegrationBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="034d6-171">属性的类型。</span><span class="sxs-lookup"><span data-stu-id="034d6-171">The type of property.</span></span></typeparam>
        <param name="context"><span data-ttu-id="034d6-172">绑定上下文。</span><span class="sxs-lookup"><span data-stu-id="034d6-172">The binding context.</span></span></param>
        <summary><span data-ttu-id="034d6-173">从指定的 <see langword="BindingContext" /> 获取请求类型的属性。</span><span class="sxs-lookup"><span data-stu-id="034d6-173">Gets a property of the requested type from the specified <see langword="BindingContext" />.</span></span></summary>
        <returns><span data-ttu-id="034d6-174">一个 <paramref name="T" /> 类型的对象。</span><span class="sxs-lookup"><span data-stu-id="034d6-174">An object of type <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="034d6-175">此方法可检索来自该元素的功能和保护要求。</span><span class="sxs-lookup"><span data-stu-id="034d6-175">This method provides the functionality to retrieve capabilities and protection requirements from the element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="034d6-176">上下文为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-176">Context is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="034d6-177">获取一个 <see cref="T:System.String" />，它包含绑定元素所使用的方案。</span><span class="sxs-lookup"><span data-stu-id="034d6-177">Gets a <see cref="T:System.String" /> that contains the scheme used by the binding element.</span></span></summary>
        <value><span data-ttu-id="034d6-178">包含绑定元素使用的方案的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-178">The <see cref="T:System.String" /> that contains the scheme used by the binding element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="034d6-179">此属性可返回字符串“msmq.formatname”，从而指示 MSMQ 集成通道所使用的寻址方案。</span><span class="sxs-lookup"><span data-stu-id="034d6-179">This property returns the string "msmq.formatname" to indicate the addressing scheme used by the MSMQ integration channel.</span></span> <span data-ttu-id="034d6-180">有关队列寻址的详细信息，请参阅 [服务终结点和队列寻址](/dotnet/framework/wcf/feature-details/service-endpoints-and-queue-addressing)。</span><span class="sxs-lookup"><span data-stu-id="034d6-180">For more information about queue addressing, see [Service Endpoints and Queue Addressing](/dotnet/framework/wcf/feature-details/service-endpoints-and-queue-addressing).</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/service.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationFormat">
      <MemberSignature Language="C#" Value="public System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat SerializationFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat SerializationFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.SerializationFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializationFormat As MsmqMessageSerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::MsmqIntegration::MsmqMessageSerializationFormat SerializationFormat { System::ServiceModel::MsmqIntegration::MsmqMessageSerializationFormat get(); void set(System::ServiceModel::MsmqIntegration::MsmqMessageSerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.SerializationFormat : System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.SerializationFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="034d6-181">获取或设置要在序列化 MSMQ 消息时使用的 <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-181">Gets or sets the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> to be used when serializing MSMQ messages.</span></span></summary>
        <value><span data-ttu-id="034d6-182">要在序列化 MSMQ 消息时使用的 <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />。</span><span class="sxs-lookup"><span data-stu-id="034d6-182">The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> to be used when serializing MSMQ messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="034d6-183">此属性可以具有下列值之一：</span><span class="sxs-lookup"><span data-stu-id="034d6-183">This property can have one of the following values:</span></span>  
  
-   <span data-ttu-id="034d6-184">`ActiveX` - ActiveX 序列化程序用于序列化对象。</span><span class="sxs-lookup"><span data-stu-id="034d6-184">`ActiveX` - The ActiveX serializer is used to serialize objects.</span></span>  
  
-   <span data-ttu-id="034d6-185">`Binary` - <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 用于序列化对象。</span><span class="sxs-lookup"><span data-stu-id="034d6-185">`Binary` - The <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> is used to serialize objects.</span></span>  
  
-   <span data-ttu-id="034d6-186">`ByteArray` - 将对象序列化为一个字节数组。</span><span class="sxs-lookup"><span data-stu-id="034d6-186">`ByteArray` - The object is serialized to an array of bytes.</span></span>  
  
-   <span data-ttu-id="034d6-187">`Stream` - 将对象序列化为流。</span><span class="sxs-lookup"><span data-stu-id="034d6-187">`Stream` - The object is serialized to a stream.</span></span>  
  
-   <span data-ttu-id="034d6-188">`Xml` - <xref:System.Xml.Serialization.XmlSerializer> 用于序列化对象。</span><span class="sxs-lookup"><span data-stu-id="034d6-188">`Xml` - The <xref:System.Xml.Serialization.XmlSerializer> is used to serialize objects.</span></span>  
  
-   <span data-ttu-id="034d6-189">默认值为 `Xml`。</span><span class="sxs-lookup"><span data-stu-id="034d6-189">The default value is `Xml`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="034d6-190">值不在 <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> 值的范围内。</span><span class="sxs-lookup"><span data-stu-id="034d6-190">The value is not within the values of <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TargetSerializationTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetSerializationTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetSerializationTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetSerializationTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetSerializationTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetSerializationTypes : Type[] with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="034d6-191">获取或设置 <see cref="T:System.Type" /> 对象的数组，这些对象包含消息反序列化的目标类型。</span><span class="sxs-lookup"><span data-stu-id="034d6-191">Gets or sets an array of <see cref="T:System.Type" /> objects that contain the types to which messages should be deserialized.</span></span></summary>
        <value><span data-ttu-id="034d6-192">包含消息反序列化的目标类型的 <see cref="T:System.Type" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="034d6-192">An array of <see cref="T:System.Type" /> that contains the types to which messages should be deserialized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="034d6-193">MSMQ 消息的正文未类型化。</span><span class="sxs-lookup"><span data-stu-id="034d6-193">The body of an MSMQ message is not typed.</span></span> <span data-ttu-id="034d6-194">使用 <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes%2A> 属性可以指定将消息从 MSMQ 应用程序发送到 Windows Communication Foundation (WCF) 接收应用程序时将消息反序列化到的类型。</span><span class="sxs-lookup"><span data-stu-id="034d6-194">The <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes%2A> property enables you to specify the types to which messages are deserialized when they are sent from an MSMQ application to a Windows Communication Foundation (WCF) receiving application.</span></span> <span data-ttu-id="034d6-195">仅当 <xref:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat> 设置为 `Xml` 时，才使用此属性。</span><span class="sxs-lookup"><span data-stu-id="034d6-195">This property is used only if <xref:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat> is set to `Xml`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
