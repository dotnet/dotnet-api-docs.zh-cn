<Type Name="PropertyDescriptor" FullName="System.ComponentModel.PropertyDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec88b80576fb3363001ecc11a3574a459d056574" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89761432" /></Metadata><TypeSignature Language="C#" Value="public abstract class PropertyDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <TypeSignature Language="F#" Value="type PropertyDescriptor = class&#xA;    inherit MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f6584-101">提供类的属性的抽象。</span><span class="sxs-lookup"><span data-stu-id="f6584-101">Provides an abstraction of a property on a class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-102">属性的说明包含名称、其特性、与属性关联的组件类，以及属性的类型。</span><span class="sxs-lookup"><span data-stu-id="f6584-102">A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</span></span>  
  
 <span data-ttu-id="f6584-103"><xref:System.ComponentModel.PropertyDescriptor> 提供以下属性和方法：</span><span class="sxs-lookup"><span data-stu-id="f6584-103"><xref:System.ComponentModel.PropertyDescriptor> provides the following properties and methods:</span></span>  
  
-   <span data-ttu-id="f6584-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> 包含 <xref:System.ComponentModel.TypeConverter> 此属性的。</span><span class="sxs-lookup"><span data-stu-id="f6584-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contains the <xref:System.ComponentModel.TypeConverter> for this property.</span></span>  
  
-   <span data-ttu-id="f6584-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> 指示是否应本地化此属性。</span><span class="sxs-lookup"><span data-stu-id="f6584-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indicates whether this property should be localized.</span></span>  
  
-   <span data-ttu-id="f6584-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> 返回指定类型的编辑器。</span><span class="sxs-lookup"><span data-stu-id="f6584-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> returns an editor of the specified type.</span></span>  
  
 <span data-ttu-id="f6584-107"><xref:System.ComponentModel.PropertyDescriptor> 还提供以下 `abstract` 属性和方法：</span><span class="sxs-lookup"><span data-stu-id="f6584-107"><xref:System.ComponentModel.PropertyDescriptor> also provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="f6584-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> 包含此属性绑定到的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="f6584-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contains the type of component this property is bound to.</span></span>  
  
-   <span data-ttu-id="f6584-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> 指示此属性是否为只读。</span><span class="sxs-lookup"><span data-stu-id="f6584-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indicates whether this property is read-only.</span></span>  
  
-   <span data-ttu-id="f6584-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> 获取属性的类型。</span><span class="sxs-lookup"><span data-stu-id="f6584-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> gets the type of the property.</span></span>  
  
-   <span data-ttu-id="f6584-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> 指示重置组件是否更改组件的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indicates whether resetting the component changes the value of the component.</span></span>  
  
-   <span data-ttu-id="f6584-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> 返回组件的属性的当前值。</span><span class="sxs-lookup"><span data-stu-id="f6584-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> returns the current value of the property on a component.</span></span>  
  
-   <span data-ttu-id="f6584-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> 重置组件的此属性的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> resets the value for this property of the component.</span></span>  
  
-   <span data-ttu-id="f6584-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> 将组件的值设置为一个不同的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> sets the value of the component to a different value.</span></span>  
  
-   <span data-ttu-id="f6584-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> 指示是否需要保留此属性的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indicates whether the value of this property needs to be persisted.</span></span>  
  
 <span data-ttu-id="f6584-116">通常， `abstract` 成员是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="f6584-116">Typically, the `abstract` members are implemented through reflection.</span></span> <span data-ttu-id="f6584-117">有关反射的详细信息，请参阅 [反射](/dotnet/framework/reflection-and-codedom/reflection)中的主题。</span><span class="sxs-lookup"><span data-stu-id="f6584-117">For more information about reflection, see the topics in [Reflection](/dotnet/framework/reflection-and-codedom/reflection).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6584-118">下面的代码示例是在类中的示例的基础上生成的 <xref:System.ComponentModel.PropertyDescriptorCollection> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-118">The following code example is built upon the example in the <xref:System.ComponentModel.PropertyDescriptorCollection> class.</span></span> <span data-ttu-id="f6584-119">它在文本框中打印 (类别、说明、显示名称) 的信息。</span><span class="sxs-lookup"><span data-stu-id="f6584-119">It prints the information (category, description, display name) of the text of a button in a text box.</span></span> <span data-ttu-id="f6584-120">它假定 `button1` `textbox1` 已在窗体中实例化和。</span><span class="sxs-lookup"><span data-stu-id="f6584-120">It assumes that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[PropertyDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyDescriptor/CPP/propertydescriptor.cpp#1)]
 [!code-csharp[PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyDescriptor/CS/propertydescriptor.cs#1)]
 [!code-vb[PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyDescriptor/VB/propertydescriptor.vb#1)]  
  
 <span data-ttu-id="f6584-121">下面的代码示例演示如何实现一个自定义属性说明符，该说明符提供围绕属性的只读包装。</span><span class="sxs-lookup"><span data-stu-id="f6584-121">The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property.</span></span> <span data-ttu-id="f6584-122">`SerializeReadOnlyPropertyDescriptor`在自定义设计器中用于为控件的属性提供只读属性说明符 <xref:System.Windows.Forms.Control.Size%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-122">The `SerializeReadOnlyPropertyDescriptor` is used in a custom designer to provide a read-only property descriptor for the control's <xref:System.Windows.Forms.Control.Size%2A> property.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/SerializeReadOnlyPropertyDescriptor.cs#1)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/SerializeReadOnlyPropertyDescriptor.vb#1)]  
  
 <span data-ttu-id="f6584-123">下面的代码示例演示如何 `SerializeReadOnlyPropertyDescriptor` 在自定义设计器中使用。</span><span class="sxs-lookup"><span data-stu-id="f6584-123">The following code examples show how to use the `SerializeReadOnlyPropertyDescriptor` in a custom designer.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControlDesigner.cs#10)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControlDesigner.vb#10)]  
[!code-csharp[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControl.cs#100)]
[!code-vb[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControl.vb#100)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6584-124">初始化 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f6584-124">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : System.ComponentModel.MemberDescriptor -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor descr" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="f6584-125">一个 <see cref="T:System.ComponentModel.MemberDescriptor" />，它包含该属性的名称及其特性。</span><span class="sxs-lookup"><span data-stu-id="f6584-125">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the property and its attributes.</span></span></param>
        <summary><span data-ttu-id="f6584-126">使用指定 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 中的名称和特性初始化 <see cref="T:System.ComponentModel.MemberDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f6584-126">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : System.ComponentModel.MemberDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor (descr, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="f6584-127">一个 <see cref="T:System.ComponentModel.MemberDescriptor" />，包含成员的名称及其特性。</span><span class="sxs-lookup"><span data-stu-id="f6584-127">A <see cref="T:System.ComponentModel.MemberDescriptor" /> containing the name of the member and its attributes.</span></span></param>
        <param name="attrs"><span data-ttu-id="f6584-128">一个 <see cref="T:System.Attribute" /> 数组，包含要和该属性关联的特性。</span><span class="sxs-lookup"><span data-stu-id="f6584-128">An <see cref="T:System.Attribute" /> array containing the attributes you want to associate with the property.</span></span></param>
        <summary><span data-ttu-id="f6584-129">使用指定 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 中的名称以及同时出现在 <see cref="T:System.ComponentModel.MemberDescriptor" /> 和 <see cref="T:System.ComponentModel.MemberDescriptor" /> 数组中的特性初始化 <see cref="T:System.Attribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f6584-129">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-130">此构造函数将数组中的特性追加 <xref:System.Attribute> 到中的特性 <xref:System.ComponentModel.MemberDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-130">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : string * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor (name, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f6584-131">属性的名称。</span><span class="sxs-lookup"><span data-stu-id="f6584-131">The name of the property.</span></span></param>
        <param name="attrs"><span data-ttu-id="f6584-132">包含属性特性的类型 <see cref="T:System.Attribute" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="f6584-132">An array of type <see cref="T:System.Attribute" /> that contains the property attributes.</span></span></param>
        <summary><span data-ttu-id="f6584-133">使用指定的名称和特性来初始化 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f6584-133">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the specified name and attributes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public virtual void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddValueChanged : obj * EventHandler -&gt; unit&#xA;override this.AddValueChanged : obj * EventHandler -&gt; unit" Usage="propertyDescriptor.AddValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="f6584-134">为其添加处理程序的组件。</span><span class="sxs-lookup"><span data-stu-id="f6584-134">The component to add the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="f6584-135">要作为侦听器添加的委托。</span><span class="sxs-lookup"><span data-stu-id="f6584-135">The delegate to add as a listener.</span></span></param>
        <summary><span data-ttu-id="f6584-136">使其他对象在此属性更改时能得到通知。</span><span class="sxs-lookup"><span data-stu-id="f6584-136">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f6584-137"><paramref name="component" /> 或 <paramref name="handler" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-137"><paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public abstract bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member CanResetValue : obj -&gt; bool" Usage="propertyDescriptor.CanResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="f6584-138">要测试重置功能的组件。</span><span class="sxs-lookup"><span data-stu-id="f6584-138">The component to test for reset capability.</span></span></param>
        <summary><span data-ttu-id="f6584-139">当在派生类中被重写时，返回重置对象时是否更改其值。</span><span class="sxs-lookup"><span data-stu-id="f6584-139">When overridden in a derived class, returns whether resetting an object changes its value.</span></span></summary>
        <returns><span data-ttu-id="f6584-140">如果重置组件更改其值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-140"><see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-141">通常，此方法是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="f6584-141">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6584-142">当在派生类中重写时，此方法查找 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-142">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span></span> <span data-ttu-id="f6584-143">如果找到一个，它会将属性的值与属性的当前值进行比较。</span><span class="sxs-lookup"><span data-stu-id="f6584-143">If it finds one, it compares the value of the attribute with the property's current value.</span></span> <span data-ttu-id="f6584-144"><see langword="true" />当默认值与属性的当前值不匹配时，它将返回。</span><span class="sxs-lookup"><span data-stu-id="f6584-144">It returns <see langword="true" /> when the default value does not match the property's current value.</span></span> <span data-ttu-id="f6584-145">如果此方法无法找到 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> ，则会查找您需要自行实现的 "ShouldPersistMyProperty" 方法。</span><span class="sxs-lookup"><span data-stu-id="f6584-145">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldPersistMyProperty" method that you need to implement yourself.</span></span> <span data-ttu-id="f6584-146">如果找到此内容，则 <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> 返回 "ShouldPersistMyProperty" 返回的内容。</span><span class="sxs-lookup"><span data-stu-id="f6584-146">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns what "ShouldPersistMyProperty" returns.</span></span> <span data-ttu-id="f6584-147">否则，它会寻找需要自行实现的 "ResetMyProperty" 方法。</span><span class="sxs-lookup"><span data-stu-id="f6584-147">Otherwise, it looks for a "ResetMyProperty" method that you need to implement yourself.</span></span> <span data-ttu-id="f6584-148">如果找到，则 <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> 返回 <see langword="true" /> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-148">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns <see langword="true" />.</span></span> <span data-ttu-id="f6584-149">如果找不到 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 、"ShouldPersistMyProperty" 方法或 "ResetMyProperty" 方法，则它将返回 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-149">If it cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, a "ShouldPersistMyProperty" method, or a "ResetMyProperty" method, then it returns <see langword="false" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentType : Type" Usage="System.ComponentModel.PropertyDescriptor.ComponentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6584-150">当在派生类中被重写时，获取该属性绑定到的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="f6584-150">When overridden in a derived class, gets the type of the component this property is bound to.</span></span></summary>
        <value><span data-ttu-id="f6584-151">一个 <see cref="T:System.Type" />，表示该属性绑定到的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="f6584-151">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span></span> <span data-ttu-id="f6584-152">当调用 <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> 或 <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> 方法时，指定的对象可以是此类型的实例。</span><span class="sxs-lookup"><span data-stu-id="f6584-152">When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods are invoked, the object specified might be an instance of this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-153">通常，此属性是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="f6584-153">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.ComponentModel.TypeConverter" Usage="System.ComponentModel.PropertyDescriptor.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6584-154">获取该属性的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="f6584-154">Gets the type converter for this property.</span></span></summary>
        <value><span data-ttu-id="f6584-155">一个 <see cref="T:System.ComponentModel.TypeConverter" />，用于转换该属性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-155">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateInstance (type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : Type -&gt; obj" Usage="propertyDescriptor.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f6584-156">一个 <see cref="T:System.Type" />，表示要创建的类型。</span><span class="sxs-lookup"><span data-stu-id="f6584-156">A <see cref="T:System.Type" /> that represents the type to create.</span></span></param>
        <summary><span data-ttu-id="f6584-157">创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="f6584-157">Creates an instance of the specified type.</span></span></summary>
        <returns><span data-ttu-id="f6584-158">该类型的新实例。</span><span class="sxs-lookup"><span data-stu-id="f6584-158">A new instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> 查找采用指定类型的构造函数。</span><span class="sxs-lookup"><span data-stu-id="f6584-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type.</span></span> <span data-ttu-id="f6584-160">如果找到一个构造函数，则在中传递该属性的类型。</span><span class="sxs-lookup"><span data-stu-id="f6584-160">If it finds a constructor, the type of the property is passed in.</span></span>  
  
 <span data-ttu-id="f6584-161">转换器和编辑器使用此方法来创建组件版本。</span><span class="sxs-lookup"><span data-stu-id="f6584-161">Converters and editors use this method to create versions of a component.</span></span> <span data-ttu-id="f6584-162">此方法可为多个类型重用单个组件。</span><span class="sxs-lookup"><span data-stu-id="f6584-162">This method enables a single component to be reused for more than one type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Drawing.Design.UITypeEditor" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="propertyDescriptor.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f6584-163">与此 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="f6584-163">The object to compare to this <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="f6584-164">将此对象与另一个对象进行比较，看看它们是否相等。</span><span class="sxs-lookup"><span data-stu-id="f6584-164">Compares this to another object to see if they are equivalent.</span></span></summary>
        <returns><span data-ttu-id="f6584-165">如果值相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-165"><see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAttributes">
      <MemberSignature Language="C#" Value="protected override void FillAttributes (System.Collections.IList attributeList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FillAttributes(class System.Collections.IList attributeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FillAttributes (attributeList As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void FillAttributes(System::Collections::IList ^ attributeList);" />
      <MemberSignature Language="F#" Value="override this.FillAttributes : System.Collections.IList -&gt; unit" Usage="propertyDescriptor.FillAttributes attributeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeList" Type="System.Collections.IList" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeList"><span data-ttu-id="f6584-166">一个列出父类中特性的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-166">An <see cref="T:System.Collections.IList" /> that lists the attributes in the parent class.</span></span> <span data-ttu-id="f6584-167">最初，它是空的。</span><span class="sxs-lookup"><span data-stu-id="f6584-167">Initially, this is empty.</span></span></param>
        <summary><span data-ttu-id="f6584-168">将 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 的特性添加到父类中的指定特性列表中。</span><span class="sxs-lookup"><span data-stu-id="f6584-168">Adds the attributes of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the specified list of attributes in the parent class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-169">对于重复的属性，将保留最后一个添加到列表中的属性。</span><span class="sxs-lookup"><span data-stu-id="f6584-169">For duplicate attributes, the last one added to the list will be kept.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6584-170">返回 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-170">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties();" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6584-171">返回默认的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-171">Returns the default <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span></span></summary>
        <returns><span data-ttu-id="f6584-172">属性描述符的集合。</span><span class="sxs-lookup"><span data-stu-id="f6584-172">A collection of property descriptor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-173">此方法 `null` 同时传递 `instance` 参数和 `filter` 参数。</span><span class="sxs-lookup"><span data-stu-id="f6584-173">This method passes `null` for both the `instance` parameter and the `filter` parameter.</span></span>  
  
 <span data-ttu-id="f6584-174">参数的属性 `instance` 可能不同于类的属性，因为如果参数已占位，则容器可以添加或移除属性 `instance` 。</span><span class="sxs-lookup"><span data-stu-id="f6584-174">The properties for the `instance` parameter can differ from the properties of a class, because the container can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="f6584-175">`filter`参数可以混合使用 <xref:System.Type> 和 <xref:System.Attribute> 对象。</span><span class="sxs-lookup"><span data-stu-id="f6584-175">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="f6584-176">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="f6584-176">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="f6584-177"><xref:System.Type>对象被视为通配符; 它与属性集中具有的任何属性匹配 <xref:System.Type> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-177">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="f6584-178">如果某个属性不具有 <xref:System.Attribute> 相同的类，则该属性将不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="f6584-178">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="f6584-179">如果该特性是的实例 <xref:System.Attribute> ，则该属性必须是要在返回的数组中包含的精确匹配项。</span><span class="sxs-lookup"><span data-stu-id="f6584-179">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="f6584-180">如果指定 <xref:System.Attribute> 且它是默认属性，它将包含在返回的数组中，即使属性中没有的实例也是如此 <xref:System.Attribute> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-180">If you specify an <xref:System.Attribute> and it is the default property, it will be included in the returned array, even if there is no instance of <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="f6584-181">要用作筛选器的类型 <see cref="T:System.Attribute" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="f6584-181">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="f6584-182">通过将指定的特性数组用作筛选器，返回 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-182">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="f6584-183">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有与指定的特性匹配的属性。</span><span class="sxs-lookup"><span data-stu-id="f6584-183">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-184">此方法传递 `null` `instance` 参数。</span><span class="sxs-lookup"><span data-stu-id="f6584-184">This method passes `null` for the `instance` parameter.</span></span>  
  
 <span data-ttu-id="f6584-185">参数的属性 `instance` 可能不同于类的属性，因为如果该参数被放置，则站点可以添加或删除属性 `instance` 。</span><span class="sxs-lookup"><span data-stu-id="f6584-185">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="f6584-186">`filter`参数可以混合使用 <xref:System.Type> 和 <xref:System.Attribute> 对象。</span><span class="sxs-lookup"><span data-stu-id="f6584-186">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="f6584-187">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="f6584-187">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="f6584-188"><xref:System.Type>对象被视为通配符; 它与属性集中具有的任何属性匹配 <xref:System.Type> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-188">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="f6584-189">如果某个属性不具有 <xref:System.Attribute> 相同的类，则该属性将不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="f6584-189">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="f6584-190">如果该特性是的实例 <xref:System.Attribute> ，则该属性必须是要在返回的数组中包含的精确匹配项。</span><span class="sxs-lookup"><span data-stu-id="f6584-190">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="f6584-191">如果指定一个 <xref:System.Attribute> 实例并且它是默认属性，则即使属性中没有的实例，它也将包含在返回的数组中 <xref:System.Attribute> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-191">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (instance As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="f6584-192">要为其获取属性的组件。</span><span class="sxs-lookup"><span data-stu-id="f6584-192">A component to get the properties for.</span></span></param>
        <summary><span data-ttu-id="f6584-193">返回给定对象的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-193">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object.</span></span></summary>
        <returns><span data-ttu-id="f6584-194">具有指定组件的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-194">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-195">此方法传递 `null` `filter` 参数。</span><span class="sxs-lookup"><span data-stu-id="f6584-195">This method passes `null` for the `filter` parameter.</span></span>  
  
 <span data-ttu-id="f6584-196">参数的属性 `instance` 可能不同于类的属性，因为如果该参数被放置，则站点可以添加或删除属性 `instance` 。</span><span class="sxs-lookup"><span data-stu-id="f6584-196">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="f6584-197">`filter`参数可以混合使用 <xref:System.Type> 和 <xref:System.Attribute> 对象。</span><span class="sxs-lookup"><span data-stu-id="f6584-197">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="f6584-198">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="f6584-198">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="f6584-199"><xref:System.Type>对象被视为通配符; 它与属性集中具有的任何属性匹配 <xref:System.Type> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-199">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="f6584-200">如果某个属性不具有 <xref:System.Attribute> 相同的类，则该属性将不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="f6584-200">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="f6584-201">如果该特性是的实例 <xref:System.Attribute> ，则该属性必须是要在返回的数组中包含的精确匹配项。</span><span class="sxs-lookup"><span data-stu-id="f6584-201">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="f6584-202">如果指定一个 <xref:System.Attribute> 实例并且它是默认属性，则即使属性中没有的实例，它也将包含在返回的数组中 <xref:System.Attribute> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-202">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member GetChildProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetChildProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties (instance, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="f6584-203">要为其获取属性的组件。</span><span class="sxs-lookup"><span data-stu-id="f6584-203">A component to get the properties for.</span></span></param>
        <param name="filter"><span data-ttu-id="f6584-204">要用作筛选器的类型 <see cref="T:System.Attribute" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="f6584-204">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="f6584-205">通过将指定的特性数组用作筛选器，返回给定对象的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-205">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="f6584-206">具有与指定组件的指定属性相匹配的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-206">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-207">参数的属性 `instance` 可能不同于类的属性，因为如果该参数被放置，则站点可以添加或删除属性 `instance` 。</span><span class="sxs-lookup"><span data-stu-id="f6584-207">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="f6584-208">`filter`参数可以混合使用 <xref:System.Type> 和 <xref:System.Attribute> 对象。</span><span class="sxs-lookup"><span data-stu-id="f6584-208">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="f6584-209">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="f6584-209">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="f6584-210"><xref:System.Type>对象被视为通配符; 它与属性集中具有的任何属性匹配 <xref:System.Type> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-210">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="f6584-211">如果某个属性不具有 <xref:System.Attribute> 相同的类，则该属性将不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="f6584-211">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="f6584-212">如果该特性是的实例 <xref:System.Attribute> ，则该属性必须是要在返回的数组中包含的精确匹配项。</span><span class="sxs-lookup"><span data-stu-id="f6584-212">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="f6584-213">如果指定一个 <xref:System.Attribute> 实例并且它是默认属性，则即使属性中没有的实例，它也将包含在返回的数组中 <xref:System.Attribute> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-213">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 <span data-ttu-id="f6584-214">通常，应通过实现从此 <xref:System.ComponentModel.TypeConverter.GetProperties%2A> 属性返回的的成员来返回子属性 <xref:System.ComponentModel.TypeConverter> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-214">Generally, child properties should be returned by implementing the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> member of the <xref:System.ComponentModel.TypeConverter> returned from this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public virtual object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="abstract member GetEditor : Type -&gt; obj&#xA;override this.GetEditor : Type -&gt; obj" Usage="propertyDescriptor.GetEditor editorBaseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="f6584-215">编辑器的基类型，用于区分属性所支持的多个编辑器。</span><span class="sxs-lookup"><span data-stu-id="f6584-215">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span></span></param>
        <summary><span data-ttu-id="f6584-216">获取指定类型的编辑器。</span><span class="sxs-lookup"><span data-stu-id="f6584-216">Gets an editor of the specified type.</span></span></summary>
        <returns><span data-ttu-id="f6584-217">请求的编辑器类型的实例，或者，如果未能找到编辑器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-217">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="propertyDescriptor.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6584-218">返回此对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="f6584-218">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="f6584-219">此对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="f6584-219">The hash code for this object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationTarget">
      <MemberSignature Language="C#" Value="protected override object GetInvocationTarget (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetInvocationTarget(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInvocationTarget (type As Type, instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetInvocationTarget(Type ^ type, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="override this.GetInvocationTarget : Type * obj -&gt; obj" Usage="propertyDescriptor.GetInvocationTarget (type, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f6584-220">调用目标的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-220">The <see cref="T:System.Type" /> of the invocation target.</span></span></param>
        <param name="instance"><span data-ttu-id="f6584-221">潜在的调用目标。</span><span class="sxs-lookup"><span data-stu-id="f6584-221">The potential invocation target.</span></span></param>
        <summary><span data-ttu-id="f6584-222">此方法返回应在成员调用期间使用的对象。</span><span class="sxs-lookup"><span data-stu-id="f6584-222">This method returns the object that should be used during invocation of members.</span></span></summary>
        <returns><span data-ttu-id="f6584-223">应在成员调用期间使用的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-223">The <see cref="T:System.Object" /> that should be used during invocation of members.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-224">通常，返回值将与传入的相同 `instance` 。</span><span class="sxs-lookup"><span data-stu-id="f6584-224">Typically, the return value will be the same as the `instance` passed in.</span></span> <span data-ttu-id="f6584-225">如果某人将其他对象与此实例相关联，或者如果该实例为自定义类型描述符，则该 <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> 方法可能返回不同的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-225">If someone associated another object with this instance, or if the instance is a custom type descriptor, the <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> method may return a different value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromName">
      <MemberSignature Language="C#" Value="protected Type GetTypeFromName (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Type GetTypeFromName(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTypeFromName (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Type ^ GetTypeFromName(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetTypeFromName : string -&gt; Type" Usage="propertyDescriptor.GetTypeFromName typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="f6584-226">要检索的类型的程序集限定名称。</span><span class="sxs-lookup"><span data-stu-id="f6584-226">The assembly-qualified name of the type to retrieve.</span></span></param>
        <summary><span data-ttu-id="f6584-227">返回使用其名称的类型。</span><span class="sxs-lookup"><span data-stu-id="f6584-227">Returns a type using its name.</span></span></summary>
        <returns><span data-ttu-id="f6584-228">与给定类型名称匹配的 <see cref="T:System.Type" />，或者，如果未能找到匹配，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-228">A <see cref="T:System.Type" /> that matches the given type name, or <see langword="null" /> if a match cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-229">若要查找适当的类型，此方法首先检查此引用的类型的程序集 <xref:System.ComponentModel.PropertyDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-229">To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references.</span></span> <span data-ttu-id="f6584-230">如果在程序集中找不到该类型，则调用 <xref:System.Type.GetType%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-230">If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj" Usage="propertyDescriptor.GetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="f6584-231">具有为其检索值的属性的组件。</span><span class="sxs-lookup"><span data-stu-id="f6584-231">The component with the property for which to retrieve the value.</span></span></param>
        <summary><span data-ttu-id="f6584-232">当在派生类中被重写时，获取组件上的属性的当前值。</span><span class="sxs-lookup"><span data-stu-id="f6584-232">When overridden in a derived class, gets the current value of the property on a component.</span></span></summary>
        <returns><span data-ttu-id="f6584-233">给定组件的属性的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-233">The value of a property for a given component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-234">通常，此方法是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="f6584-234">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="f6584-235">此方法自动调用的更改前方法、 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> 和更改后 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> 的方法 <xref:System.ComponentModel.Design.IComponentChangeService> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-235">This method automatically calls the pre-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, and post-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, of the <xref:System.ComponentModel.Design.IComponentChangeService>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6584-236">重写此方法时，它通过调用需要实现的 "GetMyProperty" 方法来获取该属性的当前值。</span><span class="sxs-lookup"><span data-stu-id="f6584-236">When you override this method, it gets the current value of the property by invoking a "GetMyProperty" method that you need to implement.</span></span> <span data-ttu-id="f6584-237">该方法中的异常应通过。</span><span class="sxs-lookup"><span data-stu-id="f6584-237">An exception in that method should pass through.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetValueChangedHandler">
      <MemberSignature Language="C#" Value="protected internal EventHandler GetValueChangedHandler (object component);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.EventHandler GetValueChangedHandler(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueChangedHandler (component As Object) As EventHandler" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; EventHandler ^ GetValueChangedHandler(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="member this.GetValueChangedHandler : obj -&gt; EventHandler" Usage="propertyDescriptor.GetValueChangedHandler component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="f6584-238">要为其检索事件处理程序的组件。</span><span class="sxs-lookup"><span data-stu-id="f6584-238">The component for which to retrieve event handlers.</span></span></param>
        <summary><span data-ttu-id="f6584-239">检索特定组件的 <c>ValueChanged</c> 事件处理程序的当前集合。</span><span class="sxs-lookup"><span data-stu-id="f6584-239">Retrieves the current set of <c>ValueChanged</c> event handlers for a specific component.</span></span></summary>
        <returns><span data-ttu-id="f6584-240">一个组合多路广播事件处理程序，如果当前没有为 <paramref name="component" /> 分配的事件处理程序，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-240">A combined multicast event handler, or <see langword="null" /> if no event handlers are currently assigned to <paramref name="component" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public virtual bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocalizable : bool" Usage="System.ComponentModel.PropertyDescriptor.IsLocalizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6584-241">获取指示是否应该本地化该属性的值，如 <see cref="T:System.ComponentModel.LocalizableAttribute" /> 中所指定的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-241">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span></span></summary>
        <value><span data-ttu-id="f6584-242">如果在标记成员时将 <see cref="T:System.ComponentModel.LocalizableAttribute" /> 设置为 <see langword="true" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-242"><see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> set to <see langword="true" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-243">如果将属性标记为， <xref:System.ComponentModel.LocalizableAttribute> `true` 并将其用于可视化设计器，则其值将保存在资源文件中。</span><span class="sxs-lookup"><span data-stu-id="f6584-243">When a property is marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` and used in a visual designer, its values are saved in a resource file.</span></span> <span data-ttu-id="f6584-244">如果用特性标记属性，然后在代码中设置属性，则不使用资源文件。</span><span class="sxs-lookup"><span data-stu-id="f6584-244">If you mark a property with the attribute and then set the property in code, resource files are not used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.LocalizableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.PropertyDescriptor.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6584-245">当在派生类中被重写时，获取指示该属性是否为只读的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-245">When overridden in a derived class, gets a value indicating whether this property is read-only.</span></span></summary>
        <value><span data-ttu-id="f6584-246">如果该属性只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-246"><see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (object component, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(object component, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (component As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(System::Object ^ component, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValueChanged : obj * EventArgs -&gt; unit&#xA;override this.OnValueChanged : obj * EventArgs -&gt; unit" Usage="propertyDescriptor.OnValueChanged (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="f6584-247">引发事件的对象。</span><span class="sxs-lookup"><span data-stu-id="f6584-247">The object that raises the event.</span></span></param>
        <param name="e"><span data-ttu-id="f6584-248">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-248">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f6584-249">引发已实现的 <c>ValueChanged</c> 事件。</span><span class="sxs-lookup"><span data-stu-id="f6584-249">Raises the <c>ValueChanged</c> event that you implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-250">当属性值已更改时，应由属性描述符实现调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f6584-250">This method should be called by your property descriptor implementation when the property value has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.ComponentModel.PropertyDescriptor.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6584-251">当在派生类中被重写时，获取该属性的类型。</span><span class="sxs-lookup"><span data-stu-id="f6584-251">When overridden in a derived class, gets the type of the property.</span></span></summary>
        <value><span data-ttu-id="f6584-252">一个 <see cref="T:System.Type" />，表示属性的类型。</span><span class="sxs-lookup"><span data-stu-id="f6584-252">A <see cref="T:System.Type" /> that represents the type of the property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-253">通常，此属性是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="f6584-253">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public virtual void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveValueChanged : obj * EventHandler -&gt; unit&#xA;override this.RemoveValueChanged : obj * EventHandler -&gt; unit" Usage="propertyDescriptor.RemoveValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="f6584-254">要移除其处理程序的组件。</span><span class="sxs-lookup"><span data-stu-id="f6584-254">The component to remove the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="f6584-255">要作为侦听器移除的委托。</span><span class="sxs-lookup"><span data-stu-id="f6584-255">The delegate to remove as a listener.</span></span></param>
        <summary><span data-ttu-id="f6584-256">使其他对象在此属性更改时能得到通知。</span><span class="sxs-lookup"><span data-stu-id="f6584-256">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f6584-257"><paramref name="component" /> 或 <paramref name="handler" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-257"><paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public abstract void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member ResetValue : obj -&gt; unit" Usage="propertyDescriptor.ResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="f6584-258">具有要重置为默认值的属性值的组件。</span><span class="sxs-lookup"><span data-stu-id="f6584-258">The component with the property value that is to be reset to the default value.</span></span></param>
        <summary><span data-ttu-id="f6584-259">当在派生类中被重写时，将组件的此属性的值重置为默认值。</span><span class="sxs-lookup"><span data-stu-id="f6584-259">When overridden in a derived class, resets the value for this property of the component to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-260">通常，此方法是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="f6584-260">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="f6584-261">此方法按以下优先级顺序确定要将属性重置为的值：</span><span class="sxs-lookup"><span data-stu-id="f6584-261">This method determines the value to reset the property to in the following order of precedence:</span></span>  
  
1.  <span data-ttu-id="f6584-262">此属性有一个隐藏属性。</span><span class="sxs-lookup"><span data-stu-id="f6584-262">There is a shadowed property for this property.</span></span>  
  
2.  <span data-ttu-id="f6584-263"><xref:System.ComponentModel.DefaultValueAttribute>此属性有一个。</span><span class="sxs-lookup"><span data-stu-id="f6584-263">There is a <xref:System.ComponentModel.DefaultValueAttribute> for this property.</span></span>  
  
3.  <span data-ttu-id="f6584-264">已实现 "ResetMyProperty" 方法，其中 "T.myproperty" 是传递给它的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="f6584-264">There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</span></span>  
  
 <span data-ttu-id="f6584-265">此方法 <xref:System.ComponentModel.Design.DesignerTransaction> 按以下顺序自动创建：</span><span class="sxs-lookup"><span data-stu-id="f6584-265">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="f6584-266">方法调用 <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> 方法来创建一个新的 <xref:System.ComponentModel.Design.DesignerTransaction> 来表示更改。</span><span class="sxs-lookup"><span data-stu-id="f6584-266">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="f6584-267">方法调用 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> 方法以指示事务已开始，即将发生更改。</span><span class="sxs-lookup"><span data-stu-id="f6584-267">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="f6584-268">方法将属性重置为此方法的检查顺序确定的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-268">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="f6584-269">方法调用 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> 方法以指示已发生更改。</span><span class="sxs-lookup"><span data-stu-id="f6584-269">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="f6584-270">方法调用 <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> 以指示事务已完成。</span><span class="sxs-lookup"><span data-stu-id="f6584-270">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is completed.</span></span>  
  
 <span data-ttu-id="f6584-271">事务的目的是支持 `Undo` 和 `Redo` 功能。</span><span class="sxs-lookup"><span data-stu-id="f6584-271">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6584-272">当在派生类中重写时，此方法查找 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-272">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span></span> <span data-ttu-id="f6584-273">如果找到一个，它会将属性的值设置为找到的值 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-273">If it finds one, it sets the value of the property to the <see cref="T:System.ComponentModel.DefaultValueAttribute" /> it found.</span></span> <span data-ttu-id="f6584-274">如果此方法无法找到 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> ，则会查找需要实现的 "ResetMyProperty" 方法。</span><span class="sxs-lookup"><span data-stu-id="f6584-274">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ResetMyProperty" method that you need to implement.</span></span> <span data-ttu-id="f6584-275">如果找到此方法，则 <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> 方法将调用它。</span><span class="sxs-lookup"><span data-stu-id="f6584-275">If this is found, the <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> method invokes it.</span></span> <span data-ttu-id="f6584-276">如果找 <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> 不到已 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 实现的或 "ResetMyProperty" 方法，则不会执行操作。</span><span class="sxs-lookup"><span data-stu-id="f6584-276">If <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ResetMyProperty" method that you implemented, it does not perform an operation.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6584-277">获取指示是否应该序列化该属性的值，如 <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> 中所指定的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-277">Gets a value indicating whether this property should be serialized, as specified in the <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />.</span></span></summary>
        <value><span data-ttu-id="f6584-278"><see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 枚举值之一，指定是否应该序列化该属性。</span><span class="sxs-lookup"><span data-stu-id="f6584-278">One of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration values that specifies whether this property should be serialized.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit" Usage="propertyDescriptor.SetValue (component, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="f6584-279">具有要进行设置的属性值的组件。</span><span class="sxs-lookup"><span data-stu-id="f6584-279">The component with the property value that is to be set.</span></span></param>
        <param name="value"><span data-ttu-id="f6584-280">新值。</span><span class="sxs-lookup"><span data-stu-id="f6584-280">The new value.</span></span></param>
        <summary><span data-ttu-id="f6584-281">当在派生类中被重写时，将组件的值设置为一个不同的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-281">When overridden in a derived class, sets the value of the component to a different value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-282">通常，此方法是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="f6584-282">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="f6584-283">此方法 <xref:System.ComponentModel.Design.DesignerTransaction> 按以下顺序自动创建：</span><span class="sxs-lookup"><span data-stu-id="f6584-283">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="f6584-284">方法调用 <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> 方法来创建一个新的 <xref:System.ComponentModel.Design.DesignerTransaction> 来表示更改。</span><span class="sxs-lookup"><span data-stu-id="f6584-284">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="f6584-285">方法调用 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> 方法以指示事务已开始，即将发生更改。</span><span class="sxs-lookup"><span data-stu-id="f6584-285">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="f6584-286">方法将属性重置为此方法的检查顺序确定的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-286">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="f6584-287">方法调用 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> 方法以指示已发生更改。</span><span class="sxs-lookup"><span data-stu-id="f6584-287">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="f6584-288">方法调用 <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> 以指示事务已完成。</span><span class="sxs-lookup"><span data-stu-id="f6584-288">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is complete.</span></span>  
  
 <span data-ttu-id="f6584-289">事务的目的是支持 `Undo` 和 `Redo` 功能。</span><span class="sxs-lookup"><span data-stu-id="f6584-289">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6584-290">重写此方法时，应通过调用需要实现的适当 "SetMyProperty" 方法来设置属性的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-290">When you override this method, it should set the value of the property by invoking the appropriate "SetMyProperty" method that you need to implement.</span></span> <span data-ttu-id="f6584-291">如果指定的值无效，则该组件应引发异常，该异常会向上传递。</span><span class="sxs-lookup"><span data-stu-id="f6584-291">If the value specified is not valid, the component should throw an exception, which is passed up.</span></span> <span data-ttu-id="f6584-292">你应设计属性，以便在 "SetMyProperty" 方法不引发异常的情况下，在 "SetMyProperty" 方法后面) 实现的 "GetMyProperty" 方法 (将返回传入的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-292">You should design the property so that a "GetMyProperty" method (that you have implemented) following a "SetMyProperty" method returns the value passed in when the "SetMyProperty" method does not throw an exception.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public abstract bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; bool" Usage="propertyDescriptor.ShouldSerializeValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="f6584-293">具有要检查其持久性的属性的组件。</span><span class="sxs-lookup"><span data-stu-id="f6584-293">The component with the property to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="f6584-294">当在派生类中被重写时，确定一个值，该值指示是否需要永久保存此属性的值。</span><span class="sxs-lookup"><span data-stu-id="f6584-294">When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</span></span></summary>
        <returns><span data-ttu-id="f6584-295">如果属性应该被永久保存，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-295"><see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-296">通常，此方法是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="f6584-296">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6584-297">当在派生类中重写时， <see langword="true" /> 如果该属性的当前值与默认值不同，则此方法返回。</span><span class="sxs-lookup"><span data-stu-id="f6584-297">When overridden in a derived class, this method returns <see langword="true" /> if the current value of the property is different from its default value.</span></span> <span data-ttu-id="f6584-298">它通过首先查找来查找默认值 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-298">It looks for a default value by first looking for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span></span> <span data-ttu-id="f6584-299">如果方法找到此特性，它会将属性的值与属性的当前值进行比较。</span><span class="sxs-lookup"><span data-stu-id="f6584-299">If the method finds this attribute, it compares the value of the attribute with the property's current value.</span></span> <span data-ttu-id="f6584-300">如果此方法无法找到 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> ，则会查找需要实现的 "ShouldSerializeMyProperty" 方法。</span><span class="sxs-lookup"><span data-stu-id="f6584-300">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldSerializeMyProperty" method that you need to implement.</span></span> <span data-ttu-id="f6584-301">如果找到，则 <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> 调用它。</span><span class="sxs-lookup"><span data-stu-id="f6584-301">If it is found, <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> invokes it.</span></span> <span data-ttu-id="f6584-302">如果此方法找不到 <see cref="T:System.ComponentModel.DefaultValueAttribute" /> 或 "ShouldSerializeMyProperty" 方法，它将无法创建优化并返回 <see langword="true" /> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-302">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ShouldSerializeMyProperty" method, it cannot create optimizations and it returns <see langword="true" />.</span></span>
 
 <block subset="none" type="note"><para>  
 <span data-ttu-id="f6584-303"><see cref="T:System.ComponentModel.Design.ComponentDesigner" />类实现继承组件的特殊序列化逻辑。</span><span class="sxs-lookup"><span data-stu-id="f6584-303">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class implements special serialization logic for inherited components.</span></span> <span data-ttu-id="f6584-304">有关详细信息，请参阅 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-304">For more information, see <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span></span>  
</para></block></para></block>
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeEvents : bool" Usage="System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6584-305">获取一个值，该值指示此属性的值更改通知是否源自属性说明符的外部。</span><span class="sxs-lookup"><span data-stu-id="f6584-305">Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</span></span></summary>
        <value><span data-ttu-id="f6584-306">如果值更改通知可能源自属性说明符的外部，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f6584-306"><see langword="true" /> if value change notifications may originate from outside the property descriptor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6584-307"><xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A>属性指示此属性的值更改通知是否源自属性说明符的外部（例如来自组件本身），或通知是否仅源自对方法的直接调用 <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f6584-307">The <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method.</span></span> <span data-ttu-id="f6584-308">例如，组件可以实现 <xref:System.ComponentModel.INotifyPropertyChanged> 接口，或可能具有 `name.Changed` 此属性的显式事件。</span><span class="sxs-lookup"><span data-stu-id="f6584-308">For example, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `name.Changed` event for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
