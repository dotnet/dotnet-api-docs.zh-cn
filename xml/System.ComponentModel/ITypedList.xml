<Type Name="ITypedList" FullName="System.ComponentModel.ITypedList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="729c683411a5da0c14267b6a06f79e40d411f076" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89996128" /></Metadata><TypeSignature Language="C#" Value="public interface ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypedList" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypedList" />
  <TypeSignature Language="F#" Value="type ITypedList = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary>提供发现可绑定列表架构的功能，其中可用于绑定的属性不同于要绑定到的对象的公共属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 例如，如果使用 <xref:System.Data.DataView> 表示表的对象 `customer` ，则需要绑定到表示的对象的属性 `customer` <xref:System.Data.DataView> ，而不是绑定的属性 <xref:System.Data.DataView> 。  
  
 对于可绑定列表的设计时支持，不需要此接口。  
  
 绑定到数据可在运行时或在设计器中发生，但同时存在这两种情况的规则。 在运行时，可以通过以下任一操作绑定到数据：  
  
-   <xref:System.Array>  
  
-   的实施者 <xref:System.Collections.IList> ，前提是实施者有一个强类型的 <xref:System.Collections.IList.Item%2A> 属性 (也就是说，它 <xref:System.Type> 是但 <xref:System.Object>) 的。 您可以通过将默认实现设为私有来实现此目的 <xref:System.Collections.IList.Item%2A> 。 如果要创建 <xref:System.Collections.IList> 遵循强类型集合的规则的，则应派生自 <xref:System.Collections.CollectionBase> 。  
  
-   的实施者 <xref:System.ComponentModel.ITypedList> 。  
  
 在设计器中，可以 <xref:System.ComponentModel.Component> 遵循相同的规则来初始化到对象的绑定。  
  
 有关绑定到数据源的详细信息，请参阅 <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> 类。  
  
   
  
## Examples  
 下面的代码示例演示如何实现 <xref:System.ComponentModel.ITypedList> 接口。 名为的泛型类型 `SortableBindingList` 从 <xref:System.ComponentModel.BindingList%601> 类派生并实现 <xref:System.ComponentModel.ITypedList> 接口。 有关完整的代码清单，请参阅 [如何：实现 ITypedList 接口](/dotnet/framework/winforms/how-to-implement-the-itypedlist-interface)。  
  
 [!code-csharp[System.ComponentModel.ITypedList#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#1)]
 [!code-vb[System.ComponentModel.ITypedList#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BindingList`1" />
    <related type="Article" href="/dotnet/framework/winforms/how-to-implement-the-itypedlist-interface">如何：实现 ITypedList 接口</related>
    <related type="Article" href="/dotnet/framework/winforms/windows-forms-data-binding">Windows 窗体数据绑定</related>
  </Docs>
  <Members>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iTypedList.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">要在组合中查找的可绑定的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象的数组。 它可以是 <see langword="null" />。</param>
        <summary>返回 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其表示每一项上用于绑定数据的属性。</summary>
        <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其表示每一项上用于绑定数据的属性。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `listAccessors` 参数不为 `null` ，则它通常包含一个属性说明符，该说明符标识要为实现的对象检索的容器的列表 <xref:System.ComponentModel.ITypedList> 。 例如， <xref:System.Data.DataSet> 包含两个表的，以及两个表 `myCustomers` `myOrders` 之间的关系 `myCustOrders` 。 如果创建 <xref:System.Data.DataView> 要查看的对象 `myCustomers` ，则 <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> 通过调用方法并 `null` 返回中的列的属性说明符 `myCustomers` 。 因此，返回的属性描述符之一是的属性描述符 `myCustOrders` ，就像 <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> 使用包含的属性说明符的列表访问器数组调用方法时， `myCustOrders` 将返回的属性说明符 `myOrders` 。  
  
   
  
## Examples  
 下面的代码示例演示如何实现 <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> 方法。 有关完整的代码清单，请参阅 [如何：实现 ITypedList 接口](/dotnet/framework/winforms/how-to-implement-the-itypedlist-interface)。  
  
 [!code-csharp[System.ComponentModel.ITypedList#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#3)]
 [!code-vb[System.ComponentModel.ITypedList#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <related type="Article" href="/dotnet/framework/winforms/how-to-implement-the-itypedlist-interface">如何：实现 ITypedList 接口</related>
        <related type="Article" href="/dotnet/framework/winforms/windows-forms-data-binding">Windows 窗体数据绑定</related>
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="iTypedList.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">为其返回列表名称的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象的数组。 它可以是 <see langword="null" />。</param>
        <summary>返回列表名称。</summary>
        <returns>列表名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法仅在设计时框架和过时的控件中使用 <xref:System.Windows.Forms.DataGrid> 。  
  
   
  
## Examples  
 下面的代码示例演示如何实现 <xref:System.ComponentModel.ITypedList.GetListName%2A> 方法。 有关完整的代码清单，请参阅 [如何：实现 ITypedList 接口](/dotnet/framework/winforms/how-to-implement-the-itypedlist-interface)。  
  
 [!code-csharp[System.ComponentModel.ITypedList#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#4)]
 [!code-vb[System.ComponentModel.ITypedList#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <related type="Article" href="/dotnet/framework/winforms/how-to-implement-the-itypedlist-interface">如何：实现 ITypedList 接口</related>
        <related type="Article" href="/dotnet/framework/winforms/windows-forms-data-binding">Windows 窗体数据绑定</related>
      </Docs>
    </Member>
  </Members>
</Type>
