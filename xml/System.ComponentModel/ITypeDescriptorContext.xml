<Type Name="ITypeDescriptorContext" FullName="System.ComponentModel.ITypeDescriptorContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f552fd36d55dbb0cd69783a4436c7bea22b71299" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86733666" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorContext implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypeDescriptorContext" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorContext&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorContext : IServiceProvider" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorContext = interface&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="823c7-101">提供有关组件的上下文信息，如其容器和属性描述符。</span><span class="sxs-lookup"><span data-stu-id="823c7-101">Provides contextual information about a component, such as its container and property descriptor.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="823c7-102"><xref:System.ComponentModel.ITypeDescriptorContext>接口提供有关组件的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="823c7-102">The <xref:System.ComponentModel.ITypeDescriptorContext> interface provides contextual information about a component.</span></span> <span data-ttu-id="823c7-103"><xref:System.ComponentModel.ITypeDescriptorContext> 通常在设计时用来提供有关设计时容器的信息。</span><span class="sxs-lookup"><span data-stu-id="823c7-103"><xref:System.ComponentModel.ITypeDescriptorContext> is typically used at design time to provide information about a design-time container.</span></span> <span data-ttu-id="823c7-104">此接口通常用于类型转换。</span><span class="sxs-lookup"><span data-stu-id="823c7-104">This interface is commonly used in type conversion.</span></span> <span data-ttu-id="823c7-105">有关详细信息，请参阅 <xref:System.ComponentModel.TypeConverter>。</span><span class="sxs-lookup"><span data-stu-id="823c7-105">For details, see <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="823c7-106">设计类型转换器时，不要依赖于此接口的存在。</span><span class="sxs-lookup"><span data-stu-id="823c7-106">Do not rely on the presence of this interface when you design a type converter.</span></span> <span data-ttu-id="823c7-107">如果特定接口、属性或服务是必需的，但不可用，则类型转换器应返回，而不是 `null` 引发异常。</span><span class="sxs-lookup"><span data-stu-id="823c7-107">If a particular interface, property, or service is necessary but not available, the type converter should return `null` rather than throw an exception.</span></span> <span data-ttu-id="823c7-108">此接口的属性可以随时返回 `null` ，你应该为此进行规划。</span><span class="sxs-lookup"><span data-stu-id="823c7-108">This interface's properties can return `null` at any time, and you should plan for this.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="823c7-109">下面的代码示例演示如何使用 <xref:System.ComponentModel.ITypeDescriptorContext> 接口来支持类型转换。</span><span class="sxs-lookup"><span data-stu-id="823c7-109">The following code example demonstrates how to use the <xref:System.ComponentModel.ITypeDescriptorContext> interface to support type conversion.</span></span>  
  
 [!code-cpp[InstanceDescriptorSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/InstanceDescriptorSample/CPP/instancedescriptor.cpp#1)]
 [!code-csharp[InstanceDescriptorSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/InstanceDescriptorSample/CS/instancedescriptor.cs#1)]
 [!code-vb[InstanceDescriptorSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/InstanceDescriptorSample/VB/instancedescriptor.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ITypeDescriptorContext.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer" Usage="System.ComponentModel.ITypeDescriptorContext.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="823c7-110">获取表示此 <see cref="T:System.ComponentModel.TypeDescriptor" /> 请求的容器。</span><span class="sxs-lookup"><span data-stu-id="823c7-110">Gets the container representing this <see cref="T:System.ComponentModel.TypeDescriptor" /> request.</span></span></summary>
        <value><span data-ttu-id="823c7-111">包含此 <see cref="T:System.ComponentModel.IContainer" /> 的对象集的 <see cref="T:System.ComponentModel.TypeDescriptor" />；否则，如果不存在容器，或者如果 <see cref="T:System.ComponentModel.TypeDescriptor" /> 不使用外部对象，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="823c7-111">An <see cref="T:System.ComponentModel.IContainer" /> with the set of objects for this <see cref="T:System.ComponentModel.TypeDescriptor" />; otherwise, <see langword="null" /> if there is no container or if the <see cref="T:System.ComponentModel.TypeDescriptor" /> does not use outside objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="823c7-112"><xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>属性获取与类型描述符关联的组件的逻辑容器。</span><span class="sxs-lookup"><span data-stu-id="823c7-112">The <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A> property gets the logical container of the component associated with the type descriptor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IContainer" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public object Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Instance" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ITypeDescriptorContext.Instance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Instance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Instance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : obj" Usage="System.ComponentModel.ITypeDescriptorContext.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="823c7-113">获取与此类型说明符请求相连接的对象。</span><span class="sxs-lookup"><span data-stu-id="823c7-113">Gets the object that is connected with this type descriptor request.</span></span></summary>
        <value><span data-ttu-id="823c7-114">调用 <see cref="T:System.ComponentModel.TypeDescriptor" /> 的方法的对象；否则，如果不存在负责调用的对象，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="823c7-114">The object that invokes the method on the <see cref="T:System.ComponentModel.TypeDescriptor" />; otherwise, <see langword="null" /> if there is no object responsible for the call.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="823c7-115"><xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A>属性获取正在调用接口的对象 <xref:System.ComponentModel.ITypeDescriptorContext> 。</span><span class="sxs-lookup"><span data-stu-id="823c7-115">The <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property gets the object that is invoking the <xref:System.ComponentModel.ITypeDescriptorContext> interface.</span></span> <span data-ttu-id="823c7-116">例如，如果向类型转换器提供 <xref:System.Drawing.Color> 要转换的， <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> 则返回使用的控件的实际实例 <xref:System.Drawing.Color> 。</span><span class="sxs-lookup"><span data-stu-id="823c7-116">For example, if a type converter is given a <xref:System.Drawing.Color> to convert, <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> returns the actual instance of the control that is using the <xref:System.Drawing.Color>.</span></span> <span data-ttu-id="823c7-117">然后，你可以查询控件以获取有关其服务和的详细信息 <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A> 。</span><span class="sxs-lookup"><span data-stu-id="823c7-117">You can subsequently query the control for further information about its services and its <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Component" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public void OnComponentChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnComponentChanged ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnComponentChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanged : unit -&gt; unit" Usage="iTypeDescriptorContext.OnComponentChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="823c7-118">引发 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="823c7-118">Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="823c7-119">使用 <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> 方法发送有关对象实例已更改的通知。</span><span class="sxs-lookup"><span data-stu-id="823c7-119">Use the <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> method to send notification that an instance of an object has changed.</span></span>  
  
 <span data-ttu-id="823c7-120">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="823c7-120">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="823c7-121">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="823c7-121">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="823c7-122"><xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="823c7-122">The <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="823c7-123">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="823c7-123">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="823c7-124">当 <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="823c7-124">When overriding <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public bool OnComponentChanging ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnComponentChanging() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" />
      <MemberSignature Language="VB.NET" Value="Public Function OnComponentChanging () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnComponentChanging();" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanging : unit -&gt; bool" Usage="iTypeDescriptorContext.OnComponentChanging " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="823c7-125">引发 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="823c7-125">Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</span></span></summary>
        <returns><span data-ttu-id="823c7-126">如果该对象可以更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="823c7-126"><see langword="true" /> if this object can be changed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="823c7-127">使用 <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> 方法发送有关对象的实例将要更改的通知。</span><span class="sxs-lookup"><span data-stu-id="823c7-127">Use the <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> method to send notification that an instance of an object is about to be changed.</span></span> <span data-ttu-id="823c7-128">此方法还会返回一个值，该值指示是否可以更改此对象。</span><span class="sxs-lookup"><span data-stu-id="823c7-128">This method also returns a value indicating whether this object can be changed.</span></span> <span data-ttu-id="823c7-129">返回时，请不要 `false` 更改对象。</span><span class="sxs-lookup"><span data-stu-id="823c7-129">When `false` is returned, do not change the object.</span></span>  
  
 <span data-ttu-id="823c7-130">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="823c7-130">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="823c7-131">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="823c7-131">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="823c7-132"><xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="823c7-132">The <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="823c7-133">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="823c7-133">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="823c7-134">当 <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="823c7-134">When overriding <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
        <altmember cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyDescriptor As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ PropertyDescriptor { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyDescriptor : System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="823c7-135">获取与给定上下文项相关联的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="823c7-135">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is associated with the given context item.</span></span></summary>
        <value><span data-ttu-id="823c7-136">描述给定上下文项的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；否则，如果不存在负责调用的 <see cref="T:System.ComponentModel.PropertyDescriptor" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="823c7-136">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the given context item; otherwise, <see langword="null" /> if there is no <see cref="T:System.ComponentModel.PropertyDescriptor" /> responsible for the call.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>
