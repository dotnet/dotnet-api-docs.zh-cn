<Type Name="DoWorkEventHandler" FullName="System.ComponentModel.DoWorkEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a21a2cc938958bd26a4cd559637a255f20674e3c" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83915796" /></Metadata><TypeSignature Language="C#" Value="public delegate void DoWorkEventHandler(object sender, DoWorkEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DoWorkEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DoWorkEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DoWorkEventHandler(sender As Object, e As DoWorkEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DoWorkEventHandler(System::Object ^ sender, DoWorkEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DoWorkEventHandler = delegate of obj * DoWorkEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.EventBasedAsync" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.DoWorkEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="0a98b-101">事件的源。</span><span class="sxs-lookup"><span data-stu-id="0a98b-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="0a98b-102">一个包含事件数据的 <see cref="T:System.ComponentModel.DoWorkEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="0a98b-102">A <see cref="T:System.ComponentModel.DoWorkEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="0a98b-103">表示将处理 <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="0a98b-103">Represents the method that will handle the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event.</span></span> <span data-ttu-id="0a98b-104">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="0a98b-104">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a98b-105">创建 <xref:System.ComponentModel.DoWorkEventHandler> 委托时，需要标识将处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="0a98b-105">When you create a <xref:System.ComponentModel.DoWorkEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="0a98b-106">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</span><span class="sxs-lookup"><span data-stu-id="0a98b-106">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="0a98b-107">只要事件发生，就会调用事件处理程序方法，除非删除委托。</span><span class="sxs-lookup"><span data-stu-id="0a98b-107">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="0a98b-108">有关事件处理程序委托的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="0a98b-108">For more information about event-handler delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a98b-109">下面的代码示例演示如何使用 <xref:System.ComponentModel.DoWorkEventHandler> 委托处理 <xref:System.ComponentModel.BackgroundWorker.DoWork> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a98b-109">The following code example demonstrates how to use the <xref:System.ComponentModel.DoWorkEventHandler> delegate to handle the <xref:System.ComponentModel.BackgroundWorker.DoWork> event.</span></span> <span data-ttu-id="0a98b-110">有关完整的代码清单，请参阅[如何：在后台运行操作](/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background)。</span><span class="sxs-lookup"><span data-stu-id="0a98b-110">For a full code listing, see [How to: Run an Operation in the Background](/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.Example/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.Example/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BackgroundWorker" />
    <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="0a98b-111">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="0a98b-111">How to: Run an Operation in the Background</span></span></related>
  </Docs>
</Type>
