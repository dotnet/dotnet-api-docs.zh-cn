<Type Name="BackgroundWorker" FullName="System.ComponentModel.BackgroundWorker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a92794761ad4417dd7ce406018a79fd707bbe232" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100333373" /></Metadata><TypeSignature Language="C#" Value="public class BackgroundWorker : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackgroundWorker extends System.Object implements class System.IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.BackgroundWorker" />
  <TypeSignature Language="VB.NET" Value="Public Class BackgroundWorker&#xA;Implements IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class BackgroundWorker : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type BackgroundWorker = class&#xA;    interface IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C#" Value="public class BackgroundWorker : System.ComponentModel.Component" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackgroundWorker extends System.ComponentModel.Component" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public Class BackgroundWorker&#xA;Inherits Component" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class BackgroundWorker : System::ComponentModel::Component" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type BackgroundWorker = class&#xA;    inherit Component" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.EventBasedAsync" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1">
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("DoWork")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("DoWork")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4c9c9-101">在单独的线程上执行操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-101">Executes an operation on a separate thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-102"><xref:System.ComponentModel.BackgroundWorker>类允许您在单独的专用线程上运行操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-102">The <xref:System.ComponentModel.BackgroundWorker> class allows you to run an operation on a separate, dedicated thread.</span></span> <span data-ttu-id="4c9c9-103">耗时的操作（如下载和数据库事务）可能导致用户界面 (UI) 在运行时已停止响应。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-103">Time-consuming operations like downloads and database transactions can cause your user interface (UI) to seem as though it has stopped responding while they are running.</span></span> <span data-ttu-id="4c9c9-104">如果需要响应式 UI，并面临与此类操作相关联的长时间延迟，此 <xref:System.ComponentModel.BackgroundWorker> 类提供了一个方便的解决方案。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-104">When you want a responsive UI and you are faced with long delays associated with such operations, the <xref:System.ComponentModel.BackgroundWorker> class provides a convenient solution.</span></span>  
  
 <span data-ttu-id="4c9c9-105">若要在后台执行耗时的操作，请创建 <xref:System.ComponentModel.BackgroundWorker> 并侦听报告操作进度的事件，并在操作完成后发出信号。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-105">To execute a time-consuming operation in the background, create a <xref:System.ComponentModel.BackgroundWorker> and listen for events that report the progress of your operation and signal when your operation is finished.</span></span> <span data-ttu-id="4c9c9-106">可以 <xref:System.ComponentModel.BackgroundWorker> 通过编程方式创建，也可以从 "**工具箱**" 的 "**组件**" 选项卡将其拖到窗体上。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-106">You can create the <xref:System.ComponentModel.BackgroundWorker> programmatically or you can drag it onto your form from the **Components** tab of the **Toolbox**.</span></span> <span data-ttu-id="4c9c9-107">如果 <xref:System.ComponentModel.BackgroundWorker> 在 Windows 窗体设计器中创建，它将显示在组件栏中，并且它的属性将显示在属性窗口中。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-107">If you create the <xref:System.ComponentModel.BackgroundWorker> in the Windows Forms Designer, it will appear in the Component Tray, and its properties will be displayed in the Properties window.</span></span>  
  
 <span data-ttu-id="4c9c9-108">若要设置后台操作，请为事件添加事件处理程序 <xref:System.ComponentModel.BackgroundWorker.DoWork> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-108">To set up for a background operation, add an event handler for the <xref:System.ComponentModel.BackgroundWorker.DoWork> event.</span></span> <span data-ttu-id="4c9c9-109">在此事件处理程序中调用耗时的操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-109">Call your time-consuming operation in this event handler.</span></span> <span data-ttu-id="4c9c9-110">若要开始操作，请调用 <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-110">To start the operation, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span> <span data-ttu-id="4c9c9-111">若要接收有关进度更新的通知，请处理 <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-111">To receive notifications of progress updates, handle the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="4c9c9-112">若要在操作完成时接收通知，请处理 <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> 事件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-112">To receive a notification when the operation is completed, handle the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c9c9-113">您必须注意不要操作事件处理程序中的任何用户界面对象 <xref:System.ComponentModel.BackgroundWorker.DoWork> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-113">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="4c9c9-114">而是通过和事件与用户界面通信 <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-114">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> events.</span></span>  
>   
>  <span data-ttu-id="4c9c9-115"><xref:System.ComponentModel.BackgroundWorker> 事件不跨边界进行封送处理 <xref:System.AppDomain> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-115"><xref:System.ComponentModel.BackgroundWorker> events are not marshaled across <xref:System.AppDomain> boundaries.</span></span> <span data-ttu-id="4c9c9-116">不要使用 <xref:System.ComponentModel.BackgroundWorker> 组件来执行多线程操作 <xref:System.AppDomain> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-116">Do not use a <xref:System.ComponentModel.BackgroundWorker> component to perform multithreaded operations in more than one <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="4c9c9-117">如果后台操作需要参数，请 <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> 使用参数调用。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-117">If your background operation requires a parameter, call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> with your parameter.</span></span> <span data-ttu-id="4c9c9-118">在 <xref:System.ComponentModel.BackgroundWorker.DoWork> 事件处理程序中，可以从属性中提取参数 <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-118">Inside the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can extract the parameter from the <xref:System.ComponentModel.DoWorkEventArgs.Argument%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="4c9c9-119">有关 <xref:System.ComponentModel.BackgroundWorker> 的详细信息，请参阅[如何：在后台运行操作](/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background)。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-119">For more information about <xref:System.ComponentModel.BackgroundWorker>, see [How to: Run an Operation in the Background](/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-120">下面的代码示例演示了 <xref:System.ComponentModel.BackgroundWorker> 用于以异步方式执行耗时操作的类的基本知识。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-120">The following code example demonstrates the basics of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="4c9c9-121">下图显示了输出的示例。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-121">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="4c9c9-122">![BackgroundWorker 简单示例](~/add/media/backgroundworker-simple.png "BackgroundWorker 简单示例")</span><span class="sxs-lookup"><span data-stu-id="4c9c9-122">![BackgroundWorker simple example](~/add/media/backgroundworker-simple.png "BackgroundWorker simple example")</span></span>  
  
 <span data-ttu-id="4c9c9-123">若要尝试此代码，请创建 Windows 窗体应用程序。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-123">To try this code, create a Windows Forms application.</span></span> <span data-ttu-id="4c9c9-124">添加一个 <xref:System.Windows.Forms.Label> 名为的控件 `resultLabel` ，并添加两个 <xref:System.Windows.Forms.Button> 名为 `startAsyncButton` 和 `cancelAsyncButton` 的控件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-124">Add a <xref:System.Windows.Forms.Label> control named `resultLabel` and add two <xref:System.Windows.Forms.Button> controls named `startAsyncButton` and `cancelAsyncButton`.</span></span> <span data-ttu-id="4c9c9-125"><xref:System.Windows.Forms.Control.Click>为这两个按钮创建事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-125">Create <xref:System.Windows.Forms.Control.Click> event handlers for both buttons.</span></span> <span data-ttu-id="4c9c9-126">从 "工具箱" 的 " **组件** " 选项卡中，添加一个 <xref:System.ComponentModel.BackgroundWorker> 名为的组件 `backgroundWorker1` 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-126">From the **Components** tab of the Toolbox, add a <xref:System.ComponentModel.BackgroundWorker> component named `backgroundWorker1`.</span></span> <span data-ttu-id="4c9c9-127"><xref:System.ComponentModel.BackgroundWorker.DoWork>为创建、 <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> 和 <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> 事件处理程序 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-127">Create <xref:System.ComponentModel.BackgroundWorker.DoWork>, <xref:System.ComponentModel.BackgroundWorker.ProgressChanged>, and <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handlers for the <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="4c9c9-128">在窗体的代码中，将现有代码替换为以下代码。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-128">In the code for the form, replace the existing code with the following code.</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/cs/form1.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorkerSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.componentmodel.backgroundworkersimple/vb/form1.vb#1)]  
  
 <span data-ttu-id="4c9c9-129">下面的代码示例演示如何使用 <xref:System.ComponentModel.BackgroundWorker> 类异步执行耗时的操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-129">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker> class for executing a time-consuming operation asynchronously.</span></span> <span data-ttu-id="4c9c9-130">下图显示了输出的示例。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-130">The following illustration shows an example of the output.</span></span>  
  
 <span data-ttu-id="4c9c9-131">![BackgroundWorker Fibonacci 示例](~/add/media/backgroundworker-fibonacci.png "BackgroundWorker Fibonacci 示例")</span><span class="sxs-lookup"><span data-stu-id="4c9c9-131">![BackgroundWorker Fibonacci example](~/add/media/backgroundworker-fibonacci.png "BackgroundWorker Fibonacci example")</span></span>  
  
 <span data-ttu-id="4c9c9-132">操作计算选定的斐波那契数，在计算过程中报告进度更新，并允许取消挂起的计算。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-132">The operation computes the selected Fibonacci number, reports progress updates as the calculation proceeds, and permits a pending calculation to be canceled.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#1)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#1)]
 [!code-vb[System.ComponentModel.BackgroundWorker#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-133">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-133">How to: Run an Operation in the Background</span></span></related>
    <related type="Article" href="/dotnet/standard/threading/managed-threading-best-practices"><span data-ttu-id="4c9c9-134">托管线程处理的最佳做法</span><span class="sxs-lookup"><span data-stu-id="4c9c9-134">Managed Threading Best Practices</span></span></related>
    <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-135">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-135">How to: Download a File in the Background</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackgroundWorker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BackgroundWorker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c9c9-136">初始化 <see cref="T:System.ComponentModel.BackgroundWorker" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-136">Initializes a new instance of the <see cref="T:System.ComponentModel.BackgroundWorker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-137">此构造函数将初始化 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-137">This constructor initializes a <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-138">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-138">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-139">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-139">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="backgroundWorker.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c9c9-140">请求取消挂起的后台操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-140">Requests cancellation of a pending background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> 提交请求以终止挂起的后台操作，并将 <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> 属性设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-141"><xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> submits a request to terminate the pending background operation and sets the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="4c9c9-142">当你调用时 <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> ，你的辅助方法有机会停止其执行并退出。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-142">When you call <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A>, your worker method has an opportunity to stop its execution and exit.</span></span> <span data-ttu-id="4c9c9-143">辅助代码应定期检查 <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> 属性，以确定它是否已设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-143">The worker code should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to see if it has been set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4c9c9-144">请注意， <xref:System.ComponentModel.BackgroundWorker.DoWork> 事件处理程序中的代码可以在发出取消请求时完成其工作，并且轮询循环可能会 <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> 被设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-144">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="4c9c9-145">在这种情况下， <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> `true` 即使发出了取消请求，也不会将事件处理程序中的标志设置为。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-145">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="4c9c9-146">这种情况称为 *争用条件* ，是多线程编程中常见的问题。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-146">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="4c9c9-147">有关多线程设计问题的详细信息，请参阅 [托管线程处理最佳做法](/dotnet/standard/threading/managed-threading-best-practices)。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-147">For more information about multithreading design issues, see [Managed Threading Best Practices](/dotnet/standard/threading/managed-threading-best-practices).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-148">下面的代码示例演示如何使用 <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> 方法取消异步 ( "background" ) 操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-148">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to cancel an asynchronous ("background") operation.</span></span> <span data-ttu-id="4c9c9-149">此代码示例是为类提供的更大示例的一部分 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-149">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#4)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#4)]
 [!code-vb[System.ComponentModel.BackgroundWorker#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4c9c9-150"><see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-150"><see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> is <see langword="false" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-151">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-151">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-152">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-152">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CancellationPending">
      <MemberSignature Language="C#" Value="public bool CancellationPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancellationPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancellationPending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationPending : bool" Usage="System.ComponentModel.BackgroundWorker.CancellationPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c9c9-153">获取一个值，指示应用程序是否已请求取消后台操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-153">Gets a value indicating whether the application has requested cancellation of a background operation.</span></span></summary>
        <value><span data-ttu-id="4c9c9-154">如果应用程序已请求取消后台操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-154"><see langword="true" /> if the application has requested cancellation of a background operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4c9c9-155">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-155">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-156">如果 <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> 为 `true` ，则 <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> 已在上调用方法 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-156">If <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> is `true`, then the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method has been called on the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 <span data-ttu-id="4c9c9-157">此属性旨在供工作线程使用，此属性应在 <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> 设置为时定期检查并中止后台操作 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-157">This property is meant for use by the worker thread, which should periodically check <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> and abort the background operation when it is set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-158">下面的代码示例演示如何使用 <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> 属性来查询 <xref:System.ComponentModel.BackgroundWorker> 其取消状态。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-158">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property to query a <xref:System.ComponentModel.BackgroundWorker> about its cancellation state.</span></span> <span data-ttu-id="4c9c9-159">此代码示例是为类提供的更大示例的一部分 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-159">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-160">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-160">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-161">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-161">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="backgroundWorker.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c9c9-162">执行与释放或重置非托管资源关联的应用程序定义的任务。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-162">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="backgroundWorker.Dispose disposing" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="backgroundWorker.Dispose disposing" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoWork">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.DoWorkEventHandler DoWork;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.DoWorkEventHandler DoWork" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.DoWork" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoWork As DoWorkEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::DoWorkEventHandler ^ DoWork;" />
      <MemberSignature Language="F#" Value="member this.DoWork : System.ComponentModel.DoWorkEventHandler " Usage="member this.DoWork : System.ComponentModel.DoWorkEventHandler " />
      <MemberSignature Language="C#" Value="public event System.ComponentModel.DoWorkEventHandler? DoWork;" FrameworkAlternate="net-5.0" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DoWorkEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c9c9-163">调用 <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> 时发生。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-163">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-164">当调用方法时，将引发此事件 <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-164">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method.</span></span> <span data-ttu-id="4c9c9-165">在这种情况下，你可以在其中开始执行可能耗费时间的工作的操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-165">This is where you start the operation that performs the potentially time-consuming work.</span></span>  
  
 <span data-ttu-id="4c9c9-166"><xref:System.ComponentModel.BackgroundWorker.DoWork>事件处理程序中的代码应定期检查 <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> 属性值，如果为，则中止操作 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-166">Your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler should periodically check the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> property value and abort the operation if it is `true`.</span></span> <span data-ttu-id="4c9c9-167">出现这种情况时，你可以将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 的标志设置 <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> 为 `true` ，并将 <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> 事件处理程序中的标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-167">When this occurs, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, and the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4c9c9-168">请注意， <xref:System.ComponentModel.BackgroundWorker.DoWork> 事件处理程序中的代码可以在发出取消请求时完成其工作，并且轮询循环可能会 <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> 被设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-168">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="4c9c9-169">在这种情况下， <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> `true` 即使发出了取消请求，也不会将事件处理程序中的标志设置为。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-169">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="4c9c9-170">这种情况称为 *争用条件* ，是多线程编程中常见的问题。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-170">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="4c9c9-171">有关多线程设计问题的详细信息，请参阅 [托管线程处理最佳做法](/dotnet/standard/threading/managed-threading-best-practices)。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-171">For more information about multithreading design issues, see [Managed Threading Best Practices](/dotnet/standard/threading/managed-threading-best-practices).</span></span>  
  
 <span data-ttu-id="4c9c9-172">如果操作生成结果，则可以将结果分配给 <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-172">If your operation produces a result, you can assign the result to the <xref:System.ComponentModel.DoWorkEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="4c9c9-173">这将可用于 <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> 属性中的事件处理程序 <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-173">This will be available to the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler in the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="4c9c9-174">如果操作引发了你的代码不处理的异常，则将 <xref:System.ComponentModel.BackgroundWorker> 捕获异常并将其传递到 <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> 事件处理程序中，并将它作为的 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> 属性公开 <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-174">If the operation raises an exception that your code does not handle, the <xref:System.ComponentModel.BackgroundWorker> catches the exception and passes it into the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler, where it is exposed as the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4c9c9-175">如果在 Visual Studio 调试器下运行，调试器将在 <xref:System.ComponentModel.BackgroundWorker.DoWork> 引发未处理的异常的事件处理程序中中断。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-175">If you are running under the Visual Studio debugger, the debugger will break at the point in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler where the unhandled exception was raised.</span></span> <span data-ttu-id="4c9c9-176">如果你有多个 <xref:System.ComponentModel.BackgroundWorker> ，则不应直接引用其中的任何一个，因为这会将你的 <xref:System.ComponentModel.BackgroundWorker.DoWork> 事件处理程序用于特定的实例 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-176">If you have more than one <xref:System.ComponentModel.BackgroundWorker>, you should not reference any of them directly, as this would couple your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler to a specific instance of <xref:System.ComponentModel.BackgroundWorker>.</span></span> <span data-ttu-id="4c9c9-177">相反，应 <xref:System.ComponentModel.BackgroundWorker> 通过 `sender` 在 <xref:System.ComponentModel.BackgroundWorker.DoWork> 事件处理程序中转换参数来访问。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-177">Instead, you should access your <xref:System.ComponentModel.BackgroundWorker> by casting the `sender` parameter in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span>  
  
 <span data-ttu-id="4c9c9-178">您必须注意不要操作事件处理程序中的任何用户界面对象 <xref:System.ComponentModel.BackgroundWorker.DoWork> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-178">You must be careful not to manipulate any user-interface objects in your <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.</span></span> <span data-ttu-id="4c9c9-179">而是通过事件与用户界面通信 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-179">Instead, communicate to the user interface through the <xref:System.ComponentModel.BackgroundWorker> events.</span></span>  
  
 <span data-ttu-id="4c9c9-180">有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-180">For more information about how to handle events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-181">下面的代码示例演示 <xref:System.ComponentModel.BackgroundWorker.DoWork> 如何使用事件来启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-181">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.DoWork> event to start an asynchronous operation.</span></span> <span data-ttu-id="4c9c9-182">此代码示例是为类提供的更大示例的一部分 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-182">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#5)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#5)]
 [!code-vb[System.ComponentModel.BackgroundWorker#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-183">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-183">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/managed-threading-best-practices"><span data-ttu-id="4c9c9-184">托管线程处理的最佳做法</span><span class="sxs-lookup"><span data-stu-id="4c9c9-184">Managed Threading Best Practices</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-185">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-185">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.ComponentModel.BackgroundWorker.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c9c9-186">获取一个值，指示 <see cref="T:System.ComponentModel.BackgroundWorker" /> 是否正在运行异步操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-186">Gets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="4c9c9-187">如果 <see cref="T:System.ComponentModel.BackgroundWorker" /> 正在运行异步操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-187"><see langword="true" />, if the <see cref="T:System.ComponentModel.BackgroundWorker" /> is running an asynchronous operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-188"><xref:System.ComponentModel.BackgroundWorker>当你调用时，将启动异步操作 <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-188">The <xref:System.ComponentModel.BackgroundWorker> starts an asynchronous operation when you call <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-189">下面的代码示例演示如何使用 <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> 属性等待 <xref:System.ComponentModel.BackgroundWorker> 操作完成。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-189">The following code example demonstrates how to use the <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> property to wait for completion of a <xref:System.ComponentModel.BackgroundWorker> operation.</span></span> <span data-ttu-id="4c9c9-190">此代码示例摘自 [如何：在后台下载文件](/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background)中介绍的一个更大的示例。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-190">This code example is part of a larger example described in [How to: Download a File in the Background](/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-191">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-191">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-192">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-192">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDoWork">
      <MemberSignature Language="C#" Value="protected virtual void OnDoWork (System.ComponentModel.DoWorkEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoWork(class System.ComponentModel.DoWorkEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoWork (e As DoWorkEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoWork(System::ComponentModel::DoWorkEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit&#xA;override this.OnDoWork : System.ComponentModel.DoWorkEventArgs -&gt; unit" Usage="backgroundWorker.OnDoWork e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.DoWorkEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="4c9c9-193">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-193">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="4c9c9-194">引发 <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-194">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.ComponentModel.ProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.ComponentModel.ProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As ProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::ComponentModel::ProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit&#xA;override this.OnProgressChanged : System.ComponentModel.ProgressChangedEventArgs -&gt; unit" Usage="backgroundWorker.OnProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="4c9c9-195">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-195">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="4c9c9-196">引发 <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-196">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-197">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-197">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4c9c9-198">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-198">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="4c9c9-199"><xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-199">The <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4c9c9-200">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-200">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-201">下面的代码示例演示如何使用 <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> 方法报告异步操作的进度。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-201">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.OnProgressChanged%2A> method to report the progress of an asynchronous operation.</span></span> <span data-ttu-id="4c9c9-202">此代码示例是为类提供的更大示例的一部分 <xref:System.ComponentModel.AsyncOperationManager> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-202">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#24)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#24)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4c9c9-203">在派生类中重写 <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-203">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-204">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-204">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-205">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-205">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRunWorkerCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRunWorkerCompleted (System.ComponentModel.RunWorkerCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRunWorkerCompleted(class System.ComponentModel.RunWorkerCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRunWorkerCompleted (e As RunWorkerCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRunWorkerCompleted(System::ComponentModel::RunWorkerCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit&#xA;override this.OnRunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventArgs -&gt; unit" Usage="backgroundWorker.OnRunWorkerCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.RunWorkerCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="4c9c9-206">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-206">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="4c9c9-207">引发 <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-207">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-208">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-208">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4c9c9-209">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-209">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="4c9c9-210"><xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-210">The <xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4c9c9-211">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-211">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4c9c9-212">在派生类中重写 <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-212">When overriding <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-213">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-213">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-214">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-214">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ProgressChangedEventHandler ProgressChanged;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProgressChanged As ProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::ProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " Usage="member this.ProgressChanged : System.ComponentModel.ProgressChangedEventHandler " />
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ProgressChangedEventHandler? ProgressChanged;" FrameworkAlternate="net-5.0" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c9c9-215">调用 <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> 时发生。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-215">Occurs when <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-216">当调用方法时，将引发此事件 <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-216">This event is raised when you call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method.</span></span>  
  
 <span data-ttu-id="4c9c9-217">有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-217">For more information about how to handle events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-218">下面的代码示例演示如何使用 <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> 事件向用户报告异步操作的进度。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-218">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="4c9c9-219">此代码示例是为类提供的更大示例的一部分 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-219">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#7)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#7)]
 [!code-vb[System.ComponentModel.BackgroundWorker#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-220">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-220">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-221">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-221">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReportProgress">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4c9c9-222">引发 <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-222">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int -&gt; unit" Usage="backgroundWorker.ReportProgress percentProgress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percentProgress"><span data-ttu-id="4c9c9-223">已完成的后台操作所占的百分比，范围从 0% 到 100%。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-223">The percentage, from 0 to 100, of the background operation that is complete.</span></span></param>
        <summary><span data-ttu-id="4c9c9-224">引发 <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-224">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-225">如果需要后台操作来报告其进度，可以调用 <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> 方法来引发 <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-225">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="4c9c9-226"><xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A>属性值必须为 `true` ，否则 <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> 将引发 <xref:System.InvalidOperationException> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-226">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must be `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="4c9c9-227">您可以通过实现一种有意义的方式来测量您的后台操作的进度，这是整个任务完成的百分比。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-227">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
 <span data-ttu-id="4c9c9-228">对方法的调用 <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> 是异步的，并且会立即返回。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-228">The call to the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method is asynchronous and returns immediately.</span></span> <span data-ttu-id="4c9c9-229"><xref:System.ComponentModel.BackgroundWorker.ProgressChanged>事件处理程序在创建了的线程上执行 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-229">The <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event handler executes on the thread that created the <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-230">下面的代码示例演示如何使用 <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> 方法向用户报告异步操作的进度。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-230">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="4c9c9-231">此代码示例是为类提供的更大示例的一部分 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-231">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#8)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#8)]
 [!code-vb[System.ComponentModel.BackgroundWorker#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4c9c9-232">将 <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> 属性设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-232">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-233">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-233">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-234">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-234">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress, object userState);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportProgress(int32 percentProgress, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportProgress (percentProgress As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportProgress(int percentProgress, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ReportProgress : int * obj -&gt; unit" Usage="backgroundWorker.ReportProgress (percentProgress, userState)" />
      <MemberSignature Language="C#" Value="public void ReportProgress (int percentProgress, object? userState);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentProgress" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="percentProgress"><span data-ttu-id="4c9c9-235">已完成的后台操作所占的百分比，范围从 0% 到 100%。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-235">The percentage, from 0 to 100, of the background operation that is complete.</span></span></param>
        <param name="userState"><span data-ttu-id="4c9c9-236">指示用户状态的唯一 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-236">A unique <see cref="T:System.Object" /> indicating the user state.</span></span> <span data-ttu-id="4c9c9-237">作为 <see cref="T:System.ComponentModel.ProgressChangedEventArgs" /> 的 <see cref="P:System.ComponentModel.ProgressChangedEventArgs.UserState" /> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-237">Returned as the <see cref="P:System.ComponentModel.ProgressChangedEventArgs.UserState" /> property of the <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="4c9c9-238">引发 <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-238">Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-239">如果需要后台操作来报告其进度，可以调用 <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> 方法来引发 <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-239">If you need the background operation to report on its progress, you can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span> <span data-ttu-id="4c9c9-240"><xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A>属性值必须 `true` 或 <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> 将引发 <xref:System.InvalidOperationException> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-240">The <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property value must `true`, or <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="4c9c9-241">您可以通过实现一种有意义的方式来测量您的后台操作的进度，这是整个任务完成的百分比。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-241">It is up to you to implement a meaningful way of measuring your background operation's progress as a percentage of the total task completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-242">下面的代码示例演示如何使用 <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> 方法向用户报告异步操作的进度。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-242">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to report the progress of an asynchronous operation to the user.</span></span> <span data-ttu-id="4c9c9-243">此代码示例是为类提供的更大示例的一部分 <xref:System.Windows.Forms.ToolStripProgressBar> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-243">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripProgressBar> class.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.ToolStripProgressBar#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripProgressBar/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4c9c9-244">将 <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> 属性设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-244">The <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> property is set to <see langword="false" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-245">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-245">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-246">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-246">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RunWorkerAsync">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4c9c9-247">开始执行后台操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-247">Starts execution of a background operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync();" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : unit -&gt; unit" Usage="backgroundWorker.RunWorkerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c9c9-248">开始执行后台操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-248">Starts execution of a background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-249"><xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>方法提交请求以异步运行操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-249">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="4c9c9-250">处理请求时，将 <xref:System.ComponentModel.BackgroundWorker.DoWork> 引发事件，从而启动后台操作的执行。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-250">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="4c9c9-251">如果后台操作已在运行，则 <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> 再次调用会引发 <xref:System.InvalidOperationException> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-251">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-252">下面的代码示例演示如何使用 <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> 方法来启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-252">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="4c9c9-253">它是 [如何：在后台下载文件](/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background)的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-253">It is part of a larger example described in [How to: Download a File in the Background](/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background).</span></span>  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4c9c9-254"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> 为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-254"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span></span></exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-255">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-255">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/managed-threading-best-practices"><span data-ttu-id="4c9c9-256">托管线程处理的最佳做法</span><span class="sxs-lookup"><span data-stu-id="4c9c9-256">Managed Threading Best Practices</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-257">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-257">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerAsync">
      <MemberSignature Language="C#" Value="public void RunWorkerAsync (object argument);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunWorkerAsync(object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunWorkerAsync (argument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunWorkerAsync(System::Object ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RunWorkerAsync : obj -&gt; unit" Usage="backgroundWorker.RunWorkerAsync argument" />
      <MemberSignature Language="C#" Value="public void RunWorkerAsync (object? argument);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="4c9c9-258">要在 <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> 事件处理程序中执行的后台操作使用的参数。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-258">A parameter for use by the background operation to be executed in the <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> event handler.</span></span></param>
        <summary><span data-ttu-id="4c9c9-259">开始执行后台操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-259">Starts execution of a background operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-260"><xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>方法提交请求以异步运行操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-260">The <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method submits a request to start the operation running asynchronously.</span></span> <span data-ttu-id="4c9c9-261">处理请求时，将 <xref:System.ComponentModel.BackgroundWorker.DoWork> 引发事件，从而启动后台操作的执行。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-261">When the request is serviced, the <xref:System.ComponentModel.BackgroundWorker.DoWork> event is raised, which in turn starts execution of your background operation.</span></span>  
  
 <span data-ttu-id="4c9c9-262">如果操作需要参数，则可以将其作为 `argument` 参数提供给 <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-262">If your operation requires a parameter, you can provide it as the `argument` parameter to <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A>.</span></span>  
  
 <span data-ttu-id="4c9c9-263">如果后台操作已在运行，则 <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> 再次调用会引发 <xref:System.InvalidOperationException> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-263">If the background operation is already running, calling <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> again will raise an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-264">下面的代码示例演示如何使用 <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> 方法来启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-264">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method to start an asynchronous operation.</span></span> <span data-ttu-id="4c9c9-265">此代码示例是为类提供的更大示例的一部分 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-265">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#3)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#3)]
 [!code-vb[System.ComponentModel.BackgroundWorker#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4c9c9-266"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> 为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-266"><see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> is <see langword="true" />.</span></span></exception>
        <altmember cref="E:System.ComponentModel.BackgroundWorker.DoWork" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-267">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-267">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-268">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-268">How to: Download a File in the Background</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/managed-threading-best-practices"><span data-ttu-id="4c9c9-269">托管线程处理的最佳做法</span><span class="sxs-lookup"><span data-stu-id="4c9c9-269">Managed Threading Best Practices</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RunWorkerCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RunWorkerCompletedEventHandler RunWorkerCompleted" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RunWorkerCompleted As RunWorkerCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::RunWorkerCompletedEventHandler ^ RunWorkerCompleted;" />
      <MemberSignature Language="F#" Value="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " Usage="member this.RunWorkerCompleted : System.ComponentModel.RunWorkerCompletedEventHandler " />
      <MemberSignature Language="C#" Value="public event System.ComponentModel.RunWorkerCompletedEventHandler? RunWorkerCompleted;" FrameworkAlternate="net-5.0" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RunWorkerCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c9c9-270">当后台操作已完成、被取消或引发异常时发生。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-270">Occurs when the background operation has completed, has been canceled, or has raised an exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-271">当事件处理程序返回时，将引发此事件 <xref:System.ComponentModel.BackgroundWorker.DoWork> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-271">This event is raised when the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler returns.</span></span>  
  
 <span data-ttu-id="4c9c9-272">如果操作成功完成并且其结果是在 <xref:System.ComponentModel.BackgroundWorker.DoWork> 事件处理程序中分配的，则可以通过属性访问结果 <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-272">If the operation completes successfully and its result is assigned in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler, you can access the result through the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="4c9c9-273">的 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> 属性 <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> 指示操作引发了异常。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-273">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates that an exception was thrown by the operation.</span></span>  
  
 <span data-ttu-id="4c9c9-274">的 <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> 属性 <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> 指示是否已由后台操作处理取消请求。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-274">The <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> indicates whether a cancellation request was processed by the background operation.</span></span> <span data-ttu-id="4c9c9-275">如果 <xref:System.ComponentModel.BackgroundWorker.DoWork> 事件处理程序中的代码通过检查 <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> 标志并将的 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 标志设置为来检测取消请求 <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> `true` ，则 <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> 也会将的标志 <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> 设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-275">If your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler detects a cancellation request by checking the <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> flag and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> flag of <xref:System.ComponentModel.DoWorkEventArgs?displayProperty=nameWithType> to `true`, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> also will be set to `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4c9c9-276">请注意， <xref:System.ComponentModel.BackgroundWorker.DoWork> 事件处理程序中的代码可以在发出取消请求时完成其工作，并且轮询循环可能会 <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> 被设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-276">Be aware that your code in the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler may finish its work as a cancellation request is being made, and your polling loop may miss <xref:System.ComponentModel.BackgroundWorker.CancellationPending%2A> being set to `true`.</span></span> <span data-ttu-id="4c9c9-277">在这种情况下， <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> `true` 即使发出了取消请求，也不会将事件处理程序中的标志设置为。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-277">In this case, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> flag of <xref:System.ComponentModel.RunWorkerCompletedEventArgs?displayProperty=nameWithType> in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler will not be set to `true`, even though a cancellation request was made.</span></span> <span data-ttu-id="4c9c9-278">这种情况称为 *争用条件* ，是多线程编程中常见的问题。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-278">This situation is called a *race condition* and is a common concern in multithreaded programming.</span></span> <span data-ttu-id="4c9c9-279">有关多线程设计问题的详细信息，请参阅 [托管线程处理最佳做法](/dotnet/standard/threading/managed-threading-best-practices)。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-279">For more information about multithreading design issues, see [Managed Threading Best Practices](/dotnet/standard/threading/managed-threading-best-practices).</span></span>  
  
 <span data-ttu-id="4c9c9-280">在 <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> 访问属性之前，事件处理程序应始终检查 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> 和 <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType> 属性 <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-280">Your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler should always check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A?displayProperty=nameWithType> properties before accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="4c9c9-281">如果引发了异常，或者如果操作已取消，则访问 <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> 属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-281">If an exception was raised or if the operation was canceled, accessing the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=nameWithType> property raises an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c9c9-282">下面的代码示例演示 <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> 如何使用事件来处理异步操作的结果。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-282">The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event to handle the result of an asynchronous operation.</span></span> <span data-ttu-id="4c9c9-283">此代码示例是为类提供的更大示例的一部分 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-283">This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#6)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#6)]
 [!code-vb[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-284">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-284">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-285">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-285">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WorkerReportsProgress">
      <MemberSignature Language="C#" Value="public bool WorkerReportsProgress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerReportsProgress" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerReportsProgress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerReportsProgress { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerReportsProgress : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c9c9-286">获取或设置一个值，该值指示 <see cref="T:System.ComponentModel.BackgroundWorker" /> 能否报告进度更新。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-286">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> can report progress updates.</span></span></summary>
        <value><span data-ttu-id="4c9c9-287">如果 <see cref="T:System.ComponentModel.BackgroundWorker" /> 支持进度更新，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-287"><see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports progress updates; otherwise <see langword="false" />.</span></span> <span data-ttu-id="4c9c9-288">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-288">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-289"><xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> `true` 如果希望支持进度更新，请将属性设置为 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-289">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerReportsProgress%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support progress updates.</span></span> <span data-ttu-id="4c9c9-290">如果此属性为 `true` ，则用户代码可以调用 <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> 方法来引发 <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-290">When this property is `true`, user code can call the <xref:System.ComponentModel.BackgroundWorker.ReportProgress%2A> method to raise the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-291">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-291">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-292">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-292">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WorkerSupportsCancellation">
      <MemberSignature Language="C#" Value="public bool WorkerSupportsCancellation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WorkerSupportsCancellation" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkerSupportsCancellation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WorkerSupportsCancellation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WorkerSupportsCancellation : bool with get, set" Usage="System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c9c9-293">获取或设置一个值，该值指示 <see cref="T:System.ComponentModel.BackgroundWorker" /> 是否支持异步取消。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-293">Gets or sets a value indicating whether the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports asynchronous cancellation.</span></span></summary>
        <value><span data-ttu-id="4c9c9-294">如果 <see cref="T:System.ComponentModel.BackgroundWorker" /> 支持取消，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-294"><see langword="true" /> if the <see cref="T:System.ComponentModel.BackgroundWorker" /> supports cancellation; otherwise <see langword="false" />.</span></span> <span data-ttu-id="4c9c9-295">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-295">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c9c9-296"><xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A> `true` 如果希望支持取消，请将属性设置为 <xref:System.ComponentModel.BackgroundWorker> 。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-296">Set the <xref:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation%2A> property to `true` if you want the <xref:System.ComponentModel.BackgroundWorker> to support cancellation.</span></span> <span data-ttu-id="4c9c9-297">如果此属性为 `true` ，则可以调用 <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> 方法来中断后台操作。</span><span class="sxs-lookup"><span data-stu-id="4c9c9-297">When this property is `true`, you can call the <xref:System.ComponentModel.BackgroundWorker.CancelAsync%2A> method to interrupt a background operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.BackgroundWorker.CancelAsync" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-run-an-operation-in-the-background"><span data-ttu-id="4c9c9-298">如何：在后台运行操作</span><span class="sxs-lookup"><span data-stu-id="4c9c9-298">How to: Run an Operation in the Background</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-download-a-file-in-the-background"><span data-ttu-id="4c9c9-299">如何：在后台下载文件</span><span class="sxs-lookup"><span data-stu-id="4c9c9-299">How to: Download a File in the Background</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
