<Type Name="ICustomTypeDescriptor" FullName="System.ComponentModel.ICustomTypeDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e846b9114ac65b07691f444fc8166f131802bf47" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89996398" /></Metadata><TypeSignature Language="C#" Value="public interface ICustomTypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomTypeDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ICustomTypeDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomTypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomTypeDescriptor" />
  <TypeSignature Language="F#" Value="type ICustomTypeDescriptor = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fac99-101">提供为对象提供动态自定义类型信息的接口。</span><span class="sxs-lookup"><span data-stu-id="fac99-101">Provides an interface that supplies dynamic custom type information for an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac99-102"><xref:System.ComponentModel.ICustomTypeDescriptor>接口允许对象提供有关其自身的类型信息。</span><span class="sxs-lookup"><span data-stu-id="fac99-102">The <xref:System.ComponentModel.ICustomTypeDescriptor> interface allows an object to provide type information about itself.</span></span> <span data-ttu-id="fac99-103">通常，当对象需要动态类型信息时，使用此接口。</span><span class="sxs-lookup"><span data-stu-id="fac99-103">Typically, this interface is used when an object needs dynamic type information.</span></span> <span data-ttu-id="fac99-104">与此相反， <xref:System.ComponentModel.TypeDescriptor> 类提供从元数据获取的静态类型信息。</span><span class="sxs-lookup"><span data-stu-id="fac99-104">In contrast, the <xref:System.ComponentModel.TypeDescriptor> class provides static type information that is obtained from metadata.</span></span>  
  
 <span data-ttu-id="fac99-105">例如， <xref:System.ComponentModel.ICustomTypeDescriptor> 在中使用， [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 以提供 COM 对象的类型信息。</span><span class="sxs-lookup"><span data-stu-id="fac99-105">For example, <xref:System.ComponentModel.ICustomTypeDescriptor> is used in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to provide type information for COM objects.</span></span> <span data-ttu-id="fac99-106">COM 对象不支持属性或属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-106">COM objects do not support properties or attributes.</span></span> <span data-ttu-id="fac99-107">因此， [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 使用 <xref:System.ComponentModel.ICustomTypeDescriptor> 来实现 COM 对象的属性和属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-107">Therefore, the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses <xref:System.ComponentModel.ICustomTypeDescriptor> to implement properties and attributes for COM objects.</span></span>  
  
 <span data-ttu-id="fac99-108">若要提供动态自定义类型信息，类可以实现 <xref:System.ComponentModel.ICustomTypeDescriptor> 或派生自 <xref:System.ComponentModel.CustomTypeDescriptor> 类，该类提供此接口的简单实现。</span><span class="sxs-lookup"><span data-stu-id="fac99-108">To provide dynamic custom type information, a class can implement <xref:System.ComponentModel.ICustomTypeDescriptor> or derive from the <xref:System.ComponentModel.CustomTypeDescriptor> class, which provides a simple implementation of this interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fac99-109">对于对实现接口的对象的数据绑定，不提供设计时支持 <xref:System.ComponentModel.ICustomTypeDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="fac99-109">There is no design-time support for data binding to objects that implement the <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span> <span data-ttu-id="fac99-110">此外，在绑定到的运行时实例时 <xref:System.ComponentModel.ICustomTypeDescriptor> ，将忽略基础类型的公共属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-110">In addition, when binding to a runtime instance of <xref:System.ComponentModel.ICustomTypeDescriptor>, the public properties of the underlying type are ignored.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/e81b8e2f-e06e-44fa-8129-7bdb0230101f"><span data-ttu-id="fac99-111">类型说明符概述</span><span class="sxs-lookup"><span data-stu-id="fac99-111">Type Descriptor Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection GetAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.AttributeCollection GetAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributes () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::AttributeCollection ^ GetAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetAttributes : unit -&gt; System.ComponentModel.AttributeCollection" Usage="iCustomTypeDescriptor.GetAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fac99-112">返回此组件实例的自定义属性的集合。</span><span class="sxs-lookup"><span data-stu-id="fac99-112">Returns a collection of custom attributes for this instance of a component.</span></span></summary>
        <returns><span data-ttu-id="fac99-113">包含此对象的属性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fac99-113">An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac99-114">返回值永远不会 `null` 。</span><span class="sxs-lookup"><span data-stu-id="fac99-114">The return value is never `null`.</span></span>  
  
 <span data-ttu-id="fac99-115"><xref:System.ComponentModel.AttributeCollection>如果没有为对象指定自定义特性，则实现程序可以返回空。</span><span class="sxs-lookup"><span data-stu-id="fac99-115">Implementers can return an empty <xref:System.ComponentModel.AttributeCollection> if no custom attributes are specified for an object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public string GetClassName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetClassName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClassName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetClassName();" />
      <MemberSignature Language="F#" Value="abstract member GetClassName : unit -&gt; string" Usage="iCustomTypeDescriptor.GetClassName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fac99-116">返回此组件实例的类名称。</span><span class="sxs-lookup"><span data-stu-id="fac99-116">Returns the class name of this instance of a component.</span></span></summary>
        <returns><span data-ttu-id="fac99-117">对象的类名称，如果该类没有名称，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fac99-117">The class name of the object, or <see langword="null" /> if the class does not have a name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac99-118">如果 `null` 返回，则使用方法中的类型名称 <xref:System.ComponentModel.ICustomTypeDescriptor.GetComponentName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="fac99-118">If `null` is returned, use the type name from the <xref:System.ComponentModel.ICustomTypeDescriptor.GetComponentName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public string GetComponentName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetComponentName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetComponentName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetComponentName();" />
      <MemberSignature Language="F#" Value="abstract member GetComponentName : unit -&gt; string" Usage="iCustomTypeDescriptor.GetComponentName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fac99-119">返回某个组件的此实例的名称。</span><span class="sxs-lookup"><span data-stu-id="fac99-119">Returns the name of this instance of a component.</span></span></summary>
        <returns><span data-ttu-id="fac99-120">对象的名称，如果该对象不具有名称，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fac99-120">The name of the object, or <see langword="null" /> if the object does not have a name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac99-121">如果 `null` 返回，则使用默认名称。</span><span class="sxs-lookup"><span data-stu-id="fac99-121">If `null` is returned, use the default name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public System.ComponentModel.TypeConverter GetConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConverter () As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::TypeConverter ^ GetConverter();" />
      <MemberSignature Language="F#" Value="abstract member GetConverter : unit -&gt; System.ComponentModel.TypeConverter" Usage="iCustomTypeDescriptor.GetConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fac99-122">返回此组件实例的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="fac99-122">Returns a type converter for this instance of a component.</span></span></summary>
        <returns><span data-ttu-id="fac99-123">作为此对象转换器的 <see cref="T:System.ComponentModel.TypeConverter" />，或为 <see langword="null" />（如果此对象不存在任何 <see cref="T:System.ComponentModel.TypeConverter" />）。</span><span class="sxs-lookup"><span data-stu-id="fac99-123">A <see cref="T:System.ComponentModel.TypeConverter" /> that is the converter for this object, or <see langword="null" /> if there is no <see cref="T:System.ComponentModel.TypeConverter" /> for this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac99-124">如果 `null` 返回，则使用默认值 <xref:System.ComponentModel.TypeConverter> 。</span><span class="sxs-lookup"><span data-stu-id="fac99-124">If `null` is returned, use the default <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptor GetDefaultEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor GetDefaultEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultEvent () As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptor ^ GetDefaultEvent();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultEvent : unit -&gt; System.ComponentModel.EventDescriptor" Usage="iCustomTypeDescriptor.GetDefaultEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fac99-125">返回某个组件的此实例的默认事件。</span><span class="sxs-lookup"><span data-stu-id="fac99-125">Returns the default event for this instance of a component.</span></span></summary>
        <returns><span data-ttu-id="fac99-126">表示此对象的默认事件的 <see cref="T:System.ComponentModel.EventDescriptor" /> ；如果该对象没有事件，则为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="fac99-126">An <see cref="T:System.ComponentModel.EventDescriptor" /> that represents the default event for this object, or <see langword="null" /> if this object does not have events.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor GetDefaultProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor GetDefaultProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultProperty () As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultProperty : unit -&gt; System.ComponentModel.PropertyDescriptor" Usage="iCustomTypeDescriptor.GetDefaultProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fac99-127">返回此组件实例的默认属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-127">Returns the default property for this instance of a component.</span></span></summary>
        <returns><span data-ttu-id="fac99-128">表示此对象的默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果该对象没有属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fac99-128">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the default property for this object, or <see langword="null" /> if this object does not have properties.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="abstract member GetEditor : Type -&gt; obj" Usage="iCustomTypeDescriptor.GetEditor editorBaseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="fac99-129">表示该对象的编辑器的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="fac99-129">A <see cref="T:System.Type" /> that represents the editor for this object.</span></span></param>
        <summary><span data-ttu-id="fac99-130">返回此组件实例的指定类型的编辑器。</span><span class="sxs-lookup"><span data-stu-id="fac99-130">Returns an editor of the specified type for this instance of a component.</span></span></summary>
        <returns><span data-ttu-id="fac99-131">表示该对象编辑器的指定类型的 <see cref="T:System.Object" />；如果无法找到编辑器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fac99-131">An <see cref="T:System.Object" /> of the specified type that is the editor for this object, or <see langword="null" /> if the editor cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac99-132">参数的类型 `editorBaseType` 通常为 <xref:System.Drawing.Design.UITypeEditor> ，但也可以使用其他类型 (例如 <xref:System.ComponentModel.ComponentEditor> 和 <xref:System.ComponentModel.InstanceCreationEditor>) 。</span><span class="sxs-lookup"><span data-stu-id="fac99-132">The type of the `editorBaseType` parameter is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fac99-133">返回此组件实例的事件。</span><span class="sxs-lookup"><span data-stu-id="fac99-133">Returns the events for this instance of a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptorCollection GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvents () As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptorCollection ^ GetEvents();" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : unit -&gt; System.ComponentModel.EventDescriptorCollection" Usage="iCustomTypeDescriptor.GetEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fac99-134">返回此组件实例的事件。</span><span class="sxs-lookup"><span data-stu-id="fac99-134">Returns the events for this instance of a component.</span></span></summary>
        <returns><span data-ttu-id="fac99-135">一个 <see cref="T:System.ComponentModel.EventDescriptorCollection" />，表示此组件实例的事件。</span><span class="sxs-lookup"><span data-stu-id="fac99-135">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the events for this component instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac99-136">此实例的事件可能与类提供的事件集不同。</span><span class="sxs-lookup"><span data-stu-id="fac99-136">The events for this instance can differ from the set of events that the class provides.</span></span> <span data-ttu-id="fac99-137">例如，如果组件基于站点，则站点可以添加或删除其他事件。</span><span class="sxs-lookup"><span data-stu-id="fac99-137">For example, if the component is site-based, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="fac99-138"><xref:System.ComponentModel.EventDescriptorCollection.Empty?displayProperty=nameWithType>如果未指定属性，则实现者可以返回。</span><span class="sxs-lookup"><span data-stu-id="fac99-138">Implementors can return <xref:System.ComponentModel.EventDescriptorCollection.Empty?displayProperty=nameWithType> if no properties are specified.</span></span> <span data-ttu-id="fac99-139">此方法决不应返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="fac99-139">This method should never return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptorCollection GetEvents (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvents (attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptorCollection ^ GetEvents(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="iCustomTypeDescriptor.GetEvents attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="fac99-140">用作筛选器的 <see cref="T:System.Attribute" /> 类型数组。</span><span class="sxs-lookup"><span data-stu-id="fac99-140">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span></span></param>
        <summary><span data-ttu-id="fac99-141">使用指定的属性数组作为筛选器，返回此组件实例的事件。</span><span class="sxs-lookup"><span data-stu-id="fac99-141">Returns the events for this instance of a component using the specified attribute array as a filter.</span></span></summary>
        <returns><span data-ttu-id="fac99-142">表示此组件实例的已筛选事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fac99-142">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the filtered events for this component instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac99-143">此实例的事件可能与类提供的事件集不同。</span><span class="sxs-lookup"><span data-stu-id="fac99-143">The events for this instance can differ from the set of events that the class provides.</span></span> <span data-ttu-id="fac99-144">例如，如果组件基于站点，则站点可以添加或删除其他事件。</span><span class="sxs-lookup"><span data-stu-id="fac99-144">For example, if the component is site-based, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="fac99-145">如果 <xref:System.Attribute> 在数组中指定了， `attributes` 并且事件没有该属性的类的实例，则返回的数组包含事件（如果 <xref:System.Attribute> 是默认事件）。</span><span class="sxs-lookup"><span data-stu-id="fac99-145">If an <xref:System.Attribute> is specified in the `attributes` array and the event does not have an instance of the class for that attribute, the returned array includes the event if the <xref:System.Attribute> is the default event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fac99-146">返回此组件实例的属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-146">Returns the properties for this instance of a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties();" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iCustomTypeDescriptor.GetProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fac99-147">返回此组件实例的属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-147">Returns the properties for this instance of a component.</span></span></summary>
        <returns><span data-ttu-id="fac99-148">表示此组件实例的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fac99-148">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties for this component instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac99-149">此实例的属性可能不同于类提供的属性集。</span><span class="sxs-lookup"><span data-stu-id="fac99-149">The properties for this instance can differ from the set of properties that the class provides.</span></span> <span data-ttu-id="fac99-150">例如，如果组件已被放置，则站点可以添加或删除其他属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-150">For example, if the component is sited, the site can add or remove additional properties.</span></span>  
  
 <span data-ttu-id="fac99-151"><xref:System.ComponentModel.PropertyDescriptorCollection.Empty?displayProperty=nameWithType>如果未指定任何属性，实现者可以返回。</span><span class="sxs-lookup"><span data-stu-id="fac99-151">Implementers can return <xref:System.ComponentModel.PropertyDescriptorCollection.Empty?displayProperty=nameWithType> if no properties are specified.</span></span> <span data-ttu-id="fac99-152">此方法决不应返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="fac99-152">This method should never return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iCustomTypeDescriptor.GetProperties attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="fac99-153">用作筛选器的 <see cref="T:System.Attribute" /> 类型数组。</span><span class="sxs-lookup"><span data-stu-id="fac99-153">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span></span></param>
        <summary><span data-ttu-id="fac99-154">使用特性数组作为筛选器，返回此组件实例的属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-154">Returns the properties for this instance of a component using the attribute array as a filter.</span></span></summary>
        <returns><span data-ttu-id="fac99-155">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，它表示此组件实例的已筛选属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-155">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the filtered properties for this component instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac99-156">此实例的属性可能不同于类提供的属性集。</span><span class="sxs-lookup"><span data-stu-id="fac99-156">The properties for this instance can differ from the set of properties that the class provides.</span></span> <span data-ttu-id="fac99-157">例如，如果组件已被放置，则站点可以添加或删除其他属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-157">For example, if the component is sited, the site can add or remove additional properties.</span></span>  
  
 <span data-ttu-id="fac99-158">如果 <xref:System.Attribute> 在数组中指定了 `attributes` 并且属性不具有该属性的类的实例，则返回的集合将包含属性（如果 <xref:System.Attribute> 是默认属性）。</span><span class="sxs-lookup"><span data-stu-id="fac99-158">If an <xref:System.Attribute> is specified in the `attributes` array and the property does not have an instance of the class for that attribute, the returned collection will include the property if the <xref:System.Attribute> is the default property.</span></span>  
  
 <span data-ttu-id="fac99-159">有关筛选规则，请参阅 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 。</span><span class="sxs-lookup"><span data-stu-id="fac99-159">For filtering rules, see <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyOwner">
      <MemberSignature Language="C#" Value="public object GetPropertyOwner (System.ComponentModel.PropertyDescriptor pd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPropertyOwner(class System.ComponentModel.PropertyDescriptor pd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyOwner (pd As PropertyDescriptor) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyOwner(System::ComponentModel::PropertyDescriptor ^ pd);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyOwner : System.ComponentModel.PropertyDescriptor -&gt; obj" Usage="iCustomTypeDescriptor.GetPropertyOwner pd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pd" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="pd"><span data-ttu-id="fac99-160">一个 <see cref="T:System.ComponentModel.PropertyDescriptor" />，表示要查找其所有者的属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-160">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the property whose owner is to be found.</span></span></param>
        <summary><span data-ttu-id="fac99-161">返回一个对象，该对象包含指定的属性描述符所描述的属性。</span><span class="sxs-lookup"><span data-stu-id="fac99-161">Returns an object that contains the property described by the specified property descriptor.</span></span></summary>
        <returns><span data-ttu-id="fac99-162">一个 <see cref="T:System.Object" />，表示指定属性的所有者。</span><span class="sxs-lookup"><span data-stu-id="fac99-162">An <see cref="T:System.Object" /> that represents the owner of the specified property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fac99-163"><xref:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner%2A>方法检索对象，该对象包含由参数描述的属性成员 <xref:System.ComponentModel.PropertyDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="fac99-163">The <xref:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner%2A> method retrieves the object that contains the property member that is described by <xref:System.ComponentModel.PropertyDescriptor> parameter.</span></span> <span data-ttu-id="fac99-164">通常，此对象是和方法所必需的 <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A?displayProperty=nameWithType> <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="fac99-164">Typically, this object is required for the <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="fac99-165">此方法应返回一个可供使用的对象，如下所示：</span><span class="sxs-lookup"><span data-stu-id="fac99-165">This method should return an object that you can use as follows:</span></span>  
  
```  
pd.GetValue(GetPropertyOwner(myPd));  
```  
  
 <span data-ttu-id="fac99-166">如果 `myPd` 为 `null` ，则接口的实现 <xref:System.ComponentModel.ICustomTypeDescriptor> 应返回默认对象 (通常是公开属性和特性) 的基对象。</span><span class="sxs-lookup"><span data-stu-id="fac99-166">If `myPd` is `null`, your implementation of the <xref:System.ComponentModel.ICustomTypeDescriptor> interface should return the default object (typically, the base object that exposes the properties and attributes).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
      </Docs>
    </Member>
  </Members>
</Type>
