<Type Name="DesignerAttribute" FullName="System.ComponentModel.DesignerAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="752786c5e55e6844f74e2b9cff248385580ca5df" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86776285" /></Metadata><TypeSignature Language="C#" Value="public sealed class DesignerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DesignerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DesignerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DesignerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DesignerAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5d644-101">指定用于为组件实现设计时服务的类。</span><span class="sxs-lookup"><span data-stu-id="5d644-101">Specifies the class used to implement design-time services for a component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d644-102">用于设计时服务的类必须实现 <xref:System.ComponentModel.Design.IDesigner> 接口。</span><span class="sxs-lookup"><span data-stu-id="5d644-102">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 <span data-ttu-id="5d644-103">使用 <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> 属性可查找设计器的基类型。</span><span class="sxs-lookup"><span data-stu-id="5d644-103">Use the <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> property to find the designer's base type.</span></span> <span data-ttu-id="5d644-104">使用 <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A> 属性可获取与此成员关联的设计器类型的名称。</span><span class="sxs-lookup"><span data-stu-id="5d644-104">Use the <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A> property to get the name of the type of designer associated with this member.</span></span>  
  
 <span data-ttu-id="5d644-105">有关更多信息，请参阅[特性](/dotnet/standard/attributes/)。</span><span class="sxs-lookup"><span data-stu-id="5d644-105">For more information, see [Attributes](/dotnet/standard/attributes/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d644-106">下面的示例创建一个名为的类 `MyForm` 。</span><span class="sxs-lookup"><span data-stu-id="5d644-106">The following example creates a class called `MyForm`.</span></span> <span data-ttu-id="5d644-107">`MyForm` 具有两个特性，一个 <xref:System.ComponentModel.DesignerAttribute> 指定此类使用 <xref:System.Windows.Forms.Design.DocumentDesigner> 和 <xref:System.ComponentModel.DesignerCategoryAttribute> 指定类别的 <xref:System.ComponentModel.DesignerCategoryAttribute.Form> 。</span><span class="sxs-lookup"><span data-stu-id="5d644-107">`MyForm` has two attributes, a <xref:System.ComponentModel.DesignerAttribute> that specifies this class uses the <xref:System.Windows.Forms.Design.DocumentDesigner>, and a <xref:System.ComponentModel.DesignerCategoryAttribute> that specifies the <xref:System.ComponentModel.DesignerCategoryAttribute.Form> category.</span></span>  
  
 [!code-cpp[Classic DesignerAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DesignerAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic DesignerAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DesignerAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="5d644-108">下一个示例创建的实例 `MyForm` 。</span><span class="sxs-lookup"><span data-stu-id="5d644-108">The next example creates an instance of `MyForm`.</span></span> <span data-ttu-id="5d644-109">然后，它获取类的特性，提取 <xref:System.ComponentModel.DesignerAttribute> ，然后打印设计器的名称。</span><span class="sxs-lookup"><span data-stu-id="5d644-109">Then it gets the attributes for the class, extracts the <xref:System.ComponentModel.DesignerAttribute>, and prints the name of the designer.</span></span>  
  
 [!code-cpp[Classic DesignerAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic DesignerAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic DesignerAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DesignerAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d644-110">初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5d644-110">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerAttribute (string designerTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string designerTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designerTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerAttribute(System::String ^ designerTypeName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DesignerAttribute : string -&gt; System.ComponentModel.DesignerAttribute" Usage="new System.ComponentModel.DesignerAttribute designerTypeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designerTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerTypeName"><span data-ttu-id="5d644-111">将类型（该类型为此特性所绑定到的组件提供设计时服务）的完全限定名称和此类型所驻留的程序集的名称串联后得到的结果。</span><span class="sxs-lookup"><span data-stu-id="5d644-111">The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.</span></span></param>
        <summary><span data-ttu-id="5d644-112">使用提供设计时服务的类型的名称初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5d644-112">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class using the name of the type that provides design-time services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d644-113">用于设计时服务的类必须实现 <xref:System.ComponentModel.Design.IDesigner> 接口。</span><span class="sxs-lookup"><span data-stu-id="5d644-113">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerAttribute (Type designerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type designerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerAttribute(Type ^ designerType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DesignerAttribute : Type -&gt; System.ComponentModel.DesignerAttribute" Usage="new System.ComponentModel.DesignerAttribute designerType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="designerType"><span data-ttu-id="5d644-114"><see cref="T:System.Type" />，表示为该特性所绑定到的组件提供设计时服务的类。</span><span class="sxs-lookup"><span data-stu-id="5d644-114">A <see cref="T:System.Type" /> that represents the class that provides design-time services for the component this attribute is bound to.</span></span></param>
        <summary><span data-ttu-id="5d644-115">使用提供设计时服务的类型初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5d644-115">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class using the type that provides design-time services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d644-116">用于设计时服务的类必须实现 <xref:System.ComponentModel.Design.IDesigner> 接口。</span><span class="sxs-lookup"><span data-stu-id="5d644-116">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerAttribute (string designerTypeName, string designerBaseTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string designerTypeName, string designerBaseTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designerTypeName As String, designerBaseTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerAttribute(System::String ^ designerTypeName, System::String ^ designerBaseTypeName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DesignerAttribute : string * string -&gt; System.ComponentModel.DesignerAttribute" Usage="new System.ComponentModel.DesignerAttribute (designerTypeName, designerBaseTypeName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designerTypeName" Type="System.String" />
        <Parameter Name="designerBaseTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerTypeName"><span data-ttu-id="5d644-117">将类型（该类型为此特性所绑定到的组件提供设计时服务）的完全限定名称和此类型所驻留的程序集的名称串联后得到的结果。</span><span class="sxs-lookup"><span data-stu-id="5d644-117">The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.</span></span></param>
        <param name="designerBaseTypeName"><span data-ttu-id="5d644-118">要与设计器类关联的基类的完全限定名。</span><span class="sxs-lookup"><span data-stu-id="5d644-118">The fully qualified name of the base class to associate with the designer class.</span></span></param>
        <summary><span data-ttu-id="5d644-119">使用设计器类型和设计器的基类初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5d644-119">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class using the designer type and the base class for the designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d644-120">用于设计时服务的类必须实现 <xref:System.ComponentModel.Design.IDesigner> 接口。</span><span class="sxs-lookup"><span data-stu-id="5d644-120">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 <span data-ttu-id="5d644-121">参数可用于为 `designerBaseTypeName` 给定类附加多种类型的设计器。</span><span class="sxs-lookup"><span data-stu-id="5d644-121">The `designerBaseTypeName` parameter allows you to attach more than one type of designer for a given class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerAttribute (string designerTypeName, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string designerTypeName, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designerTypeName As String, designerBaseType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerAttribute(System::String ^ designerTypeName, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DesignerAttribute : string * Type -&gt; System.ComponentModel.DesignerAttribute" Usage="new System.ComponentModel.DesignerAttribute (designerTypeName, designerBaseType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designerTypeName" Type="System.String" />
        <Parameter Name="designerBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="designerTypeName"><span data-ttu-id="5d644-122">将类型（该类型为此特性所绑定到的组件提供设计时服务）的完全限定名称和此类型所驻留的程序集的名称串联后得到的结果。</span><span class="sxs-lookup"><span data-stu-id="5d644-122">The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.</span></span></param>
        <param name="designerBaseType"><span data-ttu-id="5d644-123"><see cref="T:System.Type" />，表示要与 <paramref name="designerTypeName" /> 关联的基类。</span><span class="sxs-lookup"><span data-stu-id="5d644-123">A <see cref="T:System.Type" /> that represents the base class to associate with the <paramref name="designerTypeName" />.</span></span></param>
        <summary><span data-ttu-id="5d644-124">使用设计器类的名称和设计器的基类初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5d644-124">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class, using the name of the designer class and the base class for the designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d644-125">用于设计时服务的类必须实现 <xref:System.ComponentModel.Design.IDesigner> 接口。</span><span class="sxs-lookup"><span data-stu-id="5d644-125">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 <span data-ttu-id="5d644-126">参数可用于为 `designerBaseType` 给定类附加多种类型的设计器。</span><span class="sxs-lookup"><span data-stu-id="5d644-126">The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerAttribute (Type designerType, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type designerType, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designerType As Type, designerBaseType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerAttribute(Type ^ designerType, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DesignerAttribute : Type * Type -&gt; System.ComponentModel.DesignerAttribute" Usage="new System.ComponentModel.DesignerAttribute (designerType, designerBaseType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designerType" Type="System.Type" />
        <Parameter Name="designerBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="designerType"><span data-ttu-id="5d644-127"><see cref="T:System.Type" />，表示为该特性所绑定到的组件提供设计时服务的类。</span><span class="sxs-lookup"><span data-stu-id="5d644-127">A <see cref="T:System.Type" /> that represents the class that provides design-time services for the component this attribute is bound to.</span></span></param>
        <param name="designerBaseType"><span data-ttu-id="5d644-128"><see cref="T:System.Type" />，表示要与 <paramref name="designerType" /> 关联的基类。</span><span class="sxs-lookup"><span data-stu-id="5d644-128">A <see cref="T:System.Type" /> that represents the base class to associate with the <paramref name="designerType" />.</span></span></param>
        <summary><span data-ttu-id="5d644-129">使用设计器类型和设计器基类的类型初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5d644-129">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class using the types of the designer and designer base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d644-130">用于设计时服务的类必须实现 <xref:System.ComponentModel.Design.IDesigner> 接口。</span><span class="sxs-lookup"><span data-stu-id="5d644-130">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 <span data-ttu-id="5d644-131">参数可用于为 `designerBaseType` 给定类附加多种类型的设计器。</span><span class="sxs-lookup"><span data-stu-id="5d644-131">The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerBaseTypeName">
      <MemberSignature Language="C#" Value="public string DesignerBaseTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DesignerBaseTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerBaseTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DesignerBaseTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerBaseTypeName : string" Usage="System.ComponentModel.DesignerAttribute.DesignerBaseTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d644-132">获取此设计器的基类型名。</span><span class="sxs-lookup"><span data-stu-id="5d644-132">Gets the name of the base type of this designer.</span></span></summary>
        <value><span data-ttu-id="5d644-133">此设计器的基类型名。</span><span class="sxs-lookup"><span data-stu-id="5d644-133">The name of the base type of this designer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerTypeName">
      <MemberSignature Language="C#" Value="public string DesignerTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DesignerTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DesignerAttribute.DesignerTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DesignerTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerTypeName : string" Usage="System.ComponentModel.DesignerAttribute.DesignerTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d644-134">获取与此设计器特性关联的设计器类型名。</span><span class="sxs-lookup"><span data-stu-id="5d644-134">Gets the name of the designer type associated with this designer attribute.</span></span></summary>
        <value><span data-ttu-id="5d644-135">与此设计器特性关联的设计器类型名。</span><span class="sxs-lookup"><span data-stu-id="5d644-135">The name of the designer type associated with this designer attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="designerAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5d644-136">要进行值的相等性测试的对象。</span><span class="sxs-lookup"><span data-stu-id="5d644-136">The object to test the value equality of.</span></span></param>
        <summary><span data-ttu-id="5d644-137">返回给定对象的值是否等于当前的 <see cref="T:System.ComponentModel.DesignerAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="5d644-137">Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.DesignerAttribute" />.</span></span></summary>
        <returns><span data-ttu-id="5d644-138">如果给定对象的值等于当前对象的值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d644-138"><see langword="true" /> if the value of the given object is equal to that of the current; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="designerAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d644-139">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="5d644-139">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="5d644-140">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="5d644-140">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Attribute.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DesignerAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.ComponentModel.DesignerAttribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d644-141">获取此特性类型的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="5d644-141">Gets a unique ID for this attribute type.</span></span></summary>
        <value><span data-ttu-id="5d644-142">此特性类型的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="5d644-142">A unique ID for this attribute type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d644-143">筛选算法使用它来标识两个类型相同的特性。</span><span class="sxs-lookup"><span data-stu-id="5d644-143">It is used by filtering algorithms to identify two attributes that are the same type.</span></span> <span data-ttu-id="5d644-144">对于大多数属性，这只是返回 <xref:System.Type> 特性的实例。</span><span class="sxs-lookup"><span data-stu-id="5d644-144">For most attributes, this just returns the <xref:System.Type> instance for the attribute.</span></span> <span data-ttu-id="5d644-145"><xref:System.ComponentModel.DesignerAttribute> 重写此以包含设计器基类型的类型。</span><span class="sxs-lookup"><span data-stu-id="5d644-145"><xref:System.ComponentModel.DesignerAttribute> overrides this to include the type of the designer base type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
