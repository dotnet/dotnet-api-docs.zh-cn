<Type Name="RefreshEventHandler" FullName="System.ComponentModel.RefreshEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c91d7bcdaaacce5d11a8bc4dc641665bc73a5b7c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89683803" /></Metadata><TypeSignature Language="C#" Value="public delegate void RefreshEventHandler(RefreshEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RefreshEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.RefreshEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RefreshEventHandler(e As RefreshEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RefreshEventHandler(RefreshEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RefreshEventHandler = delegate of RefreshEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="e" Type="System.ComponentModel.RefreshEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="e"><span data-ttu-id="8ed82-101">包含被更改的组件或 <see cref="T:System.ComponentModel.RefreshEventArgs" /> 的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="8ed82-101">A <see cref="T:System.ComponentModel.RefreshEventArgs" /> that contains the component or <see cref="T:System.Type" /> that changed.</span></span></param>
    <summary><span data-ttu-id="8ed82-102">表示处理当 <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" /> 或组件在设计时被更改时引发的 <see cref="T:System.Type" /> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="8ed82-102">Represents the method that handles the <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" /> event raised when a <see cref="T:System.Type" /> or component is changed during design time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ed82-103">创建 <xref:System.ComponentModel.RefreshEventHandler> 委托时，需要标识将处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="8ed82-103">When you create a <xref:System.ComponentModel.RefreshEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="8ed82-104">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</span><span class="sxs-lookup"><span data-stu-id="8ed82-104">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="8ed82-105">除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ed82-105">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="8ed82-106">有关事件处理程序委托的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="8ed82-106">For more information about event handler delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ed82-107">下面的示例演示如何 <xref:System.ComponentModel.RefreshEventHandler> <xref:System.ComponentModel.TypeDescriptor.Refreshed> 在类型或组件发生更改时使用委托来处理事件。</span><span class="sxs-lookup"><span data-stu-id="8ed82-107">The following sample demonstrates how to use a <xref:System.ComponentModel.RefreshEventHandler> delegate to handle the <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when a type or component changes.</span></span> <span data-ttu-id="8ed82-108">在代码中， `OnRefreshed` 事件处理事件，并显示正在更改的组件。</span><span class="sxs-lookup"><span data-stu-id="8ed82-108">In the code, the `OnRefreshed` event handles the event and displays the component being changed.</span></span>  
  
 <span data-ttu-id="8ed82-109">此代码假定 `TextBox` 控件已经位于窗体上。</span><span class="sxs-lookup"><span data-stu-id="8ed82-109">The code assumes that a `TextBox` control is already sited on the form.</span></span>  
  
 [!code-cpp[RefreshEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RefreshEventHandler/CPP/refreshevent.cpp#1)]
 [!code-csharp[RefreshEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RefreshEventHandler/CS/refreshevent.cs#1)]
 [!code-vb[RefreshEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RefreshEventHandler/VB/refreshevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.RefreshEventArgs" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
  </Docs>
</Type>
