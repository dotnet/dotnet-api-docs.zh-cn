<Type Name="PropertyFilterAttribute" FullName="System.ComponentModel.PropertyFilterAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b0a094d4b665f2ad38cd8bc031368c05a7cce0b7" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89761324" /></Metadata><TypeSignature Language="C#" Value="public sealed class PropertyFilterAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyFilterAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyFilterAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyFilterAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyFilterAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type PropertyFilterAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="eca4a-101">指定哪些属性应由类型描述符报告，尤其是 <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="eca4a-101">Specifies which properties should be reported by type descriptors, specifically the <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" /> method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca4a-102"><xref:System.ComponentModel.PropertyFilterAttribute>支持一种内部机制，该机制限制自定义类型描述符返回的类型上的属性数目 <xref:System.Windows.DependencyObject> 。</span><span class="sxs-lookup"><span data-stu-id="eca4a-102">The <xref:System.ComponentModel.PropertyFilterAttribute> supports an internal mechanism that limits the number of properties on a type that are returned by the custom <xref:System.Windows.DependencyObject> type descriptor.</span></span> <span data-ttu-id="eca4a-103">如果找到该属性，则类型描述符会缩小返回属性的范围。</span><span class="sxs-lookup"><span data-stu-id="eca4a-103">If the attribute is found, the type descriptor narrows the scope of returned properties.</span></span> <span data-ttu-id="eca4a-104"><xref:System.ComponentModel.PropertyFilterAttribute> 与典型特性不同，因为不能将其作为元数据应用于类。</span><span class="sxs-lookup"><span data-stu-id="eca4a-104"><xref:System.ComponentModel.PropertyFilterAttribute> differs from typical attributes because you cannot apply it to a class as metadata.</span></span> <span data-ttu-id="eca4a-105">筛选机制通过代码而不是通过静态元数据进行处理。</span><span class="sxs-lookup"><span data-stu-id="eca4a-105">The filter mechanism works through code instead of through static metadata.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyObject" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyFilterAttribute (System.ComponentModel.PropertyFilterOptions filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ComponentModel.PropertyFilterOptions filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As PropertyFilterOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyFilterAttribute(System::ComponentModel::PropertyFilterOptions filter);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyFilterAttribute : System.ComponentModel.PropertyFilterOptions -&gt; System.ComponentModel.PropertyFilterAttribute" Usage="new System.ComponentModel.PropertyFilterAttribute filter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filter" Type="System.ComponentModel.PropertyFilterOptions" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="eca4a-106">描述此属性筛选器的选项。</span><span class="sxs-lookup"><span data-stu-id="eca4a-106">The options that describe this property filter.</span></span></param>
        <summary><span data-ttu-id="eca4a-107">初始化 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="eca4a-107">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.PropertyFilterAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.PropertyFilterAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.PropertyFilterAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As PropertyFilterAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::PropertyFilterAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.ComponentModel.PropertyFilterAttribute" Usage="System.ComponentModel.PropertyFilterAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyFilterAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eca4a-108">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="eca4a-108">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="propertyFilterAttribute.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="eca4a-109">与此 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> 进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="eca4a-109">The object to compare to this <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</span></span></param>
        <summary><span data-ttu-id="eca4a-110">返回一个值，该值指示当前的是否与 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 指定的对象相等。</span><span class="sxs-lookup"><span data-stu-id="eca4a-110">Returns a value that indicates whether the current <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="eca4a-111">如果指定的 <see langword="true" /> 等于当前的 <see cref="T:System.ComponentModel.PropertyFilterAttribute" />，则为 <see cref="T:System.ComponentModel.PropertyFilterAttribute" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eca4a-111"><see langword="true" /> if the specified <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> is equal to the current <see cref="T:System.ComponentModel.PropertyFilterAttribute" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca4a-112">此实现比较 <xref:System.ComponentModel.PropertyFilterOptions> 每个的值是否 <xref:System.ComponentModel.PropertyFilterAttribute> 相等。</span><span class="sxs-lookup"><span data-stu-id="eca4a-112">This implementation compares the <xref:System.ComponentModel.PropertyFilterOptions> values on each <xref:System.ComponentModel.PropertyFilterAttribute> for value equality.</span></span> <span data-ttu-id="eca4a-113">如果 <xref:System.ComponentModel.PropertyFilterOptions> 相同，则这两个 <xref:System.ComponentModel.PropertyFilterAttribute> 实例相等。</span><span class="sxs-lookup"><span data-stu-id="eca4a-113">If the <xref:System.ComponentModel.PropertyFilterOptions> are the same, then the two <xref:System.ComponentModel.PropertyFilterAttribute> instances are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyFilterOptions Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.PropertyFilterOptions Filter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyFilterAttribute.Filter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filter As PropertyFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyFilterOptions Filter { System::ComponentModel::PropertyFilterOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.ComponentModel.PropertyFilterOptions" Usage="System.ComponentModel.PropertyFilterAttribute.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyFilterOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eca4a-114">获取此的筛选选项 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="eca4a-114">Gets the filter options for this <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)].</span></span></summary>
        <value><span data-ttu-id="eca4a-115">属性筛选选项。</span><span class="sxs-lookup"><span data-stu-id="eca4a-115">The property filter options.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca4a-116">的值与构造 <xref:System.ComponentModel.PropertyFilterAttribute.Filter%2A> `filter` 时为构造函数参数提供的值相同 <xref:System.ComponentModel.PropertyFilterAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="eca4a-116">The value of <xref:System.ComponentModel.PropertyFilterAttribute.Filter%2A> is the same value as was provided for the `filter` constructor argument when this <xref:System.ComponentModel.PropertyFilterAttribute> was constructed.</span></span> <span data-ttu-id="eca4a-117">没有设置该值的其他方法 <xref:System.ComponentModel.PropertyFilterAttribute.Filter%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eca4a-117">There is no other means of setting the <xref:System.ComponentModel.PropertyFilterAttribute.Filter%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="propertyFilterAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eca4a-118">返回当前 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="eca4a-118">Returns the hash code for the current <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)].</span></span></summary>
        <returns><span data-ttu-id="eca4a-119">带符号的 32 位整数值。</span><span class="sxs-lookup"><span data-stu-id="eca4a-119">A signed 32-bit integer value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Match (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Match : obj -&gt; bool" Usage="propertyFilterAttribute.Match value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="eca4a-120">要比较的对象。</span><span class="sxs-lookup"><span data-stu-id="eca4a-120">The object to compare.</span></span> <span data-ttu-id="eca4a-121">此对象应为 <see cref="T:System.ComponentModel.PropertyFilterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="eca4a-121">This object is expected to be a <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</span></span></param>
        <summary><span data-ttu-id="eca4a-122">返回一个值，该值指示当前的属性筛选器选项是否 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] 与所提供的对象的属性筛选器选项匹配。</span><span class="sxs-lookup"><span data-stu-id="eca4a-122">Returns a value that indicates whether the property filter options of the current <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] match the property filter options of the provided object.</span></span></summary>
        <returns><span data-ttu-id="eca4a-123">如果匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eca4a-123"><see langword="true" /> if a match exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca4a-124">对于存储标志的特性（对于为 true） <xref:System.ComponentModel.PropertyFilterAttribute> ， <xref:System.ComponentModel.PropertyFilterAttribute.Match%2A> 结果可能与 <xref:System.ComponentModel.PropertyFilterAttribute.Equals%2A> 结果不同。</span><span class="sxs-lookup"><span data-stu-id="eca4a-124">For attributes that store flags, which is true for <xref:System.ComponentModel.PropertyFilterAttribute>, a <xref:System.ComponentModel.PropertyFilterAttribute.Match%2A> result may be different from an <xref:System.ComponentModel.PropertyFilterAttribute.Equals%2A> result.</span></span> <span data-ttu-id="eca4a-125">例如，筛选器匹配的 <xref:System.ComponentModel.PropertyFilterOptions.SetValues> 筛选器 <xref:System.ComponentModel.PropertyFilterOptions.All> ，因为 <xref:System.ComponentModel.PropertyFilterOptions.All> 是所有筛选器值的合并。</span><span class="sxs-lookup"><span data-stu-id="eca4a-125">For example, a filter of <xref:System.ComponentModel.PropertyFilterOptions.SetValues> matches a filter of <xref:System.ComponentModel.PropertyFilterOptions.All>, because <xref:System.ComponentModel.PropertyFilterOptions.All> is a merge of all filter values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
