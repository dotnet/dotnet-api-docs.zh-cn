<Type Name="HandledEventHandler" FullName="System.ComponentModel.HandledEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d199f432bc8a109de93a76e2b7a39462622b0ac" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="83466501" /></Metadata><TypeSignature Language="C#" Value="public delegate void HandledEventHandler(object sender, HandledEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HandledEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.HandledEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub HandledEventHandler(sender As Object, e As HandledEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void HandledEventHandler(System::Object ^ sender, HandledEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type HandledEventHandler = delegate of obj * HandledEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.HandledEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件源。</param>
    <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.HandledEventArgs" />。</param>
    <summary>表示可以处理事件的方法，这些事件在事件处理程序返回后可能需要或不需要进行进一步处理。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> 属性提供足够的事件数据时，可以将此委托用于自己的事件。 <xref:System.ComponentModel.HandledEventArgs.Handled%2A> `true` 如果处理程序中已完成所有必要的处理，事件处理程序可以将属性设置为。  
  
 通常，需要此功能的事件还需要其他事件数据，并将使用派生自的类 <xref:System.ComponentModel.HandledEventArgs> 以及相应的、具有相似名称的委托类型。 例如， <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> 事件使用 <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs> 事件数据类型和 <xref:System.Windows.Forms.DataGridViewRowPrePaintEventHandler> 委托类型。 由于委托不是继承的，因此 <xref:System.ComponentModel.HandledEventHandler> 很少使用。  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
