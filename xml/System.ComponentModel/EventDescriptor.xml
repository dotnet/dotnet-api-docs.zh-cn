<Type Name="EventDescriptor" FullName="System.ComponentModel.EventDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78ce5215c7d88fbf36adff8e9dfa94875005cdc0" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83939304" /></Metadata><TypeSignature Language="C#" Value="public abstract class EventDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EventDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.EventDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EventDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <TypeSignature Language="F#" Value="type EventDescriptor = class&#xA;    inherit MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3d3ed-101">提供有关事件的信息。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-101">Provides information about an event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d3ed-102"><xref:System.ComponentModel.EventDescriptor> 由名称、其特性、事件绑定到的组件、事件委托、委托类型以及委托是否为多播。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-102">An <xref:System.ComponentModel.EventDescriptor> consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.</span></span>  
  
 <span data-ttu-id="3d3ed-103"><xref:System.ComponentModel.EventDescriptor> 提供以下 `abstract` 属性和方法：</span><span class="sxs-lookup"><span data-stu-id="3d3ed-103"><xref:System.ComponentModel.EventDescriptor> provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="3d3ed-104"><xref:System.ComponentModel.EventDescriptor.ComponentType%2A> 包含在其上声明此事件的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-104"><xref:System.ComponentModel.EventDescriptor.ComponentType%2A> contains the type of the component this event is declared on.</span></span>  
  
-   <span data-ttu-id="3d3ed-105"><xref:System.ComponentModel.EventDescriptor.EventType%2A> 包含事件的委托的类型。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-105"><xref:System.ComponentModel.EventDescriptor.EventType%2A> contains the type of delegate for the event.</span></span>  
  
-   <span data-ttu-id="3d3ed-106"><xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> 包含一个值，该值指示事件委托是否为多路广播委托。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-106"><xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> contains a value indicating whether the event delegate is a multicast delegate.</span></span>  
  
-   <span data-ttu-id="3d3ed-107"><xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> 将事件绑定到组件。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-107"><xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> binds the event to a component.</span></span>  
  
-   <span data-ttu-id="3d3ed-108"><xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> 从组件解除绑定委托，使委托不再接收来自组件的事件。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-108"><xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> unbinds the delegate from the component so that the delegate no longer receives events from the component.</span></span>  
  
 <span data-ttu-id="3d3ed-109">有关事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-109">For more information about events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span> <span data-ttu-id="3d3ed-110">有关反射的详细信息，请参阅[反射](/dotnet/framework/reflection-and-codedom/reflection)中的主题。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-110">For more information about reflection, see the topics in [Reflection](/dotnet/framework/reflection-and-codedom/reflection).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d3ed-111">下面的代码示例基于 <xref:System.ComponentModel.EventDescriptorCollection> 类中的示例生成。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-111">The following code example is built upon the example in the <xref:System.ComponentModel.EventDescriptorCollection> class.</span></span> <span data-ttu-id="3d3ed-112">它在文本框中的按钮上打印每个事件的信息（类别、说明和显示名称）。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-112">It prints the information (category, description, and display name) of each event on a button in a text box.</span></span> <span data-ttu-id="3d3ed-113">它要求 `button1` 和 `textbox1` 已在窗体中实例化。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-113">It requires that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[EventDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/EventDescriptor/CPP/eventdescriptor.cpp#1)]
 [!code-csharp[EventDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/EventDescriptor/CS/eventdescriptor.cs#1)]
 [!code-vb[EventDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/EventDescriptor/VB/eventdescriptor.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3d3ed-114">初始化 <see cref="T:System.ComponentModel.EventDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-114">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.EventDescriptor : System.ComponentModel.MemberDescriptor -&gt; System.ComponentModel.EventDescriptor" Usage="new System.ComponentModel.EventDescriptor descr" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="3d3ed-115">一个 <see cref="T:System.ComponentModel.MemberDescriptor" />，它包含该事件的名称及其特性。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-115">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the event and its attributes.</span></span></param>
        <summary><span data-ttu-id="3d3ed-116">使用指定 <see cref="T:System.ComponentModel.EventDescriptor" /> 中的名称和特性初始化 <see cref="T:System.ComponentModel.MemberDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-116">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.EventDescriptor : System.ComponentModel.MemberDescriptor * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="new System.ComponentModel.EventDescriptor (descr, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="3d3ed-117">一个 <see cref="T:System.ComponentModel.MemberDescriptor" />，它具有该成员的名称及其特性。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-117">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that has the name of the member and its attributes.</span></span></param>
        <param name="attrs"><span data-ttu-id="3d3ed-118">一个 <see cref="T:System.Attribute" /> 数组，具有要添加到此事件说明的特性。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-118">An <see cref="T:System.Attribute" /> array with the attributes you want to add to this event description.</span></span></param>
        <summary><span data-ttu-id="3d3ed-119">使用指定 <see cref="T:System.ComponentModel.EventDescriptor" /> 中的名称以及同时出现在 <see cref="T:System.ComponentModel.MemberDescriptor" /> 和 <see cref="T:System.ComponentModel.MemberDescriptor" /> 数组中的特性初始化 <see cref="T:System.Attribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-119">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d3ed-120">此构造函数将 <xref:System.Attribute> 数组中的特性追加到 <xref:System.ComponentModel.MemberDescriptor>中的特性。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-120">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.EventDescriptor : string * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="new System.ComponentModel.EventDescriptor (name, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3d3ed-121">事件的名称。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-121">The name of the event.</span></span></param>
        <param name="attrs"><span data-ttu-id="3d3ed-122">包含事件特性的类型 <see cref="T:System.Attribute" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-122">An array of type <see cref="T:System.Attribute" /> that contains the event attributes.</span></span></param>
        <summary><span data-ttu-id="3d3ed-123">用指定的名称和特性数组初始化 <see cref="T:System.ComponentModel.EventDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-123">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the specified name and attribute array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public abstract void AddEventHandler (object component, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventHandler(object component, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddEventHandler (component As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddEventHandler(System::Object ^ component, Delegate ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddEventHandler : obj * Delegate -&gt; unit" Usage="eventDescriptor.AddEventHandler (component, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="3d3ed-124">向委托提供事件的组件。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-124">A component that provides events to the delegate.</span></span></param>
        <param name="value"><span data-ttu-id="3d3ed-125">表示处理事件的方法的委托。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-125">A delegate that represents the method that handles the event.</span></span></param>
        <summary><span data-ttu-id="3d3ed-126">当在派生类中被重写时，将事件绑定到组件。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-126">When overridden in a derived class, binds the event to the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d3ed-127">通常，此方法是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-127">Typically, this method is implemented through reflection.</span></span> <span data-ttu-id="3d3ed-128">有关反射的详细信息，请参阅[反射](/dotnet/framework/reflection-and-codedom/reflection)中的主题。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-128">For more information about reflection, see the topics in [Reflection](/dotnet/framework/reflection-and-codedom/reflection).</span></span>  
  
 <span data-ttu-id="3d3ed-129">有关委托的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-129">For more information about delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3d3ed-130">重写此方法时，应通过调用相应的<c>add_myHandler</c>方法，将委托添加到组件的事件列表中。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-130">When you override this method, it should add the delegate to the component's event list by invoking the appropriate <c>add_myHandler</c> method.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentType : Type" Usage="System.ComponentModel.EventDescriptor.ComponentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d3ed-131">当在派生类中被重写时，获取该事件绑定到的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-131">When overridden in a derived class, gets the type of component this event is bound to.</span></span></summary>
        <value><span data-ttu-id="3d3ed-132">一个 <see cref="T:System.Type" />，表示该事件绑定到的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-132">A <see cref="T:System.Type" /> that represents the type of component the event is bound to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d3ed-133">通常，此属性是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-133">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.EventType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public abstract Type EventType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EventType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.EventType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EventType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ EventType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventType : Type" Usage="System.ComponentModel.EventDescriptor.EventType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d3ed-134">当在派生类中被重写时，获取该事件的委托的类型。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-134">When overridden in a derived class, gets the type of delegate for the event.</span></span></summary>
        <value><span data-ttu-id="3d3ed-135">一个 <see cref="T:System.Type" />，表示该事件的委托的类型。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-135">A <see cref="T:System.Type" /> that represents the type of delegate for the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d3ed-136">通常，此属性是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-136">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.ComponentType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      </Docs>
    </Member>
    <Member MemberName="IsMulticast">
      <MemberSignature Language="C#" Value="public abstract bool IsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsMulticast { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMulticast : bool" Usage="System.ComponentModel.EventDescriptor.IsMulticast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d3ed-137">当在派生类中被重写时，获取指示该事件委托是否是多路广播委托的值。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-137">When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.</span></span></summary>
        <value><span data-ttu-id="3d3ed-138">如果事件委托是多路广播的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-138"><see langword="true" /> if the event delegate is multicast; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d3ed-139">通常，此属性是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-139">Typically, this property is implemented through reflection.</span></span>  
  
 <span data-ttu-id="3d3ed-140">多路广播委托不同于常规委托，因为它可以包含对多个方法的引用。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-140">A multicast delegate differs from a regular delegate in that it can contain references to more than just one method.</span></span> <span data-ttu-id="3d3ed-141">在调用委托时，多路广播委托中的方法将按它们出现的顺序进行同步执行。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-141">Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear.</span></span> <span data-ttu-id="3d3ed-142">如果调用的方法之一引发异常，则委托停止并将异常传播到委托调用方。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-142">If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.EventType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.ComponentType" />
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public abstract void RemoveEventHandler (object component, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventHandler(object component, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveEventHandler (component As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveEventHandler(System::Object ^ component, Delegate ^ value);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEventHandler : obj * Delegate -&gt; unit" Usage="eventDescriptor.RemoveEventHandler (component, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="3d3ed-143">委托要绑定到的组件。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-143">The component that the delegate is bound to.</span></span></param>
        <param name="value"><span data-ttu-id="3d3ed-144">要解除组件绑定的委托。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-144">The delegate to unbind from the component.</span></span></param>
        <summary><span data-ttu-id="3d3ed-145">当在派生类中被重写时，解除委托与组件的绑定，使委托将不再从组件接收事件。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-145">When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d3ed-146">通常，此方法是通过反射实现的。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-146">Typically, this method is implemented through reflection.</span></span> <span data-ttu-id="3d3ed-147">有关详细信息，请参阅[反射](/dotnet/framework/reflection-and-codedom/reflection)中的主题。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-147">For more information, see the topics in [Reflection](/dotnet/framework/reflection-and-codedom/reflection).</span></span>  
  
 <span data-ttu-id="3d3ed-148">有关委托的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-148">For more information about delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3d3ed-149">重写此方法时，应通过调用相应的<c>remove_myHandler</c>方法，从组件的事件列表中删除委托。</span><span class="sxs-lookup"><span data-stu-id="3d3ed-149">When you override this method, it should remove the delegate from the component's event list by invoking the appropriate <c>remove_myHandler</c> method.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      </Docs>
    </Member>
  </Members>
</Type>
