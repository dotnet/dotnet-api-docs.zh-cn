<Type Name="MaskedTextProvider" FullName="System.ComponentModel.MaskedTextProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1be695b47f462ebfa618fd7cb861480aa1c240db" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89729929" /></Metadata><TypeSignature Language="C#" Value="public class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextProvider extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.MaskedTextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class MaskedTextProvider&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="F#" Value="type MaskedTextProvider = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8d505-101">表示可由支持掩码的任何数量的控件（如 <see cref="T:System.Windows.Forms.MaskedTextBox" /> 控件）使用的掩码分析服务。</span><span class="sxs-lookup"><span data-stu-id="8d505-101">Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-102"><xref:System.Windows.Forms.MaskedTextBox>控件包含由文本字符和格式设置元素组成的掩码，它对所有用户输入进行测试。</span><span class="sxs-lookup"><span data-stu-id="8d505-102">The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against.</span></span> <span data-ttu-id="8d505-103">Windows 窗体将特定掩码分析引擎与永久关联，而不是将 <xref:System.Windows.Forms.MaskedTextBox> 其作为单独的服务提供，该类由 <xref:System.ComponentModel.MaskedTextProvider> 类表示，该服务定义属性的文档中讨论的掩码语言的语法 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-103">Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="8d505-104">类的许多成员将 <xref:System.Windows.Forms.MaskedTextBox> 其实现称为与关联的的命名成员相似 <xref:System.ComponentModel.MaskedTextProvider> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-104">Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>.</span></span> <span data-ttu-id="8d505-105">例如，类的 <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> 属性 <xref:System.Windows.Forms.MaskedTextBox> 引用对类的的所有访问 <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> <xref:System.ComponentModel.MaskedTextProvider> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-105">For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 <span data-ttu-id="8d505-106">使用的掩码分析引擎在 <xref:System.ComponentModel.MaskedTextProvider> Microsoft Visual Basic 版本6中包含的掩码编辑控件之后进行建模。</span><span class="sxs-lookup"><span data-stu-id="8d505-106">The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6.</span></span> <span data-ttu-id="8d505-107">该属性的文档介绍了其屏蔽语言 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-107">Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="8d505-108">类涉及以下三个不同的字符串 <xref:System.ComponentModel.MaskedTextProvider> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-108">The following three distinct strings are involved with the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
|<span data-ttu-id="8d505-109">字符串名称</span><span class="sxs-lookup"><span data-stu-id="8d505-109">String name</span></span>|<span data-ttu-id="8d505-110">说明</span><span class="sxs-lookup"><span data-stu-id="8d505-110">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="8d505-111">输入字符或字符串</span><span class="sxs-lookup"><span data-stu-id="8d505-111">Input character or string</span></span>|<span data-ttu-id="8d505-112">表示用作应用掩码的输入的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-112">Represents the characters used as input that the mask is applied against.</span></span> <span data-ttu-id="8d505-113">在实际情况下，输入字符串可能由多个输入操作组成，其中包括 <xref:System.ComponentModel.MaskedTextProvider.Add%2A> 、、 <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> 和 <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-113">In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span></span> <span data-ttu-id="8d505-114">因此，不能直接访问输入字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-114">Therefore, the input string cannot be accessed directly.</span></span> <span data-ttu-id="8d505-115">但是，通过和、和属性可以使用输入字符串处理的各个方面 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-115">However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties.</span></span>|  
|<span data-ttu-id="8d505-116">Mask</span><span class="sxs-lookup"><span data-stu-id="8d505-116">Mask</span></span>|<span data-ttu-id="8d505-117">表示用于将输入字符串转换为带格式字符串的输入格式掩码。</span><span class="sxs-lookup"><span data-stu-id="8d505-117">Represents the input formatting mask used to transform the input string into the formatted string.</span></span> <span data-ttu-id="8d505-118">此字符串在中设置 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> ，主要通过 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 属性访问。</span><span class="sxs-lookup"><span data-stu-id="8d505-118">This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span> <span data-ttu-id="8d505-119">还可以通过其他成员（例如 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 、和属性）使用掩码的特征 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-119">Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties.</span></span>|  
|<span data-ttu-id="8d505-120">格式化字符串</span><span class="sxs-lookup"><span data-stu-id="8d505-120">Formatted string</span></span>|<span data-ttu-id="8d505-121">表示在将完整的掩码应用于输入字符串时所产生的字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-121">Represents the string that results when the full mask is applied to the input string.</span></span> <span data-ttu-id="8d505-122">可以通过类的多个成员查询带格式的字符串，包括 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 、 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 、 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 、 <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A> 、、等 <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-122">The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on.</span></span> <span data-ttu-id="8d505-123">带格式字符串的完整值可通过 <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 和 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 方法获取。</span><span class="sxs-lookup"><span data-stu-id="8d505-123">The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="8d505-124">输入字符串可以表示直接用户输入（如的情况 <xref:System.Windows.Forms.MaskedTextBox> ），也可以由不与用户输入/输出操作直接关联的其他进程生成。</span><span class="sxs-lookup"><span data-stu-id="8d505-124">The input string may represent direct user input, as in the case of the <xref:System.Windows.Forms.MaskedTextBox>, or may be generated by other processes not directly associated with user input/output operations.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
    <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d505-125">初始化 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8d505-125">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider mask" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="8d505-126">一个表示输入掩码的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-126">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <summary><span data-ttu-id="8d505-127">使用指定的掩码初始化 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8d505-127">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-128">此构造函数的使用完全等效于以下对 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 构造函数的调用：</span><span class="sxs-lookup"><span data-stu-id="8d505-128">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="8d505-129">一个表示输入掩码的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-129">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="8d505-130">如果将输入限制为与 ASCII 兼容的字符，则为 <see langword="true" />；如果允许使用整个 Unicode 字符集，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-130"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="8d505-131">使用指定的掩码和 ASCII 限制值初始化 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8d505-131">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-132">此构造函数的使用完全等效于以下对 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 构造函数的调用：</span><span class="sxs-lookup"><span data-stu-id="8d505-132">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', restrictToASCII)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="8d505-133">一个表示输入掩码的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-133">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="8d505-134"><see cref="T:System.Globalization.CultureInfo" />，用于设置区分区域的分隔符。</span><span class="sxs-lookup"><span data-stu-id="8d505-134">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <summary><span data-ttu-id="8d505-135">使用指定的掩码和区域性初始化 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8d505-135">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-136">此构造函数的使用完全等效于以下对 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 构造函数的调用：</span><span class="sxs-lookup"><span data-stu-id="8d505-136">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="8d505-137">一个表示输入掩码的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-137">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="8d505-138">将为输入到密码字符串中的字符显示的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-138">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="8d505-139">如果允许将提示字符作为输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-139"><see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8d505-140">使用指定的掩码、密码字符和用法提示值初始化 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8d505-140">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, password character, and prompt usage value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-141">此构造函数的使用完全等效于以下对 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 构造函数的调用：</span><span class="sxs-lookup"><span data-stu-id="8d505-141">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="8d505-142">一个表示输入掩码的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-142">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="8d505-143"><see cref="T:System.Globalization.CultureInfo" />，用于设置区分区域的分隔符。</span><span class="sxs-lookup"><span data-stu-id="8d505-143">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="8d505-144">如果将输入限制为与 ASCII 兼容的字符，则为 <see langword="true" />；如果允许使用整个 Unicode 字符集，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-144"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="8d505-145">使用指定的掩码、区域性和 ASCII 限制值初始化 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8d505-145">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-146">此构造函数的使用完全等效于以下对 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 构造函数的调用：</span><span class="sxs-lookup"><span data-stu-id="8d505-146">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', restrictToAscii)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="8d505-147">一个表示输入掩码的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-147">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="8d505-148"><see cref="T:System.Globalization.CultureInfo" />，用于设置区分区域的分隔符。</span><span class="sxs-lookup"><span data-stu-id="8d505-148">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="8d505-149">将为输入到密码字符串中的字符显示的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-149">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="8d505-150">如果允许将提示字符作为输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-150"><see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8d505-151">使用指定的掩码、区域性、密码字符和用法提示值初始化 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8d505-151">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, password character, and prompt usage value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-152">此构造函数的使用完全等效于以下对 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> 构造函数的调用：</span><span class="sxs-lookup"><span data-stu-id="8d505-152">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, allowPromptAsInput As Boolean, promptChar As Char, passwordChar As Char, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool * char * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, allowPromptAsInput, promptChar, passwordChar, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
        <Parameter Name="promptChar" Type="System.Char" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask"><span data-ttu-id="8d505-153">一个表示输入掩码的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-153">A <see cref="T:System.String" /> that represents the input mask.</span></span></param>
        <param name="culture"><span data-ttu-id="8d505-154"><see cref="T:System.Globalization.CultureInfo" />，用于设置区分区域的分隔符。</span><span class="sxs-lookup"><span data-stu-id="8d505-154">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span></span></param>
        <param name="allowPromptAsInput"><span data-ttu-id="8d505-155">一个 <see cref="T:System.Boolean" /> 值，指定是否应允许提示字符作为有效的输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-155">A <see cref="T:System.Boolean" /> value that specifies whether the prompt character should be allowed as a valid input character.</span></span></param>
        <param name="promptChar"><span data-ttu-id="8d505-156">一个将显示为用户输入占位符的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-156">A <see cref="T:System.Char" /> that will be displayed as a placeholder for user input.</span></span></param>
        <param name="passwordChar"><span data-ttu-id="8d505-157">将为输入到密码字符串中的字符显示的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-157">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span></span></param>
        <param name="restrictToAscii"><span data-ttu-id="8d505-158">如果将输入限制为与 ASCII 兼容的字符，则为 <see langword="true" />；如果允许使用整个 Unicode 字符集，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-158"><see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span></span></param>
        <summary><span data-ttu-id="8d505-159">使用指定的掩码、区域性、用法提示值、提示字符、密码字符和 ASCII 限制值初始化 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8d505-159">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-160">此构造函数表示最常见的重载形式。</span><span class="sxs-lookup"><span data-stu-id="8d505-160">This constructor represents the most general overloaded form.</span></span> <span data-ttu-id="8d505-161">`mask`参数必须符合类定义的掩码语言 <xref:System.ComponentModel.MaskedTextProvider> ，该类在类的属性中进行了详细说明 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.MaskedTextBox> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-161">The `mask` parameter must conform to the masking language defined by the <xref:System.ComponentModel.MaskedTextProvider> class, which is detailed in the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class.</span></span>  
  
 <span data-ttu-id="8d505-162">由于不能查询非特定区域性的信息，因此 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 构造函数将使用 <xref:System.Globalization.CultureInfo.GetCultures%2A> 方法来搜索第一个非特定区域性，以确定正确的分隔符。</span><span class="sxs-lookup"><span data-stu-id="8d505-162">Because neutral cultures cannot be queried for culture-specific information, the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor will use the <xref:System.Globalization.CultureInfo.GetCultures%2A> method to search for the first non-neutral culture to use to determine the proper separator characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d505-163">掩码参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-163">The mask parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span>  
  
<span data-ttu-id="8d505-164">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8d505-164">-or-</span></span> 
<span data-ttu-id="8d505-165">掩码包含一个或多个不可打印字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-165">The mask contains one or more non-printable characters.</span></span></exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d505-166">将输入字符或输入字符串添加到带格式字符串中。</span><span class="sxs-lookup"><span data-stu-id="8d505-166">Adds an input character or input string to the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input);" />
      <MemberSignature Language="F#" Value="member this.Add : char -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-167">一个要追加到带格式字符串的 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-167">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span></span></param>
        <summary><span data-ttu-id="8d505-168">将指定的输入字符添加到带格式字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="8d505-168">Adds the specified input character to the end of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="8d505-169">如果输入字符添加成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-169"><see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-170"><xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>方法将 `input` 字符值添加到带格式字符串中的第一个可用位置，该位置位于上次赋值后的位置，该位置由 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 属性表示。</span><span class="sxs-lookup"><span data-stu-id="8d505-170">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> method adds the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="8d505-171">此方法会因以下任何原因而失败：</span><span class="sxs-lookup"><span data-stu-id="8d505-171">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="8d505-172">输入值不可 `input` 打印，或者与它的对应掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-172">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="8d505-173">带格式的字符串中有零个可用的编辑位置，或在上一个赋值位置之后没有可用的编辑位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-173">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-174">一个 <see cref="T:System.String" />，包含要追加到带格式字符串的字符值。</span><span class="sxs-lookup"><span data-stu-id="8d505-174">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span></span></param>
        <summary><span data-ttu-id="8d505-175">将指定输入字符串中的字符添加到带格式字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="8d505-175">Adds the characters in the specified input string to the end of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="8d505-176">如果已成功添加输入字符串中的所有字符，则为 <see langword="true" />；否则为 <see langword="false" />，以指示没有添加任何字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-176"><see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-177"><xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>方法将字符串中的字符添加 `input` 到带格式的字符串中，从后的第一个可用位置开始 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-177">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="8d505-178">此方法会因以下任何原因而失败：</span><span class="sxs-lookup"><span data-stu-id="8d505-178">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="8d505-179">输入值中的任何字符 `input` 均不可打印，或者输入值与其对应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-179">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="8d505-180">在上一个赋值位置之后，带格式的字符串中没有足够的可用编辑位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-180">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="8d505-181">如果此方法失败，则不会进行任何添加，并且该方法将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-181">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d505-182"><paramref name="input" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-182">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : char * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-183">一个要追加到带格式字符串的 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-183">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="8d505-184">带格式的字符串中尝试添加字符的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-184">The zero-based position in the formatted string where the attempt was made to add the character.</span></span> <span data-ttu-id="8d505-185">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-185">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-186">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-186">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="8d505-187">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-187">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-188">将指定输入字符添加到带格式字符串的末尾，然后输出位置和描述性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-188">Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="8d505-189">如果输入字符添加成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-189"><see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-190">此 <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> 方法尝试将 `input` 字符值添加到带格式字符串中的第一个可用位置，该位置位于上次赋值后的位置，该位置由 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 属性表示。</span><span class="sxs-lookup"><span data-stu-id="8d505-190">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method attempts to add the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="8d505-191">如果所有可用位置都在上次分配的位置之前，则此方法将失败。</span><span class="sxs-lookup"><span data-stu-id="8d505-191">This method will fail if all available positions are before the last assigned position.</span></span> <span data-ttu-id="8d505-192">此方法会因以下任何原因而失败：</span><span class="sxs-lookup"><span data-stu-id="8d505-192">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="8d505-193">输入值不可 `input` 打印，或者与它的对应掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-193">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="8d505-194">带格式的字符串中有零个可用的编辑位置，或在上一个赋值位置之后没有可用的编辑位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-194">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 <span data-ttu-id="8d505-195">此方法的功能与采用单个参数的重写版本相同 <xref:System.Char> ， <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> 不同之处在于它会输出其他信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-195">This method functions the same as the overridden version taking a single <xref:System.Char> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : string * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-196">一个 <see cref="T:System.String" />，包含要追加到带格式字符串的字符值。</span><span class="sxs-lookup"><span data-stu-id="8d505-196">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="8d505-197">带格式的字符串中尝试添加字符的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-197">The zero-based position in the formatted string where the attempt was made to add the character.</span></span> <span data-ttu-id="8d505-198">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-198">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-199">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-199">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="8d505-200">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-200">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-201">将指定的输入字符串中的字符添加到带格式字符串的末尾，然后输出位置和描述性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-201">Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="8d505-202">如果已成功添加输入字符串中的所有字符，则为 <see langword="true" />；否则为 <see langword="false" />，以指示没有添加任何字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-202"><see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-203"><xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29>方法将字符串中的字符添加 `input` 到带格式的字符串中，从后的第一个可用位置开始 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-203">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="8d505-204">此方法会因以下任何原因而失败：</span><span class="sxs-lookup"><span data-stu-id="8d505-204">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="8d505-205">输入值中的任何字符 `input` 均不可打印，或者输入值与其对应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-205">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="8d505-206">在上一个赋值位置之后，带格式的字符串中没有足够的可用编辑位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-206">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="8d505-207">如果此方法失败，则不会进行任何添加，并且该方法将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-207">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 <span data-ttu-id="8d505-208">此方法的功能与采用单个参数的重写版本相同 <xref:System.String> ， <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> 不同之处在于它会输出其他信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-208">This method functions the same as the overridden version taking a single <xref:System.String> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowPromptAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPromptAsInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowPromptAsInput : bool" Usage="System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-209">获取一个值，该值指示是否应将提示字符视为有效的输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-209">Gets a value indicating whether the prompt character should be treated as a valid input character or not.</span></span></summary>
        <value><span data-ttu-id="8d505-210">如果用户可将 <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> 输入到控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-210"><see langword="true" /> if the user can enter <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> into the control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8d505-211">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-211">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-212">此 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 属性的值在 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 构造函数中设置。</span><span class="sxs-lookup"><span data-stu-id="8d505-212">The <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="8d505-213">即使 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 为 `true` ，提示字符也必须对掩码中的当前位置有效，才能接受。</span><span class="sxs-lookup"><span data-stu-id="8d505-213">Even when <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> is `true`, the prompt character must be valid for the current location in the mask in order to be accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsciiOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsciiOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AsciiOnly : bool" Usage="System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-214">获取一个值，指示掩码是否接受 ASCII 字符集之外的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-214">Gets a value indicating whether the mask accepts characters outside of the ASCII character set.</span></span></summary>
        <value><span data-ttu-id="8d505-215">如果仅接受 ASCII，则为 <see langword="true" />；如果 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 可接受任意 Unicode 字符，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-215"><see langword="true" /> if only ASCII is accepted; <see langword="false" /> if <see cref="T:System.ComponentModel.MaskedTextProvider" /> can accept any arbitrary Unicode character.</span></span> <span data-ttu-id="8d505-216">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-216">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-217">此 <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> 属性的值在 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 构造函数中设置。</span><span class="sxs-lookup"><span data-stu-id="8d505-217">The <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="8d505-218">如果 `true` 为，则将 <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> 用户输入限制为 ASCII 字符集。</span><span class="sxs-lookup"><span data-stu-id="8d505-218">If `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restricts user input to the ASCII character set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AssignedEditPositionCount">
      <MemberSignature Language="C#" Value="public int AssignedEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssignedEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssignedEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssignedEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AssignedEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-219">获取已成功赋予输入值的可编辑字符位置的数目。</span><span class="sxs-lookup"><span data-stu-id="8d505-219">Gets the number of editable character positions that have already been successfully assigned an input value.</span></span></summary>
        <value><span data-ttu-id="8d505-220">一个 <see cref="T:System.Int32" />，包含输入掩码中的可编辑字符位置数（这些字符位置已在带格式字符串中赋予了字符值）。</span><span class="sxs-lookup"><span data-stu-id="8d505-220">An <see cref="T:System.Int32" /> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-221">由属性表示的可编辑字符位置的总数 <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> 应该等于 <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> 和属性的和 <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-221">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="AvailableEditPositionCount">
      <MemberSignature Language="C#" Value="public int AvailableEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AvailableEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AvailableEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-222">获取输入掩码中尚未赋予输入值的可编辑字符位置的数目。</span><span class="sxs-lookup"><span data-stu-id="8d505-222">Gets the number of editable character positions in the input mask that have not yet been assigned an input value.</span></span></summary>
        <value><span data-ttu-id="8d505-223">一个 <see cref="T:System.Int32" />，包含尚未赋予字符值的可编辑字符位置的数目。</span><span class="sxs-lookup"><span data-stu-id="8d505-223">An <see cref="T:System.Int32" /> containing the number of editable character positions that not yet been assigned a character value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-224">由属性表示的可编辑字符位置的总数 <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> 应该等于 <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> 和属性的和 <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-224">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Clear">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d505-225">从带格式字符串中清除所有输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-225">Clears all the input characters from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="maskedTextProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d505-226">通过用提示字符替换可编辑输入字符，从带格式字符串中清除所有可编辑输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-226">Clears all the editable input characters from the formatted string, replacing them with prompt characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-227"><xref:System.ComponentModel.MaskedTextProvider.Clear>方法重新初始化带格式的字符串，并将提示字符插入所有可编辑位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-227">The <xref:System.ComponentModel.MaskedTextProvider.Clear> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear([out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (ByRef resultHint As MaskedTextResultHint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear([Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Clear : MaskedTextResultHint -&gt; unit" Usage="maskedTextProvider.Clear resultHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resultHint"><span data-ttu-id="8d505-228">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-228">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="8d505-229">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-229">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-230">通过用提示字符替换可编辑输入字符，从带格式字符串中清除所有可编辑输入字符，然后输出描述性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-230">Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-231"><xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29>方法重新初始化带格式的字符串，并将提示字符插入所有可编辑位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-231">The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span> <span data-ttu-id="8d505-232">它等效于不带参数的重写版本，但 <xref:System.ComponentModel.MaskedTextProvider.Clear> 它会输出附加信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-232">It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="maskedTextProvider.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d505-233">创建当前 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="8d505-233">Creates a copy of the current <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span></span></summary>
        <returns><span data-ttu-id="8d505-234">此方法创建的强制转换为某对象的 <see cref="T:System.ComponentModel.MaskedTextProvider" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="8d505-234">The <see cref="T:System.ComponentModel.MaskedTextProvider" /> object this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-235"><xref:System.ComponentModel.MaskedTextProvider.Clone%2A>方法返回当前的新副本 <xref:System.ComponentModel.MaskedTextProvider> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-235">The <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> method returns a new copy of the current <xref:System.ComponentModel.MaskedTextProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="T:System.ICloneable" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-236">获取输入掩码中确定可本地化的分隔符和占位符的值的区域性。</span><span class="sxs-lookup"><span data-stu-id="8d505-236">Gets the culture that determines the value of the localizable separators and placeholders in the input mask.</span></span></summary>
        <value><span data-ttu-id="8d505-237">一个 <see cref="T:System.Globalization.CultureInfo" />，包含与输入掩码关联的区域性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-237">A <see cref="T:System.Globalization.CultureInfo" /> containing the culture information associated with the input mask.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-238">在 <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> 构造函数中设置属性 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-238">The <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPasswordChar">
      <MemberSignature Language="C#" Value="public static char DefaultPasswordChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char DefaultPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultPasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property char DefaultPasswordChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPasswordChar : char" Usage="System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-239">获取用于遮盖用户输入的默认密码字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-239">Gets the default password character used obscure user input.</span></span></summary>
        <value><span data-ttu-id="8d505-240">一个表示默认的密码字符的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-240">A <see cref="T:System.Char" /> that represents the default password character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-241"><xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A>属性在类中定义 <xref:System.ComponentModel.MaskedTextProvider> 为星号字符 ( \* ) 。</span><span class="sxs-lookup"><span data-stu-id="8d505-241">The <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> property is defined in the <xref:System.ComponentModel.MaskedTextProvider> class to be the asterisk character (\*).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      </Docs>
    </Member>
    <Member MemberName="EditPositionCount">
      <MemberSignature Language="C#" Value="public int EditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-242">获取带格式字符串中的可编辑位置数。</span><span class="sxs-lookup"><span data-stu-id="8d505-242">Gets the number of editable positions in the formatted string.</span></span></summary>
        <value><span data-ttu-id="8d505-243">包含带格式字符串中可编辑位置数的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-243">An <see cref="T:System.Int32" /> containing the number of editable positions in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-244">由属性表示的可编辑字符位置的总数 <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> 必须等于 <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> 和属性的和 <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-244">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span> <span data-ttu-id="8d505-245">此值包括必需的和可选的可编辑字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-245">This value includes both the required and the optional editable characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditPositions">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator EditPositions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator EditPositions" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositions As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ EditPositions { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositions : System.Collections.IEnumerator" Usage="System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-246">获取为带格式字符串中的可编辑位置新创建的枚举数。</span><span class="sxs-lookup"><span data-stu-id="8d505-246">Gets a newly created enumerator for the editable positions in the formatted string.</span></span></summary>
        <value><span data-ttu-id="8d505-247">一个 <see cref="T:System.Collections.IEnumerator" />，支持对带格式字符串中的可编辑位置进行枚举。</span><span class="sxs-lookup"><span data-stu-id="8d505-247">An <see cref="T:System.Collections.IEnumerator" /> that supports enumeration over the editable positions in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-248">对属性的每个访问 <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> 都将创建一个可编辑位置的临时集合，检索操作在该集合中进行 <xref:System.Collections.IEnumerator> 操作。</span><span class="sxs-lookup"><span data-stu-id="8d505-248">On every access of the <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> property, a temporary collection of editable positions is created that the retrieved <xref:System.Collections.IEnumerator> operates on.</span></span>  
  
 <span data-ttu-id="8d505-249">此集合为只读。</span><span class="sxs-lookup"><span data-stu-id="8d505-249">This collection is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="8d505-250">带格式的字符串中的搜索起始位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-250">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="8d505-251"><see cref="T:System.Boolean" />，用于指示搜索方向；<see langword="true" /> 表示向前搜索，<see langword="false" /> 表示向后搜索。</span><span class="sxs-lookup"><span data-stu-id="8d505-251">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="8d505-252">使用指定的搜索方向，返回指定位置之后第一个已赋值的可编辑位置的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-252">Returns the position of the first assigned editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="8d505-253">如果成功，则为 <see cref="T:System.Int32" />，表示遇到的第一个已赋值可编辑位置的位置（从零开始计）；否则为 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-253">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-254">格式化字符串由来自掩码的可编辑字符和文本组成。</span><span class="sxs-lookup"><span data-stu-id="8d505-254">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="8d505-255">可编辑字符位置将由从掩码中复制的提示字符（如果未分配）占用，如果已分配有输入字符，则使用有效的输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-255">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="8d505-256"><xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A>方法用于在指定的位置和搜索方向搜索指定的第一个字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-256">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction.</span></span> <span data-ttu-id="8d505-257">然后，可以将结果作为参数传递给 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 索引器，以在此位置获取指定的值。</span><span class="sxs-lookup"><span data-stu-id="8d505-257">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="8d505-258"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>和 <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> 方法是此方法的补充。</span><span class="sxs-lookup"><span data-stu-id="8d505-258">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="8d505-259">带格式的字符串中的搜索起始位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-259">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="8d505-260">带格式的字符串中的搜索结束位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-260">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="8d505-261"><see cref="T:System.Boolean" />，用于指示搜索方向；<see langword="true" /> 表示向前搜索，<see langword="false" /> 表示向后搜索。</span><span class="sxs-lookup"><span data-stu-id="8d505-261">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="8d505-262">使用指定的搜索方向，返回指定位置之间第一个赋值可编辑位置的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-262">Returns the position of the first assigned editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="8d505-263">如果成功，则为 <see cref="T:System.Int32" />，表示遇到的第一个已赋值可编辑位置的位置（从零开始计）；否则为 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-263">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-264">格式化字符串由来自掩码的可编辑字符和文本组成。</span><span class="sxs-lookup"><span data-stu-id="8d505-264">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="8d505-265">可编辑字符位置将由从掩码中复制的提示字符（如果未分配）占用，如果已分配有输入字符，则使用有效的输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-265">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="8d505-266"><xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A>方法用于使用指定的搜索方向，搜索两个指定位置（包括）之间的第一个指定的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-266">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="8d505-267">然后，可以将结果作为参数传递给 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 索引器，以在此位置获取指定的值。</span><span class="sxs-lookup"><span data-stu-id="8d505-267">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="8d505-268"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>和 <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> 方法是此方法的补充。</span><span class="sxs-lookup"><span data-stu-id="8d505-268">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="8d505-269">带格式的字符串中的搜索起始位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-269">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="8d505-270"><see cref="T:System.Boolean" />，用于指示搜索方向；<see langword="true" /> 表示向前搜索，<see langword="false" /> 表示向后搜索。</span><span class="sxs-lookup"><span data-stu-id="8d505-270">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="8d505-271">使用指定的搜索方向，返回指定位置之后第一个可编辑位置的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-271">Returns the position of the first editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="8d505-272">如果成功，则为 <see cref="T:System.Int32" />，表示遇到的第一个可编辑位置的位置（从零开始计）；否则为 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-272">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-273"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>方法用于在指定位置之后的格式化字符串中搜索下一个已赋值或未分配的可编辑位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-273">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.</span></span>  
  
 <span data-ttu-id="8d505-274"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>方法是此方法的补码。</span><span class="sxs-lookup"><span data-stu-id="8d505-274">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="8d505-275">带格式的字符串中的搜索起始位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-275">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="8d505-276">带格式的字符串中的搜索结束位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-276">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="8d505-277"><see cref="T:System.Boolean" />，用于指示搜索方向；<see langword="true" /> 表示向前搜索，<see langword="false" /> 表示向后搜索。</span><span class="sxs-lookup"><span data-stu-id="8d505-277">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="8d505-278">使用指定的搜索方向，返回指定位置之间第一个可编辑位置的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-278">Returns the position of the first editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="8d505-279">如果成功，则为 <see cref="T:System.Int32" />，表示遇到的第一个可编辑位置的位置（从零开始计）；否则为 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-279">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-280"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>方法用于使用指定的搜索方向搜索两个指定位置（包括）之间的第一个可编辑字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-280">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="8d505-281">然后，可以将结果作为参数传递给 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 索引器，以在此位置获取指定的值。</span><span class="sxs-lookup"><span data-stu-id="8d505-281">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="8d505-282"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>方法是此方法的补码。</span><span class="sxs-lookup"><span data-stu-id="8d505-282">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="8d505-283">带格式的字符串中的搜索起始位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-283">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="8d505-284"><see cref="T:System.Boolean" />，用于指示搜索方向；<see langword="true" /> 表示向前搜索，<see langword="false" /> 表示向后搜索。</span><span class="sxs-lookup"><span data-stu-id="8d505-284">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="8d505-285">使用指定的搜索方向，返回指定位置之后第一个不可编辑位置的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-285">Returns the position of the first non-editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="8d505-286">如果成功，则为 <see cref="T:System.Int32" />，表示遇到的第一个原义字符的位置（从零开始计）；否则为 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-286">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-287"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>方法用于在指定位置之后搜索带格式字符串中的下一个文字字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-287">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position.</span></span> <span data-ttu-id="8d505-288">然后，可以将结果作为参数传递给 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 索引器，以在此位置获取文本值。</span><span class="sxs-lookup"><span data-stu-id="8d505-288">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="8d505-289"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>方法是此方法的补码。</span><span class="sxs-lookup"><span data-stu-id="8d505-289">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="8d505-290">带格式的字符串中的搜索起始位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-290">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="8d505-291">带格式的字符串中的搜索结束位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-291">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="8d505-292"><see cref="T:System.Boolean" />，用于指示搜索方向；<see langword="true" /> 表示向前搜索，<see langword="false" /> 表示向后搜索。</span><span class="sxs-lookup"><span data-stu-id="8d505-292">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="8d505-293">使用指定的搜索方向，返回指定位置之间第一个不可编辑位置的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-293">Returns the position of the first non-editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="8d505-294">如果成功，则为 <see cref="T:System.Int32" />，表示遇到的第一个原义字符的位置（从零开始计）；否则为 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-294">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-295"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>方法用于使用指定的搜索方向搜索两个指定位置之间的第一个文本字符（包括两个）。</span><span class="sxs-lookup"><span data-stu-id="8d505-295">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="8d505-296">然后，可以将结果作为参数传递给 <xref:System.ComponentModel.MaskedTextProvider.Item%2A> 索引器，以在此位置获取文本值。</span><span class="sxs-lookup"><span data-stu-id="8d505-296">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="8d505-297"><xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>方法是此方法的补码。</span><span class="sxs-lookup"><span data-stu-id="8d505-297">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="8d505-298">带格式的字符串中的搜索起始位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-298">The zero-based position in the formatted string to start the search.</span></span></param>
        <param name="direction"><span data-ttu-id="8d505-299"><see cref="T:System.Boolean" />，用于指示搜索方向；<see langword="true" /> 表示向前搜索，<see langword="false" /> 表示向后搜索。</span><span class="sxs-lookup"><span data-stu-id="8d505-299">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="8d505-300">使用指定的搜索方向，返回指定位置之后第一个未赋值可编辑位置的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-300">Returns the position of the first unassigned editable position after the specified position using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="8d505-301">如果成功，则为 <see cref="T:System.Int32" />，表示遇到的第一个未赋值可编辑位置的位置（从零开始计）；否则为 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-301">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-302">格式化字符串由来自掩码的可编辑字符和文本组成。</span><span class="sxs-lookup"><span data-stu-id="8d505-302">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="8d505-303">可编辑字符位置将由从掩码中复制的提示字符（如果未分配）占用，如果已分配有输入字符，则使用有效的输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-303">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="8d505-304"><xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A>方法用于在指定的位置和搜索方向之后搜索第一个未分配的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-304">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction.</span></span> <span data-ttu-id="8d505-305">提示字符应占用此位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-305">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="8d505-306"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>和 <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> 方法是此方法的补充。</span><span class="sxs-lookup"><span data-stu-id="8d505-306">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="8d505-307">带格式的字符串中的搜索起始位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-307">The zero-based position in the formatted string where the search starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="8d505-308">带格式的字符串中的搜索结束位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-308">The zero-based position in the formatted string where the search ends.</span></span></param>
        <param name="direction"><span data-ttu-id="8d505-309"><see cref="T:System.Boolean" />，用于指示搜索方向；<see langword="true" /> 表示向前搜索，<see langword="false" /> 表示向后搜索。</span><span class="sxs-lookup"><span data-stu-id="8d505-309">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="8d505-310">使用指定的搜索方向，返回指定位置之间第一个未赋值可编辑位置的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-310">Returns the position of the first unassigned editable position between the specified positions using the specified search direction.</span></span></summary>
        <returns><span data-ttu-id="8d505-311">如果成功，则为 <see cref="T:System.Int32" />，表示遇到的第一个未赋值可编辑位置的位置（从零开始计）；否则为 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-311">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-312">格式化字符串由来自掩码的可编辑字符和文本组成。</span><span class="sxs-lookup"><span data-stu-id="8d505-312">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="8d505-313">可编辑字符位置将由从掩码中复制的提示字符（如果未分配）占用，如果已分配有输入字符，则使用有效的输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-313">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="8d505-314"><xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A>方法用于使用指定的搜索方向，搜索两个指定位置（包括）之间的第一个未赋值字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-314">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="8d505-315">提示字符应占用此位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-315">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="8d505-316"><xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>和 <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> 方法是此方法的补充。</span><span class="sxs-lookup"><span data-stu-id="8d505-316">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetOperationResultFromHint">
      <MemberSignature Language="C#" Value="public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetOperationResultFromHint(valuetype System.ComponentModel.MaskedTextResultHint hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOperationResultFromHint (hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetOperationResultFromHint(System::ComponentModel::MaskedTextResultHint hint);" />
      <MemberSignature Language="F#" Value="static member GetOperationResultFromHint : System.ComponentModel.MaskedTextResultHint -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint hint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" />
      </Parameters>
      <Docs>
        <param name="hint"><span data-ttu-id="8d505-317">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" /> 值，通常作为上一个操作的输出参数获取。</span><span class="sxs-lookup"><span data-stu-id="8d505-317">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value typically obtained as an output parameter from a previous operation.</span></span></param>
        <summary><span data-ttu-id="8d505-318">确定指定的 <see cref="T:System.ComponentModel.MaskedTextResultHint" /> 表示成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="8d505-318">Determines whether the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> denotes success or failure.</span></span></summary>
        <returns><span data-ttu-id="8d505-319">如果指定的 <see cref="T:System.ComponentModel.MaskedTextResultHint" /> 值表示成功，则为 <see langword="true" />；如果表示失败，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-319"><see langword="true" /> if the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value represents a success; otherwise, <see langword="false" /> if it represents failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-320">类的以下方法 <xref:System.ComponentModel.MaskedTextProvider> 包含类型的参数 <xref:System.ComponentModel.MaskedTextResultHint> ，该参数用于输出有关方法操作的信息： <xref:System.ComponentModel.MaskedTextProvider.Add%2A> 、 <xref:System.ComponentModel.MaskedTextProvider.Clear%2A> 、 <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> 、、、、、 <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> <xref:System.ComponentModel.MaskedTextProvider.Set%2A> <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> 和 <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-320">The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</span></span> <span data-ttu-id="8d505-321"><xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A>方法解释此值，并返回一个布尔值，该值指示该 <xref:System.ComponentModel.MaskedTextResultHint> 操作是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="8d505-321">The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MaskedTextResultHint" />
      </Docs>
    </Member>
    <Member MemberName="IncludeLiterals">
      <MemberSignature Language="C#" Value="public bool IncludeLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-322">获取或设置一个值，该值指示输入掩码中的原义字符是否应包含在带格式的字符串中。</span><span class="sxs-lookup"><span data-stu-id="8d505-322">Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.</span></span></summary>
        <value><span data-ttu-id="8d505-323">如果包含原义字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-323"><see langword="true" /> if literals are included; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8d505-324">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-324">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-325"><xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 属性将确定在调用方法时是否显示提示和文本字符 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-325">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="8d505-326">通过将这两个属性都设置为 `false` ，已分析的字符串将只表示用户输入的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-326">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IncludePrompt">
      <MemberSignature Language="C#" Value="public bool IncludePrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludePrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-327">获取或设置一个值，该值指示当显示带格式的字符串时是否使用 <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> 来表示缺少的用户输入。</span><span class="sxs-lookup"><span data-stu-id="8d505-327">Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> is used to represent the absence of user input when displaying the formatted string.</span></span></summary>
        <value><span data-ttu-id="8d505-328">如果提示字符用于表示未提供用户输入的位置，则为 <see langword="true" />；否则为 <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d505-328"><see langword="true" /> if the prompt character is used to represent the positions where no user input was provided; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8d505-329">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-329">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-330"><xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>和 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 属性将确定在调用方法时是否显示提示和文本字符 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-330">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="8d505-331">通过将这两个属性都设置为 `false` ，已分析的字符串将只表示用户输入的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-331">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d505-332">在带格式字符串中的特定位置插入字符或字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-332">Inserts a character or string at a specific position within the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-333">要插入的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-333">The <see cref="T:System.Char" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="8d505-334">带格式的字符串中要插入字符的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-334">The zero-based position in the formatted string to insert the character.</span></span></param>
        <summary><span data-ttu-id="8d505-335">在带格式字符串中的指定位置插入指定字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-335">Inserts the specified character at the specified position within the formatted string.</span></span></summary>
        <returns><span data-ttu-id="8d505-336">如果插入成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-336"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-337"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>方法将一个字符插入到参数指定的位置或之后的第一个编辑位置 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-337">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="8d505-338">此方法会将插入点后面的所有现有字符移动一个位置，以便为插入的字符腾出空间 `input` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-338">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="8d505-339">如果出现以下错误之一，则不会执行插入操作，并且方法将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-339">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="8d505-340">`pos`参数小于零或大于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的。</span><span class="sxs-lookup"><span data-stu-id="8d505-340">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="8d505-341">在指定位置或指定位置之外的格式化字符串中找不到可编辑字符 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-341">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="8d505-342">插入字符不是 `input` 有效的输入字符，因为它不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-342">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="8d505-343">插入点右侧没有可用位置，因此无法移动现有字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-343">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="8d505-344">移位现有字符将产生掩码冲突。</span><span class="sxs-lookup"><span data-stu-id="8d505-344">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="8d505-345">如果为空 `input` 字符串，则不会在带格式的字符串中进行更改，但会返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-345">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-346">要插入的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-346">The <see cref="T:System.String" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="8d505-347">带格式的字符串中要插入输入字符串的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-347">The zero-based position in the formatted string to insert the input string.</span></span></param>
        <summary><span data-ttu-id="8d505-348">在带格式字符串中的指定位置插入指定的字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-348">Inserts the specified string at a specified position within the formatted string.</span></span></summary>
        <returns><span data-ttu-id="8d505-349">如果插入成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-349"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-350"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>方法将字符串中的每个字符插入 `input` 到位于位置和之后的编辑位置 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-350">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="8d505-351">此方法会将插入点后面的所有现有字符移动到每个插入字符的一个位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-351">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="8d505-352">如果出现以下错误之一，则不会执行插入操作，并且该方法将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-352">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="8d505-353">`pos`参数小于零或大于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的。</span><span class="sxs-lookup"><span data-stu-id="8d505-353">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="8d505-354">在指定位置或指定位置之外的格式化字符串中不存在足够的可编辑字符， `pos` 以插入字符串中的所有字符 `input` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-354">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="8d505-355">一个或多个插入字符不是有效的输入字符，因为它们不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-355">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="8d505-356">插入点右侧没有足够的可用位置，因此无法移动现有字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-356">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="8d505-357">移位现有字符将产生掩码冲突。</span><span class="sxs-lookup"><span data-stu-id="8d505-357">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="8d505-358">请注意，在插入每个单独的字符时，会发生此变化。</span><span class="sxs-lookup"><span data-stu-id="8d505-358">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="8d505-359">如果为空 `input` 字符串，则不会在带格式的字符串中进行更改，但会返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-359">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d505-360"><paramref name="input" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-360">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-361">要插入的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-361">The <see cref="T:System.Char" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="8d505-362">带格式的字符串中要插入字符的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-362">The zero-based position in the formatted string to insert the character.</span></span></param>
        <param name="testPosition"><span data-ttu-id="8d505-363">如果该方法成功，则为最后一个插入字符的位置；否则为第一次插入失败时所处的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-363">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span></span> <span data-ttu-id="8d505-364">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-364">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-365">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述插入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-365">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span></span> <span data-ttu-id="8d505-366">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-366">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-367">在带格式字符串中的指定位置插入指定的字符，同时返回最后一个插入位置和操作的状态。</span><span class="sxs-lookup"><span data-stu-id="8d505-367">Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.</span></span></summary>
        <returns><span data-ttu-id="8d505-368">如果插入成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-368"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-369"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>方法将一个字符插入到参数指定的位置或之后的第一个编辑位置 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-369">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="8d505-370">此方法会将插入点后面的所有现有字符移动一个位置，以便为插入的字符腾出空间 `input` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-370">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="8d505-371">如果出现以下错误之一，则不会执行插入操作，并且方法将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-371">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="8d505-372">`pos`参数小于零或大于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的。</span><span class="sxs-lookup"><span data-stu-id="8d505-372">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="8d505-373">在指定位置或指定位置之外的格式化字符串中找不到可编辑字符 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-373">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="8d505-374">插入字符不是 `input` 有效的输入字符，因为它不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-374">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="8d505-375">插入点右侧没有可用位置，因此无法移动现有字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-375">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="8d505-376">移位现有字符将产生掩码冲突。</span><span class="sxs-lookup"><span data-stu-id="8d505-376">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="8d505-377">如果为空 `input` 字符串，则不会在带格式的字符串中进行更改，但会返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-377">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-378">要插入的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-378">The <see cref="T:System.String" /> to be inserted.</span></span></param>
        <param name="position"><span data-ttu-id="8d505-379">带格式的字符串中要插入输入字符串的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-379">The zero-based position in the formatted string to insert the input string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="8d505-380">如果该方法成功，则为最后一个插入字符的位置；否则为第一次插入失败时所处的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-380">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span></span> <span data-ttu-id="8d505-381">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-381">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-382">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述插入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-382">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span></span> <span data-ttu-id="8d505-383">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-383">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-384">将指定的字符串插入到带格式字符串中的指定位置，同时返回最后一个插入位置和操作的状态。</span><span class="sxs-lookup"><span data-stu-id="8d505-384">Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.</span></span></summary>
        <returns><span data-ttu-id="8d505-385">如果插入成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-385"><see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-386"><xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>方法将字符串中的每个字符插入 `input` 到位于位置和之后的编辑位置 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-386">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="8d505-387">此方法会将插入点后面的所有现有字符移动到每个插入字符的一个位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-387">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="8d505-388">如果出现以下错误之一，则不会执行插入操作，并且该方法将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-388">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="8d505-389">`pos`参数小于零或大于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的。</span><span class="sxs-lookup"><span data-stu-id="8d505-389">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="8d505-390">在指定位置或指定位置之外的格式化字符串中不存在足够的可编辑字符， `pos` 以插入字符串中的所有字符 `input` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-390">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="8d505-391">一个或多个插入字符不是有效的输入字符，因为它们不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-391">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="8d505-392">插入点右侧没有足够的可用位置，因此无法移动现有字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-392">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="8d505-393">移位现有字符将产生掩码冲突。</span><span class="sxs-lookup"><span data-stu-id="8d505-393">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="8d505-394">请注意，在插入每个单独的字符时，会发生此变化。</span><span class="sxs-lookup"><span data-stu-id="8d505-394">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="8d505-395">如果为空 `input` 字符串，则不会在带格式的字符串中进行更改，但会返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-395">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d505-396"><paramref name="input" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-396">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InvalidIndex">
      <MemberSignature Language="C#" Value="public static int InvalidIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 InvalidIndex" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int InvalidIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InvalidIndex : int" Usage="System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-397">获取无效索引范围的上限。</span><span class="sxs-lookup"><span data-stu-id="8d505-397">Gets the upper bound of the range of invalid indexes.</span></span></summary>
        <value><span data-ttu-id="8d505-398">一个表示最大无效索引的值，由提供程序实现确定。</span><span class="sxs-lookup"><span data-stu-id="8d505-398">A value representing the largest invalid index, as determined by the provider implementation.</span></span> <span data-ttu-id="8d505-399">例如，如果最小的有效索引为 0，则此属性将返回 -1。</span><span class="sxs-lookup"><span data-stu-id="8d505-399">For example, if the lowest valid index is 0, this property will return -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-400"><xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A>属性用于表示对索引操作（如方法）无效的结果 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-400">The <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> property is used to represent a result that is not valid for indexing operations, such as the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> method.</span></span>  
  
 <span data-ttu-id="8d505-401">当你使用该提供程序或实现自己的时，应使用此属性来确定索引是否无效，而不是对无效值进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="8d505-401">When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailablePosition">
      <MemberSignature Language="C#" Value="public bool IsAvailablePosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAvailablePosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAvailablePosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAvailablePosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsAvailablePosition : int -&gt; bool" Usage="maskedTextProvider.IsAvailablePosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="8d505-402">掩码中要测试的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-402">The zero-based position in the mask to test.</span></span></param>
        <summary><span data-ttu-id="8d505-403">确定指定位置是否可赋值。</span><span class="sxs-lookup"><span data-stu-id="8d505-403">Determines whether the specified position is available for assignment.</span></span></summary>
        <returns><span data-ttu-id="8d505-404">如果带格式字符串中的指定位置为可编辑并且尚未赋值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-404"><see langword="true" /> if the specified position in the formatted string is editable and has not been assigned to yet; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-405"><xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> `true` 仅当满足以下所有条件时，该方法才会返回：</span><span class="sxs-lookup"><span data-stu-id="8d505-405">The <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> method returns `true` only if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="8d505-406">`pos`参数在带格式字符串的边界内; 即，其值大于或等于零且小于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 格式化字符串的。</span><span class="sxs-lookup"><span data-stu-id="8d505-406">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="8d505-407">指定的位置为可编辑字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-407">The specified position is an editable character.</span></span>  
  
-   <span data-ttu-id="8d505-408">尚未将字符分配到此位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-408">A character has not already been assigned to this position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsEditPosition">
      <MemberSignature Language="C#" Value="public bool IsEditPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEditPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEditPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEditPosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsEditPosition : int -&gt; bool" Usage="maskedTextProvider.IsEditPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="8d505-409">掩码中要测试的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-409">The zero-based position in the mask to test.</span></span></param>
        <summary><span data-ttu-id="8d505-410">确定指定的位置是否为可编辑。</span><span class="sxs-lookup"><span data-stu-id="8d505-410">Determines whether the specified position is editable.</span></span></summary>
        <returns><span data-ttu-id="8d505-411">如果带格式字符串中的指定位置为可编辑，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-411"><see langword="true" /> if the specified position in the formatted string is editable; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-412"><xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> `true` 仅当以下两个条件都为 true 时，该方法才会返回：</span><span class="sxs-lookup"><span data-stu-id="8d505-412">The <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> method returns `true` only if both of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="8d505-413">`pos`参数在带格式字符串的边界内; 即，其值大于或等于零且小于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 格式化字符串的。</span><span class="sxs-lookup"><span data-stu-id="8d505-413">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="8d505-414">指定的位置为可编辑字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-414">The specified position is an editable character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPassword : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-415">获取或设置一个值，该值确定是否应将密码保护应用于带格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-415">Gets or sets a value that determines whether password protection should be applied to the formatted string.</span></span></summary>
        <value><span data-ttu-id="8d505-416">如果要将输入字符串作为密码字符串进行处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-416"><see langword="true" /> if the input string is to be treated as a password string; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8d505-417">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-417">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-418">可以使用以下两种方式之一来启动密码保护：</span><span class="sxs-lookup"><span data-stu-id="8d505-418">Password protection can be initiated using one of the following two ways:</span></span>  
  
-   <span data-ttu-id="8d505-419">将 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 属性设置为非 `null` 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-419">Setting the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to a non-`null` value.</span></span>  
  
-   <span data-ttu-id="8d505-420">将 <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> 属性设置为 `true` ，它还将 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 属性设置为 <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-420">Setting the <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> property to `true`, which also sets the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to the <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> value.</span></span>  
  
 <span data-ttu-id="8d505-421"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> 由 <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 和方法使用， <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 以确定是要显示实际输入字符还是用来掩盖它们 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-421"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to determine whether to reveal the actual input characters or obscure them with <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IsValidInputChar">
      <MemberSignature Language="C#" Value="public static bool IsValidInputChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidInputChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidInputChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidInputChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidInputChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidInputChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="8d505-422">要测试的 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-422">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="8d505-423">确定指定的字符是否为有效的输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-423">Determines whether the specified character is a valid input character.</span></span></summary>
        <returns><span data-ttu-id="8d505-424">如果指定的字符包含有效的输入值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-424"><see langword="true" /> if the specified character contains a valid input value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-425">有效的输入字符包括所有可打印字符，其中包括字母、数字、标点符号、符号和空格字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-425">Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskChar">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidMaskChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidMaskChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidMaskChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidMaskChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="8d505-426">要测试的 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-426">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="8d505-427">确定指定的字符是否为有效的掩码字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-427">Determines whether the specified character is a valid mask character.</span></span></summary>
        <returns><span data-ttu-id="8d505-428">如果指定的字符包含有效的掩码值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-428"><see langword="true" /> if the specified character contains a valid mask value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-429">有效的掩码字符包括所有可打印字符，其中包括字母、数字、标点符号、符号和空格字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-429">Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="IsValidPasswordChar">
      <MemberSignature Language="C#" Value="public static bool IsValidPasswordChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidPasswordChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidPasswordChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidPasswordChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidPasswordChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidPasswordChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="8d505-430">要测试的 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-430">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <summary><span data-ttu-id="8d505-431">确定指定的字符是否为有效的密码字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-431">Determines whether the specified character is a valid password character.</span></span></summary>
        <returns><span data-ttu-id="8d505-432">如果指定的字符包含有效的密码值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-432"><see langword="true" /> if the specified character contains a valid password value; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-433">有效的密码字符包括所有可打印的字符，以及用于禁用密码功能的 null 字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-433">Valid password characters include all printable characters and the null character, which is used to disable password functionality.</span></span> <span data-ttu-id="8d505-434">可打印字符包括字母、数字、标点、符号和空格字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-434">Printable characters include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="System.ComponentModel.MaskedTextProvider.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8d505-435">要检索的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d505-435">A zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="8d505-436">获取带格式字符串中位于指定位置的元素。</span><span class="sxs-lookup"><span data-stu-id="8d505-436">Gets the element at the specified position in the formatted string.</span></span></summary>
        <value><span data-ttu-id="8d505-437">带格式字符串中位于指定位置的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-437">The <see cref="T:System.Char" /> at the specified position in the formatted string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-438"><xref:System.ComponentModel.MaskedTextProvider.Item%2A>属性是类的标准索引器 <xref:System.ComponentModel.MaskedTextProvider> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-438">The <xref:System.ComponentModel.MaskedTextProvider.Item%2A> property is the standard indexer for the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="8d505-439"><paramref name="index" /> 小于零或大于等于掩码的 <see cref="P:System.ComponentModel.MaskedTextProvider.Length" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-439"><paramref name="index" /> is less than zero or greater than or equal to the <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> of the mask.</span></span></exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      </Docs>
    </Member>
    <Member MemberName="LastAssignedPosition">
      <MemberSignature Language="C#" Value="public int LastAssignedPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastAssignedPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastAssignedPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastAssignedPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastAssignedPosition : int" Usage="System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-440">获取已赋给掩码的最靠右的输入字符在掩码中的索引。</span><span class="sxs-lookup"><span data-stu-id="8d505-440">Gets the index in the mask of the rightmost input character that has been assigned to the mask.</span></span></summary>
        <value><span data-ttu-id="8d505-441">如果已为掩码至少赋予了一个输入字符，则为包含最靠右的已赋值位置的索引的 <see cref="T:System.Int32" />；如果没有已赋值的位置，则为 <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-441">If at least one input character has been assigned to the mask, an <see cref="T:System.Int32" /> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-442"><xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>属性表示掩码中相对于原点的最远编辑位置，已分配了输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-442">The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character.</span></span> <span data-ttu-id="8d505-443">对于语言，从左到右 (LTR) （如英语），这是最适合的位置;对于语言从右到左 (RTL) ，这将是最左端的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-443">For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.ComponentModel.MaskedTextProvider.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-444">获取掩码的长度，不包括任何掩码修饰符字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-444">Gets the length of the mask, absent any mask modifier characters.</span></span></summary>
        <value><span data-ttu-id="8d505-445">一个包含掩码中位置数（不包括修改掩码输入的字符）的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-445">An <see cref="T:System.Int32" /> containing the number of positions in the mask, excluding characters that modify mask input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-446"><xref:System.ComponentModel.MaskedTextProvider.Length%2A>属性表示掩码中字符的总数，包括文本和可编辑字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-446">The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters.</span></span> <span data-ttu-id="8d505-447">可通过从中减去的值来确定原义字符数 <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-447">The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.</span></span>  
  
 <span data-ttu-id="8d505-448"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> 还介绍了带格式的字符串的长度，其中包括输入字符、文本和提示字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-448"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> also describes the length of the formatted string, including input characters, literals, and prompt characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mask As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Mask { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mask : string" Usage="System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-449">获取输入掩码。</span><span class="sxs-lookup"><span data-stu-id="8d505-449">Gets the input mask.</span></span></summary>
        <value><span data-ttu-id="8d505-450">一个包含完整掩码的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-450">A <see cref="T:System.String" /> containing the full mask.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-451">在 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 构造函数中设置属性 <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-451">The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="8d505-452">此掩码必须只包含掩码语言所定义的有效字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-452">This mask must contain only valid characters as defined by the masking language.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskCompleted : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-453">获取一个值，该值指示是否所有必需的输入均已输入到带格式的字符串中。</span><span class="sxs-lookup"><span data-stu-id="8d505-453">Gets a value indicating whether all required inputs have been entered into the formatted string.</span></span></summary>
        <value><span data-ttu-id="8d505-454">如果所有的必需输入均已输入到掩码中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-454"><see langword="true" /> if all required input has been entered into the mask; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-455"><xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>属性仅检查必需的输入元素。</span><span class="sxs-lookup"><span data-stu-id="8d505-455">The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements.</span></span> <span data-ttu-id="8d505-456">若要确定是否已输入所有必需和可选的输入元素，请改用 <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> 类的属性 <xref:System.Windows.Forms.MaskedTextBox> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-456">To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead.</span></span>  
  
 <span data-ttu-id="8d505-457">属性的当前值 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 确定哪些格式设置元素被视为必需，哪些格式设置元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="8d505-457">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskFull : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-458">获取一个值，该值指示是否所有必需和可选的输入均已输入到带格式的字符串中。</span><span class="sxs-lookup"><span data-stu-id="8d505-458">Gets a value indicating whether all required and optional inputs have been entered into the formatted string.</span></span></summary>
        <value><span data-ttu-id="8d505-459">如果所有的必需和可选输入均已输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-459"><see langword="true" /> if all required and optional inputs have been entered; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-460">若要验证是否只输入了必需的输入元素，请改用 <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="8d505-460">To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead.</span></span> <span data-ttu-id="8d505-461">属性的当前值 <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 确定哪些格式设置元素被视为必需，哪些格式设置元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="8d505-461">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-462">获取或设置要替代实际输入字符的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-462">Gets or sets the character to be substituted for the actual input characters.</span></span></summary>
        <value><span data-ttu-id="8d505-463">用作密码字符的 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-463">The <see cref="T:System.Char" /> value used as the password character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-464">对于敏感用户输入，通常情况下，隐藏用户在输出操作期间输入的实际信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-464">For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations.</span></span> <span data-ttu-id="8d505-465">如果将 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 属性设置为非 `null` 字符，则输出方法（如和） <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 将使用指定的密码字符来掩盖输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-465">If the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a non-`null` character, output methods such as <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> will obscure the input characters with the specified password character.</span></span> <span data-ttu-id="8d505-466">如果将此属性设置为， `null` 则将禁用密码保护功能。</span><span class="sxs-lookup"><span data-stu-id="8d505-466">Setting this property to `null` will disable password protection functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d505-467">设置此属性时指定的密码字符与当前提示字符 <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="8d505-467">The password character specified when setting this property is the same as the current prompt character, <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />.</span></span> <span data-ttu-id="8d505-468">这两者之间必须存在差异。</span><span class="sxs-lookup"><span data-stu-id="8d505-468">The two are required to be different.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d505-469">根据 <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> 方法判定，设置此属性时指定的字符不是有效的密码字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-469">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PromptChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PromptChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-470">为所有可用的编辑位置获取或设置用于表示缺少用户输入的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-470">Gets or sets the character used to represent the absence of user input for all available edit positions.</span></span></summary>
        <value><span data-ttu-id="8d505-471">用于提示用户进行输入的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-471">The character used to prompt the user for input.</span></span> <span data-ttu-id="8d505-472">默认为下划线 (_)。</span><span class="sxs-lookup"><span data-stu-id="8d505-472">The default is an underscore (_).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-473"><xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>属性表示由和方法使用的提示字符， <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 以表示带格式的输入字符串的当前状态。</span><span class="sxs-lookup"><span data-stu-id="8d505-473">The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string.</span></span> <span data-ttu-id="8d505-474">Prompt 字符位于尚未被赋予输入值的可编辑位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-474">A prompt character is placed in editable positions that have not yet been assigned an input value.</span></span> <span data-ttu-id="8d505-475">此方法的某些版本 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 还取决于属性的值 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-475">Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d505-476">设置此属性时指定的提示字符与当前密码字符 <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="8d505-476">The prompt character specified when setting this property is the same as the current password character, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</span></span> <span data-ttu-id="8d505-477">这两者之间必须存在差异。</span><span class="sxs-lookup"><span data-stu-id="8d505-477">The two are required to be different.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d505-478">根据 <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> 方法判定，设置此属性时指定的字符不是有效的密码字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-478">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d505-479">从带格式的字符串中移除最后一个赋值的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-479">Removes the last assigned character from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; bool" Usage="maskedTextProvider.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d505-480">从带格式的字符串中移除最后一个赋值的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-480">Removes the last assigned character from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="8d505-481">如果该字符已成功移除，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-481"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-482"><xref:System.ComponentModel.MaskedTextProvider.Remove%2A>如果还没有为掩码分配任何字符，则该方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="8d505-482">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="8d505-483">从带格式的字符串中移除最后一个赋值的字符时，将重置该位置的可编辑掩码字符，以允许后续输入。</span><span class="sxs-lookup"><span data-stu-id="8d505-483">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove([out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove([Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Remove : int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Remove (testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="testPosition"><span data-ttu-id="8d505-484">带格式字符串中实际移除字符的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-484">The zero-based position in the formatted string where the character was actually removed.</span></span> <span data-ttu-id="8d505-485">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-485">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-486">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-486">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="8d505-487">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-487">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-488">从带格式字符串中移除最后一个赋值的字符，然后输出移除位置和描述性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-488">Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="8d505-489">如果该字符已成功移除，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-489"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-490"><xref:System.ComponentModel.MaskedTextProvider.Remove%2A>如果还没有为掩码分配任何字符，则该方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="8d505-490">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="8d505-491">从带格式的字符串中移除最后一个赋值的字符时，将重置该位置的可编辑掩码字符，以允许后续输入。</span><span class="sxs-lookup"><span data-stu-id="8d505-491">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d505-492">从带格式的字符串中移除一个或多个赋值的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-492">Removes one or more assigned characters from the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int position);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; bool" Usage="maskedTextProvider.RemoveAt position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="8d505-493">要移除的赋值字符的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-493">The zero-based position of the assigned character to remove.</span></span></param>
        <summary><span data-ttu-id="8d505-494">从带格式的字符串中移除位于指定位置的赋值字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-494">Removes the assigned character at the specified position from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="8d505-495">如果该字符已成功移除，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-495"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-496"><xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>如果在指定的删除位置没有指定的字符，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="8d505-496">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified.</span></span> <span data-ttu-id="8d505-497">文本字符不受此方法的影响。</span><span class="sxs-lookup"><span data-stu-id="8d505-497">Literal characters are not affected by this method.</span></span>  
  
 <span data-ttu-id="8d505-498">删除字符后，掩码中的其余较高位置字符将向左移动，以填充通过删除创建的间隔。</span><span class="sxs-lookup"><span data-stu-id="8d505-498">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="8d505-499">对于输入，将重置空出的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-499">Vacated positions are reset for input.</span></span> <span data-ttu-id="8d505-500">如果掩码定义禁止移动字符，则不会发生移除，并 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-500">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="8d505-501">此方法调用完全等效于对重载版本的以下调用 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> ：</span><span class="sxs-lookup"><span data-stu-id="8d505-501">This method call is exactly equivalent to the following call to the overloaded <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> version:</span></span>  
  
 `RemoveAt(pos, pos);`  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="8d505-502">要移除的第一个赋值的字符的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d505-502">The zero-based index of the first assigned character to remove.</span></span></param>
        <param name="endPosition"><span data-ttu-id="8d505-503">要移除的最后一个赋值的字符的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d505-503">The zero-based index of the last assigned character to remove.</span></span></param>
        <summary><span data-ttu-id="8d505-504">从带格式的字符串中移除指定位置之间的赋值的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-504">Removes the assigned characters between the specified positions from the formatted string.</span></span></summary>
        <returns><span data-ttu-id="8d505-505">如果该字符已成功移除，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-505"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-506"><xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>如果在指定的删除位置没有指定的字符，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="8d505-506">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="8d505-507">删除字符后，掩码中的其余较高位置字符将向左移动，以填充通过删除创建的间隔。</span><span class="sxs-lookup"><span data-stu-id="8d505-507">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="8d505-508">对于输入，将重置空出的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-508">Vacated positions are reset for input.</span></span> <span data-ttu-id="8d505-509">如果掩码定义禁止移动字符，则不会发生移除，并 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-509">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="8d505-510">要移除的第一个赋值的字符的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d505-510">The zero-based index of the first assigned character to remove.</span></span></param>
        <param name="endPosition"><span data-ttu-id="8d505-511">要移除的最后一个赋值的字符的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d505-511">The zero-based index of the last assigned character to remove.</span></span></param>
        <param name="testPosition"><span data-ttu-id="8d505-512">如果成功，则为带格式的字符串中实际移除字符的位置（从零开始计）；否则为该操作第一次失败时所处的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-512">If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="8d505-513">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-513">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-514">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-514">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="8d505-515">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-515">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-516">从带格式的字符串中移除指定位置之间的赋值的字符，然后输出移除位置和描述性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-516">Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="8d505-517">如果该字符已成功移除，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-517"><see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-518"><xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>如果在指定的删除位置没有指定的字符，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="8d505-518">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="8d505-519">删除字符后，掩码中的其余较高位置字符将向左移动，以填充通过删除创建的间隔。</span><span class="sxs-lookup"><span data-stu-id="8d505-519">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="8d505-520">对于输入，将重置空出的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-520">Vacated positions are reset for input.</span></span> <span data-ttu-id="8d505-521">如果掩码定义禁止移动字符，则不会发生移除，并 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-521">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="8d505-522">此版本的 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> 提供了两个附加的输出参数，用于传递有关方法操作的详细信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-522">This version of <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d505-523">用指定的字符替换带格式字符串中的一个或多个可编辑字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-523">Replaces one or more editable characters in the formatted string with the specified characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-524">用于替换现有值的 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-524">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="position"><span data-ttu-id="8d505-525">用于搜索将要替换的第一个可编辑字符的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-525">The zero-based position to search for the first editable character to replace.</span></span></param>
        <summary><span data-ttu-id="8d505-526">用指定的字符值替换指定位置或指定位置后面的单个字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-526">Replaces a single character at or beyond the specified position with the specified character value.</span></span></summary>
        <returns><span data-ttu-id="8d505-527">如果已成功替换该字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-527"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-528"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29>方法在格式字符串中的指定位置或指定位置之外搜索第一个可编辑位置 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-528">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="8d505-529">如果找到一个，则可编辑位置的值将更改为指定的字符 `input` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-529">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="8d505-530">以下任何条件都将导致错误，导致不执行任何替换，并返回的值 `false` ：</span><span class="sxs-lookup"><span data-stu-id="8d505-530">Any of the following conditions will result in an error that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="8d505-531">`pos`参数小于零或大于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的。</span><span class="sxs-lookup"><span data-stu-id="8d505-531">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="8d505-532">在指定位置或指定位置之外的格式化字符串中找不到可编辑字符 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-532">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="8d505-533">替换字符不是 `input` 有效的输入字符，因为它不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-533">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-534">用于替换现有可编辑字符的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-534">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="position"><span data-ttu-id="8d505-535">用于搜索将要替换的第一个可编辑字符的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-535">The zero-based position to search for the first editable character to replace.</span></span></param>
        <summary><span data-ttu-id="8d505-536">从指定位置开始使用指定字符串替换一定范围的可编辑字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-536">Replaces a range of editable characters starting at the specified position with the specified string.</span></span></summary>
        <returns><span data-ttu-id="8d505-537">如果所有的字符已成功替换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-537"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-538"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29>方法搜索指定位置或指定位置之外的第一个可编辑位置 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-538">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="8d505-539">如果在此点之后有足够的可编辑位置进行操作，则会将现有字符值逐个替换为替换字符串参数的内容 `input` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-539">Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="8d505-540">以下情况被视为错误。</span><span class="sxs-lookup"><span data-stu-id="8d505-540">The following conditions are considered errors.</span></span> <span data-ttu-id="8d505-541">出现错误时，不会发生任何替换并 <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-541">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="8d505-542">`pos`参数小于零或大于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的。</span><span class="sxs-lookup"><span data-stu-id="8d505-542">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="8d505-543">带格式字符串中的可编辑位置不足，无法保存替换字符串的内容。</span><span class="sxs-lookup"><span data-stu-id="8d505-543">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="8d505-544">其中一个替换字符值无效，因为它不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-544">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d505-545"><paramref name="input" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-545">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-546">用于替换现有值的 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-546">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="position"><span data-ttu-id="8d505-547">用于搜索将要替换的第一个可编辑字符的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-547">The zero-based position to search for the first editable character to replace.</span></span></param>
        <param name="testPosition"><span data-ttu-id="8d505-548">如果成功，则为带格式字符串中实际替换最后一个字符的位置（从零开始计）；否则为该操作第一次失败时所处的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-548">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="8d505-549">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-549">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-550">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述替换操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-550">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="8d505-551">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-551">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-552">用指定的字符值替换指定位置或指定位置后面的单个字符，然后输出移除位置和描述性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-552">Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="8d505-553">如果已成功替换该字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-553"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-554"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29>方法在格式字符串中的指定位置或指定位置之外搜索第一个可编辑位置 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-554">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="8d505-555">如果找到一个，则可编辑位置的值将更改为指定的字符 `input` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-555">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="8d505-556">以下任何条件都将导致错误条件，导致不执行替换，并返回的值 `false` ：</span><span class="sxs-lookup"><span data-stu-id="8d505-556">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="8d505-557">`pos`参数小于零或大于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的。</span><span class="sxs-lookup"><span data-stu-id="8d505-557">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="8d505-558">在指定位置或指定位置之外的格式化字符串中找不到可编辑字符 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-558">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="8d505-559">替换字符不是 `input` 有效的输入字符，因为它不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-559">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="8d505-560">除了返回值，此方法还提供两个输出参数以提供有关替换操作的其他信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-560">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-561">用于替换现有可编辑字符的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-561">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="position"><span data-ttu-id="8d505-562">用于搜索将要替换的第一个可编辑字符的位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-562">The zero-based position to search for the first editable character to replace.</span></span></param>
        <param name="testPosition"><span data-ttu-id="8d505-563">如果成功，则为带格式字符串中实际替换最后一个字符的位置（从零开始计）；否则为该操作第一次失败时所处的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-563">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="8d505-564">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-564">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-565">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述替换操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-565">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="8d505-566">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-566">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-567">从指定位置开始使用指定字符串替换一定范围的可编辑字符，然后输出移除位置和描述性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-567">Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="8d505-568">如果所有的字符已成功替换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-568"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-569"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29>方法搜索指定位置或指定位置之外的第一个可编辑位置 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-569">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="8d505-570">假设在此点之后有足够的可编辑位置，现有字符值将逐个替换为替换字符串参数的内容 `input` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-570">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="8d505-571">以下情况被视为错误。</span><span class="sxs-lookup"><span data-stu-id="8d505-571">The following conditions are considered errors.</span></span> <span data-ttu-id="8d505-572">出现错误时，不会发生任何替换并 <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-572">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="8d505-573">`pos`参数小于零或大于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的。</span><span class="sxs-lookup"><span data-stu-id="8d505-573">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="8d505-574">带格式字符串中的可编辑位置不足，无法保存替换字符串的内容。</span><span class="sxs-lookup"><span data-stu-id="8d505-574">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="8d505-575">其中一个替换字符值无效，因为它不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-575">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="8d505-576">除了返回值，此方法还提供两个输出参数以提供有关替换操作的其他信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-576">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-577">用于替换现有值的 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-577">The <see cref="T:System.Char" /> value that replaces the existing value.</span></span></param>
        <param name="startPosition"><span data-ttu-id="8d505-578">带格式的字符串中的替换起始位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-578">The zero-based position in the formatted string where the replacement starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="8d505-579">带格式的字符串中的替换结束位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-579">The zero-based position in the formatted string where the replacement ends.</span></span></param>
        <param name="testPosition"><span data-ttu-id="8d505-580">如果成功，则为带格式字符串中实际替换最后一个字符的位置（从零开始计）；否则为该操作第一次失败时所处的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-580">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="8d505-581">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-581">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-582">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述替换操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-582">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="8d505-583">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-583">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-584">在指定的开始和结束位置之间使用指定的字符值替换单个字符，然后输出移除位置和描述性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-584">Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="8d505-585">如果已成功替换该字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-585"><see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-586"><xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29>方法在指定的起始位置和结束位置之间搜索带格式字符串中的第一个可编辑位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-586">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="8d505-587">如果找到一个，则可编辑位置的值将更改为指定的字符 `input` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-587">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="8d505-588">以下任何条件都将导致错误条件，导致不执行替换，并返回的值 `false` ：</span><span class="sxs-lookup"><span data-stu-id="8d505-588">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="8d505-589">`startPos`或 `endPos` 参数指向带格式字符串的开头或超出其结尾的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-589">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="8d505-590">在指定的时间间隔内找不到可编辑字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-590">An editable character was not found in the specified interval.</span></span>  
  
-   <span data-ttu-id="8d505-591">替换字符不是 `input` 有效的输入字符，因为它不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-591">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="8d505-592">除了返回值，此方法还提供两个输出参数以提供有关替换操作的其他信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-592">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int * int * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-593">用于替换现有可编辑字符的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-593">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span></span></param>
        <param name="startPosition"><span data-ttu-id="8d505-594">带格式的字符串中的替换起始位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-594">The zero-based position in the formatted string where the replacement starts.</span></span></param>
        <param name="endPosition"><span data-ttu-id="8d505-595">带格式的字符串中的替换结束位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-595">The zero-based position in the formatted string where the replacement ends.</span></span></param>
        <param name="testPosition"><span data-ttu-id="8d505-596">如果成功，则为带格式字符串中实际替换最后一个字符的位置（从零开始计）；否则为该操作第一次失败时所处的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-596">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="8d505-597">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-597">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-598">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述替换操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-598">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span></span> <span data-ttu-id="8d505-599">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-599">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-600">在指定的开始位置和结束位置之间的范围内使用指定的字符串替换可编辑字符，然后输出移除位置和描述性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-600">Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="8d505-601">如果所有的字符已成功替换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-601"><see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-602"><xref:System.ComponentModel.MaskedTextProvider.Replace%2A>方法在指定的起始位置和结束位置之间搜索带格式字符串中的第一个可编辑位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-602">The <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="8d505-603">假设在此点之后有足够的可编辑位置，现有字符值将逐个替换为替换字符串参数的内容 `input` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-603">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="8d505-604">以下情况被视为错误。</span><span class="sxs-lookup"><span data-stu-id="8d505-604">The following conditions are considered errors.</span></span> <span data-ttu-id="8d505-605">出现错误时，不会发生任何替换并 <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-605">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="8d505-606">`startPos`或 `endPos` 参数指向带格式字符串的开头或超出其结尾的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-606">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="8d505-607">带格式字符串中的可编辑位置不足，无法保存替换字符串的内容。</span><span class="sxs-lookup"><span data-stu-id="8d505-607">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="8d505-608">其中一个替换字符值无效，因为它不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-608">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="8d505-609">除了返回值，此方法还提供两个输出参数以提供有关替换操作的其他信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-609">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnPrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnPrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnPrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-610">获取或设置一个值，该值确定应如何处理与提示字符匹配的输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-610">Gets or sets a value that determines how an input character that matches the prompt character should be handled.</span></span></summary>
        <value><span data-ttu-id="8d505-611">如果输入的提示字符会导致掩码中的当前可编辑位置被重置，则为 <see langword="true" />；否则为 <see langword="false" />，以指示要将提示字符作为正常输入字符进行处理。</span><span class="sxs-lookup"><span data-stu-id="8d505-611"><see langword="true" /> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that the prompt character is to be processed as a normal input character.</span></span> <span data-ttu-id="8d505-612">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-612">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-613"><xref:System.ComponentModel.MaskedTextProvider> 可以通过一种特殊方式处理两个类别的字符：节奏和提示字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-613"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, paces and prompt characters, in a special manner.</span></span> <span data-ttu-id="8d505-614">通常，每个输入字符都将针对掩码进行测试，并接受或拒绝。</span><span class="sxs-lookup"><span data-stu-id="8d505-614">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="8d505-615">如果将 <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> 属性设置为以外的值 `null` ，则将 <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> 属性设置为 `true` 将导致提示字符进行特殊处理。</span><span class="sxs-lookup"><span data-stu-id="8d505-615">Operating on the assumption that the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property is set to a value other than `null`, then setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character.</span></span> <span data-ttu-id="8d505-616">添加提示字符后，会使当前掩码字符位置被清除，当前位置前进到下一个可编辑字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-616">When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="8d505-617"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> 优先于 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 下表中所述的属性。</span><span class="sxs-lookup"><span data-stu-id="8d505-617"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> takes precedence over the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property as described in the following table.</span></span>  
  
|<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>|<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|<span data-ttu-id="8d505-618">产生的行为</span><span class="sxs-lookup"><span data-stu-id="8d505-618">Resulting behavior</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  
|`true`|`true`|<span data-ttu-id="8d505-619">可以添加提示字符，这会导致重置当前掩码位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-619">The prompt character can be added and it causes the current mask position to be reset.</span></span> <span data-ttu-id="8d505-620">默认值。</span><span class="sxs-lookup"><span data-stu-id="8d505-620">The default.</span></span>|  
|`true`|`false`|<span data-ttu-id="8d505-621">可以添加提示字符，这会导致重置当前掩码位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-621">The prompt character can be added and it causes the current mask position to be reset.</span></span>|  
|`false`|`true`|<span data-ttu-id="8d505-622">将提示字符作为正常输入字符进行处理。</span><span class="sxs-lookup"><span data-stu-id="8d505-622">The prompt character is processed as a normal input character.</span></span>|  
|`false`|`false`|<span data-ttu-id="8d505-623">Prompt 字符无效，尝试添加字符的方法将失败。</span><span class="sxs-lookup"><span data-stu-id="8d505-623">The prompt character is not valid and methods attempting to add the character will fail.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnSpace : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-624">获取或设置一个值，该值确定应如何处理空白输入字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-624">Gets or sets a value that determines how a space input character should be handled.</span></span></summary>
        <value><span data-ttu-id="8d505-625">如果空白输入字符将导致重置掩码中的当前可编辑位置，则为 <see langword="true" />；否则为 <see langword="false" />，以指示要将其作为正常输入字符进行处理。</span><span class="sxs-lookup"><span data-stu-id="8d505-625"><see langword="true" /> if the space input character causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that it is to be processed as a normal input character.</span></span> <span data-ttu-id="8d505-626">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-626">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-627"><xref:System.ComponentModel.MaskedTextProvider> 可以用一种特殊方式处理两类字符、空格和提示字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-627"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, spaces and prompt characters, in a special manner.</span></span> <span data-ttu-id="8d505-628">通常，每个输入字符都将针对掩码进行测试，并接受或拒绝。</span><span class="sxs-lookup"><span data-stu-id="8d505-628">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="8d505-629"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>将属性设置为 `true` 将导致清除当前掩码字符位置，并使当前位置前进到下一个可编辑字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-629">Setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property to `true` will result in the current mask character position being cleared and the current position being advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="8d505-630"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> 当分配的文本在不包括提示的情况下保存时，会将提示替换为空格。</span><span class="sxs-lookup"><span data-stu-id="8d505-630"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space.</span></span> <span data-ttu-id="8d505-631">在还原此类字符串之前，将设置 <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> 为 `true` 将在输入字符串中由空格占用的位置重置提示字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-631">Before restoring such a string, setting <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> to `true` will reset the prompt characters at the positions occupied by spaces in the input string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d505-632">将带格式的字符串设置为指定的输入字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-632">Sets the formatted string to the specified input string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Set : string -&gt; bool" Usage="maskedTextProvider.Set input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-633">用于设置带格式字符串的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-633">The <see cref="T:System.String" /> value used to set the formatted string.</span></span></param>
        <summary><span data-ttu-id="8d505-634">将带格式的字符串设置为指定的输入字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-634">Sets the formatted string to the specified input string.</span></span></summary>
        <returns><span data-ttu-id="8d505-635">如果所有的字符已成功设置，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-635"><see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-636"><xref:System.ComponentModel.MaskedTextProvider.Set%2A>方法清除带格式字符串的现有内容，然后对字符串应用掩码 `input` 以更新带格式字符串的内容。</span><span class="sxs-lookup"><span data-stu-id="8d505-636">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="8d505-637">以下情况被视为错误。</span><span class="sxs-lookup"><span data-stu-id="8d505-637">The following conditions are considered errors.</span></span> <span data-ttu-id="8d505-638">出现错误时，带格式的字符串将保持不变并 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-638">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="8d505-639">带格式字符串中的可编辑位置不足，无法保存替换字符串的内容。</span><span class="sxs-lookup"><span data-stu-id="8d505-639">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="8d505-640">其中一个替换字符值无效，因为它不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-640">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d505-641"><paramref name="input" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-641">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Set : string * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.Set (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-642">用于设置带格式字符串的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-642">The <see cref="T:System.String" /> value used to set the formatted string.</span></span></param>
        <param name="testPosition"><span data-ttu-id="8d505-643">如果成功，则为带格式字符串中实际设置最后一个字符的位置（从零开始计）；否则为该操作第一次失败时所处的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-643">If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed.</span></span> <span data-ttu-id="8d505-644">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-644">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-645">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述设置操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-645">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the set operation.</span></span> <span data-ttu-id="8d505-646">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-646">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-647">将带格式的字符串设置为指定的输入字符串，然后输出移除位置和描述性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-647">Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="8d505-648">如果所有的字符已成功设置，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-648"><see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-649"><xref:System.ComponentModel.MaskedTextProvider.Set%2A>方法清除带格式字符串的现有内容，然后对字符串应用掩码 `input` 以更新带格式字符串的内容。</span><span class="sxs-lookup"><span data-stu-id="8d505-649">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="8d505-650">以下情况被视为错误。</span><span class="sxs-lookup"><span data-stu-id="8d505-650">The following conditions are considered errors.</span></span> <span data-ttu-id="8d505-651">出现错误时，带格式的字符串将保持不变并 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-651">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="8d505-652">带格式字符串中的可编辑位置不足，无法保存替换字符串的内容。</span><span class="sxs-lookup"><span data-stu-id="8d505-652">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="8d505-653">其中一个替换字符值无效，因为它不可打印或与其相应的掩码元素不匹配。</span><span class="sxs-lookup"><span data-stu-id="8d505-653">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="8d505-654">此版本的 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 提供了两个附加的输出参数，用于传递有关方法操作的详细信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-654">This version of <xref:System.ComponentModel.MaskedTextProvider.Set%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d505-655"><paramref name="input" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-655">The <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d505-656">获取或设置一个值，该值指示掩码中的原义字符位置是否可由其相同的值覆盖。</span><span class="sxs-lookup"><span data-stu-id="8d505-656">Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.</span></span></summary>
        <value><span data-ttu-id="8d505-657">如果允许往回添加原义字符，则为 <see langword="true" />；如果不允许用户覆盖原义字符，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-657"><see langword="true" /> to allow literals to be added back; otherwise, <see langword="false" /> to not allow the user to overwrite literal characters.</span></span> <span data-ttu-id="8d505-658">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-658">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-659">输入掩码可以包含文本和可编辑字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-659">Input masks can contain literal and editable characters.</span></span> <span data-ttu-id="8d505-660">如果尝试将输入字符添加到文本中所占用的掩码位置，则属性的值将 <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> 确定结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-660">If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result.</span></span>  
  
-   <span data-ttu-id="8d505-661">如果此属性为 `true` ，则在添加输入字符时用相同的值覆盖文本是有效的。</span><span class="sxs-lookup"><span data-stu-id="8d505-661">If this property is `true`, it is valid to overwrite a literal with the same value when adding input characters.</span></span> <span data-ttu-id="8d505-662">例如，可将正斜杠字符值 `'/'` 添加到掩码的第三个位置 `"00/00/000"` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-662">For example, a forward slash character value, `'/'`, could be added to the third position of the mask `"00/00/000"`.</span></span>  
  
-   <span data-ttu-id="8d505-663">如果此属性为 `false` ，则将任何值分配给文本字符占用的掩码位置是无效的。</span><span class="sxs-lookup"><span data-stu-id="8d505-663">If this property is `false`, it is not valid to assign any value to a mask position occupied by a literal character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="ToDisplayString">
      <MemberSignature Language="C#" Value="public string ToDisplayString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToDisplayString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToDisplayString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToDisplayString();" />
      <MemberSignature Language="F#" Value="member this.ToDisplayString : unit -&gt; string" Usage="maskedTextProvider.ToDisplayString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d505-664">以可显示的形式返回带格式字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-664">Returns the formatted string in a displayable form.</span></span></summary>
        <returns><span data-ttu-id="8d505-665">带格式的 <see cref="T:System.String" />，包含提示和掩码原义字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-665">The formatted <see cref="T:System.String" /> that includes prompts and mask literals.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-666"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>方法将始终在返回值中包含提示和文本字符，而不考虑或属性的值 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-666">The <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> method will always include prompt and literal characters in the return value, regardless of the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> or <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="8d505-667">如果将 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 属性设置为以外的字符值，则此方法将始终显示密码字符 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-667">This method will always display password characters if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a character value other than `null`.</span></span>  
  
 <span data-ttu-id="8d505-668"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> 通常用于获取要显示在关联的用户界面元素（例如）中的字符串 <xref:System.Windows.Forms.MaskedTextBox> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-668"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> is commonly used to obtain the string to display in associated user interface elements, such as <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d505-669">返回带格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-669">Returns the formatted string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="maskedTextProvider.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d505-670">返回包含所有赋值的字符值的带格式字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-670">Returns the formatted string that includes all the assigned character values.</span></span></summary>
        <returns><span data-ttu-id="8d505-671">带格式的 <see cref="T:System.String" />，其中包含所有赋值的字符值。</span><span class="sxs-lookup"><span data-stu-id="8d505-671">The formatted <see cref="T:System.String" /> that includes all the assigned character values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-672">此版本的重载 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 方法将 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 分别包含和属性的当前值的提示和文本 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-672">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="8d505-673">它将始终返回原始输入字符，同时忽略属性的值 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-673">It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8d505-674">由于此方法会在用户界面中显示通常由密码字符保护的信息，因此，使用该方法时应特别小心，以免意外泄露敏感用户数据。</span><span class="sxs-lookup"><span data-stu-id="8d505-674">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="maskedTextProvider.ToString ignorePasswordChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="8d505-675">如果为 <see langword="true" />，则返回实际的可编辑字符；如果为 <see langword="false" />，则指示将接受 <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="8d505-675"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <summary><span data-ttu-id="8d505-676">返回带格式的字符串，还可以选择包含密码字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-676">Returns the formatted string, optionally including password characters.</span></span></summary>
        <returns><span data-ttu-id="8d505-677">带格式的 <see cref="T:System.String" />，包含原义字符、提示字符，还可以选择包含密码字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-677">The formatted <see cref="T:System.String" /> that includes literals, prompts, and optionally password characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-678">此版本的重载 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 方法将 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 分别包含和属性的当前值的提示和文本 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-678">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="8d505-679">如果 `ignorePasswordChar` 参数为 `true` ，则它将返回原始输入字符，同时忽略属性的值 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-679">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="8d505-680">如果此参数为 `false` ，则在将 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 属性设置为以外的值时，它将使用密码字符来掩盖可编辑的用户输入 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-680">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8d505-681">由于此方法可能会发现通常由密码字符在用户界面中进行保护的信息，因此，使用它时应非常小心，以免意外泄露敏感的用户数据。</span><span class="sxs-lookup"><span data-stu-id="8d505-681">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrompt"><span data-ttu-id="8d505-682">如果在返回字符串中包括提示字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-682"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="8d505-683">如果在返回字符串中包括原义字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-683"><see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8d505-684">返回带格式的字符串，还可以选择包含提示字符和原义字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-684">Returns the formatted string, optionally including prompt and literal characters.</span></span></summary>
        <returns><span data-ttu-id="8d505-685">带格式的 <see cref="T:System.String" />，包含所有赋值的字符值，还可以选择包含原义字符和提示字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-685">The formatted <see cref="T:System.String" /> that includes all the assigned character values and optionally includes literals and prompts.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-686">此版本的重载 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 方法将 `IncludePrompt` 分别包含和参数的值 `IncludeLiterals` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-686">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="8d505-687">请注意，这些参数会重写属性的值 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-687">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="8d505-688">此方法将始终返回原始输入字符，同时忽略属性的值 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-688">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8d505-689">由于此方法会在用户界面中显示通常由密码字符保护的信息，因此，使用该方法时应特别小心，以免意外泄露敏感用户数据。</span><span class="sxs-lookup"><span data-stu-id="8d505-689">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : int * int -&gt; string" Usage="maskedTextProvider.ToString (startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition"><span data-ttu-id="8d505-690">带格式的字符串中的起始输出位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-690">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="8d505-691">要返回的字符数。</span><span class="sxs-lookup"><span data-stu-id="8d505-691">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="8d505-692">返回带格式字符串的子字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-692">Returns a substring of the formatted string.</span></span></summary>
        <returns><span data-ttu-id="8d505-693">如果成功，则返回带格式的 <see cref="T:System.String" /> 的子字符串（包含所有赋值的字符值），否则返回 <see cref="F:System.String.Empty" /> 字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-693">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-694">此版本的重载 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 方法返回带格式字符串的子字符串，从该位置开始， `startPos` 并包括参数指定的后续字符数 `length` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-694">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="8d505-695">返回的字符串将分别包含和属性的当前值的提示和 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 文本 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-695">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="8d505-696">返回字符串将包含原始输入字符; <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 始终忽略该属性。</span><span class="sxs-lookup"><span data-stu-id="8d505-696">The return string will contain the original input characters; the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is always ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8d505-697">由于此方法会在用户界面中显示通常由密码字符保护的信息，因此，使用该方法时应特别小心，以免意外泄露敏感用户数据。</span><span class="sxs-lookup"><span data-stu-id="8d505-697">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="8d505-698"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 在输入参数中存在差异时执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="8d505-698"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="8d505-699">如果 `startPos` 小于零，则起始位置设置为零。</span><span class="sxs-lookup"><span data-stu-id="8d505-699">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="8d505-700">如果 `startPos` 大于或等于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的实际，则 <xref:System.String.Empty> 返回字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-700">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="8d505-701">如果 `length` 大于开头位置之后的剩余字符数，则仅返回剩余的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-701">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="8d505-702">如果 `length` 小于或等于零，则 <xref:System.String.Empty> 返回字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-702">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="8d505-703">如果为 <see langword="true" />，则返回实际的可编辑字符；如果为 <see langword="false" />，则指示将接受 <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="8d505-703"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <param name="startPosition"><span data-ttu-id="8d505-704">带格式的字符串中的起始输出位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-704">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="8d505-705">要返回的字符数。</span><span class="sxs-lookup"><span data-stu-id="8d505-705">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="8d505-706">返回带格式字符串的子字符串，也可以选择包含密码字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-706">Returns a substring of the formatted string, optionally including password characters.</span></span></summary>
        <returns><span data-ttu-id="8d505-707">如果成功，则返回带格式的 <see cref="T:System.String" /> 的子字符串（包含原义字符、提示字符，还可以选择包含密码字符）；否则返回 <see cref="F:System.String.Empty" /> 字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-707">If successful, a substring of the formatted <see cref="T:System.String" />, which includes literals, prompts, and optionally password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-708">此版本的重载 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 方法返回带格式字符串的子字符串，从该位置开始， `startPos` 并包括参数指定的后续字符数 `length` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-708">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="8d505-709">返回的字符串将分别包含和属性的当前值的提示和 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 文本 <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-709">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="8d505-710">如果 `ignorePasswordChar` 参数为 `true` ，则它将返回原始输入字符，同时忽略属性的值 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-710">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="8d505-711">如果此参数为 `false` ，则在将 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 属性设置为以外的值时，它将使用密码字符来掩盖可编辑的用户输入 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-711">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8d505-712">由于此方法可能会发现通常由密码字符在用户界面中进行保护的信息，因此，使用它时应非常小心，以免意外泄露敏感的用户数据。</span><span class="sxs-lookup"><span data-stu-id="8d505-712">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="8d505-713"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 在输入参数中存在差异时执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="8d505-713"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="8d505-714">如果 `startPos` 小于零，则起始位置设置为零。</span><span class="sxs-lookup"><span data-stu-id="8d505-714">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="8d505-715">如果 `startPos` 大于或等于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的实际，则 <xref:System.String.Empty> 返回字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-715">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="8d505-716">如果 `length` 大于开头位置之后的剩余字符数，则仅返回剩余的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-716">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="8d505-717">如果 `length` 小于或等于零，则 <xref:System.String.Empty> 返回字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-717">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="includePrompt"><span data-ttu-id="8d505-718">如果在返回字符串中包括提示字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-718"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="8d505-719">如果在返回字符串中包括原义字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-719"><see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="startPosition"><span data-ttu-id="8d505-720">带格式的字符串中的起始输出位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-720">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="8d505-721">要返回的字符数。</span><span class="sxs-lookup"><span data-stu-id="8d505-721">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="8d505-722">返回带格式字符串的子字符串，也可以选择包含提示字符和原义字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-722">Returns a substring of the formatted string, optionally including prompt and literal characters.</span></span></summary>
        <returns><span data-ttu-id="8d505-723">如果成功，则返回带格式的 <see cref="T:System.String" /> 的子字符串（包含所有赋值的字符值，还可以选择包含原义字符和提示字符）；否则返回 <see cref="F:System.String.Empty" /> 字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-723">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-724">此版本的重载 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 方法返回带格式字符串的子字符串，从该位置开始， `startPos` 并包括参数指定的后续字符数 `length` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-724">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="8d505-725">返回字符串将 `IncludePrompt` 分别包含和参数的值 `IncludeLiterals` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-725">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="8d505-726">请注意，这些参数会重写属性的值 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-726">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="8d505-727">此方法将始终返回原始输入字符，同时忽略属性的值 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-727">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8d505-728">由于此方法会在用户界面中显示通常由密码字符保护的信息，因此，使用该方法时应特别小心，以免意外泄露敏感用户数据。</span><span class="sxs-lookup"><span data-stu-id="8d505-728">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="8d505-729"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 在输入参数中存在差异时执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="8d505-729"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="8d505-730">如果 `startPos` 小于零，则起始位置设置为零。</span><span class="sxs-lookup"><span data-stu-id="8d505-730">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="8d505-731">如果 `startPos` 大于或等于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的实际，则 <xref:System.String.Empty> 返回字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-731">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="8d505-732">如果 `length` 大于开头位置之后的剩余字符数，则仅返回剩余的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-732">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="8d505-733">如果 `length` 小于或等于零，则 <xref:System.String.Empty> 返回字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-733">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar"><span data-ttu-id="8d505-734">如果为 <see langword="true" />，则返回实际的可编辑字符；如果为 <see langword="false" />，则指示将接受 <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="8d505-734"><see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span></span></param>
        <param name="includePrompt"><span data-ttu-id="8d505-735">如果在返回字符串中包括提示字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-735"><see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeLiterals"><span data-ttu-id="8d505-736">如果在返回字符串中包括原义字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-736"><see langword="true" /> to return literal characters in the return string; otherwise, <see langword="false" />.</span></span></param>
        <param name="startPosition"><span data-ttu-id="8d505-737">带格式的字符串中的起始输出位置（从零开始计）。</span><span class="sxs-lookup"><span data-stu-id="8d505-737">The zero-based position in the formatted string where the output begins.</span></span></param>
        <param name="length"><span data-ttu-id="8d505-738">要返回的字符数。</span><span class="sxs-lookup"><span data-stu-id="8d505-738">The number of characters to return.</span></span></param>
        <summary><span data-ttu-id="8d505-739">返回带格式字符串的子字符串，可以选择包含提示字符、原义字符和密码字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-739">Returns a substring of the formatted string, optionally including prompt, literal, and password characters.</span></span></summary>
        <returns><span data-ttu-id="8d505-740">如果成功，则返回带格式的 <see cref="T:System.String" /> 的子字符串（包含所有赋值的字符值，还可以选择包含原义字符、提示字符和密码字符）；否则返回 <see cref="F:System.String.Empty" /> 字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-740">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-741">此版本的重载 <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 方法返回带格式字符串的子字符串，从该位置开始， `startPos` 并包括参数指定的后续字符数 `length` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-741">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="8d505-742">返回字符串将 `IncludePrompt` 分别包含和参数的值 `IncludeLiterals` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-742">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="8d505-743">请注意，这些参数会重写 <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> 和属性的值  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-743">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="8d505-744">如果 `ignorePasswordChar` 参数为 `true` ，则它将返回原始输入字符，同时忽略属性的值 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-744">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="8d505-745">如果此参数为 `false` ，则在将 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> 属性设置为以外的值时，它将使用密码字符来掩盖可编辑的用户输入 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-745">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8d505-746">由于此方法可能会发现通常由密码字符在用户界面中进行保护的信息，因此，使用它时应非常小心，以免意外泄露敏感的用户数据。</span><span class="sxs-lookup"><span data-stu-id="8d505-746">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="8d505-747"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 在输入参数中存在差异时执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="8d505-747"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="8d505-748">如果 `startPos` 小于零，则起始位置设置为零。</span><span class="sxs-lookup"><span data-stu-id="8d505-748">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="8d505-749">如果 `startPos` 大于或等于 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> 带格式字符串的实际，则 <xref:System.String.Empty> 返回字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-749">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="8d505-750">如果 `length` 大于开头位置之后的剩余字符数，则仅返回剩余的字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-750">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="8d505-751">如果 `length` 小于或等于零，则 <xref:System.String.Empty> 返回字符串。</span><span class="sxs-lookup"><span data-stu-id="8d505-751">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="VerifyChar">
      <MemberSignature Language="C#" Value="public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyChar(char input, int32 position, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyChar (input As Char, position As Integer, ByRef hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyChar(char input, int position, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % hint);" />
      <MemberSignature Language="F#" Value="member this.VerifyChar : char * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.VerifyChar (input, position, hint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-752">要测试的 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-752">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <param name="position"><span data-ttu-id="8d505-753">测试输入字符时所根据的掩码位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-753">The position in the mask to test the input character against.</span></span></param>
        <param name="hint"><span data-ttu-id="8d505-754">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-754">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span></span> <span data-ttu-id="8d505-755">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-755">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-756">测试指定的字符是否可以在指定位置成功设置。</span><span class="sxs-lookup"><span data-stu-id="8d505-756">Tests whether the specified character could be set successfully at the specified position.</span></span></summary>
        <returns><span data-ttu-id="8d505-757">如果指定的字符对指定位置有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-757"><see langword="true" /> if the specified character is valid for the specified position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-758"><xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>方法测试单个字符值是否表示格式化字符串中指定位置的有效输入。</span><span class="sxs-lookup"><span data-stu-id="8d505-758">The <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> method tests whether a single character value represents valid input at the specified position in the formatted string.</span></span> <span data-ttu-id="8d505-759">此方法将返回 `false` ，原因如下：</span><span class="sxs-lookup"><span data-stu-id="8d505-759">This method will return `false` for the following reasons:</span></span>  
  
-   <span data-ttu-id="8d505-760">`pos`参数小于零或大于的 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-760">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
-   <span data-ttu-id="8d505-761">字符 `input` 不是有效的输入字符，由 <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> 方法确定。</span><span class="sxs-lookup"><span data-stu-id="8d505-761">The character `input` is not a valid input character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> method.</span></span>  
  
-   <span data-ttu-id="8d505-762">与位于 `input` 指定位置的 mask 元素不兼容 `pos` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-762">The `input` is not compatible with the mask element at the specified position, `pos`.</span></span>  
  
 <span data-ttu-id="8d505-763">最后一个条件可能取决于 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> 、、 <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> 和 <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> 属性的当前值。</span><span class="sxs-lookup"><span data-stu-id="8d505-763">The last condition may depend on the current value of the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> and <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> properties.</span></span>  
  
 <span data-ttu-id="8d505-764">若要针对掩码测试整个输入字符串，请改用其中一种 <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8d505-764">To test an entire input string against the mask, use one of the <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> methods instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="VerifyEscapeChar">
      <MemberSignature Language="C#" Value="public bool VerifyEscapeChar (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyEscapeChar(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyEscapeChar (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyEscapeChar(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.VerifyEscapeChar : char * int -&gt; bool" Usage="maskedTextProvider.VerifyEscapeChar (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-765">要测试的 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-765">The <see cref="T:System.Char" /> value to test.</span></span></param>
        <param name="position"><span data-ttu-id="8d505-766">测试输入字符时所根据的掩码位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-766">The position in the mask to test the input character against.</span></span></param>
        <summary><span data-ttu-id="8d505-767">测试指定的字符是否将在指定位置转义。</span><span class="sxs-lookup"><span data-stu-id="8d505-767">Tests whether the specified character would be escaped at the specified position.</span></span></summary>
        <returns><span data-ttu-id="8d505-768">如果指定的字符将在指定位置转义，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-768"><see langword="true" /> if the specified character would be escaped at the specified position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-769">如果字符是有效的输入，但未分配给带格式的字符串中的位置，则会被称为 *转义* 字符。</span><span class="sxs-lookup"><span data-stu-id="8d505-769">A character is said to be *escaped* if it is valid input, but is not assigned to that position in the formatted string.</span></span> <span data-ttu-id="8d505-770">转义字符分为以下三个类别：</span><span class="sxs-lookup"><span data-stu-id="8d505-770">Escaped characters fall into the following three categories:</span></span>  
  
-   <span data-ttu-id="8d505-771">如果属性为，则将对提示字符进行转义 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-771">Prompt characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="8d505-772">如果输入字符与掩码中的文本具有相同的值，并且属性为，则为 <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-772">Input characters are escaped if they have the same value as the literal in the mask, and if the <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="8d505-773">如果属性为，则对空格字符进行转义 <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="8d505-773">Space characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="8d505-774"><xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> `false` 如果 `pos` 参数小于零或大于的，则该方法也将返回 <xref:System.ComponentModel.MaskedTextProvider.Length%2A> <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-774">The <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> method will also return `false` if the `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d505-775">测试指定的字符串是否可以成功设置。</span><span class="sxs-lookup"><span data-stu-id="8d505-775">Tests whether the specified string could be set successfully.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string -&gt; bool" Usage="maskedTextProvider.VerifyString input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-776">要测试的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-776">The <see cref="T:System.String" /> value to test.</span></span></param>
        <summary><span data-ttu-id="8d505-777">测试指定的字符串是否可以成功设置。</span><span class="sxs-lookup"><span data-stu-id="8d505-777">Tests whether the specified string could be set successfully.</span></span></summary>
        <returns><span data-ttu-id="8d505-778">如果指定的字符串表示有效输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-778"><see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-779">将 <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 字符串应用于 `input` 掩码，而不实际更改带格式的字符串，以测试 `input` 在相应的操作中是否有效 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-779">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="8d505-780">`true`如果输入为 `null` 或长度为零，则此方法也会返回。</span><span class="sxs-lookup"><span data-stu-id="8d505-780">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string * int * MaskedTextResultHint -&gt; bool" Usage="maskedTextProvider.VerifyString (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8d505-781">要测试的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8d505-781">The <see cref="T:System.String" /> value to test.</span></span></param>
        <param name="testPosition"><span data-ttu-id="8d505-782">如果成功，则为实际测试的最后一个字符的位置（从零开始计）；否则为测试第一次失败时所处的位置。</span><span class="sxs-lookup"><span data-stu-id="8d505-782">If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed.</span></span> <span data-ttu-id="8d505-783">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-783">An output parameter.</span></span></param>
        <param name="resultHint"><span data-ttu-id="8d505-784">一个 <see cref="T:System.ComponentModel.MaskedTextResultHint" />，用于简单地描述测试操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8d505-784">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the test operation.</span></span> <span data-ttu-id="8d505-785">一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="8d505-785">An output parameter.</span></span></param>
        <summary><span data-ttu-id="8d505-786">测试指定的字符串是否可以成功设置，然后输出位置和描述性信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-786">Tests whether the specified string could be set successfully, and then outputs position and descriptive information.</span></span></summary>
        <returns><span data-ttu-id="8d505-787">如果指定的字符串表示有效输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d505-787"><see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d505-788">将 <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 字符串应用于 `input` 掩码，而不实际更改带格式的字符串，以测试 `input` 在相应的操作中是否有效 <xref:System.ComponentModel.MaskedTextProvider.Set%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d505-788">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="8d505-789">`true`如果输入为 `null` 或长度为零，则此方法也会返回。</span><span class="sxs-lookup"><span data-stu-id="8d505-789">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 <span data-ttu-id="8d505-790">此版本的 <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> 提供了两个附加的输出参数，用于传递有关方法操作的详细信息。</span><span class="sxs-lookup"><span data-stu-id="8d505-790">This version of <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
  </Members>
</Type>
