<Type Name="CborReader" FullName="System.Formats.Cbor.CborReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8531abc7ac31b54e8b2996e88988025d28143a5" /><Meta Name="ms.sourcegitcommit" Value="6f6529e381ea42b8042dc6c8b9bd9feeae2f7075" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/17/2020" /><Meta Name="ms.locfileid" Value="92158329" /></Metadata><TypeSignature Language="C#" Value="public class CborReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CborReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Formats.Cbor.CborReader" />
  <TypeSignature Language="VB.NET" Value="Public Class CborReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class CborReader" />
  <TypeSignature Language="F#" Value="type CborReader = class" />
  <AssemblyInfo>
    <AssemblyName>System.Formats.Cbor</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>简明二进制对象表示 (CBOR) 编码数据的有状态且仅向前兼容的读取器。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CborReader (ReadOnlyMemory&lt;byte&gt; data, System.Formats.Cbor.CborConformanceMode conformanceMode = System.Formats.Cbor.CborConformanceMode.Strict, bool allowMultipleRootLevelValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; data, valuetype System.Formats.Cbor.CborConformanceMode conformanceMode, bool allowMultipleRootLevelValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Cbor.CborConformanceMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As ReadOnlyMemory(Of Byte), Optional conformanceMode As CborConformanceMode = System.Formats.Cbor.CborConformanceMode.Strict, Optional allowMultipleRootLevelValues As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Formats.Cbor.CborReader : ReadOnlyMemory&lt;byte&gt; * System.Formats.Cbor.CborConformanceMode * bool -&gt; System.Formats.Cbor.CborReader" Usage="new System.Formats.Cbor.CborReader (data, conformanceMode, allowMultipleRootLevelValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="conformanceMode" Type="System.Formats.Cbor.CborConformanceMode" />
        <Parameter Name="allowMultipleRootLevelValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">要读取的 CBOR 已编码数据。</param>
        <param name="conformanceMode">枚举值之一，指定指导对已编码数据执行的检查的一致性模式。
默认为 <see cref="F:System.Formats.Cbor.CborConformanceMode.Strict" /> 一致性模式。</param>
        <param name="allowMultipleRootLevelValues">如果为 <see langword="true" />，则指明读取器支持多个根级别值；否则为 <see langword="false" />。</param>
        <summary>使用给定配置在指定的 <paramref name="data" /> 上初始化 <see cref="T:System.Formats.Cbor.CborReader" /> 实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">未定义 <paramref name="conformanceMode" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowMultipleRootLevelValues">
      <MemberSignature Language="C#" Value="public bool AllowMultipleRootLevelValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultipleRootLevelValues" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Cbor.CborReader.AllowMultipleRootLevelValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowMultipleRootLevelValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultipleRootLevelValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultipleRootLevelValues : bool" Usage="System.Formats.Cbor.CborReader.AllowMultipleRootLevelValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，此值指明此读取器是否允许多个根级别 CBOR 数据项。</summary>
        <value><see langword="true" /> 如果此读取器允许多个根级别的 CBOR 数据项，则为; <see langword="false" /> 否则为。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesRemaining">
      <MemberSignature Language="C#" Value="public int BytesRemaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesRemaining" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Cbor.CborReader.BytesRemaining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesRemaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesRemaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesRemaining : int" Usage="System.Formats.Cbor.CborReader.BytesRemaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取缓冲区中的未读取字节总数。</summary>
        <value>缓冲区中读取的字节的总数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceMode">
      <MemberSignature Language="C#" Value="public System.Formats.Cbor.CborConformanceMode ConformanceMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Formats.Cbor.CborConformanceMode ConformanceMode" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Cbor.CborReader.ConformanceMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConformanceMode As CborConformanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Formats::Cbor::CborConformanceMode ConformanceMode { System::Formats::Cbor::CborConformanceMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceMode : System.Formats.Cbor.CborConformanceMode" Usage="System.Formats.Cbor.CborReader.ConformanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Cbor.CborConformanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此读取器使用的一致性模式。</summary>
        <value>枚举值之一，表示此读取器使用的一致性模式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDepth">
      <MemberSignature Language="C#" Value="public int CurrentDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentDepth" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Cbor.CborReader.CurrentDepth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDepth : int" Usage="System.Formats.Cbor.CborReader.CurrentDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取读取器在 CBOR 文档中的当前嵌套级别。</summary>
        <value>一个数字，表示 CBOR 文档中 nestedness 的当前级别。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekState">
      <MemberSignature Language="C#" Value="public System.Formats.Cbor.CborReaderState PeekState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Cbor.CborReaderState PeekState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.PeekState" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekState () As CborReaderState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Formats::Cbor::CborReaderState PeekState();" />
      <MemberSignature Language="F#" Value="member this.PeekState : unit -&gt; System.Formats.Cbor.CborReaderState" Usage="cborReader.PeekState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Cbor.CborReaderState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>读取下一个 CBOR 令牌，而不推进读取器。</summary>
        <returns>表示当前 CBOR 读取器状态的对象。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Formats.Cbor.CborContentException">基础数据不是格式标准的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="PeekTag">
      <MemberSignature Language="C#" Value="public System.Formats.Cbor.CborTag PeekTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Cbor.CborTag PeekTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.PeekTag" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekTag () As CborTag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Formats::Cbor::CborTag PeekTag();" />
      <MemberSignature Language="F#" Value="member this.PeekTag : unit -&gt; System.Formats.Cbor.CborTag" Usage="cborReader.PeekTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Formats.Cbor.CborTag</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为语义标记（主要类型 6）读取，而不推进读取器。</summary>
        <returns>已解码的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

在需要在运行时确定语义值解码器的方案中很有用。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBigInteger">
      <MemberSignature Language="C#" Value="public System.Numerics.BigInteger ReadBigInteger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Numerics.BigInteger ReadBigInteger() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadBigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBigInteger () As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Numerics::BigInteger ReadBigInteger();" />
      <MemberSignature Language="F#" Value="member this.ReadBigInteger : unit -&gt; System.Numerics.BigInteger" Usage="cborReader.ReadBigInteger " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为已标记的 bignum 编码读取，如 RFC7049 第 2.4.2 节中所述。</summary>
        <returns>已解码的值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个日期项没有正确的语义标记。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

语义 bignum 编码无效。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBoolean">
      <MemberSignature Language="C#" Value="public bool ReadBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReadBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReadBoolean();" />
      <MemberSignature Language="F#" Value="member this.ReadBoolean : unit -&gt; bool" Usage="cborReader.ReadBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为布尔值（主要类型 7）读取。</summary>
        <returns>已解码的值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个简单值不是布尔编码</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByteString">
      <MemberSignature Language="C#" Value="public byte[] ReadByteString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ReadByteString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadByteString" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadByteString () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ReadByteString();" />
      <MemberSignature Language="F#" Value="member this.ReadByteString : unit -&gt; byte[]" Usage="cborReader.ReadByteString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为字节字符串（主要类型 2）读取。</summary>
        <returns>这些解码的字节数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

方法接受不限长度的字符串，并将其连接到一个字符串。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">下一个日期项没有正确的主要类型。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCborNegativeIntegerRepresentation">
      <MemberSignature Language="C#" Value="public ulong ReadCborNegativeIntegerRepresentation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int64 ReadCborNegativeIntegerRepresentation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadCborNegativeIntegerRepresentation" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadCborNegativeIntegerRepresentation () As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt64 ReadCborNegativeIntegerRepresentation();" />
      <MemberSignature Language="F#" Value="member this.ReadCborNegativeIntegerRepresentation : unit -&gt; uint64" Usage="cborReader.ReadCborNegativeIntegerRepresentation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为 CBOR 负整数表示形式（主要类型 1）读取。</summary>
        <returns>表示 -1 减去整数的无符号整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

此方法支持对-18446744073709551616 和-1 之间的整数进行解码。
用于处理不适合类型的值 <xref:System.Int64> 。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.OverflowException">已编码整数超出了 <see cref="T:System.UInt32" /> 的范围</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDateTimeOffset">
      <MemberSignature Language="C#" Value="public DateTimeOffset ReadDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ReadDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadDateTimeOffset () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ReadDateTimeOffset();" />
      <MemberSignature Language="F#" Value="member this.ReadDateTimeOffset : unit -&gt; DateTimeOffset" Usage="cborReader.ReadDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为已标记的日期/时间字符串读取，如 RFC7049 第 2.4.1 节中所述。</summary>
        <returns>已解码的值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个日期项没有正确的语义标记。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

语义日期/时间编码无效。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDecimal">
      <MemberSignature Language="C#" Value="public decimal ReadDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Decimal ReadDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Decimal ReadDecimal();" />
      <MemberSignature Language="F#" Value="member this.ReadDecimal : unit -&gt; decimal" Usage="cborReader.ReadDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为已标记的十进制小数编码读取，如 RFC7049 第 2.4.3 节中所述。</summary>
        <returns>已解码的值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个日期项没有正确的语义标记。</exception>
        <exception cref="T:System.OverflowException">对于 <see cref="T:System.Decimal" /> 值，已解码的十进制小数要么太大，要么太小。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

语义十进制小数编码无效。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDefiniteLengthByteString">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; ReadDefiniteLengthByteString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; ReadDefiniteLengthByteString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadDefiniteLengthByteString" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadDefiniteLengthByteString () As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory&lt;System::Byte&gt; ReadDefiniteLengthByteString();" />
      <MemberSignature Language="F#" Value="member this.ReadDefiniteLengthByteString : unit -&gt; ReadOnlyMemory&lt;byte&gt;" Usage="cborReader.ReadDefiniteLengthByteString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为确定长度的字节字符串（主要类型 2）读取。</summary>
        <returns>字节字符串有效负载的 <see cref="T:System.ReadOnlyMemory`1" /> 视图。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

数据项是不确定长度的字节字符串。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDefiniteLengthTextStringBytes">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; ReadDefiniteLengthTextStringBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; ReadDefiniteLengthTextStringBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadDefiniteLengthTextStringBytes" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadDefiniteLengthTextStringBytes () As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory&lt;System::Byte&gt; ReadDefiniteLengthTextStringBytes();" />
      <MemberSignature Language="F#" Value="member this.ReadDefiniteLengthTextStringBytes : unit -&gt; ReadOnlyMemory&lt;byte&gt;" Usage="cborReader.ReadDefiniteLengthTextStringBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为确定长度的 UTF-8 文本字符串（主要类型 3）读取。</summary>
        <returns>原始 UTF-8 有效负载的 <see cref="T:System.ReadOnlyMemory`1" /> 视图。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

数据项是不确定长度的文本字符串。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDouble">
      <MemberSignature Language="C#" Value="public double ReadDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 ReadDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadDouble" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ReadDouble();" />
      <MemberSignature Language="F#" Value="member this.ReadDouble : unit -&gt; double" Usage="cborReader.ReadDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为双精度浮点数（主要类型 7）读取。</summary>
        <returns>已解码的 <see cref="T:System.Double" /> 值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个简单值不是浮点数编码</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEncodedValue">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; ReadEncodedValue (bool disableConformanceModeChecks = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; ReadEncodedValue(bool disableConformanceModeChecks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadEncodedValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadEncodedValue (Optional disableConformanceModeChecks As Boolean = false) As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.ReadEncodedValue : bool -&gt; ReadOnlyMemory&lt;byte&gt;" Usage="cborReader.ReadEncodedValue disableConformanceModeChecks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableConformanceModeChecks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disableConformanceModeChecks">若要为读取值禁用一致性模式验证，相当于使用 <see cref="F:System.Formats.Cbor.CborConformanceMode.Lax" />，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>读取下一个 CBOR 数据项，同时返回已编码值的 <see cref="T:System.ReadOnlyMemory`1" /> 视图。 对于不确定长度的编码，这包括中断字节。</summary>
        <returns>已编码值作为连续内存区域的视图。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Formats.Cbor.CborContentException">数据项不是有效的 CBOR 数据项编码。

或

在当前一致性模式下，CBOR 编码是无效的。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEndArray">
      <MemberSignature Language="C#" Value="public void ReadEndArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadEndArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadEndArray" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadEndArray ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadEndArray();" />
      <MemberSignature Language="F#" Value="member this.ReadEndArray : unit -&gt; unit" Usage="cborReader.ReadEndArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>读取数组（主要类型 4）的结尾。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">当前上下文不是数组。

或

读取器不在数组的结尾。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEndIndefiniteLengthByteString">
      <MemberSignature Language="C#" Value="public void ReadEndIndefiniteLengthByteString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadEndIndefiniteLengthByteString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadEndIndefiniteLengthByteString" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadEndIndefiniteLengthByteString ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadEndIndefiniteLengthByteString();" />
      <MemberSignature Language="F#" Value="member this.ReadEndIndefiniteLengthByteString : unit -&gt; unit" Usage="cborReader.ReadEndIndefiniteLengthByteString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>结束读取不确定长度的字节字符串（主要类型 2）。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">当前上下文不是不确定长度的字符串。

或

读取器不在字符串的结尾。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">CBOR 编码数据的结尾异常。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEndIndefiniteLengthTextString">
      <MemberSignature Language="C#" Value="public void ReadEndIndefiniteLengthTextString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadEndIndefiniteLengthTextString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadEndIndefiniteLengthTextString" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadEndIndefiniteLengthTextString ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadEndIndefiniteLengthTextString();" />
      <MemberSignature Language="F#" Value="member this.ReadEndIndefiniteLengthTextString : unit -&gt; unit" Usage="cborReader.ReadEndIndefiniteLengthTextString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>结束读取不确定长度的 UTF-8 文本字符串（主要类型 3）。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">当前上下文不是不确定长度的字符串。

或

读取器不在字符串的结尾。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">CBOR 编码数据的结尾异常。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEndMap">
      <MemberSignature Language="C#" Value="public void ReadEndMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadEndMap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadEndMap" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadEndMap ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadEndMap();" />
      <MemberSignature Language="F#" Value="member this.ReadEndMap : unit -&gt; unit" Usage="cborReader.ReadEndMap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>读取地图（主要类型 5）的结尾。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">当前上下文不是地图。

或

读取器不在地图的结尾。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadHalf">
      <MemberSignature Language="C#" Value="public Half ReadHalf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Half ReadHalf() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadHalf" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadHalf () As Half" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Half ReadHalf();" />
      <MemberSignature Language="F#" Value="member this.ReadHalf : unit -&gt; Half" Usage="cborReader.ReadHalf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Half</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为半精度浮点数（主要类型 7）读取。</summary>
        <returns>已解码的值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个简单值不是浮点数编码。

或

已编码值是双精度浮点数。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public int ReadInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadInt32" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadInt32 () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadInt32();" />
      <MemberSignature Language="F#" Value="member this.ReadInt32 : unit -&gt; int" Usage="cborReader.ReadInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为带符号整数（主要类型 0、1）读取</summary>
        <returns>已解码的整数值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.OverflowException">已编码整数超出了 <see cref="T:System.Int32" /> 的范围。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public long ReadInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ReadInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadInt64" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadInt64 () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ReadInt64();" />
      <MemberSignature Language="F#" Value="member this.ReadInt64 : unit -&gt; int64" Usage="cborReader.ReadInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为带符号整数（主要类型 0、1）读取</summary>
        <returns>已解码的整数值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.OverflowException">已编码整数超出了 <see cref="T:System.Int64" /> 的范围。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadNull">
      <MemberSignature Language="C#" Value="public void ReadNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadNull();" />
      <MemberSignature Language="F#" Value="member this.ReadNull : unit -&gt; unit" Usage="cborReader.ReadNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为 <see langword="null" /> 值（主要类型 7）读取。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个简单值不是 <see langword="null" /> 值编码。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSimpleValue">
      <MemberSignature Language="C#" Value="public System.Formats.Cbor.CborSimpleValue ReadSimpleValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Cbor.CborSimpleValue ReadSimpleValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadSimpleValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadSimpleValue () As CborSimpleValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Formats::Cbor::CborSimpleValue ReadSimpleValue();" />
      <MemberSignature Language="F#" Value="member this.ReadSimpleValue : unit -&gt; System.Formats.Cbor.CborSimpleValue" Usage="cborReader.ReadSimpleValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Cbor.CborSimpleValue</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为 CBOR 简单值（主要类型 7）读取。</summary>
        <returns>已解码的 CBOR 简单值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个简单值不是简单值编码。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSingle">
      <MemberSignature Language="C#" Value="public float ReadSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 ReadSingle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadSingle" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadSingle () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float ReadSingle();" />
      <MemberSignature Language="F#" Value="member this.ReadSingle : unit -&gt; single" Usage="cborReader.ReadSingle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为单精度浮点数（主要类型 7）读取。</summary>
        <returns>已解码的值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个简单值不是浮点数编码。

或

已编码值是双精度浮点数</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadStartArray">
      <MemberSignature Language="C#" Value="public int? ReadStartArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; ReadStartArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadStartArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadStartArray () As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; ReadStartArray();" />
      <MemberSignature Language="F#" Value="member this.ReadStartArray : unit -&gt; Nullable&lt;int&gt;" Usage="cborReader.ReadStartArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为数组（主要类型 4）的开头读取。</summary>
        <returns>确定长度的数组的长度；或如果数组是不确定长度的，则为 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadStartIndefiniteLengthByteString">
      <MemberSignature Language="C#" Value="public void ReadStartIndefiniteLengthByteString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadStartIndefiniteLengthByteString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadStartIndefiniteLengthByteString" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadStartIndefiniteLengthByteString ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadStartIndefiniteLengthByteString();" />
      <MemberSignature Language="F#" Value="member this.ReadStartIndefiniteLengthByteString : unit -&gt; unit" Usage="cborReader.ReadStartIndefiniteLengthByteString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为不确定长度的字节字符串（主要类型 2）的开头读取。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个数据项是确定长度的已编码字符串。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadStartIndefiniteLengthTextString">
      <MemberSignature Language="C#" Value="public void ReadStartIndefiniteLengthTextString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadStartIndefiniteLengthTextString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadStartIndefiniteLengthTextString" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadStartIndefiniteLengthTextString ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadStartIndefiniteLengthTextString();" />
      <MemberSignature Language="F#" Value="member this.ReadStartIndefiniteLengthTextString : unit -&gt; unit" Usage="cborReader.ReadStartIndefiniteLengthTextString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为不确定长度的 UTF-8 文本字符串（主要类型 3）的开头读取。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个数据项是确定长度的已编码字符串。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadStartMap">
      <MemberSignature Language="C#" Value="public int? ReadStartMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; ReadStartMap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadStartMap" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadStartMap () As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; ReadStartMap();" />
      <MemberSignature Language="F#" Value="member this.ReadStartMap : unit -&gt; Nullable&lt;int&gt;" Usage="cborReader.ReadStartMap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为地图（主要类型 5）的开头读取。</summary>
        <returns>确定长度的地图中的键值对数；如果地图是不确定长度的，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

映射内容的使用方式与数组的已声明大小的长度相同。
例如，对于 `1` `int` `string` 和的连续调用，必须使用包含类型值为类型的键的大小的映射 <xref:System.Formats.Cbor.CborReader.ReadInt32> <xref:System.Formats.Cbor.CborReader.ReadTextString> 。
由调用方来跟踪下一个值是键还是值。
从根本上讲，这是一项技术限制，这是因为 CBOR 允许任意类型的键，例如，映射可以包含映射自身的键。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTag">
      <MemberSignature Language="C#" Value="public System.Formats.Cbor.CborTag ReadTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Cbor.CborTag ReadTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadTag" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTag () As CborTag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Formats::Cbor::CborTag ReadTag();" />
      <MemberSignature Language="F#" Value="member this.ReadTag : unit -&gt; System.Formats.Cbor.CborTag" Usage="cborReader.ReadTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Formats.Cbor.CborTag</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为语义标记（主要类型 6）读取。</summary>
        <returns>已解码的值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTextString">
      <MemberSignature Language="C#" Value="public string ReadTextString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadTextString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadTextString" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTextString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadTextString();" />
      <MemberSignature Language="F#" Value="member this.ReadTextString : unit -&gt; string" Usage="cborReader.ReadTextString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为 UTF-8 文本字符串（主要类型 3）读取。</summary>
        <returns>已解码的字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

方法接受不限长度的字符串，该字符串将连接到单个字符串。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUInt32">
      <MemberSignature Language="C#" Value="public uint ReadUInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 ReadUInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadUInt32" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadUInt32 () As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt32 ReadUInt32();" />
      <MemberSignature Language="F#" Value="member this.ReadUInt32 : unit -&gt; uint32" Usage="cborReader.ReadUInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为无符号整数（主要类型 0）读取。</summary>
        <returns>已解码的整数值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.OverflowException">已编码整数超出了 <see cref="T:System.UInt32" /> 的范围。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUInt64">
      <MemberSignature Language="C#" Value="public ulong ReadUInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int64 ReadUInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadUInt64" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadUInt64 () As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt64 ReadUInt64();" />
      <MemberSignature Language="F#" Value="member this.ReadUInt64 : unit -&gt; uint64" Usage="cborReader.ReadUInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为无符号整数（主要类型 0）读取。</summary>
        <returns>已解码的整数值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.OverflowException">已编码整数超出了 <see cref="T:System.UInt64" /> 的范围。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public DateTimeOffset ReadUnixTimeSeconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ReadUnixTimeSeconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.ReadUnixTimeSeconds" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadUnixTimeSeconds () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ReadUnixTimeSeconds();" />
      <MemberSignature Language="F#" Value="member this.ReadUnixTimeSeconds : unit -&gt; DateTimeOffset" Usage="cborReader.ReadUnixTimeSeconds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将下一个数据项作为已标记的 Unix 时间（以秒为单位）读取，如 RFC7049 第 2.4.1 节中所述。</summary>
        <returns>已解码的值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。

或

下一个日期项没有正确的语义标记。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

语义日期/时间编码无效。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="SkipToParent">
      <MemberSignature Language="C#" Value="public void SkipToParent (bool disableConformanceModeChecks = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToParent(bool disableConformanceModeChecks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.SkipToParent(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToParent (Optional disableConformanceModeChecks As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.SkipToParent : bool -&gt; unit" Usage="cborReader.SkipToParent disableConformanceModeChecks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableConformanceModeChecks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disableConformanceModeChecks">如果为 <see langword="true" />，则为跳过的值禁用一致性模式验证，相当于使用 <see cref="F:System.Formats.Cbor.CborConformanceMode.Lax" />；否则为 <see langword="false" />。</param>
        <summary>读取当前值上下文的剩余内容，同时放弃结果，并将读取器推进到父上下文中的下一个值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">读取器位于根上下文中</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="SkipValue">
      <MemberSignature Language="C#" Value="public void SkipValue (bool disableConformanceModeChecks = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipValue(bool disableConformanceModeChecks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.SkipValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipValue (Optional disableConformanceModeChecks As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.SkipValue : bool -&gt; unit" Usage="cborReader.SkipValue disableConformanceModeChecks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableConformanceModeChecks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disableConformanceModeChecks">如果为 <see langword="true" />，则为跳过的值禁用一致性模式验证，相当于使用 <see cref="F:System.Formats.Cbor.CborConformanceMode.Lax" />；否则为 <see langword="false" />。</param>
        <summary>读取下一个值的内容，同时放弃结果并推进读取器。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">读取器不在新值的开头。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="TryReadByteString">
      <MemberSignature Language="C#" Value="public bool TryReadByteString (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadByteString(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.TryReadByteString(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadByteString (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReadByteString(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryReadByteString : Span&lt;byte&gt; * int -&gt; bool" Usage="cborReader.TryReadByteString (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">要在其中写入读取字节的缓冲区。</param>
        <param name="bytesWritten">成功后，将收到已写入 <paramref name="destination" /> 的字节数。</param>
        <summary>将下一个数据项作为字节字符串（主要类型 2）读取。</summary>
        <returns>如果 <paramref name="destination" /> 有足够的长度来接收值并推进读取器，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

方法接受不限长度的字符串，该字符串将连接到单个字符串。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
    <Member MemberName="TryReadTextString">
      <MemberSignature Language="C#" Value="public bool TryReadTextString (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadTextString(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Cbor.CborReader.TryReadTextString(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadTextString (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReadTextString(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryReadTextString : Span&lt;char&gt; * int -&gt; bool" Usage="cborReader.TryReadTextString (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Cbor</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">要写入的缓冲区。</param>
        <param name="charsWritten">成功后，将收到已写入 <paramref name="destination" /> 的字符数。</param>
        <summary>将下一个数据项作为 UTF-8 文本字符串（主要类型 3）读取。</summary>
        <returns>如果 <paramref name="destination" /> 有足够的长度来接收值，则为 <see langword="true" /> 并推进读取器，否则为 <see langword="false" />，且读取器不会前进。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

方法接受不限长度的字符串，该字符串将连接到单个字符串。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">下一个数据项没有正确的主要类型。</exception>
        <exception cref="T:System.Formats.Cbor.CborContentException">下一个值的 CBOR 编码无效。

或

CBOR 编码数据的结尾异常。

或

下一个值使用在当前一致性模式下无效的 CBOR 编码。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
