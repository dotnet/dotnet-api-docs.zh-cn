<Type Name="SuppressUnmanagedCodeSecurityAttribute" FullName="System.Security.SuppressUnmanagedCodeSecurityAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1aab3d9e13a51292a343843ad6dc6ece8ffeb36c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86749201" /></Metadata><TypeSignature Language="C#" Value="public sealed class SuppressUnmanagedCodeSecurityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SuppressUnmanagedCodeSecurityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SuppressUnmanagedCodeSecurityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SuppressUnmanagedCodeSecurityAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SuppressUnmanagedCodeSecurityAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Delegate | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Delegate | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="67ba9-101">允许托管代码在不进行堆栈审核的情况下调用到非托管代码。</span><span class="sxs-lookup"><span data-stu-id="67ba9-101">Allows managed code to call into unmanaged code without a stack walk.</span></span> <span data-ttu-id="67ba9-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="67ba9-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
> [!IMPORTANT]
> <span data-ttu-id="67ba9-103">不再支持部分受信任的代码。</span><span class="sxs-lookup"><span data-stu-id="67ba9-103">Partially trusted code is no longer supported.</span></span> <span data-ttu-id="67ba9-104">此属性在 .NET Core 中不起作用。</span><span class="sxs-lookup"><span data-stu-id="67ba9-104">This attribute has no effect in .NET Core.</span></span>
  
> [!CAUTION]
>  <span data-ttu-id="67ba9-105">使用此属性时要格外小心。</span><span class="sxs-lookup"><span data-stu-id="67ba9-105">Use this attribute with extreme care.</span></span> <span data-ttu-id="67ba9-106">使用不当可能会造成安全漏洞。</span><span class="sxs-lookup"><span data-stu-id="67ba9-106">Incorrect use can create security weaknesses.</span></span>  
  
 <span data-ttu-id="67ba9-107">此特性可应用于要调用本机代码的方法，而不会在执行此操作时导致运行时安全检查的性能损失。</span><span class="sxs-lookup"><span data-stu-id="67ba9-107">This attribute can be applied to methods that want to call into native code without incurring the performance loss of a run-time security check when doing so.</span></span> <span data-ttu-id="67ba9-108">在运行时省略了调用非托管代码时执行的堆栈审核，从而大大节省了性能。</span><span class="sxs-lookup"><span data-stu-id="67ba9-108">The stack walk performed when calling unmanaged code is omitted at run time, resulting in substantial performance savings.</span></span> <span data-ttu-id="67ba9-109">在类中使用此属性会将其应用到所有包含的方法。</span><span class="sxs-lookup"><span data-stu-id="67ba9-109">Using this attribute in a class applies it to all contained methods.</span></span>  
  
 <span data-ttu-id="67ba9-110">通常情况下，每当托管代码调用由 PInvoke 或 COM 互操作 (到本机代码) 中的非托管代码时，都需要 `UnmanagedCode` 权限，以确保所有调用方都具有允许此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="67ba9-110">Generally, whenever managed code calls into unmanaged code (by PInvoke or COM interop into native code), there is a demand for the `UnmanagedCode` permission to ensure all callers have the necessary permission to allow this.</span></span> <span data-ttu-id="67ba9-111">通过应用此显式特性，开发人员可在运行时取消该需求。</span><span class="sxs-lookup"><span data-stu-id="67ba9-111">By applying this explicit attribute, developers can suppress the demand at run time.</span></span> <span data-ttu-id="67ba9-112">开发人员必须负责确保转换为非托管代码的工作充分受到其他方法的保护。</span><span class="sxs-lookup"><span data-stu-id="67ba9-112">The developer must take responsibility for assuring that the transition into unmanaged code is sufficiently protected by other means.</span></span> <span data-ttu-id="67ba9-113">权限的需求 `UnmanagedCode` 仍将在链接时出现。</span><span class="sxs-lookup"><span data-stu-id="67ba9-113">The demand for the `UnmanagedCode` permission will still occur at link time.</span></span> <span data-ttu-id="67ba9-114">例如，如果函数 A 调用函数 B，并将函数 B 标记为 <xref:System.Security.SuppressUnmanagedCodeSecurityAttribute> ，则在实时编译期间将检查函数 a 的非托管代码权限，但不会在运行时检查。</span><span class="sxs-lookup"><span data-stu-id="67ba9-114">For example, if function A calls function B and function B is marked with <xref:System.Security.SuppressUnmanagedCodeSecurityAttribute>, function A will be checked for unmanaged code permission during just-in-time compilation, but not subsequently during run time.</span></span>  
  
 <span data-ttu-id="67ba9-115">仅当应用于 PInvoke 方法 (或包含 PInvoke 方法的类) 或通过其进行互操作调用的接口定义时，此特性才有效。</span><span class="sxs-lookup"><span data-stu-id="67ba9-115">This attribute is only effective when applied to PInvoke methods (or classes that contain PInvoke methods) or the definition of an interface through which interop calls will be made.</span></span> <span data-ttu-id="67ba9-116">它将在所有其他上下文中被忽略。</span><span class="sxs-lookup"><span data-stu-id="67ba9-116">It will be ignored in all other contexts.</span></span>  
  
 <span data-ttu-id="67ba9-117">此特性可用于实现通过非托管代码提供对系统资源的访问的类。</span><span class="sxs-lookup"><span data-stu-id="67ba9-117">This attribute is useful for implementing a class that provides access to system resources through unmanaged code.</span></span> <span data-ttu-id="67ba9-118">没有访问非托管代码权限的代码可以调用具有此属性的类来访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="67ba9-118">Code that does not have permission to access unmanaged code can call a class with this attribute to access unmanaged code.</span></span> <span data-ttu-id="67ba9-119">只有具有此特性的类的编写器已经将该类编程为安全类，这才是安全的。</span><span class="sxs-lookup"><span data-stu-id="67ba9-119">This is only safe if the writer of the class with this attribute has programmed the class to be secure.</span></span> <span data-ttu-id="67ba9-120">否则，此属性是危险的，可能会导致使用该属性的代码被滥用。</span><span class="sxs-lookup"><span data-stu-id="67ba9-120">If not, this attribute is dangerous and can allow the code that uses it to be misused.</span></span>  
  
 <span data-ttu-id="67ba9-121">这不是声明性的安全属性，而是派生自 (的常规属性 <xref:System.Attribute> ，而不是 <xref:System.Security.Permissions.SecurityAttribute>) 。</span><span class="sxs-lookup"><span data-stu-id="67ba9-121">This is not a declarative security attribute, but a regular attribute (it derives from <xref:System.Attribute>, not <xref:System.Security.Permissions.SecurityAttribute>).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/attributes/"><span data-ttu-id="67ba9-122">利用特性扩展元数据</span><span class="sxs-lookup"><span data-stu-id="67ba9-122">Extending Metadata Using Attributes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SuppressUnmanagedCodeSecurityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SuppressUnmanagedCodeSecurityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67ba9-123">初始化 <see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="67ba9-123">Initializes a new instance of the <see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67ba9-124">无参数构造函数将所有字段初始化为其默认值。</span><span class="sxs-lookup"><span data-stu-id="67ba9-124">The parameterless constructor initializes any fields to their default values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
