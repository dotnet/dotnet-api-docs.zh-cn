<Type Name="SecurityState" FullName="System.Security.SecurityState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="94a6ec05d1e429625dbc63ca85c0bed9a268df64" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91917183" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityState extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityState" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityState" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityState abstract" />
  <TypeSignature Language="F#" Value="type SecurityState = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Security.Permissions" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="78fc9-101">提供一个基类，用于从 <see cref="T:System.AppDomainManager" /> 对象中请求操作的安全状态。</span><span class="sxs-lookup"><span data-stu-id="78fc9-101">Provides a base class for requesting the security status of an action from the <see cref="T:System.AppDomainManager" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fc9-102">必须从此类继承以提供一个类，该类包含一个属性，该属性指定要执行的安全敏感操作。</span><span class="sxs-lookup"><span data-stu-id="78fc9-102">You must inherit from this class to provide a class that includes a property that specifies the security-sensitive action to be performed.</span></span> <span data-ttu-id="78fc9-103"><xref:System.Security.SecurityState>从派生类实例化的对象将传递给 <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> 方法，以确定宿主是否允许执行该操作。</span><span class="sxs-lookup"><span data-stu-id="78fc9-103">The <xref:System.Security.SecurityState> object that is instantiated from the derived class is passed to the <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> method to determine whether the host allows that action to be performed.</span></span> <span data-ttu-id="78fc9-104">方法的默认实现 <xref:System.AppDomainManager.CheckSecuritySettings%2A> 始终返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="78fc9-104">The default implementation of the <xref:System.AppDomainManager.CheckSecuritySettings%2A> method always returns `false`.</span></span>  <span data-ttu-id="78fc9-105">必须重写方法以检测允许的操作。</span><span class="sxs-lookup"><span data-stu-id="78fc9-105">The method must be overridden to detect the actions that are allowed.</span></span>  
  
 <span data-ttu-id="78fc9-106">例如，如果你想要在库代码中访问 Web 摄像机，你将创建一个 `WebcamSecurityState` 对象并调用 <xref:System.Security.SecurityState.EnsureState%2A> 方法以确定主机是否允许访问 web 摄像机，如以下示例中所示。</span><span class="sxs-lookup"><span data-stu-id="78fc9-106">For example, if you want to access a Web camera in your library code, you would create a `WebcamSecurityState` object and call the <xref:System.Security.SecurityState.EnsureState%2A> method to determine whether the host allows Web camera access, as shown in the following example.</span></span>  <span data-ttu-id="78fc9-107"> (可以 `WebcamSecurityState` 在 "示例" 部分中找到的代码。 ) </span><span class="sxs-lookup"><span data-stu-id="78fc9-107">(You can find the code for `WebcamSecurityState` in the "Example" section.)</span></span>  
  
```csharp
var securityState = new WebcamSecurityState("Safe access to Webcam", WebcamSecurityOptions.SafeAccess);  
try  
{  
    securityState.EnsureState();  
    // Allocate memory.  
}  
catch (ApplicationException e)  
{  
    // Handle any exception that is thrown.  
    System.Diagnostics.Debug.WriteLine(e.Message);  
}  
```  
  
 <span data-ttu-id="78fc9-108">若要处理调用 <xref:System.AppDomainManager> `WebcamSecurityState` ，必须通过重写方法来感知 <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> ，如以下示例中所示。</span><span class="sxs-lookup"><span data-stu-id="78fc9-108">To process the call the <xref:System.AppDomainManager> must be made aware of `WebcamSecurityState` through an override of the <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> method, as shown in the following example.</span></span>  
  
```csharp
[SecurityCritical]  
public override bool CheckSecuritySettings(System.Security.SecurityState securityState)  
{  
    switch (securityState.ToString())  
    {  
        case "WebcamSecurityState":  
        {  
            if ((securityState as WebcamSecurityState).Options == WebcamSecurityOptions.SafeAccess)  
                return PromptUser((securityState as WebcamSecurityState).Description);  
            return false;  
        }  
    }  
    return false;  
}  
private bool PromptUser(string text)  
{  
    // Replace the OpenFileDialog with a custom user prompt.  
    OpenFileDialog o = new OpenFileDialog();  
    o.Title = text;  
    if (o.ShowDialog() == DialogResult.OK)  
        return true;  
    else  
        return false;  
}   
```  
  
   
  
## Examples  
 <span data-ttu-id="78fc9-109">下面的示例演示如何重写 <xref:System.Security.SecurityState> 类。</span><span class="sxs-lookup"><span data-stu-id="78fc9-109">The following example shows how to override the <xref:System.Security.SecurityState> class.</span></span>  
  
```csharp
[SecurityCritical]  
public enum WebcamSecurityOptions
{
    SafeAccess,  
    FullAccess  
}  
[SecurityCritical]  
public class WebcamSecurityState : SecurityState  
{  
    public WebcamSecurityState(string description, WebcamSecurityOptions options)  
    {  
        Options = options;  
        Description = description;  
    }  
    public WebcamSecurityOptions Options { get; set; }  
    public string Description { get; set; }  
    public override void EnsureState()  
    {  
        if (!IsStateAvailable())  
            throw new ApplicationException("WebcamSecurityState not available");  
    }  
}    
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78fc9-110">初始化 <see cref="T:System.Security.SecurityState" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="78fc9-110">Initializes a new instance of the <see cref="T:System.Security.SecurityState" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureState">
      <MemberSignature Language="C#" Value="public abstract void EnsureState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityState.EnsureState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EnsureState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EnsureState();" />
      <MemberSignature Language="F#" Value="abstract member EnsureState : unit -&gt; unit" Usage="securityState.EnsureState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78fc9-111">在派生类中重写时，确保由 <see cref="T:System.Security.SecurityState" /> 表示的状态在宿主上可用。</span><span class="sxs-lookup"><span data-stu-id="78fc9-111">When overridden in a derived class, ensures that the state that is represented by <see cref="T:System.Security.SecurityState" /> is available on the host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fc9-112">此方法的实现应与下面的示例类似。</span><span class="sxs-lookup"><span data-stu-id="78fc9-112">The implementation of this method should be similar to the following example.</span></span>  
  
```csharp
public override void EnsureState()  
{  
    if (!IsStateAvailable())  
          throw new ApplicationException("WebcamSecurityState not available");  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStateAvailable">
      <MemberSignature Language="C#" Value="public bool IsStateAvailable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStateAvailable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityState.IsStateAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStateAvailable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStateAvailable();" />
      <MemberSignature Language="F#" Value="member this.IsStateAvailable : unit -&gt; bool" Usage="securityState.IsStateAvailable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78fc9-113">获取一个值，该值指示 <see cref="T:System.Security.SecurityState" /> 类的此实现的状态是否在当前宿主上可用。</span><span class="sxs-lookup"><span data-stu-id="78fc9-113">Gets a value that indicates whether the state for this implementation of the <see cref="T:System.Security.SecurityState" /> class is available on the current host.</span></span></summary>
        <returns><span data-ttu-id="78fc9-114">如果状态可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78fc9-114"><see langword="true" /> if the state is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fc9-115"><xref:System.Security.SecurityState.IsStateAvailable%2A> 调用 <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> 方法以确定此类表示的状态在主机上是否可用。</span><span class="sxs-lookup"><span data-stu-id="78fc9-115"><xref:System.Security.SecurityState.IsStateAvailable%2A> calls the <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> method to determine whether the state that is represented by this class is available on the host.</span></span>  
  
 <span data-ttu-id="78fc9-116"><xref:System.Security.SecurityState>有关方法的示例实现，请参见类 <xref:System.AppDomainManager.CheckSecuritySettings%2A> 。</span><span class="sxs-lookup"><span data-stu-id="78fc9-116">See the <xref:System.Security.SecurityState> class for an example implementation of the <xref:System.AppDomainManager.CheckSecuritySettings%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
