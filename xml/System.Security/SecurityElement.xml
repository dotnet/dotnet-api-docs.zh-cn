<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74e06e652f0f16d250eec2a1d1da3426cefef078" /><Meta Name="ms.sourcegitcommit" Value="9a0316374d19cc78674994106d073aa5ef1bd5f3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/10/2020" /><Meta Name="ms.locfileid" Value="94463933" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityElement extends System.Object" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <TypeSignature Language="F#" Value="type SecurityElement = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Security.Permissions" FromVersion="4.0.1.0" To="netstandard" ToVersion="2.0.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
    <TypeForwarding From="System.Security.Permissions" FromVersion="4.0.2.0" To="System.Runtime.Extensions" ToVersion="4.2.1.0" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0" />
    <TypeForwarding From="System.Security.Permissions" FromVersion="4.0.3.0" To="System.Runtime.Extensions" ToVersion="4.2.2.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.Security.Permissions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Security.Permissions" FromVersion="4.0.3.0" To="System.Runtime.Extensions" ToVersion="4.2.1.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="31e5d-101">表示用于对安全对象进行编码的 XML 对象模型。</span><span class="sxs-lookup"><span data-stu-id="31e5d-101">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="31e5d-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="31e5d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-103">此类旨在作为在安全系统中使用的简单 XML 对象模型的轻型实现，而不是用作常规 XML 对象模型。</span><span class="sxs-lookup"><span data-stu-id="31e5d-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="31e5d-104">本文档假定你具有 XML 的基本知识。</span><span class="sxs-lookup"><span data-stu-id="31e5d-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="31e5d-105">元素的简单 XML 对象模型由以下部分组成：</span><span class="sxs-lookup"><span data-stu-id="31e5d-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="31e5d-106">标记为元素名称。</span><span class="sxs-lookup"><span data-stu-id="31e5d-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="31e5d-107">属性在元素上为零个或多个名称/值属性对。</span><span class="sxs-lookup"><span data-stu-id="31e5d-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="31e5d-108">子级是在和中嵌套的零个或多个元素 `<tag>` `</tag>` 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="31e5d-109">强烈建议使用基于属性的 XML 表示形式来表示安全元素及其值。</span><span class="sxs-lookup"><span data-stu-id="31e5d-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="31e5d-110">这意味着元素的属性表示为属性，属性值表示为属性值。</span><span class="sxs-lookup"><span data-stu-id="31e5d-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="31e5d-111">避免在标记内嵌套文本。</span><span class="sxs-lookup"><span data-stu-id="31e5d-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="31e5d-112">对于任何 `<tag>text</tag>` 表示形式，类型的表示形式 `<tag value="text"/>` 通常都可用。</span><span class="sxs-lookup"><span data-stu-id="31e5d-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="31e5d-113">使用基于属性的 XML 表示形式可提高可读性，并使生成的 XML 序列化的 WMI 可移植性更强。</span><span class="sxs-lookup"><span data-stu-id="31e5d-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="31e5d-114">特性名称必须是一个或更长的字符，并且不能为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="31e5d-115">如果使用基于元素的值表示形式，则具有文本字符串的元素以 `null` `<tag/>` 形式表示; 否则，文本由 `<tag>` 和 `</tag>` 标记分隔。</span><span class="sxs-lookup"><span data-stu-id="31e5d-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="31e5d-116">这两种形式均可与属性组合在一起，如果存在，将显示这些属性。</span><span class="sxs-lookup"><span data-stu-id="31e5d-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="31e5d-117">元素的标记、属性和文本（如果存在）始终区分大小写。</span><span class="sxs-lookup"><span data-stu-id="31e5d-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="31e5d-118">XML 窗体在必要时包含引号和转义。</span><span class="sxs-lookup"><span data-stu-id="31e5d-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="31e5d-119">包含无效字符的字符串值，用于在 XML 中生成 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31e5d-120">这些规则适用于所有属性和方法。</span><span class="sxs-lookup"><span data-stu-id="31e5d-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31e5d-121">出于性能方面的原因，仅当元素被编码为 XML 文本格式，而不是在每个属性或方法集上时，才会检查字符有效性。</span><span class="sxs-lookup"><span data-stu-id="31e5d-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="31e5d-122">静态方法允许在必要时进行明确检查。</span><span class="sxs-lookup"><span data-stu-id="31e5d-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-123">下面的示例演示如何使用类的成员 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31e5d-124">初始化 <see cref="T:System.Security.SecurityElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="31e5d-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="31e5d-125">XML 元素的标记名称。</span><span class="sxs-lookup"><span data-stu-id="31e5d-125">The tag name of an XML element.</span></span></param>
        <summary><span data-ttu-id="31e5d-126">使用指定的标记初始化 <see cref="T:System.Security.SecurityElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="31e5d-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-127">`tag`参数必须包含有效的 XML 标记名称。</span><span class="sxs-lookup"><span data-stu-id="31e5d-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="31e5d-128">用于 <xref:System.Security.SecurityElement.Escape%2A> 从字符串中删除无效字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-129">下面的代码演示 <xref:System.Security.SecurityElement.%23ctor%2A> 如何使用构造函数创建新的 <xref:System.Security.SecurityElement> 对象。</span><span class="sxs-lookup"><span data-stu-id="31e5d-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="31e5d-130">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e5d-131"><paramref name="tag" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31e5d-132"><paramref name="tag" /> 参数在 XML 中无效。</span><span class="sxs-lookup"><span data-stu-id="31e5d-132">The <paramref name="tag" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string * string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement (tag, text)" />
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string? text);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="31e5d-133">XML 元素的标记名称。</span><span class="sxs-lookup"><span data-stu-id="31e5d-133">The tag name of the XML element.</span></span></param>
        <param name="text"><span data-ttu-id="31e5d-134">元素中的文本内容。</span><span class="sxs-lookup"><span data-stu-id="31e5d-134">The text content within the element.</span></span></param>
        <summary><span data-ttu-id="31e5d-135">用指定的标记和文本初始化 <see cref="T:System.Security.SecurityElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="31e5d-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-136">如果 `text` 参数为，则 `null` 此构造函数将生成与无参数构造函数相同的元素。</span><span class="sxs-lookup"><span data-stu-id="31e5d-136">If the `text` parameter is `null` this constructor produces an element identical to the parameterless constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e5d-137"><paramref name="tag" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31e5d-138"><paramref name="tag" /> 参数或 <paramref name="text" /> 参数在 XML 中无效。</span><span class="sxs-lookup"><span data-stu-id="31e5d-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : string * string -&gt; unit" Usage="securityElement.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31e5d-139">属性名。</span><span class="sxs-lookup"><span data-stu-id="31e5d-139">The name of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="31e5d-140">属性的值。</span><span class="sxs-lookup"><span data-stu-id="31e5d-140">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="31e5d-141">将名称/值特性添加到 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="31e5d-141">Adds a name/value attribute to an XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-142">特性中的名称和值只能包含有效的 XML 特性字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="31e5d-143">XML 特性名称必须是唯一的。</span><span class="sxs-lookup"><span data-stu-id="31e5d-143">XML attribute names must be unique.</span></span> <span data-ttu-id="31e5d-144">用于 <xref:System.Security.SecurityElement.Escape%2A> 从字符串中删除无效字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="31e5d-145">不支持带引号的字符串，因此，名称/值对的字符串不应包含引号或其他需要引用的字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-146">下面的代码演示 <xref:System.Security.SecurityElement.AddAttribute%2A> 如何使用方法将名称/值特性添加到 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="31e5d-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="31e5d-147">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e5d-148"><paramref name="name" /> 参数或 <paramref name="value" /> 参数是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31e5d-149"><paramref name="name" /> 参数或 <paramref name="value" /> 参数在 XML 中无效。</span><span class="sxs-lookup"><span data-stu-id="31e5d-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span></span>  
  
<span data-ttu-id="31e5d-150">- 或 -</span><span class="sxs-lookup"><span data-stu-id="31e5d-150">-or-</span></span> 
<span data-ttu-id="31e5d-151">具有由 <paramref name="name" /> 参数指定的名称的特性已存在。</span><span class="sxs-lookup"><span data-stu-id="31e5d-151">An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Security.SecurityElement -&gt; unit" Usage="securityElement.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="31e5d-152">要添加的子元素。</span><span class="sxs-lookup"><span data-stu-id="31e5d-152">The child element to add.</span></span></param>
        <summary><span data-ttu-id="31e5d-153">将子元素添加到 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="31e5d-153">Adds a child element to the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-154">此子元素将添加到任何以前存在的子元素之后。</span><span class="sxs-lookup"><span data-stu-id="31e5d-154">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-155">下面的代码演示如何使用 <xref:System.Security.SecurityElement.AddChild%2A> 方法将一个子元素添加到 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="31e5d-155">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="31e5d-156">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-156">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e5d-157"><paramref name="child" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-157">The <paramref name="child" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Attribute : string -&gt; string" Usage="securityElement.Attribute name" />
      <MemberSignature Language="C#" Value="public string? Attribute (string name);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31e5d-158">要搜索的特性名。</span><span class="sxs-lookup"><span data-stu-id="31e5d-158">The name of the attribute for which to search.</span></span></param>
        <summary><span data-ttu-id="31e5d-159">根据名称在 XML 元素中查找特性。</span><span class="sxs-lookup"><span data-stu-id="31e5d-159">Finds an attribute by name in an XML element.</span></span></summary>
        <returns><span data-ttu-id="31e5d-160">与命名特性相关的值，或者，如果不存在与 <paramref name="name" /> 相关的特性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-160">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-161">对于如下所示的 XML， `Attribute("B")` 将返回 "456"。</span><span class="sxs-lookup"><span data-stu-id="31e5d-161">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-162">下面的代码演示 <xref:System.Security.SecurityElement.Attribute%2A> 如何使用方法通过名称查找特性。</span><span class="sxs-lookup"><span data-stu-id="31e5d-162">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="31e5d-163">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-163">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e5d-164"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-164">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Hashtable with get, set" Usage="System.Security.SecurityElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31e5d-165">以名称/值对形式获取或设置 XML 元素特性。</span><span class="sxs-lookup"><span data-stu-id="31e5d-165">Gets or sets the attributes of an XML element as name/value pairs.</span></span></summary>
        <value><span data-ttu-id="31e5d-166">XML 元素特性值的 <see cref="T:System.Collections.Hashtable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="31e5d-166">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-167">每个属性都 <xref:System.Collections.Hashtable> 作为名称/值对存储在中。</span><span class="sxs-lookup"><span data-stu-id="31e5d-167">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="31e5d-168">特性中的名称和值应该只包含有效的 XML 特性字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-168">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="31e5d-169">用于 <xref:System.Security.SecurityElement.Escape%2A> 从字符串中删除无效字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-169">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="31e5d-170">不支持带引号的字符串，因此，名称/值对的字符串不应包含引号或其他需要引用的字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-170">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-171">下面的代码演示 <xref:System.Security.SecurityElement.Attributes%2A> 如何使用属性来获取 XML 元素的属性。</span><span class="sxs-lookup"><span data-stu-id="31e5d-171">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="31e5d-172">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-172">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="31e5d-173"><see cref="T:System.Collections.Hashtable" /> 对象的名称或值无效。</span><span class="sxs-lookup"><span data-stu-id="31e5d-173">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31e5d-174">该名称不是有效的 XML 特性名称。</span><span class="sxs-lookup"><span data-stu-id="31e5d-174">The name is not a valid XML attribute name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.ArrayList with get, set" Usage="System.Security.SecurityElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31e5d-175">获取或设置 XML 元素子元素的数组。</span><span class="sxs-lookup"><span data-stu-id="31e5d-175">Gets or sets the array of child elements of the XML element.</span></span></summary>
        <value><span data-ttu-id="31e5d-176">XML 元素中作为安全元素的已排序的子元素。</span><span class="sxs-lookup"><span data-stu-id="31e5d-176">The ordered child elements of the XML element as security elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-177">如果 <xref:System.Security.SecurityElement> 包含 <xref:System.Security.SecurityElement.Text%2A> 和 <xref:System.Security.SecurityElement.Children%2A> ， <xref:System.Security.SecurityElement.Text%2A> 将首先显示。</span><span class="sxs-lookup"><span data-stu-id="31e5d-177">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-178">下面的代码演示 <xref:System.Security.SecurityElement.Children%2A> 如何使用属性来获取 XML 元素的子元素数组。</span><span class="sxs-lookup"><span data-stu-id="31e5d-178">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="31e5d-179">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-179">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31e5d-180">XML 父节点的子级是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-180">A child of the XML parent node is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecurityElement" Usage="securityElement.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31e5d-181">创建并返回当前 <see cref="T:System.Security.SecurityElement" /> 对象的一个相同副本。</span><span class="sxs-lookup"><span data-stu-id="31e5d-181">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></summary>
        <returns><span data-ttu-id="31e5d-182">当前 <see cref="T:System.Security.SecurityElement" /> 对象的副本。</span><span class="sxs-lookup"><span data-stu-id="31e5d-182">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-183">副本包括 <xref:System.Security.SecurityElement.Children%2A> 和 <xref:System.Security.SecurityElement.Attributes%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="31e5d-183">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberSignature Language="F#" Value="member this.Equal : System.Security.SecurityElement -&gt; bool" Usage="securityElement.Equal other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="31e5d-184">要与当前 XML 元素对象进行比较的 XML 元素对象。</span><span class="sxs-lookup"><span data-stu-id="31e5d-184">An XML element object to which to compare the current XML element object.</span></span></param>
        <summary><span data-ttu-id="31e5d-185">比较两个 XML 元素对象，确定它们是否相等。</span><span class="sxs-lookup"><span data-stu-id="31e5d-185">Compares two XML element objects for equality.</span></span></summary>
        <returns><span data-ttu-id="31e5d-186">如果当前 XML 元素中的标记、特性名和值、子元素以及文本字段与 <paramref name="other" /> 参数中的对等部分相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-186"><see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-187">如果有子元素，则比较会以递归方式扩展到它们。</span><span class="sxs-lookup"><span data-stu-id="31e5d-187">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="31e5d-188">不支持对相同字符的不同 XML 表示形式进行比较。</span><span class="sxs-lookup"><span data-stu-id="31e5d-188">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-189">下面的代码演示 <xref:System.Security.SecurityElement.Equal%2A> 如何使用方法来比较两个 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="31e5d-189">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="31e5d-190">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-190">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Security.SecurityElement.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="31e5d-191">要对其中的无效字符进行转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="31e5d-191">The string within which to escape invalid characters.</span></span></param>
        <summary><span data-ttu-id="31e5d-192">将字符串中的无效 XML 字符替换为与其等效的有效 XML 字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-192">Replaces invalid XML characters in a string with their valid XML equivalent.</span></span></summary>
        <returns><span data-ttu-id="31e5d-193">包含无效字符的输入字符串被替换。</span><span class="sxs-lookup"><span data-stu-id="31e5d-193">The input string with invalid characters replaced.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-194">使用此方法在中使用字符串之前，替换字符串中的无效字符 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-194">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="31e5d-195">如果在中使用了无效的字符 <xref:System.Security.SecurityElement> 而未进行转义， <xref:System.ArgumentException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="31e5d-195">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="31e5d-196">下表显示了无效的 XML 字符及其转义等效项。</span><span class="sxs-lookup"><span data-stu-id="31e5d-196">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="31e5d-197">无效的 XML 字符</span><span class="sxs-lookup"><span data-stu-id="31e5d-197">Invalid XML character</span></span> | <span data-ttu-id="31e5d-198">替换为</span><span class="sxs-lookup"><span data-stu-id="31e5d-198">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="31e5d-199">下面的代码演示 <xref:System.Security.SecurityElement.Escape%2A> 如何使用方法将字符串中的无效 xml 字符替换为其有效的 xml 等效项。</span><span class="sxs-lookup"><span data-stu-id="31e5d-199">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="31e5d-200">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-200">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; System.Security.SecurityElement" Usage="System.Security.SecurityElement.FromString xml" />
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement? FromString (string xml);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="31e5d-201">从其创建安全元素的 XML 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="31e5d-201">The XML-encoded string from which to create the security element.</span></span></param>
        <summary><span data-ttu-id="31e5d-202">从 XML 编码的字符串创建安全元素。</span><span class="sxs-lookup"><span data-stu-id="31e5d-202">Creates a security element from an XML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="31e5d-203">从 XML 创建的 <see cref="T:System.Security.SecurityElement" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-203">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-204">在 XML 字符串中不使用单引号;而应使用转义双引号。</span><span class="sxs-lookup"><span data-stu-id="31e5d-204">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="31e5d-205">例如，而不是 " `<value name='Company'>Microsoft</value>"` 使用" `<value name=\"Company\">Microsoft</value>"` 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-205">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="31e5d-206">使用单引号会导致引发异常，或者在某些情况下，在字符串中将单引号视为文本。</span><span class="sxs-lookup"><span data-stu-id="31e5d-206">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
 
 <span data-ttu-id="31e5d-207">基于证据的安全模型在 .NET Core 中不受支持，此方法将返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-207">Evidence based security model is not supported on .NET Core and this method will return `null`.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException"><span data-ttu-id="31e5d-208"><paramref name="xml" /> 包含一个或多个单引号字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-208"><paramref name="xml" /> contains one or more single quotation mark characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e5d-209"><paramref name="xml" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-209"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeName : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31e5d-210">要测试其有效性的特性名。</span><span class="sxs-lookup"><span data-stu-id="31e5d-210">The attribute name to test for validity.</span></span></param>
        <summary><span data-ttu-id="31e5d-211">确定字符串是否是有效的特性名。</span><span class="sxs-lookup"><span data-stu-id="31e5d-211">Determines whether a string is a valid attribute name.</span></span></summary>
        <returns><span data-ttu-id="31e5d-212">如果 <paramref name="name" /> 参数是有效的 XML 特性名，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-212"><see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-213">此方法可用于测试特性，然后将其添加到安全元素中。</span><span class="sxs-lookup"><span data-stu-id="31e5d-213">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-214">下面的代码演示 <xref:System.Security.SecurityElement.IsValidAttributeName%2A> 如何使用方法来确定字符串是否为有效的特性名称。</span><span class="sxs-lookup"><span data-stu-id="31e5d-214">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="31e5d-215">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-215">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeValue : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31e5d-216">要测试其有效性的特性值。</span><span class="sxs-lookup"><span data-stu-id="31e5d-216">The attribute value to test for validity.</span></span></param>
        <summary><span data-ttu-id="31e5d-217">确定字符串是否是有效的特性值。</span><span class="sxs-lookup"><span data-stu-id="31e5d-217">Determines whether a string is a valid attribute value.</span></span></summary>
        <returns><span data-ttu-id="31e5d-218">如果 <paramref name="value" /> 参数是有效的 XML 特性值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-218"><see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-219">此方法可用于测试特性，然后将其添加到安全元素中。</span><span class="sxs-lookup"><span data-stu-id="31e5d-219">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-220">下面的代码演示 <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> 如何使用方法来确定字符串是否为有效的特性值。</span><span class="sxs-lookup"><span data-stu-id="31e5d-220">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="31e5d-221">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-221">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="static member IsValidTag : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="31e5d-222">要测试其有效性的标记。</span><span class="sxs-lookup"><span data-stu-id="31e5d-222">The tag to test for validity.</span></span></param>
        <summary><span data-ttu-id="31e5d-223">确定字符串是否是有效的标记。</span><span class="sxs-lookup"><span data-stu-id="31e5d-223">Determines whether a string is a valid tag.</span></span></summary>
        <returns><span data-ttu-id="31e5d-224">如果 <paramref name="tag" /> 参数是有效的 XML 标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-224"><see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-225">这可用于在 <xref:System.Security.SecurityElement.Tag%2A> 设置之前进行测试。</span><span class="sxs-lookup"><span data-stu-id="31e5d-225">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-226">下面的代码演示 <xref:System.Security.SecurityElement.IsValidTag%2A> 如何使用方法来确定字符串是否为有效的特性标记。</span><span class="sxs-lookup"><span data-stu-id="31e5d-226">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="31e5d-227">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-227">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsValidText : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="31e5d-228">要测试其有效性的文本。</span><span class="sxs-lookup"><span data-stu-id="31e5d-228">The text to test for validity.</span></span></param>
        <summary><span data-ttu-id="31e5d-229">确定字符串是否是 XML 元素中的有效文本。</span><span class="sxs-lookup"><span data-stu-id="31e5d-229">Determines whether a string is valid as text within an XML element.</span></span></summary>
        <returns><span data-ttu-id="31e5d-230">如果 <paramref name="text" /> 参数是有效的 XML 文本元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-230"><see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-231">此方法可用于 <xref:System.Security.SecurityElement.Text%2A> 在设置之前进行测试。</span><span class="sxs-lookup"><span data-stu-id="31e5d-231">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-232">下面的代码演示 <xref:System.Security.SecurityElement.IsValidText%2A> 如何使用方法来确定字符串是否是有效的 XML 元素文本。</span><span class="sxs-lookup"><span data-stu-id="31e5d-232">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="31e5d-233">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-233">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForChildByTag : string -&gt; System.Security.SecurityElement" Usage="securityElement.SearchForChildByTag tag" />
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement? SearchForChildByTag (string tag);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="31e5d-234">要在子元素中搜索的标记。</span><span class="sxs-lookup"><span data-stu-id="31e5d-234">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="31e5d-235">根据标记名查找子级。</span><span class="sxs-lookup"><span data-stu-id="31e5d-235">Finds a child by its tag name.</span></span></summary>
        <returns><span data-ttu-id="31e5d-236">具有指定标记值的第一个子 XML 元素，或者，如果具有 <paramref name="tag" /> 的子元素不存在，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-236">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-237">对于如下所示的 XML， `SearchForChildByTag("second")` 将返回子元素 `<second>` 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-237">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-238">下面的代码演示 <xref:System.Security.SecurityElement.SearchForChildByTag%2A> 如何使用方法通过其标记名称查找子级。</span><span class="sxs-lookup"><span data-stu-id="31e5d-238">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="31e5d-239">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-239">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e5d-240"><paramref name="tag" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-240">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForTextOfTag : string -&gt; string" Usage="securityElement.SearchForTextOfTag tag" />
      <MemberSignature Language="C#" Value="public string? SearchForTextOfTag (string tag);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="31e5d-241">要在子元素中搜索的标记。</span><span class="sxs-lookup"><span data-stu-id="31e5d-241">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="31e5d-242">根据标记名查找子级并返回所包含的文本。</span><span class="sxs-lookup"><span data-stu-id="31e5d-242">Finds a child by its tag name and returns the contained text.</span></span></summary>
        <returns><span data-ttu-id="31e5d-243">具有指定标记值的第一个子元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="31e5d-243">The text contents of the first child element with the specified tag value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-244">此方法等效于以下内容：</span><span class="sxs-lookup"><span data-stu-id="31e5d-244">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="31e5d-245">对于如下所示的 XML， `SearchForTextOfTag("second")` 将返回 "文本 2"。</span><span class="sxs-lookup"><span data-stu-id="31e5d-245">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-246">下面的代码演示 <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> 如何使用方法通过其标记名称查找子级并返回包含的文本。</span><span class="sxs-lookup"><span data-stu-id="31e5d-246">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="31e5d-247">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-247">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e5d-248"><paramref name="tag" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-248"><paramref name="tag" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : string with get, set" Usage="System.Security.SecurityElement.Tag" />
      <MemberSignature Language="C#" Value="public string? Tag { get; set; }" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31e5d-249">获取或设置 XML 元素的标记名称。</span><span class="sxs-lookup"><span data-stu-id="31e5d-249">Gets or sets the tag name of an XML element.</span></span></summary>
        <value><span data-ttu-id="31e5d-250">XML 元素的标记名称。</span><span class="sxs-lookup"><span data-stu-id="31e5d-250">The tag name of an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-251">在 XML 中，标记显示在脚本中，如下所示：</span><span class="sxs-lookup"><span data-stu-id="31e5d-251">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="31e5d-252">如果此元素包含子元素，则子级将替换 `text` 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-252">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="31e5d-253">仅将有效的 XML 标记字符串分配给此属性。</span><span class="sxs-lookup"><span data-stu-id="31e5d-253">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="31e5d-254">用于 <xref:System.Security.SecurityElement.Escape%2A> 从字符串中删除无效字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-254">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-255">下面的代码演示 <xref:System.Security.SecurityElement.Tag%2A> 如何使用属性来获取 XML 元素的标记名称。</span><span class="sxs-lookup"><span data-stu-id="31e5d-255">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="31e5d-256">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-256">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e5d-257">标记为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e5d-257">The tag is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31e5d-258">标记在 XML 中无效。</span><span class="sxs-lookup"><span data-stu-id="31e5d-258">The tag is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Security.SecurityElement.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31e5d-259">获取或设置 XML 元素中的文本。</span><span class="sxs-lookup"><span data-stu-id="31e5d-259">Gets or sets the text within an XML element.</span></span></summary>
        <value><span data-ttu-id="31e5d-260">XML 元素中文本的值。</span><span class="sxs-lookup"><span data-stu-id="31e5d-260">The value of the text within an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-261">文本不应包含 XML 特殊字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-261">The text should not contain XML special characters.</span></span> <span data-ttu-id="31e5d-262">用于 <xref:System.Security.SecurityElement.Escape%2A> 从字符串中删除无效字符。</span><span class="sxs-lookup"><span data-stu-id="31e5d-262">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="31e5d-263">如果 <xref:System.Security.SecurityElement> 包含 <xref:System.Security.SecurityElement.Text%2A> 和 <xref:System.Security.SecurityElement.Children%2A> ， <xref:System.Security.SecurityElement.Text%2A> 将首先显示。</span><span class="sxs-lookup"><span data-stu-id="31e5d-263">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31e5d-264">下面的代码演示 <xref:System.Security.SecurityElement.Text%2A> 如何使用属性来获取 XML 元素的文本。</span><span class="sxs-lookup"><span data-stu-id="31e5d-264">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="31e5d-265">此代码示例是为类提供的更大示例的一部分 <xref:System.Security.SecurityElement> 。</span><span class="sxs-lookup"><span data-stu-id="31e5d-265">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31e5d-266">文本在 XML 中无效。</span><span class="sxs-lookup"><span data-stu-id="31e5d-266">The text is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31e5d-267">产生 XML 元素及其构成特性、子元素和文本的字符串表示法。</span><span class="sxs-lookup"><span data-stu-id="31e5d-267">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span></span></summary>
        <returns><span data-ttu-id="31e5d-268">XML 元素及其内容。</span><span class="sxs-lookup"><span data-stu-id="31e5d-268">The XML element and its contents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e5d-269">此方法在调试时非常有用，可查看元素的 XML 表示形式。</span><span class="sxs-lookup"><span data-stu-id="31e5d-269">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
