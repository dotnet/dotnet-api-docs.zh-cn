<Type Name="TransactionScope" FullName="System.Activities.Statements.TransactionScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6113ff5490f24612237100f4f644fa9a9860f0ee" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86834837" /></Metadata><TypeSignature Language="C#" Value="public sealed class TransactionScope : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TransactionScope extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.TransactionScope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransactionScope&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactionScope sealed : System::Activities::NativeActivity" />
  <TypeSignature Language="F#" Value="type TransactionScope = class&#xA;    inherit NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.ContentProperty("Body")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.ContentProperty("Body")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>一个划分事务边界的活动。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此活动开始执行时，将会启动一个新的 <xref:System.Transactions.Transaction>（如果该事务尚不存在）。 该事务将在活动以及事务中的所有其他参与者成功完成时提交。  
  
> [!NOTE]
>  <xref:System.Activities.Statements.TryCatch.Finally%2A> <xref:System.Activities.Statements.TryCatch> 如果未经处理的异常传播到边界之后，则为的子活动的活动成员 <xref:System.Activities.Statements.TransactionScope> 将不会执行 <xref:System.Activities.Statements.TransactionScope> 。  
  
   
  
## Examples  
 下面的代码示例演示如何创建 <xref:System.Activities.Statements.TransactionScope> 活动。 此示例来自 [基本 TransactionScope](/dotnet/framework/windows-workflow-foundation/samples/basic-transactionscope) 示例。  
  
 [!code-csharp[wfs_NestedTransactionScope#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nestedtransactionscope/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TransactionScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Activities.Statements.TransactionScope" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何创建 <xref:System.Activities.Statements.TransactionScope> 活动。 此示例来自 [基本 TransactionScope](/dotnet/framework/windows-workflow-foundation/samples/basic-transactionscope) 示例。  
  
 [!code-csharp[wfs_NestedTransactionScope#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nestedtransactionscope/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortInstanceOnTransactionFailure">
      <MemberSignature Language="C#" Value="public bool AbortInstanceOnTransactionFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AbortInstanceOnTransactionFailure" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property AbortInstanceOnTransactionFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AbortInstanceOnTransactionFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AbortInstanceOnTransactionFailure : bool with get, set" Usage="System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置值，该值指示在事务中止的情况下是否应中止工作流。</summary>
        <value>如果应中止该工作流，则为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性在运行时为只读。 如果在运行时设置值，则会引发 <xref:System.InvalidOperationException>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity Body" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TransactionScope.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ Body { System::Activities::Activity ^ get(); void set(System::Activities::Activity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Body : System.Activities.Activity with get, set" Usage="System.Activities.Statements.TransactionScope.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Activities.Statements.TransactionScope" /> 执行时安排的活动。</summary>
        <value>在 <see cref="T:System.Activities.Statements.TransactionScope" /> 执行时安排的活动。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性在运行时为只读。 如果在运行时设置值，则会引发 <xref:System.InvalidOperationException>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberSignature Language="F#" Value="override this.CacheMetadata : System.Activities.NativeActivityMetadata -&gt; unit" Usage="transactionScope.CacheMetadata metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInduceIdle">
      <MemberSignature Language="C#" Value="protected override bool CanInduceIdle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInduceIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TransactionScope.CanInduceIdle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanInduceIdle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanInduceIdle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInduceIdle : bool" Usage="System.Activities.Statements.TransactionScope.CanInduceIdle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Activities.NativeActivityContext -&gt; unit" Usage="transactionScope.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public System.Transactions.IsolationLevel IsolationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Transactions.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TransactionScope.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Transactions::IsolationLevel IsolationLevel { System::Transactions::IsolationLevel get(); void set(System::Transactions::IsolationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.IsolationLevel : System.Transactions.IsolationLevel with get, set" Usage="System.Activities.Statements.TransactionScope.IsolationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Transactions.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此 <see cref="T:System.Transactions.IsolationLevel" /> 的 <see cref="T:System.Activities.Statements.TransactionScope" />。</summary>
        <value>用于此 <see cref="T:System.Transactions.IsolationLevel" /> 的 <see cref="T:System.Activities.Statements.TransactionScope" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性在运行时为只读。 如果在运行时设置值，则会引发 <xref:System.InvalidOperationException>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeIsolationLevel">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeIsolationLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeIsolationLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeIsolationLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeIsolationLevel();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeIsolationLevel : unit -&gt; bool" Usage="transactionScope.ShouldSerializeIsolationLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否应序列化此 <see cref="P:System.Activities.Statements.TransactionScope.IsolationLevel" /> 的 <see cref="T:System.Activities.Statements.TransactionScope" />。</summary>
        <returns>如果应当序列化 <see cref="P:System.Activities.Statements.TransactionScope.IsolationLevel" /> 属性值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTimeout">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TransactionScope.ShouldSerializeTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTimeout () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTimeout();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTimeout : unit -&gt; bool" Usage="transactionScope.ShouldSerializeTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否应序列化此 <see cref="P:System.Activities.Statements.TransactionScope.Timeout" /> 的 <see cref="T:System.Activities.Statements.TransactionScope" />。</summary>
        <returns>如果应当序列化 <see cref="P:System.Activities.Statements.TransactionScope.Timeout" /> 属性值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;TimeSpan&gt; Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;valuetype System.TimeSpan&gt; Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TransactionScope.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As InArgument(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;TimeSpan&gt; ^ Timeout { System::Activities::InArgument&lt;TimeSpan&gt; ^ get(); void set(System::Activities::InArgument&lt;TimeSpan&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : System.Activities.InArgument&lt;TimeSpan&gt; with get, set" Usage="System.Activities.Statements.TransactionScope.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.TimeSpan" />，它指示用于此 <see cref="T:System.Activities.Statements.TransactionScope" /> 的事务的超时期限。</summary>
        <value>指示用于此 <see cref="T:System.TimeSpan" /> 的事务的超时期限的 <see cref="T:System.Activities.Statements.TransactionScope" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性在运行时为只读。 如果在运行时设置值，则会引发 <xref:System.InvalidOperationException>。  
  
   
  
## Examples  
 下面的代码示例演示如何设置 <xref:System.Activities.Statements.TransactionScope> 活动的 Timeout 属性。 此示例来自 [基本 TransactionScope](/dotnet/framework/windows-workflow-foundation/samples/basic-transactionscope) 示例。  
  
 [!code-csharp[wfs_NestedTransactionScope#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nestedtransactionscope/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
