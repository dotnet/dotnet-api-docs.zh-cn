<Type Name="DurableTimerExtension" FullName="System.Activities.Statements.DurableTimerExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f381ecb3c91ef09b2c63bab21580077bdd5e19c6" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86835877" /></Metadata><TypeSignature Language="C#" Value="public class DurableTimerExtension : System.Activities.Statements.TimerExtension, IDisposable, System.Activities.Hosting.IWorkflowInstanceExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DurableTimerExtension extends System.Activities.Statements.TimerExtension implements class System.Activities.Hosting.IWorkflowInstanceExtension, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.DurableTimerExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class DurableTimerExtension&#xA;Inherits TimerExtension&#xA;Implements IDisposable, IWorkflowInstanceExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class DurableTimerExtension : System::Activities::Statements::TimerExtension, IDisposable, System::Activities::Hosting::IWorkflowInstanceExtension" />
  <TypeSignature Language="F#" Value="type DurableTimerExtension = class&#xA;    inherit TimerExtension&#xA;    interface IWorkflowInstanceExtension&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Statements.TimerExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Hosting.IWorkflowInstanceExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示可保留的活动计时器扩展。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Statements.DurableTimerExtension>对象只能与单个工作流实例相关联。 如果 <xref:System.Activities.Statements.DurableTimerExtension> 对象与多个工作流实例一起使用， <xref:System.InvalidOperationException> 将引发并带有以下消息：  
  
```Output  
This TimerExtension has already been attached to a workflow instance.  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DurableTimerExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DurableTimerExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Activities.Statements.DurableTimerExtension" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="durableTimerExtension.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>终止所有注册的计时器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdditionalExtensions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetAdditionalExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAdditionalExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdditionalExtensions () As IEnumerable(Of Object)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAdditionalExtensions();" />
      <MemberSignature Language="F#" Value="abstract member GetAdditionalExtensions : unit -&gt; seq&lt;obj&gt;&#xA;override this.GetAdditionalExtensions : unit -&gt; seq&lt;obj&gt;" Usage="durableTimerExtension.GetAdditionalExtensions " />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable Function GetAdditionalExtensions () As IEnumerable(Of Object)" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Statements.DurableTimerExtension/&lt;GetAdditionalExtensions&gt;d__1))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Statements.DurableTimerExtension/&lt;GetAdditionalExtensions&gt;d__1))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Statements.DurableTimerExtension/&lt;GetAdditionalExtensions&gt;d__16))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Statements.DurableTimerExtension/&lt;GetAdditionalExtensions&gt;d__16))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个循环访问计时器扩展集合的枚举器。</summary>
        <returns>枚举器。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancelTimer">
      <MemberSignature Language="C#" Value="protected override void OnCancelTimer (System.Activities.Bookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCancelTimer(class System.Activities.Bookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.OnCancelTimer(System.Activities.Bookmark)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCancelTimer (bookmark As Bookmark)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCancelTimer(System::Activities::Bookmark ^ bookmark);" />
      <MemberSignature Language="F#" Value="override this.OnCancelTimer : System.Activities.Bookmark -&gt; unit" Usage="durableTimerExtension.OnCancelTimer bookmark" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
      </Parameters>
      <Docs>
        <param name="bookmark">工作流或活动可在计时器对象过期后被动等待恢复的点。</param>
        <summary>从当前工作流操作的已注册计时器表中移除计时器对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRegisterTimer">
      <MemberSignature Language="C#" Value="protected override void OnRegisterTimer (TimeSpan timeout, System.Activities.Bookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRegisterTimer(valuetype System.TimeSpan timeout, class System.Activities.Bookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRegisterTimer (timeout As TimeSpan, bookmark As Bookmark)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRegisterTimer(TimeSpan timeout, System::Activities::Bookmark ^ bookmark);" />
      <MemberSignature Language="F#" Value="override this.OnRegisterTimer : TimeSpan * System.Activities.Bookmark -&gt; unit" Usage="durableTimerExtension.OnRegisterTimer (timeout, bookmark)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
      </Parameters>
      <Docs>
        <param name="timeout">一个随回调信息一起添加到工作流操作中的计时器注册表条目的时间跨度对象。</param>
        <param name="bookmark">工作流或活动可在计时器对象过期后被动等待恢复的点。</param>
        <summary>将包含指定时间跨度和书签信息的计时器对象添加到当前工作流操作的已注册计时器表。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInstance">
      <MemberSignature Language="C#" Value="public virtual void SetInstance (System.Activities.Hosting.WorkflowInstanceProxy instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInstance(class System.Activities.Hosting.WorkflowInstanceProxy instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetInstance (instance As WorkflowInstanceProxy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetInstance(System::Activities::Hosting::WorkflowInstanceProxy ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member SetInstance : System.Activities.Hosting.WorkflowInstanceProxy -&gt; unit&#xA;override this.SetInstance : System.Activities.Hosting.WorkflowInstanceProxy -&gt; unit" Usage="durableTimerExtension.SetInstance instance" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.Hosting.WorkflowInstanceProxy" />
      </Parameters>
      <Docs>
        <param name="instance">要设为当前实例的工作流实例。</param>
        <summary>使指定的工作流实例成为当前实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Statements.DurableTimerExtension>对象只能与单个工作流实例相关联。 如果 <xref:System.Activities.Statements.DurableTimerExtension> 对象与多个工作流实例一起使用， <xref:System.InvalidOperationException> 将引发并带有以下消息：  
  
```Output  
This TimerExtension has already been attached to a workflow instance.  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
