<Type Name="Switch&lt;T&gt;" FullName="System.Activities.Statements.Switch&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e58aa7b17f9a7ab966cd685842d4233ff3c3df8c" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83918697" /></Metadata><TypeSignature Language="C#" Value="public sealed class Switch&lt;T&gt; : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Switch`1&lt;T&gt; extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.Switch`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Switch(Of T)&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Switch sealed : System::Activities::NativeActivity" />
  <TypeSignature Language="F#" Value="type Switch&lt;'T&gt; = class&#xA;    inherit NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Cases")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="47cc7-101"><see cref="P:System.Activities.Statements.Switch`1.Cases" /> 集合中提供的值的类型。</span><span class="sxs-lookup"><span data-stu-id="47cc7-101">The type of the values provided in the <see cref="P:System.Activities.Statements.Switch`1.Cases" /> collection.</span></span></typeparam>
    <summary><span data-ttu-id="47cc7-102">基于给定表达式（在此对象的类型说明符中指定了其类型）的值，从要执行的多个活动中选择一个活动。</span><span class="sxs-lookup"><span data-stu-id="47cc7-102">Selects one choice from a number of activities to execute, based on the value of a given expression of the type specified in this object's type specifier.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47cc7-103"><xref:System.Activities.Statements.Switch%601.Cases%2A> 字典中的每个 case 都由一个值（充当字典的键）和一个活动（充当字典的值）组成。</span><span class="sxs-lookup"><span data-stu-id="47cc7-103">Each case in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary consists of a value (serving as the key for the dictionary) and an activity (serving as the value for the dictionary).</span></span> <span data-ttu-id="47cc7-104">将计算 <xref:System.Activities.Statements.Switch`1.Expression%2A>，并将其与 <xref:System.Activities.Statements.Switch%601.Cases%2A> 字典中的键进行比较。</span><span class="sxs-lookup"><span data-stu-id="47cc7-104">The <xref:System.Activities.Statements.Switch`1.Expression%2A> is evaluated and compared against the keys in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary.</span></span> <span data-ttu-id="47cc7-105">如果找到匹配项，则会执行对应的活动。</span><span class="sxs-lookup"><span data-stu-id="47cc7-105">If a match is found, the corresponding activity is executed.</span></span> <span data-ttu-id="47cc7-106">根据字典的相等比较器，<xref:System.Activities.Statements.Switch%601.Cases%2A> 字典中的每个键都必须是唯一的。</span><span class="sxs-lookup"><span data-stu-id="47cc7-106">Every key in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary must be unique according to the dictionary's equality comparer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47cc7-107">下面的代码示例演示如何创建 <xref:System.Activities.Statements.Switch%601> 活动。</span><span class="sxs-lookup"><span data-stu-id="47cc7-107">The following code sample demonstrates creating a <xref:System.Activities.Statements.Switch%601> activity.</span></span> <span data-ttu-id="47cc7-108">此示例来自于[使用过程活动](/dotnet/framework/windows-workflow-foundation/samples/using-procedural-activities)示例。</span><span class="sxs-lookup"><span data-stu-id="47cc7-108">This example is from the [Using Procedural Activities](/dotnet/framework/windows-workflow-foundation/samples/using-procedural-activities) sample.</span></span>  
  
 [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47cc7-109">创建 <see cref="T:System.Activities.Statements.Switch`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="47cc7-109">Creates a new instance of the <see cref="T:System.Activities.Statements.Switch`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47cc7-110">下面的代码示例演示如何创建 <xref:System.Activities.Statements.Switch%601> 活动。</span><span class="sxs-lookup"><span data-stu-id="47cc7-110">The following code sample demonstrates creating a <xref:System.Activities.Statements.Switch%601> activity.</span></span> <span data-ttu-id="47cc7-111">此示例来自于[使用过程活动](/dotnet/framework/windows-workflow-foundation/samples/using-procedural-activities)示例。</span><span class="sxs-lookup"><span data-stu-id="47cc7-111">This example is from the [Using Procedural Activities](/dotnet/framework/windows-workflow-foundation/samples/using-procedural-activities) sample.</span></span>  
  
 [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Switch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Switch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47cc7-112">创建 <see cref="T:System.Activities.Statements.Switch`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="47cc7-112">Creates a new instance of the <see cref="T:System.Activities.Statements.Switch`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47cc7-113">下面的代码示例演示如何创建 <xref:System.Activities.Statements.Switch%601> 活动。</span><span class="sxs-lookup"><span data-stu-id="47cc7-113">The following code sample demonstrates creating a <xref:System.Activities.Statements.Switch%601> activity.</span></span> <span data-ttu-id="47cc7-114">此示例来自于[使用过程活动](/dotnet/framework/windows-workflow-foundation/samples/using-procedural-activities)示例。</span><span class="sxs-lookup"><span data-stu-id="47cc7-114">This example is from the [Using Procedural Activities](/dotnet/framework/windows-workflow-foundation/samples/using-procedural-activities) sample.</span></span>  
  
 [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Switch (System.Activities.Activity&lt;T&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity`1&lt;!T&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As Activity(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Switch(System::Activities::Activity&lt;T&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Activities.Statements.Switch&lt;'T&gt; : System.Activities.Activity&lt;'T&gt; -&gt; System.Activities.Statements.Switch&lt;'T&gt;" Usage="new System.Activities.Statements.Switch&lt;'T&gt; expression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.Activity&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="47cc7-115">要计算并与 <see cref="P:System.Activities.Statements.Switch`1.Cases" /> 字典中的值进行比较的表达式。</span><span class="sxs-lookup"><span data-stu-id="47cc7-115">The expression to evaluate and compare against the values in the <see cref="P:System.Activities.Statements.Switch`1.Cases" /> dictionary.</span></span></param>
        <summary><span data-ttu-id="47cc7-116">使用指定的表达式创建 <see cref="T:System.Activities.Statements.Switch`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="47cc7-116">Creates a new instance of the <see cref="T:System.Activities.Statements.Switch`1" /> class with the specified expression.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Switch (System.Activities.InArgument&lt;T&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.InArgument`1&lt;!T&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As InArgument(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Switch(System::Activities::InArgument&lt;T&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Activities.Statements.Switch&lt;'T&gt; : System.Activities.InArgument&lt;'T&gt; -&gt; System.Activities.Statements.Switch&lt;'T&gt;" Usage="new System.Activities.Statements.Switch&lt;'T&gt; expression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.InArgument&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="47cc7-117">要计算并与 <see cref="P:System.Activities.Statements.Switch`1.Cases" /> 字典中的值进行比较的表达式。</span><span class="sxs-lookup"><span data-stu-id="47cc7-117">The expression to evaluate and compare against the values in the <see cref="P:System.Activities.Statements.Switch`1.Cases" /> dictionary.</span></span></param>
        <summary><span data-ttu-id="47cc7-118">使用指定的表达式创建 <see cref="T:System.Activities.Statements.Switch`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="47cc7-118">Creates a new instance of the <see cref="T:System.Activities.Statements.Switch`1" /> class with the specified expression.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Switch (System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext,T&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.Activities.ActivityContext, !T&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As Expression(Of Func(Of ActivityContext, T)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Switch(System::Linq::Expressions::Expression&lt;Func&lt;System::Activities::ActivityContext ^, T&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Activities.Statements.Switch&lt;'T&gt; : System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext, 'T&gt;&gt; -&gt; System.Activities.Statements.Switch&lt;'T&gt;" Usage="new System.Activities.Statements.Switch&lt;'T&gt; expression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Activities.ActivityContext,T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="47cc7-119">要计算并与 <see cref="P:System.Activities.Statements.Switch`1.Cases" /> 字典中的值进行比较的表达式。</span><span class="sxs-lookup"><span data-stu-id="47cc7-119">The expression to evaluate and compare against the values in the <see cref="P:System.Activities.Statements.Switch`1.Cases" /> dictionary.</span></span></param>
        <summary><span data-ttu-id="47cc7-120">使用指定的表达式创建 <see cref="T:System.Activities.Statements.Switch`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="47cc7-120">Creates a new instance of the <see cref="T:System.Activities.Statements.Switch`1" /> class with the specified expression.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberSignature Language="F#" Value="override this.CacheMetadata : System.Activities.NativeActivityMetadata -&gt; unit" Usage="switch.CacheMetadata metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cases">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;T,System.Activities.Activity&gt; Cases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!T, class System.Activities.Activity&gt; Cases" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Switch`1.Cases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cases As IDictionary(Of T, Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;T, System::Activities::Activity ^&gt; ^ Cases { System::Collections::Generic::IDictionary&lt;T, System::Activities::Activity ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cases : System.Collections.Generic.IDictionary&lt;'T, System.Activities.Activity&gt;" Usage="System.Activities.Statements.Switch&lt;'T&gt;.Cases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;T,System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47cc7-121">表示可能执行路径的字典。</span><span class="sxs-lookup"><span data-stu-id="47cc7-121">Represents the dictionary of potential execution paths.</span></span> <span data-ttu-id="47cc7-122">每个条目都包含一个键以及一个将在表达式结果与该键匹配时执行的活动。</span><span class="sxs-lookup"><span data-stu-id="47cc7-122">Each entry contains a key and an activity that is executed when the result of the expression matches the key.</span></span></summary>
        <value><span data-ttu-id="47cc7-123">执行路径。</span><span class="sxs-lookup"><span data-stu-id="47cc7-123">The execution paths.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47cc7-124">当该活动执行时，所执行的 case 是其键与 <xref:System.Activities.Statements.Switch`1.Expression%2A> 属性匹配的第一个 case。</span><span class="sxs-lookup"><span data-stu-id="47cc7-124">When the activity executes, the case that is executed is the first case whose key matches the <xref:System.Activities.Statements.Switch`1.Expression%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47cc7-125">下面的代码示例演示如何设置 <xref:System.Activities.Statements.Switch%601> 活动的 Cases 属性。</span><span class="sxs-lookup"><span data-stu-id="47cc7-125">The following code sample demonstrates setting the Cases property of a <xref:System.Activities.Statements.Switch%601> activity.</span></span> <span data-ttu-id="47cc7-126">此示例来自于[使用过程活动](/dotnet/framework/windows-workflow-foundation/samples/using-procedural-activities)示例。</span><span class="sxs-lookup"><span data-stu-id="47cc7-126">This example is from the [Using Procedural Activities](/dotnet/framework/windows-workflow-foundation/samples/using-procedural-activities) sample.</span></span>  
  
 [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Default { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity Default" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Switch`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Property Default As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ Default { System::Activities::Activity ^ get(); void set(System::Activities::Activity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Activities.Activity with get, set" Usage="System.Activities.Statements.Switch&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47cc7-127">表示在 <see cref="P:System.Activities.Statements.Switch`1.Cases" /> 集合中没有条目键与 <see cref="P:System.Activities.Statements.Switch`1.Expression" /> 属性匹配的情况下执行的活动。</span><span class="sxs-lookup"><span data-stu-id="47cc7-127">Represents the activity that is executed if no keys of entries in the <see cref="P:System.Activities.Statements.Switch`1.Cases" /> collection match the <see cref="P:System.Activities.Statements.Switch`1.Expression" /> property.</span></span></summary>
        <value><span data-ttu-id="47cc7-128">要执行的默认活动。</span><span class="sxs-lookup"><span data-stu-id="47cc7-128">The default activity to execute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Activities.NativeActivityContext -&gt; unit" Usage="switch.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;T&gt; Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;!T&gt; Expression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Switch`1.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As InArgument(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;T&gt; ^ Expression { System::Activities::InArgument&lt;T&gt; ^ get(); void set(System::Activities::InArgument&lt;T&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Activities.InArgument&lt;'T&gt; with get, set" Usage="System.Activities.Statements.Switch&lt;'T&gt;.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47cc7-129">获取要与 <see cref="P:System.Activities.Statements.Switch`1.Cases" /> 集合中的键进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="47cc7-129">Gets the object to compare to the keys in the <see cref="P:System.Activities.Statements.Switch`1.Cases" /> collection.</span></span></summary>
        <value><span data-ttu-id="47cc7-130">要与 <see cref="P:System.Activities.Statements.Switch`1.Cases" /> 集合中的键进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="47cc7-130">The object to compare to the keys in the <see cref="P:System.Activities.Statements.Switch`1.Cases" /> collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47cc7-131">在计算表达式之后进行比较。</span><span class="sxs-lookup"><span data-stu-id="47cc7-131">The comparison occurs after the expression is evaluated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47cc7-132">下面的代码示例演示如何设置 <xref:System.Activities.Statements.Switch%601> 活动的 Expression 属性。</span><span class="sxs-lookup"><span data-stu-id="47cc7-132">The following code sample demonstrates setting the Expression property of a <xref:System.Activities.Statements.Switch%601> activity.</span></span> <span data-ttu-id="47cc7-133">此示例来自于[使用过程活动](/dotnet/framework/windows-workflow-foundation/samples/using-procedural-activities)示例。</span><span class="sxs-lookup"><span data-stu-id="47cc7-133">This example is from the [Using Procedural Activities](/dotnet/framework/windows-workflow-foundation/samples/using-procedural-activities) sample.</span></span>  
  
 [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberSignature Language="F#" Value="override this.OnCreateDynamicUpdateMap : System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata * System.Activities.Activity -&gt; unit" Usage="switch.OnCreateDynamicUpdateMap (metadata, originalActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="originalActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
