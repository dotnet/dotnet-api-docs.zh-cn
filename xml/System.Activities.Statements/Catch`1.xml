<Type Name="Catch&lt;TException&gt;" FullName="System.Activities.Statements.Catch&lt;TException&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec4c813608ade20d9709d0f5864a172a70834781" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83976660" /></Metadata><TypeSignature Language="C#" Value="public sealed class Catch&lt;TException&gt; : System.Activities.Statements.Catch where TException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Catch`1&lt;(class System.Exception) TException&gt; extends System.Activities.Statements.Catch" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.Catch`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Catch(Of TException)&#xA;Inherits Catch" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TException&gt;&#xA; where TException : Exceptionpublic ref class Catch sealed : System::Activities::Statements::Catch" />
  <TypeSignature Language="F#" Value="type Catch&lt;'Exception (requires 'Exception :&gt; Exception)&gt; = class&#xA;    inherit Catch" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TException">
      <Constraints>
        <BaseTypeName>System.Exception</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.Statements.Catch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Action")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TException"><span data-ttu-id="050f1-101"><see cref="T:System.Activities.Statements.Catch`1" /> 块正在处理的异常的类型。</span><span class="sxs-lookup"><span data-stu-id="050f1-101">The type of exception that the <see cref="T:System.Activities.Statements.Catch`1" /> block is handling.</span></span></typeparam>
    <summary><span data-ttu-id="050f1-102">包含要在 <see cref="T:System.Activities.Statements.TryCatch.Finally" /> 活动的对应 Try 块中引发了异常之后执行的操作。</span><span class="sxs-lookup"><span data-stu-id="050f1-102">Contains the actions to be executed after an exception is raised in the corresponding Try block of a <see cref="T:System.Activities.Statements.TryCatch.Finally" /> activity.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050f1-103">放入设计器后，不能在设计器中对 <xref:System.Activities.Statements.Catch> 活动重新排序。</span><span class="sxs-lookup"><span data-stu-id="050f1-103">Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer.</span></span>  <span data-ttu-id="050f1-104">若要重新排列 <xref:System.Activities.Statements.Catch> 活动的集合，请按正确的顺序删除并重新添加它们，或对工作流使用 xaml （代码）视图。</span><span class="sxs-lookup"><span data-stu-id="050f1-104">To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="050f1-105">下面的代码示例演示如何创建 <xref:System.Activities.Statements.Catch%601> 活动。</span><span class="sxs-lookup"><span data-stu-id="050f1-105">The following code sample demonstrates creating a <xref:System.Activities.Statements.Catch%601> activity.</span></span> <span data-ttu-id="050f1-106">此示例来自[使用 TryCatch 示例的 Flowchart 活动中的错误处理](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch)。</span><span class="sxs-lookup"><span data-stu-id="050f1-106">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Catch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Catch`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Catch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="050f1-107">创建 <see cref="T:System.Activities.Statements.Catch`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="050f1-107">Creates a new instance of the <see cref="T:System.Activities.Statements.Catch`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="050f1-108">下面的代码示例演示如何创建 <xref:System.Activities.Statements.Catch%601> 活动。</span><span class="sxs-lookup"><span data-stu-id="050f1-108">The following code sample demonstrates creating a <xref:System.Activities.Statements.Catch%601> activity.</span></span> <span data-ttu-id="050f1-109">此示例来自[使用 TryCatch 示例的 Flowchart 活动中的错误处理](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch)。</span><span class="sxs-lookup"><span data-stu-id="050f1-109">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityAction&lt;TException&gt; Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ActivityAction`1&lt;!TException&gt; Action" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Catch`1.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As ActivityAction(Of TException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::ActivityAction&lt;TException&gt; ^ Action { System::Activities::ActivityAction&lt;TException&gt; ^ get(); void set(System::Activities::ActivityAction&lt;TException&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Activities.ActivityAction&lt;'Exception (requires 'Exception :&gt; Exception)&gt; with get, set" Usage="System.Activities.Statements.Catch&lt;'Exception (requires 'Exception :&gt; System.Exception)&gt;.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityAction&lt;TException&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050f1-110">所捕获异常的处理程序。</span><span class="sxs-lookup"><span data-stu-id="050f1-110">The handler for the exception being caught.</span></span></summary>
        <value><span data-ttu-id="050f1-111">活动操作。</span><span class="sxs-lookup"><span data-stu-id="050f1-111">The activity action.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="050f1-112">异常处理程序由 <xref:System.Activities.ActivityAction%601> 对象表示。</span><span class="sxs-lookup"><span data-stu-id="050f1-112">The exception handler is represented by a <xref:System.Activities.ActivityAction%601> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="050f1-113">下面的代码示例演示如何分配 <xref:System.Activities.Statements.Catch%601> 活动的 Action 属性。</span><span class="sxs-lookup"><span data-stu-id="050f1-113">The following code sample demonstrates assigning the Action property of a <xref:System.Activities.Statements.Catch%601> activity.</span></span> <span data-ttu-id="050f1-114">此示例来自[使用 TryCatch 示例的 Flowchart 活动中的错误处理](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch)。</span><span class="sxs-lookup"><span data-stu-id="050f1-114">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](/dotnet/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionType">
      <MemberSignature Language="C#" Value="public override Type ExceptionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExceptionType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Catch`1.ExceptionType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ExceptionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ExceptionType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionType : Type" Usage="System.Activities.Statements.Catch&lt;'Exception (requires 'Exception :&gt; System.Exception)&gt;.ExceptionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="050f1-115"><see cref="T:System.Activities.Statements.Catch" /> 块正在处理的异常的类型。</span><span class="sxs-lookup"><span data-stu-id="050f1-115">The type of exception that the <see cref="T:System.Activities.Statements.Catch" /> block is handling.</span></span></summary>
        <value><span data-ttu-id="050f1-116">异常类型。</span><span class="sxs-lookup"><span data-stu-id="050f1-116">The exception type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
