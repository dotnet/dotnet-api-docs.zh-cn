<Type Name="IPGlobalProperties" FullName="System.Net.NetworkInformation.IPGlobalProperties">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d3c9468b5b4aa0d959a71a988c8ecf2aaa6e813" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89817660" /></Metadata><TypeSignature Language="C#" Value="public abstract class IPGlobalProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IPGlobalProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.IPGlobalProperties" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IPGlobalProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPGlobalProperties abstract" />
  <TypeSignature Language="F#" Value="type IPGlobalProperties = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.NetworkInformation" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="68f10-101">提供有关本地计算机的网络连接的信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-101">Provides information about the network connectivity of the local computer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-102">此类提供有关本地计算机的网络接口和网络连接的配置和统计信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-102">This class provides configuration and statistical information about the local computer's network interfaces and network connections.</span></span>  
  
 <span data-ttu-id="68f10-103">此类提供的信息类似于 Internet 协议帮助器 API 函数提供的信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-103">The information provided by this class is similar to that provided by the Internet Protocol Helper API functions.</span></span> <span data-ttu-id="68f10-104">有关 Internet 协议帮助器的信息，请参阅 MSDN Library 中的文档。</span><span class="sxs-lookup"><span data-stu-id="68f10-104">For information about the Internet Protocol Helper, see the documentation in the MSDN Library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-105">下面的代码示例使用此类的实例显示有关本地计算机的信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-105">The following code example displays information about the local computer using an instance of this class.</span></span>  
  
 [!code-cpp[NclNetInfo2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#15)]
 [!code-csharp[NclNetInfo2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#15)]
 [!code-vb[NclNetInfo2#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#15)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IPGlobalProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IPGlobalProperties();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-106">初始化 <see cref="T:System.Net.NetworkInformation.IPGlobalProperties" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="68f10-106">Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IPGlobalProperties" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-107">此构造函数只能由派生自的类调用 <xref:System.Net.NetworkInformation.IPGlobalProperties> 。</span><span class="sxs-lookup"><span data-stu-id="68f10-107">This constructor can be called only by classes derived from <xref:System.Net.NetworkInformation.IPGlobalProperties>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetUnicastAddresses">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult? BeginGetUnicastAddresses (AsyncCallback callback, object state);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetUnicastAddresses(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetUnicastAddresses (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetUnicastAddresses(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetUnicastAddresses : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetUnicastAddresses : AsyncCallback * obj -&gt; IAsyncResult" Usage="iPGlobalProperties.BeginGetUnicastAddresses (callback, state)" />
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetUnicastAddresses (AsyncCallback callback, object state);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="68f10-108"><see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="68f10-108">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="68f10-109">一个对象，它包含此请求的状态信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-109">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="68f10-110">开始一个异步请求，该请求用于检索本地计算机上稳定的单播 IP 地址表。</span><span class="sxs-lookup"><span data-stu-id="68f10-110">Begins an asynchronous request to retrieve the stable unicast IP address table on the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-111">引用该异步请求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="68f10-111">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-112">为了支持出站连接或接受 Teredo 接口上的传入连接，应用程序需要确保 Teredo 接口已启动并可供使用。</span><span class="sxs-lookup"><span data-stu-id="68f10-112">In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use.</span></span> <span data-ttu-id="68f10-113">这是因为，如果在一段时间内未使用 Teredo，则它会进入休眠状态。</span><span class="sxs-lookup"><span data-stu-id="68f10-113">This is because Teredo can go into a dormant state when not used for some period of time.</span></span>  
  
 <span data-ttu-id="68f10-114"><xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A>方法允许应用程序以异步方式检索稳定的单播 IP 地址的列表。</span><span class="sxs-lookup"><span data-stu-id="68f10-114">The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses.</span></span> <span data-ttu-id="68f10-115"><xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType>属性可用于确定 IP 地址是否为前缀为2001::/32 的 IPv6 Teredo 地址。</span><span class="sxs-lookup"><span data-stu-id="68f10-115">The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.</span></span>  
  
 <span data-ttu-id="68f10-116">此 <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> 方法还返回非 Teredo 地址，并提供一种更方便的方法来获取系统的单播 IP 地址，而不是枚举 <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> 本地计算机上的所有对象并查询关联的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="68f10-116">The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objects on a local computer and querying the associated IP addresses.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="68f10-117">此方法未在平台上实现。</span><span class="sxs-lookup"><span data-stu-id="68f10-117">This method is not implemented on the platform.</span></span> <span data-ttu-id="68f10-118">此方法使用 Windows Vista 和更高版本的操作系统支持的本机 <see langword="NotifyStableUnicastIpAddressTable" /> 函数。</span><span class="sxs-lookup"><span data-stu-id="68f10-118">This method uses the native <see langword="NotifyStableUnicastIpAddressTable" /> function that is supported on Windows Vista and later.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68f10-119">调用本机 <see langword="NotifyStableUnicastIpAddressTable" /> 函数失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-119">The call to the native <see langword="NotifyStableUnicastIpAddressTable" /> function failed.</span></span></exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      </Docs>
    </Member>
    <Member MemberName="DhcpScopeName">
      <MemberSignature Language="C#" Value="public abstract string DhcpScopeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DhcpScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DhcpScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DhcpScopeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DhcpScopeName : string" Usage="System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68f10-120">获取动态主机配置协议 (DHCP) 范围名。</span><span class="sxs-lookup"><span data-stu-id="68f10-120">Gets the Dynamic Host Configuration Protocol (DHCP) scope name.</span></span></summary>
        <value><span data-ttu-id="68f10-121">包含计算机的 DHCP 范围名称的 <see cref="T:System.String" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="68f10-121">A <see cref="T:System.String" /> instance that contains the computer's DHCP scope name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-122">DHCP 作用域是位于同一子网上的联网计算机的管理组。</span><span class="sxs-lookup"><span data-stu-id="68f10-122">A DHCP scope is an administrative grouping of networked computers that are on the same subnet.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-123">下面的代码示例显示了本地计算机的网络信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-123">The following code example displays network information for the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-124">Win32 函数调用失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-124">A Win32 function call failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DomainName">
      <MemberSignature Language="C#" Value="public abstract string DomainName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DomainName" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.DomainName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DomainName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DomainName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DomainName : string" Usage="System.Net.NetworkInformation.IPGlobalProperties.DomainName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68f10-125">获取在其中注册本地计算机的域。</span><span class="sxs-lookup"><span data-stu-id="68f10-125">Gets the domain in which the local computer is registered.</span></span></summary>
        <value><span data-ttu-id="68f10-126">包含计算机域名的 <see cref="T:System.String" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="68f10-126">A <see cref="T:System.String" /> instance that contains the computer's domain name.</span></span> <span data-ttu-id="68f10-127">如果计算机不属于域，则返回 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="68f10-127">If the computer does not belong to a domain, returns <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="68f10-128">下面的代码示例显示了本地计算机的网络信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-128">The following code example displays network information for the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-129">Win32 函数调用失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-129">A Win32 function call failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndGetUnicastAddresses">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection EndGetUnicastAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UnicastIPAddressInformationCollection EndGetUnicastAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetUnicastAddresses (asyncResult As IAsyncResult) As UnicastIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^ EndGetUnicastAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndGetUnicastAddresses : IAsyncResult -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection&#xA;override this.EndGetUnicastAddresses : IAsyncResult -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection" Usage="iPGlobalProperties.EndGetUnicastAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UnicastIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="68f10-130">引用该异步请求的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="68f10-130">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span></span></param>
        <summary><span data-ttu-id="68f10-131">结束挂起的异步请求，该请求用于检索本地计算机上稳定的单播 IP 地址表。</span><span class="sxs-lookup"><span data-stu-id="68f10-131">Ends a pending asynchronous request to retrieve the stable unicast IP address table on the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-132"><see cref="T:System.IAsyncResult" />，它存储此异步操作的状态信息以及所有用户定义的数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-132">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-133">为了支持出站连接或接受 Teredo 接口上的传入连接，应用程序需要确保 Teredo 接口已启动并可供使用。</span><span class="sxs-lookup"><span data-stu-id="68f10-133">In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use.</span></span> <span data-ttu-id="68f10-134">这是因为，如果在一段时间内未使用 Teredo，则它会进入休眠状态。</span><span class="sxs-lookup"><span data-stu-id="68f10-134">This is because Teredo can go into a dormant state when not used for some period of time.</span></span>  
  
 <span data-ttu-id="68f10-135"><xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A>方法允许应用程序以异步方式检索稳定的单播 IP 地址的列表。</span><span class="sxs-lookup"><span data-stu-id="68f10-135">The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses.</span></span> <span data-ttu-id="68f10-136"><xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType>属性可用于确定 IP 地址是否为前缀为2001::/32 的 IPv6 Teredo 地址。</span><span class="sxs-lookup"><span data-stu-id="68f10-136">The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.</span></span>  
  
 <span data-ttu-id="68f10-137"><xref:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses%2A>方法结束挂起的异步请求以检索稳定的单播 IP 地址表。</span><span class="sxs-lookup"><span data-stu-id="68f10-137">The <xref:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses%2A> method ends a pending asynchronous request to retrieve the stable unicast IP address table.</span></span>  
  
 <span data-ttu-id="68f10-138">此 <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> 方法还返回非 Teredo 地址，并提供一种更方便的方法来获取系统的单播 IP 地址，而不是枚举 <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> 本地计算机上的所有对象并查询关联的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="68f10-138">The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objects on a local computer and querying the associated IP addresses.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-139">调用本机 <see langword="GetAdaptersAddresses" /> 函数失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-139">The call to the native <see langword="GetAdaptersAddresses" /> function failed.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="68f10-140">此方法未在平台上实现。</span><span class="sxs-lookup"><span data-stu-id="68f10-140">This method is not implemented on the platform.</span></span> <span data-ttu-id="68f10-141">此方法使用 Windows Vista 和更高版本的操作系统支持的本机 <see langword="NotifyStableUnicastIpAddressTable" /> 函数。</span><span class="sxs-lookup"><span data-stu-id="68f10-141">This method uses the native <see langword="NotifyStableUnicastIpAddressTable" /> function that is supported on Windows Vista and later.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68f10-142">调用方没有必需的 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="68f10-142">The caller does not have necessary <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> permission.</span></span></exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      </Docs>
    </Member>
    <Member MemberName="GetActiveTcpConnections">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.TcpConnectionInformation[] GetActiveTcpConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.TcpConnectionInformation[] GetActiveTcpConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetActiveTcpConnections () As TcpConnectionInformation()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Net::NetworkInformation::TcpConnectionInformation ^&gt; ^ GetActiveTcpConnections();" />
      <MemberSignature Language="F#" Value="abstract member GetActiveTcpConnections : unit -&gt; System.Net.NetworkInformation.TcpConnectionInformation[]" Usage="iPGlobalProperties.GetActiveTcpConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.TcpConnectionInformation[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-143">返回有关本地计算机上的 Internet 协议版本 4 (IPv4) 和 IPv6 传输控制协议 (TCP) 连接的信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-143">Returns information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) connections on the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-144">一个 <see cref="T:System.Net.NetworkInformation.TcpConnectionInformation" /> 数组，其中包含描述活动 TCP 连接的对象；如果没有检测到活动 TCP 连接，则为一个空数组。</span><span class="sxs-lookup"><span data-stu-id="68f10-144">A <see cref="T:System.Net.NetworkInformation.TcpConnectionInformation" /> array that contains objects that describe the active TCP connections, or an empty array if no active TCP connections are detected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-145">此方法返回的对象包括所有 TCP 状态（状态除外）的连接 <xref:System.Net.NetworkInformation.TcpState.Listen> 。</span><span class="sxs-lookup"><span data-stu-id="68f10-145">The objects returned by this method include connections in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state.</span></span> <span data-ttu-id="68f10-146">可以通过调用来检查连接状态 <xref:System.Net.NetworkInformation.TcpConnectionInformation.State%2A> 。</span><span class="sxs-lookup"><span data-stu-id="68f10-146">You can check the state of a connection by calling <xref:System.Net.NetworkInformation.TcpConnectionInformation.State%2A>.</span></span>  
  
 <span data-ttu-id="68f10-147">在 IETF RFC 793 中定义了 TCP 协议。</span><span class="sxs-lookup"><span data-stu-id="68f10-147">The TCP protocol is defined in IETF RFC 793.</span></span> <span data-ttu-id="68f10-148">请注意，此方法返回的对象反映的是在创建数组时的连接。</span><span class="sxs-lookup"><span data-stu-id="68f10-148">Note that the objects returned by this method reflect the connections as of the time the array is created.</span></span> <span data-ttu-id="68f10-149">此信息不会动态更新。</span><span class="sxs-lookup"><span data-stu-id="68f10-149">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-150">下面的示例显示活动 TCP 连接的终结点信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-150">The following example displays endpoint information for active TCP connections.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#17)]
 [!code-csharp[NCLNetInfoReport#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-151">Win32 函数 <see langword="GetTcpTable" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-151">The Win32 function <see langword="GetTcpTable" /> failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetActiveTcpListeners">
      <MemberSignature Language="C#" Value="public abstract System.Net.IPEndPoint[] GetActiveTcpListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.IPEndPoint[] GetActiveTcpListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetActiveTcpListeners () As IPEndPoint()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Net::IPEndPoint ^&gt; ^ GetActiveTcpListeners();" />
      <MemberSignature Language="F#" Value="abstract member GetActiveTcpListeners : unit -&gt; System.Net.IPEndPoint[]" Usage="iPGlobalProperties.GetActiveTcpListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-152">返回有关本地计算机上的 Internet 协议版本 4 (IPv4) 和 IPv6 传输控制协议 (TCP) 侦听器的终结点信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-152">Returns endpoint information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) listeners on the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-153">一个 <see cref="T:System.Net.IPEndPoint" /> 数组，其中包含描述活动 TCP 侦听器的对象；如果没有检测到活动 TCP 侦听器，则为一个空数组。</span><span class="sxs-lookup"><span data-stu-id="68f10-153">A <see cref="T:System.Net.IPEndPoint" /> array that contains objects that describe the active TCP listeners, or an empty array, if no active TCP listeners are detected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-154">此方法返回的对象包括所有 TCP 状态（状态除外）的侦听器 <xref:System.Net.NetworkInformation.TcpState.Listen> 。</span><span class="sxs-lookup"><span data-stu-id="68f10-154">The objects returned by this method include listeners in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state.</span></span>  
  
 <span data-ttu-id="68f10-155">在 IETF RFC 793 中定义了 TCP 协议。</span><span class="sxs-lookup"><span data-stu-id="68f10-155">The TCP protocol is defined in IETF RFC 793.</span></span> <span data-ttu-id="68f10-156">请注意，此方法返回的对象反映的是在创建数组时的连接。</span><span class="sxs-lookup"><span data-stu-id="68f10-156">Note that the objects returned by this method reflect the connections as of the time the array is created.</span></span> <span data-ttu-id="68f10-157">此信息不会动态更新。</span><span class="sxs-lookup"><span data-stu-id="68f10-157">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-158">下面的代码示例显示活动 TCP 侦听器的终结点信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-158">The following code example displays endpoint information for active TCP listeners.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#18)]
 [!code-csharp[NCLNetInfoReport#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-159">Win32 函数 <see langword="GetTcpTable" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-159">The Win32 function <see langword="GetTcpTable" /> failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetActiveUdpListeners">
      <MemberSignature Language="C#" Value="public abstract System.Net.IPEndPoint[] GetActiveUdpListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.IPEndPoint[] GetActiveUdpListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetActiveUdpListeners () As IPEndPoint()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Net::IPEndPoint ^&gt; ^ GetActiveUdpListeners();" />
      <MemberSignature Language="F#" Value="abstract member GetActiveUdpListeners : unit -&gt; System.Net.IPEndPoint[]" Usage="iPGlobalProperties.GetActiveUdpListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-160">返回有关本地计算机上的 Internet 协议版本 4 (IPv4) 和 IPv6 用户数据报协议 (UDP) 侦听器的信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-160">Returns information about the Internet Protocol version 4 (IPv4) and IPv6 User Datagram Protocol (UDP) listeners on the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-161">一个 <see cref="T:System.Net.IPEndPoint" /> 数组，其中包含描述 UDP 侦听器的对象；如果没有检测到 UDP 侦听器，则为一个空数组。</span><span class="sxs-lookup"><span data-stu-id="68f10-161">An <see cref="T:System.Net.IPEndPoint" /> array that contains objects that describe the UDP listeners, or an empty array if no UDP listeners are detected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-162">UDP 是一种无连接传输层协议，负责发送和接收数据报。</span><span class="sxs-lookup"><span data-stu-id="68f10-162">UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams.</span></span> <span data-ttu-id="68f10-163">它在 IETF RFC 768 中定义。</span><span class="sxs-lookup"><span data-stu-id="68f10-163">It is defined in IETF RFC 768.</span></span>  
  
 <span data-ttu-id="68f10-164">UDP 侦听器是一个打开的套接字，可等待并接收 UDP 数据报。</span><span class="sxs-lookup"><span data-stu-id="68f10-164">A UDP listener is an open socket that waits for and receives UDP datagrams.</span></span> <span data-ttu-id="68f10-165">由于 UDP 是一种无连接协议，因此侦听器不保持与远程终结点的连接。</span><span class="sxs-lookup"><span data-stu-id="68f10-165">Because UDP is a connectionless protocol, the listener does not maintain a connection to a remote endpoint.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-166">下面的示例显示了活动 UDP 侦听器。</span><span class="sxs-lookup"><span data-stu-id="68f10-166">The following example displays the active UDP listeners.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#19)]
 [!code-csharp[NCLNetInfoReport#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-167">调用 Win32 函数 <see langword="GetUdpTable" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-167">The call to the Win32 function <see langword="GetUdpTable" /> failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIcmpV4Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IcmpV4Statistics GetIcmpV4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IcmpV4Statistics GetIcmpV4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIcmpV4Statistics () As IcmpV4Statistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IcmpV4Statistics ^ GetIcmpV4Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIcmpV4Statistics : unit -&gt; System.Net.NetworkInformation.IcmpV4Statistics" Usage="iPGlobalProperties.GetIcmpV4Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IcmpV4Statistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-168">提供本地计算机的 Internet 控制消息协议 (ICMP) 版本 4 统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-168">Provides Internet Control Message Protocol (ICMP) version 4 statistical data for the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-169">一个 <see cref="T:System.Net.NetworkInformation.IcmpV4Statistics" /> 对象，提供本地计算机的 ICMP 版本 4 流量统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-169">An <see cref="T:System.Net.NetworkInformation.IcmpV4Statistics" /> object that provides ICMP version 4 traffic statistics for the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-170">ICMP 是一组用于 Internet 协议版本4的消息 (IPv4) 。</span><span class="sxs-lookup"><span data-stu-id="68f10-170">ICMP is a set of messages for use with Internet Protocol version 4 (IPv4).</span></span> <span data-ttu-id="68f10-171">ICMP 由 IPv4 节点用于报告处理数据包时遇到的错误和执行其他 Internet 层功能。</span><span class="sxs-lookup"><span data-stu-id="68f10-171">ICMP is used by IPv4 nodes to report errors encountered in processing data packets and to perform other Internet layer functions.</span></span> <span data-ttu-id="68f10-172">在 IETF RFC 792 中定义了 ICMP 版本4。</span><span class="sxs-lookup"><span data-stu-id="68f10-172">ICMP version 4 is defined in IETF RFC 792.</span></span>  
  
 <span data-ttu-id="68f10-173">有关可用于应用程序的 ICMP 版本4流量统计信息的详细信息，请参阅 <xref:System.Net.NetworkInformation.IcmpV4Statistics> 类文档。</span><span class="sxs-lookup"><span data-stu-id="68f10-173">For details on the ICMP version 4 traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.IcmpV4Statistics> class documentation.</span></span> <span data-ttu-id="68f10-174">请注意， <xref:System.Net.NetworkInformation.IcmpV4Statistics> 此方法返回的对象反映了在创建对象时的统计信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-174">Note that the <xref:System.Net.NetworkInformation.IcmpV4Statistics> object returned by this method reflects the statistics as of the time the object is created.</span></span> <span data-ttu-id="68f10-175">此信息不会动态更新。</span><span class="sxs-lookup"><span data-stu-id="68f10-175">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-176">下面的示例显示当前 ICMPv4 统计信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-176">The following example displays the current ICMPv4 statistics.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#6)]
 [!code-csharp[NCLNetInfoReport#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-177">Win32 函数 <see langword="GetIcmpStatistics" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-177">The Win32 function <see langword="GetIcmpStatistics" /> failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIcmpV6Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IcmpV6Statistics GetIcmpV6Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IcmpV6Statistics GetIcmpV6Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIcmpV6Statistics () As IcmpV6Statistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IcmpV6Statistics ^ GetIcmpV6Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIcmpV6Statistics : unit -&gt; System.Net.NetworkInformation.IcmpV6Statistics" Usage="iPGlobalProperties.GetIcmpV6Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IcmpV6Statistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-178">提供本地计算机的 Internet 控制消息协议 (ICMP) 版本 6 统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-178">Provides Internet Control Message Protocol (ICMP) version 6 statistical data for the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-179">一个 <see cref="T:System.Net.NetworkInformation.IcmpV6Statistics" /> 对象，提供本地计算机的 ICMP 版本 6 流量统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-179">An <see cref="T:System.Net.NetworkInformation.IcmpV6Statistics" /> object that provides ICMP version 6 traffic statistics for the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-180">ICMP 版本6是一组用于 Internet 协议版本 6 (IPv6) 的消息。</span><span class="sxs-lookup"><span data-stu-id="68f10-180">ICMP version 6 is a set of messages for use with Internet Protocol version 6 (IPv6).</span></span> <span data-ttu-id="68f10-181">IPv6 节点使用 ICMP 报告在处理数据包和执行其他 Internet 层功能时遇到的错误。</span><span class="sxs-lookup"><span data-stu-id="68f10-181">ICMP is used by IPv6 nodes to report errors encountered in processing data packets and to perform other Internet layer functions.</span></span> <span data-ttu-id="68f10-182">在 IETF RFC 1885 中定义了 ICMP 版本6。</span><span class="sxs-lookup"><span data-stu-id="68f10-182">ICMP version 6 is defined in IETF RFC 1885.</span></span>  
  
 <span data-ttu-id="68f10-183">Windows 2000 或更早版本的操作系统的计算机不支持 IPv6 协议。</span><span class="sxs-lookup"><span data-stu-id="68f10-183">The IPv6 protocol is not supported for computers with Windows 2000 or earlier operating systems.</span></span>  
  
 <span data-ttu-id="68f10-184">有关可用于应用程序的 ICMP 版本6流量统计信息的详细信息，请参阅 <xref:System.Net.NetworkInformation.IcmpV6Statistics> 类文档。</span><span class="sxs-lookup"><span data-stu-id="68f10-184">For details on the ICMP version 6 traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IcmpV6Statistics> class documentation.</span></span> <span data-ttu-id="68f10-185">请注意， <xref:System.Net.NetworkInformation.IcmpV6Statistics> 此方法返回的对象反映了在创建对象时的统计信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-185">Note that the <xref:System.Net.NetworkInformation.IcmpV6Statistics> object returned by this method reflects the statistics as of the time the object is created.</span></span> <span data-ttu-id="68f10-186">此信息不会动态更新。</span><span class="sxs-lookup"><span data-stu-id="68f10-186">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-187">下面的示例显示当前 ICMPv6 统计信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-187">The following example displays the current ICMPv6 statistics.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#7)]
 [!code-csharp[NCLNetInfoReport#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-188">Win32 函数 <see langword="GetIcmpStatisticsEx" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-188">The Win32 function <see langword="GetIcmpStatisticsEx" /> failed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="68f10-189">本地计算机的操作系统不是 Windows XP 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="68f10-189">The local computer's operating system is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPGlobalProperties">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkInformation.IPGlobalProperties GetIPGlobalProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.NetworkInformation.IPGlobalProperties GetIPGlobalProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIPGlobalProperties () As IPGlobalProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::NetworkInformation::IPGlobalProperties ^ GetIPGlobalProperties();" />
      <MemberSignature Language="F#" Value="static member GetIPGlobalProperties : unit -&gt; System.Net.NetworkInformation.IPGlobalProperties" Usage="System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPGlobalProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-190">获取一个对象，该对象提供有关本地计算机的网络连接和流量统计数据的信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-190">Gets an object that provides information about the local computer's network connectivity and traffic statistics.</span></span></summary>
        <returns><span data-ttu-id="68f10-191">一个 <see cref="T:System.Net.NetworkInformation.IPGlobalProperties" /> 对象，该对象包含有关本地计算机的信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-191">A <see cref="T:System.Net.NetworkInformation.IPGlobalProperties" /> object that contains information about the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-192">此方法返回的对象是系统提供的类型，该类型是从类派生的 <xref:System.Net.NetworkInformation.IPGlobalProperties> 。</span><span class="sxs-lookup"><span data-stu-id="68f10-192">The object returned by this method is a system-supplied type that derives from the <xref:System.Net.NetworkInformation.IPGlobalProperties> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-193">下面的代码示例显示了有关本地计算机的信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-193">The following code example displays information about the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPv4GlobalStatistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv4GlobalStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPGlobalStatistics GetIPv4GlobalStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIPv4GlobalStatistics () As IPGlobalStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IPGlobalStatistics ^ GetIPv4GlobalStatistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIPv4GlobalStatistics : unit -&gt; System.Net.NetworkInformation.IPGlobalStatistics" Usage="iPGlobalProperties.GetIPv4GlobalStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPGlobalStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-194">提供本地计算机的 Internet 协议版本 4 (IPv4) 统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-194">Provides Internet Protocol version 4 (IPv4) statistical data for the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-195">一个 <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> 对象，提供本地计算机的 IPv4 流量统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-195">An <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> object that provides IPv4 traffic statistics for the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-196">IPv4 是负责将数据包从源计算机路由到其目标的网络层协议。</span><span class="sxs-lookup"><span data-stu-id="68f10-196">IPv4 is a network layer protocol that is responsible for routing data packets from its source computer to its destination.</span></span>  
  
 <span data-ttu-id="68f10-197">有关可用于应用程序的 IP 流量统计信息的详细信息，请参阅 <xref:System.Net.NetworkInformation.IPGlobalStatistics> 类文档。</span><span class="sxs-lookup"><span data-stu-id="68f10-197">For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation.</span></span> <span data-ttu-id="68f10-198">请注意，此方法返回的对象反映了在创建对象时的统计信息 <xref:System.Net.NetworkInformation.IPGlobalStatistics> 。</span><span class="sxs-lookup"><span data-stu-id="68f10-198">Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created.</span></span> <span data-ttu-id="68f10-199">此信息不会动态更新。</span><span class="sxs-lookup"><span data-stu-id="68f10-199">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-200">下面的代码示例显示了本地计算机的 IP 统计信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-200">The following code example displays IP statistics for the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#1)]
 [!code-csharp[NCLNetInfoReport#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-201">调用 Win32 函数 <see langword="GetIpStatistics" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-201">The call to the Win32 function <see langword="GetIpStatistics" /> failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPv6GlobalStatistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv6GlobalStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPGlobalStatistics GetIPv6GlobalStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIPv6GlobalStatistics () As IPGlobalStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IPGlobalStatistics ^ GetIPv6GlobalStatistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIPv6GlobalStatistics : unit -&gt; System.Net.NetworkInformation.IPGlobalStatistics" Usage="iPGlobalProperties.GetIPv6GlobalStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPGlobalStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-202">提供本地计算机的 Internet 协议版本 6 (IPv6) 统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-202">Provides Internet Protocol version 6 (IPv6) statistical data for the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-203">一个 <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> 对象，提供本地计算机的 IPv6 流量统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-203">An <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> object that provides IPv6 traffic statistics for the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-204">IPv6 是负责将数据包从源计算机路由到目标计算机的网络层协议。</span><span class="sxs-lookup"><span data-stu-id="68f10-204">IPv6 is a network layer protocol responsible for routing data packets from its source computer to its destination.</span></span> <span data-ttu-id="68f10-205">Windows 2000 或更早版本的操作系统的计算机上不支持 IPv6 协议。</span><span class="sxs-lookup"><span data-stu-id="68f10-205">The IPv6 protocol is not supported on computers with Windows 2000 or earlier operating systems.</span></span>  
  
 <span data-ttu-id="68f10-206">有关可用于应用程序的 IP 流量统计信息的详细信息，请参阅 <xref:System.Net.NetworkInformation.IPGlobalStatistics> 类文档。</span><span class="sxs-lookup"><span data-stu-id="68f10-206">For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation.</span></span> <span data-ttu-id="68f10-207">请注意，此方法返回的对象反映了在创建对象时的统计信息 <xref:System.Net.NetworkInformation.IPGlobalStatistics> 。</span><span class="sxs-lookup"><span data-stu-id="68f10-207">Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created.</span></span> <span data-ttu-id="68f10-208">此信息不会动态更新。</span><span class="sxs-lookup"><span data-stu-id="68f10-208">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-209">下面的代码示例显示了本地计算机的 IP 统计信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-209">The following code example displays IP statistics for the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#1)]
 [!code-csharp[NCLNetInfoReport#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-210">调用 Win32 函数 <see langword="GetIpStatistics" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-210">The call to the Win32 function <see langword="GetIpStatistics" /> failed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="68f10-211">本地计算机运行的操作系统不支持 IPv6。</span><span class="sxs-lookup"><span data-stu-id="68f10-211">The local computer is not running an operating system that supports IPv6.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTcpIPv4Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.TcpStatistics GetTcpIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTcpIPv4Statistics () As TcpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::TcpStatistics ^ GetTcpIPv4Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetTcpIPv4Statistics : unit -&gt; System.Net.NetworkInformation.TcpStatistics" Usage="iPGlobalProperties.GetTcpIPv4Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.TcpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-212">提供本地计算机的传输控制协议/Internet 协议版本 4 (TCP/IPv4) 统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-212">Provides Transmission Control Protocol/Internet Protocol version 4 (TCP/IPv4) statistical data for the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-213">一个 <see cref="T:System.Net.NetworkInformation.TcpStatistics" /> 对象，提供本地计算机的 TCP/IPv4 流量统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-213">A <see cref="T:System.Net.NetworkInformation.TcpStatistics" /> object that provides TCP/IPv4 traffic statistics for the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-214">TCP 是一种传输层协议，负责可靠地发送和接收数据包。</span><span class="sxs-lookup"><span data-stu-id="68f10-214">TCP is a transport layer protocol that is responsible for reliably sending and receiving data packets.</span></span> <span data-ttu-id="68f10-215">它在 IETF RFC 793 中定义。</span><span class="sxs-lookup"><span data-stu-id="68f10-215">It is defined in IETF RFC 793.</span></span>  
  
 <span data-ttu-id="68f10-216">有关可用于应用程序的 TCP 流量统计信息的详细信息，请参阅 <xref:System.Net.NetworkInformation.TcpStatistics> 类文档。</span><span class="sxs-lookup"><span data-stu-id="68f10-216">For details on the TCP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation.</span></span> <span data-ttu-id="68f10-217">请注意，此方法返回的对象反映了在创建对象时的统计信息 <xref:System.Net.NetworkInformation.TcpStatistics> 。</span><span class="sxs-lookup"><span data-stu-id="68f10-217">Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created.</span></span> <span data-ttu-id="68f10-218">此信息不会动态更新。</span><span class="sxs-lookup"><span data-stu-id="68f10-218">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-219">下面的示例显示了本地计算机的 TCP/IP 统计信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-219">The following example displays the TCP/IP statistics for the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#2)]
 [!code-csharp[NCLNetInfoReport#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-220">调用 Win32 函数 <see langword="GetTcpStatistics" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-220">The call to the Win32 function <see langword="GetTcpStatistics" /> failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTcpIPv6Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv6Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.TcpStatistics GetTcpIPv6Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTcpIPv6Statistics () As TcpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::TcpStatistics ^ GetTcpIPv6Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetTcpIPv6Statistics : unit -&gt; System.Net.NetworkInformation.TcpStatistics" Usage="iPGlobalProperties.GetTcpIPv6Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.TcpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-221">提供本地计算机的传输控制协议/Internet 协议版本 6 (TCP/IPv6) 统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-221">Provides Transmission Control Protocol/Internet Protocol version 6 (TCP/IPv6) statistical data for the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-222">一个 <see cref="T:System.Net.NetworkInformation.TcpStatistics" /> 对象，提供本地计算机的 TCP/IPv6 流量统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-222">A <see cref="T:System.Net.NetworkInformation.TcpStatistics" /> object that provides TCP/IPv6 traffic statistics for the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-223">TCP 是一个传输层协议，负责可靠地发送和接收数据包。</span><span class="sxs-lookup"><span data-stu-id="68f10-223">TCP is a transport layer protocol responsible for reliably sending and receiving data packets.</span></span> <span data-ttu-id="68f10-224">它在 IETF RFC 793 中定义。</span><span class="sxs-lookup"><span data-stu-id="68f10-224">It is defined in IETF RFC 793.</span></span>  
  
 <span data-ttu-id="68f10-225">有关可用于应用程序的 TCP 流量统计信息的详细信息，请参阅 <xref:System.Net.NetworkInformation.TcpStatistics> 类文档。</span><span class="sxs-lookup"><span data-stu-id="68f10-225">For details on the TCP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation.</span></span> <span data-ttu-id="68f10-226">请注意，此方法返回的对象反映了在创建对象时的统计信息 <xref:System.Net.NetworkInformation.TcpStatistics> 。</span><span class="sxs-lookup"><span data-stu-id="68f10-226">Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created.</span></span> <span data-ttu-id="68f10-227">此信息不会动态更新。</span><span class="sxs-lookup"><span data-stu-id="68f10-227">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-228">下面的示例显示了本地计算机的 TCP/IP 统计信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-228">The following example displays the TCP/IP statistics for the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#2)]
 [!code-csharp[NCLNetInfoReport#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-229">调用 Win32 函数 <see langword="GetTcpStatistics" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-229">The call to the Win32 function <see langword="GetTcpStatistics" /> failed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="68f10-230">本地计算机运行的操作系统不支持 IPv6。</span><span class="sxs-lookup"><span data-stu-id="68f10-230">The local computer is not running an operating system that supports IPv6.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUdpIPv4Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UdpStatistics GetUdpIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUdpIPv4Statistics () As UdpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::UdpStatistics ^ GetUdpIPv4Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetUdpIPv4Statistics : unit -&gt; System.Net.NetworkInformation.UdpStatistics" Usage="iPGlobalProperties.GetUdpIPv4Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UdpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-231">提供本地计算机的用户数据报协议/Internet 协议版本 4 (UDP/IPv4) 统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-231">Provides User Datagram Protocol/Internet Protocol version 4 (UDP/IPv4) statistical data for the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-232">一个 <see cref="T:System.Net.NetworkInformation.UdpStatistics" /> 对象，提供本地计算机的 UDP/IPv4 流量统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-232">A <see cref="T:System.Net.NetworkInformation.UdpStatistics" /> object that provides UDP/IPv4 traffic statistics for the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-233">UDP 是一种无连接传输层协议，负责发送和接收数据报。</span><span class="sxs-lookup"><span data-stu-id="68f10-233">UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams.</span></span> <span data-ttu-id="68f10-234">它在 IETF RFC 768 中定义。</span><span class="sxs-lookup"><span data-stu-id="68f10-234">It is defined in IETF RFC 768.</span></span>  
  
 <span data-ttu-id="68f10-235">有关可用于应用程序的 UDP 流量统计信息的详细信息，请参阅 <xref:System.Net.NetworkInformation.UdpStatistics> 类文档。</span><span class="sxs-lookup"><span data-stu-id="68f10-235">For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation.</span></span> <span data-ttu-id="68f10-236">请注意，此方法返回的对象反映了在创建对象时的统计信息 <xref:System.Net.NetworkInformation.UdpStatistics> 。</span><span class="sxs-lookup"><span data-stu-id="68f10-236">Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created.</span></span> <span data-ttu-id="68f10-237">此信息不会动态更新。</span><span class="sxs-lookup"><span data-stu-id="68f10-237">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-238">下面的示例显示了本地计算机的 UDP/IP 统计信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-238">The following example displays the UDP/IP statistics for the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#3)]
 [!code-csharp[NCLNetInfoReport#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-239">调用 Win32 函数 GetUdpStatistics 失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-239">The call to the Win32 function GetUdpStatistics failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUdpIPv6Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv6Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UdpStatistics GetUdpIPv6Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUdpIPv6Statistics () As UdpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::UdpStatistics ^ GetUdpIPv6Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetUdpIPv6Statistics : unit -&gt; System.Net.NetworkInformation.UdpStatistics" Usage="iPGlobalProperties.GetUdpIPv6Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UdpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-240">提供本地计算机的用户数据报协议/Internet 协议版本 6 (UDP/IPv6) 统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-240">Provides User Datagram Protocol/Internet Protocol version 6 (UDP/IPv6) statistical data for the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-241">一个 <see cref="T:System.Net.NetworkInformation.UdpStatistics" /> 对象，提供本地计算机的 UDP/IPv6 流量统计数据。</span><span class="sxs-lookup"><span data-stu-id="68f10-241">A <see cref="T:System.Net.NetworkInformation.UdpStatistics" /> object that provides UDP/IPv6 traffic statistics for the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-242">UDP 是一种无连接传输层协议，负责发送和接收数据报。</span><span class="sxs-lookup"><span data-stu-id="68f10-242">UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams.</span></span> <span data-ttu-id="68f10-243">它在 IETF RFC 768 中定义。</span><span class="sxs-lookup"><span data-stu-id="68f10-243">It is defined in IETF RFC 768.</span></span>  
  
 <span data-ttu-id="68f10-244">有关可用于应用程序的 UDP 流量统计信息的详细信息，请参阅 <xref:System.Net.NetworkInformation.UdpStatistics> 类文档。</span><span class="sxs-lookup"><span data-stu-id="68f10-244">For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation.</span></span> <span data-ttu-id="68f10-245">请注意，此方法返回的对象反映了在创建对象时的统计信息 <xref:System.Net.NetworkInformation.UdpStatistics> 。</span><span class="sxs-lookup"><span data-stu-id="68f10-245">Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created.</span></span> <span data-ttu-id="68f10-246">此信息不会动态更新。</span><span class="sxs-lookup"><span data-stu-id="68f10-246">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-247">下面的示例显示了本地计算机的 UDP/IP 统计信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-247">The following example displays the UDP/IP statistics for the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#3)]
 [!code-csharp[NCLNetInfoReport#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-248">调用 Win32 函数 <see langword="GetUdpStatistics" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-248">The call to the Win32 function <see langword="GetUdpStatistics" /> failed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="68f10-249">本地计算机运行的操作系统不支持 IPv6。</span><span class="sxs-lookup"><span data-stu-id="68f10-249">The local computer is not running an operating system that supports IPv6.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicastAddresses">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection GetUnicastAddresses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UnicastIPAddressInformationCollection GetUnicastAddresses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnicastAddresses () As UnicastIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^ GetUnicastAddresses();" />
      <MemberSignature Language="F#" Value="abstract member GetUnicastAddresses : unit -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection&#xA;override this.GetUnicastAddresses : unit -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection" Usage="iPGlobalProperties.GetUnicastAddresses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UnicastIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-250">在本地计算机上检索稳定的单播 IP 地址表。</span><span class="sxs-lookup"><span data-stu-id="68f10-250">Retrieves the stable unicast IP address table on the local computer.</span></span></summary>
        <returns><span data-ttu-id="68f10-251">一个 <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection" />，其中包含本地计算机上稳定的单播 IP 地址的列表。</span><span class="sxs-lookup"><span data-stu-id="68f10-251">A <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection" /> that contains a list of stable unicast IP addresses on the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-252">为了支持出站连接或接受 Teredo 接口上的传入连接，应用程序需要确保 Teredo 接口已启动并可供使用。</span><span class="sxs-lookup"><span data-stu-id="68f10-252">In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use.</span></span> <span data-ttu-id="68f10-253">这是因为，如果在一段时间内未使用 Teredo，则它会进入休眠状态。</span><span class="sxs-lookup"><span data-stu-id="68f10-253">This is because Teredo can go into a dormant state when not used for some period of time.</span></span>  
  
 <span data-ttu-id="68f10-254">此 <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> 方法允许应用程序检索稳定的单播 IP 地址的列表。</span><span class="sxs-lookup"><span data-stu-id="68f10-254">The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method will allow an application to retrieve the list of stable unicast IP addresses.</span></span> <span data-ttu-id="68f10-255"><xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType>属性可用于确定 IP 地址是否为前缀为2001::/32 的 IPv6 Teredo 地址。</span><span class="sxs-lookup"><span data-stu-id="68f10-255">The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.</span></span>  
  
 <span data-ttu-id="68f10-256">此 <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> 方法还返回非 Teredo 地址，并提供一种更方便的方法来获取系统的单播 IP 地址，而不是枚举 <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> 本地计算机上的所有对象并查询关联的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="68f10-256">The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objects on a local computer and querying the associated IP addresses.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-257">调用本机 <see langword="GetAdaptersAddresses" /> 函数失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-257">The call to the native <see langword="GetAdaptersAddresses" /> function failed.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="68f10-258">此方法未在平台上实现。</span><span class="sxs-lookup"><span data-stu-id="68f10-258">This method is not implemented on the platform.</span></span> <span data-ttu-id="68f10-259">此方法使用 Windows Vista 和更高版本的操作系统支持的本机 <see langword="NotifyStableUnicastIpAddressTable" /> 函数。</span><span class="sxs-lookup"><span data-stu-id="68f10-259">This method uses the native <see langword="NotifyStableUnicastIpAddressTable" /> function that is supported on Windows Vista and later.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68f10-260">调用方没有必需的 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="68f10-260">The caller does not have necessary <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> permission.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68f10-261">调用本机 <see langword="NotifyStableUnicastIpAddressTable" /> 函数失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-261">The call to the native <see langword="NotifyStableUnicastIpAddressTable" /> function failed.</span></span></exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicastAddressesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt; GetUnicastAddressesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt; GetUnicastAddressesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnicastAddressesAsync () As Task(Of UnicastIPAddressInformationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^&gt; ^ GetUnicastAddressesAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetUnicastAddressesAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt;&#xA;override this.GetUnicastAddressesAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt;" Usage="iPGlobalProperties.GetUnicastAddressesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68f10-262">以一部操作检索本地计算机上稳定的单播 IP 地址表。</span><span class="sxs-lookup"><span data-stu-id="68f10-262">Retrieves the stable unicast IP address table on the local computer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="68f10-263">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="68f10-263">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-264">为了支持出站连接或接受 Teredo 接口上的传入连接，应用程序需要确保 Teredo 接口已启动并可供使用。</span><span class="sxs-lookup"><span data-stu-id="68f10-264">In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use.</span></span> <span data-ttu-id="68f10-265">这是因为，如果在一段时间内未使用 Teredo，则它会进入休眠状态。</span><span class="sxs-lookup"><span data-stu-id="68f10-265">This is because Teredo can go into a dormant state when not used for some period of time.</span></span>  
  
 <span data-ttu-id="68f10-266">此 <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync%2A> 方法允许应用程序检索稳定的单播 IP 地址列表作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="68f10-266">The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync%2A> method will allow an application to retrieve the list of stable unicast IP addresses as asynchronous operation.</span></span> <span data-ttu-id="68f10-267"><xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType>属性可用于确定 IP 地址是否为前缀为2001::/32 的 IPv6 Teredo 地址。</span><span class="sxs-lookup"><span data-stu-id="68f10-267">The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.</span></span>  
  
 <span data-ttu-id="68f10-268">此 <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> 方法还返回非 Teredo 地址，并提供一种更方便的方法来获取系统的单播 IP 地址，而不是枚举 <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> 本地计算机上的所有对象并查询关联的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="68f10-268">The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objects on a local computer and querying the associated IP addresses.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-269">调用本机 <see langword="GetAdaptersAddresses" /> 函数失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-269">The call to the native <see langword="GetAdaptersAddresses" /> function failed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68f10-270">调用方没有必需的 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="68f10-270">The caller does not have necessary <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> permission.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68f10-271">调用本机 <see langword="NotifyStableUnicastIpAddressTable" /> 函数失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-271">The call to the native <see langword="NotifyStableUnicastIpAddressTable" /> function failed.</span></span></exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public abstract string HostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.HostName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ HostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostName : string" Usage="System.Net.NetworkInformation.IPGlobalProperties.HostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68f10-272">获取本地计算机的主机名。</span><span class="sxs-lookup"><span data-stu-id="68f10-272">Gets the host name for the local computer.</span></span></summary>
        <value><span data-ttu-id="68f10-273">包含计算机的 NetBIOS 名称的 <see cref="T:System.String" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="68f10-273">A <see cref="T:System.String" /> instance that contains the computer's NetBIOS name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-274">此属性调入本机 IP Helper 函数 GetNetworkParams，该函数返回包含 NetBIOS 主机名称字符串的 FIXED_INFO 结构。</span><span class="sxs-lookup"><span data-stu-id="68f10-274">This property calls into the native IP Helper function, GetNetworkParams, which returns a FIXED_INFO structure that contains the NetBIOS host name string.</span></span> <span data-ttu-id="68f10-275">当主机名称字符串超过15个字符时，将截断该字符串。</span><span class="sxs-lookup"><span data-stu-id="68f10-275">The host name string is truncated when it exceeds 15 characters.</span></span>  
  
 <span data-ttu-id="68f10-276">计算机的 NetBIOS 名称在网络中必须唯一，并且不是由域名完全限定的。</span><span class="sxs-lookup"><span data-stu-id="68f10-276">A computer's NetBIOS name must be unique within a network and is not fully qualified by the domain name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-277">下面的代码示例显示了本地计算机的网络信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-277">The following code example displays network information for the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-278">Win32 函数调用失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-278">A Win32 function call failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsWinsProxy">
      <MemberSignature Language="C#" Value="public abstract bool IsWinsProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWinsProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsWinsProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsWinsProxy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWinsProxy : bool" Usage="System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68f10-279">获取 <see cref="T:System.Boolean" /> 值，该值指定本地计算机是否充当 Windows Internet 名称服务 (WINS) 代理。</span><span class="sxs-lookup"><span data-stu-id="68f10-279">Gets a <see cref="T:System.Boolean" /> value that specifies whether the local computer is acting as a Windows Internet Name Service (WINS) proxy.</span></span></summary>
        <value><span data-ttu-id="68f10-280">如果本地计算机是 WINS 代理，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68f10-280"><see langword="true" /> if the local computer is a WINS proxy; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-281">WINS 提供了一个分布式数据库，用于向 IP 地址映射注册和查询动态 NetBIOS 名称。</span><span class="sxs-lookup"><span data-stu-id="68f10-281">WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-282">下面的代码示例显示了本地计算机的网络信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-282">The following code example displays network information for the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-283">Win32 函数调用失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-283">A Win32 function call failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.NetBiosNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.NetBiosNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As NetBiosNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::NetBiosNodeType NodeType { System::Net::NetworkInformation::NetBiosNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Net.NetworkInformation.NetBiosNodeType" Usage="System.Net.NetworkInformation.IPGlobalProperties.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetBiosNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68f10-284">获取本地计算机的网络基本输入/输出系统 (NetBIOS) 节点类型。</span><span class="sxs-lookup"><span data-stu-id="68f10-284">Gets the Network Basic Input/Output System (NetBIOS) node type of the local computer.</span></span></summary>
        <value><span data-ttu-id="68f10-285">一个 <see cref="T:System.Net.NetworkInformation.NetBiosNodeType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="68f10-285">A <see cref="T:System.Net.NetworkInformation.NetBiosNodeType" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68f10-286">节点类型决定了将 NetBIOS 名称解析为 IP 地址的方式。</span><span class="sxs-lookup"><span data-stu-id="68f10-286">The node type determines the way in which NetBIOS names are resolved to IP addresses.</span></span> <span data-ttu-id="68f10-287">有关其他信息，请参阅 <xref:System.Net.NetworkInformation.NetBiosNodeType> 类概述。</span><span class="sxs-lookup"><span data-stu-id="68f10-287">For additional information, see the <xref:System.Net.NetworkInformation.NetBiosNodeType> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68f10-288">下面的代码示例显示了本地计算机的网络信息。</span><span class="sxs-lookup"><span data-stu-id="68f10-288">The following code example displays network information for the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="68f10-289">Win32 函数调用失败。</span><span class="sxs-lookup"><span data-stu-id="68f10-289">A Win32 function call failed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
