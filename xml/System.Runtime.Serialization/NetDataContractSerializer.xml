<Type Name="NetDataContractSerializer" FullName="System.Runtime.Serialization.NetDataContractSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b6a0d7b2dc619feb1c614ee1ccfeac3c8b6fe03c" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83924811" /></Metadata><TypeSignature Language="C#" Value="public sealed class NetDataContractSerializer : System.Runtime.Serialization.XmlObjectSerializer, System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NetDataContractSerializer extends System.Runtime.Serialization.XmlObjectSerializer implements class System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.NetDataContractSerializer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NetDataContractSerializer&#xA;Inherits XmlObjectSerializer&#xA;Implements IFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetDataContractSerializer sealed : System::Runtime::Serialization::XmlObjectSerializer, System::Runtime::Serialization::IFormatter" />
  <TypeSignature Language="F#" Value="type NetDataContractSerializer = class&#xA;    inherit XmlObjectSerializer&#xA;    interface IFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Serialization.XmlObjectSerializer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a5817-101">使用提供的 .NET Framework 类型，将类型实例序列化和反序列化为 XML 流或文档。</span><span class="sxs-lookup"><span data-stu-id="a5817-101">Serializes and deserializes an instance of a type into XML stream or document using the supplied .NET Framework types.</span></span> <span data-ttu-id="a5817-102">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="a5817-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-103"><xref:System.Runtime.Serialization.NetDataContractSerializer> 与 <xref:System.Runtime.Serialization.DataContractSerializer> 之间存在一个重要区别：<xref:System.Runtime.Serialization.NetDataContractSerializer> 在序列化的 XML 中包含 CLR 类型信息；而 <xref:System.Runtime.Serialization.DataContractSerializer> 不包含。</span><span class="sxs-lookup"><span data-stu-id="a5817-103">The <xref:System.Runtime.Serialization.NetDataContractSerializer> differs from the <xref:System.Runtime.Serialization.DataContractSerializer> in one important way: the <xref:System.Runtime.Serialization.NetDataContractSerializer> includes CLR type information in the serialized XML, whereas the <xref:System.Runtime.Serialization.DataContractSerializer> does not.</span></span> <span data-ttu-id="a5817-104">因此，只有在序列化和反序列化端使用相同的 CLR 类型时，才能使用 <xref:System.Runtime.Serialization.NetDataContractSerializer>。</span><span class="sxs-lookup"><span data-stu-id="a5817-104">Therefore, the <xref:System.Runtime.Serialization.NetDataContractSerializer> can be used only if both the serializing and deserializing ends share the same CLR types.</span></span>  
  
 <span data-ttu-id="a5817-105">序列化程序可以对已应用 <xref:System.Runtime.Serialization.DataContractAttribute> 或 <xref:System.SerializableAttribute> 属性的类型进行序列化。</span><span class="sxs-lookup"><span data-stu-id="a5817-105">The serializer can serialize types to which either the <xref:System.Runtime.Serialization.DataContractAttribute> or <xref:System.SerializableAttribute> attribute has been applied.</span></span> <span data-ttu-id="a5817-106">它还可以对用于实现 <xref:System.Runtime.Serialization.ISerializable> 的类型进行序列化。</span><span class="sxs-lookup"><span data-stu-id="a5817-106">It also serializes types that implement <xref:System.Runtime.Serialization.ISerializable>.</span></span>  
  
 <span data-ttu-id="a5817-107">有关序列化的详细信息，请参阅[序列化和反序列](/dotnet/framework/wcf/feature-details/serialization-and-deserialization)化。</span><span class="sxs-lookup"><span data-stu-id="a5817-107">For more information about serialization, see [Serialization and Deserialization](/dotnet/framework/wcf/feature-details/serialization-and-deserialization).</span></span>  
  
## <a name="incompatibility-with-xelement"></a><span data-ttu-id="a5817-108">与 XElement 不兼容</span><span class="sxs-lookup"><span data-stu-id="a5817-108">Incompatibility with XElement</span></span>  
 <span data-ttu-id="a5817-109"><xref:System.Xml.Linq.XElement> 类用于写入 XML。</span><span class="sxs-lookup"><span data-stu-id="a5817-109">The <xref:System.Xml.Linq.XElement> class is used to write XML.</span></span> <span data-ttu-id="a5817-110">但是，`NetDataContractSerializer` 无法序列化该类型的实例。</span><span class="sxs-lookup"><span data-stu-id="a5817-110">However, the `NetDataContractSerializer` cannot serialize an instance of the type.</span></span> <span data-ttu-id="a5817-111">因此，以下代码将失败，并出现异常： "Root 类型" System.xml.linq.xelement> "在顶级不支持 NetDataContractSerializer，因为它与 `IsAny`=是 IXmlSerializable 的 `true` 并且必须写入包含根元素在内的所有内容。"</span><span class="sxs-lookup"><span data-stu-id="a5817-111">The following code, therefore, fails with the exception: "Root type 'System.Xml.Linq.XElement' is not supported at the top level by NetDataContractSerializer since it is IXmlSerializable with `IsAny`=`true` and must write all its contents including the root element."</span></span>  
  
 [!code-csharp[NetDataContractSerializer#15](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#15)]
 [!code-vb[NetDataContractSerializer#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#15)]  
  
 <span data-ttu-id="a5817-112">但是，如果将 `XElement` 用作类字段或属性的类型，则会序列化字段或属性包含的数据。</span><span class="sxs-lookup"><span data-stu-id="a5817-112">However, if an `XElement` is used as the type of a field or property of a class, the data contained by the field or property is serialized.</span></span> <span data-ttu-id="a5817-113">这是因为作为类成员时，数据不在类的顶层。</span><span class="sxs-lookup"><span data-stu-id="a5817-113">This is because as a member of a class, the data is not the top level of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5817-114">下面的示例代码演示一种名为 `Person` 且由 <xref:System.Runtime.Serialization.NetDataContractSerializer> 序列化的类型。</span><span class="sxs-lookup"><span data-stu-id="a5817-114">The following example code shows a type named `Person` that is serialized by the <xref:System.Runtime.Serialization.NetDataContractSerializer>.</span></span> <span data-ttu-id="a5817-115">它将 <xref:System.Runtime.Serialization.DataContractAttribute> 特性应用于类，并将 <xref:System.Runtime.Serialization.DataMemberAttribute> 应用于成员（包括私有成员）以指示 <xref:System.Runtime.Serialization.NetDataContractSerializer> 要序列化的内容。</span><span class="sxs-lookup"><span data-stu-id="a5817-115">The <xref:System.Runtime.Serialization.DataContractAttribute> attribute is applied to the class, and the <xref:System.Runtime.Serialization.DataMemberAttribute> is applied to members (including a private member) to instruct the <xref:System.Runtime.Serialization.NetDataContractSerializer> what to serialize.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#0](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#0)]
 [!code-vb[NetDataContractSerializer#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.NetDataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.XmlObjectSerializer" />
    <related type="Article" href="/dotnet/framework/wcf/feature-details/serialization-and-deserialization"><span data-ttu-id="a5817-116">序列化和反序列化</span><span class="sxs-lookup"><span data-stu-id="a5817-116">Serialization and Deserialization</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a5817-117">初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a5817-117">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5817-118">初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a5817-118">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[NetDataContractSerializer#8](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#8)]
 [!code-vb[NetDataContractSerializer#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a5817-119">一个包含上下文数据的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-119">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span></span></param>
        <summary><span data-ttu-id="a5817-120">使用提供的流上下文数据初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a5817-120">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied streaming context data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-121">通过使用 <xref:System.Runtime.Serialization.StreamingContext> 类，可以传入在读取和写入对象时使用的用户特定的上下文数据。</span><span class="sxs-lookup"><span data-stu-id="a5817-121">The <xref:System.Runtime.Serialization.StreamingContext> class allows you to pass in user-specific context data to use while reading and writing objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5817-122">下面的示例使用 <xref:System.Runtime.Serialization.NetDataContractSerializer> 创建一个 <xref:System.Runtime.Serialization.StreamingContext> 实例。</span><span class="sxs-lookup"><span data-stu-id="a5817-122">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> using a <xref:System.Runtime.Serialization.StreamingContext>.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#9](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#9)]
 [!code-vb[NetDataContractSerializer#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (string rootName, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string rootName, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As String, rootNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::String ^ rootName, System::String ^ rootNamespace);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : string * string -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer (rootName, rootNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootName"><span data-ttu-id="a5817-123">XML 元素的名称，该元素包含要序列化或反序列化的内容。</span><span class="sxs-lookup"><span data-stu-id="a5817-123">The name of the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="a5817-124">XML 元素的命名空间，该元素包含要序列化或反序列化的内容。</span><span class="sxs-lookup"><span data-stu-id="a5817-124">The namespace of the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <summary><span data-ttu-id="a5817-125">使用提供的 XML 根元素和命名空间初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a5817-125">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied XML root element and namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a5817-126">下面的示例创建一个 <xref:System.Runtime.Serialization.DataContractSerializer> 实例，以指定在反序列化对象时应使用的 XML 根元素和命名空间。</span><span class="sxs-lookup"><span data-stu-id="a5817-126">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> specifying the XML root element and namespace it will expect when deserializing an object.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#10](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#10)]
 [!code-vb[NetDataContractSerializer#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : System.Xml.XmlDictionaryString * System.Xml.XmlDictionaryString -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer (rootName, rootNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="rootName"><span data-ttu-id="a5817-127">一个包含 XML 元素名称的 <see cref="T:System.Xml.XmlDictionaryString" />，该元素包含要序列化或反序列化的内容。</span><span class="sxs-lookup"><span data-stu-id="a5817-127">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the name of the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="a5817-128">一个包含 XML 元素的命名空间的 <see cref="T:System.Xml.XmlDictionaryString" />，该元素包含要序列化或反序列化的内容。</span><span class="sxs-lookup"><span data-stu-id="a5817-128">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <summary><span data-ttu-id="a5817-129">使用两个类型为 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 的参数（包含用于指定内容的根元素和命名空间）初始化 <see cref="T:System.Xml.XmlDictionaryString" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a5817-129">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with two parameters of type <see cref="T:System.Xml.XmlDictionaryString" /> that contain the root element and namespace used to specify the content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-130">如果在对象实例中使用一组相同的字符串，则可以使用 <xref:System.Xml.XmlDictionaryString> 来优化性能。</span><span class="sxs-lookup"><span data-stu-id="a5817-130">The <xref:System.Xml.XmlDictionaryString> can be used to optimize performance when the same set of strings is used across object instances.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5817-131">下面的示例创建一个 <xref:System.Runtime.Serialization.DataContractSerializer> 实例，以指定在反序列化对象时应使用的 XML 根元素和命名空间（作为 <xref:System.Xml.XmlDictionaryString> 自变量）。</span><span class="sxs-lookup"><span data-stu-id="a5817-131">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> specifying the XML root element and namespace (as <xref:System.Xml.XmlDictionaryString> arguments) it will expect when deserializing an object.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#11](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#11)]
 [!code-vb[NetDataContractSerializer#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As StreamingContext, maxItemsInObjectGraph As Integer, ignoreExtensionDataObject As Boolean, assemblyFormat As FormatterAssemblyStyle, surrogateSelector As ISurrogateSelector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Runtime::Serialization::StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System::Runtime::Serialization::Formatters::FormatterAssemblyStyle assemblyFormat, System::Runtime::Serialization::ISurrogateSelector ^ surrogateSelector);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : System.Runtime.Serialization.StreamingContext * int * bool * System.Runtime.Serialization.Formatters.FormatterAssemblyStyle * System.Runtime.Serialization.ISurrogateSelector -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer (context, maxItemsInObjectGraph, ignoreExtensionDataObject, assemblyFormat, surrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a5817-132">一个包含上下文数据的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-132">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span></span></param>
        <param name="maxItemsInObjectGraph"><span data-ttu-id="a5817-133">图中要序列化或反序列化的最大项数。</span><span class="sxs-lookup"><span data-stu-id="a5817-133">The maximum number of items in the graph to serialize or deserialize.</span></span></param>
        <param name="ignoreExtensionDataObject"><span data-ttu-id="a5817-134">若要忽略类型扩展提供的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-134"><see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span></span></param>
        <param name="assemblyFormat"><span data-ttu-id="a5817-135">一个 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 枚举值，指定用于查找和加载程序集的方法。</span><span class="sxs-lookup"><span data-stu-id="a5817-135">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span></span></param>
        <param name="surrogateSelector"><span data-ttu-id="a5817-136"><see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> 的实现。</span><span class="sxs-lookup"><span data-stu-id="a5817-136">An implementation of the <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />.</span></span></param>
        <summary><span data-ttu-id="a5817-137">使用提供的上下文数据初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 类的新实例；此外，还指定了对象中要序列化的最大项数、指定是否忽略额外数据的参数、程序集加载方法以及代理项选择器。</span><span class="sxs-lookup"><span data-stu-id="a5817-137">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-138">如果 `ignoreExtensionDataObject` 接口是在正在序列化或反序列化的类中实现的，则使用 <xref:System.Runtime.Serialization.IExtensibleDataObject> 参数。</span><span class="sxs-lookup"><span data-stu-id="a5817-138">The `ignoreExtensionDataObject` parameter is used when the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface is implemented in the class that is being serialized or deserialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5817-139">下面的示例使用 <xref:System.Runtime.Serialization.NetDataContractSerializer> 创建一个 <xref:System.Runtime.Serialization.StreamingContext> 实例。</span><span class="sxs-lookup"><span data-stu-id="a5817-139">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> using a <xref:System.Runtime.Serialization.StreamingContext>.</span></span> <span data-ttu-id="a5817-140">此代码还设置了 `ignoreExtensionDataObject`，并指定 `ISurrogateSelector` 接口实现以帮助序列化程序选择代理项（用于反序列化旧类型）。</span><span class="sxs-lookup"><span data-stu-id="a5817-140">The code also sets the `ignoreExtensionDataObject`, and specifies an implementation of the `ISurrogateSelector` interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</span></span>  
  
 [!code-csharp[NetDataContractSerializer#12](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#12)]
 [!code-vb[NetDataContractSerializer#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a5817-141"><paramref name="maxItemsInObjectGraph" /> 值小于 0。</span><span class="sxs-lookup"><span data-stu-id="a5817-141"><paramref name="maxItemsInObjectGraph" /> value is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (string rootName, string rootNamespace, System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string rootName, string rootNamespace, valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As String, rootNamespace As String, context As StreamingContext, maxItemsInObjectGraph As Integer, ignoreExtensionDataObject As Boolean, assemblyFormat As FormatterAssemblyStyle, surrogateSelector As ISurrogateSelector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::String ^ rootName, System::String ^ rootNamespace, System::Runtime::Serialization::StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System::Runtime::Serialization::Formatters::FormatterAssemblyStyle assemblyFormat, System::Runtime::Serialization::ISurrogateSelector ^ surrogateSelector);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : string * string * System.Runtime.Serialization.StreamingContext * int * bool * System.Runtime.Serialization.Formatters.FormatterAssemblyStyle * System.Runtime.Serialization.ISurrogateSelector -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer (rootName, rootNamespace, context, maxItemsInObjectGraph, ignoreExtensionDataObject, assemblyFormat, surrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="rootName"><span data-ttu-id="a5817-142">XML 元素的名称，该元素包含要序列化或反序列化的内容。</span><span class="sxs-lookup"><span data-stu-id="a5817-142">The name of the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="a5817-143">XML 元素的命名空间，该元素包含要序列化或反序列化的内容。</span><span class="sxs-lookup"><span data-stu-id="a5817-143">The namespace of the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="context"><span data-ttu-id="a5817-144">一个包含上下文数据的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-144">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span></span></param>
        <param name="maxItemsInObjectGraph"><span data-ttu-id="a5817-145">图中要序列化或反序列化的最大项数。</span><span class="sxs-lookup"><span data-stu-id="a5817-145">The maximum number of items in the graph to serialize or deserialize.</span></span></param>
        <param name="ignoreExtensionDataObject"><span data-ttu-id="a5817-146">若要忽略类型扩展提供的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-146"><see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span></span></param>
        <param name="assemblyFormat"><span data-ttu-id="a5817-147">一个 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 枚举值，指定用于查找和加载程序集的方法。</span><span class="sxs-lookup"><span data-stu-id="a5817-147">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span></span></param>
        <param name="surrogateSelector"><span data-ttu-id="a5817-148">一个用于处理旧类型的 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="a5817-148">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to handle the legacy type.</span></span></param>
        <summary><span data-ttu-id="a5817-149">使用提供的上下文数据以及根名称和命名空间初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 类的新实例；此外，还指定了对象中要序列化的最大项数、指定是否忽略额外数据的参数、程序集加载方法以及代理项选择器。</span><span class="sxs-lookup"><span data-stu-id="a5817-149">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data and root name and namespace; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-150">如果 `ignoreExtensionDataObject` 接口是在正在序列化或反序列化的类中实现的，则使用 <xref:System.Runtime.Serialization.IExtensibleDataObject> 参数。</span><span class="sxs-lookup"><span data-stu-id="a5817-150">The `ignoreExtensionDataObject` parameter is used when the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface is implemented in the class that is being serialized or deserialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5817-151">下面的示例创建一个 <xref:System.Runtime.Serialization.NetDataContractSerializer> 实例，以指定在反序列化时应使用的 XML 元素名称和命名空间。</span><span class="sxs-lookup"><span data-stu-id="a5817-151">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> specifying the XML element name and namespace to expect when deserializing.</span></span> <span data-ttu-id="a5817-152">此代码还设置了 `ignoreExtensionDataObject`，并指定 <xref:System.Runtime.Serialization.ISurrogateSelector> 接口实现以帮助序列化程序选择代理项（用于反序列化旧类型）。</span><span class="sxs-lookup"><span data-stu-id="a5817-152">The code also sets the `ignoreExtensionDataObject`, and specifies an implementation of the <xref:System.Runtime.Serialization.ISurrogateSelector> interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</span></span>  
  
 [!code-csharp[NetDataContractSerializer#13](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#13)]
 [!code-vb[NetDataContractSerializer#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a5817-153"><paramref name="maxItemsInObjectGraph" /> 值小于 0。</span><span class="sxs-lookup"><span data-stu-id="a5817-153"><paramref name="maxItemsInObjectGraph" /> value is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString, context As StreamingContext, maxItemsInObjectGraph As Integer, ignoreExtensionDataObject As Boolean, assemblyFormat As FormatterAssemblyStyle, surrogateSelector As ISurrogateSelector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Runtime::Serialization::StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System::Runtime::Serialization::Formatters::FormatterAssemblyStyle assemblyFormat, System::Runtime::Serialization::ISurrogateSelector ^ surrogateSelector);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : System.Xml.XmlDictionaryString * System.Xml.XmlDictionaryString * System.Runtime.Serialization.StreamingContext * int * bool * System.Runtime.Serialization.Formatters.FormatterAssemblyStyle * System.Runtime.Serialization.ISurrogateSelector -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer (rootName, rootNamespace, context, maxItemsInObjectGraph, ignoreExtensionDataObject, assemblyFormat, surrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="rootName"><span data-ttu-id="a5817-154">一个包含内容的根元素的 <see cref="T:System.Xml.XmlDictionaryString" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-154">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element of the content.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="a5817-155">一个包含根元素的命名空间的 <see cref="T:System.Xml.XmlDictionaryString" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-155">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</span></span></param>
        <param name="context"><span data-ttu-id="a5817-156">一个包含上下文数据的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-156">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span></span></param>
        <param name="maxItemsInObjectGraph"><span data-ttu-id="a5817-157">图中要序列化或反序列化的最大项数。</span><span class="sxs-lookup"><span data-stu-id="a5817-157">The maximum number of items in the graph to serialize or deserialize.</span></span></param>
        <param name="ignoreExtensionDataObject"><span data-ttu-id="a5817-158">若要忽略类型扩展提供的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-158"><see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span></span></param>
        <param name="assemblyFormat"><span data-ttu-id="a5817-159">一个 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 枚举值，指定用于查找和加载程序集的方法。</span><span class="sxs-lookup"><span data-stu-id="a5817-159">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span></span></param>
        <param name="surrogateSelector"><span data-ttu-id="a5817-160">一个用于处理旧类型的 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="a5817-160">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to handle the legacy type.</span></span></param>
        <summary><span data-ttu-id="a5817-161">使用提供的上下文数据以及根名称和命名空间（作为 <see cref="T:System.Xml.XmlDictionaryString" /> 参数）初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 类的新实例；此外，还指定了对象中要序列化的最大项数、指定是否忽略找到的额外数据的参数、程序集加载方法以及代理项选择器。</span><span class="sxs-lookup"><span data-stu-id="a5817-161">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data, and root name and namespace (as <see cref="T:System.Xml.XmlDictionaryString" /> parameters); in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data found is ignored, assembly loading method, and a surrogate selector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-162">如果在对象实例中使用一组相同的字符串，则可以使用 <xref:System.Xml.XmlDictionaryString> 来优化性能。</span><span class="sxs-lookup"><span data-stu-id="a5817-162">The <xref:System.Xml.XmlDictionaryString> can be used to optimize performance when the same set of strings is used across object instances.</span></span>  
  
 <span data-ttu-id="a5817-163">如果 `ignoreExtensionDataObject` 接口是在正在序列化或反序列化的类中实现的，则使用 <xref:System.Runtime.Serialization.IExtensibleDataObject> 参数。</span><span class="sxs-lookup"><span data-stu-id="a5817-163">The `ignoreExtensionDataObject` parameter is used when the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface is implemented in the class that is being serialized or deserialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5817-164">下面的示例创建一个 <xref:System.Runtime.Serialization.NetDataContractSerializer> 实例，以指定在反序列化时应使用的 XML 元素名称和命名空间（作为 <xref:System.Xml.XmlDictionaryString> 自变量）。</span><span class="sxs-lookup"><span data-stu-id="a5817-164">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> specifying the XML element name and namespace (as <xref:System.Xml.XmlDictionaryString> arguments) to expect when deserializing.</span></span> <span data-ttu-id="a5817-165">此代码还设置了 `ignoreExtensionDataObject`，并指定 <xref:System.Runtime.Serialization.ISurrogateSelector> 接口实现以帮助序列化程序选择代理项（用于反序列化旧类型）。</span><span class="sxs-lookup"><span data-stu-id="a5817-165">The code also sets the `ignoreExtensionDataObject`, and specifies an implementation of the <xref:System.Runtime.Serialization.ISurrogateSelector> interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</span></span>  
  
 [!code-csharp[NetDataContractSerializer#14](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#14)]
 [!code-vb[NetDataContractSerializer#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a5817-166"><paramref name="maxItemsInObjectGraph" /> 值小于 0。</span><span class="sxs-lookup"><span data-stu-id="a5817-166"><paramref name="maxItemsInObjectGraph" /> value is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle AssemblyFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyFormat : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle with get, set" Usage="System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5817-167">获取一个指定用于查找和加载程序集的值。</span><span class="sxs-lookup"><span data-stu-id="a5817-167">Gets a value that specifies a method for locating and loading assemblies.</span></span></summary>
        <value><span data-ttu-id="a5817-168">一个 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 枚举值，指定用于查找和加载程序集的方法。</span><span class="sxs-lookup"><span data-stu-id="a5817-168">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-169">`AssemblyFormat` 实例可以有以下两种样式：<xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full> 或 <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple>。</span><span class="sxs-lookup"><span data-stu-id="a5817-169">An `AssemblyFormat` instance can have two styles: <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full> or <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple>.</span></span> <span data-ttu-id="a5817-170">如果指定 `Simple`，则允许从使用某种版本序列化的实例加载并反序列化另一种版本的类型。</span><span class="sxs-lookup"><span data-stu-id="a5817-170">Specifying `Simple` allows types in one version to be loaded and deserialized from an instance serialized from a different version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a5817-171">设置的值与任何 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 值均不对应。</span><span class="sxs-lookup"><span data-stu-id="a5817-171">The value being set does not correspond to any of the <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.Binder" />
      <MemberSignature Language="VB.NET" Value="Public Property Binder As SerializationBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::SerializationBinder ^ Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binder : System.Runtime.Serialization.SerializationBinder with get, set" Usage="System.Runtime.Serialization.NetDataContractSerializer.Binder" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Serialization.IFormatter.Binder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5817-172">获取或设置控制类加载的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-172">Gets or sets an object that controls class loading.</span></span></summary>
        <value><span data-ttu-id="a5817-173">与当前格式化程序一起使用的 <see cref="T:System.Runtime.Serialization.SerializationBinder" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-173">The <see cref="T:System.Runtime.Serialization.SerializationBinder" /> used with the current formatter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-174">在序列化过程中，格式化程序传输创建正确类型和版本的对象实例时所需的信息。</span><span class="sxs-lookup"><span data-stu-id="a5817-174">During serialization, a formatter transmits the information required to create an instance of an object of the correct type and version.</span></span> <span data-ttu-id="a5817-175">此信息通常包括对象的完整类型名称和程序集名称。</span><span class="sxs-lookup"><span data-stu-id="a5817-175">This information generally includes the full type name and assembly name of the object.</span></span> <span data-ttu-id="a5817-176">程序集名称包括程序集的名称、版本和强名称哈希。</span><span class="sxs-lookup"><span data-stu-id="a5817-176">The assembly name includes the name, version, and strong name hash of the assembly.</span></span> <span data-ttu-id="a5817-177">默认情况下，反序列化使用此信息来创建相同对象的实例（安全策略所限制的任何程序集加载属于例外情况）。</span><span class="sxs-lookup"><span data-stu-id="a5817-177">By default, deserialization uses this information to create an instance of an identical object (with the exception of any assembly loading restricted by the security policy).</span></span> <span data-ttu-id="a5817-178">由于已经在程序集之间移动了类，或者服务器和客户端要求使用不同的类版本，因此，有些用户需要控制要加载哪些类。</span><span class="sxs-lookup"><span data-stu-id="a5817-178">Some users need to control which class to load, either because the class has moved between assemblies or a different version of the class is required on the server and client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As StreamingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::StreamingContext Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Runtime.Serialization.StreamingContext with get, set" Usage="System.Runtime.Serialization.NetDataContractSerializer.Context" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Serialization.IFormatter.Context</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5817-179">获取或设置一个对象，它允许在序列化或反序列化时传递非常有用的上下文数据。</span><span class="sxs-lookup"><span data-stu-id="a5817-179">Gets or sets the object that enables the passing of context data that is useful while serializing or deserializing.</span></span></summary>
        <value><span data-ttu-id="a5817-180">一个包含上下文数据的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-180">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the context data.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (stream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.IO.Stream -&gt; obj&#xA;override this.Deserialize : System.IO.Stream -&gt; obj" Usage="netDataContractSerializer.Deserialize stream" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a5817-181">一个包含要反序列化的 XML 的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-181">A <see cref="T:System.IO.Stream" /> that contains the XML to deserialize.</span></span></param>
        <summary><span data-ttu-id="a5817-182">将 XML 文档或流反序列化为对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-182">Deserializes an XML document or stream into an object.</span></span></summary>
        <returns><span data-ttu-id="a5817-183">反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-183">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-184">此方法假定默认格式为文本 XML。</span><span class="sxs-lookup"><span data-stu-id="a5817-184">This method assumes the default format is text XML.</span></span>  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtensionDataObject">
      <MemberSignature Language="C#" Value="public bool IgnoreExtensionDataObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtensionDataObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreExtensionDataObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreExtensionDataObject { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreExtensionDataObject : bool" Usage="System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5817-185">获取一个值，指定是否忽略对象扩展提供的数据。</span><span class="sxs-lookup"><span data-stu-id="a5817-185">Gets a value that specifies whether data supplied by an extension of the object is ignored.</span></span></summary>
        <value><span data-ttu-id="a5817-186">若要忽略类型扩展提供的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-186"><see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-187">在实现 <xref:System.Runtime.Serialization.IExtensibleDataObject> 时，<xref:System.Runtime.Serialization.ExtensionDataObject> 可以存储来自类型的将来版本的数据。</span><span class="sxs-lookup"><span data-stu-id="a5817-187">When implementing the <xref:System.Runtime.Serialization.IExtensibleDataObject>, data from a future version of a type can be stored by the <xref:System.Runtime.Serialization.ExtensionDataObject>.</span></span> <span data-ttu-id="a5817-188">在往返行程期间（其中将反序列化对象、对其进行更改并再次序列化），将存储并再次序列化额外数据。</span><span class="sxs-lookup"><span data-stu-id="a5817-188">During a round trip (where an object is deserialized, altered, and serialized again), the extra data is stored and serialized again.</span></span> <span data-ttu-id="a5817-189">有关详细信息，请参阅[序列化和反序列](/dotnet/framework/wcf/feature-details/serialization-and-deserialization)化。</span><span class="sxs-lookup"><span data-stu-id="a5817-189">For more information, see [Serialization and Deserialization](/dotnet/framework/wcf/feature-details/serialization-and-deserialization).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a5817-190">确定是否将读取器定位在可反序列化的对象上。</span><span class="sxs-lookup"><span data-stu-id="a5817-190">Determines whether the reader is positioned on an object that can be deserialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-191">这相当于使用 `ReadObject` 接口的 `IFormatter` 方法。</span><span class="sxs-lookup"><span data-stu-id="a5817-191">This is equivalent to using the `ReadObject` method of the `IFormatter` interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlDictionaryReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.IsStartObject : System.Xml.XmlDictionaryReader -&gt; bool" Usage="netDataContractSerializer.IsStartObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a5817-192">一个包含要读取的 XML 的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-192">An <see cref="T:System.Xml.XmlDictionaryReader" /> that contains the XML to read.</span></span></param>
        <summary><span data-ttu-id="a5817-193">使用指定的读取器确定是否将 <see cref="T:System.Xml.XmlDictionaryReader" /> 定位在可反序列化的对象上。</span><span class="sxs-lookup"><span data-stu-id="a5817-193">Determines whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned on an object that can be deserialized using the specified reader.</span></span></summary>
        <returns><span data-ttu-id="a5817-194">如果读取器位于要读取的流的开始元素处，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-194"><see langword="true" />, if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-195"><xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> 使用以下方法来确定其能否读取某个对象：检查读取器所在的 XML 元素的名称和命名空间，并将这些值与预期的名称和命名空间进行比较。</span><span class="sxs-lookup"><span data-stu-id="a5817-195">The <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</span></span> <span data-ttu-id="a5817-196">可利用以下各项设置预期的名称和命名空间：传入构造函数的类型的数据协定名称和命名空间，或者是传入构造函数的 `rootName` 和 `rootNamespace` 值（如果有）。</span><span class="sxs-lookup"><span data-stu-id="a5817-196">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
 <span data-ttu-id="a5817-197">可以在下面的构造函数中设置 `rootName` 和 `rootNamespace`：<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=nameWithType>、<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=nameWithType> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a5817-197">You can set the `rootName` and `rootNamespace` in the following constructors: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=nameWithType>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=nameWithType>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5817-198"><paramref name="reader" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-198">the <paramref name="reader" /> is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.IsStartObject : System.Xml.XmlReader -&gt; bool" Usage="netDataContractSerializer.IsStartObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a5817-199">一个包含要读取的 XML 的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-199">An <see cref="T:System.Xml.XmlReader" /> that contains the XML to read.</span></span></param>
        <summary><span data-ttu-id="a5817-200">使用指定的读取器确定是否将 <see cref="T:System.Xml.XmlReader" /> 定位在可反序列化的对象上。</span><span class="sxs-lookup"><span data-stu-id="a5817-200">Determines whether the <see cref="T:System.Xml.XmlReader" /> is positioned on an object that can be deserialized using the specified reader.</span></span></summary>
        <returns><span data-ttu-id="a5817-201">如果读取器位于要读取的流的开始元素处，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-201"><see langword="true" /> if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5817-202"><paramref name="reader" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-202">the <paramref name="reader" /> is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxItemsInObjectGraph">
      <MemberSignature Language="C#" Value="public int MaxItemsInObjectGraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxItemsInObjectGraph" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxItemsInObjectGraph As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxItemsInObjectGraph { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxItemsInObjectGraph : int" Usage="System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5817-203">获取对象中允许序列化的最大项数。</span><span class="sxs-lookup"><span data-stu-id="a5817-203">Gets the maximum number of items allowed in the object to be serialized.</span></span></summary>
        <value><span data-ttu-id="a5817-204">对象中允许的最大项数。</span><span class="sxs-lookup"><span data-stu-id="a5817-204">The maximum number of items allowed in the object.</span></span> <span data-ttu-id="a5817-205">默认为 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-205">The default is <see cref="F:System.Int32.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-206">有关设置配额的详细信息，请参阅[数据的安全注意事项](/dotnet/framework/wcf/feature-details/security-considerations-for-data)。</span><span class="sxs-lookup"><span data-stu-id="a5817-206">For more information about setting quotas, see [Security Considerations for Data](/dotnet/framework/wcf/feature-details/security-considerations-for-data).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a5817-207">读取 XML 流或文档，并返回反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-207">Reads the XML stream or document and returns the deserialized object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadObject : System.Xml.XmlReader -&gt; obj" Usage="netDataContractSerializer.ReadObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a5817-208">用于读取 XML 流或文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-208">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</span></span></param>
        <summary><span data-ttu-id="a5817-209">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 读取 XML 流或文档，并返回反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-209">Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object.</span></span></summary>
        <returns><span data-ttu-id="a5817-210">反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-210">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5817-211"><paramref name="reader" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-211">the <paramref name="reader" /> is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName);" />
      <MemberSignature Language="F#" Value="override this.ReadObject : System.Xml.XmlDictionaryReader * bool -&gt; obj" Usage="netDataContractSerializer.ReadObject (reader, verifyObjectName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a5817-212">用于读取 XML 流或文档的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-212">The <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream or document.</span></span></param>
        <param name="verifyObjectName"><span data-ttu-id="a5817-213">若要检查包含的 XML 元素名称和命名空间是否对应于用于构造序列化程序的根名称和根命名空间，则为 <see langword="true" />；否则为 <see langword="false" /> 以跳过验证。</span><span class="sxs-lookup"><span data-stu-id="a5817-213"><see langword="true" /> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace used to construct the serializer; <see langword="false" /> to skip the verification.</span></span></param>
        <summary><span data-ttu-id="a5817-214">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 读取 XML 流或文档并返回反序列化的对象；还检查对象数据是否符合用于创建序列化程序的名称和命名空间。</span><span class="sxs-lookup"><span data-stu-id="a5817-214">Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; also checks whether the object data conforms to the name and namespace used to create the serializer.</span></span></summary>
        <returns><span data-ttu-id="a5817-215">反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-215">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-216">`verifyObjectName` 参数使用以下方法来确定其能否读取某个对象：检查读取器所在的 XML 元素的名称和命名空间，并将这些值与预期的名称和命名空间进行比较。</span><span class="sxs-lookup"><span data-stu-id="a5817-216">The `verifyObjectName` parameter determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</span></span> <span data-ttu-id="a5817-217">可利用以下各项设置预期的名称和命名空间：传入构造函数的类型的数据协定名称和命名空间，或者是传入构造函数的 `rootName` 和 `rootNamespace` 值（如果有）。</span><span class="sxs-lookup"><span data-stu-id="a5817-217">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
 <span data-ttu-id="a5817-218">可以在下面的构造函数中设置 `rootName` 和 `rootNamespace`：<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>、<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>。</span><span class="sxs-lookup"><span data-stu-id="a5817-218">You can set the `rootName` and `rootNamespace` in the following constructors: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>.</span></span>  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5817-219"><paramref name="reader" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-219">the <paramref name="reader" /> is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader, bool verifyObjectName);" />
      <MemberSignature Language="F#" Value="override this.ReadObject : System.Xml.XmlReader * bool -&gt; obj" Usage="netDataContractSerializer.ReadObject (reader, verifyObjectName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a5817-220">用于读取 XML 流或文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-220">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</span></span></param>
        <param name="verifyObjectName"><span data-ttu-id="a5817-221">若要检查包含的 XML 元素名称和命名空间是否对应于用于构造序列化程序的根名称和根命名空间，则为 <see langword="true" />；否则为 <see langword="false" /> 以跳过验证。</span><span class="sxs-lookup"><span data-stu-id="a5817-221"><see langword="true" /> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace used to construct the serializer; <see langword="false" /> to skip the verification.</span></span></param>
        <summary><span data-ttu-id="a5817-222">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 读取 XML 流或文档并返回反序列化的对象；还检查对象数据是否符合用于创建序列化程序的名称和命名空间。</span><span class="sxs-lookup"><span data-stu-id="a5817-222">Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; also checks whether the object data conforms to the name and namespace used to create the serializer.</span></span></summary>
        <returns><span data-ttu-id="a5817-223">反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-223">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-224">`verifyObjectName` 参数使用以下方法来确定其能否读取某个对象：检查读取器所在的 XML 元素的名称和命名空间，并将这些值与预期的名称和命名空间进行比较。</span><span class="sxs-lookup"><span data-stu-id="a5817-224">The `verifyObjectName` parameter determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</span></span> <span data-ttu-id="a5817-225">可利用以下各项设置预期的名称和命名空间：传入构造函数的类型的数据协定名称和命名空间，或者是传入构造函数的 `rootName` 和 `rootNamespace` 值（如果有）。</span><span class="sxs-lookup"><span data-stu-id="a5817-225">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
 <span data-ttu-id="a5817-226">可以在下面的构造函数中设置 `rootName` 和 `rootNamespace`：<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>、<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>。</span><span class="sxs-lookup"><span data-stu-id="a5817-226">You can set the `rootName` and `rootNamespace` in the following constructors: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>.</span></span>  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5817-227"><paramref name="reader" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-227">the <paramref name="reader" /> is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream stream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (stream As Stream, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::Stream ^ stream, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.IO.Stream * obj -&gt; unit&#xA;override this.Serialize : System.IO.Stream * obj -&gt; unit" Usage="netDataContractSerializer.Serialize (stream, graph)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a5817-228">序列化时使用的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-228">The <see cref="T:System.IO.Stream" /> to serialize with.</span></span></param>
        <param name="graph"><span data-ttu-id="a5817-229">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-229">The object to serialize.</span></span> <span data-ttu-id="a5817-230">将自动序列化此根对象的所有子对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-230">All child objects of this root object are automatically serialized.</span></span></param>
        <summary><span data-ttu-id="a5817-231">使用指定的写入器序列化指定的对象图。</span><span class="sxs-lookup"><span data-stu-id="a5817-231">Serializes the specified object graph using the specified writer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property SurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ISurrogateSelector ^ SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SurrogateSelector : System.Runtime.Serialization.ISurrogateSelector with get, set" Usage="System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Serialization.IFormatter.SurrogateSelector</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5817-232">获取或设置一个对象，以帮助格式化程序选择要序列化的代理项。</span><span class="sxs-lookup"><span data-stu-id="a5817-232">Gets or sets an object that assists the formatter when selecting a surrogate for serialization.</span></span></summary>
        <value><span data-ttu-id="a5817-233">一个用于选择代理项的 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-233">An <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> for selecting a surrogate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-234">有关 <xref:System.Runtime.Serialization.IDataContractSurrogate>的详细信息，请参阅[数据协定代理](/dotnet/framework/wcf/extending/data-contract-surrogates)项。</span><span class="sxs-lookup"><span data-stu-id="a5817-234">For more information about the <xref:System.Runtime.Serialization.IDataContractSurrogate>, see [Data Contract Surrogates](/dotnet/framework/wcf/extending/data-contract-surrogates).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISurrogateSelector" />
        <altmember cref="T:System.Runtime.Serialization.IFormatter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEndObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a5817-235">使用指定的写入器写入结束 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="a5817-235">Writes the closing XML element using the specified writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-236">可连续使用 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 方法以利用下面的模式写入完整的序列化：写入开始、写入内容和写入结束。</span><span class="sxs-lookup"><span data-stu-id="a5817-236">The <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="a5817-237"><xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> 方法也会调用这三种方法。</span><span class="sxs-lookup"><span data-stu-id="a5817-237">The three methods are also called by the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="netDataContractSerializer.WriteEndObject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a5817-238">用于写入 XML 文档或流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-238">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</span></span></param>
        <summary><span data-ttu-id="a5817-239">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 写入结束 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="a5817-239">Writes the closing XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a5817-240">下面的示例创建要序列化的对象、<xref:System.Runtime.Serialization.NetDataContractSerializer> 的实例以及 <xref:System.Xml.XmlDictionaryWriter> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="a5817-240">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="a5817-241">该示例使用 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 方法将对象数据写入 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a5817-241">The example uses the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5817-242"><paramref name="writer" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-242">the <paramref name="writer" /> is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : System.Xml.XmlWriter -&gt; unit" Usage="netDataContractSerializer.WriteEndObject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a5817-243">用于写入 XML 文档或流的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-243">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span></span></param>
        <summary><span data-ttu-id="a5817-244">使用 <see cref="T:System.Xml.XmlWriter" /> 写入结束 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="a5817-244">Writes the closing XML element using an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5817-245"><paramref name="writer" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-245">the <paramref name="writer" /> is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public override void WriteObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteObject : System.Xml.XmlWriter * obj -&gt; unit" Usage="netDataContractSerializer.WriteObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a5817-246">一个用于写入 XML 文档或流的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-246">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span></span></param>
        <param name="graph"><span data-ttu-id="a5817-247">包含要写入的内容的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-247">The object containing the content to write.</span></span></param>
        <summary><span data-ttu-id="a5817-248">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 将对象的完整内容（开始、内容和结束）写入 XML 文档或流。</span><span class="sxs-lookup"><span data-stu-id="a5817-248">Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException"><span data-ttu-id="a5817-249">正在序列化的类型不符合数据协定规则。</span><span class="sxs-lookup"><span data-stu-id="a5817-249">the type being serialized does not conform to data contract rules.</span></span> <span data-ttu-id="a5817-250">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 特性未应用于该类型。</span><span class="sxs-lookup"><span data-stu-id="a5817-250">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="a5817-251">正在序列化的实例有问题。</span><span class="sxs-lookup"><span data-stu-id="a5817-251">there is a problem with the instance being serialized.</span></span></exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException"><span data-ttu-id="a5817-252">已超出要序列化的对象的最大数量。</span><span class="sxs-lookup"><span data-stu-id="a5817-252">the maximum number of object to serialize has been exceeded.</span></span> <span data-ttu-id="a5817-253">请检查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="a5817-253">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObjectContent">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a5817-254">使用指定的写入器写入 XML 内容。</span><span class="sxs-lookup"><span data-stu-id="a5817-254">Writes the XML content using the specified writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5817-255">可连续使用 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 方法以利用下面的模式写入完整的序列化：写入开始、写入内容和写入结束。</span><span class="sxs-lookup"><span data-stu-id="a5817-255">The <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="a5817-256"><xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> 方法也会调用这三种方法。</span><span class="sxs-lookup"><span data-stu-id="a5817-256">The three methods are also called by the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteObjectContent : System.Xml.XmlDictionaryWriter * obj -&gt; unit" Usage="netDataContractSerializer.WriteObjectContent (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a5817-257">用于写入 XML 内容的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-257">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML content.</span></span></param>
        <param name="graph"><span data-ttu-id="a5817-258">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-258">The object to serialize.</span></span> <span data-ttu-id="a5817-259">将自动序列化此根对象的所有子对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-259">All child objects of this root object are automatically serialized.</span></span></param>
        <summary><span data-ttu-id="a5817-260">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 写入 XML 内容。</span><span class="sxs-lookup"><span data-stu-id="a5817-260">Writes the XML content using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a5817-261">下面的示例创建要序列化的对象、<xref:System.Runtime.Serialization.NetDataContractSerializer> 的实例以及 <xref:System.Xml.XmlDictionaryWriter> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="a5817-261">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="a5817-262">该示例使用 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 方法将对象数据写入 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a5817-262">The example uses the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException"><span data-ttu-id="a5817-263">正在序列化的类型不符合数据协定规则。</span><span class="sxs-lookup"><span data-stu-id="a5817-263">the type being serialized does not conform to data contract rules.</span></span> <span data-ttu-id="a5817-264">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 特性未应用于该类型。</span><span class="sxs-lookup"><span data-stu-id="a5817-264">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="a5817-265">正在序列化的实例有问题。</span><span class="sxs-lookup"><span data-stu-id="a5817-265">there is a problem with the instance being serialized.</span></span></exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException"><span data-ttu-id="a5817-266">已超出要序列化的对象的最大数量。</span><span class="sxs-lookup"><span data-stu-id="a5817-266">the maximum number of object to serialize has been exceeded.</span></span> <span data-ttu-id="a5817-267">请检查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="a5817-267">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteObjectContent : System.Xml.XmlWriter * obj -&gt; unit" Usage="netDataContractSerializer.WriteObjectContent (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a5817-268">用于写入 XML 内容的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-268">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML content.</span></span></param>
        <param name="graph"><span data-ttu-id="a5817-269">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-269">The object to serialize.</span></span> <span data-ttu-id="a5817-270">将自动序列化此根对象的所有子对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-270">All child objects of this root object are automatically serialized.</span></span></param>
        <summary><span data-ttu-id="a5817-271">使用 <see cref="T:System.Xml.XmlWriter" /> 写入 XML 内容。</span><span class="sxs-lookup"><span data-stu-id="a5817-271">Writes the XML content using an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException"><span data-ttu-id="a5817-272">正在序列化的类型不符合数据协定规则。</span><span class="sxs-lookup"><span data-stu-id="a5817-272">the type being serialized does not conform to data contract rules.</span></span> <span data-ttu-id="a5817-273">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 特性未应用于该类型。</span><span class="sxs-lookup"><span data-stu-id="a5817-273">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="a5817-274">正在序列化的实例有问题。</span><span class="sxs-lookup"><span data-stu-id="a5817-274">there is a problem with the instance being serialized.</span></span></exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException"><span data-ttu-id="a5817-275">已超出要序列化的对象的最大数量。</span><span class="sxs-lookup"><span data-stu-id="a5817-275">the maximum number of object to serialize has been exceeded.</span></span> <span data-ttu-id="a5817-276">请检查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="a5817-276">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a5817-277">使用指定的写入器写入开始 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="a5817-277">Writes the opening XML element using the specified writer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xml.XmlDictionaryWriter * obj -&gt; unit" Usage="netDataContractSerializer.WriteStartObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a5817-278">用于写入 XML 元素的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-278">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML element.</span></span></param>
        <param name="graph"><span data-ttu-id="a5817-279">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-279">The object to serialize.</span></span> <span data-ttu-id="a5817-280">将自动序列化此根对象的所有子对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-280">All child objects of this root object are automatically serialized.</span></span></param>
        <summary><span data-ttu-id="a5817-281">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 写入开始 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="a5817-281">Writes the opening XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a5817-282">下面的示例创建要序列化的对象、<xref:System.Runtime.Serialization.NetDataContractSerializer> 的实例以及 <xref:System.Xml.XmlDictionaryWriter> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="a5817-282">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="a5817-283">该示例使用 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 方法将对象数据写入 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a5817-283">The example uses the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException"><span data-ttu-id="a5817-284">正在序列化的类型不符合数据协定规则。</span><span class="sxs-lookup"><span data-stu-id="a5817-284">the type being serialized does not conform to data contract rules.</span></span> <span data-ttu-id="a5817-285">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 特性未应用于该类型。</span><span class="sxs-lookup"><span data-stu-id="a5817-285">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="a5817-286">正在序列化的实例有问题。</span><span class="sxs-lookup"><span data-stu-id="a5817-286">there is a problem with the instance being serialized.</span></span></exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException"><span data-ttu-id="a5817-287">已超出要序列化的对象的最大数量。</span><span class="sxs-lookup"><span data-stu-id="a5817-287">the maximum number of object to serialize has been exceeded.</span></span> <span data-ttu-id="a5817-288">请检查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="a5817-288">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xml.XmlWriter * obj -&gt; unit" Usage="netDataContractSerializer.WriteStartObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a5817-289">用于写入 XML 元素的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a5817-289">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML element.</span></span></param>
        <param name="graph"><span data-ttu-id="a5817-290">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-290">The object to serialize.</span></span> <span data-ttu-id="a5817-291">将自动序列化此根对象的所有子对象。</span><span class="sxs-lookup"><span data-stu-id="a5817-291">All child objects of this root object are automatically serialized.</span></span></param>
        <summary><span data-ttu-id="a5817-292">使用 <see cref="T:System.Xml.XmlWriter" /> 写入开始 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="a5817-292">Writes the opening XML element using an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException"><span data-ttu-id="a5817-293">正在序列化的类型不符合数据协定规则。</span><span class="sxs-lookup"><span data-stu-id="a5817-293">the type being serialized does not conform to data contract rules.</span></span> <span data-ttu-id="a5817-294">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 特性未应用于该类型。</span><span class="sxs-lookup"><span data-stu-id="a5817-294">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="a5817-295">正在序列化的实例有问题。</span><span class="sxs-lookup"><span data-stu-id="a5817-295">there is a problem with the instance being serialized.</span></span></exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException"><span data-ttu-id="a5817-296">已超出要序列化的对象的最大数量。</span><span class="sxs-lookup"><span data-stu-id="a5817-296">the maximum number of object to serialize has been exceeded.</span></span> <span data-ttu-id="a5817-297">请检查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="a5817-297">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
