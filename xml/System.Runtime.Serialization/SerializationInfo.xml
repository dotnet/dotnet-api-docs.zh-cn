<Type Name="SerializationInfo" FullName="System.Runtime.Serialization.SerializationInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7186f9a5558ecf55989be8d5e98454321a25bb5e" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100295711" /></Metadata><TypeSignature Language="C#" Value="public sealed class SerializationInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SerializationInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.SerializationInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SerializationInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializationInfo sealed" />
  <TypeSignature Language="F#" Value="type SerializationInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Serialization.Formatters" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Serialization.Formatters" FromVersion="4.0.2.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Runtime.Serialization.Formatters" FromVersion="4.0.3.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Runtime.Serialization.Formatters" FromVersion="4.0.4.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="628ca-101">存储对对象进行序列化或反序列化所需的全部数据。</span><span class="sxs-lookup"><span data-stu-id="628ca-101">Stores all the data needed to serialize or deserialize an object.</span></span> <span data-ttu-id="628ca-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="628ca-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-103">此类由具有自定义序列化行为的对象使用。</span><span class="sxs-lookup"><span data-stu-id="628ca-103">This class is used by objects with custom serialization behavior.</span></span> <span data-ttu-id="628ca-104"><xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>上的方法 <xref:System.Runtime.Serialization.ISerializable> 或用要 <xref:System.Runtime.Serialization.ISerializationSurrogate> <xref:System.Runtime.Serialization.SerializationInfo> 序列化的每条信息的名称、类型和值填充存储区。</span><span class="sxs-lookup"><span data-stu-id="628ca-104">The <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method on either <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Runtime.Serialization.ISerializationSurrogate> populates the <xref:System.Runtime.Serialization.SerializationInfo> store with the name, type, and value of each piece of information it wants to serialize.</span></span> <span data-ttu-id="628ca-105">在反序列化过程中，适当的函数可以提取此信息。</span><span class="sxs-lookup"><span data-stu-id="628ca-105">During deserialization, the appropriate function can extract this information.</span></span>  
  
 <span data-ttu-id="628ca-106">使用方法在序列化 <xref:System.Runtime.Serialization.SerializationInfo> 时使用方法将对象添加到存储区 <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> ，并 <xref:System.Runtime.Serialization.SerializationInfo> 在反序列化时使用方法从存储区中提取对象 <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-106">Objects are added to the <xref:System.Runtime.Serialization.SerializationInfo> store at serialization time using the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> methods and extracted from the <xref:System.Runtime.Serialization.SerializationInfo> store at deserialization using the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> methods.</span></span>  
  
 <span data-ttu-id="628ca-107">有关自定义序列化的详细信息，请参阅 [自定义序列化](/dotnet/standard/serialization/custom-serialization)。</span><span class="sxs-lookup"><span data-stu-id="628ca-107">For more information about customizing serialization, see [Custom Serialization](/dotnet/standard/serialization/custom-serialization).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628ca-108">下面的代码示例演示了 <xref:System.Runtime.Serialization.SerializationInfo> 各种值的自定义序列化和反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-108">The following code example demonstrates the <xref:System.Runtime.Serialization.SerializationInfo> for custom serialization and deserialization of various values.</span></span>  
  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <related type="Article" href="/dotnet/standard/serialization/xml-and-soap-serialization"><span data-ttu-id="628ca-109">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="628ca-109">XML and SOAP Serialization</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/custom-serialization"><span data-ttu-id="628ca-110">自定义序列化</span><span class="sxs-lookup"><span data-stu-id="628ca-110">Custom serialization</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="628ca-111">初始化 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="628ca-111">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Runtime.Serialization.IFormatterConverter converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type, converter As IFormatterConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerializationInfo(Type ^ type, System::Runtime::Serialization::IFormatterConverter ^ converter);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.SerializationInfo : Type * System.Runtime.Serialization.IFormatterConverter -&gt; System.Runtime.Serialization.SerializationInfo" Usage="new System.Runtime.Serialization.SerializationInfo (type, converter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="converter" Type="System.Runtime.Serialization.IFormatterConverter" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="628ca-112">要序列化的对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-112">The <see cref="T:System.Type" /> of the object to serialize.</span></span></param>
        <param name="converter"><span data-ttu-id="628ca-113">在反序列化过程中使用的 <see cref="T:System.Runtime.Serialization.IFormatterConverter" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-113">The <see cref="T:System.Runtime.Serialization.IFormatterConverter" /> used during deserialization.</span></span></param>
        <summary><span data-ttu-id="628ca-114">创建 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="628ca-114">Creates a new instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-115"><xref:System.Runtime.Serialization.IFormatterConverter>作为参数传递的将 `converter` 数据从其内部表示形式转换为用户请求的形式。</span><span class="sxs-lookup"><span data-stu-id="628ca-115">The <xref:System.Runtime.Serialization.IFormatterConverter> passed as the `converter` parameter converts data from its internal representation to the form the user requested.</span></span> <span data-ttu-id="628ca-116">中数据的内部表示形式 <xref:System.Runtime.Serialization.SerializationInfo> 依赖于创建它的格式化程序。</span><span class="sxs-lookup"><span data-stu-id="628ca-116">The internal representation of the data within the <xref:System.Runtime.Serialization.SerializationInfo> depends on the formatter that created it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-117"><paramref name="type" /> 或 <paramref name="converter" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-117"><paramref name="type" /> or <paramref name="converter" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter, bool requireSameTokenInPartialTrust);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Runtime.Serialization.IFormatterConverter converter, bool requireSameTokenInPartialTrust) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type, converter As IFormatterConverter, requireSameTokenInPartialTrust As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerializationInfo(Type ^ type, System::Runtime::Serialization::IFormatterConverter ^ converter, bool requireSameTokenInPartialTrust);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.SerializationInfo : Type * System.Runtime.Serialization.IFormatterConverter * bool -&gt; System.Runtime.Serialization.SerializationInfo" Usage="new System.Runtime.Serialization.SerializationInfo (type, converter, requireSameTokenInPartialTrust)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="converter" Type="System.Runtime.Serialization.IFormatterConverter" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requireSameTokenInPartialTrust" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="628ca-118">要序列化的对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-118">The <see cref="T:System.Type" /> of the object to serialize.</span></span></param>
        <param name="converter"><span data-ttu-id="628ca-119">在反序列化过程中使用的 <see cref="T:System.Runtime.Serialization.IFormatterConverter" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-119">The <see cref="T:System.Runtime.Serialization.IFormatterConverter" /> used during deserialization.</span></span></param>
        <param name="requireSameTokenInPartialTrust"><span data-ttu-id="628ca-120">指示对象是否需要部分信任的同一标记。</span><span class="sxs-lookup"><span data-stu-id="628ca-120">Indicates whether the object requires same token in partial trust.</span></span></param>
        <summary><span data-ttu-id="628ca-121">初始化 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="628ca-121">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="628ca-122">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 添加一个值。</span><span class="sxs-lookup"><span data-stu-id="628ca-122">Adds a value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, bool value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * bool -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-123">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-123">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-124">要序列化的布尔值。</span><span class="sxs-lookup"><span data-stu-id="628ca-124">The Boolean value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-125">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中添加一个布尔值。</span><span class="sxs-lookup"><span data-stu-id="628ca-125">Adds a Boolean value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-126">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-126">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-127">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-127">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span> <span data-ttu-id="628ca-128">例如：</span><span class="sxs-lookup"><span data-stu-id="628ca-128">For example:</span></span>  
  
```csharp  
void ISerializable.GetObject(SerializationInfo info, StreamingContext context)  
{  
   // This will not cause an exception to be thrown.  
   info.AddValue("ABC", true);  
   info.AddValue("abc", false);  
   // However, this will cause the SerializationException to be thrown.  
   info.AddValue("XYZ", true);  
   info.AddValue("XYZ", false);  
}  
```  
  
```vb  
Private Sub GetObjectData(ByVal info As SerializationInfo, _  
ByVal context As StreamingContext)  
   ' This will not cause an exception to be thrown.  
   info.AddValue("ABC", "upper case")  
   info.AddValue("abc", "lower case")  
   ' However, this will cause the SerializationException to be thrown.  
   info.AddValue("XYZ", "same case")  
   info.AddValue("XYZ", "same case")  
End Sub  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-129"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-129">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-130">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-130">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, System::Byte value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * byte -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-131">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-131">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-132">要序列化的字节值。</span><span class="sxs-lookup"><span data-stu-id="628ca-132">The byte value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-133">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个 8 位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-133">Adds an 8-bit unsigned integer value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-134">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-134">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-135">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-135">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-136"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-136">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-137">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-137">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, char value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * char -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-138">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-138">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-139">要序列化的字符值。</span><span class="sxs-lookup"><span data-stu-id="628ca-139">The character value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-140">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个 Unicode 字符值。</span><span class="sxs-lookup"><span data-stu-id="628ca-140">Adds a Unicode character value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-141">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-141">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-142">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-142">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-143"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-143">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-144">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-144">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * DateTime -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-145">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-145">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-146">要序列化的 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-146">The <see cref="T:System.DateTime" /> value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-147">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-147">Adds a <see cref="T:System.DateTime" /> value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-148">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-148">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-149">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-149">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-150"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-150">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-151">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-151">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * decimal -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-152">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-152">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-153">要序列化的十进制值。</span><span class="sxs-lookup"><span data-stu-id="628ca-153">The decimal value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-154">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个十进制值。</span><span class="sxs-lookup"><span data-stu-id="628ca-154">Adds a decimal value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-155">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-155">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-156">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-156">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-157">如果 <paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-157">If The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-158">如果已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-158">If a value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, double value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * double -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-159">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-159">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-160">要序列化的 Double 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-160">The double value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-161">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个双精度浮点值。</span><span class="sxs-lookup"><span data-stu-id="628ca-161">Adds a double-precision floating-point value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-162">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-162">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-163">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-163">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-164"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-164">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-165">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-165">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, short value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * int16 -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-166">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-166">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-167">要序列化的 <see cref="T:System.Int16" /> 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-167">The <see cref="T:System.Int16" /> value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-168">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个 16 位带符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-168">Adds a 16-bit signed integer value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-169">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-169">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-170">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-170">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-171"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-171">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-172">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-172">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, int value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * int -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-173">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-173">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-174">要序列化的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-174">The <see cref="T:System.Int32" /> value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-175">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个 32 位带符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-175">Adds a 32-bit signed integer value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-176">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-176">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-177">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-177">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-178"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-178">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-179">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-179">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, long value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * int64 -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-180">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-180">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-181">要序列化的 Int64 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-181">The Int64 value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-182">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个 64 位带符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-182">Adds a 64-bit signed integer value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-183">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-183">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-184">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-184">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-185"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-185">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-186">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-186">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, object? value);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * obj -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberSignature Language="C#" Value="public void AddValue (string name, object value);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-187">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-187">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-188">要串行化的值。</span><span class="sxs-lookup"><span data-stu-id="628ca-188">The value to be serialized.</span></span> <span data-ttu-id="628ca-189">会自动串行化此对象的所有子级。</span><span class="sxs-lookup"><span data-stu-id="628ca-189">Any children of this object will automatically be serialized.</span></span></param>
        <summary><span data-ttu-id="628ca-190">将指定的对象添加到与指定的名称关联的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。</span><span class="sxs-lookup"><span data-stu-id="628ca-190">Adds the specified object into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store, where it is associated with a specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-191">参数中包含的对象 `value` 被序列化为返回的类型 `value` 。</span><span class="sxs-lookup"><span data-stu-id="628ca-191">The object contained in the `value` parameter is serialized as the type returned by `value`.</span></span>  
  
 <span data-ttu-id="628ca-192">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-192">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-193">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-193">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-194"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-194"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-195">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-195">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, System::SByte value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * sbyte -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-196">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-196">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-197">要序列化的 <see langword="Sbyte" /> 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-197">The <see langword="Sbyte" /> value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-198">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个 8 位带符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-198">Adds an 8-bit signed integer value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-199">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-199">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-200">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-200">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-201"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-201">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-202">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-202">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, float value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * single -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-203">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-203">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-204">要序列化的 Single 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-204">The single value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-205">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个单精度浮点值。</span><span class="sxs-lookup"><span data-stu-id="628ca-205">Adds a single-precision floating-point value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-206">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-206">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-207">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-207">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-208"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-208">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-209">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-209">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * uint16 -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-210">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-210">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-211">要序列化的 <see cref="T:System.UInt16" /> 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-211">The <see cref="T:System.UInt16" /> value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-212">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个 16 位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-212">Adds a 16-bit unsigned integer value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-213">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-213">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-214">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-214">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-215"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-215">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-216">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-216">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * uint32 -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-217">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-217">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-218">要序列化的 <see cref="T:System.UInt32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-218">The <see cref="T:System.UInt32" /> value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-219">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个 32 位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-219">Adds a 32-bit unsigned integer value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-220">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-220">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-221">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-221">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628ca-222">下面的示例使用 <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> 方法自定义类型的序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-222">The following example uses the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> method to customize the serialization of a type.</span></span> <span data-ttu-id="628ca-223">此代码将一个字符串和一个整数添加到 <xref:System.Runtime.Serialization.SerializationInfo> 接口的方法中的类的实例 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> <xref:System.Runtime.Serialization.ISerializable> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-223">The code adds a string and an integer to an instance of the <xref:System.Runtime.Serialization.SerializationInfo> class in the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method of the <xref:System.Runtime.Serialization.ISerializable> interface.</span></span> <span data-ttu-id="628ca-224">此代码还使用 <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> 方法从检索值 <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-224">The code also uses the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method to retrieve values from the <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 [!code-csharp[ISerializable_GetObjectData#0](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable_GetObjectData/cs/ISerializable_GetObjectData.cs#0)]
 [!code-vb[ISerializable_GetObjectData#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable_GetObjectData/vb/ISerializable_GetObjectData.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-225"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-225">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-226">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-226">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * uint64 -&gt; unit" Usage="serializationInfo.AddValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-227">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-227">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-228">要序列化的值。</span><span class="sxs-lookup"><span data-stu-id="628ca-228">The value to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-229">向 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储添加一个 64 位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-229">Adds a 64-bit unsigned integer value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-230">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-230">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-231">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-231">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-232"><paramref name="name" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-232">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-233">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-233">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddValue">
      <MemberSignature Language="C#" Value="public void AddValue (string name, object? value, Type type);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValue(string name, object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValue (name As String, value As Object, type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValue(System::String ^ name, System::Object ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.AddValue : string * obj * Type -&gt; unit" Usage="serializationInfo.AddValue (name, value, type)" />
      <MemberSignature Language="C#" Value="public void AddValue (string name, object value, Type type);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-234">要与值关联的名称，因此它可在以后被反序列化。</span><span class="sxs-lookup"><span data-stu-id="628ca-234">The name to associate with the value, so it can be deserialized later.</span></span></param>
        <param name="value"><span data-ttu-id="628ca-235">要串行化的值。</span><span class="sxs-lookup"><span data-stu-id="628ca-235">The value to be serialized.</span></span> <span data-ttu-id="628ca-236">会自动串行化此对象的所有子级。</span><span class="sxs-lookup"><span data-stu-id="628ca-236">Any children of this object will automatically be serialized.</span></span></param>
        <param name="type"><span data-ttu-id="628ca-237">要与当前对象相关联的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-237">The <see cref="T:System.Type" /> to associate with the current object.</span></span> <span data-ttu-id="628ca-238">此参数必须始终是该对象本身的类型或其中一个基类的类型。</span><span class="sxs-lookup"><span data-stu-id="628ca-238">This parameter must always be the type of the object itself or of one of its base classes.</span></span></param>
        <summary><span data-ttu-id="628ca-239">将一个值添加到 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中，其中 <paramref name="value" /> 与 <paramref name="name" /> 相关联，并串行化为 <see cref="T:System.Type" /><paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-239">Adds a value into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store, where <paramref name="value" /> is associated with <paramref name="name" /> and is serialized as being of <see cref="T:System.Type" /><paramref name="type" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-240">已分配的类型始终是对象的类型或它的某个父级。</span><span class="sxs-lookup"><span data-stu-id="628ca-240">The assigned type is always the type of the object, or one of its parents.</span></span>  
  
 <span data-ttu-id="628ca-241">如果使用仅大小写不同的名称添加了两个值，则不会引发异常，这是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="628ca-241">If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</span></span> <span data-ttu-id="628ca-242">但是，添加具有相同名称的两个值将导致 <xref:System.Runtime.Serialization.SerializationException> 引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-242">However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-243">如果 <paramref name="name" /> 或 <paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-243">If <paramref name="name" /> or <paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-244">已有值与 <paramref name="name" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="628ca-244">A value has already been associated with <paramref name="name" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.SerializationInfo.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string with get, set" Usage="System.Runtime.Serialization.SerializationInfo.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="628ca-245">仅在序列化期间获取或设置要序列化的类型的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-245">Gets or sets the assembly name of the type to serialize during serialization only.</span></span></summary>
        <value><span data-ttu-id="628ca-246">要序列化的类型的程序集的全名。</span><span class="sxs-lookup"><span data-stu-id="628ca-246">The full name of the assembly of the type to serialize.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-247">与 <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> 包含类型的程序集的属性返回的值相同 <xref:System.Reflection.Assembly.FullName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-247">The <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> is the same as the value returned by <xref:System.Reflection.Assembly.FullName%2A> property of the assembly of the containing type.</span></span> <span data-ttu-id="628ca-248">这是格式化程序在序列化此对象的类型信息时使用的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-248">This is the assembly name that the formatter uses when serializing type information for this object.</span></span>  
  
 <span data-ttu-id="628ca-249">程序集名称包含程序集的名称、版本、区域性以及有关对象的某些安全信息。</span><span class="sxs-lookup"><span data-stu-id="628ca-249">The assembly name contains the name of the assembly, version, culture, and some security information about the object.</span></span>  
  
 <span data-ttu-id="628ca-250">更改正在序列化的类型的用户 (例如，为特定类型发送代理) 将设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="628ca-250">Users who are changing the type being serialized (for example, to send a proxy for a particular type) will set the value of this property.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="628ca-251">在反序列化期间不要使用此属性，因为此属性的值是不确定的。</span><span class="sxs-lookup"><span data-stu-id="628ca-251">Do not use this property during deserialization because the value of this property is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-252">该属性的值设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-252">The value the property is set to is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FullTypeName">
      <MemberSignature Language="C#" Value="public string FullTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.SerializationInfo.FullTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property FullTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullTypeName : string with get, set" Usage="System.Runtime.Serialization.SerializationInfo.FullTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="628ca-253">获取或设置要序列化的 <see cref="T:System.Type" /> 的全名。</span><span class="sxs-lookup"><span data-stu-id="628ca-253">Gets or sets the full name of the <see cref="T:System.Type" /> to serialize.</span></span></summary>
        <value><span data-ttu-id="628ca-254">要序列化的类型的全名。</span><span class="sxs-lookup"><span data-stu-id="628ca-254">The full name of the type to serialize.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-255">与 <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> 通过调用上的返回内容相同 <xref:System.Type.FullName%2A> <xref:System.Type> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-255">The <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> is the same as what would be returned by calling the <xref:System.Type.FullName%2A> on <xref:System.Type>.</span></span> <span data-ttu-id="628ca-256">这是格式化程序在序列化此对象的类型信息时使用的类型名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-256">This is the type name the formatter uses when serializing type information for this object.</span></span>  
  
 <span data-ttu-id="628ca-257">更改类型以进行序列化的用户 (例如，为特定类型发送代理) 将需要设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="628ca-257">Users who are changing the type to serialize (for example, to send a proxy for a particular type) will want to set the value of this property.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="628ca-258">在反序列化期间不要使用此属性，因为此属性的值是不确定的。</span><span class="sxs-lookup"><span data-stu-id="628ca-258">Do not use this property during deserialization because the value of this property is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-259">此属性的值设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-259">The value this property is set to is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetBoolean(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoolean (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetBoolean(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetBoolean : string -&gt; bool" Usage="serializationInfo.GetBoolean name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-260">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-260">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-261">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个布尔值。</span><span class="sxs-lookup"><span data-stu-id="628ca-261">Retrieves a Boolean value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-262">与 <paramref name="name" /> 关联的布尔值。</span><span class="sxs-lookup"><span data-stu-id="628ca-262">The Boolean value associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-263">如果值为布尔值，或可转换为布尔值，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-263">If the value is a Boolean, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-264">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-264">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-265"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-265"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-266">与 <paramref name="name" /> 关联的值不能转换为布尔值。</span><span class="sxs-lookup"><span data-stu-id="628ca-266">The value associated with <paramref name="name" /> cannot be converted to a Boolean value.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-267">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-267">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public byte GetByte (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8 GetByte(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByte (name As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Byte GetByte(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetByte : string -&gt; byte" Usage="serializationInfo.GetByte name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-268">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-268">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-269">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个 8 位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-269">Retrieves an 8-bit unsigned integer value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-270">与 <paramref name="name" /> 关联的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-270">The 8-bit unsigned integer associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-271">如果值是一个8位无符号整数，或可以转换为一个值，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-271">If the value is an 8-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-272">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-272">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-273"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-273"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-274">与 <paramref name="name" /> 关联的值不能转换为 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-274">The value associated with <paramref name="name" /> cannot be converted to an 8-bit unsigned integer.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-275">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-275">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public char GetChar (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char GetChar(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetChar(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChar (name As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; char GetChar(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetChar : string -&gt; char" Usage="serializationInfo.GetChar name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-276">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-276">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-277">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个 Unicode 字符值。</span><span class="sxs-lookup"><span data-stu-id="628ca-277">Retrieves a Unicode character value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-278">与 <paramref name="name" /> 关联的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="628ca-278">The Unicode character associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-279">如果值是一个 Unicode 字符，或可以转换为一个 Unicode 字符，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-279">If the value is a Unicode character, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-280">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-280">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-281"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-281"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-282">与 <paramref name="name" /> 关联的值不能转换为 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="628ca-282">The value associated with <paramref name="name" /> cannot be converted to a Unicode character.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-283">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-283">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public DateTime GetDateTime (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetDateTime(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTime (name As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetDateTime(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetDateTime : string -&gt; DateTime" Usage="serializationInfo.GetDateTime name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-284">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-284">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-285">从 <see cref="T:System.DateTime" /> 存储中检索一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-285">Retrieves a <see cref="T:System.DateTime" /> value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-286">与 <paramref name="name" /> 关联的 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-286">The <see cref="T:System.DateTime" /> value associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-287">如果值为 <xref:System.DateTime> ，或可以转换为，则返回该值 <xref:System.DateTime> ; 否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-287">If the value is a <xref:System.DateTime>, or can be converted to a <xref:System.DateTime>, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-288">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-288">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-289"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-289"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-290">与 <paramref name="name" /> 关联的值不能转换为 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-290">The value associated with <paramref name="name" /> cannot be converted to a <see cref="T:System.DateTime" /> value.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-291">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-291">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public decimal GetDecimal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Decimal GetDecimal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDecimal (name As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Decimal GetDecimal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetDecimal : string -&gt; decimal" Usage="serializationInfo.GetDecimal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-292">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-292">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-293">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个十进制值。</span><span class="sxs-lookup"><span data-stu-id="628ca-293">Retrieves a decimal value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-294"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> 中的十进制值。</span><span class="sxs-lookup"><span data-stu-id="628ca-294">A decimal value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-295">如果该值为 decimal 或可转换为十进制，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-295">If the value is a decimal, or can be converted to a decimal, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-296">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-296">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-297"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-297"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-298">与 <paramref name="name" /> 关联的值不能转换为十进制值。</span><span class="sxs-lookup"><span data-stu-id="628ca-298">The value associated with <paramref name="name" /> cannot be converted to a decimal.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-299">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-299">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public double GetDouble (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetDouble(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDouble (name As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetDouble(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetDouble : string -&gt; double" Usage="serializationInfo.GetDouble name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-300">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-300">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-301">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个双精度浮点值。</span><span class="sxs-lookup"><span data-stu-id="628ca-301">Retrieves a double-precision floating-point value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-302">与 <paramref name="name" /> 关联的双精度浮点值。</span><span class="sxs-lookup"><span data-stu-id="628ca-302">The double-precision floating-point value associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-303">如果该值为 double，或可转换为 double，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-303">If the value is a double, or can be converted to a double, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-304">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-304">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-305"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-305"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-306">与 <paramref name="name" /> 关联的值不能转换为双精度浮点值。</span><span class="sxs-lookup"><span data-stu-id="628ca-306">The value associated with <paramref name="name" /> cannot be converted to a double-precision floating-point value.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-307">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-307">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationInfoEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Serialization.SerializationInfoEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As SerializationInfoEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Serialization::SerializationInfoEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Runtime.Serialization.SerializationInfoEnumerator" Usage="serializationInfo.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationInfoEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="628ca-308">返回一个 <see cref="T:System.Runtime.Serialization.SerializationInfoEnumerator" />，用于循环访问 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="628ca-308">Returns a <see cref="T:System.Runtime.Serialization.SerializationInfoEnumerator" /> used to iterate through the name-value pairs in the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-309">一个 <see cref="T:System.Runtime.Serialization.SerializationInfoEnumerator" />，用于分析 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="628ca-309">A <see cref="T:System.Runtime.Serialization.SerializationInfoEnumerator" /> for parsing the name-value pairs contained in the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-310">此函数通常由在将这些值写入流之前需要枚举这些值的格式化程序使用。</span><span class="sxs-lookup"><span data-stu-id="628ca-310">This function will most often be used by formatters that need to enumerate through the values before writing them out to the stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public short GetInt16 (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int16 GetInt16(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt16 (name As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short GetInt16(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetInt16 : string -&gt; int16" Usage="serializationInfo.GetInt16 name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-311">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-311">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-312">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个 16 位带符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-312">Retrieves a 16-bit signed integer value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-313">与 <paramref name="name" /> 关联的 16 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-313">The 16-bit signed integer associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-314">如果值是一个16位有符号整数，或可以转换为一个，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-314">If the value is a 16-bit signed integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-315">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-315">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-316"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-316"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-317">与 <paramref name="name" /> 关联的值不能转换为 16 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-317">The value associated with <paramref name="name" /> cannot be converted to a 16-bit signed integer.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-318">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-318">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public int GetInt32 (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetInt32(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt32 (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetInt32(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetInt32 : string -&gt; int" Usage="serializationInfo.GetInt32 name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-319">要检索的值的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-319">The name of the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-320">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个 32 位带符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-320">Retrieves a 32-bit signed integer value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-321">与 <paramref name="name" /> 关联的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-321">The 32-bit signed integer associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-322">如果该值为32位有符号整数，或可以转换为一个，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-322">If the value is a 32-bit signed integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-323">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-323">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-324"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-324"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-325">与 <paramref name="name" /> 关联的值不能转换为 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-325">The value associated with <paramref name="name" /> cannot be converted to a 32-bit signed integer.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-326">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-326">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public long GetInt64 (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetInt64(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt64 (name As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetInt64(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetInt64 : string -&gt; int64" Usage="serializationInfo.GetInt64 name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-327">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-327">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-328">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个 64 位带符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-328">Retrieves a 64-bit signed integer value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-329">与 <paramref name="name" /> 关联的 64 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-329">The 64-bit signed integer associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-330">如果该值为64位有符号整数，或可以转换为一个，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-330">If the value is a 64-bit signed integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-331">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-331">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-332"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-332"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-333">与 <paramref name="name" /> 关联的值不能转换为 64 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-333">The value associated with <paramref name="name" /> cannot be converted to a 64-bit signed integer.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-334">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-334">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSByte">
      <MemberSignature Language="C#" Value="public sbyte GetSByte (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int8 GetSByte(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSByte (name As String) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::SByte GetSByte(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetSByte : string -&gt; sbyte" Usage="serializationInfo.GetSByte name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-335">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-335">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-336">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个 8 位带符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-336">Retrieves an 8-bit signed integer value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-337">与 <paramref name="name" /> 关联的 8 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-337">The 8-bit signed integer associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-338">如果值为 `Int8` ，或可以转换为，则返回该值 `Int8` ; 否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-338">If the value is an `Int8`, or can be converted to an `Int8`, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-339">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-339">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-340"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-340"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-341">与 <paramref name="name" /> 关联的值不能转换为 8 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-341">The value associated with <paramref name="name" /> cannot be converted to an 8-bit signed integer.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-342">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-342">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSingle">
      <MemberSignature Language="C#" Value="public float GetSingle (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetSingle(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSingle (name As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetSingle(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetSingle : string -&gt; single" Usage="serializationInfo.GetSingle name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-343">要检索的值的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-343">The name of the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-344">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个单精度浮点值。</span><span class="sxs-lookup"><span data-stu-id="628ca-344">Retrieves a single-precision floating-point value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-345">与 <paramref name="name" /> 关联的单精度浮点值。</span><span class="sxs-lookup"><span data-stu-id="628ca-345">The single-precision floating-point value associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-346">如果该值为单精度浮点数，或可以转换为一个浮点数字，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-346">If the value is a single-precision floating-point number, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-347">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-347">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-348"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-348"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-349">与 <paramref name="name" /> 关联的值不能转换为单精度浮点值。</span><span class="sxs-lookup"><span data-stu-id="628ca-349">The value associated with <paramref name="name" /> cannot be converted to a single-precision floating-point value.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-350">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-350">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string? GetString (string name);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetString : string -&gt; string" Usage="serializationInfo.GetString name" />
      <MemberSignature Language="C#" Value="public string GetString (string name);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-351">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-351">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-352">从 <see cref="T:System.String" /> 存储中检索一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 值。</span><span class="sxs-lookup"><span data-stu-id="628ca-352">Retrieves a <see cref="T:System.String" /> value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-353">与 <see cref="T:System.String" /> 关联的 <paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-353">The <see cref="T:System.String" /> associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-354">如果值为 <xref:System.String> ，或可以转换为，则返回该值 <xref:System.String> ; 否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-354">If the value is a <xref:System.String>, or can be converted to a <xref:System.String>, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-355">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-355">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-356"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-356"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-357">与 <paramref name="name" /> 关联的值不能转换为 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-357">The value associated with <paramref name="name" /> cannot be converted to a <see cref="T:System.String" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-358">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-358">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUInt16">
      <MemberSignature Language="C#" Value="public ushort GetUInt16 (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16 GetUInt16(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUInt16 (name As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt16 GetUInt16(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetUInt16 : string -&gt; uint16" Usage="serializationInfo.GetUInt16 name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-359">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-359">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-360">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个 16 位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-360">Retrieves a 16-bit unsigned integer value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-361">与 <paramref name="name" /> 关联的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-361">The 16-bit unsigned integer associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-362">如果值为16位无符号整数，或可以转换为一个值，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-362">If the value is a 16-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-363">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-363">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-364"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-364"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-365">与 <paramref name="name" /> 关联的值不能转换为 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-365">The value associated with <paramref name="name" /> cannot be converted to a 16-bit unsigned integer.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-366">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-366">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUInt32">
      <MemberSignature Language="C#" Value="public uint GetUInt32 (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 GetUInt32(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUInt32 (name As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt32 GetUInt32(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetUInt32 : string -&gt; uint32" Usage="serializationInfo.GetUInt32 name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-367">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-367">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-368">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个 32 位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-368">Retrieves a 32-bit unsigned integer value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-369">与 <paramref name="name" /> 关联的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-369">The 32-bit unsigned integer associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-370">如果该值为32位有符号整数，或可以转换为一个，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-370">If the value is a 32-bit signed integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-371">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-371">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-372"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-372"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-373">与 <paramref name="name" /> 关联的值不能转换为 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-373">The value associated with <paramref name="name" /> cannot be converted to a 32-bit unsigned integer.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-374">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-374">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUInt64">
      <MemberSignature Language="C#" Value="public ulong GetUInt64 (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int64 GetUInt64(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUInt64 (name As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt64 GetUInt64(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetUInt64 : string -&gt; uint64" Usage="serializationInfo.GetUInt64 name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-375">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-375">The name associated with the value to retrieve.</span></span></param>
        <summary><span data-ttu-id="628ca-376">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个 64 位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="628ca-376">Retrieves a 64-bit unsigned integer value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-377">与 <paramref name="name" /> 关联的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-377">The 64-bit unsigned integer associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-378">如果该值为64位无符号整数，或可以转换为一个值，则返回该值;否则， <xref:System.InvalidCastException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="628ca-378">If the value is a 64-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown.</span></span> <span data-ttu-id="628ca-379">所有转换都是通过与此关联的来完成的 <xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-379">All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-380"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-380"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-381">与 <paramref name="name" /> 关联的值不能转换为 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="628ca-381">The value associated with <paramref name="name" /> cannot be converted to a 64-bit unsigned integer.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-382">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-382">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object? GetValue (string name, Type type);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String, type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * Type -&gt; obj" Usage="serializationInfo.GetValue (name, type)" />
      <MemberSignature Language="C#" Value="public object GetValue (string name, Type type);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="628ca-383">与要检索的值关联的名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-383">The name associated with the value to retrieve.</span></span></param>
        <param name="type"><span data-ttu-id="628ca-384">要检索的值的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-384">The <see cref="T:System.Type" /> of the value to retrieve.</span></span> <span data-ttu-id="628ca-385">如果存储的值不能转换为此类型，则系统会引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-385">If the stored value cannot be converted to this type, the system will throw a <see cref="T:System.InvalidCastException" />.</span></span></param>
        <summary><span data-ttu-id="628ca-386">从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中检索一个值。</span><span class="sxs-lookup"><span data-stu-id="628ca-386">Retrieves a value from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <returns><span data-ttu-id="628ca-387">与 <paramref name="name" /> 关联的已指定 <see cref="T:System.Type" /> 的对象。</span><span class="sxs-lookup"><span data-stu-id="628ca-387">The object of the specified <see cref="T:System.Type" /> associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-388">如果存储在中的数据 <xref:System.Runtime.Serialization.SerializationInfo> 是所请求的类型 (或其派生类之一) ，则将直接返回该值。</span><span class="sxs-lookup"><span data-stu-id="628ca-388">If the data stored in the <xref:System.Runtime.Serialization.SerializationInfo> is of the type requested (or one of its derived classes), that value is returned directly.</span></span> <span data-ttu-id="628ca-389">否则，将 <xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=nameWithType> 调用来将其转换为适当的类型。</span><span class="sxs-lookup"><span data-stu-id="628ca-389">Otherwise, <xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=nameWithType> is called to convert it to the appropriate type.</span></span>  
  
 <span data-ttu-id="628ca-390">方法返回的值 <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> 始终可以安全地强制转换为参数中指定的类型 `type` 。</span><span class="sxs-lookup"><span data-stu-id="628ca-390">The value returned by the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method can always be safely cast to the type specified in the `type` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628ca-391">下面的代码示例演示方法的用法 <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> ：</span><span class="sxs-lookup"><span data-stu-id="628ca-391">The following code example demonstrates the use of the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method:</span></span>  
  
 [!code-cpp[Classic SerializationInfo.GetValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SerializationInfo.GetValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SerializationInfo.GetValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SerializationInfo.GetValue Example/CS/source.cs#1)]
 [!code-vb[Classic SerializationInfo.GetValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SerializationInfo.GetValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-392"><paramref name="name" /> 或 <paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-392"><paramref name="name" /> or <paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="628ca-393">与 <paramref name="name" /> 关联的值不能转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-393">The value associated with <paramref name="name" /> cannot be converted to <paramref name="type" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="628ca-394">当前实例中没有找到具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="628ca-394">An element with the specified name is not found in the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAssemblyNameSetExplicit">
      <MemberSignature Language="C#" Value="public bool IsAssemblyNameSetExplicit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssemblyNameSetExplicit" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAssemblyNameSetExplicit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAssemblyNameSetExplicit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAssemblyNameSetExplicit : bool" Usage="System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="628ca-395">获取是否已显式设置程序集名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-395">Gets whether the assembly name has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="628ca-396"><see langword="true" /> 如果已显式设置程序集名称，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-396"><see langword="true" /> if the assembly name has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullTypeNameSetExplicit">
      <MemberSignature Language="C#" Value="public bool IsFullTypeNameSetExplicit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullTypeNameSetExplicit" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFullTypeNameSetExplicit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFullTypeNameSetExplicit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFullTypeNameSetExplicit : bool" Usage="System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="628ca-397">获取是否已显式设置完整类型名称。</span><span class="sxs-lookup"><span data-stu-id="628ca-397">Gets whether the full type name has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="628ca-398"><see langword="true" /> 如果已显式设置完整类型名称，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-398"><see langword="true" /> if the full type name has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberCount">
      <MemberSignature Language="C#" Value="public int MemberCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemberCount" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.SerializationInfo.MemberCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemberCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberCount : int" Usage="System.Runtime.Serialization.SerializationInfo.MemberCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="628ca-399">获取已添加到 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储中的成员数目。</span><span class="sxs-lookup"><span data-stu-id="628ca-399">Gets the number of members that have been added to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> store.</span></span></summary>
        <value><span data-ttu-id="628ca-400">已添加到当前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 中的成员的数目。</span><span class="sxs-lookup"><span data-stu-id="628ca-400">The number of members that have been added to the current <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectType">
      <MemberSignature Language="C#" Value="public Type ObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ObjectType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.SerializationInfo.ObjectType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ObjectType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ObjectType : Type" Usage="System.Runtime.Serialization.SerializationInfo.ObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="628ca-401">返回要串行化的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="628ca-401">Returns the type of the object to be serialized.</span></span></summary>
        <value><span data-ttu-id="628ca-402">序列化的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="628ca-402">The type of the object being serialized.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetType">
      <MemberSignature Language="C#" Value="public void SetType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationInfo.SetType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetType (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.SetType : Type -&gt; unit" Usage="serializationInfo.SetType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="628ca-403">要序列化的对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-403">The <see cref="T:System.Type" /> of the object to serialize.</span></span></param>
        <summary><span data-ttu-id="628ca-404">设置要序列化的对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-404">Sets the <see cref="T:System.Type" /> of the object to serialize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628ca-405"><xref:System.Runtime.Serialization.Formatter>负责设置实例的， <xref:System.Type> 然后将 <xref:System.Runtime.Serialization.SerializationInfo> 其传递给 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-405">The <xref:System.Runtime.Serialization.Formatter> is responsible for setting the <xref:System.Type> of the <xref:System.Runtime.Serialization.SerializationInfo> instance before passing it to <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</span></span> <span data-ttu-id="628ca-406">但是，想要为其对象发送代理的用户将需要更改此实例所表示的类型 <xref:System.Runtime.Serialization.SerializationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-406">However, users who want to send proxies for their objects will need to change the type represented by this <xref:System.Runtime.Serialization.SerializationInfo> instance.</span></span> <span data-ttu-id="628ca-407">使用 <xref:System.Runtime.Serialization.SerializationInfo.SetType%2A> 方法等效于同时设置 <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> 和 <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="628ca-407">Using the <xref:System.Runtime.Serialization.SerializationInfo.SetType%2A> method is equivalent to setting both the <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> and the <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[IObjectReference Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IObjectReference Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[IObjectReference Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IObjectReference Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[IObjectReference Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IObjectReference Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="628ca-408"><paramref name="type" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="628ca-408">The <paramref name="type" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
