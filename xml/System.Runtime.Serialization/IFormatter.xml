<Type Name="IFormatter" FullName="System.Runtime.Serialization.IFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa5c7fa76349871b27f33eef95706ca5a4a7ffe8" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83955446" /></Metadata><TypeSignature Language="C#" Value="public interface IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormatter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormatter" />
  <TypeSignature Language="F#" Value="type IFormatter = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime.Serialization.Formatters" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8650a-101">提供用于格式化串行化对象的功能。</span><span class="sxs-lookup"><span data-stu-id="8650a-101">Provides functionality for formatting serialized objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8650a-102">此接口必须由在 <xref:System.Runtime.Serialization> 体系结构中标识为格式化程序的任何类实现。</span><span class="sxs-lookup"><span data-stu-id="8650a-102">This interface must be implemented by any class identified as a formatter in the <xref:System.Runtime.Serialization> architecture.</span></span>  
  
 <span data-ttu-id="8650a-103">控制其自己的序列化的对象可通过实现 <xref:System.Runtime.Serialization.ISerializable> 接口实现此目的。</span><span class="sxs-lookup"><span data-stu-id="8650a-103">Objects controlling their own serialization can do so by implementing the <xref:System.Runtime.Serialization.ISerializable> interface.</span></span> <span data-ttu-id="8650a-104">若要对对象进行序列化，必须将该对象标记为可序列化。</span><span class="sxs-lookup"><span data-stu-id="8650a-104">In order for an object to be serialized, you must mark that object as being serializable.</span></span> <span data-ttu-id="8650a-105">为此，可将可序列化属性应用于类。</span><span class="sxs-lookup"><span data-stu-id="8650a-105">You can do this by applying the serializable attribute to a class.</span></span> <span data-ttu-id="8650a-106">如果关系图中的任何对象不可序列化，则序列化将会失败。</span><span class="sxs-lookup"><span data-stu-id="8650a-106">If any object in the graph is not serializable, serialization will fail.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="8650a-107">所有格式化程序都必须实现此接口。</span><span class="sxs-lookup"><span data-stu-id="8650a-107">All formatters must implement this interface.</span></span> <span data-ttu-id="8650a-108">使用 <see cref="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)" /> 对对象或对象图形进行序列化。</span><span class="sxs-lookup"><span data-stu-id="8650a-108">Use <see cref="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)" /> to serialize an object or graph of objects.</span></span> <span data-ttu-id="8650a-109">使用 <see cref="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)" /> 对流进行反序列化，并创建原始对象或对象图形的复本。</span><span class="sxs-lookup"><span data-stu-id="8650a-109">Use <see cref="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)" /> to deserialize a stream and create a clone of the original object or graph of objects.</span></span></para></block>
    <altmember cref="T:System.Runtime.Serialization.Formatter" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <related type="Article" href="/dotnet/standard/serialization/xml-and-soap-serialization"><span data-ttu-id="8650a-110">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="8650a-110">XML and SOAP Serialization</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.IFormatter.Binder" />
      <MemberSignature Language="VB.NET" Value="Public Property Binder As SerializationBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::SerializationBinder ^ Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binder : System.Runtime.Serialization.SerializationBinder with get, set" Usage="System.Runtime.Serialization.IFormatter.Binder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8650a-111">获取或设置在反序列化过程中执行类型查找的 <see cref="T:System.Runtime.Serialization.SerializationBinder" />。</span><span class="sxs-lookup"><span data-stu-id="8650a-111">Gets or sets the <see cref="T:System.Runtime.Serialization.SerializationBinder" /> that performs type lookups during deserialization.</span></span></summary>
        <value><span data-ttu-id="8650a-112">在反序列化过程中执行类型查找的 <see cref="T:System.Runtime.Serialization.SerializationBinder" />。</span><span class="sxs-lookup"><span data-stu-id="8650a-112">The <see cref="T:System.Runtime.Serialization.SerializationBinder" /> that performs type lookups during deserialization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8650a-113">尝试从流中编码的信息解析类型时，格式化程序调用 <xref:System.Runtime.Serialization.SerializationBinder>上的 <xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8650a-113">When trying to resolve a type from information encoded on the stream, the formatter calls the <xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A> method on the <xref:System.Runtime.Serialization.SerializationBinder>.</span></span> <span data-ttu-id="8650a-114">此方法将这些参数解析为 <xref:System.Type> 对象。</span><span class="sxs-lookup"><span data-stu-id="8650a-114">This method resolves these parameters to a <xref:System.Type> object.</span></span> <span data-ttu-id="8650a-115">此联编程序可以在反序列化时间找到与序列化时间不同的程序集中的 <xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="8650a-115">The binder can find a <xref:System.Type> at deserialization time that is in a different assembly than it was at serialization time.</span></span>  
  
 <span data-ttu-id="8650a-116">设置此属性在序列化过程中不起作用。</span><span class="sxs-lookup"><span data-stu-id="8650a-116">Setting this property has no effect during serialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.IFormatter.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As StreamingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::StreamingContext Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Runtime.Serialization.StreamingContext with get, set" Usage="System.Runtime.Serialization.IFormatter.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8650a-117">获取或设置用于序列化和反序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="8650a-117">Gets or sets the <see cref="T:System.Runtime.Serialization.StreamingContext" /> used for serialization and deserialization.</span></span></summary>
        <value><span data-ttu-id="8650a-118">用于序列化和反序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="8650a-118">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> used for serialization and deserialization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8650a-119">此属性的值将传递给实现 <xref:System.Runtime.Serialization.ISerializable> 或 <xref:System.Runtime.Serialization.ISerializationSurrogate>的任何对象。</span><span class="sxs-lookup"><span data-stu-id="8650a-119">The value of this property is passed to any object implementing <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Runtime.Serialization.ISerializationSurrogate>.</span></span> <span data-ttu-id="8650a-120"><xref:System.Runtime.Serialization.StreamingContext> 指示在数据的序列化过程中或数据源（在反序列化期间）的目标。</span><span class="sxs-lookup"><span data-stu-id="8650a-120">The <xref:System.Runtime.Serialization.StreamingContext> indicates the destination (during serialization) or the source (during deserialization) of the data.</span></span> <span data-ttu-id="8650a-121">实现 <xref:System.Runtime.Serialization.ISerializable> 的对象可以根据 <xref:System.Runtime.Serialization.IFormatter.Context%2A>的值更改其传输的数据。</span><span class="sxs-lookup"><span data-stu-id="8650a-121">An object implementing <xref:System.Runtime.Serialization.ISerializable> can alter the data that it transmits depending on value of the <xref:System.Runtime.Serialization.IFormatter.Context%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::Stream ^ serializationStream);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.IO.Stream -&gt; obj" Usage="iFormatter.Deserialize serializationStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serializationStream"><span data-ttu-id="8650a-122">包含要反序列化的数据的流。</span><span class="sxs-lookup"><span data-stu-id="8650a-122">The stream that contains the data to deserialize.</span></span></param>
        <summary><span data-ttu-id="8650a-123">反序列化所提供流中的数据并重新组成对象图形。</span><span class="sxs-lookup"><span data-stu-id="8650a-123">Deserializes the data on the provided stream and reconstitutes the graph of objects.</span></span></summary>
        <returns><span data-ttu-id="8650a-124">反序列化图形的顶级对象。</span><span class="sxs-lookup"><span data-stu-id="8650a-124">The top object of the deserialized graph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8650a-125"><xref:System.Runtime.Serialization.IFormatter.Deserialize%2A> 方法从流中读取关系图信息并重新构造原始关系图的克隆。</span><span class="sxs-lookup"><span data-stu-id="8650a-125">The <xref:System.Runtime.Serialization.IFormatter.Deserialize%2A> method reads graph information from the stream and reconstructs a clone of the original graph.</span></span> <span data-ttu-id="8650a-126">将保留关系图的拓扑。</span><span class="sxs-lookup"><span data-stu-id="8650a-126">The topology of the graph is preserved.</span></span>  
  
 <span data-ttu-id="8650a-127">反序列化进程分配适当类型的空对象，并从 `serializationStream` 流中传输的数据重新填充其字段。</span><span class="sxs-lookup"><span data-stu-id="8650a-127">The deserialization process allocates an empty object of the appropriate type and repopulates its fields from the data transmitted in the `serializationStream` stream.</span></span> <span data-ttu-id="8650a-128">请务必注意，在反序列化期间，不会对对象调用任何构造函数。</span><span class="sxs-lookup"><span data-stu-id="8650a-128">It is important to note that no constructor is ever called on the object during deserialization.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/serialization/xml-and-soap-serialization"><span data-ttu-id="8650a-129">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="8650a-129">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationStream As Stream, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ serializationStream, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.IO.Stream * obj -&gt; unit" Usage="iFormatter.Serialize (serializationStream, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationStream"><span data-ttu-id="8650a-130">格式化程序在其中放置串行化数据的流。</span><span class="sxs-lookup"><span data-stu-id="8650a-130">The stream where the formatter puts the serialized data.</span></span> <span data-ttu-id="8650a-131">此流可以引用多种后备存储（如文件、网络、内存等）。</span><span class="sxs-lookup"><span data-stu-id="8650a-131">This stream can reference a variety of backing stores (such as files, network, memory, and so on).</span></span></param>
        <param name="graph"><span data-ttu-id="8650a-132">要序列化的对象或对象图形的根。</span><span class="sxs-lookup"><span data-stu-id="8650a-132">The object, or root of the object graph, to serialize.</span></span> <span data-ttu-id="8650a-133">将自动序列化此根对象的所有子对象。</span><span class="sxs-lookup"><span data-stu-id="8650a-133">All child objects of this root object are automatically serialized.</span></span></param>
        <summary><span data-ttu-id="8650a-134">将对象或具有给定根的对象图形序列化为所提供的流。</span><span class="sxs-lookup"><span data-stu-id="8650a-134">Serializes an object, or graph of objects with the given root to the provided stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8650a-135"><xref:System.Runtime.Serialization.IFormatter.Serialize%2A> 方法会自动将提供的对象及其所有连接到该对象的对象序列化到所提供的流。</span><span class="sxs-lookup"><span data-stu-id="8650a-135">The <xref:System.Runtime.Serialization.IFormatter.Serialize%2A> method automatically serializes the provided objects, and all objects connected to it, to the provided stream.</span></span>  
  
 <span data-ttu-id="8650a-136">默认情况下，序列化过程通过收集对象的所有字段（公共和私有）的值来记录对象的状态。</span><span class="sxs-lookup"><span data-stu-id="8650a-136">By default, the serialization process records an object's state by gathering the values of all its fields (public and private).</span></span> <span data-ttu-id="8650a-137">这些字段将连同有关对象的信息（例如，由程序集的类型限定的名称）一起保存到流中。</span><span class="sxs-lookup"><span data-stu-id="8650a-137">These fields are saved to the stream along with information about the object such as the name qualified by the assembly for its type.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/serialization/xml-and-soap-serialization"><span data-ttu-id="8650a-138">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="8650a-138">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.IFormatter.SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property SurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ISurrogateSelector ^ SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SurrogateSelector : System.Runtime.Serialization.ISurrogateSelector with get, set" Usage="System.Runtime.Serialization.IFormatter.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8650a-139">获取或设置当前格式化程序所使用的 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />。</span><span class="sxs-lookup"><span data-stu-id="8650a-139">Gets or sets the <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> used by the current formatter.</span></span></summary>
        <value><span data-ttu-id="8650a-140">当前格式化程序所使用的 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />。</span><span class="sxs-lookup"><span data-stu-id="8650a-140">The <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> used by this formatter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8650a-141"><xref:System.Runtime.Serialization.ISerializationSurrogate> 允许用户指定最适合处理特定对象或对象类的序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="8650a-141">A <xref:System.Runtime.Serialization.ISerializationSurrogate> allows the user to specify an object best suited to handle the serialization of a particular object or class of objects.</span></span> <span data-ttu-id="8650a-142">将其视为 <xref:System.Runtime.Serialization.ISerializable> 的实现，但由其他对象提供。</span><span class="sxs-lookup"><span data-stu-id="8650a-142">Think of it as an implementation of <xref:System.Runtime.Serialization.ISerializable> but provided by a different object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
