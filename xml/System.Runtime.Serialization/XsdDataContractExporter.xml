<Type Name="XsdDataContractExporter" FullName="System.Runtime.Serialization.XsdDataContractExporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="393b1fbf3a17f46b8cf4d7e0bc0204fa4a5f868f" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83946503" /></Metadata><TypeSignature Language="C#" Value="public class XsdDataContractExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsdDataContractExporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XsdDataContractExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XsdDataContractExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsdDataContractExporter" />
  <TypeSignature Language="F#" Value="type XsdDataContractExporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime.Serialization.Xml" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="328f9-101">用于将数据协定中使用的一组 .NET Framework 类型转换成 XML 架构文件 (.xsd)。</span><span class="sxs-lookup"><span data-stu-id="328f9-101">Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328f9-102">在已创建的 Web 服务包含由公共语言运行库 (CLR) 类型表示的数据时，以及在需要为其他 Web 服务将使用的每个类型导出 XML 架构时，请使用 <xref:System.Runtime.Serialization.XsdDataContractExporter> 类。</span><span class="sxs-lookup"><span data-stu-id="328f9-102">Use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services.</span></span> <span data-ttu-id="328f9-103">也就是说，<xref:System.Runtime.Serialization.XsdDataContractExporter> 能够将一组 CLR 类型转换成 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="328f9-103">That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into XML schemas.</span></span> <span data-ttu-id="328f9-104">（有关可使用的类型的详细信息，请参阅[数据协定序列化程序支持的类型](/dotnet/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer)。）然后，可以通过 Web Services 描述语言（WSDL）文档公开这些架构，以便需要与服务进行互操作的其他用户使用。</span><span class="sxs-lookup"><span data-stu-id="328f9-104">(For more information about the types that can be used, see [Types Supported by the Data Contract Serializer](/dotnet/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer).) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.</span></span>  
  
 <span data-ttu-id="328f9-105">反之，如果您要创建的 Web 服务必须与现有 Web 服务交互操作，请使用 <xref:System.Runtime.Serialization.XsdDataContractImporter> 转换 XML 架构，并且创建用所选编程语言表示数据的 CLR 类型。</span><span class="sxs-lookup"><span data-stu-id="328f9-105">Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <xref:System.Runtime.Serialization.XsdDataContractImporter> to transform XML schemas and create the CLR types that represent the data in a selected programming language.</span></span>  
  
 <span data-ttu-id="328f9-106"><xref:System.Runtime.Serialization.XsdDataContractExporter> 生成一个包含架构集合的 <xref:System.Xml.Schema.XmlSchemaSet> 对象。</span><span class="sxs-lookup"><span data-stu-id="328f9-106">The <xref:System.Runtime.Serialization.XsdDataContractExporter> generates an <xref:System.Xml.Schema.XmlSchemaSet> object that contains the collection of schemas.</span></span> <span data-ttu-id="328f9-107">通过 <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> 属性访问架构集。</span><span class="sxs-lookup"><span data-stu-id="328f9-107">Access the set of schemas through the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328f9-108">若要快速生成其他 Web 服务可以使用的 XML 架构定义 (XSD) 文件，请使用 <xref:System.Runtime.Serialization.XsdDataContractExporter>。</span><span class="sxs-lookup"><span data-stu-id="328f9-108">To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
## <a name="exporting-schemas-into-an-xmlschemaset"></a><span data-ttu-id="328f9-109">将架构导出到 XmlSchemaSet 中</span><span class="sxs-lookup"><span data-stu-id="328f9-109">Exporting Schemas Into an XmlSchemaSet</span></span>  
 <span data-ttu-id="328f9-110">若要创建 <xref:System.Xml.Schema.XmlSchemaSet> 类的包含 XML 架构文件的实例，应该注意以下问题。</span><span class="sxs-lookup"><span data-stu-id="328f9-110">To create an instance of the <xref:System.Xml.Schema.XmlSchemaSet> class that contains XML schema files, you should be aware of the following.</span></span>  
  
 <span data-ttu-id="328f9-111">您要导出的类型集将被记录为一组内部数据协定。</span><span class="sxs-lookup"><span data-stu-id="328f9-111">The set of types you are exporting are recorded as an internal set of data contracts.</span></span> <span data-ttu-id="328f9-112">因此，可以多次调用 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> 方法向架构集中添加新类型，并且不会降低性能（这是因为仅将新类型添加到架构集中）。</span><span class="sxs-lookup"><span data-stu-id="328f9-112">Thus, you can call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set.</span></span> <span data-ttu-id="328f9-113">在执行 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 操作期间，会将现有架构与要添加的新架构进行比较。</span><span class="sxs-lookup"><span data-stu-id="328f9-113">During the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operation, the existing schemas are compared to the new schemas being added.</span></span> <span data-ttu-id="328f9-114">如果有冲突，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="328f9-114">If there are conflicts, an exception will be thrown.</span></span> <span data-ttu-id="328f9-115">如果两种类型具有相同的数据协定名称，但具有不同的协定（不同的成员），那么当这两种类型由同一 <xref:System.Runtime.Serialization.XsdDataContractExporter> 实例导出时，通常会检测到冲突。</span><span class="sxs-lookup"><span data-stu-id="328f9-115">A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <xref:System.Runtime.Serialization.XsdDataContractExporter> instance.</span></span>  
  
## <a name="using-the-exporter"></a><span data-ttu-id="328f9-116">使用导出程序</span><span class="sxs-lookup"><span data-stu-id="328f9-116">Using the Exporter</span></span>  
 <span data-ttu-id="328f9-117">建议按以下方法使用此类：</span><span class="sxs-lookup"><span data-stu-id="328f9-117">A recommended way of using this class is as follows:</span></span>  
  
1.  <span data-ttu-id="328f9-118">使用 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> 重载之一来确定是否可以导出指定的类型和类型集。</span><span class="sxs-lookup"><span data-stu-id="328f9-118">Use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span> <span data-ttu-id="328f9-119">请使用符合您需求的重载之一。</span><span class="sxs-lookup"><span data-stu-id="328f9-119">Use one of the overloads that is appropriate to your requirements.</span></span>  
  
2.  <span data-ttu-id="328f9-120">调用对应的 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="328f9-120">Call the corresponding <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method.</span></span>  
  
3.  <span data-ttu-id="328f9-121">从 <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> 属性检索架构。</span><span class="sxs-lookup"><span data-stu-id="328f9-121">Retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328f9-122">下面的示例创建了一个 <xref:System.Runtime.Serialization.XsdDataContractExporter> 实例并调用 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="328f9-122">The following example creates an instance of the <xref:System.Runtime.Serialization.XsdDataContractExporter> and calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#0)]
 [!code-vb[XsdDataContractExporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <related type="Article" href="/dotnet/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer"><span data-ttu-id="328f9-123">数据协定序列化程序支持的类型</span><span class="sxs-lookup"><span data-stu-id="328f9-123">Types Supported by the Data Contract Serializer</span></span></related>
    <related type="Article" href="/dotnet/framework/wcf/feature-details/serialization-and-deserialization"><span data-ttu-id="328f9-124">序列化和反序列化</span><span class="sxs-lookup"><span data-stu-id="328f9-124">Serialization and Deserialization</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="328f9-125">初始化 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="328f9-125">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="328f9-126">初始化 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="328f9-126">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.XsdDataContractExporter : System.Xml.Schema.XmlSchemaSet -&gt; System.Runtime.Serialization.XsdDataContractExporter" Usage="new System.Runtime.Serialization.XsdDataContractExporter schemas" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="328f9-127">一个 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，它包含要导出的架构。</span><span class="sxs-lookup"><span data-stu-id="328f9-127">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to be exported.</span></span></param>
        <summary><span data-ttu-id="328f9-128">使用指定的架构集初始化 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="328f9-128">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class with the specified set of schemas.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328f9-129">当您已有一个要向其添加新架构的 <xref:System.Xml.Schema.XmlSchemaSet> 时，请使用此重载。</span><span class="sxs-lookup"><span data-stu-id="328f9-129">Use this overload when you have an existing <xref:System.Xml.Schema.XmlSchemaSet> to which you want to add new schemas.</span></span> <span data-ttu-id="328f9-130">在使用此重载构造 <xref:System.Runtime.Serialization.XsdDataContractExporter> 后，请调用 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 方法将新类型添加到现有架构集中。</span><span class="sxs-lookup"><span data-stu-id="328f9-130">After you construct a <xref:System.Runtime.Serialization.XsdDataContractExporter> with this overload, call the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method to add new types to the existing set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanExport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="328f9-131">获取一个值，该值指示公共语言运行库 (CLR) 类型（或类型集）是否可以导出。</span><span class="sxs-lookup"><span data-stu-id="328f9-131">Gets a value that indicates whether a common language runtime (CLR) type (or set of types) can be exported.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328f9-132">并非所有 CLR 类型都可在数据协定中使用。</span><span class="sxs-lookup"><span data-stu-id="328f9-132">Not all CLR types can be used in data contracts.</span></span> <span data-ttu-id="328f9-133">有关可序列化的内容的详细信息，请参阅[数据协定序列化程序支持的类型](/dotnet/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer)。</span><span class="sxs-lookup"><span data-stu-id="328f9-133">For more information about what can be serialized, see [Types Supported by the Data Contract Serializer](/dotnet/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (assemblies As ICollection(Of Assembly)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies"><span data-ttu-id="328f9-134">一个由 <see cref="T:System.Collections.Generic.ICollection`1" /> 组成的 <see cref="T:System.Reflection.Assembly" />，其中包含具有要导出的类型的程序集。</span><span class="sxs-lookup"><span data-stu-id="328f9-134">A <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Reflection.Assembly" /> that contains the assemblies with the types to export.</span></span></param>
        <summary><span data-ttu-id="328f9-135">获取一个值，该值指示一组程序集中包含的公共语言运行库 (CLR) 类型集是否可以导出。</span><span class="sxs-lookup"><span data-stu-id="328f9-135">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.</span></span></summary>
        <returns><span data-ttu-id="328f9-136">如果类型可以导出，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-136"><see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (types As ICollection(Of Type)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="328f9-137">一个 <see cref="T:System.Collections.Generic.ICollection`1" />，它包含要导出的指定类型。</span><span class="sxs-lookup"><span data-stu-id="328f9-137">A <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the specified types to export.</span></span></param>
        <summary><span data-ttu-id="328f9-138">获取一个值，该值指示 <see cref="T:System.Collections.Generic.ICollection`1" /> 中包含的公共语言运行库 (CLR) 类型集是否可以导出。</span><span class="sxs-lookup"><span data-stu-id="328f9-138">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <see cref="T:System.Collections.Generic.ICollection`1" /> can be exported.</span></span></summary>
        <returns><span data-ttu-id="328f9-139">如果类型可以导出，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-139"><see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (type As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CanExport : Type -&gt; bool" Usage="xsdDataContractExporter.CanExport type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="328f9-140">要导出的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-140">The <see cref="T:System.Type" /> to export.</span></span></param>
        <summary><span data-ttu-id="328f9-141">获取一个值，该值指示指定的公共语言运行库 (CLR) 类型是否可以导出。</span><span class="sxs-lookup"><span data-stu-id="328f9-141">Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.</span></span></summary>
        <returns><span data-ttu-id="328f9-142">如果类型可以导出，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-142"><see langword="true" /> if the type can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="328f9-143">下面的示例在调用 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> 方法之前调用 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="328f9-143">The following example calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> method before calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#1)]
 [!code-vb[XsdDataContractExporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Export">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="328f9-144">将公共语言运行库 (CLR) 类型或类型集转换成一组 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="328f9-144">Transforms the common language runtime (CLR) type, or set of types, into a set of XML schemas.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328f9-145">建议使用 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> 重载之一来确定是否可以导出指定的类型或类型集。</span><span class="sxs-lookup"><span data-stu-id="328f9-145">As a recommended practice, use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span>  
  
 <span data-ttu-id="328f9-146">调用 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 方法后，从 <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> 属性检索架构。</span><span class="sxs-lookup"><span data-stu-id="328f9-146">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (assemblies As ICollection(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; unit" Usage="xsdDataContractExporter.Export assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies"><span data-ttu-id="328f9-147">一个由 <see cref="T:System.Collections.Generic.ICollection`1" /> 组成的 <see cref="T:System.Reflection.Assembly" />，其中包含要导出的类型。</span><span class="sxs-lookup"><span data-stu-id="328f9-147">A <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Reflection.Assembly" />) that contains the types to export.</span></span></param>
        <summary><span data-ttu-id="328f9-148">对指定的程序集集合中包含的类型进行转换。</span><span class="sxs-lookup"><span data-stu-id="328f9-148">Transforms the types contained in the specified collection of assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="328f9-149"><paramref name="assemblies" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-149">The <paramref name="assemblies" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="328f9-150">集合中的一个 <see cref="T:System.Reflection.Assembly" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-150">An <see cref="T:System.Reflection.Assembly" /> in the collection is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (types As ICollection(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; unit" Usage="xsdDataContractExporter.Export types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="328f9-151">一个由 <see cref="T:System.Type" /> 组成的 <see cref="T:System.Collections.Generic.ICollection`1" />，其中包含要导出的类型。</span><span class="sxs-lookup"><span data-stu-id="328f9-151">A  <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Type" />) that contains the types to export.</span></span></param>
        <summary><span data-ttu-id="328f9-152">对传递给该方法的 <see cref="T:System.Collections.Generic.ICollection`1" /> 中包含的类型进行转换。</span><span class="sxs-lookup"><span data-stu-id="328f9-152">Transforms the types contained in the <see cref="T:System.Collections.Generic.ICollection`1" /> passed to this method.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="328f9-153"><paramref name="types" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-153">The <paramref name="types" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="328f9-154">集合中的一个类型为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-154">A type in the collection is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.Export : Type -&gt; unit" Usage="xsdDataContractExporter.Export type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="328f9-155">要转换成 XML 架构的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-155">The <see cref="T:System.Type" /> to transform into an XML schema.</span></span></param>
        <summary><span data-ttu-id="328f9-156">将指定的 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 类型转换成 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="328f9-156">Transforms the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type into an XML schema definition language (XSD) schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328f9-157">调用 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> 来确定该类型是否可以导出。</span><span class="sxs-lookup"><span data-stu-id="328f9-157">Call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> to determine whether the type can be exported.</span></span> <span data-ttu-id="328f9-158">调用 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 方法后，可以通过 <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> 属性检索架构。</span><span class="sxs-lookup"><span data-stu-id="328f9-158">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, the schema can be retrieved through the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="328f9-159"><paramref name="type" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-159">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRootElementName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetRootElementName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetRootElementName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRootElementName (type As Type) As XmlQualifiedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetRootElementName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetRootElementName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetRootElementName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="328f9-160">要查询的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-160">The <see cref="T:System.Type" /> to query.</span></span></param>
        <summary><span data-ttu-id="328f9-161">返回 <see cref="T:System.Type" /> 的顶级名称和命名空间。</span><span class="sxs-lookup"><span data-stu-id="328f9-161">Returns the top-level name and namespace for the <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="328f9-162">表示此 <see cref="T:System.Xml.XmlQualifiedName" /> 的顶级名称和命名空间的 <see cref="T:System.Type" />，它在写入此对象时被写入流。</span><span class="sxs-lookup"><span data-stu-id="328f9-162">The <see cref="T:System.Xml.XmlQualifiedName" /> that represents the top-level name and namespace for this <see cref="T:System.Type" />, which is written to the stream when writing this object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="328f9-163"><paramref name="type" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-163">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaType">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaType GetSchemaType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaType GetSchemaType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaType (type As Type) As XmlSchemaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaType ^ GetSchemaType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaType : Type -&gt; System.Xml.Schema.XmlSchemaType" Usage="xsdDataContractExporter.GetSchemaType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="328f9-164">要为其返回架构的类型。</span><span class="sxs-lookup"><span data-stu-id="328f9-164">The type to return a schema for.</span></span></param>
        <summary><span data-ttu-id="328f9-165">返回指定类型的 XML 架构类型。</span><span class="sxs-lookup"><span data-stu-id="328f9-165">Returns the XML schema type for the specified type.</span></span></summary>
        <returns><span data-ttu-id="328f9-166">一个包含 XML 架构的 <see cref="T:System.Xml.Schema.XmlSchemaType" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-166">An <see cref="T:System.Xml.Schema.XmlSchemaType" /> that contains the XML schema.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328f9-167">此方法主要用于表示 XML 架构中的匿名类型。</span><span class="sxs-lookup"><span data-stu-id="328f9-167">The main purpose of this method is to allow anonymous types in XML schema to be represented.</span></span> <span data-ttu-id="328f9-168">匿名类型不具有协定名称和命名空间，所以不能使用 <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> 对它们进行查找。</span><span class="sxs-lookup"><span data-stu-id="328f9-168">Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>.</span></span> <span data-ttu-id="328f9-169">此方法返回此类类型的 <xref:System.Xml.Schema.XmlSchemaType> 定义。</span><span class="sxs-lookup"><span data-stu-id="328f9-169">This method returns the <xref:System.Xml.Schema.XmlSchemaType> definition for such types.</span></span> <span data-ttu-id="328f9-170"><xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> 方法为其返回有效名称的类型，此方法返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="328f9-170">The types for which the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> method returns a valid name, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="328f9-171"><paramref name="type" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-171">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTypeName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetSchemaTypeName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetSchemaTypeName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaTypeName (type As Type) As XmlQualifiedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetSchemaTypeName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaTypeName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetSchemaTypeName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="328f9-172">所导出的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-172">The <see cref="T:System.Type" /> that was exported.</span></span></param>
        <summary><span data-ttu-id="328f9-173">返回 <see cref="T:System.Type" /> 的协定名称和协定命名空间。</span><span class="sxs-lookup"><span data-stu-id="328f9-173">Returns the contract name and contract namespace for the <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="328f9-174">一个 <see cref="T:System.Xml.XmlQualifiedName" />，它表示该类型的协定名称及其命名空间。</span><span class="sxs-lookup"><span data-stu-id="328f9-174">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the contract name of the type and its namespace.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="328f9-175"><paramref name="type" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="328f9-175">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ExportOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ExportOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As ExportOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ExportOptions ^ Options { System::Runtime::Serialization::ExportOptions ^ get(); void set(System::Runtime::Serialization::ExportOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Runtime.Serialization.ExportOptions with get, set" Usage="System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ExportOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="328f9-176">获取或设置一个 <see cref="T:System.Runtime.Serialization.ExportOptions" />，它包含可为导出操作设置的选项。</span><span class="sxs-lookup"><span data-stu-id="328f9-176">Gets or sets an <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options that can be set for the export operation.</span></span></summary>
        <value><span data-ttu-id="328f9-177">一个 <see cref="T:System.Runtime.Serialization.ExportOptions" />，它包含用于自定义将类型导出到架构的方式的选项。</span><span class="sxs-lookup"><span data-stu-id="328f9-177">An <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options used to customize how types are exported to schemas.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet" Usage="System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="328f9-178">获取导出的 XML 架构的集合。</span><span class="sxs-lookup"><span data-stu-id="328f9-178">Gets the collection of exported XML schemas.</span></span></summary>
        <value><span data-ttu-id="328f9-179">一个 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，它包含在调用 <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> 方法后从公共语言运行库 (CLR) 类型集转换而来的架构。</span><span class="sxs-lookup"><span data-stu-id="328f9-179">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
