<Type Name="ClaimTypeRequirement" FullName="System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ea6f074269cb2ca0c4450a4d99acccb35054d31" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89936555" /></Metadata><TypeSignature Language="C#" Value="public class ClaimTypeRequirement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimTypeRequirement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimTypeRequirement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimTypeRequirement" />
  <TypeSignature Language="F#" Value="type ClaimTypeRequirement = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a294f-101">指定希望出现在联合凭据中的必选和可选的声明类型。</span><span class="sxs-lookup"><span data-stu-id="a294f-101">Specifies the types of required and optional claims expected to appear in the federated credential.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a294f-102">在联合方案中，服务规定有关传入凭据的要求。</span><span class="sxs-lookup"><span data-stu-id="a294f-102">In a federated scenario, services state the requirements on incoming credentials.</span></span> <span data-ttu-id="a294f-103">例如，传入凭据必须具有某组声明类型。</span><span class="sxs-lookup"><span data-stu-id="a294f-103">For example, the incoming credentials must possess a certain set of claim types.</span></span> <span data-ttu-id="a294f-104">此要求出现在安全策略中。</span><span class="sxs-lookup"><span data-stu-id="a294f-104">This requirement is manifested in a security policy.</span></span> <span data-ttu-id="a294f-105">当客户端向安全令牌服务（例如 [!INCLUDE[infocard](~/includes/infocard-md.md)]）请求安全令牌时，它会将需求放置在令牌请求中，以便安全令牌服务能够相应地颁发符合需求的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="a294f-105">When a client requests a security token from a security token service (for example, [!INCLUDE[infocard](~/includes/infocard-md.md)]), it puts the requirements into a token request so that the security token service can issue the security token that satisfies the requirements accordingly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a294f-106">下面的代码将两个声明类型要求添加到安全绑定。</span><span class="sxs-lookup"><span data-stu-id="a294f-106">The following code adds two claim type requirements to a security binding.</span></span>  
  
 [!code-csharp[S_UEClaimTypeRequirement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#1)]  
  
 <span data-ttu-id="a294f-107">下面的配置文件与前面的代码一起使用。</span><span class="sxs-lookup"><span data-stu-id="a294f-107">The following config file is used with the preceding code.</span></span>  
  
 [!code-xml[S_UEClaimTypeRequirement#101](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/common/app.config#101)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a294f-108">初始化 <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a294f-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimTypeRequirement (string claimType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string claimType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimTypeRequirement(System::String ^ claimType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.Tokens.ClaimTypeRequirement : string -&gt; System.ServiceModel.Security.Tokens.ClaimTypeRequirement" Usage="new System.ServiceModel.Security.Tokens.ClaimTypeRequirement claimType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="claimType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claimType"><span data-ttu-id="a294f-109">声明类型。</span><span class="sxs-lookup"><span data-stu-id="a294f-109">The claim type.</span></span></param>
        <summary><span data-ttu-id="a294f-110">为所需的指定类型声明初始化 <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a294f-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> class for a required claim of the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a294f-111">预定义的声明类型可以在 <xref:System.IdentityModel.Claims.ClaimTypes> 中找到。</span><span class="sxs-lookup"><span data-stu-id="a294f-111">The predefined claim types can be found at   <xref:System.IdentityModel.Claims.ClaimTypes>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a294f-112">下面的代码将两个声明类型要求添加到安全绑定。</span><span class="sxs-lookup"><span data-stu-id="a294f-112">The following code adds two claim type requirements to a security binding.</span></span>  
  
 [!code-csharp[S_UEClaimTypeRequirement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimTypeRequirement (string claimType, bool isOptional);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string claimType, bool isOptional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimType As String, isOptional As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimTypeRequirement(System::String ^ claimType, bool isOptional);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.Tokens.ClaimTypeRequirement : string * bool -&gt; System.ServiceModel.Security.Tokens.ClaimTypeRequirement" Usage="new System.ServiceModel.Security.Tokens.ClaimTypeRequirement (claimType, isOptional)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimType" Type="System.String" />
        <Parameter Name="isOptional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="claimType"><span data-ttu-id="a294f-113">声明类型。</span><span class="sxs-lookup"><span data-stu-id="a294f-113">The claim type.</span></span></param>
        <param name="isOptional"><span data-ttu-id="a294f-114">如果值为 <see langword="false" />，则声明是必选的；否则声明是可选的。</span><span class="sxs-lookup"><span data-stu-id="a294f-114">If <see langword="false" />, the claim is required; otherwise, it is optional.</span></span></param>
        <summary><span data-ttu-id="a294f-115">为指定类型的声明初始化 <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a294f-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> class for a claim of the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a294f-116">下面的代码将两个声明类型要求添加到安全绑定。</span><span class="sxs-lookup"><span data-stu-id="a294f-116">The following code adds two claim type requirements to a security binding.</span></span>  
  
 [!code-csharp[S_UEClaimTypeRequirement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimType">
      <MemberSignature Language="C#" Value="public string ClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClaimType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClaimType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClaimType : string" Usage="System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a294f-117">获取构造函数中指定的声明类型。</span><span class="sxs-lookup"><span data-stu-id="a294f-117">Gets the claim type that was specified in the constructor.</span></span></summary>
        <value><span data-ttu-id="a294f-118">声明类型。</span><span class="sxs-lookup"><span data-stu-id="a294f-118">The claim type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a294f-119">此属性是一个用于定义声明类型的 URI。</span><span class="sxs-lookup"><span data-stu-id="a294f-119">This property is a URI that defines the type of a claim.</span></span>  <span data-ttu-id="a294f-120">例如，若要从网站上购买产品，用户必须提供具有足够信用额度的有效信用卡。</span><span class="sxs-lookup"><span data-stu-id="a294f-120">For example, to purchase a product from a Web site, the user must present a valid credit card with a sufficient credit limit.</span></span> <span data-ttu-id="a294f-121">声明类型将为信用卡 URI。</span><span class="sxs-lookup"><span data-stu-id="a294f-121">The claim type would be the credit card URI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a294f-122">下面的代码演示如何获取此属性。</span><span class="sxs-lookup"><span data-stu-id="a294f-122">The following code shows how to get this property.</span></span>  
  
 [!code-csharp[S_UEClaimTypeRequirement#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptional">
      <MemberSignature Language="C#" Value="public bool IsOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOptional" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOptional { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOptional : bool" Usage="System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a294f-123">获取一个值，该值指示声明是否可选。</span><span class="sxs-lookup"><span data-stu-id="a294f-123">Gets a value that indicates whether the claim is optional.</span></span></summary>
        <value><span data-ttu-id="a294f-124">如果该类实例指定声明是可选的，则为 <see langword="true" />；如果它指定声明是必选的，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a294f-124"><see langword="true" /> if this instance of the class is for an optional claim; <see langword="false" /> if it specifies a required claim.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a294f-125">使用此属性的一个示例就是服务请求一些非必要信息的情况。</span><span class="sxs-lookup"><span data-stu-id="a294f-125">An example of how to use this property is the scenario in which the service asks for some information but does not require it.</span></span> <span data-ttu-id="a294f-126">例如，您必须输入名、姓和地址，但是可以选择是否输入电话号码。</span><span class="sxs-lookup"><span data-stu-id="a294f-126">For instance, you are required to enter your first name, last name, and address, but your phone number is optional.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a294f-127">下面的代码演示如何获取此属性。</span><span class="sxs-lookup"><span data-stu-id="a294f-127">The following code shows how to get this property.</span></span>  
  
 [!code-csharp[S_UEClaimTypeRequirement#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
