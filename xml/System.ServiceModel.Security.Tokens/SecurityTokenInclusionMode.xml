<Type Name="SecurityTokenInclusionMode" FullName="System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55d9b1ebf5467f0a1cc59981e0b7e1992fda021a" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69149746" /></Metadata><TypeSignature Language="C#" Value="public enum SecurityTokenInclusionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecurityTokenInclusionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SecurityTokenInclusionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SecurityTokenInclusionMode" />
  <TypeSignature Language="F#" Value="type SecurityTokenInclusionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="0d10b-101">消息的令牌包含要求列表。</span><span class="sxs-lookup"><span data-stu-id="0d10b-101">A list of token inclusion requirements for messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="0d10b-102">`SecurityTokenInclusionMode`枚举成员用作类的许多方法中的参数 <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters> ，以及在创建绑定元素和证书时其派生类中的参数。</span><span class="sxs-lookup"><span data-stu-id="0d10b-102">`SecurityTokenInclusionMode` enumeration members are used as parameters in many methods of the <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters> class and in its derived classes when creating binding elements and certificates.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AlwaysToInitiator">
      <MemberSignature Language="C#" Value="AlwaysToInitiator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode AlwaysToInitiator = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToInitiator" />
      <MemberSignature Language="VB.NET" Value="AlwaysToInitiator" />
      <MemberSignature Language="C++ CLI" Value="AlwaysToInitiator" />
      <MemberSignature Language="F#" Value="AlwaysToInitiator = 3" Usage="System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToInitiator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0d10b-103">令牌始终包含在发起方的消息中，而从不包含在接收方的消息中。</span><span class="sxs-lookup"><span data-stu-id="0d10b-103">The token is always included in messages to the initiator and never to the recipient.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AlwaysToRecipient">
      <MemberSignature Language="C#" Value="AlwaysToRecipient" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode AlwaysToRecipient = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient" />
      <MemberSignature Language="VB.NET" Value="AlwaysToRecipient" />
      <MemberSignature Language="C++ CLI" Value="AlwaysToRecipient" />
      <MemberSignature Language="F#" Value="AlwaysToRecipient = 0" Usage="System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0d10b-104">令牌始终包含在接收方的消息中，而从不包含在发起方的消息中。</span><span class="sxs-lookup"><span data-stu-id="0d10b-104">The token is always included in messages to the recipient and never to the initiator.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Never">
      <MemberSignature Language="C#" Value="Never" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode Never = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Never" />
      <MemberSignature Language="VB.NET" Value="Never" />
      <MemberSignature Language="C++ CLI" Value="Never" />
      <MemberSignature Language="F#" Value="Never = 1" Usage="System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Never" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0d10b-105">令牌从不包含在消息中，但会被引用。</span><span class="sxs-lookup"><span data-stu-id="0d10b-105">The token is never included in messages but is referenced.</span></span> <span data-ttu-id="0d10b-106">令牌对于带外的接收方必须是已知的。</span><span class="sxs-lookup"><span data-stu-id="0d10b-106">The token must be known to the recipient out of band.</span></span> <span data-ttu-id="0d10b-107">此选项不是现成可用的。</span><span class="sxs-lookup"><span data-stu-id="0d10b-107">The option does not work out of the box.</span></span> <span data-ttu-id="0d10b-108">您需要为其包含自定义凭据，才可使用。</span><span class="sxs-lookup"><span data-stu-id="0d10b-108">You need to include custom credentials for this to work.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Once">
      <MemberSignature Language="C#" Value="Once" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode Once = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Once" />
      <MemberSignature Language="VB.NET" Value="Once" />
      <MemberSignature Language="C++ CLI" Value="Once" />
      <MemberSignature Language="F#" Value="Once = 2" Usage="System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Once" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0d10b-109">包含令牌一次。</span><span class="sxs-lookup"><span data-stu-id="0d10b-109">The token is included once.</span></span> <span data-ttu-id="0d10b-110">该令牌只能在一条发起方发送给接收方的消息包含。</span><span class="sxs-lookup"><span data-stu-id="0d10b-110">The token must be included in only one message sent from the initiator to the recipient.</span></span> <span data-ttu-id="0d10b-111">该令牌的引用可能会使用内部引用机制。</span><span class="sxs-lookup"><span data-stu-id="0d10b-111">References to the token may use an internal reference mechanism.</span></span> <span data-ttu-id="0d10b-112">接收方和发起方之间随后发送的相关消息可以使用外部引用机制引用令牌。</span><span class="sxs-lookup"><span data-stu-id="0d10b-112">Subsequent related messages sent between the recipient and the initiator may refer to the token using an external reference mechanism.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
