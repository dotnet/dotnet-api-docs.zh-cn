<Type Name="LogPolicy" FullName="System.IO.Log.LogPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c9fa9f7d34c0d8d15ad26a41a63b0d55c9811cf" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69245269" /></Metadata><TypeSignature Language="C#" Value="public sealed class LogPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogPolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogPolicy sealed" />
  <TypeSignature Language="F#" Value="type LogPolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b4dfa-101">表示与 <see cref="T:System.IO.Log.LogStore" /> 相关联的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-101">Represents the policy associated with a <see cref="T:System.IO.Log.LogStore" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4dfa-102">策略是一组规则，<xref:System.IO.Log.LogStore> 实例及其客户端需要遵守这些规则。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-102">A policy is a set of rules to be followed by a <xref:System.IO.Log.LogStore> instance and its clients.</span></span> <span data-ttu-id="b4dfa-103"><xref:System.IO.Log.LogPolicy> 实例用于检查和修改与特定 <xref:System.IO.Log.LogStore> 相关联的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-103">A <xref:System.IO.Log.LogPolicy> instance is used to examine and modify the policy associated with a specific <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="b4dfa-104">策略可描述允许的最小和最大日志大小，或者 <xref:System.IO.Log.LogStore> 实例的允许增长方式。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-104">A policy can describe the minimum and maximum allowable log sizes, or how the <xref:System.IO.Log.LogStore> instance is allowed to grow.</span></span> <span data-ttu-id="b4dfa-105">此外，还可以控制是否能够存档 <xref:System.IO.Log.LogStore> 实例。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-105">In addition, you can also control whether a <xref:System.IO.Log.LogStore> instance can be archived.</span></span>  
  
 <span data-ttu-id="b4dfa-106">更改任何属性之后，都应使用 <xref:System.IO.Log.LogPolicy.Commit%2A> 方法，以确保将更改应用于 <xref:System.IO.Log.LogStore>。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-106">After changing any of the properties, you should use the <xref:System.IO.Log.LogPolicy.Commit%2A> method to ensure that the changes are applied to the <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="b4dfa-107">调用 <xref:System.IO.Log.LogPolicy.Refresh%2A> 方法可以放弃更改，或获得最新策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-107">You can call the <xref:System.IO.Log.LogPolicy.Refresh%2A> method to discard changes or to get the most current policy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4dfa-108">此示例演示如何使用 <xref:System.IO.Log.LogPolicy> 类来设置日志记录序列的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-108">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoGrow">
      <MemberSignature Language="C#" Value="public bool AutoGrow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGrow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoGrow" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGrow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGrow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGrow : bool with get, set" Usage="System.IO.Log.LogPolicy.AutoGrow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4dfa-109">获取或设置一个值，该值指示 <see cref="T:System.IO.Log.LogStore" /> 是否能够自动增长。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-109">Gets or sets a value indicating whether the <see cref="T:System.IO.Log.LogStore" /> can grow automatically.</span></span></summary>
        <value><span data-ttu-id="b4dfa-110">如果 <see cref="T:System.IO.Log.LogStore" /> 能够自动增加其大小，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-110"><see langword="true" /> if the <see cref="T:System.IO.Log.LogStore" /> can grow its size automatically; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b4dfa-111">此示例演示如何使用 <xref:System.IO.Log.LogPolicy> 类来设置日志记录序列的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-111">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShrinkPercentage">
      <MemberSignature Language="C#" Value="public int AutoShrinkPercentage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoShrinkPercentage" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoShrinkPercentage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShrinkPercentage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoShrinkPercentage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AutoShrinkPercentage : int with get, set" Usage="System.IO.Log.LogPolicy.AutoShrinkPercentage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4dfa-112">获取或设置 <see cref="T:System.IO.Log.LogStore" /> 可收缩的可用空间百分比。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-112">Gets or sets the percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span></span></summary>
        <value><span data-ttu-id="b4dfa-113"><see cref="T:System.IO.Log.LogStore" /> 可收缩的可用空间百分比。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-113">The percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4dfa-114"><xref:System.IO.Log.LogStore> 中的可用空间量大于此属性所指定的量时，<xref:System.IO.Log.LogStore> 会自动减小其大小，直至达到 <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A> 属性所指定的大小为止。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-114">When the amount of free space in the <xref:System.IO.Log.LogStore> is greater than the amount specified by this property, the <xref:System.IO.Log.LogStore> automatically reduces its size until it reaches the size specified by the <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4dfa-115">此示例演示如何使用 <xref:System.IO.Log.LogPolicy> 类来设置日志记录序列的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-115">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="logPolicy.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4dfa-116">将此策略设置为 <see cref="T:System.IO.Log.LogStore" /> 的当前策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-116">Sets this policy as the current policy for the <see cref="T:System.IO.Log.LogStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4dfa-117">进行任何更改之后，都必须调用 <xref:System.IO.Log.LogPolicy.Commit%2A>，以确保将这些更改记录下来。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-117">You must call <xref:System.IO.Log.LogPolicy.Commit%2A> after making any changes to ensure that the changes are recorded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4dfa-118">此示例演示如何使用 <xref:System.IO.Log.LogPolicy> 类来设置日志记录序列的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-118">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b4dfa-119">安装在日志上的策略集是无效的。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-119">The set of policies installed on the log is invalid.</span></span>  
  
 <span data-ttu-id="b4dfa-120">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b4dfa-120">-or-</span></span>  
  
 <span data-ttu-id="b4dfa-121">日志的某个策略阻止完成此操作。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-121">A policy of the log prevented this operation from completing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b4dfa-122">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-122">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b4dfa-123">在当前平台上不支持设置此策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-123">Setting this policy is not supported on the current platform.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b4dfa-124">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-124">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="b4dfa-125">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-125">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="b4dfa-126">新范围前缀无效或太长。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-126">The new extent prefix is invalid or too long.</span></span> <span data-ttu-id="b4dfa-127">必须提供有效的前缀。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-127">A valid prefix must be provided.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="b4dfa-128">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-128">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b4dfa-129">操作系统拒绝了对指定的日志存储区的访问。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-129">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GrowthRate">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit GrowthRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit GrowthRate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.GrowthRate" />
      <MemberSignature Language="VB.NET" Value="Public Property GrowthRate As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit GrowthRate { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberSignature Language="F#" Value="member this.GrowthRate : System.IO.Log.PolicyUnit with get, set" Usage="System.IO.Log.LogPolicy.GrowthRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4dfa-130">获取或设置 <see cref="T:System.IO.Log.LogStore" /> 的自动增长率。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-130">Gets or sets the rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span></span></summary>
        <value><span data-ttu-id="b4dfa-131"><see cref="T:System.IO.Log.LogStore" /> 的自动增长率。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-131">The rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4dfa-132"><xref:System.IO.Log.LogStore> 满时，此策略值确定可添加的空间量。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-132">When the <xref:System.IO.Log.LogStore> becomes full, this policy value determines how much more space can be added.</span></span> <span data-ttu-id="b4dfa-133">如果该值使 <xref:System.IO.Log.LogStore> 中的范围数超过 <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>，则不会添加空间。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-133">Space will not be added if it causes the number of extents in the <xref:System.IO.Log.LogStore> to exceed <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4dfa-134">此示例演示如何使用 <xref:System.IO.Log.LogPolicy> 类来设置日志记录序列的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-134">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumExtentCount">
      <MemberSignature Language="C#" Value="public int MaximumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MaximumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumExtentCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumExtentCount : int with get, set" Usage="System.IO.Log.LogPolicy.MaximumExtentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4dfa-135">获取或设置 <see cref="T:System.IO.Log.LogExtent" /> 最多能够包含的 <see cref="T:System.IO.Log.LogStore" /> 实例数。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-135">Gets or sets the maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span></span></summary>
        <value><span data-ttu-id="b4dfa-136"><see cref="T:System.IO.Log.LogExtent" /> 最多能够包含的 <see cref="T:System.IO.Log.LogStore" /> 实例数。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-136">The maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b4dfa-137">此示例演示如何使用 <xref:System.IO.Log.LogPolicy> 类来设置日志记录序列的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-137">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumExtentCount">
      <MemberSignature Language="C#" Value="public int MinimumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MinimumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumExtentCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumExtentCount : int with get, set" Usage="System.IO.Log.LogPolicy.MinimumExtentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4dfa-138">获取或设置 <see cref="T:System.IO.Log.LogExtent" /> 最少能够包含的 <see cref="T:System.IO.Log.LogStore" /> 实例数。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-138">Gets or sets the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span></span></summary>
        <value><span data-ttu-id="b4dfa-139">一个整数，它指定 <see cref="T:System.IO.Log.LogExtent" /> 最少能够包含的 <see cref="T:System.IO.Log.LogStore" /> 实例数。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-139">An integer that specifies the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span></span> <span data-ttu-id="b4dfa-140">CLFS 要求最小范围数为 2 个范围，因此，此值最小应为 2。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-140">Since the CLFS requires that the minimum extent count to be 2 extents, this value should be at least 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b4dfa-141">此示例演示如何使用 <xref:System.IO.Log.LogPolicy> 类来设置日志记录序列的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-141">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewExtentPrefix">
      <MemberSignature Language="C#" Value="public string NewExtentPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewExtentPrefix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NewExtentPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property NewExtentPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewExtentPrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewExtentPrefix : string with get, set" Usage="System.IO.Log.LogPolicy.NewExtentPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4dfa-142">获取或设置用于自动创建的范围的前缀字符串。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-142">Gets or sets the prefix string for automatically created extents.</span></span></summary>
        <value><span data-ttu-id="b4dfa-143">用于自动创建的范围的前缀字符串。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-143">The prefix string for automatically created extents.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4dfa-144">此字符串可包含一个完整路径，指向创建新范围的目录。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-144">This string can contain a full path to the directory where the new extent is created.</span></span> <span data-ttu-id="b4dfa-145">范围的默认路径是包含基 <xref:System.IO.Log.LogStore> 文件的目录。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-145">The default path to the extent is the directory that contains the base <xref:System.IO.Log.LogStore> file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4dfa-146">此示例演示如何使用 <xref:System.IO.Log.LogPolicy> 类来设置日志记录序列的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-146">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextExtentSuffix">
      <MemberSignature Language="C#" Value="public long NextExtentSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 NextExtentSuffix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NextExtentSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Property NextExtentSuffix As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long NextExtentSuffix { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.NextExtentSuffix : int64 with get, set" Usage="System.IO.Log.LogPolicy.NextExtentSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4dfa-147">获取或设置新范围的后缀数。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-147">Gets or sets the suffix number for new extents.</span></span></summary>
        <value><span data-ttu-id="b4dfa-148">新范围的后缀数。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-148">The suffix number for new extents.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b4dfa-149">此示例演示如何使用 <xref:System.IO.Log.LogPolicy> 类来设置日志记录序列的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-149">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinnedTailThreshold">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit PinnedTailThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit PinnedTailThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.PinnedTailThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property PinnedTailThreshold As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit PinnedTailThreshold { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberSignature Language="F#" Value="member this.PinnedTailThreshold : System.IO.Log.PolicyUnit with get, set" Usage="System.IO.Log.LogPolicy.PinnedTailThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4dfa-150">获取或设置 <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> 事件前调日志基数所要求的空间量。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-150">Gets or sets the amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span></span></summary>
        <value><span data-ttu-id="b4dfa-151"><see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> 事件前调日志基数所要求的空间量。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-151">The amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4dfa-152">空间量可表示为百分比，也可表示为字节数，在 CLFS 中，字节数舍入到最接近的容器。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-152">The amount of space can be expressed in percentage, or in bytes which is rounded off to the nearest containers in CLFS.</span></span> <span data-ttu-id="b4dfa-153">默认值为 35%。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-153">The default is 35 percent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4dfa-154">此示例演示如何使用 <xref:System.IO.Log.LogPolicy> 类来设置日志记录序列的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-154">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="logPolicy.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4dfa-155">读取 <see cref="T:System.IO.Log.LogStore" /> 的当前策略，放弃已做的所有更改。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-155">Reads the current policy for the <see cref="T:System.IO.Log.LogStore" />, discarding any changes that may have been made.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b4dfa-156">此示例演示如何使用 <xref:System.IO.Log.LogPolicy> 类来设置日志记录序列的策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-156">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b4dfa-157">安装在日志上的策略集是无效的。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-157">The set of policies installed on the log is invalid.</span></span>  
  
 <span data-ttu-id="b4dfa-158">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b4dfa-158">-or-</span></span>  
  
 <span data-ttu-id="b4dfa-159">日志的某个策略阻止完成此操作。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-159">A policy of the log prevented this operation from completing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b4dfa-160">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-160">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b4dfa-161">在当前平台上不支持设置此策略。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-161">Setting this policy is not supported on the current platform.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b4dfa-162">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-162">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="b4dfa-163">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-163">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="b4dfa-164">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-164">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b4dfa-165">操作系统拒绝了对指定的日志存储区的访问。</span><span class="sxs-lookup"><span data-stu-id="b4dfa-165">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
