<Type Name="LogRecordSequence" FullName="System.IO.Log.LogRecordSequence">
  <Metadata><Meta Name="ms.openlocfilehash" Value="09086779d99cf3bf09900a7a7f73dbdc0f4ba1d9" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86814427" /></Metadata><TypeSignature Language="C#" Value="public sealed class LogRecordSequence : IDisposable, System.IO.Log.IRecordSequence" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogRecordSequence extends System.Object implements class System.IDisposable, class System.IO.Log.IRecordSequence" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogRecordSequence&#xA;Implements IDisposable, IRecordSequence" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogRecordSequence sealed : IDisposable, System::IO::Log::IRecordSequence" />
  <TypeSignature Language="F#" Value="type LogRecordSequence = class&#xA;    interface IRecordSequence&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IO.Log.IRecordSequence</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1a336-101">表示存储在 <see cref="T:System.IO.Log.LogStore" /> 中的记录序列。</span><span class="sxs-lookup"><span data-stu-id="1a336-101">Represents a record sequence stored in a <see cref="T:System.IO.Log.LogStore" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-102"><xref:System.IO.Log.LogRecordSequence> 类提供记录序列接口在公用日志文件系统 (CLFS) 日志之上的实现。</span><span class="sxs-lookup"><span data-stu-id="1a336-102">The <xref:System.IO.Log.LogRecordSequence> class provides an implementation of the record sequence interface on top of a Common Log File System (CLFS) log.</span></span> <span data-ttu-id="1a336-103">除了标准的面向记录的功能外，该类还提供了一个策略模型，用于避免出现日志已满的情况并对同一个物理文件上的客户端进行多路复用。</span><span class="sxs-lookup"><span data-stu-id="1a336-103">In addition to the standard record-oriented features, it provides a policy model for avoiding log-full conditions, and multiplexing of clients on the same physical file.</span></span> <span data-ttu-id="1a336-104">它与 <xref:System.IO.Log.LogStore> 类一起使用，该类提供了直接操作和管理 CLFS 日志文件的接口。</span><span class="sxs-lookup"><span data-stu-id="1a336-104">It works with the <xref:System.IO.Log.LogStore> class, which provides an interface for directly manipulating and managing a CLFS log file.</span></span> <span data-ttu-id="1a336-105"><xref:System.IO.Log.LogStore> 类和 <xref:System.IO.Log.LogRecordSequence> 类之间的关系类似于磁盘文件和 <xref:System.IO.FileStream> 对象之间的关系。</span><span class="sxs-lookup"><span data-stu-id="1a336-105">The relationship between the <xref:System.IO.Log.LogStore> class and the <xref:System.IO.Log.LogRecordSequence> class is similar to the relationship between a disk file and a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="1a336-106">磁盘文件提供实际存储区，并具有长度和上次访问时间等属性，而 <xref:System.IO.FileStream> 对象提供文件的视图，利用该视图可以从实际存储区中读取以及向其中写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-106">The disk file provides the concrete storage, and has attributes such as length and last access time; while the <xref:System.IO.FileStream> object provides a view on the file that can be used to read from it and write to it.</span></span> <span data-ttu-id="1a336-107">与之类似，<xref:System.IO.Log.LogStore> 类具有策略和磁盘范围集合等属性；而 <xref:System.IO.Log.LogRecordSequence> 类提供面向记录的数据读取和写入机制。</span><span class="sxs-lookup"><span data-stu-id="1a336-107">Similarly, the <xref:System.IO.Log.LogStore> class has attributes like a policy and a collection of disk extents; and the <xref:System.IO.Log.LogRecordSequence> class provides a record-oriented mechanism for reading and writing data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a336-108">此示例演示如何使用 <xref:System.IO.Log.LogRecordSequence> 类：</span><span class="sxs-lookup"><span data-stu-id="1a336-108">This example shows how to use the <xref:System.IO.Log.LogRecordSequence> class:</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a336-109">初始化 <see cref="T:System.IO.Log.LogRecordSequence" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1a336-109">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (System.IO.Log.LogStore logStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Log.LogStore logStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logStore As LogStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::IO::Log::LogStore ^ logStore);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : System.IO.Log.LogStore -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence logStore" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logStore" Type="System.IO.Log.LogStore" />
      </Parameters>
      <Docs>
        <param name="logStore"><span data-ttu-id="1a336-110">此记录序列应使用的 <see cref="T:System.IO.Log.LogStore" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-110">The <see cref="T:System.IO.Log.LogStore" /> that this record sequence should use.</span></span></param>
        <summary><span data-ttu-id="1a336-111">使用指定的日志存储区初始化 <see cref="T:System.IO.Log.LogRecordSequence" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1a336-111">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with the specified log store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-112">缓冲区大小确定了可追加或读取的记录的最大大小。</span><span class="sxs-lookup"><span data-stu-id="1a336-112">The buffer size determines the maximum size of the record that can be appended or read.</span></span> <span data-ttu-id="1a336-113">在此构造函数中，将默认值设置为 64。</span><span class="sxs-lookup"><span data-stu-id="1a336-113">In this constructor, a default value of 64 is set.</span></span> <span data-ttu-id="1a336-114">将所需的缓冲区数量设置为 10。</span><span class="sxs-lookup"><span data-stu-id="1a336-114">The desired number of buffers is set to 10.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-115"><paramref name="logStore" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-115"><paramref name="logStore" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::String ^ path, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : string * System.IO.FileMode -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (path, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1a336-116">要打开的日志存储区的基文件的相对或绝对路径。</span><span class="sxs-lookup"><span data-stu-id="1a336-116">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="1a336-117">用于确定如何打开或创建存储区的 <see cref="T:System.IO.FileMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="1a336-117">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <summary><span data-ttu-id="1a336-118">使用指定的日志存储区路径和访问模式初始化 <see cref="T:System.IO.Log.LogRecordSequence" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1a336-118">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store and the access mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-119">此构造函数使用指定的路径和模式初始化它打开的新 <xref:System.IO.Log.LogRecordSequence> 对象上的新 <xref:System.IO.Log.LogStore>。</span><span class="sxs-lookup"><span data-stu-id="1a336-119">This constructor initializes a new <xref:System.IO.Log.LogRecordSequence> on a new <xref:System.IO.Log.LogStore> object that it opens with the specified path and mode.</span></span> <span data-ttu-id="1a336-120">为其指定了存储区的读/写访问权限，并打开了存储区以共享读访问权限。</span><span class="sxs-lookup"><span data-stu-id="1a336-120">It is given read/write access to the store, and the store is opened sharing Read access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-121"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-121"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-122"><paramref name="path" /> 为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="1a336-122"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="1a336-123">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-123">-or-</span></span> 
 <span data-ttu-id="1a336-124"><paramref name="path" /> 仅包含空白。</span><span class="sxs-lookup"><span data-stu-id="1a336-124"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="1a336-125">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-125">-or-</span></span> 
 <span data-ttu-id="1a336-126"><paramref name="path" /> 包含一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="1a336-126"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-127"><paramref name="mode" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="1a336-127"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1a336-128">无法找到该文件。</span><span class="sxs-lookup"><span data-stu-id="1a336-128">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-129">打开日志存储区时发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-129">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-130">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-130">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-131">不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-131">This operation is not supported.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-132">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-132">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="1a336-133">无法使用 <see cref="T:System.IO.Log.LogRecordSequence" />，因为没有安装所需的公用日志文件系统 (CLFS) 组件。</span><span class="sxs-lookup"><span data-stu-id="1a336-133"><see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="1a336-134">如果可行，请为您的平台安装 CLFS 组件，或使用 <see cref="T:System.IO.Log.FileRecordSequence" /> 类。</span><span class="sxs-lookup"><span data-stu-id="1a336-134">Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (System.IO.Log.LogStore logStore, int bufferSize, int bufferCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Log.LogStore logStore, int32 bufferSize, int32 bufferCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logStore As LogStore, bufferSize As Integer, bufferCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::IO::Log::LogStore ^ logStore, int bufferSize, int bufferCount);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : System.IO.Log.LogStore * int * int -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (logStore, bufferSize, bufferCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logStore" Type="System.IO.Log.LogStore" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="bufferCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="logStore"><span data-ttu-id="1a336-135">此记录序列应使用的 <see cref="T:System.IO.Log.LogStore" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-135">The <see cref="T:System.IO.Log.LogStore" /> that this record sequence should use.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="1a336-136">所需的缓冲区大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1a336-136">The desired buffer size in bytes.</span></span> <span data-ttu-id="1a336-137">缓冲区大小确定了可追加或读取的记录的最大大小。</span><span class="sxs-lookup"><span data-stu-id="1a336-137">The buffer size determines the maximum size of the record that can be appended or read.</span></span></param>
        <param name="bufferCount"><span data-ttu-id="1a336-138">所需的缓冲区数量。</span><span class="sxs-lookup"><span data-stu-id="1a336-138">The desired number of buffers.</span></span></param>
        <summary><span data-ttu-id="1a336-139">使用指定的日志存储区、每个记录的缓冲区大小以及缓冲区数量来初始化 <see cref="T:System.IO.Log.LogRecordSequence" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1a336-139">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with the specified log store, buffer size for each record, and buffer number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-140">如果要指定 `bufferSize` 和 `bufferCount` 值，而不是使用 `bufferSize` 的默认值 64 以及 `bufferCount` 的默认值 10，则可以使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="1a336-140">Use this constructor if you want to specify values for `bufferSize` and `bufferCount` and do not want to use the default value of 64 for `bufferSize` and 10 for `bufferCount`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-141"><paramref name="logStore" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-141"><paramref name="logStore" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-142"><paramref name="bufferSize" /> 为负数或零。</span><span class="sxs-lookup"><span data-stu-id="1a336-142"><paramref name="bufferSize" /> is negative or zero.</span></span>  
  
<span data-ttu-id="1a336-143">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-143">-or-</span></span> 
 <span data-ttu-id="1a336-144"><paramref name="bufferCount" /> 为负数或零。</span><span class="sxs-lookup"><span data-stu-id="1a336-144"><paramref name="bufferCount" /> is negative or zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : string * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (path, mode, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1a336-145">要打开的日志存储区的基文件的相对或绝对路径。</span><span class="sxs-lookup"><span data-stu-id="1a336-145">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="1a336-146">用于确定如何打开或创建存储区的 <see cref="T:System.IO.FileMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="1a336-146">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <param name="access"><span data-ttu-id="1a336-147">用于确定 <see cref="T:System.IO.FileAccess" /> 可以如何访问文件的 <see cref="T:System.IO.Log.LogStore" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="1a336-147">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</span></span></param>
        <summary><span data-ttu-id="1a336-148">使用指定的日志存储区路径以及访问和共享模式来初始化 <see cref="T:System.IO.Log.LogRecordSequence" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1a336-148">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store and the access and share modes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-149">此构造函数使用指定的路径、模式和访问权限来初始化它打开的新 <xref:System.IO.Log.LogRecordSequence> 对象上的新 <xref:System.IO.Log.LogStore>，</span><span class="sxs-lookup"><span data-stu-id="1a336-149">This constructor initializes a new <xref:System.IO.Log.LogRecordSequence> on a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access.</span></span> <span data-ttu-id="1a336-150">并打开了存储区以共享读访问权限。</span><span class="sxs-lookup"><span data-stu-id="1a336-150">The store is opened sharing Read access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-151"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-151"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-152"><paramref name="path" /> 为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="1a336-152"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="1a336-153">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-153">-or-</span></span> 
 <span data-ttu-id="1a336-154"><paramref name="path" /> 仅包含空白。</span><span class="sxs-lookup"><span data-stu-id="1a336-154"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="1a336-155">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-155">-or-</span></span> 
 <span data-ttu-id="1a336-156"><paramref name="path" /> 包含一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="1a336-156"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-157"><paramref name="mode" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="1a336-157"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1a336-158">无法找到该文件。</span><span class="sxs-lookup"><span data-stu-id="1a336-158">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-159">打开日志存储区时发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-159">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-160">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-160">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-161">不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-161">This operation is not supported.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-162">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-162">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="1a336-163">无法使用 <see cref="T:System.IO.Log.LogRecordSequence" />，因为没有安装所需的公用日志文件系统 (CLFS) 组件。</span><span class="sxs-lookup"><span data-stu-id="1a336-163"><see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="1a336-164">如果可行，请为您的平台安装 CLFS 组件，或使用 <see cref="T:System.IO.Log.FileRecordSequence" /> 类。</span><span class="sxs-lookup"><span data-stu-id="1a336-164">Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (path, mode, access, share)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1a336-165">要打开的日志存储区的基文件的相对或绝对路径。</span><span class="sxs-lookup"><span data-stu-id="1a336-165">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="1a336-166">用于确定如何打开或创建存储区的 <see cref="T:System.IO.FileMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="1a336-166">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <param name="access"><span data-ttu-id="1a336-167">用于确定 <see cref="T:System.IO.FileAccess" /> 可以如何访问文件的 <see cref="T:System.IO.Log.LogStore" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="1a336-167">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</span></span></param>
        <param name="share"><span data-ttu-id="1a336-168">用于确定日志存储区将如何在进程之间共享的 <see cref="T:System.IO.FileShare" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="1a336-168">One of the <see cref="T:System.IO.FileShare" /> values that determines how the log store will be shared among processes.</span></span></param>
        <summary><span data-ttu-id="1a336-169">使用指定的日志存储区路径和访问模式初始化 <see cref="T:System.IO.Log.LogRecordSequence" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1a336-169">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store and the access mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-170">此构造函数使用指定的路径、模式和访问权限来初始化它打开的新 <xref:System.IO.Log.LogRecordSequence> 对象上的新 <xref:System.IO.Log.LogStore>，</span><span class="sxs-lookup"><span data-stu-id="1a336-170">This constructor initializes a new <xref:System.IO.Log.LogRecordSequence> on a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access.</span></span> <span data-ttu-id="1a336-171">并打开了存储区以共享指定的访问权限。</span><span class="sxs-lookup"><span data-stu-id="1a336-171">The store is opened sharing the specified access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a336-172">此示例演示如何使用此 <xref:System.IO.Log.LogRecordSequence> 构造函数：</span><span class="sxs-lookup"><span data-stu-id="1a336-172">This example shows how to use this <xref:System.IO.Log.LogRecordSequence> constructor:</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#1)]
 [!code-vb[S_UELogRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-173"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-173"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-174"><paramref name="path" /> 为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="1a336-174"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="1a336-175">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-175">-or-</span></span> 
 <span data-ttu-id="1a336-176"><paramref name="path" /> 仅包含空白。</span><span class="sxs-lookup"><span data-stu-id="1a336-176"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="1a336-177">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-177">-or-</span></span> 
 <span data-ttu-id="1a336-178"><paramref name="path" /> 包含一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="1a336-178"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-179"><paramref name="mode" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="1a336-179"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1a336-180">无法找到该文件。</span><span class="sxs-lookup"><span data-stu-id="1a336-180">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-181">打开日志存储区时发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-181">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-182">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-182">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-183">不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-183">This operation is not supported.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-184">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-184">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="1a336-185">无法使用 <see cref="T:System.IO.Log.LogRecordSequence" />，因为没有安装所需的公用日志文件系统 (CLFS) 组件。</span><span class="sxs-lookup"><span data-stu-id="1a336-185"><see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="1a336-186">如果可行，请为您的平台安装 CLFS 组件，或使用 <see cref="T:System.IO.Log.FileRecordSequence" /> 类。</span><span class="sxs-lookup"><span data-stu-id="1a336-186">Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, int bufferCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize, int32 bufferCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, bufferCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize, int bufferCount);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * int * int -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (path, mode, access, share, bufferSize, bufferCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="bufferCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1a336-187">要打开的日志存储区的基文件的相对或绝对路径。</span><span class="sxs-lookup"><span data-stu-id="1a336-187">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="1a336-188">用于确定如何打开或创建存储区的 <see cref="T:System.IO.FileMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="1a336-188">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <param name="access"><span data-ttu-id="1a336-189">用于确定 <see cref="T:System.IO.FileAccess" /> 可以如何访问文件的 <see cref="T:System.IO.Log.LogStore" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="1a336-189">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</span></span></param>
        <param name="share"><span data-ttu-id="1a336-190">用于确定日志存储区将如何在进程之间共享的 <see cref="T:System.IO.FileShare" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="1a336-190">One of the <see cref="T:System.IO.FileShare" /> values that determines how the log store will be shared among processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="1a336-191">所需的缓冲区大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1a336-191">The desired buffer size in bytes.</span></span> <span data-ttu-id="1a336-192">缓冲区大小确定了可追加或读取的记录的最大大小。</span><span class="sxs-lookup"><span data-stu-id="1a336-192">The buffer size determines the maximum size of the record that can be appended or read.</span></span></param>
        <param name="bufferCount"><span data-ttu-id="1a336-193">所需的缓冲区数量。</span><span class="sxs-lookup"><span data-stu-id="1a336-193">The desired number of buffers.</span></span></param>
        <summary><span data-ttu-id="1a336-194">使用指定的日志存储区路径、文件权限、访问和共享模式以及记录的缓冲区大小和计数来初始化 <see cref="T:System.IO.Log.LogRecordSequence" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1a336-194">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store, file permission, access and share modes, and the buffer size and count for records.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-195">此构造函数使用指定的路径、模式和访问权限来初始化它打开的新 <xref:System.IO.Log.LogRecordSequence> 对象上的新 <xref:System.IO.Log.LogStore>，</span><span class="sxs-lookup"><span data-stu-id="1a336-195">This constructor initializes a new <xref:System.IO.Log.LogRecordSequence> on a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access.</span></span> <span data-ttu-id="1a336-196">并打开了存储区以共享指定的访问权限。</span><span class="sxs-lookup"><span data-stu-id="1a336-196">The store is opened sharing the specified access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-197"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-197"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-198"><paramref name="path" /> 为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="1a336-198"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="1a336-199">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-199">-or-</span></span> 
 <span data-ttu-id="1a336-200"><paramref name="path" /> 仅包含空白。</span><span class="sxs-lookup"><span data-stu-id="1a336-200"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="1a336-201">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-201">-or-</span></span> 
 <span data-ttu-id="1a336-202"><paramref name="path" /> 包含一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="1a336-202"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-203"><paramref name="mode" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="1a336-203"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1a336-204">无法找到该文件。</span><span class="sxs-lookup"><span data-stu-id="1a336-204">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-205">打开日志存储区时发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-205">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-206">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-206">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-207">不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-207">This operation is not supported.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-208">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-208">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="1a336-209">无法使用 <see cref="T:System.IO.Log.LogRecordSequence" />，因为没有安装所需的公用日志文件系统 (CLFS) 组件。</span><span class="sxs-lookup"><span data-stu-id="1a336-209"><see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="1a336-210">如果可行，请为您的平台安装 CLFS 组件，或使用 <see cref="T:System.IO.Log.FileRecordSequence" /> 类。</span><span class="sxs-lookup"><span data-stu-id="1a336-210">Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, int bufferCount, System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize, int32 bufferCount, class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32,System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, bufferCount As Integer, fileSecurity As FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogRecordSequence(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize, int bufferCount, System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogRecordSequence : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * int * int * System.Security.AccessControl.FileSecurity -&gt; System.IO.Log.LogRecordSequence" Usage="new System.IO.Log.LogRecordSequence (path, mode, access, share, bufferSize, bufferCount, fileSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="bufferCount" Type="System.Int32" />
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1a336-211">要打开的日志存储区的基文件的相对或绝对路径。</span><span class="sxs-lookup"><span data-stu-id="1a336-211">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="1a336-212">一个有效的 <see cref="T:System.IO.FileMode" /> 值，用于确定如何打开或创建存储区。</span><span class="sxs-lookup"><span data-stu-id="1a336-212">A valid <see cref="T:System.IO.FileMode" /> value that determines how to open or create the store.</span></span></param>
        <param name="access"><span data-ttu-id="1a336-213">一个有效的 <see cref="T:System.IO.FileAccess" /> 值，用于确定如何访问日志存储区。</span><span class="sxs-lookup"><span data-stu-id="1a336-213">A valid <see cref="T:System.IO.FileAccess" /> value that determines how the log store can be accessed.</span></span></param>
        <param name="share"><span data-ttu-id="1a336-214">一个有效的 <see cref="T:System.IO.FileShare" /> 值，用于确定日志存储区将如何在进程之间共享。</span><span class="sxs-lookup"><span data-stu-id="1a336-214">A valid <see cref="T:System.IO.FileShare" /> value that determines how the log store will be shared among processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="1a336-215">所需的缓冲区大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1a336-215">The desired buffer size in bytes.</span></span> <span data-ttu-id="1a336-216">缓冲区大小确定了可追加或读取的记录的最大大小。</span><span class="sxs-lookup"><span data-stu-id="1a336-216">The buffer size determines the maximum size of the record that can be appended or read.</span></span></param>
        <param name="bufferCount"><span data-ttu-id="1a336-217">所需的缓冲区数量。</span><span class="sxs-lookup"><span data-stu-id="1a336-217">The desired number of buffers.</span></span></param>
        <param name="fileSecurity"><span data-ttu-id="1a336-218">一个有效的 <see cref="T:System.Security.AccessControl.FileSecurity" /> 值，指定在必须创建存储区的情况下，要为新创建的存储区设置的安全性。</span><span class="sxs-lookup"><span data-stu-id="1a336-218">A valid <see cref="T:System.Security.AccessControl.FileSecurity" /> value that specifies the security to set on the newly created store if the store must be created.</span></span></param>
        <summary><span data-ttu-id="1a336-219">初始化 <see cref="T:System.IO.Log.LogRecordSequence" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1a336-219">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-220"><paramref name="path" /> 指定的文件无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-220">The file specified by <paramref name="path" /> is not valid.</span></span>  
  
<span data-ttu-id="1a336-221">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-221">-or-</span></span> 
<span data-ttu-id="1a336-222">指定的日志存储区文件名无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-222">The specified log store file name is not valid.</span></span>  
  
<span data-ttu-id="1a336-223">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-223">-or-</span></span> 
 <span data-ttu-id="1a336-224"><paramref name="mode" /> 的值为 <see cref="F:System.IO.FileMode.CreateNew" />，在没有写访问权限的情况下无法使用它。</span><span class="sxs-lookup"><span data-stu-id="1a336-224"><paramref name="mode" /> has a value of <see cref="F:System.IO.FileMode.CreateNew" />, and cannot be used without write access.</span></span>  
  
<span data-ttu-id="1a336-225">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-225">-or-</span></span> 
 <span data-ttu-id="1a336-226"><paramref name="mode" /> 的值为 <see cref="F:System.IO.FileMode.OpenOrCreate" />，在没有写访问权限的情况下无法使用它。</span><span class="sxs-lookup"><span data-stu-id="1a336-226"><paramref name="mode" /> has a value of <see cref="F:System.IO.FileMode.OpenOrCreate" />, and cannot be used without write access.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-227">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-227">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-228">一个或多个自变量超出范围。</span><span class="sxs-lookup"><span data-stu-id="1a336-228">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1a336-229">找不到 <paramref name="path" /> 指定的文件。</span><span class="sxs-lookup"><span data-stu-id="1a336-229">The file specified by <paramref name="path" /> cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-230">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-230">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
<span data-ttu-id="1a336-231">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-231">-or-</span></span> 
<span data-ttu-id="1a336-232">无法访问 <paramref name="path" /> 指定的文件，因为另一个进程正在使用该文件。</span><span class="sxs-lookup"><span data-stu-id="1a336-232">The file specified by <paramref name="path" /> cannot be accessed because it is in use by another process.</span></span>  
  
<span data-ttu-id="1a336-233">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-233">-or-</span></span> 
<span data-ttu-id="1a336-234">无法创建 <paramref name="path" /> 指定的文件，因为该文件或目录已存在。</span><span class="sxs-lookup"><span data-stu-id="1a336-234">The file specified by <paramref name="path" /> cannot be created because the file or directory already exists.</span></span>  
  
<span data-ttu-id="1a336-235">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-235">-or-</span></span> 
<span data-ttu-id="1a336-236">日志句柄无法绑定到线程池。</span><span class="sxs-lookup"><span data-stu-id="1a336-236">The log handle could not be bound to the thread pool.</span></span>  
  
<span data-ttu-id="1a336-237">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-237">-or-</span></span> 
<span data-ttu-id="1a336-238">指定的日志文件格式或版本无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-238">The specified log file format or version is invalid.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-239">不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-239">This operation is not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-240">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-240">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-241">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-241">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="1a336-242">无法使用 <see cref="T:System.IO.Log.LogRecordSequence" />，因为没有安装所需的公用日志文件系统 (CLFS) 组件。</span><span class="sxs-lookup"><span data-stu-id="1a336-242"><see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="1a336-243">如果可行，请为您的平台安装 CLFS 组件，或使用 <see cref="T:System.IO.Log.FileRecordSequence" /> 类。</span><span class="sxs-lookup"><span data-stu-id="1a336-243">Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-244">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-244">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-245">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-245">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit&#xA;override this.AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit" Usage="logRecordSequence.AdvanceBaseSequenceNumber newBaseSequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber"><span data-ttu-id="1a336-246">为日志指定新的基 <see cref="T:System.IO.Log.SequenceNumber" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-246">Specifies the new base <see cref="T:System.IO.Log.SequenceNumber" /> for the log.</span></span> <span data-ttu-id="1a336-247">这必须介于日志的当前基序列号和最后一个序列号之间（包括这两个序列号）。</span><span class="sxs-lookup"><span data-stu-id="1a336-247">This must lie in the range between the current base sequence number and the last sequence number of the log inclusively.</span></span></param>
        <summary><span data-ttu-id="1a336-248">前移日志的基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-248">Moves the base sequence number of the log forward.</span></span> <span data-ttu-id="1a336-249">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-249">This method cannot be inherited.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-250">此方法通常与 <xref:System.IO.Log.LogRecordSequence.TailPinned> 事件一起使用来释放记录中的空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-250">This method is often used with the <xref:System.IO.Log.LogRecordSequence.TailPinned> event to free up space in a record.</span></span> <span data-ttu-id="1a336-251"><xref:System.IO.Log.LogRecordSequence.TailPinned> 事件指示，需要将序列的尾数据（即基序列号）前移以释放空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-251">The <xref:System.IO.Log.LogRecordSequence.TailPinned> event indicates that the tail of the sequence (that is, the base sequence number) needs to be moved forward to free up space.</span></span> <span data-ttu-id="1a336-252">可以使用以下两种方式来释放空间：使用 <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> 方法写入重新开始区域，或者截断日志并使用 <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> 方法将日志的基序列号前移到 `newBaseSequenceNumber` 参数指定的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-252">Freeing space can be done by either writing restart areas using the <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> method, or truncating the log and using the <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> method to advance the base sequence number of a log to the one specified by the `newBaseSequenceNumber` parameter.</span></span> <span data-ttu-id="1a336-253">“示例”部分的代码示例演示了第二种方式。</span><span class="sxs-lookup"><span data-stu-id="1a336-253">The code sample in the Example section demonstrates the second approach.</span></span>  
  
 <span data-ttu-id="1a336-254">请注意，调用此方法与使用 <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> 方法设置新的基序列号相同，只是没有将重新开始记录写入日志中。</span><span class="sxs-lookup"><span data-stu-id="1a336-254">Note that calling this method is the same as setting a new base sequence number using the <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> method, except that no restart record is written to the log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a336-255">此示例演示如何将 <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> 方法与 <xref:System.IO.Log.LogRecordSequence.TailPinned> 事件一起使用来释放日志序列中的空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-255">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> method with the <xref:System.IO.Log.LogRecordSequence.TailPinned> event to free up space in a log sequence.</span></span>  
  
```  
recordSequence.RetryAppend = true;  
recordSequence.TailPinned += new EventHandler<TailPinnedEventArgs>(HandleTailPinned);  
  
void HandleTailPinned(object sender, TailPinnedEventArgs tailPinnedEventArgs)  
{  
   // tailPinnedEventArgs.TargetSequenceNumber is the target   
   // sequence number to free up space to.    
   // However, this sequence number is not necessarily valid.  We have  
   // to use this sequence number as a starting point for finding a  
   // valid point within the log to advance toward. You need to  
   // identify a record with a sequence number equal to, or greater  
   // than TargetSequenceNumber; let's call this   
   // realTargetSequenceNumber. Once found, move the base  
  
   recordSequence.AdvanceBaseSequenceNumber(realTargetSequenceNumber);  
  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-256"><paramref name="newBaseSequenceNumber" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-256"><paramref name="newBaseSequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-257">活动日志新存档或现有存档的尾数据或基数据无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-257">A new or existing archive tail or base of the active log is invalid.</span></span>  
  
<span data-ttu-id="1a336-258">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-258">-or-</span></span> 
 <span data-ttu-id="1a336-259"><paramref name="newBaseSequenceNumber" /> 不在此序列的基序列号和最后一个序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-259"><paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-260">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-260">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-261">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-261">-or-</span></span>  
  
 <span data-ttu-id="1a336-262">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-262">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1a336-263">指定的日志没有任何范围。</span><span class="sxs-lookup"><span data-stu-id="1a336-263">The specified log does not have any extents.</span></span> <span data-ttu-id="1a336-264">必须创建一个或多个范围，然后才能使用记录序列。</span><span class="sxs-lookup"><span data-stu-id="1a336-264">One or more extents must be created before a record sequence may be used.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-265">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-265">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-266">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-266">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-267">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-267">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-268">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-268">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a336-269">将日志记录写入 <see cref="T:System.IO.Log.IRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-269">Writes a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1a336-270">此示例演示如何使用 <xref:System.IO.Log.LogRecordSequence.Append%2A> 成员。</span><span class="sxs-lookup"><span data-stu-id="1a336-270">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.Append%2A> member</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#5)]
 [!code-vb[S_UELogRecordSequence#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (data As ArraySegment(Of Byte), nextUndoRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-271">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-271">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="1a336-272">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-272">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-273">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-273">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-274"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-274">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="1a336-275">将日志记录写入 <see cref="T:System.IO.Log.LogRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-275">Writes a log record to the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span> <span data-ttu-id="1a336-276">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-276">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-277">追加的日志记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-277">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-278">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-278">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-279">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-279">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-280">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-280">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="1a336-281">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.LogRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-281">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a336-282">下面的示例演示如何使用此方法向序列中追加日志记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-282">The following example demonstrates how to use this method to append a log record to the sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#13)]
 [!code-vb[S_UELogRecordSequence#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-283"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-283"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-284">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-284">-or-</span></span> 
 <span data-ttu-id="1a336-285">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-285"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-286">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-286">-or-</span></span> 
 <span data-ttu-id="1a336-287"><paramref name="reservations" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-287"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-288">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-288">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-289"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 不在此序列的基序列号和最新序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-289"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-290">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-290">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-291">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-291">-or-</span></span>  
  
 <span data-ttu-id="1a336-292">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-292">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-293">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-293">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-294">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-294">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-295">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-295">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-296">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-296">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-297">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-297">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (data As IList(Of ArraySegment(Of Byte)), userRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Append (data, userRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-298">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-298">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="1a336-299">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-299">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-300">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-300">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-301"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-301">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="1a336-302">向 <see cref="T:System.IO.Log.IRecordSequence" /> 中追加日志记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-302">Appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span> <span data-ttu-id="1a336-303">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-303">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-304">追加的日志记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-304">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-305">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-305">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-306">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-306">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-307">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-307">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="1a336-308">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.LogRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-308">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-309"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-309"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-310">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-310">-or-</span></span> 
 <span data-ttu-id="1a336-311">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-311"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-312">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-312">-or-</span></span> 
 <span data-ttu-id="1a336-313"><paramref name="reservations" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-313"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-314">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-314">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-315"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 不在此序列的基序列号和最新序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-315"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-316">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-316">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-317">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-317">-or-</span></span>  
  
 <span data-ttu-id="1a336-318">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-318">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-319">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-319">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-320">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-320">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-321">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-321">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-322">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-322">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-323">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-323">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (data As ArraySegment(Of Byte), nextUndoRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-324">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-324">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="1a336-325">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-325">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-326">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-326">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-327"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-327">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="1a336-328">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此记录的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-328">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="1a336-329">使用序列中先前保留的空间向 <see cref="T:System.IO.Log.IRecordSequence" /> 中追加日志记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-329">Appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span></span> <span data-ttu-id="1a336-330">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-330">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-331">追加的日志记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-331">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-332">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-332">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-333">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-333">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-334">追加的记录将使用 `reservations` 参数指定的预留来占用先前已预留的空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-334">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="1a336-335">如果追加成功，它将占用能容纳数据的最小预留区域，而该预留区域将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="1a336-335">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="1a336-336">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-336">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="1a336-337">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.LogRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-337">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-338"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-338"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-339">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-339">-or-</span></span> 
 <span data-ttu-id="1a336-340">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-340"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-341">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-341">-or-</span></span> 
 <span data-ttu-id="1a336-342"><paramref name="reservations" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-342"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-343">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-343">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-344"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 不在此序列的基序列号和最新序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-344"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-345">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-345">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-346">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-346">-or-</span></span>  
  
 <span data-ttu-id="1a336-347">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-347">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-348">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-348">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-349">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-349">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-350">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-350">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-351">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-351">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-352">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-352">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="1a336-353">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-353">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (data As IList(Of ArraySegment(Of Byte)), userRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Append (data, userRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-354">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-354">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="1a336-355">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-355">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-356">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-356">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-357"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-357">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="1a336-358">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此记录的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-358">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="1a336-359">使用序列中先前保留的空间向 <see cref="T:System.IO.Log.IRecordSequence" /> 中追加日志记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-359">Appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span></span> <span data-ttu-id="1a336-360">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-360">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-361">追加的日志记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-361">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-362">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-362">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-363">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-363">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-364">追加的记录将使用 `reservations` 参数指定的预留来占用先前已预留的空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-364">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="1a336-365">如果追加成功，它将占用能容纳数据的最小预留区域，而该预留区域将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="1a336-365">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="1a336-366">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-366">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="1a336-367">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.IRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-367">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-368"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-368"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-369">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-369">-or-</span></span> 
 <span data-ttu-id="1a336-370">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-370"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-371">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-371">-or-</span></span> 
 <span data-ttu-id="1a336-372"><paramref name="reservations" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-372"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-373">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-373">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-374"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 不在此序列的基序列号和最新序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-374"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-375">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-375">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-376">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-376">-or-</span></span>  
  
 <span data-ttu-id="1a336-377">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-377">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-378">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-378">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-379">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-379">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-380">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-380">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-381">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-381">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-382">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-382">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="1a336-383">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-383">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.LogRecordSequence.BaseSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.BaseSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a336-384">获取当前 <see cref="T:System.IO.Log.LogRecordSequence" /> 中第一条有效记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-384">Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></summary>
        <value><span data-ttu-id="1a336-385">与 <see cref="T:System.IO.Log.LogRecordSequence" /> 中的有效记录对应的最低序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-385">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-386">有效序列号大于或等于 <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A> 且小于 <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="1a336-386">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A>.</span></span>  
  
 <span data-ttu-id="1a336-387">可通过调用 <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> 方法或 <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> 方法来更改此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1a336-387">The value of this property can be changed by calling the <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> method or <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a336-388">此示例演示如何在循环中使用 <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A> 成员。</span><span class="sxs-lookup"><span data-stu-id="1a336-388">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A> member in a loop.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#10)]
 [!code-vb[S_UELogRecordSequence#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-389">该属性是在序列已释放之后访问的。</span><span class="sxs-lookup"><span data-stu-id="1a336-389">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a336-390">开始异步追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-390">Begins an asynchronous append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAppend (data As ArraySegment(Of Byte), nextUndoRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-391">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-391">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="1a336-392">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-392">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-393">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-393">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-394"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-394">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="1a336-395">可选的异步回调，在追加完成时调用。</span><span class="sxs-lookup"><span data-stu-id="1a336-395">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="1a336-396">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span><span class="sxs-lookup"><span data-stu-id="1a336-396">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="1a336-397">开始异步追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-397">Begins an asynchronous append operation.</span></span> <span data-ttu-id="1a336-398">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-398">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-399">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-399">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-400">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 方法，以确保追加操作完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="1a336-400">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="1a336-401">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-401">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="1a336-402">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-402">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-403">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-403">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-404">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-404">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="1a336-405">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.LogRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-405">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-406"><paramref name="nextUndoRecord" /> 或 <paramref name="previousRecord" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-406"><paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-407">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-407">-or-</span></span> 
 <span data-ttu-id="1a336-408">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-408"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-409">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-409">-or-</span></span> 
 <span data-ttu-id="1a336-410"><paramref name="reservations" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-410"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-411">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-411">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-412"><paramref name="nextUndoRecord" /> 或 <paramref name="previousRecord" /> 不在此序列的基序列号和最新序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-412"><paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-413">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-413">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-414">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-414">-or-</span></span>  
  
 <span data-ttu-id="1a336-415">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-415">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-416">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-416">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-417">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-417">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-418">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-418">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-419">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-419">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-420">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-420">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAppend (data As IList(Of ArraySegment(Of Byte)), userRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginAppend (data, userRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-421">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-421">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="1a336-422">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-422">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-423">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-423">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-424"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-424">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="1a336-425">可选的异步回调，在追加完成时调用。</span><span class="sxs-lookup"><span data-stu-id="1a336-425">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="1a336-426">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span><span class="sxs-lookup"><span data-stu-id="1a336-426">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="1a336-427">开始异步追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-427">Begins an asynchronous append operation.</span></span> <span data-ttu-id="1a336-428">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-428">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-429">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-429">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-430">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 方法，以确保追加操作完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="1a336-430">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="1a336-431">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-431">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="1a336-432">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-432">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-433">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-433">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-434">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-434">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="1a336-435">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.LogRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-435">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-436"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-436"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-437">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-437">-or-</span></span> 
 <span data-ttu-id="1a336-438">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-438"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-439">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-439">-or-</span></span> 
 <span data-ttu-id="1a336-440"><paramref name="reservations" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-440"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-441">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-441">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-442"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 不在此序列的基序列号和最新序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-442"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-443">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-443">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-444">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-444">-or-</span></span>  
  
 <span data-ttu-id="1a336-445">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-445">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-446">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-446">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-447">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-447">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-448">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-448">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-449">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-449">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-450">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-450">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAppend (data As ArraySegment(Of Byte), nextUndoRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions, reservations As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-451">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-451">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="1a336-452">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-452">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-453">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-453">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-454"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-454">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="1a336-455">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此记录的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-455">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="1a336-456">可选的异步回调，在追加完成时调用。</span><span class="sxs-lookup"><span data-stu-id="1a336-456">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="1a336-457">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span><span class="sxs-lookup"><span data-stu-id="1a336-457">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="1a336-458">开始异步追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-458">Begins an asynchronous append operation.</span></span> <span data-ttu-id="1a336-459">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-459">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-460">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-460">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-461">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 方法，以确保追加操作完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="1a336-461">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="1a336-462">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-462">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="1a336-463">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-463">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-464">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-464">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-465">追加的记录将使用 `reservations` 参数指定的预留来占用先前已预留的空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-465">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="1a336-466">如果追加成功，它将占用能容纳数据的最小预留区域，而该预留区域将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="1a336-466">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="1a336-467">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-467">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="1a336-468">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.LogRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-468">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-469"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-469"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-470">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-470">-or-</span></span> 
 <span data-ttu-id="1a336-471">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-471"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-472">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-472">-or-</span></span> 
 <span data-ttu-id="1a336-473"><paramref name="reservations" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-473"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-474">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-474">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-475"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 不在此序列的基序列号和最新序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-475"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-476">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-476">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-477">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-477">-or-</span></span>  
  
 <span data-ttu-id="1a336-478">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-478">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-479">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-479">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-480">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-480">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-481">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-481">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-482">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-482">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-483">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-483">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="1a336-484">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-484">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAppend (data As IList(Of ArraySegment(Of Byte)), userRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions, reservations As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginAppend (data, userRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-485">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-485">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="1a336-486">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-486">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-487">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-487">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-488"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-488">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="1a336-489">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此记录的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-489">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="1a336-490">可选的异步回调，在追加完成时调用。</span><span class="sxs-lookup"><span data-stu-id="1a336-490">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="1a336-491">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span><span class="sxs-lookup"><span data-stu-id="1a336-491">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="1a336-492">开始异步追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-492">Begins an asynchronous append operation.</span></span> <span data-ttu-id="1a336-493">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-493">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-494">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-494">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-495">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 方法，以确保追加操作完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="1a336-495">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="1a336-496">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-496">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="1a336-497">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-497">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-498">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-498">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-499">追加的记录将使用 `reservations` 参数指定的预留来占用先前已预留的空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-499">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="1a336-500">如果追加成功，它将占用能容纳数据的最小预留区域，而该预留区域将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="1a336-500">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="1a336-501">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-501">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="1a336-502">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.LogRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-502">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-503"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-503"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-504">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-504">-or-</span></span> 
 <span data-ttu-id="1a336-505">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-505"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-506">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-506">-or-</span></span> 
 <span data-ttu-id="1a336-507"><paramref name="reservations" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-507"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-508">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-508">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-509"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 不在此序列的基序列号和最新序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-509"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-510">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-510">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-511">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-511">-or-</span></span>  
  
 <span data-ttu-id="1a336-512">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-512">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-513">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-513">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-514">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-514">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-515">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-515">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-516">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-516">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-517">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-517">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="1a336-518">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-518">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginFlush (sequenceNumber As SequenceNumber, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginFlush (sequenceNumber, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="1a336-519">必须写入的最新记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-519">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="1a336-520">如果此 <see cref="T:System.IO.Log.SequenceNumber" /> 无效，则必须写入所有记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-520">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <param name="callback"><span data-ttu-id="1a336-521">可选的异步回调，在刷新完成时调用。</span><span class="sxs-lookup"><span data-stu-id="1a336-521">An optional asynchronous callback, to be called when the flush is complete.</span></span></param>
        <param name="state"><span data-ttu-id="1a336-522">用户提供的对象，用于将此特定异步刷新请求与其他请求区别开来。</span><span class="sxs-lookup"><span data-stu-id="1a336-522">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span></span></param>
        <summary><span data-ttu-id="1a336-523">使用序列中先前保留的空间开始异步刷新操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-523">Begins an asynchronous flush operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="1a336-524">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-524">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-525">一个 <see cref="T:System.IAsyncResult" />，表示可能仍处于挂起状态的异步刷新操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-525">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-526">应将当前方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> 方法，以确保刷新完成并适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="1a336-526">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="1a336-527">如果在异步刷新过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-527">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="1a336-528">调用此方法可以确保已追加到 <xref:System.IO.Log.LogRecordSequence> 的所有记录都是持久写入的。</span><span class="sxs-lookup"><span data-stu-id="1a336-528">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.LogRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="1a336-529">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-529">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="1a336-530">异步刷新请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-530">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-531"><paramref name="sequenceNumber" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-531"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-532"><paramref name="sequenceNumber" /> 不在此序列的基序列号和最后一个序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-532"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-533">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-533">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1a336-534">指定的日志没有任何范围。</span><span class="sxs-lookup"><span data-stu-id="1a336-534">The specified log does not have any extents.</span></span> <span data-ttu-id="1a336-535">必须创建一个或多个范围，然后才能使用记录序列。</span><span class="sxs-lookup"><span data-stu-id="1a336-535">One or more extents must be created before a record sequence can be used.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-536">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-536">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-537">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-537">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-538">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-538">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-539">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-539">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-540">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-540">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a336-541">开始异步保留和追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-541">Begins an asynchronous reserve and append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReserveAndAppend (data As ArraySegment(Of Byte), nextUndoRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions, reservationCollection As ReservationCollection, reservations As Long(), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-542">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-542">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="1a336-543">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-543">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-544">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-544">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-545"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-545">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="1a336-546">要在其中生成预留的预留集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-546">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="1a336-547">要生成的预留（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1a336-547">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="1a336-548">可选的异步回调，在追加完成时调用。</span><span class="sxs-lookup"><span data-stu-id="1a336-548">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="1a336-549">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span><span class="sxs-lookup"><span data-stu-id="1a336-549">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="1a336-550">开始异步保留和追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-550">Begins an asynchronous reserve and append operation.</span></span> <span data-ttu-id="1a336-551">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-551">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-552">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的当前异步操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-552">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-553">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 方法，以确保追加操作完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="1a336-553">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="1a336-554">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-554">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="1a336-555">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-555">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-556">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-556">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-557">在原子操作中，使用记录追加操作将指定的预留添加到所提供的预留集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-557">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="1a336-558">如果追加失败，将不保留任何空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-558">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="1a336-559">通常，此方法可以在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-559">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="1a336-560">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.LogRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-560">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="1a336-561">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-561">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="1a336-562">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-562">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-563"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-563"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-564">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-564">-or-</span></span> 
 <span data-ttu-id="1a336-565">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-565"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-566">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-566">-or-</span></span> 
 <span data-ttu-id="1a336-567"><paramref name="reservations" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-567"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-568">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-568">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-569"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 不在此序列的基序列号和最新序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-569"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-570">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-570">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-571">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-571">-or-</span></span>  
  
 <span data-ttu-id="1a336-572">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-572">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-573">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-573">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-574">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-574">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-575">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-575">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-576">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-576">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-577">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-577">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="1a336-578">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-578">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReserveAndAppend (data As IList(Of ArraySegment(Of Byte)), userRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions, reservationCollection As ReservationCollection, reservations As Long(), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginReserveAndAppend (data, userRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-579">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-579">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="1a336-580">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-580">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-581">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-581">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-582"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-582">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="1a336-583">要在其中生成预留的预留集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-583">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="1a336-584">要生成的预留（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1a336-584">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="1a336-585">可选的异步回调，在追加完成时调用。</span><span class="sxs-lookup"><span data-stu-id="1a336-585">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="1a336-586">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span><span class="sxs-lookup"><span data-stu-id="1a336-586">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="1a336-587">开始异步保留和追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-587">Begins an asynchronous reserve and append operation.</span></span> <span data-ttu-id="1a336-588">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-588">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-589">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的当前异步操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-589">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-590">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 方法，以确保追加操作完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="1a336-590">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="1a336-591">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-591">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="1a336-592">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-592">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-593">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-593">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-594">在原子操作中，使用记录追加操作将指定的预留添加到所提供的预留集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-594">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="1a336-595">如果追加失败，将不保留任何空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-595">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="1a336-596">通常，此方法可以在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-596">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="1a336-597">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.LogRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-597">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="1a336-598">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-598">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="1a336-599">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-599">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-600">一个或多个自变量无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-600">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-601">追加记录时，发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-601">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-602">记录序列无法获得足够的可用空间来容纳新记录或生成预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-602">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-603">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-603">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a336-604">开始异步重新开始区域写入操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-604">Begins an asynchronous restart area write operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-605">将连接在一起并以记录形式追加的字节数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-605">Byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="1a336-606">新的基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-606">The new base sequence number.</span></span> <span data-ttu-id="1a336-607">指定的序列号必须大于或等于当前基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-607">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="1a336-608">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此重新开始区域的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-608">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="1a336-609">可选的异步回调，在重新开始区域写入完成时调用。</span><span class="sxs-lookup"><span data-stu-id="1a336-609">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="1a336-610">用户提供的对象，用于将此特定异步重新开始区域写入请求与其他请求区别开来。</span><span class="sxs-lookup"><span data-stu-id="1a336-610">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="1a336-611">使用序列中先前保留的空间开始异步重新开始区域写入操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-611">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="1a336-612">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-612">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-613">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步重新开始区域写入操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-613">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-614">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> 方法，以确保重新开始区域写入操作完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="1a336-614">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method to ensure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="1a336-615">如果在异步重新开始区域写入操作过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-615">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="1a336-616">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-616">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-617">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-617">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-618">操作成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="1a336-618">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="1a336-619">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-619">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="1a336-620">如果指定了 <xref:System.IO.Log.ReservationCollection>，写入的重新开始区域将使用集合中包含的预留来占用先前已预留的空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-620">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="1a336-621">如果该方法成功，它将占用能容纳数据的最小预留，而该预留将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="1a336-621">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="1a336-622">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-622">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="1a336-623">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-623">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-624"><paramref name="newBaseSeqNum" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-624"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-625">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-625">-or-</span></span> 
<span data-ttu-id="1a336-626">指定的日志枚举开始序列号无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-626">The specified log enumeration start sequence number is invalid.</span></span>  
  
<span data-ttu-id="1a336-627">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-627">-or-</span></span> 
 <span data-ttu-id="1a336-628">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-628"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-629">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-629">-or-</span></span> 
 <span data-ttu-id="1a336-630"><paramref name="reservation" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-630"><paramref name="reservation" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-631">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-631">One or more of the parameters is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-632">活动日志新存档或现有存档的尾数据或基数据无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-632">A new or existing archive tail or base of the active log is invalid.</span></span>  
  
<span data-ttu-id="1a336-633">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-633">-or-</span></span> 
 <span data-ttu-id="1a336-634"><paramref name="newBaseSeqNum" /> 不在此序列的基序列号和最后一个序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-634"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-635">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-635">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-636">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-636">-or-</span></span>  
  
 <span data-ttu-id="1a336-637">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-637">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-638">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-638">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-639">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-639">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-640">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-640">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-641">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-641">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservationCollection, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservationCollection, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservationCollection As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservationCollection, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="logRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservationCollection, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-642">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-642">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="1a336-643">新的基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-643">The new base sequence number.</span></span> <span data-ttu-id="1a336-644">指定的序列号必须大于或等于当前基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-644">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="1a336-645">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此重新开始区域的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-645">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="1a336-646">可选的异步回调，在重新开始区域写入完成时调用。</span><span class="sxs-lookup"><span data-stu-id="1a336-646">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="1a336-647">用户提供的对象，用于将此特定异步重新开始区域写入请求与其他请求区别开来。</span><span class="sxs-lookup"><span data-stu-id="1a336-647">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="1a336-648">使用序列中先前保留的空间开始异步重新开始区域写入操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-648">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="1a336-649">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-649">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-650">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步重新开始区域写入操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-650">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-651">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> 方法，以确保重新开始区域写入操作完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="1a336-651">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method to ensure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="1a336-652">如果在异步重新开始区域写入操作过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-652">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="1a336-653">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-653">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-654">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-654">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-655">操作成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="1a336-655">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="1a336-656">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-656">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="1a336-657">如果指定了 <xref:System.IO.Log.ReservationCollection>，写入的重新开始区域将使用集合中包含的预留来占用先前已预留的空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-657">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="1a336-658">如果该方法成功，它将占用能容纳数据的最小预留，而该预留将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="1a336-658">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="1a336-659">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-659">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="1a336-660">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-660">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-661"><paramref name="newBaseSeqNum" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-661"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-662">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-662">-or-</span></span> 
<span data-ttu-id="1a336-663">指定的日志枚举开始序列号无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-663">The specified log enumeration start sequence number is invalid.</span></span>  
  
<span data-ttu-id="1a336-664">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-664">-or-</span></span> 
 <span data-ttu-id="1a336-665">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-665"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-666">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-666">-or-</span></span> 
 <span data-ttu-id="1a336-667"><paramref name="reservationCollection" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-667"><paramref name="reservationCollection" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-668">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-668">One or more of the parameters is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-669">活动日志新存档或现有存档的尾数据或基数据无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-669">A new or existing archive tail or base of the active log is invalid.</span></span>  
  
<span data-ttu-id="1a336-670">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-670">-or-</span></span> 
 <span data-ttu-id="1a336-671"><paramref name="newBaseSeqNum" /> 不在此序列的基序列号和最后一个序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-671"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-672">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-672">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-673">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-673">-or-</span></span>  
  
 <span data-ttu-id="1a336-674">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-674">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-675">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-675">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-676">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-676">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-677">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-677">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-678">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-678">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection&#xA;override this.CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection" Usage="logRecordSequence.CreateReservationCollection " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.CreateReservationCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a336-679">创建一个新的 <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-679">Creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span></span> <span data-ttu-id="1a336-680">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-680">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-681">新创建的 <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-681">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1a336-682">如下面的示例所示，可以通过两种方式执行预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-682">Reservations can be performed in two ways as shown in the following examples.</span></span> <span data-ttu-id="1a336-683">您可以采用示例中的做法可靠地进行处理。</span><span class="sxs-lookup"><span data-stu-id="1a336-683">You can adopt the practices in the samples for robust processing.</span></span> <span data-ttu-id="1a336-684">请注意，只有在使用基于 CLFS 的 <xref:System.IO.Log.LogRecordSequence> 类时才能执行此任务。</span><span class="sxs-lookup"><span data-stu-id="1a336-684">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
//Using the ReserveAndAppend Method  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
long[] lengthOfUndoRecords = new long[] { 1000 };  
recordSequence.ReserveAndAppend(recordData,  
                                                     userSqn,  
                                                     previousSqn,  
                                                     RecordSequenceAppendOptions.None,  
                                                     reservations,  
                                                     lengthOfUndoRecords);  
recordSequence.Append(undoRecordData,    // If necessary …  
                                    userSqn,  
                                    previousSqn,  
                                    RecordSequenceAppendOptions.ForceFlush,  
                                    reservations);  
  
// Using the Manual Approach  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-685">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-685">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="logRecordSequence.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a336-686">释放组件使用的资源。</span><span class="sxs-lookup"><span data-stu-id="1a336-686">Releases the resources used by the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1a336-687">此示例演示如何使用 <xref:System.IO.Log.LogRecordSequence.Dispose%2A> 释放资源：</span><span class="sxs-lookup"><span data-stu-id="1a336-687">This example shows how to use <xref:System.IO.Log.LogRecordSequence.Dispose%2A> to release resources:</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#11)]
 [!code-vb[S_UELogRecordSequence#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#11)]  
  
 [!code-csharp[S_UELogRecordSequence#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#12)] 
 [!code-vb[S_UELogRecordSequence#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#12)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-688">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-688">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-689">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-689">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.EndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1a336-690">对未完成的异步 I/O 请求的引用。</span><span class="sxs-lookup"><span data-stu-id="1a336-690">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="1a336-691">结束异步追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-691">Ends an asynchronous append operation.</span></span> <span data-ttu-id="1a336-692">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-692">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-693">追加的日志记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-693">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-694">此方法将一直阻塞，直到 I/O 操作已完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-694">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="1a336-695">调用 <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> 时，异步写入请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将变得可见。</span><span class="sxs-lookup"><span data-stu-id="1a336-695">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.LogRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="1a336-696">必须对 <xref:System.IAsyncResult> 方法返回的每个 <xref:System.IO.Log.LogRecordSequence.BeginAppend%2A> 调用此方法且只能调用一次。</span><span class="sxs-lookup"><span data-stu-id="1a336-696">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.LogRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-697"><paramref name="result" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-697"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-698">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-698">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-699">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-699">-or-</span></span>  
  
 <span data-ttu-id="1a336-700">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-700">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1a336-701">已对此异步操作调用了 <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-701"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-702">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-702">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-703">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-703">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-704">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-704">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-705">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-705">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-706">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-706">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.EndFlush result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1a336-707">对未完成的异步 I/O 请求的引用。</span><span class="sxs-lookup"><span data-stu-id="1a336-707">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="1a336-708">结束异步刷新操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-708">Ends an asynchronous flush operation.</span></span> <span data-ttu-id="1a336-709">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-709">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-710">写入的最新记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-710">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-711">此方法将一直阻塞，直到 I/O 操作已完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-711">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="1a336-712">调用 <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> 时，异步刷新请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将变得可见。</span><span class="sxs-lookup"><span data-stu-id="1a336-712">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.LogRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="1a336-713">必须对 <xref:System.IAsyncResult> 方法返回的每个 <xref:System.IO.Log.LogRecordSequence.BeginFlush%2A> 调用此方法且只能调用一次。</span><span class="sxs-lookup"><span data-stu-id="1a336-713">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.LogRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-714"><paramref name="result" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-714"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-715">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-715">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1a336-716">已对此异步操作调用了 <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-716"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-717">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-717">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-718">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-718">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-719">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-719">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-720">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-720">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-721">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-721">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.EndReserveAndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1a336-722">对未完成的异步 I/O 请求的引用。</span><span class="sxs-lookup"><span data-stu-id="1a336-722">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="1a336-723">结束异步保留和追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-723">Ends an asynchronous reserve and append operation.</span></span> <span data-ttu-id="1a336-724">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-724">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-725">追加的日志记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-725">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-726">此方法将一直阻塞，直到 I/O 操作已完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-726">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="1a336-727">调用 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 时，异步写入请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将变得可见。</span><span class="sxs-lookup"><span data-stu-id="1a336-727">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="1a336-728">必须对 <xref:System.IAsyncResult> 方法返回的每个 <xref:System.IO.Log.LogRecordSequence.BeginReserveAndAppend%2A> 调用此方法且只能调用一次。</span><span class="sxs-lookup"><span data-stu-id="1a336-728">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.LogRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-729"><paramref name="result" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-729"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-730">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-730">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-731">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-731">-or-</span></span>  
  
 <span data-ttu-id="1a336-732">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-732">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1a336-733">已对此异步操作调用了 <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-733"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-734">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-734">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-735">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-735">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-736">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-736">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-737">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-737">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-738">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-738">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.EndWriteRestartArea result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1a336-739">对未完成的异步 I/O 请求的引用。</span><span class="sxs-lookup"><span data-stu-id="1a336-739">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="1a336-740">结束异步重新开始区域写入操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-740">Ends an asynchronous restart area write operation.</span></span> <span data-ttu-id="1a336-741">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-741">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-742">写入的日志记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-742">The sequence number of the written log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-743">此方法将一直阻塞，直到 I/O 操作已完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-743">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="1a336-744">调用 <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> 时，异步写入请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将变得可见。</span><span class="sxs-lookup"><span data-stu-id="1a336-744">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="1a336-745">必须对 <xref:System.IAsyncResult> 方法返回的每个 <xref:System.IO.Log.LogRecordSequence.BeginWriteRestartArea%2A> 调用此方法且只能调用一次。</span><span class="sxs-lookup"><span data-stu-id="1a336-745">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.LogRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-746"><paramref name="result" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-746"><paramref name="result" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-747">活动日志新存档或现有存档的尾数据或基数据无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-747">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-748">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-748">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1a336-749">已对此异步操作调用了 <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-749"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-750">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-750">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-751">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-751">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-752">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-752">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-753">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-753">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a336-754">持久写入追加的记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-754">Writes appended records durably.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : unit -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a336-755">确保所有追加的记录都已写入。</span><span class="sxs-lookup"><span data-stu-id="1a336-755">Ensures that all appended records have been written.</span></span> <span data-ttu-id="1a336-756">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-756">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-757">写入的最新记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-757">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-758">调用此方法可以确保已追加到 <xref:System.IO.Log.LogRecordSequence> 的所有记录都已持久写入。</span><span class="sxs-lookup"><span data-stu-id="1a336-758">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.LogRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-759">刷新数据时，发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-759">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-760">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-760">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-761">不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-761">This operation is not supported.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-762">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-762">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-763">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-763">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-764">记录序列无法获得足够的可用空间来容纳新的重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-764">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1a336-765">指定的日志没有任何范围。</span><span class="sxs-lookup"><span data-stu-id="1a336-765">The specified log does not have any extents.</span></span> <span data-ttu-id="1a336-766">必须创建一个或多个范围，然后才能使用记录序列。</span><span class="sxs-lookup"><span data-stu-id="1a336-766">One or more extents must be created before a record sequence can be used.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush (sequenceNumber As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.Flush sequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="1a336-767">必须写入的最新记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-767">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="1a336-768">如果此 <see cref="T:System.IO.Log.SequenceNumber" /> 无效，则必须写入所有记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-768">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <summary><span data-ttu-id="1a336-769">确保序列号不高于指定序列号的所有追加记录都已持久写入。</span><span class="sxs-lookup"><span data-stu-id="1a336-769">Ensures that all appended records up to and including the record with the specified sequence number have been durably written.</span></span> <span data-ttu-id="1a336-770">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-770">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-771">写入的最新记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-771">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-772">调用此方法可以确保序列号不高于指定序列号的所有记录都已持久写入。</span><span class="sxs-lookup"><span data-stu-id="1a336-772">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-773"><paramref name="sequenceNumber" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-773"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-774"><paramref name="sequenceNumber" /> 不在此序列的基序列号和最后一个序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-774"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-775">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-775">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1a336-776">指定的日志没有任何范围。</span><span class="sxs-lookup"><span data-stu-id="1a336-776">The specified log does not have any extents.</span></span> <span data-ttu-id="1a336-777">必须创建一个或多个范围，然后才能使用记录序列。</span><span class="sxs-lookup"><span data-stu-id="1a336-777">One or more extents must be created before a record sequence can be used.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-778">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-778">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-779">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-779">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-780">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-780">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-781">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-781">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-782">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-782">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.LogRecordSequence.LastSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.LastSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a336-783">获取比追加的最新记录大的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-783">Gets the sequence number which is greater than the last record appended.</span></span></summary>
        <value><span data-ttu-id="1a336-784">比追加的最新记录大的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-784">A sequence number which is greater than the last record appended.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-785">此属性包含一个序列号，并且保证它大于最后追加的记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-785">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="1a336-786">有效序列号大于或等于 <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A> 且小于 <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="1a336-786">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="1a336-787">所有其他序列号均无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-787">All other sequence numbers are invalid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-788">该属性是在序列已释放之后访问的。</span><span class="sxs-lookup"><span data-stu-id="1a336-788">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LogStore">
      <MemberSignature Language="C#" Value="public System.IO.Log.LogStore LogStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Log.LogStore LogStore" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.LogStore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogStore As LogStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::LogStore ^ LogStore { System::IO::Log::LogStore ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogStore : System.IO.Log.LogStore" Usage="System.IO.Log.LogRecordSequence.LogStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.LogStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a336-789">获取包含此记录序列数据的 <see cref="T:System.IO.Log.LogStore" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-789">Gets the <see cref="T:System.IO.Log.LogStore" /> that contains the data for this record sequence.</span></span> <span data-ttu-id="1a336-790">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-790">This method cannot be inherited.</span></span></summary>
        <value><span data-ttu-id="1a336-791">包含此记录序列数据的 <see cref="T:System.IO.Log.LogStore" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-791">The <see cref="T:System.IO.Log.LogStore" /> that contains the data for this record sequence.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1a336-792">此示例演示如何使用 <xref:System.IO.Log.LogRecordSequence.LogStore%2A> 成员来添加范围。</span><span class="sxs-lookup"><span data-stu-id="1a336-792">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.LogStore%2A> member to add extents.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#11)]
 [!code-vb[S_UELogRecordSequence#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRecordLength : int64" Usage="System.IO.Log.LogRecordSequence.MaximumRecordLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.MaximumRecordLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a336-793">获取可添加到此记录序列中的记录的最大大小。</span><span class="sxs-lookup"><span data-stu-id="1a336-793">Gets the maximum size of a record that can be added to this record sequence.</span></span></summary>
        <value><span data-ttu-id="1a336-794">可添加到此记录序列中的记录的最大大小。</span><span class="sxs-lookup"><span data-stu-id="1a336-794">The maximum size of a record that can be added to this record sequence.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="F#" Value="abstract member ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="logRecordSequence.ReadLogRecords (start, logRecordEnum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="1a336-795">读取操作开始处的第一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-795">The sequence number of the first record where the reading starts.</span></span></param>
        <param name="logRecordEnum"><span data-ttu-id="1a336-796">一个有效的 <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> 值，该值指定从 <see cref="T:System.IO.Log.LogRecordSequence" /> 中读取记录的方式（即，向前或向后）。</span><span class="sxs-lookup"><span data-stu-id="1a336-796">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></param>
        <summary><span data-ttu-id="1a336-797">返回序列中记录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-797">Returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="1a336-798">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-798">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-799">序列中记录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-799">An enumerable collection of records in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-800">此方法返回序列中记录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-800">This method returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="1a336-801">所枚举记录的顺序取决于 `logRecordEnum` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="1a336-801">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a336-802">此示例演示如何在循环中使用 <xref:System.IO.Log.LogRecordSequence.ReadLogRecords%2A>。</span><span class="sxs-lookup"><span data-stu-id="1a336-802">This example shows how to use <xref:System.IO.Log.LogRecordSequence.ReadLogRecords%2A> in a loop.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mymultiplexlog.cs#10)]
 [!code-vb[S_UELogRecordSequence#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mymultiplexlog.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-803"><paramref name="start" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-803"><paramref name="start" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-804">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-804">-or-</span></span> 
 <span data-ttu-id="1a336-805"><paramref name="logRecordEnum" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-805"><paramref name="logRecordEnum" /> is invalid.</span></span>  
  
<span data-ttu-id="1a336-806">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-806">-or-</span></span> 
<span data-ttu-id="1a336-807">在集合中找不到指定的元素。</span><span class="sxs-lookup"><span data-stu-id="1a336-807">The specified element was not found in the collection.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-808"><paramref name="start" /> 不在此序列的基序列号和最后一个序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-808"><paramref name="start" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-809">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-809">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-810">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-810">-or-</span></span>  
  
 <span data-ttu-id="1a336-811">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-811">The request could not be performed because of an I/O device error.</span></span>  
  
 <span data-ttu-id="1a336-812">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-812">-or</span></span>  
  
 <span data-ttu-id="1a336-813">用于写入日志记录的缓冲区大小大于用于读取日志记录的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="1a336-813">The buffer size used to write the log record is larger than the buffer size being used to read it.</span></span>  
  
 <span data-ttu-id="1a336-814">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-814">-or-</span></span>  
  
 <span data-ttu-id="1a336-815">记录序列已损坏。</span><span class="sxs-lookup"><span data-stu-id="1a336-815">The record sequence is corrupted.</span></span>  
  
 <span data-ttu-id="1a336-816">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-816">-or-</span></span>  
  
 <span data-ttu-id="1a336-817">指定的日志文件格式或版本无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-817">The specified log file format or version is invalid.</span></span>  
  
 <span data-ttu-id="1a336-818">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-818">-or-</span></span>  
  
 <span data-ttu-id="1a336-819">记录是使用不兼容的记录序列版本写入的。</span><span class="sxs-lookup"><span data-stu-id="1a336-819">The record was written with an incompatible version of the record sequence.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1a336-820">操作无效，原因是枚举尚未开始。</span><span class="sxs-lookup"><span data-stu-id="1a336-820">The operation is invalid because the enumeration has not been started.</span></span> <span data-ttu-id="1a336-821">必须调用 <see cref="M:System.Collections.IEnumerator.MoveNext" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-821">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-822">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-822">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-823">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-823">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-824">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-824">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberSignature Language="F#" Value="abstract member ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="logRecordSequence.ReadRestartAreas " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadRestartAreas</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a336-825">返回序列中重新开始区域的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-825">Returns an enumerable collection of the restart areas in the sequence.</span></span> <span data-ttu-id="1a336-826">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-826">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-827">序列中重新开始区域的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-827">An enumerable collection of the restart areas in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-828">重新开始区域按序列号的倒序枚举，即从最高序列号到最低序列号枚举。</span><span class="sxs-lookup"><span data-stu-id="1a336-828">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="1a336-829">仅枚举序列号介于最后一个序列号和基序列号之间的重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-829">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-830"><paramref name="start" /> 不在此序列的基序列号和最后一个序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-830"><paramref name="start" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-831">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-831">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-832">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-832">-or-</span></span>  
  
 <span data-ttu-id="1a336-833">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-833">The request could not be performed because of an I/O device error.</span></span>  
  
 <span data-ttu-id="1a336-834">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-834">-or</span></span>  
  
 <span data-ttu-id="1a336-835">用于写入日志记录的缓冲区大小大于用于读取日志记录的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="1a336-835">The buffer size used to write the log record is larger than the buffer size being used to read it.</span></span>  
  
 <span data-ttu-id="1a336-836">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-836">-or-</span></span>  
  
 <span data-ttu-id="1a336-837">记录序列已损坏。</span><span class="sxs-lookup"><span data-stu-id="1a336-837">The record sequence is corrupted.</span></span>  
  
 <span data-ttu-id="1a336-838">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-838">-or-</span></span>  
  
 <span data-ttu-id="1a336-839">指定的日志文件格式或版本无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-839">The specified log file format or version is invalid.</span></span>  
  
 <span data-ttu-id="1a336-840">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-840">-or-</span></span>  
  
 <span data-ttu-id="1a336-841">记录是使用不兼容的记录序列版本写入的。</span><span class="sxs-lookup"><span data-stu-id="1a336-841">The record was written with an incompatible version of the record sequence.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1a336-842">操作无效，原因是枚举尚未开始。</span><span class="sxs-lookup"><span data-stu-id="1a336-842">The operation is invalid because the enumeration has not been started.</span></span> <span data-ttu-id="1a336-843">必须调用 <see cref="M:System.Collections.IEnumerator.MoveNext" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-843">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span>  
  
<span data-ttu-id="1a336-844">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-844">-or</span></span> 
<span data-ttu-id="1a336-845">枚举已经终止。</span><span class="sxs-lookup"><span data-stu-id="1a336-845">The enumeration has ended.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-846">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-846">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-847">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-847">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-848">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-848">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a336-849">自动生成一个预留，并向序列中追加一条记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-849">Automatically makes a single reservation and appends a record to the sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ReserveAndAppend (data As ArraySegment(Of Byte), nextUndoRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions, reservationCollection As ReservationCollection, ParamArray reservations As Long()) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-850">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-850">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="1a336-851">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-851">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-852">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-852">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-853"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-853">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="1a336-854">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含要在其中生成预留的集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-854">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="1a336-855">要生成的预留（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1a336-855">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="1a336-856">自动生成一个预留，并向序列中追加一条记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-856">Automatically makes a single reservation and appends a record to the sequence.</span></span> <span data-ttu-id="1a336-857">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-857">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-858">追加的日志记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-858">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-859">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-859">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-860">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-860">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-861">在原子操作中，使用记录追加操作将指定的预留添加到所提供的预留集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-861">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="1a336-862">如果追加失败，将不保留任何空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-862">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="1a336-863">通常，此方法可以在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-863">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="1a336-864">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.LogRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-864">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a336-865">下面的示例演示如何使用此方法来生成预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-865">The following example shows how to use this method to make reservations.</span></span> <span data-ttu-id="1a336-866">请注意，只有在使用基于 CLFS 的 <xref:System.IO.Log.LogRecordSequence> 类时才能执行此任务。</span><span class="sxs-lookup"><span data-stu-id="1a336-866">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
long[] lengthOfUndoRecords = new long[] { 1000 };  
recordSequence.ReserveAndAppend(recordData,  
                                                     userSqn,  
                                                     previousSqn,  
                                                     RecordSequenceAppendOptions.None,  
                                                     reservations,  
                                                     lengthOfUndoRecords);  
recordSequence.Append(undoRecordData,    // If necessary …  
                                    userSqn,  
                                    previousSqn,  
                                    RecordSequenceAppendOptions.ForceFlush,  
                                    reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-867"><paramref name="nextUndoRecord" /> 或 <paramref name="previousRecord" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-867"><paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-868">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-868">-or-</span></span> 
 <span data-ttu-id="1a336-869">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-869"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-870">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-870">-or-</span></span> 
 <span data-ttu-id="1a336-871"><paramref name="reservations" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-871"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-872">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-872">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-873"><paramref name="nextUndoRecord" /> 或 <paramref name="previousRecord" /> 不在此序列的基序列号和最新序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-873"><paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-874">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-874">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-875">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-875">-or-</span></span>  
  
 <span data-ttu-id="1a336-876">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-876">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-877">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-877">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-878">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-878">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-879">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-879">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-880">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-880">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-881">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-881">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="1a336-882">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-882">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber userRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ReserveAndAppend (data As IList(Of ArraySegment(Of Byte)), userRecord As SequenceNumber, previousRecord As SequenceNumber, recordAppendOptions As RecordAppendOptions, reservationCollection As ReservationCollection, ParamArray reservations As Long()) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber userRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.ReserveAndAppend (data, userRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="userRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-883">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-883">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="userRecord"><span data-ttu-id="1a336-884">用户指定顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-884">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="1a336-885">“上一个”顺序中下一条记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-885">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="1a336-886"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-886">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="1a336-887">要在其中生成预留的预留集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-887">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="1a336-888">要生成的预留（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1a336-888">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="1a336-889">自动生成一个预留，并向序列中追加一条记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-889">Automatically makes a single reservation and appends a record to the sequence.</span></span> <span data-ttu-id="1a336-890">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-890">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-891">追加的日志记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-891">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-892">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-892">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-893">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-893">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="1a336-894">在原子操作中，使用记录追加操作将指定的预留添加到所提供的预留集合。</span><span class="sxs-lookup"><span data-stu-id="1a336-894">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="1a336-895">如果追加失败，将不保留任何空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-895">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="1a336-896">通常，此方法可以在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="1a336-896">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="1a336-897">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.LogRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-897">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.LogRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-898">一个或多个自变量无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-898">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-899">追加记录时，发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-899">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-900">记录序列无法获得足够的可用空间来容纳新记录或生成预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-900">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-901">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-901">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-902">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-902">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-903"><paramref name="userRecord" /> 或 <paramref name="previousRecord" /> 不在此序列的基序列号和最新序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-903"><paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1a336-904">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-904">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-905">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-905">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-906">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-906">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="1a336-907">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-907">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ReservedBytes : int64" Usage="System.IO.Log.LogRecordSequence.ReservedBytes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.ReservedBytes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a336-908">获取已保留的字节总数。</span><span class="sxs-lookup"><span data-stu-id="1a336-908">Gets the total number of bytes that have been reserved.</span></span></summary>
        <value><span data-ttu-id="1a336-909">此记录序列中做出的所有预留的总大小。</span><span class="sxs-lookup"><span data-stu-id="1a336-909">The total size of all reservations made in this record sequence.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-910">该属性是在序列已释放之后访问的。</span><span class="sxs-lookup"><span data-stu-id="1a336-910">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.RestartSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.LogRecordSequence.RestartSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RestartSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a336-911">获取最接近日志末尾的重新开始区域的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-911">Gets the sequence number of the restart area closest to the end of the log.</span></span></summary>
        <value><span data-ttu-id="1a336-912">最接近日志末尾的重新开始区域的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-912">The sequence number of the restart area closest to the end of the log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-913">重新开始区域用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="1a336-913">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="1a336-914">公用日志文件系统 (CLFS) 维护两个重新开始区域，以确保至少有一个有效区域总是可用。</span><span class="sxs-lookup"><span data-stu-id="1a336-914">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="1a336-915">需要恢复时，CLFS 读取自己的重新开始区域和最后一个检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-915">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="1a336-916">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="1a336-916">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="1a336-917">通过使用 <xref:System.IO.Log.LogRecordSequence.SetLastRecord%2A> 方法，您可以移除最近写入的重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-917">Using the <xref:System.IO.Log.LogRecordSequence.SetLastRecord%2A> method, you can remove the most recently written restart area.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-918">该属性是在序列已释放之后访问的。</span><span class="sxs-lookup"><span data-stu-id="1a336-918">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RetryAppend : bool with get, set" Usage="System.IO.Log.LogRecordSequence.RetryAppend" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RetryAppend</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a336-919">获取或设置一个值，指示在日志已满时是否自动重试追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-919">Gets or sets a value indicating whether or not appends are automatically retried if the log is full.</span></span></summary>
        <value><span data-ttu-id="1a336-920">如果在日志已满时自动重试追加操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-920"><see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1a336-921">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-921">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-922">如果此属性的值为 `true`，且 <xref:System.IO.Log.LogRecordSequence.Append%2A> 调用因为序列中没有足够的空间而失败，则记录序列将尝试释放空间，然后重试追加操作。</span><span class="sxs-lookup"><span data-stu-id="1a336-922">If the value of this property is `true`, and an <xref:System.IO.Log.LogRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a336-923">此示例演示如何使用 <xref:System.IO.Log.LogRecordSequence.RetryAppend%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="1a336-923">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.RetryAppend%2A> property.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#3)]
 [!code-vb[S_UELogRecordSequence#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-924">该属性是在序列已释放之后访问的。</span><span class="sxs-lookup"><span data-stu-id="1a336-924">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLastRecord">
      <MemberSignature Language="C#" Value="public void SetLastRecord (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLastRecord(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.SetLastRecord(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastRecord (sequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastRecord(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="member this.SetLastRecord : System.IO.Log.SequenceNumber -&gt; unit" Usage="logRecordSequence.SetLastRecord sequenceNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="1a336-925"><see cref="T:System.IO.Log.LogRecordSequence" /> 中的最后一个新序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-925">The new last sequence number in the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span>  
  
<span data-ttu-id="1a336-926">它指的应该是日志中的当前有效记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-926">This should refer to a current valid record   currently in the log.</span></span></param>
        <summary><span data-ttu-id="1a336-927">设置 <see cref="T:System.IO.Log.LogRecordSequence" /> 中的最后一条记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-927">Sets the last record in the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-928">指定的序列号必须大于基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-928">The specified sequence number must be larger than the base sequence number.</span></span>  
  
 <span data-ttu-id="1a336-929">此方法完成后，将无法访问序列号大于指定序列号的所有先前追加的记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-929">When this method completes, all records that had previously been appended with sequence numbers greater than the specified sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-930"><paramref name="sequenceNumber" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-930"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-931">活动日志新存档或现有存档的尾数据或基数据无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-931">A new or existing archive tail or base of the active log is invalid.</span></span>  
  
<span data-ttu-id="1a336-932">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-932">-or-</span></span> 
 <span data-ttu-id="1a336-933"><paramref name="sequenceNumber" /> 不在此序列的基序列号和最后一个序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-933"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-934">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-934">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-935">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-935">-or-</span></span>  
  
 <span data-ttu-id="1a336-936">已到达日志的末尾。</span><span class="sxs-lookup"><span data-stu-id="1a336-936">The end of the log has been reached.</span></span>  
  
 <span data-ttu-id="1a336-937">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1a336-937">-or-</span></span>  
  
 <span data-ttu-id="1a336-938">指定的日志文件格式或版本无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-938">The specified log file format or version is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-939">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-939">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-940">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-940">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-941">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-941">Access for the specified log sequence is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.LogRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberSignature Language="F#" Value="member this.TailPinned : EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " Usage="member this.TailPinned : System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.IO.Log.IRecordSequence.TailPinned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a336-942">发信号通知需要移动序列的尾数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-942">Signals the need to move the tail of the sequence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-943">可以在记录序列空间不足时激发此事件。</span><span class="sxs-lookup"><span data-stu-id="1a336-943">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="1a336-944">此事件激发时，序列的尾数据（即基序列号）将前移以释放空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-944">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 <span data-ttu-id="1a336-945">当记录序列决定必须释放空间时，可以借任何理由随时激发该事件。</span><span class="sxs-lookup"><span data-stu-id="1a336-945">The event can be fired at any time when the record sequence decides that it must free up space, for any reason.</span></span> <span data-ttu-id="1a336-946">例如，当 CLFS 策略引擎确定共享同一日志文件的两个日志客户端的结尾相距过远时，它可能会决定激发该事件。</span><span class="sxs-lookup"><span data-stu-id="1a336-946">For example, the CLFS policy engine may decide to fire the event when it determines that the tails of two log clients sharing the same log file are too far apart.</span></span> <span data-ttu-id="1a336-947">可以通过写入重新开始区域、截断日志及使用 <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> 方法清除空间来释放空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-947">Freeing space can be done by either writing restart areas, or truncating the log and using the <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> method to clear space.</span></span> <span data-ttu-id="1a336-948">“示例”部分的代码示例演示了第二种方式。</span><span class="sxs-lookup"><span data-stu-id="1a336-948">The code sample in the Example section demonstrates the second approach.</span></span>  
  
 <span data-ttu-id="1a336-949">还可以在 <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> 事件之外调用 <xref:System.IO.Log.LogRecordSequence.TailPinned> 方法以释放空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-949">You can also call the <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> method outside of the <xref:System.IO.Log.LogRecordSequence.TailPinned> event to free space.</span></span> <span data-ttu-id="1a336-950">重新开始区域类似于其他日志处理系统内的检查点。</span><span class="sxs-lookup"><span data-stu-id="1a336-950">A restart area is similar to a checkpoint in other log processing systems.</span></span> <span data-ttu-id="1a336-951">调用此方法则表示，在重新开始区域彻底完成以及可用于在以后追加记录之前，应用程序将考虑以前的所有记录。</span><span class="sxs-lookup"><span data-stu-id="1a336-951">Calling this method indicates that the application considers all prior records before the restart area as fully completed, and usable for future record appends.</span></span> <span data-ttu-id="1a336-952">与其他任何记录类似，此方法写入的记录需要使用日志中实际的可用空间才有效。</span><span class="sxs-lookup"><span data-stu-id="1a336-952">Similar to any other records, the record written by this method requires actual free space in the log to function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a336-953">此示例演示如何使用 <xref:System.IO.Log.LogRecordSequence.TailPinned> 事件。</span><span class="sxs-lookup"><span data-stu-id="1a336-953">This example shows how to use the <xref:System.IO.Log.LogRecordSequence.TailPinned> event.</span></span>  
  
```  
recordSequence.RetryAppend = true;  
recordSequence.TailPinned += new EventHandler<TailPinnedEventArgs>(HandleTailPinned);  
  
void HandleTailPinned(object sender, TailPinnedEventArgs tailPinnedEventArgs)  
{  
   // tailPinnedEventArgs.TargetSequenceNumber is the target   
   // sequence number to free up space to.    
   // However, this sequence number is not necessarily valid.  We have  
   // to use this sequence number as a starting point for finding a  
   // valid point within the log to advance toward. You need to  
   // identify a record with a sequence number equal to, or greater  
   // than TargetSequenceNumber; let's call this   
   // realTargetSequenceNumber. Once found, move the base  
  
   recordSequence.AdvanceBaseSequenceNumber(realTargetSequenceNumber);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1a336-954">将重新开始区域写入 <see cref="T:System.IO.Log.LogRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-954">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-955">重新开始区域用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="1a336-955">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="1a336-956">公用日志文件系统 (CLFS) 维护两个重新开始区域，以确保至少有一个有效区域总是可用。</span><span class="sxs-lookup"><span data-stu-id="1a336-956">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="1a336-957">需要恢复时，CLFS 读取自己的重新开始区域和最后一个检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-957">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="1a336-958">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="1a336-958">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="1a336-959">可以使用 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-959">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-960">将连接在一起并以记录形式追加的数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-960">An array segment that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="1a336-961">将重新开始区域写入 <see cref="T:System.IO.Log.LogRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-961">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span> <span data-ttu-id="1a336-962">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-962">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-963">写入的重新开始区域的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-963">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-964">重新开始区域用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="1a336-964">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="1a336-965">公用日志文件系统 (CLFS) 维护两个重新开始区域，以确保至少有一个有效区域总是可用。</span><span class="sxs-lookup"><span data-stu-id="1a336-965">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="1a336-966">需要恢复时，CLFS 读取自己的重新开始区域和最后一个检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-966">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="1a336-967">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="1a336-967">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="1a336-968">可以使用 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-968">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="1a336-969">字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-969">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-970">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-970">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-971">一个或多个自变量无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-971">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-972">写入重新开始区域时，发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-972">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-973">记录序列无法获得足够的可用空间来容纳新的重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-973">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-974">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-974">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-975">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-975">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-976">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-976">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-977">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-977">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-978">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-978">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="1a336-979">将重新开始区域写入 <see cref="T:System.IO.Log.LogRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-979">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span> <span data-ttu-id="1a336-980">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-980">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-981">写入的重新开始区域的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-981">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-982">重新开始区域用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="1a336-982">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="1a336-983">公用日志文件系统 (CLFS) 维护两个重新开始区域，以确保至少有一个有效区域总是可用。</span><span class="sxs-lookup"><span data-stu-id="1a336-983">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="1a336-984">需要恢复时，CLFS 读取自己的重新开始区域和最后一个检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-984">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="1a336-985">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="1a336-985">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="1a336-986">可以使用 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-986">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="1a336-987">字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-987">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-988">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-988">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-989">一个或多个自变量无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-989">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-990">写入重新开始区域时，发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-990">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-991">记录序列无法获得足够的可用空间来容纳新的重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-991">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-992">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-992">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-993">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-993">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-994">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-994">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-995">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-995">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-996">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-996">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="1a336-997">新的基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-997">The new base sequence number.</span></span> <span data-ttu-id="1a336-998">指定的序列号必须大于或等于当前基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-998">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="1a336-999">将重新开始区域写入 <see cref="T:System.IO.Log.LogRecordSequence" /> 并更新基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-999">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> and updates the base sequence number.</span></span> <span data-ttu-id="1a336-1000">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-1000">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-1001">写入的重新开始区域的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1001">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-1002">重新开始区域用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="1a336-1002">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="1a336-1003">公用日志文件系统 (CLFS) 维护两个重新开始区域，以确保至少有一个有效区域总是可用。</span><span class="sxs-lookup"><span data-stu-id="1a336-1003">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="1a336-1004">需要恢复时，CLFS 读取自己的重新开始区域和最后一个检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-1004">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="1a336-1005">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="1a336-1005">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="1a336-1006">可以使用 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-1006">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="1a336-1007">写入重新开始区域时，字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-1007">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-1008">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-1008">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="1a336-1009">此方法成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="1a336-1009">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="1a336-1010">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-1010">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="1a336-1011">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-1011">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="1a336-1012">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-1012">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-1013">一个或多个自变量无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-1013">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-1014">写入重新开始区域时，发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-1014">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-1015">记录序列无法获得足够的可用空间来容纳新的重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-1015">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-1016">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-1016">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-1017">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-1017">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="1a336-1018">新的基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1018">The new base sequence number.</span></span> <span data-ttu-id="1a336-1019">指定的序列号必须大于或等于当前基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1019">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="1a336-1020">将重新开始区域写入 <see cref="T:System.IO.Log.LogRecordSequence" /> 并更新基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1020">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> and updates the base sequence number.</span></span> <span data-ttu-id="1a336-1021">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-1021">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-1022">写入的重新开始区域的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1022">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-1023">重新开始区域用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="1a336-1023">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="1a336-1024">公用日志文件系统 (CLFS) 维护两个重新开始区域，以确保至少有一个有效区域总是可用。</span><span class="sxs-lookup"><span data-stu-id="1a336-1024">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="1a336-1025">需要恢复时，CLFS 读取自己的重新开始区域和最后一个检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-1025">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="1a336-1026">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="1a336-1026">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="1a336-1027">可以使用 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-1027">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="1a336-1028">写入重新开始区域时，字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-1028">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-1029">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-1029">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="1a336-1030">此方法成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="1a336-1030">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="1a336-1031">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-1031">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="1a336-1032">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-1032">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="1a336-1033">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-1033">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-1034">一个或多个自变量无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-1034">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-1035">写入重新开始区域时，发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-1035">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-1036">记录序列无法获得足够的可用空间来容纳新的重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-1036">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-1037">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-1037">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-1038">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-1038">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="1a336-1039">新的基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1039">The new base sequence number.</span></span> <span data-ttu-id="1a336-1040">指定的序列号必须大于或等于当前基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1040">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservations"><span data-ttu-id="1a336-1041">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此重新开始区域的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-1041">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="1a336-1042">使用预留将重新开始区域写入 <see cref="T:System.IO.Log.LogRecordSequence" /> 并更新基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1042">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> using a reservation, and updates the base sequence number.</span></span> <span data-ttu-id="1a336-1043">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-1043">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-1044">写入的重新开始区域的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1044">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-1045">重新开始区域用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="1a336-1045">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="1a336-1046">公用日志文件系统 (CLFS) 维护两个重新开始区域，以确保至少有一个有效区域总是可用。</span><span class="sxs-lookup"><span data-stu-id="1a336-1046">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="1a336-1047">需要恢复时，CLFS 读取自己的重新开始区域和最后一个检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-1047">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="1a336-1048">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="1a336-1048">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="1a336-1049">可以使用 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-1049">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="1a336-1050">写入重新开始区域时，字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-1050">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-1051">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-1051">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="1a336-1052">如果指定了预留，写入的重新开始区域将使用集合中包含的预留来占用先前已预留的空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-1052">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="1a336-1053">如果该方法成功，它将占用能容纳数据的最小预留，而该预留将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="1a336-1053">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="1a336-1054">此方法成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="1a336-1054">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="1a336-1055">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-1055">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="1a336-1056">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-1056">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="1a336-1057">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-1057">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-1058">一个或多个自变量无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-1058">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-1059">写入重新开始区域时，发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1a336-1059">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-1060">记录序列无法获得足够的可用空间来容纳新的重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-1060">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-1061">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-1061">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservationCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservationCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservationCollection As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservationCollection);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="logRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservationCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1a336-1062">将连接在一起并以记录形式追加的字节数组段的列表。</span><span class="sxs-lookup"><span data-stu-id="1a336-1062">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="1a336-1063">新的基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1063">The new base sequence number.</span></span> <span data-ttu-id="1a336-1064">指定的序列号必须大于或等于当前基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1064">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="1a336-1065">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此重新开始区域的预留。</span><span class="sxs-lookup"><span data-stu-id="1a336-1065">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="1a336-1066">使用预留将重新开始区域写入 <see cref="T:System.IO.Log.LogRecordSequence" /> 并更新基序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1066">Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> using a reservation, and updates the base sequence number.</span></span> <span data-ttu-id="1a336-1067">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="1a336-1067">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="1a336-1068">写入的重新开始区域的序列号。</span><span class="sxs-lookup"><span data-stu-id="1a336-1068">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a336-1069">重新开始区域用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="1a336-1069">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="1a336-1070">公用日志文件系统 (CLFS) 维护两个重新开始区域，以确保至少有一个有效区域总是可用。</span><span class="sxs-lookup"><span data-stu-id="1a336-1070">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="1a336-1071">需要恢复时，CLFS 读取自己的重新开始区域和最后一个检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="1a336-1071">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="1a336-1072">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="1a336-1072">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="1a336-1073">可以使用 <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="1a336-1073">A restart area can be read using the <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="1a336-1074">写入重新开始区域时，字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="1a336-1074">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="1a336-1075">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="1a336-1075">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="1a336-1076">如果指定了预留，写入的重新开始区域将使用集合中包含的预留来占用先前已预留的空间。</span><span class="sxs-lookup"><span data-stu-id="1a336-1076">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="1a336-1077">如果该方法成功，它将占用能容纳数据的最小预留，而该预留将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="1a336-1077">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="1a336-1078">此方法成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="1a336-1078">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="1a336-1079">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-1079">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="1a336-1080">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-1080">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="1a336-1081">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="1a336-1081">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1a336-1082"><paramref name="newBaseSeqNum" /> 对此序列无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-1082"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span>  
  
<span data-ttu-id="1a336-1083">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-1083">-or-</span></span> 
<span data-ttu-id="1a336-1084">指定的日志枚举开始序列号无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-1084">The specified log enumeration start sequence number is invalid.</span></span>  
  
<span data-ttu-id="1a336-1085">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-1085">-or-</span></span> 
 <span data-ttu-id="1a336-1086">无法追加 <paramref name="data" />，原因是它比最大记录大小要大。</span><span class="sxs-lookup"><span data-stu-id="1a336-1086"><paramref name="data" /> cannot be appended because it is larger than the maximum record size.</span></span>  
  
<span data-ttu-id="1a336-1087">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-1087">-or-</span></span> 
 <span data-ttu-id="1a336-1088"><paramref name="reservationCollection" /> 不是由此记录序列创建的。</span><span class="sxs-lookup"><span data-stu-id="1a336-1088"><paramref name="reservationCollection" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1a336-1089">一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1a336-1089">One or more of the parameters is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1a336-1090">活动日志新存档或现有存档的尾数据或基数据无效。</span><span class="sxs-lookup"><span data-stu-id="1a336-1090">A new or existing archive tail or base of the active log is invalid.</span></span>  
  
<span data-ttu-id="1a336-1091">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-1091">-or-</span></span> 
 <span data-ttu-id="1a336-1092"><paramref name="newBaseSeqNum" /> 不在此序列的基序列号和最后一个序列号之间。</span><span class="sxs-lookup"><span data-stu-id="1a336-1092"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1a336-1093">由于出现意外的 I/O 异常，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-1093">The request could not be performed because of an unexpected I/O exception.</span></span>  
  
 <span data-ttu-id="1a336-1094">-或-</span><span class="sxs-lookup"><span data-stu-id="1a336-1094">-or-</span></span>  
  
 <span data-ttu-id="1a336-1095">由于出现 I/O 设备错误，因此无法执行该请求。</span><span class="sxs-lookup"><span data-stu-id="1a336-1095">The request could not be performed because of an I/O device error.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1a336-1096">该方法是在序列已释放之后调用的。</span><span class="sxs-lookup"><span data-stu-id="1a336-1096">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1a336-1097">没有足够的内存来继续执行该程序。</span><span class="sxs-lookup"><span data-stu-id="1a336-1097">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1a336-1098">操作系统拒绝了对指定的日志序列的访问。</span><span class="sxs-lookup"><span data-stu-id="1a336-1098">Access for the specified log sequence is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="1a336-1099">记录序列已满。</span><span class="sxs-lookup"><span data-stu-id="1a336-1099">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
