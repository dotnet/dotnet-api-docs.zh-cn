<Type Name="LogRecord" FullName="System.IO.Log.LogRecord">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bda4d58a5f903b31cb7e1c7859beee0fc28e88bd" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69356770" /></Metadata><TypeSignature Language="C#" Value="public abstract class LogRecord : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LogRecord extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogRecord" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LogRecord&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogRecord abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type LogRecord = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c33de-101">表示已追加到序列的日志记录。</span><span class="sxs-lookup"><span data-stu-id="c33de-101">Represents a log record that has been appended to a sequence.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LogRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecord.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LogRecord();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c33de-102">初始化 <see cref="T:System.IO.Log.LogRecord" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c33de-102">Initializes a new instance of the <see cref="T:System.IO.Log.LogRecord" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Data" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecord.Data" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Data As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::IO::Stream ^ Data { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.IO.Stream" Usage="System.IO.Log.LogRecord.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c33de-103">在派生类中重写时，获取包含记录数据的流。</span><span class="sxs-lookup"><span data-stu-id="c33de-103">When overridden in a derived class, gets a stream that contains the record data.</span></span></summary>
        <value><span data-ttu-id="c33de-104">包含记录数据的流。</span><span class="sxs-lookup"><span data-stu-id="c33de-104">A stream that contains the record data.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c33de-105"><see cref="T:System.IO.Log.LogRecord" /> 已释放。</span><span class="sxs-lookup"><span data-stu-id="c33de-105">The <see cref="T:System.IO.Log.LogRecord" /> has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogRecord.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="logRecord.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c33de-106">释放由 <see cref="T:System.IO.Log.LogRecord" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="c33de-106">Releases all resources used by the <see cref="T:System.IO.Log.LogRecord" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c33de-107">使用完 <xref:System.IO.Log.LogRecord> 实例后，应调用此方法。</span><span class="sxs-lookup"><span data-stu-id="c33de-107">You should call this method when you finish using the <xref:System.IO.Log.LogRecord> instance.</span></span> <span data-ttu-id="c33de-108"><xref:System.IO.Log.LogRecord.Dispose%2A> 方法使 <xref:System.IO.Log.LogRecord> 实例处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="c33de-108">The <xref:System.IO.Log.LogRecord.Dispose%2A> method leaves the <xref:System.IO.Log.LogRecord> instance in an unusable state.</span></span> <span data-ttu-id="c33de-109">调用此方法之后，必须释放对 <xref:System.IO.Log.LogRecord> 实例的所有引用，这样垃圾回收器才能回收 <xref:System.IO.Log.LogRecord> 实例占用的内存。</span><span class="sxs-lookup"><span data-stu-id="c33de-109">After calling this method, you must release all references to the <xref:System.IO.Log.LogRecord> instance, so that the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogRecord> instance was occupying.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c33de-110">每次释放对 <xref:System.IO.Log.LogRecord.Dispose%2A> 实例的最后一个引用前，均应调用 <xref:System.IO.Log.LogRecord>。</span><span class="sxs-lookup"><span data-stu-id="c33de-110">Always call <xref:System.IO.Log.LogRecord.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogRecord> instance.</span></span> <span data-ttu-id="c33de-111">否则，在垃圾回收器调用 <xref:System.IO.Log.LogRecord> 实例的 `Finalize` 方法之前，无法释放正在使用的资源。</span><span class="sxs-lookup"><span data-stu-id="c33de-111">Otherwise, the resources it is using cannot be freed until the garbage collector calls the <xref:System.IO.Log.LogRecord> instance's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public abstract System.IO.Log.SequenceNumber Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber Previous" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecord.Previous" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Previous As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::IO::Log::SequenceNumber Previous { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.Previous : System.IO.Log.SequenceNumber" Usage="System.IO.Log.LogRecord.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c33de-112">在派生类中重写时，获取上一记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="c33de-112">When overridden in a derived class, gets the sequence number of the previous record.</span></span></summary>
        <value><span data-ttu-id="c33de-113">上一记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="c33de-113">The sequence number of the previous record.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c33de-114">此属性的值是序列号，该序列号用作 `previousUndoRecord` 方法中的 <xref:System.IO.Log.IRecordSequence.Append%2A> 参数。</span><span class="sxs-lookup"><span data-stu-id="c33de-114">The value of this property is the sequence number that was provided as the `previousUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method.</span></span> <span data-ttu-id="c33de-115">除了在枚举中使用的情况外，记录序列将此序列号视为不透明。</span><span class="sxs-lookup"><span data-stu-id="c33de-115">Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceNumber">
      <MemberSignature Language="C#" Value="public abstract System.IO.Log.SequenceNumber SequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber SequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecord.SequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::IO::Log::SequenceNumber SequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.SequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.LogRecord.SequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c33de-116">在派生类中重写时，获取此记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="c33de-116">When overridden in a derived class, gets the sequence number of this record.</span></span></summary>
        <value><span data-ttu-id="c33de-117">此记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="c33de-117">The sequence number of this record.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public abstract System.IO.Log.SequenceNumber User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber User" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogRecord.User" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property User As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::IO::Log::SequenceNumber User { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.IO.Log.SequenceNumber" Usage="System.IO.Log.LogRecord.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c33de-118">在派生类中重写时，获取下一记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="c33de-118">When overridden in a derived class, gets the sequence number of the next record.</span></span></summary>
        <value><span data-ttu-id="c33de-119">用户指定的链中下一记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="c33de-119">The sequence number of the next record in the user-specified chain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c33de-120">此属性的值是序列号，该序列号用作 `nextUndoRecord` 方法中的 <xref:System.IO.Log.IRecordSequence.Append%2A> 参数。</span><span class="sxs-lookup"><span data-stu-id="c33de-120">The value of this property is the sequence number that was provided as the `nextUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method.</span></span> <span data-ttu-id="c33de-121">除了在枚举中使用的情况外，记录序列将此序列号视为不透明。</span><span class="sxs-lookup"><span data-stu-id="c33de-121">Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
