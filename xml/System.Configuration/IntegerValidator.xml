<Type Name="IntegerValidator" FullName="System.Configuration.IntegerValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd63a556e870ce072bd8f216158b7274378703e1" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82478868" /></Metadata><TypeSignature Language="C#" Value="public class IntegerValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntegerValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IntegerValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class IntegerValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntegerValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type IntegerValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="78be8-101">对 <see cref="T:System.Int32" /> 值进行验证。</span><span class="sxs-lookup"><span data-stu-id="78be8-101">Provides validation of an <see cref="T:System.Int32" /> value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be8-102"><xref:System.Configuration.IntegerValidator>类用于确保整数满足特定的条件。</span><span class="sxs-lookup"><span data-stu-id="78be8-102">The <xref:System.Configuration.IntegerValidator> class is used to ensure that an integer meets specific criteria.</span></span> <span data-ttu-id="78be8-103">在创建类的实例时，将建立用于验证的条件 <xref:System.Configuration.IntegerValidator> 。</span><span class="sxs-lookup"><span data-stu-id="78be8-103">The criteria for validation are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created.</span></span> <span data-ttu-id="78be8-104"><xref:System.Configuration.IntegerValidator.%23ctor%2A>具有两个参数的构造函数可确保所验证的整数符合最小值和最大值。</span><span class="sxs-lookup"><span data-stu-id="78be8-104">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value.</span></span> <span data-ttu-id="78be8-105"><xref:System.Configuration.IntegerValidator.%23ctor%2A>带有三个参数的构造函数同时检查最小值和最大 <xref:System.Int32> 值，以及要验证的值是否在指定的范围内。</span><span class="sxs-lookup"><span data-stu-id="78be8-105">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range.</span></span> <span data-ttu-id="78be8-106"><xref:System.Configuration.IntegerValidator.%23ctor%2A>具有四个参数的构造函数检查前面的三个参数，并检查该值是否与 <xref:System.Int32> 特定的解析相等。</span><span class="sxs-lookup"><span data-stu-id="78be8-106">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.</span></span>  
  
 <span data-ttu-id="78be8-107"><xref:System.Configuration.IntegerValidator.CanValidate%2A>方法确定所验证的对象类型是否与预期的类型匹配。</span><span class="sxs-lookup"><span data-stu-id="78be8-107">The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type.</span></span> <span data-ttu-id="78be8-108">要验证的对象作为方法的参数进行传递 <xref:System.Configuration.IntegerValidator.Validate%2A> 。</span><span class="sxs-lookup"><span data-stu-id="78be8-108">The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78be8-109">下面的代码示例演示如何使用 <xref:System.Configuration.IntegerValidator> 类型。</span><span class="sxs-lookup"><span data-stu-id="78be8-109">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator> type.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#1)]
 [!code-vb[System.Configuration.IntegerValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78be8-110">初始化 <see cref="T:System.Configuration.IntegerValidator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="78be8-110">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="78be8-111">指定最小值的 <see cref="T:System.Int32" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="78be8-111">An <see cref="T:System.Int32" /> object that specifies the minimum value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="78be8-112">指定最大值的 <see cref="T:System.Int32" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="78be8-112">An <see cref="T:System.Int32" /> object that specifies the maximum value.</span></span></param>
        <summary><span data-ttu-id="78be8-113">初始化 <see cref="T:System.Configuration.IntegerValidator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="78be8-113">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be8-114">此 <xref:System.Configuration.IntegerValidator.%23ctor%2A> 构造函数可确保所验证的整数遵循最小和最大长度。</span><span class="sxs-lookup"><span data-stu-id="78be8-114">This <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor ensures that the integer being verified adheres to both a minimum and a maximum length.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer, rangeIsExclusive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int * bool -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue, rangeIsExclusive)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="78be8-115">指定最小值的 <see cref="T:System.Int32" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="78be8-115">An <see cref="T:System.Int32" /> object that specifies the minimum value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="78be8-116">指定最大值的 <see cref="T:System.Int32" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="78be8-116">An <see cref="T:System.Int32" /> object that specifies the maximum value.</span></span></param>
        <param name="rangeIsExclusive"><span data-ttu-id="78be8-117">若指定验证范围是独占的，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="78be8-117"><see langword="true" /> to specify that the validation range is exclusive.</span></span> <span data-ttu-id="78be8-118">非独占意味着要验证的值必须在指定范围内；独占意味着要验证的值必须小于最小值或大于最大值。</span><span class="sxs-lookup"><span data-stu-id="78be8-118">Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.</span></span></param>
        <summary><span data-ttu-id="78be8-119">初始化 <see cref="T:System.Configuration.IntegerValidator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="78be8-119">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be8-120">创建类的实例时 <xref:System.Configuration.IntegerValidator> ，此 <xref:System.Configuration.IntegerValidator.%23ctor%2A> 构造函数同时检查最小值和最大 <xref:System.Int32> 值，以及验证范围是否为排他。</span><span class="sxs-lookup"><span data-stu-id="78be8-120">When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive.</span></span> <span data-ttu-id="78be8-121">当 `rangeIsExclusive` 参数设置为时 `true` ， <xref:System.Int32> 值不得介于 `minValue` 和 `maxValue` 参数值之间。</span><span class="sxs-lookup"><span data-stu-id="78be8-121">When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78be8-122">下面的代码示例演示如何使用 <xref:System.Configuration.IntegerValidator.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="78be8-122">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor.</span></span> <span data-ttu-id="78be8-123">此代码示例是为类提供的更大示例的一部分 <xref:System.Configuration.IntegerValidator> 。</span><span class="sxs-lookup"><span data-stu-id="78be8-123">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#2)]
 [!code-vb[System.Configuration.IntegerValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive, int32 resolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer, rangeIsExclusive As Boolean, resolution As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue, bool rangeIsExclusive, int resolution);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int * bool * int -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue, rangeIsExclusive, resolution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
        <Parameter Name="resolution" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="78be8-124">一个 <see cref="T:System.Int32" /> 对象，指定整数值的最小长度。</span><span class="sxs-lookup"><span data-stu-id="78be8-124">An <see cref="T:System.Int32" /> object that specifies the minimum length of the integer value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="78be8-125">一个 <see cref="T:System.Int32" /> 对象，指定整数值的最大长度。</span><span class="sxs-lookup"><span data-stu-id="78be8-125">An <see cref="T:System.Int32" /> object that specifies the maximum length of the integer value.</span></span></param>
        <param name="rangeIsExclusive"><span data-ttu-id="78be8-126">一个 <see cref="T:System.Boolean" /> 值，指定验证范围是否独占。</span><span class="sxs-lookup"><span data-stu-id="78be8-126">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</span></span></param>
        <param name="resolution"><span data-ttu-id="78be8-127">一个 <see cref="T:System.Int32" /> 对象，指定必须匹配的值。</span><span class="sxs-lookup"><span data-stu-id="78be8-127">An <see cref="T:System.Int32" /> object that specifies a value that must be matched.</span></span></param>
        <summary><span data-ttu-id="78be8-128">初始化 <see cref="T:System.Configuration.IntegerValidator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="78be8-128">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be8-129"><xref:System.Int32>要验证的值必须等于 `resolution` 值才能通过验证。</span><span class="sxs-lookup"><span data-stu-id="78be8-129">The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="78be8-130"><paramref name="resolution" /> 小于 <see langword="0" />。</span><span class="sxs-lookup"><span data-stu-id="78be8-130"><paramref name="resolution" /> is less than <see langword="0" />.</span></span>  
  
<span data-ttu-id="78be8-131">- 或 -</span><span class="sxs-lookup"><span data-stu-id="78be8-131">-or-</span></span> 
 <span data-ttu-id="78be8-132"><paramref name="minValue" /> 大于 <paramref name="maxValue" />。</span><span class="sxs-lookup"><span data-stu-id="78be8-132"><paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.CanValidate(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanValidate (type As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="integerValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="78be8-133">对象的类型。</span><span class="sxs-lookup"><span data-stu-id="78be8-133">The type of the object.</span></span></param>
        <summary><span data-ttu-id="78be8-134">确定是否可以验证该对象的类型。</span><span class="sxs-lookup"><span data-stu-id="78be8-134">Determines whether the type of the object can be validated.</span></span></summary>
        <returns><span data-ttu-id="78be8-135">如果 <paramref name="type" /> 参数与 <see cref="T:System.Int32" /> 值相匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78be8-135"><see langword="true" /> if the <paramref name="type" /> parameter matches an <see cref="T:System.Int32" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="78be8-136">下面的代码示例演示如何使用 <xref:System.Configuration.IntegerValidator.CanValidate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="78be8-136">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.CanValidate%2A> method.</span></span> <span data-ttu-id="78be8-137">此代码示例是为类提供的更大示例的一部分 <xref:System.Configuration.IntegerValidator> 。</span><span class="sxs-lookup"><span data-stu-id="78be8-137">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#3)]
 [!code-vb[System.Configuration.IntegerValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="integerValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="78be8-138">要验证的值。</span><span class="sxs-lookup"><span data-stu-id="78be8-138">The value to be validated.</span></span></param>
        <summary><span data-ttu-id="78be8-139">确定对象的值是否有效。</span><span class="sxs-lookup"><span data-stu-id="78be8-139">Determines whether the value of an object is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78be8-140"><xref:System.Configuration.IntegerValidator>对象包含验证整数对象所需的规则。</span><span class="sxs-lookup"><span data-stu-id="78be8-140">An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object.</span></span> <span data-ttu-id="78be8-141">创建类的实例时，将建立规则 <xref:System.Configuration.IntegerValidator> 。</span><span class="sxs-lookup"><span data-stu-id="78be8-141">The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created.</span></span> <span data-ttu-id="78be8-142">要验证的整数对象作为方法的参数进行传递 <xref:System.Configuration.IntegerValidator.Validate%2A> 。</span><span class="sxs-lookup"><span data-stu-id="78be8-142">The integer object to validate is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78be8-143">下面的代码示例演示如何使用 <xref:System.Configuration.IntegerValidator.Validate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="78be8-143">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span> <span data-ttu-id="78be8-144">此代码示例是为类提供的更大示例的一部分 <xref:System.Configuration.IntegerValidator> 。</span><span class="sxs-lookup"><span data-stu-id="78be8-144">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#4)]
 [!code-vb[System.Configuration.IntegerValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
      </Docs>
    </Member>
  </Members>
</Type>
