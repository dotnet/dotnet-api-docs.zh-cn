<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6edcb865b7c182393a1575d9befd87e1d3307ca" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83959649" /></Metadata><TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ConfigurationManager = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed ConfigurationManager extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f5b4b-101">提供对客户端应用程序配置文件的访问。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-101">Provides access to configuration files for client applications.</span></span> <span data-ttu-id="f5b4b-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5b4b-103"><xref:System.Configuration.ConfigurationManager>类使你能够访问计算机、应用程序和用户配置信息。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="f5b4b-104">此类替换 <xref:System.Configuration.ConfigurationSettings> 已弃用的类。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="f5b4b-105">对于 web 应用程序，请使用 <xref:System.Web.Configuration.WebConfigurationManager> 类。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="f5b4b-106">若要使用 <xref:System.Configuration.ConfigurationManager> 类，你的项目必须引用 `System.Configuration` 程序集。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="f5b4b-107">默认情况下，某些项目模板（如控制台应用程序）不引用此程序集，因此你必须手动引用它。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5b4b-108">应用程序配置文件的名称和位置取决于应用程序的主机。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="f5b4b-109">有关详细信息，请参阅[使用配置文件配置应用](/dotnet/framework/configure-apps/)。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-109">For more information, see [Configuring Apps by using Configuration Files](/dotnet/framework/configure-apps/).</span></span>  
  
 <span data-ttu-id="f5b4b-110">您可以使用内置 <xref:System.Configuration> 类型，也可以从这些类型派生来处理配置信息。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="f5b4b-111">通过使用这些类型，你可以直接使用配置信息，并且可以扩展配置文件以包含自定义信息。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="f5b4b-112"><xref:System.Configuration.ConfigurationManager>类包括允许您执行以下任务的成员：</span><span class="sxs-lookup"><span data-stu-id="f5b4b-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="f5b4b-113">读取配置文件中的部分。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-113">Read a section from a configuration file.</span></span> <span data-ttu-id="f5b4b-114">若要访问配置信息，请调用 <xref:System.Configuration.ConfigurationManager.GetSection%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="f5b4b-115">对于某些节（如 `appSettings` 和 `connectionStrings` ），请使用 <xref:System.Configuration.ConfigurationManager.AppSettings%2A> 和 <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> 类。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="f5b4b-116">这些成员执行只读操作，使用配置的单个缓存实例，并且可以识别多线程。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="f5b4b-117">作为一个整体来读取和写入配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="f5b4b-118">应用程序可以在本地或远程读取和写入任意级别的配置设置。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="f5b4b-119">使用类提供的方法之一 <xref:System.Configuration.ConfigurationManager> 来打开配置文件，如 SampleApp.exe.config。这些方法返回一个 <xref:System.Configuration.Configuration> 对象，该对象又公开了可用于处理关联配置文件的方法和属性。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="f5b4b-120">这些方法执行读取或写入操作，并在每次写入文件时创建配置数据。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="f5b4b-121">支持配置任务。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-121">Support configuration tasks.</span></span> <span data-ttu-id="f5b4b-122">以下类型用于支持各种配置任务：</span><span class="sxs-lookup"><span data-stu-id="f5b4b-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="f5b4b-123">除了使用现有配置信息以外，还可以通过扩展内置配置类型（如 <xref:System.Configuration.ConfigurationElement> 、 <xref:System.Configuration.ConfigurationElementCollection> 、 <xref:System.Configuration.ConfigurationProperty> 和类）来创建和使用自定义配置元素 <xref:System.Configuration.ConfigurationSection> 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="f5b4b-124">有关如何以编程方式扩展内置配置类型的示例，请参阅 <xref:System.Configuration.ConfigurationSection> 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="f5b4b-125">有关如何扩展使用基于属性的模型的内置配置类型的示例，请参阅 <xref:System.Configuration.ConfigurationElement> 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5b4b-126">第一个示例显示一个简单的控制台应用程序，它读取应用程序设置、添加新设置并更新现有设置。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="f5b4b-127">前面的示例假定你的项目具有如下所示的 App.config 文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="f5b4b-128">下面的示例演示如何使用连接字符串从数据库中读取数据。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="f5b4b-129">前面的示例假定你的项目具有如下所示的 App.config。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="f5b4b-130"><see cref="T:System.Configuration.Configuration" />类可实现对编辑配置文件的编程访问。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-130">The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files.</span></span> <span data-ttu-id="f5b4b-131">使用由提供的打开方法之一 <see cref="T:System.Configuration.ConfigurationManager" /> 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-131">You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />.</span></span> <span data-ttu-id="f5b4b-132">这些方法返回 <see cref="T:System.Configuration.Configuration" /> 对象，该对象反过来提供处理基础配置文件所需的方法和属性。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-132">These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files.</span></span> <span data-ttu-id="f5b4b-133">您可以访问这些文件以进行读取或写入。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-133">You can access these files for reading or writing.</span></span>  
  
<span data-ttu-id="f5b4b-134">若要读取配置文件，请使用 <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> 或 <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> 来读取配置信息。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-134">To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information.</span></span> <span data-ttu-id="f5b4b-135">读取操作必须具有以下权限：</span><span class="sxs-lookup"><span data-stu-id="f5b4b-135">The user or process that reads must have the following permissions:</span></span> 
<span data-ttu-id="f5b4b-136">-对当前配置层次结构级别的配置文件的读取权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-136">-   Read permission on the configuration file at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="f5b4b-137">-对所有父配置文件的读取权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-137">-   Read permissions on all the parent configuration files.</span></span>  
  
<span data-ttu-id="f5b4b-138">如果你的应用程序需要对自己的配置进行只读访问，我们建议你使用 <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-138">If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method.</span></span> <span data-ttu-id="f5b4b-139">此方法提供对当前应用程序的缓存配置值的访问，该配置值具有比类更好的性能 <see cref="T:System.Configuration.Configuration" /> 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-139">This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.</span></span>  
  
<span data-ttu-id="f5b4b-140">若要写入配置文件，请使用其中一种 <see cref="Overload:System.Configuration.Configuration.Save" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-140">To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods.</span></span> <span data-ttu-id="f5b4b-141">写入操作的用户或进程必须具有以下权限：</span><span class="sxs-lookup"><span data-stu-id="f5b4b-141">The user or process that writes must have the following permissions:</span></span> 
<span data-ttu-id="f5b4b-142">-对当前配置层次结构级别的配置文件和目录具有写入权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-142">-   Write permission on the configuration file and directory at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="f5b4b-143">-对所有配置文件的读取权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-143">-   Read permissions on all the configuration files.</span></span></para></block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
    <related type="Article" href="/dotnet/framework/configure-apps/"><span data-ttu-id="f5b4b-144">配置文件</span><span class="sxs-lookup"><span data-stu-id="f5b4b-144">Configuration Files</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppSettings : System.Collections.Specialized.NameValueCollection" Usage="System.Configuration.ConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5b4b-145">获取当前应用程序默认配置的 <see cref="T:System.Configuration.AppSettingsSection" /> 数据。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-145">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="f5b4b-146">一个 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象，该对象包含 <see cref="T:System.Configuration.AppSettingsSection" /> 当前应用程序默认配置的对象的内容。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-146">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5b4b-147">一个 <xref:System.Configuration.AppSettingsSection> 对象，它包含配置文件的部分的内容 `appSettings` 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-147">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5b4b-148">第一个示例显示一个简单的控制台应用程序，它读取应用程序设置、添加新设置并更新现有设置。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-148">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="f5b4b-149">前面的示例假定你的项目具有如下所示的 App.config 文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-149">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="f5b4b-150">无法检索具有应用程序设置数据的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-150">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span></span></exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionStrings : System.Configuration.ConnectionStringSettingsCollection" Usage="System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5b4b-151">获取当前应用程序默认配置的 <see cref="T:System.Configuration.ConnectionStringsSection" /> 数据。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-151">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="f5b4b-152">一个 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 对象，该对象包含 <see cref="T:System.Configuration.ConnectionStringsSection" /> 当前应用程序默认配置的对象的内容。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-152">A <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5b4b-153">一个 <xref:System.Configuration.ConnectionStringsSection> 对象，它包含配置文件的部分的内容 `connectionStrings` 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-153">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5b4b-154">下面的示例演示如何使用连接字符串从数据库中读取数据。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-154">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="f5b4b-155">前面的示例假定你的项目具有如下所示的 App.config。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-155">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="f5b4b-156">检索不到 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-156">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span></span></exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetSection : string -&gt; obj" Usage="System.Configuration.ConfigurationManager.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="f5b4b-157">配置节的路径和名称。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-157">The configuration section path and name.</span></span> <span data-ttu-id="f5b4b-158">节点名称是通过正斜杠分隔开的，例如“system.net/mailSettings/smtp”。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-158">Node names are separated by forward slashes, for example "system.net/mailSettings/smtp".</span></span></param>
        <summary><span data-ttu-id="f5b4b-159">检索当前应用程序默认配置的指定配置节。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-159">Retrieves a specified configuration section for the current application's default configuration.</span></span></summary>
        <returns><span data-ttu-id="f5b4b-160">指定的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象，如果该节不存在，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-160">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5b4b-161">对于客户端应用程序，此方法检索通过合并应用程序配置文件、本地用户配置文件和漫游配置文件获得的配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-161">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="f5b4b-162"><xref:System.Configuration.ConfigurationManager.GetSection%2A>方法访问它无法更改的运行时配置信息。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-162">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="f5b4b-163">若要更改配置，请 <xref:System.Configuration.Configuration.GetSection%2A> 在使用以下 Open 方法之一获取的配置文件上使用方法：</span><span class="sxs-lookup"><span data-stu-id="f5b4b-163">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="f5b4b-164">下面的示例显示如何使用 <xref:System.Configuration.ConfigurationManager.GetSection%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-164">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="f5b4b-165">该示例是为类提供的更大示例的一部分 <xref:System.Configuration.ConfigurationManager> 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-165">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="f5b4b-166">无法加载配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-166">A configuration file could not be loaded.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f5b4b-167">必须将返回值强制转换为所需的配置类型。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-167">You must cast the return value to the expected configuration type.</span></span> <span data-ttu-id="f5b4b-168">若要避免可能的强制转换异常，应在 Visual Basic 中使用条件转换运算，如 <see langword="as" /> c # 中的运算符或[TryCast](/dotnet/visual-basic/language-reference/operators/trycast-operator)函数。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-168">To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the [TryCast](/dotnet/visual-basic/language-reference/operators/trycast-operator) function in Visual Basic.</span></span></para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f5b4b-169">将指定的客户端配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-169">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration userLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel"><span data-ttu-id="f5b4b-170">要打开配置的 <see cref="T:System.Configuration.ConfigurationUserLevel" />。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-170">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="f5b4b-171">将当前应用程序的配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-171">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="f5b4b-172"><see cref="T:System.Configuration.Configuration" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-172">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5b4b-173">客户端应用程序使用适用于所有用户的全局配置、适用于单个用户的单独配置，以及适用于漫游用户的配置。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-173">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="f5b4b-174">`userLevel`参数通过指示配置文件是否没有用户级别（配置文件与应用程序在同一目录中）或具有每用户级别（配置文件位于用户级别确定的应用程序设置路径中）来确定正在打开的配置文件的位置。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-174">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="f5b4b-175">通过传递以下值之一来指定要获取的配置 `userLevel` ：</span><span class="sxs-lookup"><span data-stu-id="f5b4b-175">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="f5b4b-176">若要获取 <xref:System.Configuration.Configuration> 应用于所有用户的对象，请将设置 `userLevel` 为 <xref:System.Configuration.ConfigurationUserLevel.None> 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-176">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="f5b4b-177">若要获取 <xref:System.Configuration.Configuration> 应用于当前用户的本地对象，请将设置 `userLevel` 为 <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal> 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-177">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="f5b4b-178">若要获取 <xref:System.Configuration.Configuration> 应用于当前用户的漫游对象，请将设置 `userLevel` 为 <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming> 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-178">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="f5b4b-179">若要获取 <xref:System.Configuration.Configuration> 资源的对象，你的代码必须对它继承其设置的所有配置文件具有读取权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-179">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="f5b4b-180">若要更新配置文件，你的代码还必须对配置文件及其所在的目录具有写入权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-180">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5b4b-181">下面的代码示例说明如何使用 <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-181">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="f5b4b-182">无法加载配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-182">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration exePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath"><span data-ttu-id="f5b4b-183">可执行 (exe) 文件的路径。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-183">The path of the executable (exe) file.</span></span></param>
        <summary><span data-ttu-id="f5b4b-184">将指定的客户端配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-184">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="f5b4b-185"><see cref="T:System.Configuration.Configuration" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-185">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5b4b-186">客户端应用程序使用适用于所有用户的全局配置、适用于单个用户的单独配置，以及适用于漫游用户的配置。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-186">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="f5b4b-187">`userLevel`值确定正在打开的配置文件的位置。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-187">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="f5b4b-188">它指示它是否没有用户级别（配置文件与应用程序在同一目录中）或具有每用户级别（配置文件位于由用户级别类型确定的应用程序设置路径中）。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-188">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="f5b4b-189">调用此方法重载与调用 <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> 重载并将 `preLoad` 参数设置为 `false` 等效。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-189">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5b4b-190">下面的代码示例说明如何使用 <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-190">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="f5b4b-191">无法加载配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-191">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : unit -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMachineConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f5b4b-192">将当前计算机上的计算机配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-192">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="f5b4b-193"><see cref="T:System.Configuration.Configuration" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-193">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5b4b-194">除非为本地应用程序重写，否则计算机配置设置将应用于整个计算机以及驻留在该计算机上的所有应用程序。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-194">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="f5b4b-195">计算机配置设置是从 .NET Framework 当前运行版本的 Machine.config 文件中读取的。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-195">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="f5b4b-196">Machine.config 文件位于以下子目录中：</span><span class="sxs-lookup"><span data-stu-id="f5b4b-196">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="f5b4b-197">*% windir%* \Microsoft.NET\Framework \\ *版本*\config</span><span class="sxs-lookup"><span data-stu-id="f5b4b-197">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5b4b-198">若要获取 <xref:System.Configuration.Configuration> 资源的对象，你的代码必须对它继承其设置的所有配置文件具有读取权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-198">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="f5b4b-199">若要更新配置文件，你的代码还必须对配置文件及其所在的目录具有写入权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-199">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="f5b4b-200">对于可能安装在计算机上的其他版本 .NET Framework，不能访问 Machine.config 文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-200">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5b4b-201">下面的代码示例演示如何使用 <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> 方法获取配置文件中包含的所有节。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-201">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="f5b4b-202">无法加载配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-202">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f5b4b-203">将指定的客户端配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-203">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="f5b4b-204">一个 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 对象，该对象引用代替应用程序的默认配置文件使用的配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-204">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="f5b4b-205">要打开配置的 <see cref="T:System.Configuration.ConfigurationUserLevel" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-205">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="f5b4b-206">可将指定的客户端配置文件作为使用指定文件映射和用户级别的 <see cref="T:System.Configuration.Configuration" /> 对象打开。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-206">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span></span></summary>
        <returns><span data-ttu-id="f5b4b-207">配置对象。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-207">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5b4b-208"><xref:System.Configuration.ConfigurationUserLevel>对象确定正在打开的配置文件的位置。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-208">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="f5b4b-209">它指示文件是否没有用户级别（配置文件与应用程序在同一目录中）或是否具有每用户级别（配置文件位于由确定的应用程序设置路径中） `userLevel` 。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-209">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5b4b-210">若要获取 <xref:System.Configuration.Configuration> 资源的对象，你的代码必须对它继承其设置的所有配置文件具有读取权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-210">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="f5b4b-211">若要更新配置文件，你的代码还必须对配置文件及其所在的目录具有写入权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-211">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5b4b-212">下面的代码示例演示如何使用 <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> 方法获取配置文件中包含的所有节。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-212">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="f5b4b-213">无法加载配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-213">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel * bool -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel, preLoad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preLoad" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="f5b4b-214">一个 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 对象，该对象引用代替应用程序的默认配置文件使用的配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-214">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="f5b4b-215">要打开配置的 <see cref="T:System.Configuration.ConfigurationUserLevel" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-215">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <param name="preLoad"><span data-ttu-id="f5b4b-216">如果预加载所有部分团队和部分，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-216"><see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f5b4b-217">可将指定的客户端配置文件作为使用指定文件映射、用户级别和预加载选项的 <see cref="T:System.Configuration.Configuration" /> 对象打开。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-217">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span></span></summary>
        <returns><span data-ttu-id="f5b4b-218">配置对象。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-218">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5b4b-219"><xref:System.Configuration.ConfigurationUserLevel> 对象确定将打开的配置文件的位置。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-219">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="f5b4b-220">它指示该文件是否具有用户级别（此配置文件位于应用程序所在的目录中）或每用户级别（此配置文件位于由 `userLevel` 决定的应用程序设置路径中）。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-220">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5b4b-221">若要获取 <xref:System.Configuration.Configuration> 资源的对象，你的代码必须对它继承其设置的所有配置文件具有读取权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-221">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="f5b4b-222">若要更新配置文件，你的代码还必须对配置文件及其所在的目录具有写入权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-222">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="f5b4b-223">有关示例代码，请参见 <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> 重载。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-223">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="f5b4b-224">无法加载配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-224">A configuration file could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration fileMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="f5b4b-225">一个 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 对象，该对象引用代替应用程序的默认配置文件使用的配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-225">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <summary><span data-ttu-id="f5b4b-226">将计算机配置文件作为使用指定文件映射的 <see cref="T:System.Configuration.Configuration" /> 对象打开。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-226">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span></span></summary>
        <returns><span data-ttu-id="f5b4b-227"><see cref="T:System.Configuration.Configuration" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-227">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5b4b-228">除非为本地应用程序重写，否则计算机配置设置将应用于整个计算机以及驻留在该计算机上的所有应用程序。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-228">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="f5b4b-229">计算机配置设置是从 .NET Framework 当前运行版本的 Machine.config 文件中读取的。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-229">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="f5b4b-230">Machine.config 文件位于以下子目录中：</span><span class="sxs-lookup"><span data-stu-id="f5b4b-230">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="f5b4b-231">*% windir%* \Microsoft.NET\Framework \\ *版本*\config</span><span class="sxs-lookup"><span data-stu-id="f5b4b-231">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5b4b-232">若要获取 <xref:System.Configuration.Configuration> 资源的对象，你的代码必须对它继承其设置的所有配置文件具有读取权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-232">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="f5b4b-233">若要更新配置文件，你的代码还必须对配置文件及其所在的目录具有写入权限。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-233">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="f5b4b-234">对于可能安装在计算机上的其他版本 .NET Framework，不能访问 Machine.config 文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-234">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5b4b-235">下面的代码示例演示如何使用 <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> 方法获取配置文件中的所有节。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-235">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="f5b4b-236">无法加载配置文件。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-236">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member RefreshSection : string -&gt; unit" Usage="System.Configuration.ConfigurationManager.RefreshSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="f5b4b-237">要刷新的节的配置节名称或配置路径和节名称。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-237">The configuration section name or the configuration path and section name of the section to refresh.</span></span></param>
        <summary><span data-ttu-id="f5b4b-238">刷新命名节，这样在下次检索它时将从磁盘重新读取它。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-238">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5b4b-239">此方法会使指定配置节的缓存失效，而不会影响其他部分。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-239">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5b4b-240">下面的代码示例演示如何使用 <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> 方法来刷新应用程序设置配置节。</span><span class="sxs-lookup"><span data-stu-id="f5b4b-240">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
