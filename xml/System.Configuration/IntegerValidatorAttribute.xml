<Type Name="IntegerValidatorAttribute" FullName="System.Configuration.IntegerValidatorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5645a526754a83ed05d8d62534d0f3bf65e3ec9" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89995948" /></Metadata><TypeSignature Language="C#" Value="public sealed class IntegerValidatorAttribute : System.Configuration.ConfigurationValidatorAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IntegerValidatorAttribute extends System.Configuration.ConfigurationValidatorAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IntegerValidatorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IntegerValidatorAttribute&#xA;Inherits ConfigurationValidatorAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntegerValidatorAttribute sealed : System::Configuration::ConfigurationValidatorAttribute" />
  <TypeSignature Language="F#" Value="type IntegerValidatorAttribute = class&#xA;    inherit ConfigurationValidatorAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Property)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Property)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d81d8-101">以声明的方式指示 .NET Framework 对配置属性执行整数验证。</span><span class="sxs-lookup"><span data-stu-id="d81d8-101">Declaratively instructs the .NET Framework to perform integer validation on a configuration property.</span></span> <span data-ttu-id="d81d8-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="d81d8-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d81d8-103">使用 <xref:System.Configuration.IntegerValidatorAttribute> 特性修饰配置属性，该属性将指示 .NET Framework 使用对象验证属性 <xref:System.Configuration.IntegerValidator> ，并向其传递修饰参数的值。</span><span class="sxs-lookup"><span data-stu-id="d81d8-103">You use the <xref:System.Configuration.IntegerValidatorAttribute> attribute to decorate a configuration property, which will instruct the .NET Framework to validate the property using the <xref:System.Configuration.IntegerValidator> object and pass to it the value of the decorating parameters.</span></span>  
  
 <span data-ttu-id="d81d8-104">仅可将 <xref:System.Configuration.IntegerValidatorAttribute> 属性应用于属性类型。</span><span class="sxs-lookup"><span data-stu-id="d81d8-104">You can apply <xref:System.Configuration.IntegerValidatorAttribute> attributes to property types only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d81d8-105">下面的示例演示如何使用特性修饰自定义对象的属性 <xref:System.Configuration.ConfigurationSection> <xref:System.Configuration.IntegerValidatorAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="d81d8-105">The following example shows how to decorate the properties of a custom <xref:System.Configuration.ConfigurationSection> object using the <xref:System.Configuration.IntegerValidatorAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#6)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorAttribute" />
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <altmember cref="T:System.Configuration.ConfigurationPropertyAttribute" />
    <altmember cref="T:System.Configuration.IntegerValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidatorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidatorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidatorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d81d8-106">创建 <see cref="T:System.Configuration.IntegerValidatorAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d81d8-106">Creates a new instance of the <see cref="T:System.Configuration.IntegerValidatorAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d81d8-107">在特性化模型中使用此构造函数可确保分配给相关属性的值为整数。</span><span class="sxs-lookup"><span data-stu-id="d81d8-107">You use this constructor in the attributed model to assure that the value assigned to the related property is an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d81d8-108">下面的示例演示如何使用 <xref:System.Configuration.IntegerValidatorAttribute.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="d81d8-108">The following example shows how to use the <xref:System.Configuration.IntegerValidatorAttribute.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#5)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeRange">
      <MemberSignature Language="C#" Value="public bool ExcludeRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExcludeRange" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange" />
      <MemberSignature Language="VB.NET" Value="Public Property ExcludeRange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExcludeRange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExcludeRange : bool with get, set" Usage="System.Configuration.IntegerValidatorAttribute.ExcludeRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d81d8-109">获取或设置一个值，指示在 <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> 和 <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" /> 属性值定义的范围内是包含还是排除整数。</span><span class="sxs-lookup"><span data-stu-id="d81d8-109">Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> and <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" /> property values.</span></span></summary>
        <value><span data-ttu-id="d81d8-110">如果必须排除值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d81d8-110"><see langword="true" /> if the value must be excluded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d81d8-111">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d81d8-111">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d81d8-112">范围包含 <xref:System.Configuration.IntegerValidatorAttribute.MinValue%2A> 和 <xref:System.Configuration.IntegerValidatorAttribute.MaxValue%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="d81d8-112">The range is inclusive of the <xref:System.Configuration.IntegerValidatorAttribute.MinValue%2A> and <xref:System.Configuration.IntegerValidatorAttribute.MaxValue%2A> property values.</span></span> <span data-ttu-id="d81d8-113">当 <xref:System.Configuration.IntegerValidatorAttribute.ExcludeRange%2A> 属性值为时 `true` ，允许的值超出范围。</span><span class="sxs-lookup"><span data-stu-id="d81d8-113">When the <xref:System.Configuration.IntegerValidatorAttribute.ExcludeRange%2A> property value is `true`, the allowed values are outside the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d81d8-114">下面的示例演示如何使用 <xref:System.Configuration.IntegerValidatorAttribute.ExcludeRange%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d81d8-114">The following example shows how to use the <xref:System.Configuration.IntegerValidatorAttribute.ExcludeRange%2A> property.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#6)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public int MaxValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxValue" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxValue { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxValue : int with get, set" Usage="System.Configuration.IntegerValidatorAttribute.MaxValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d81d8-115">获取或设置属性允许的最大值。</span><span class="sxs-lookup"><span data-stu-id="d81d8-115">Gets or sets the maximum value allowed for the property.</span></span></summary>
        <value><span data-ttu-id="d81d8-116">一个整数，指示允许的最大值。</span><span class="sxs-lookup"><span data-stu-id="d81d8-116">An integer that indicates the allowed maximum value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d81d8-117"><xref:System.Configuration.IntegerValidatorAttribute.MaxValue%2A>属性值包含在允许的范围内。</span><span class="sxs-lookup"><span data-stu-id="d81d8-117">The <xref:System.Configuration.IntegerValidatorAttribute.MaxValue%2A> property value is included in the allowed range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d81d8-118">下面的示例演示如何使用 <xref:System.Configuration.IntegerValidatorAttribute.MaxValue%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d81d8-118">The following example shows how to use the <xref:System.Configuration.IntegerValidatorAttribute.MaxValue%2A> property.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#6)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d81d8-119">选定值小于 <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="d81d8-119">The selected value is less than <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public int MinValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinValue" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IntegerValidatorAttribute.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Property MinValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinValue { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinValue : int with get, set" Usage="System.Configuration.IntegerValidatorAttribute.MinValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d81d8-120">获取或设置属性允许的最小值。</span><span class="sxs-lookup"><span data-stu-id="d81d8-120">Gets or sets the minimum value allowed for the property.</span></span></summary>
        <value><span data-ttu-id="d81d8-121">一个整数，指示允许的最小值。</span><span class="sxs-lookup"><span data-stu-id="d81d8-121">An integer that indicates the allowed minimum value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d81d8-122"><xref:System.Configuration.IntegerValidatorAttribute.MinValue%2A>属性值包含在允许的范围内。</span><span class="sxs-lookup"><span data-stu-id="d81d8-122">The <xref:System.Configuration.IntegerValidatorAttribute.MinValue%2A> property value is included in the allowed range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d81d8-123">下面的示例演示如何使用 <xref:System.Configuration.IntegerValidatorAttribute.MinValue%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d81d8-123">The following example shows how to use the <xref:System.Configuration.IntegerValidatorAttribute.MinValue%2A> property.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#6)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d81d8-124">选定值大于 <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="d81d8-124">The selected value is greater than <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidatorInstance">
      <MemberSignature Language="C#" Value="public override System.Configuration.ConfigurationValidatorBase ValidatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidatorInstance As ConfigurationValidatorBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::ConfigurationValidatorBase ^ ValidatorInstance { System::Configuration::ConfigurationValidatorBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidatorInstance : System.Configuration.ConfigurationValidatorBase" Usage="System.Configuration.IntegerValidatorAttribute.ValidatorInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationValidatorBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d81d8-125">获取 <see cref="T:System.Configuration.IntegerValidator" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="d81d8-125">Gets an instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <value><span data-ttu-id="d81d8-126"><see cref="T:System.Configuration.ConfigurationValidatorBase" /> 验证程序实例。</span><span class="sxs-lookup"><span data-stu-id="d81d8-126">The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d81d8-127">使用 <xref:System.Configuration.IntegerValidatorAttribute.ValidatorInstance%2A> 属性可通过调用其方法来执行字符串验证 <xref:System.Configuration.IntegerValidator.Validate%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d81d8-127">You use the <xref:System.Configuration.IntegerValidatorAttribute.ValidatorInstance%2A> property to perform string validation by calling its <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d81d8-128">下面的示例演示如何使用 <xref:System.Configuration.IntegerValidatorAttribute.ValidatorInstance%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d81d8-128">The following example shows how to use the <xref:System.Configuration.IntegerValidatorAttribute.ValidatorInstance%2A> property.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#13)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
