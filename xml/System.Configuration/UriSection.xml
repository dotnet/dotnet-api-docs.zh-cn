<Type Name="UriSection" FullName="System.Configuration.UriSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8901d5fdda713460478ef1f8078557b4de997c3b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86731768" /></Metadata><TypeSignature Language="C#" Value="public sealed class UriSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UriSection extends System.Configuration.ConfigurationSection" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.UriSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UriSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type UriSection = class&#xA;    inherit ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UriSection extends System.Configuration.ConfigurationSection" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示配置文件中的 Uri 节。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已对现有 <xref:System.Uri?displayProperty=nameWithType> 类进行扩展，以便为国际化) 和国际化域名 (提供对国际资源标识符的支持。 当前用户将看不到 .NET Framework 2.0 行为中的任何更改，除非它们专门启用 IRI 和 IDN。 这确保了 NET Framework 以前版本的应用程序兼容性。  
  
 可以使用类检索 IRI 和 IDN 的配置设置 <xref:System.Configuration.UriSection> 。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/">网络设置架构</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.UriSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.UriSection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已对现有 <xref:System.Uri?displayProperty=nameWithType> 类进行扩展，以便为国际化) 和国际化域名 (提供对国际资源标识符的支持。 当前用户将看不到 .NET Framework 2.0 行为中的任何更改，除非它们专门启用 IRI 和 IDN。 这确保了 NET Framework 以前版本的应用程序兼容性。  
  
 可以使用类检索 IRI 和 IDN 的配置设置 <xref:System.Configuration.UriSection> 。  
  
 有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idn">
      <MemberSignature Language="C#" Value="public System.Configuration.IdnElement Idn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.IdnElement Idn" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.Idn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Idn As IdnElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::IdnElement ^ Idn { System::Configuration::IdnElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Idn : System.Configuration.IdnElement" Usage="System.Configuration.UriSection.Idn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("idn")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("idn")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.IdnElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Configuration.IdnElement" /> 对象，其中包含 <see cref="T:System.Uri" /> 类中用于国际化域名 (IDN) 处理的配置设置。</summary>
        <value><see cref="T:System.Uri" /> 类中用于国际域名 (IDN) 处理的配置设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已对现有 <xref:System.Uri?displayProperty=nameWithType> 类进行扩展，以便为国际化) 和国际化域名 (提供对国际资源标识符的支持。 当前用户将看不到 .NET Framework 2.0 行为中的任何更改，除非它们专门启用 IRI 和 IDN。 这确保了 NET Framework 以前版本的应用程序兼容性。  
  
 可以使用类检索 IRI 和 IDN 的配置设置 <xref:System.Configuration.UriSection> 。 <xref:System.Configuration.UriSection.Idn%2A>属性返回类中 IDN 处理的配置设置 <xref:System.Uri?displayProperty=nameWithType> 。  
  
 必须启用 IRI 处理才能进行 IDN 处理。 如果禁用 IRI，IDN 处理将被设置为默认值，这时 NET Framework 2.0 行为用于兼容性，并且 IDN 名称不可用。  
  
 国际化域名 (IDN) 属性仅控制 IDN 处理。 默认情况下，默认情况下会执行) 的所有其他 IRI 处理 (字符规范化。  
  
 <xref:System.Configuration.IdnElement>当构造第一个类时，的配置设置将被读取一次 <xref:System.Uri?displayProperty=nameWithType> 。 忽略时间后更改为默认设置。  
  
 有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/">网络设置架构</related>
      </Docs>
    </Member>
    <Member MemberName="IriParsing">
      <MemberSignature Language="C#" Value="public System.Configuration.IriParsingElement IriParsing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.IriParsingElement IriParsing" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.IriParsing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IriParsing As IriParsingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::IriParsingElement ^ IriParsing { System::Configuration::IriParsingElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IriParsing : System.Configuration.IriParsingElement" Usage="System.Configuration.UriSection.IriParsing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("iriParsing")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("iriParsing")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.IriParsingElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Configuration.IriParsingElement" /> 对象，其中包含 <see cref="T:System.Uri" /> 类中用于国际化资源标识符 (IRI) 分析的配置设置。</summary>
        <value><see cref="T:System.Uri" /> 类中用于国际化资源标识符 (IRI) 分析的配置设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已对现有 <xref:System.Uri?displayProperty=nameWithType> 类进行扩展，以便为国际化) 和国际化域名 (提供对国际资源标识符的支持。 当前用户将看不到 .NET Framework 2.0 行为中的任何更改，除非它们专门启用 IRI 和 IDN。 这确保了 NET Framework 以前版本的应用程序兼容性。  
  
 可以使用类检索 IRI 和 IDN 的配置设置 <xref:System.Configuration.UriSection> 。 <xref:System.Configuration.UriSection.IriParsing%2A>属性返回类中的 IRI 分析的配置设置 <xref:System.Uri?displayProperty=nameWithType> 。  
  
 必须启用 IRI 处理才能进行 IDN 处理。 如果禁用 IRI，IDN 处理将被设置为默认值，这时 NET Framework 2.0 行为用于兼容性，并且 IDN 名称不可用。  
  
 国际化域名 (IDN) 属性仅控制 IDN 处理。 默认情况下，默认情况下会执行) 的所有其他 IRI 处理 (字符规范化。  
  
 <xref:System.Configuration.IriParsingElement>当构造第一个类时，的配置设置将被读取一次 <xref:System.Uri?displayProperty=nameWithType> 。 忽略时间后更改为默认设置。  
  
 有关 IRI 支持的详细信息，请参阅类的 "备注" 部分 <xref:System.Uri?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/">网络设置架构</related>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Configuration.UriSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemeSettings">
      <MemberSignature Language="C#" Value="public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SchemeSettingElementCollection SchemeSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.SchemeSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemeSettings As SchemeSettingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::SchemeSettingElementCollection ^ SchemeSettings { System::Configuration::SchemeSettingElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemeSettings : System.Configuration.SchemeSettingElementCollection" Usage="System.Configuration.UriSection.SchemeSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("schemeSettings")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("schemeSettings")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SchemeSettingElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 对象，该对象包含 <see cref="T:System.Uri" /> 类中用于方案分析的配置设置。</summary>
        <value><see cref="T:System.Uri" /> 类中用于方案分析的配置设置</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.UriSection.SchemeSettings%2A>属性不是泛型。 仅支持 HTTP 和 HTTPS 方案的 genericUriParserOptions = "DontUnescapePathDotsAndSlashes" 配置设置。 忽略所有其他设置。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SchemeSettingElement" />
        <altmember cref="T:System.Configuration.SchemeSettingElementCollection" />
        <altmember cref="T:System.GenericUriParserOptions" />
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/">网络设置架构</related>
      </Docs>
    </Member>
  </Members>
</Type>
