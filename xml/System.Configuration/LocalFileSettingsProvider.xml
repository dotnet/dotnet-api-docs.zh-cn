<Type Name="LocalFileSettingsProvider" FullName="System.Configuration.LocalFileSettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0e19b34d35c85b7e1eacf3120d75e53f77d94ece" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89729644" /></Metadata><TypeSignature Language="C#" Value="public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalFileSettingsProvider extends System.Configuration.SettingsProvider implements class System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LocalFileSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LocalFileSettingsProvider&#xA;Inherits SettingsProvider&#xA;Implements IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalFileSettingsProvider : System::Configuration::SettingsProvider, System::Configuration::IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type LocalFileSettingsProvider = class&#xA;    inherit SettingsProvider&#xA;    interface IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.IApplicationSettingsProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="13e22-101">为应用程序设置类提供持久性存储。</span><span class="sxs-lookup"><span data-stu-id="13e22-101">Provides persistence for application settings classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e22-102">设置提供程序定义用于存储应用程序设置体系结构中使用的配置数据的机制。</span><span class="sxs-lookup"><span data-stu-id="13e22-102">Setting providers define a mechanism for storing configuration data used in the application settings architecture.</span></span> <span data-ttu-id="13e22-103">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]包含一个默认设置提供程序，该提供程序 <xref:System.Configuration.LocalFileSettingsProvider> 将配置数据存储到本地文件系统。</span><span class="sxs-lookup"><span data-stu-id="13e22-103">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system.</span></span> <span data-ttu-id="13e22-104">应用程序设置属性或一组属性通过使用关联到特定的设置提供程序 <xref:System.Configuration.SettingsProviderAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="13e22-104">An application settings property or group of properties are associated to a specific settings provider through the use of the <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="13e22-105">通常，客户端程序不会显式访问此类;相反，当需要其服务时，应用程序设置体系结构会自动调用相应的设置提供程序。</span><span class="sxs-lookup"><span data-stu-id="13e22-105">Typically, the client program does not explicitly access this class; rather, the application settings architecture automatically invokes the appropriate settings provider when its services are required.</span></span> <span data-ttu-id="13e22-106">例如，许多成员将 <xref:System.Configuration.ApplicationSettingsBase> 其工作委托给关联的设置提供程序。</span><span class="sxs-lookup"><span data-stu-id="13e22-106">For example, many of the members of <xref:System.Configuration.ApplicationSettingsBase> delegate their work to the associated settings provider.</span></span>  
  
 <span data-ttu-id="13e22-107"><xref:System.Configuration.LocalFileSettingsProvider> 将设置保存到扩展名为的配置文件中 `.config` 。</span><span class="sxs-lookup"><span data-stu-id="13e22-107"><xref:System.Configuration.LocalFileSettingsProvider> persists settings to configuration files that have the extension `.config`.</span></span> <span data-ttu-id="13e22-108">配置文件的内容结构化为 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="13e22-108">The contents of configuration files are structured as XML documents.</span></span> <span data-ttu-id="13e22-109">配置数据将分别存储为 `<applicationSettings>` 或节组中的元素，具体取决于应用程序级别或用户级别的设置是否作用域 `<userSettings>` 。</span><span class="sxs-lookup"><span data-stu-id="13e22-109">Depending on whether the setting is scoped at either the application-level or user-level, the configuration data is stored as elements within an `<applicationSettings>` or a `<userSettings>` section group, respectively.</span></span> <span data-ttu-id="13e22-110">每个分区组都由相应的 <xref:System.Configuration.AppSettingsSection> 或分别表示 <xref:System.Configuration.ClientSettingsSection> 。</span><span class="sxs-lookup"><span data-stu-id="13e22-110">Each of these section groups is represented by a corresponding <xref:System.Configuration.AppSettingsSection> or <xref:System.Configuration.ClientSettingsSection>, respectively.</span></span> <span data-ttu-id="13e22-111">每个节对象均由配置节处理程序所拥有和管理，该处理程序是类型的对象 <xref:System.Configuration.IConfigurationSectionHandler> 。</span><span class="sxs-lookup"><span data-stu-id="13e22-111">Each section object is owned and administered by a configuration section handler, which is an object of type <xref:System.Configuration.IConfigurationSectionHandler>.</span></span>  
  
 <span data-ttu-id="13e22-112">应用程序范围的设置和默认用户范围设置存储在名为的文件中 `application.exe.config` ，该文件在与可执行文件相同的目录中创建。</span><span class="sxs-lookup"><span data-stu-id="13e22-112">Application-scoped settings and the default user-scoped settings are stored in a file named `application.exe.config`, which is created in the same directory as the executable file.</span></span> <span data-ttu-id="13e22-113">应用程序配置设置为只读。</span><span class="sxs-lookup"><span data-stu-id="13e22-113">Application configuration settings are read-only.</span></span> <span data-ttu-id="13e22-114">特定用户数据存储在名为的文件中 `user.config` ，该文件存储在用户的主目录下。</span><span class="sxs-lookup"><span data-stu-id="13e22-114">Specific user data is stored in a file named `user.config`, stored under the user's home directory.</span></span> <span data-ttu-id="13e22-115">如果启用了漫游配置文件，则可以存在两个版本的用户配置文件。</span><span class="sxs-lookup"><span data-stu-id="13e22-115">If roaming profiles are enabled, two versions of the user configuration file could exist.</span></span> <span data-ttu-id="13e22-116">在这种情况下，漫游版本中的条目优先于本地用户配置文件中的重复项。</span><span class="sxs-lookup"><span data-stu-id="13e22-116">In such a case, the entries in the roaming version take precedence over duplicated entries in the local user configuration file.</span></span>  
  
 <span data-ttu-id="13e22-117">有关应用程序设置的详细信息，请参阅 [Windows 窗体的应用程序设置](/dotnet/framework/winforms/advanced/application-settings-for-windows-forms)。</span><span class="sxs-lookup"><span data-stu-id="13e22-117">For more information about application settings, see [Application Settings for Windows Forms](/dotnet/framework/winforms/advanced/application-settings-for-windows-forms).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ClientSettingsSection" />
    <altmember cref="T:System.Configuration.IConfigurationSectionHandler" />
    <related type="Article" href="/dotnet/framework/winforms/advanced/application-settings-architecture"><span data-ttu-id="13e22-118">应用程序设置体系结构</span><span class="sxs-lookup"><span data-stu-id="13e22-118">Application Settings Architecture</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalFileSettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalFileSettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13e22-119">初始化 <see cref="T:System.Configuration.LocalFileSettingsProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="13e22-119">Initializes a new instance of the <see cref="T:System.Configuration.LocalFileSettingsProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e22-120">无参数构造函数将 <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> 属性设置为 <xref:System.String.Empty> 。</span><span class="sxs-lookup"><span data-stu-id="13e22-120">The parameterless constructor sets the <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> property to <xref:System.String.Empty>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13e22-121">获取或设置当前运行的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="13e22-121">Gets or sets the name of the currently running application.</span></span></summary>
        <value><span data-ttu-id="13e22-122">一个字符串，包含应用程序的显示名称。</span><span class="sxs-lookup"><span data-stu-id="13e22-122">A string that contains the application's display name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e22-123"><xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>和 <xref:System.Configuration.Provider.ProviderBase.Name%2A> 属性有助于区分不同应用程序中名称相同的设置属性。</span><span class="sxs-lookup"><span data-stu-id="13e22-123">The <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue&#xA;override this.GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="localFileSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="13e22-124">一个 <see cref="T:System.Configuration.SettingsContext" />，描述使用应用程序设置属性的上下文。</span><span class="sxs-lookup"><span data-stu-id="13e22-124">A <see cref="T:System.Configuration.SettingsContext" /> that describes where the application settings property is used.</span></span></param>
        <param name="property"><span data-ttu-id="13e22-125">要返回其值的 <see cref="T:System.Configuration.SettingsProperty" />。</span><span class="sxs-lookup"><span data-stu-id="13e22-125">The <see cref="T:System.Configuration.SettingsProperty" /> whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="13e22-126">返回同一应用程序的早期版本的命名设置属性的值。</span><span class="sxs-lookup"><span data-stu-id="13e22-126">Returns the value of the named settings property for the previous version of the same application.</span></span></summary>
        <returns><span data-ttu-id="13e22-127">如果找到，则为表示应用程序设置的 <see cref="T:System.Configuration.SettingsPropertyValue" />；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="13e22-127">A <see cref="T:System.Configuration.SettingsPropertyValue" /> representing the application setting if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e22-128">在 <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> 应用程序的新版本安装过程中迁移应用程序设置时，方法通常与方法结合使用。</span><span class="sxs-lookup"><span data-stu-id="13e22-128">The <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method when migrating application settings during the installation of a new version of an application.</span></span> <span data-ttu-id="13e22-129">有关更多信息，请参见 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="13e22-129">For more information, see the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertyValues (context As SettingsContext, properties As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="override this.GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="localFileSettingsProvider.GetPropertyValues (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="13e22-130">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</span><span class="sxs-lookup"><span data-stu-id="13e22-130">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="properties"><span data-ttu-id="13e22-131">一个包含设置属性组（将要检索该组中的值）的 <see cref="T:System.Configuration.SettingsPropertyCollection" />。</span><span class="sxs-lookup"><span data-stu-id="13e22-131">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span></span></param>
        <summary><span data-ttu-id="13e22-132">为指定的应用程序实例和设置属性组返回设置属性值的集合。</span><span class="sxs-lookup"><span data-stu-id="13e22-132">Returns the collection of setting property values for the specified application instance and settings property group.</span></span></summary>
        <returns><span data-ttu-id="13e22-133">一个包含指定设置属性组的值的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="13e22-133">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e22-134"><xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A>方法还管理特殊应用程序设置类型 <xref:System.Configuration.SpecialSetting.ConnectionString> 。</span><span class="sxs-lookup"><span data-stu-id="13e22-134">The <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> method also manages the special application settings type <xref:System.Configuration.SpecialSetting.ConnectionString>.</span></span> <span data-ttu-id="13e22-135">连接字符串存储在配置文件中由元素分隔的特殊部分 `<connectionstrings>` 。</span><span class="sxs-lookup"><span data-stu-id="13e22-135">Connection strings are stored in a special section of the configuration file delimited by the element `<connectionstrings>`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="13e22-136"><xref:System.Configuration.LocalFileSettingsProvider> 不使用加密来保留任何设置。</span><span class="sxs-lookup"><span data-stu-id="13e22-136"><xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings.</span></span> <span data-ttu-id="13e22-137">因此，请不要使用此提供程序存储纯文本密码或其他敏感信息，而无需采取其他防范措施，例如，在配置文件中单独加密信息。</span><span class="sxs-lookup"><span data-stu-id="13e22-137">Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file.</span></span> <span data-ttu-id="13e22-138">有关详细信息，请参阅 [使用受保护的配置加密配置信息](https://docs.microsoft.com/previous-versions/aspnet/53tyfkaw(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="13e22-138">For more information, see [Encrypting Configuration Information Using Protected Configuration](https://docs.microsoft.com/previous-versions/aspnet/53tyfkaw(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="13e22-139">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。</span><span class="sxs-lookup"><span data-stu-id="13e22-139">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span></span></exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
        <altmember cref="P:System.Configuration.SettingsPropertyValue.IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, values As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="localFileSettingsProvider.Initialize (name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="13e22-140">提供程序的友好名称。</span><span class="sxs-lookup"><span data-stu-id="13e22-140">The friendly name of the provider.</span></span></param>
        <param name="values"><span data-ttu-id="13e22-141">名称/值对的集合，表示在配置中为该提供程序指定的提供程序特定的属性。</span><span class="sxs-lookup"><span data-stu-id="13e22-141">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</span></span></param>
        <summary><span data-ttu-id="13e22-142">初始化提供程序。</span><span class="sxs-lookup"><span data-stu-id="13e22-142">Initializes the provider.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit&#xA;override this.Reset : System.Configuration.SettingsContext -&gt; unit" Usage="localFileSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="13e22-143">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</span><span class="sxs-lookup"><span data-stu-id="13e22-143">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <summary><span data-ttu-id="13e22-144">将与指定的应用程序关联的所有应用程序设置属性重置为其默认值。</span><span class="sxs-lookup"><span data-stu-id="13e22-144">Resets all application settings properties associated with the specified application to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e22-145"><xref:System.Configuration.LocalFileSettingsProvider.Reset%2A>方法还原指定应用程序设置组的存储值。</span><span class="sxs-lookup"><span data-stu-id="13e22-145">The <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> method restores the stored values of the specified application settings group.</span></span> <span data-ttu-id="13e22-146">的操作 <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> 取决于应用程序设置属性的作用域：</span><span class="sxs-lookup"><span data-stu-id="13e22-146">The action of <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> depends on the scope of the application settings property:</span></span>  
  
-   <span data-ttu-id="13e22-147">应用程序范围的设置不受影响。</span><span class="sxs-lookup"><span data-stu-id="13e22-147">Application-scoped settings are not affected.</span></span>  
  
-   <span data-ttu-id="13e22-148">用户范围的设置将重置为在应用程序配置文件中存储为只读条目的默认值 `application.exe.config` 。</span><span class="sxs-lookup"><span data-stu-id="13e22-148">User-scoped settings are reset to the default values that are stored as read-only entries in the application configuration file, `application.exe.config`.</span></span> <span data-ttu-id="13e22-149">如果使用漫游配置文件，则漫游配置文件中的任何应用程序设置值都优先于在本地配置文件中找到的重复项。</span><span class="sxs-lookup"><span data-stu-id="13e22-149">If roaming profiles are being used, any application settings values in the roaming profile take precedence over duplicates found in the local profile.</span></span>  
  
 <span data-ttu-id="13e22-150">请注意，如果使用漫游配置文件，则可以有两个 `user.config` 文件，一个用于本地设置，另一个用于漫游配置文件。</span><span class="sxs-lookup"><span data-stu-id="13e22-150">Notice that if roaming profiles are used, there can be two `user.config` files, one for the local settings and one for the roaming profile.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="13e22-151">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。</span><span class="sxs-lookup"><span data-stu-id="13e22-151">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span></span></exception>
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="T:System.Configuration.SettingsManageability" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetPropertyValues (context As SettingsContext, values As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="localFileSettingsProvider.SetPropertyValues (context, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="values" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="13e22-152">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</span><span class="sxs-lookup"><span data-stu-id="13e22-152">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="values"><span data-ttu-id="13e22-153">表示要设置的属性设置组的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="13e22-153">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</span></span></param>
        <summary><span data-ttu-id="13e22-154">设置指定的属性设置组的值。</span><span class="sxs-lookup"><span data-stu-id="13e22-154">Sets the values of the specified group of property settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e22-155">设置包装类（派生自 <xref:System.Configuration.ApplicationSettingsBase> ）包含 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> 方法，该方法用于保存其所有设置属性的值。</span><span class="sxs-lookup"><span data-stu-id="13e22-155">A settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>, contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties.</span></span> <span data-ttu-id="13e22-156">此方法枚举与其设置属性关联的所有设置提供程序，并 <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> 为每个提供程序调用方法， <xref:System.Configuration.SettingsProvider> 以执行实际的序列化操作。</span><span class="sxs-lookup"><span data-stu-id="13e22-156">This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.</span></span>  
  
 <span data-ttu-id="13e22-157"><xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> 将每个用户范围的应用程序设置属性分别序列化到相应的配置文件中的相应应用程序设置 `user.config` 。</span><span class="sxs-lookup"><span data-stu-id="13e22-157"><xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> individually serializes each user-scoped application settings property to its corresponding application setting in the appropriate `user.config` configuration file.</span></span>  
  
 <span data-ttu-id="13e22-158">默认情况下， <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> 方法使用以下逻辑序列来确定序列化方案，具体取决于设置属性的类型：</span><span class="sxs-lookup"><span data-stu-id="13e22-158">By default, the <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> method uses the following logical sequence to determine the serialization scheme, depending on type of the settings property:</span></span>  
  
1.  <span data-ttu-id="13e22-159">如果该类型具有 <xref:System.ComponentModel.TypeConverter> 与 <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> 方法实现关联的，则使用此转换。</span><span class="sxs-lookup"><span data-stu-id="13e22-159">If the type has an associated <xref:System.ComponentModel.TypeConverter> with a <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> method implementation, this conversion is used.</span></span>  
  
2.  <span data-ttu-id="13e22-160">使用 XML 序列化。</span><span class="sxs-lookup"><span data-stu-id="13e22-160">XML serialization is used.</span></span>  
  
 <span data-ttu-id="13e22-161">不过，你可以使用指定首选的序列化机制 <xref:System.Configuration.SettingsSerializeAsAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="13e22-161">However, you can specify a preferred serialization mechanism by using the <xref:System.Configuration.SettingsSerializeAsAttribute>.</span></span> <span data-ttu-id="13e22-162"><xref:System.Configuration.LocalFileSettingsProvider> 不支持中的二进制序列化 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="13e22-162"><xref:System.Configuration.LocalFileSettingsProvider> does not support binary serialization in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].</span></span>  
  
 <span data-ttu-id="13e22-163">如果用户作用域设置属性显式设置回其默认值，则本地文件设置提供程序将从用户配置文件中删除关联设置的条目。</span><span class="sxs-lookup"><span data-stu-id="13e22-163">If a user-scoped settings property is set back to its default value explicitly, then the local file settings provider will remove the entry for the associated setting from the user configuration file.</span></span> <span data-ttu-id="13e22-164">此属性的下一次读取访问将只使用默认值。</span><span class="sxs-lookup"><span data-stu-id="13e22-164">The next read access for this property will simply use the default value.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="13e22-165"><xref:System.Configuration.LocalFileSettingsProvider> 不使用加密来保留任何设置。</span><span class="sxs-lookup"><span data-stu-id="13e22-165"><xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings.</span></span> <span data-ttu-id="13e22-166">因此，请不要使用此提供程序存储纯文本密码或其他敏感信息，而无需采取其他防范措施，例如，在配置文件中单独加密信息。</span><span class="sxs-lookup"><span data-stu-id="13e22-166">Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file.</span></span> <span data-ttu-id="13e22-167">有关详细信息，请参阅 [使用受保护的配置加密配置信息](https://docs.microsoft.com/previous-versions/aspnet/53tyfkaw(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="13e22-167">For more information, see [Encrypting Configuration Information Using Protected Configuration](https://docs.microsoft.com/previous-versions/aspnet/53tyfkaw(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="13e22-168">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。</span><span class="sxs-lookup"><span data-stu-id="13e22-168">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span></span>  
  
 <span data-ttu-id="13e22-169">- 或 -</span><span class="sxs-lookup"><span data-stu-id="13e22-169">-or-</span></span>  
  
 <span data-ttu-id="13e22-170">将设置保存到配置文件时发生一般性失败。</span><span class="sxs-lookup"><span data-stu-id="13e22-170">There was a general failure saving the settings to the configuration file.</span></span></exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Configuration.SettingsSerializeAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit&#xA;override this.Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="localFileSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="13e22-171">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</span><span class="sxs-lookup"><span data-stu-id="13e22-171">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="properties"><span data-ttu-id="13e22-172">一个包含设置属性组（将要检索该组中的值）的 <see cref="T:System.Configuration.SettingsPropertyCollection" />。</span><span class="sxs-lookup"><span data-stu-id="13e22-172">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span></span></param>
        <summary><span data-ttu-id="13e22-173">尝试从相同应用程序的早期版本迁移以前的用户范围设置。</span><span class="sxs-lookup"><span data-stu-id="13e22-173">Attempts to migrate previous user-scoped settings from a previous version of the same application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13e22-174"><xref:System.Configuration.LocalFileSettingsProvider> 在单独的操作中迁移本地和漫游设置。</span><span class="sxs-lookup"><span data-stu-id="13e22-174"><xref:System.Configuration.LocalFileSettingsProvider> migrates the local and roaming settings in separate operations.</span></span>  
  
 <span data-ttu-id="13e22-175"><xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>对于已应用到它的每个应用程序设置 <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> ，或从派生自的整个设置包装器类取消该方法 <xref:System.Configuration.ApplicationSettingsBase> 。</span><span class="sxs-lookup"><span data-stu-id="13e22-175">The <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method is suppressed for every application setting that has the <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> applied to it, or to the entire settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 <span data-ttu-id="13e22-176">这种方法的调用方式取决于正在升级的应用程序的类型：</span><span class="sxs-lookup"><span data-stu-id="13e22-176">This way this method is called depends on the type of application that is being upgraded:</span></span>  
  
-   <span data-ttu-id="13e22-177">应用程序的每个版本 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 都存储在其自身的独立安装目录中。</span><span class="sxs-lookup"><span data-stu-id="13e22-177">Each version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is stored in its own isolated installation directory.</span></span> <span data-ttu-id="13e22-178">安装新版本的 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 应用程序并首次运行新版本后，内部逻辑将自动调用 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> 以将所有常见的应用程序设置迁移到新版本。</span><span class="sxs-lookup"><span data-stu-id="13e22-178">After a new version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is installed, and when the new version is first run, internal logic will automatically call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> to migrate all common application settings to the new version.</span></span> <span data-ttu-id="13e22-179">有关详细信息，请参阅 [ClickOnce 和应用程序设置](/visualstudio/deployment/clickonce-and-application-settings)。</span><span class="sxs-lookup"><span data-stu-id="13e22-179">For more information, see [ClickOnce and Application Settings](/visualstudio/deployment/clickonce-and-application-settings).</span></span>  
  
-   <span data-ttu-id="13e22-180">标准 Windows 窗体和控制台应用程序必须手动调用 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> ，因为没有常规的自动方式来确定何时首次运行此类应用程序。</span><span class="sxs-lookup"><span data-stu-id="13e22-180">Standard Windows Forms and console applications must manually call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, because there is not a general, automatic way to determine when such an application is first run.</span></span> <span data-ttu-id="13e22-181">实现此目的的两种常见方法是从安装程序中或使用应用程序本身中的，使用持久性属性，通常名称类似于 `IsFirstRun` 。</span><span class="sxs-lookup"><span data-stu-id="13e22-181">The two common ways to do this are either from the installation program or using from the application itself, using a persisted property, often named something like `IsFirstRun`.</span></span>  
  
 <span data-ttu-id="13e22-182">请注意，对于更高版本，若要迁移应用程序设置，它还必须能够加载和读取旧版本的应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="13e22-182">Note that for the newer version to migrate application settings, it must be able to also load and read the older version of the application settings.</span></span> <span data-ttu-id="13e22-183">因此，它必须包含与新的和早期版本的应用程序兼容的包装类。</span><span class="sxs-lookup"><span data-stu-id="13e22-183">Therefore, it must contain wrapper classes compatible with both the new and previous versions of the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="13e22-184">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。</span><span class="sxs-lookup"><span data-stu-id="13e22-184">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span></span>  
  
 <span data-ttu-id="13e22-185">- 或 -</span><span class="sxs-lookup"><span data-stu-id="13e22-185">-or-</span></span>  
  
 <span data-ttu-id="13e22-186">未能访问早期版本的配置文件。</span><span class="sxs-lookup"><span data-stu-id="13e22-186">The previous version of the configuration file could not be accessed.</span></span></exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>
