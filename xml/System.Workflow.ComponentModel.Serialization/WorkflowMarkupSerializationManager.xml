<Type Name="WorkflowMarkupSerializationManager" FullName="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ab3435a4ea98263a3285aecc8d16b9e49b5ad89" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78807734" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowMarkupSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowMarkupSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowMarkupSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowMarkupSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <TypeSignature Language="F#" Value="type WorkflowMarkupSerializationManager = class&#xA;    interface IDesignerSerializationManager&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="cee51-101">管理工作流的与可扩展应用程序标记语言 (XAML) 之间的设计时序列化。</span><span class="sxs-lookup"><span data-stu-id="cee51-101">Manages design-time serialization to and from extensible Application Markup Language (XAML) for workflows.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="cee51-102">工作流或活动设计器可以使用 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> 来访问对于管理设计时序列化过程很有用的服务。</span><span class="sxs-lookup"><span data-stu-id="cee51-102">A workflow or activity designer can use <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> to access services useful to managing design-time serialization processes.</span></span> <span data-ttu-id="cee51-103">例如，<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> 可用于创建对象、查找类型、标识对象以及自定义特定类型的序列化。</span><span class="sxs-lookup"><span data-stu-id="cee51-103">For example, <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> can be used to create objects, look up types, identify objects, and customize the serialization of particular types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowMarkupSerializationManager (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.#ctor(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowMarkupSerializationManager(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" Usage="new System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager manager" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="cee51-104">初始化 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 时所使用的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-104">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> with which to initialize the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</span></span></param>
        <summary><span data-ttu-id="cee51-105">使用指定的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> 初始化 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cee51-105">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> class by using the specified <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSerializationProvider">
      <MemberSignature Language="C#" Value="public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member AddSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit&#xA;override this.AddSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="workflowMarkupSerializationManager.AddSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cee51-106">要添加的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-106">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to add.</span></span></param>
        <summary><span data-ttu-id="cee51-107">向序列化管理器添加指定的序列化提供程序。</span><span class="sxs-lookup"><span data-stu-id="cee51-107">Adds the specified serialization provider to the serialization manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee51-108"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider%2A> 向序列化管理器添加自定义的序列化提供程序。</span><span class="sxs-lookup"><span data-stu-id="cee51-108"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider%2A> adds a custom serialization provider to the serialization manager.</span></span> <span data-ttu-id="cee51-109">序列化提供程序可以为特定类型的对象或特定类型的对象集提供自定义序列化程序。</span><span class="sxs-lookup"><span data-stu-id="cee51-109">Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</span></span> <span data-ttu-id="cee51-110">在序列化期间，将查询每个自定义序列化提供程序，以便为特定数据类型返回一个序列化程序（如果自定义序列化提供程序可以提供序列化程序的话）。</span><span class="sxs-lookup"><span data-stu-id="cee51-110">During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</span></span> <span data-ttu-id="cee51-111">序列化管理器在为特定类型使用默认序列化程序之前，使用此方法提供的自定义序列化程序。</span><span class="sxs-lookup"><span data-stu-id="cee51-111">The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.ContextStack Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ContextStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::ContextStack ^ Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.ComponentModel.Design.Serialization.ContextStack" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee51-112">获取基于堆栈的、用户定义的存储区域，该区域对于序列化程序之间的通信十分有用。</span><span class="sxs-lookup"><span data-stu-id="cee51-112">Gets a stack-based, user-defined storage area that is useful for communication between serializers.</span></span></summary>
        <value><span data-ttu-id="cee51-113">一个 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />，其中包含有关当前要序列化的对象的信息。</span><span class="sxs-lookup"><span data-stu-id="cee51-113">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that contains information about the current object being serialized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee51-114">部分序列化程序需要有关对象的上下文的信息，以便正确地保留其状态。</span><span class="sxs-lookup"><span data-stu-id="cee51-114">Some serializers require information about the context of an object to correctly persist their state.</span></span> <span data-ttu-id="cee51-115"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context%2A> 使序列化程序可以设置有关要序列化到 <xref:System.ComponentModel.Design.Serialization.ContextStack> 中（供其他序列化程序访问）的对象的上下文的数据。</span><span class="sxs-lookup"><span data-stu-id="cee51-115"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context%2A> enables a serializer to set data about the context of an object that it is serializing to a <xref:System.ComponentModel.Design.Serialization.ContextStack> where another serializer can access it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="abstract member GetSerializer : Type * Type -&gt; obj&#xA;override this.GetSerializer : Type * Type -&gt; obj" Usage="workflowMarkupSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="cee51-116">要为其检索序列化程序的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-116">The <see cref="T:System.Type" /> for which to retrieve the serializer.</span></span></param>
        <param name="serializerType"><span data-ttu-id="cee51-117">要检索的序列化程序的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-117">The <see cref="T:System.Type" /> of the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="cee51-118">为指定类型的对象返回指定类型的序列化程序。</span><span class="sxs-lookup"><span data-stu-id="cee51-118">Returns a serializer of the specified type for an object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="cee51-119">请求的序列化程序；如果找不到适当的序列化程序，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="cee51-119">The requested serializer, or a null reference (<see langword="Nothing" /> in Visual Basic) if no appropriate serializer can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="workflowMarkupSerializationManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="cee51-120">要返回的服务对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-120">The <see cref="T:System.Type" /> of service object to return.</span></span></param>
        <summary><span data-ttu-id="cee51-121">返回指定类型的服务对象。</span><span class="sxs-lookup"><span data-stu-id="cee51-121">Returns a service object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="cee51-122">类型为 <paramref name="serviceType" /> 的服务对象；如果不存在类型为 <see langword="Nothing" /> 的服务对象，则为空引用（在 Visual Basic 中为 <paramref name="serviceType" />）。</span><span class="sxs-lookup"><span data-stu-id="cee51-122">A service object of type <paramref name="serviceType" />, or a null reference (<see langword="Nothing" /> in Visual Basic) if there is no service object of type <paramref name="serviceType" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cee51-123">返回与指定名称关联的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-123">Returns the <see cref="T:System.Type" /> associated with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="workflowMarkupSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="cee51-124">要加载的 <see cref="T:System.Type" /> 的完全限定名。</span><span class="sxs-lookup"><span data-stu-id="cee51-124">The fully-qualified name of the <see cref="T:System.Type" /> to load.</span></span></param>
        <summary><span data-ttu-id="cee51-125">返回指定名称的类型。</span><span class="sxs-lookup"><span data-stu-id="cee51-125">Returns a type of the specified name.</span></span></summary>
        <returns><span data-ttu-id="cee51-126">与 <see cref="T:System.Type" /> 关联的 <paramref name="typeName" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-126">The <see cref="T:System.Type" /> associated with <paramref name="typeName" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (System.Xml.XmlQualifiedName xmlQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(class System.Xml.XmlQualifiedName xmlQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (xmlQualifiedName As XmlQualifiedName) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::Xml::XmlQualifiedName ^ xmlQualifiedName);" />
      <MemberSignature Language="F#" Value="override this.GetType : System.Xml.XmlQualifiedName -&gt; Type" Usage="workflowMarkupSerializationManager.GetType xmlQualifiedName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlQualifiedName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="xmlQualifiedName"><span data-ttu-id="cee51-127">要加载的类型的 <see cref="T:System.Xml.XmlQualifiedName" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-127">The <see cref="T:System.Xml.XmlQualifiedName" /> of the type to load.</span></span></param>
        <summary><span data-ttu-id="cee51-128">返回与指定 XML 限定名关联的类型。</span><span class="sxs-lookup"><span data-stu-id="cee51-128">Returns that type associated with the specified XML qualified name.</span></span></summary>
        <returns><span data-ttu-id="cee51-129">与 <see cref="T:System.Type" /> 关联的 <paramref name="xmlQualifiedName" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-129">The <see cref="T:System.Type" /> associated with <paramref name="xmlQualifiedName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee51-130">XML 限定名是命名空间限定的本地名称，格式为 namespace:localname。</span><span class="sxs-lookup"><span data-stu-id="cee51-130">An XML qualified name is a namespace-qualified local name, in the format of namespace:localname.</span></span>  
  
 <span data-ttu-id="cee51-131">由于前缀只在保留或读取 XML 时需要，因此它们对于 <xref:System.Xml.XmlQualifiedName> 对象是不相关的。</span><span class="sxs-lookup"><span data-stu-id="cee51-131">Because prefixes are only required when XML is persisted or read, they are irrelevant for <xref:System.Xml.XmlQualifiedName> objects.</span></span> <span data-ttu-id="cee51-132">确保本地名称不包含“:”是用户的责任</span><span class="sxs-lookup"><span data-stu-id="cee51-132">It is the responsibility of the user to ensure the local name does not contain a ":"</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cee51-133"><paramref name="xmlQualifiedName" /> 包含空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="cee51-133"><paramref name="xmlQualifiedName" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlQualifiedName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlQualifiedName GetXmlQualifiedName (Type type, out string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlQualifiedName GetXmlQualifiedName(class System.Type type, [out] string&amp; prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetXmlQualifiedName(System.Type,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlQualifiedName (type As Type, ByRef prefix As String) As XmlQualifiedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlQualifiedName ^ GetXmlQualifiedName(Type ^ type, [Runtime::InteropServices::Out] System::String ^ % prefix);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlQualifiedName : Type * string -&gt; System.Xml.XmlQualifiedName&#xA;override this.GetXmlQualifiedName : Type * string -&gt; System.Xml.XmlQualifiedName" Usage="workflowMarkupSerializationManager.GetXmlQualifiedName (type, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="prefix" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="cee51-134">要返回其 XML 限定名的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-134">The <see cref="T:System.Type" /> for which to return the XML-qualified name.</span></span></param>
        <param name="prefix"><span data-ttu-id="cee51-135">当此方法返回时，包含限定名的 XML 前缀；如果没有定义前缀，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="cee51-135">When this method returns, contains the XML prefix for the qualified name or an empty string if no prefix is defined.</span></span> <span data-ttu-id="cee51-136">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="cee51-136">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="cee51-137">返回与指定类型关联的 XML 限定名。</span><span class="sxs-lookup"><span data-stu-id="cee51-137">Returns the XML-qualified name associated with the specified type.</span></span></summary>
        <returns><span data-ttu-id="cee51-138">与 <see cref="T:System.Xml.XmlQualifiedName" /> 关联的 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-138">The <see cref="T:System.Xml.XmlQualifiedName" /> associated with <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cee51-139"><paramref name="type" /> 包含空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="cee51-139"><paramref name="type" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LocalAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LocalAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly LocalAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.LocalAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ LocalAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalAssembly : System.Reflection.Assembly with get, set" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.LocalAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee51-140">获取或设置与当前序列化程序关联的程序集。</span><span class="sxs-lookup"><span data-stu-id="cee51-140">Gets or sets the assembly that is associated with the current serializer.</span></span></summary>
        <value><span data-ttu-id="cee51-141">与当前序列化程序关联的 <see cref="T:System.Reflection.Assembly" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-141">The <see cref="T:System.Reflection.Assembly" /> that is associated with the current serializer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit&#xA;override this.RemoveSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="workflowMarkupSerializationManager.RemoveSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cee51-142">要移除的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-142">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span></span> <span data-ttu-id="cee51-143">必须已使用 <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" /> 添加此提供程序。</span><span class="sxs-lookup"><span data-stu-id="cee51-143">This provider must be added using <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span></span></param>
        <summary><span data-ttu-id="cee51-144">从 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> 移除自定义的序列化提供程序。</span><span class="sxs-lookup"><span data-stu-id="cee51-144">Removes a custom serialization provider from the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="public void ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportError (errorInformation As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReportError(System::Object ^ errorInformation);" />
      <MemberSignature Language="F#" Value="abstract member ReportError : obj -&gt; unit&#xA;override this.ReportError : obj -&gt; unit" Usage="workflowMarkupSerializationManager.ReportError errorInformation" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation"><span data-ttu-id="cee51-145">要报告的错误。</span><span class="sxs-lookup"><span data-stu-id="cee51-145">The error to report.</span></span></param>
        <summary><span data-ttu-id="cee51-146">报告序列化中的错误。</span><span class="sxs-lookup"><span data-stu-id="cee51-146">Reports an error in serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee51-147">`errorInformation` 可以为任意对象类型。</span><span class="sxs-lookup"><span data-stu-id="cee51-147">`errorInformation` can be of any object type.</span></span> <span data-ttu-id="cee51-148">如果它是一个异常，则将提取该异常的消息并报告给用户。</span><span class="sxs-lookup"><span data-stu-id="cee51-148">If it is an exception, the message of the exception is extracted and reported to the user.</span></span> <span data-ttu-id="cee51-149">如果它是任何其他类型，则将调用 <xref:System.Object.ToString%2A>，向用户显示该信息。</span><span class="sxs-lookup"><span data-stu-id="cee51-149">If it is any other type, <xref:System.Object.ToString%2A> is called to display the information to the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationManager">
      <MemberSignature Language="C#" Value="protected internal System.ComponentModel.Design.Serialization.IDesignerSerializationManager SerializationManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.IDesignerSerializationManager SerializationManager" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.SerializationManager" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property SerializationManager As IDesignerSerializationManager" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ SerializationManager { System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ get(); void set(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializationManager : System.ComponentModel.Design.Serialization.IDesignerSerializationManager with get, set" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.SerializationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee51-150">获取或设置与当前序列化程序一起使用的序列化管理器。</span><span class="sxs-lookup"><span data-stu-id="cee51-150">Gets or sets the serialization manager to use with the current serializer.</span></span></summary>
        <value><span data-ttu-id="cee51-151">要与当前序列化程序一起使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-151">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use with the current serializer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CreateInstance (type As Type, arguments As ICollection, name As String, addToContainer As Boolean) As Object Implements IDesignerSerializationManager.CreateInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj&#xA;override this.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="workflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="cee51-152">要创建的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-152">The <see cref="T:System.Type" /> to create.</span></span></param>
        <param name="arguments"><span data-ttu-id="cee51-153">一个 <see cref="T:System.Collections.ICollection" />，其中包含 <paramref name="type" /> 的自变量。</span><span class="sxs-lookup"><span data-stu-id="cee51-153">An <see cref="T:System.Collections.ICollection" /> that contains the arguments for <paramref name="type" />.</span></span></param>
        <param name="name"><span data-ttu-id="cee51-154">对象的名称。</span><span class="sxs-lookup"><span data-stu-id="cee51-154">The name of the object.</span></span> <span data-ttu-id="cee51-155">此名称可用于以后通过 <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" /> 访问该对象。</span><span class="sxs-lookup"><span data-stu-id="cee51-155">This name can be used to access the object later using <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />.</span></span> <span data-ttu-id="cee51-156">如果传递了空引用（在 Visual Basic 中为 <see langword="Nothing" />），则仍会创建对象，但不能按名称访问该对象。</span><span class="sxs-lookup"><span data-stu-id="cee51-156">If a null reference (<see langword="Nothing" /> in Visual Basic) is passed, the object is still created but cannot be accessed by name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="cee51-157">为 <see langword="true" /> 则将该对象添加到设计容器；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-157"><see langword="true" /> to add the object to the design container; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cee51-158">创建指定类型的实例并将其添加到已命名实例的集合中。</span><span class="sxs-lookup"><span data-stu-id="cee51-158">Creates an instance of the specified type and adds it to a collection of named instances.</span></span></summary>
        <returns><span data-ttu-id="cee51-159">新创建的对象。</span><span class="sxs-lookup"><span data-stu-id="cee51-159">The newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee51-160">如果将 `addToContainer` 设置为 `true`，则该对象必须实现 <xref:System.ComponentModel.IComponent> 才能使此设置生效。</span><span class="sxs-lookup"><span data-stu-id="cee51-160">If `addToContainer` is set to `true`, the object must implement <xref:System.ComponentModel.IComponent> for this to have any effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance : string -&gt; obj&#xA;override this.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance : string -&gt; obj" Usage="workflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cee51-161">要检索的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="cee51-161">The name of the object to retrieve.</span></span></param>
        <summary><span data-ttu-id="cee51-162">返回具有指定名称的已创建对象的实例。</span><span class="sxs-lookup"><span data-stu-id="cee51-162">Returns an instance of a created object of the specified name.</span></span></summary>
        <returns><span data-ttu-id="cee51-163">具有给定名称的对象的实例；如果按该名称找不到任何对象，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-163">An instance of the object with the given name, or a null reference (<see langword="Nothing" /> in Visual Basic) if no object by that name can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee51-164">必须已通过先前对 `name` 的调用设置了 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cee51-164">`name` must be set through a prior call to <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName : obj -&gt; string&#xA;override this.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName : obj -&gt; string" Usage="workflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cee51-165">要检索其名称的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="cee51-165">The <see cref="T:System.Object" /> for which to retrieve the name.</span></span></param>
        <summary><span data-ttu-id="cee51-166">返回指定对象的名称。</span><span class="sxs-lookup"><span data-stu-id="cee51-166">Returns the name of the specified object.</span></span></summary>
        <returns><span data-ttu-id="cee51-167">对象的名称；如果对象未命名，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="cee51-167">The name of the object, or a null reference (<see langword="Nothing" /> in Visual Basic) if the object is unnamed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties : System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee51-168">获取可通过可用序列化程序进行序列化的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="cee51-168">Gets a collection of properties that can be serialized with available serializers.</span></span></summary>
        <value><span data-ttu-id="cee51-169">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其中包含要序列化的属性。</span><span class="sxs-lookup"><span data-stu-id="cee51-169">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties to serialize.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee51-170">此属性可包含空集合。</span><span class="sxs-lookup"><span data-stu-id="cee51-170">This property can contain an empty collection.</span></span> <span data-ttu-id="cee51-171">序列化程序无论如何也不应假定存在任何属性。</span><span class="sxs-lookup"><span data-stu-id="cee51-171">A serializer should never assume that any properties exist.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName" />
      <MemberSignature Language="VB.NET" Value="Custom Event ResolveName As ResolveNameEventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventHandler " Usage="member this.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee51-172">当 <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> 无法在序列化管理器的名称表中找到指定名称时发生。</span><span class="sxs-lookup"><span data-stu-id="cee51-172">Occurs when <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="cee51-173">此事件为序列化程序提供按需创建对象的方法，以便序列化程序不必通过依赖项执行对象创建。</span><span class="sxs-lookup"><span data-stu-id="cee51-173">This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="cee51-174">此事件的委托将在序列化或反序列化完成后立即清除。</span><span class="sxs-lookup"><span data-stu-id="cee51-174">The delegate for this event is cleared immediately after serialization or deserialization is complete.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Custom Event SerializationComplete As EventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete : EventHandler " Usage="member this.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cee51-175">在序列化完成时发生。</span><span class="sxs-lookup"><span data-stu-id="cee51-175">Occurs when serialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="cee51-176">在序列化或反序列化完成时引发该事件。</span><span class="sxs-lookup"><span data-stu-id="cee51-176">This event is raised when serialization or deserialization is complete.</span></span>

<span data-ttu-id="cee51-177">通常情况下，序列化代码被编写为发出序列化数据，并且通常不要求与状态相关的检查和处理。</span><span class="sxs-lookup"><span data-stu-id="cee51-177">Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</span></span> <span data-ttu-id="cee51-178">如果有必要在整个序列化过程中保留状态数据，则可以通过序列化程序设置并访问这些数据，序列化程序可侦听 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SerializationComplete> 事件，并在序列化之后清除这些数据。</span><span class="sxs-lookup"><span data-stu-id="cee51-178">If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SerializationComplete> event, and clear the data after serialization.</span></span> <span data-ttu-id="cee51-179">在序列化之后还原正确的状态很重要，因为序列化程序在序列化过程中可以被重用，而剩余的状态数据或打开的流可能不正确。</span><span class="sxs-lookup"><span data-stu-id="cee51-179">Restoring the proper state after serialization is important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName : obj * string -&gt; unit&#xA;override this.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName : obj * string -&gt; unit" Usage="workflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName (instance, name)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="cee51-180">要命名的对象。</span><span class="sxs-lookup"><span data-stu-id="cee51-180">The object to name.</span></span></param>
        <param name="name"><span data-ttu-id="cee51-181">要分配给对象的名称。</span><span class="sxs-lookup"><span data-stu-id="cee51-181">The name to assign to the object.</span></span></param>
        <summary><span data-ttu-id="cee51-182">设置指定的现有对象的名称。</span><span class="sxs-lookup"><span data-stu-id="cee51-182">Sets the name of the specified existing object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cee51-183">如果需要在不使用 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName(System.Object,System.String)> 的情况下创建然后命名对象的实例，则 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType> 十分有用。</span><span class="sxs-lookup"><span data-stu-id="cee51-183"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName(System.Object,System.String)> is useful when you need to create and then name an instance of an object without using <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
