<Type Name="AddInToken" FullName="System.AddIn.Hosting.AddInToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f2306e6380d1b6367cf0fa8347535c90a03c97f" /><Meta Name="ms.sourcegitcommit" Value="8fab45da9f77f8bbc3ae5817515b40ac6ff205a2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/20/2021" /><Meta Name="ms.locfileid" Value="98617656" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInToken : System.Collections.Generic.IEnumerable&lt;System.AddIn.Hosting.QualificationDataItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AddInToken extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.AddIn.Hosting.QualificationDataItem&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInToken" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInToken&#xA;Implements IEnumerable(Of QualificationDataItem)" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInToken sealed : System::Collections::Generic::IEnumerable&lt;System::AddIn::Hosting::QualificationDataItem&gt;" />
  <TypeSignature Language="F#" Value="type AddInToken = class&#xA;    interface seq&lt;QualificationDataItem&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.AddIn.Hosting.QualificationDataItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b02e-101">表示可激活的外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-101">Represents an add-in that can be activated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-102"><xref:System.AddIn.Hosting.AddInToken>对象表示可激活的外接程序及其关联的管道段。</span><span class="sxs-lookup"><span data-stu-id="2b02e-102">An <xref:System.AddIn.Hosting.AddInToken> object represents an add-in, and its associated pipeline segments, that can be activated.</span></span> <span data-ttu-id="2b02e-103">标记包含它所表示的外接程序的名称、程序集名称、说明、发布者和版本。</span><span class="sxs-lookup"><span data-stu-id="2b02e-103">The token contains the name, assembly name, description, publisher, and version of the add-in that it represents.</span></span>  
  
 <span data-ttu-id="2b02e-104">使用 <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=nameWithType> 方法获取表示外接程序的标记的集合，这些外接程序的管道与指定的宿主视图匹配。</span><span class="sxs-lookup"><span data-stu-id="2b02e-104">Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=nameWithType> method to get a collection of tokens that represent add-ins whose pipelines match a specified host view.</span></span> <span data-ttu-id="2b02e-105">使用 <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=nameWithType> 方法获取标记的集合，该集合表示与指定宿主视图匹配的指定外接程序的所有管道。</span><span class="sxs-lookup"><span data-stu-id="2b02e-105">Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=nameWithType> method to get a collection of tokens that represent all the pipelines for a specified add-in that match a specified host view.</span></span>  
  
 <span data-ttu-id="2b02e-106">若要激活外接程序，请将表示所需外接程序的令牌传递给 <xref:System.AddIn.Hosting.AddInToken.Activate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2b02e-106">To activate an add-in, pass the token that represents the desired add-in to the <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method.</span></span> <span data-ttu-id="2b02e-107">此方法返回表示外接程序的宿主视图的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="2b02e-107">This method returns an instance of the type that represents the host view of the add-in.</span></span>  
  
 <span data-ttu-id="2b02e-108"><xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法具有多个重载。</span><span class="sxs-lookup"><span data-stu-id="2b02e-108">The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method has several overloads.</span></span> <span data-ttu-id="2b02e-109">当你使用不需要应用程序域名称作为其参数之一的重载时，将自动创建外接程序的新应用程序域。</span><span class="sxs-lookup"><span data-stu-id="2b02e-109">When you use an overload that does not require the name of an application domain as one of its parameters, a new application domain for the add-in is automatically created.</span></span>  
  
 <span data-ttu-id="2b02e-110">您可以使用 Language-Integrated 查询 (LINQ) 扩展方法在上执行查询，并将 <xref:System.AddIn.Hosting.AddInToken> 令牌视为结构的集合 <xref:System.AddIn.Hosting.QualificationDataItem> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-110">You can use Language-Integrated Query (LINQ) extension methods to perform queries on an <xref:System.AddIn.Hosting.AddInToken>, treating the token as a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-111">本部分包含两个示例。</span><span class="sxs-lookup"><span data-stu-id="2b02e-111">This section contains two examples.</span></span> <span data-ttu-id="2b02e-112">第一个示例将激活使用方法选择的外接程序 `ChooseAddIn` ，第二个示例演示 `ChooseAddIn` 方法。</span><span class="sxs-lookup"><span data-stu-id="2b02e-112">The first example activates an add-in that has been selected by using the `ChooseAddIn` method, and the second example shows the `ChooseAddIn` method.</span></span>  
  
 <span data-ttu-id="2b02e-113">**示例 1**</span><span class="sxs-lookup"><span data-stu-id="2b02e-113">**Example 1**</span></span>  
  
 <span data-ttu-id="2b02e-114">下面的示例演示如何使用标记激活外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-114">The following example shows how to activate an add-in with a token.</span></span>  
  
 [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]
 [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]  
  
 <span data-ttu-id="2b02e-115">**示例 2**</span><span class="sxs-lookup"><span data-stu-id="2b02e-115">**Example 2**</span></span>  
  
 <span data-ttu-id="2b02e-116">下面的示例演示了 `ChooseAddIn` 用于枚举集合的自定义方法 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-116">The following example shows the custom `ChooseAddIn` method, which enumerates an <xref:System.AddIn.Hosting.AddInToken> collection.</span></span> <span data-ttu-id="2b02e-117">用户从该集合中选择一个令牌以激活相应的外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-117">The user selects a token from this collection to activate the corresponding add-in.</span></span>  
  
 [!code-csharp[AddInP3Host#13](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#13)]
 [!code-vb[AddInP3Host#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/previous-versions/dotnet/netframework-4.0/bb384200(v=vs.100)"><span data-ttu-id="2b02e-118">Add-Ins 和扩展性</span><span class="sxs-lookup"><span data-stu-id="2b02e-118">Add-Ins and Extensibility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Activate&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b02e-119">激活外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-119">Activates an add-in.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInEnvironment environment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInEnvironment environment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (environment As AddInEnvironment) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInEnvironment ^ environment);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInEnvironment -&gt; 'T" Usage="addInToken.Activate environment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="environment" Type="System.AddIn.Hosting.AddInEnvironment" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2b02e-120">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="2b02e-120">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="environment"><span data-ttu-id="2b02e-121">包含原始外接程序的应用程序域和进程。</span><span class="sxs-lookup"><span data-stu-id="2b02e-121">The application domain and process that contains the original add-in.</span></span></param>
        <summary><span data-ttu-id="2b02e-122">在另一个外接程序的环境中激活一个外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-122">Activates an add-in in the environment of another add-in.</span></span></summary>
        <returns><span data-ttu-id="2b02e-123">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="2b02e-123">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-124">此方法重载会激活同一个应用程序域中的外接程序，并将作为从中获取的外接程序进行处理 `environment` 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-124">This method overload activates the add-in in the same application domain and process as the add-in from which `environment` was obtained.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-125">下面的示例在具有指定安全级别的自动生成的应用程序域中激活一个外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-125">The following example activates one add-in in an automatically generated application domain with a specified security level.</span></span> <span data-ttu-id="2b02e-126">然后，它将在同一应用程序域中激活第二个外接程序，并使用第一个外接程序的对象处理第一个外接程序 <xref:System.AddIn.Hosting.AddInEnvironment> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-126">It then activates a second add-in in the same application domain and process as the first by using the first add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object.</span></span>  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/previous-versions/dotnet/netframework-4.0/bb384200(v=vs.100)"><span data-ttu-id="2b02e-127">Add-Ins 和扩展性</span><span class="sxs-lookup"><span data-stu-id="2b02e-127">Add-Ins and Extensibility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(valuetype System.AddIn.Hosting.AddInSecurityLevel trustLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (trustLevel As AddInSecurityLevel) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInSecurityLevel trustLevel);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInSecurityLevel -&gt; 'T" Usage="addInToken.Activate trustLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="trustLevel" Type="System.AddIn.Hosting.AddInSecurityLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2b02e-128">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="2b02e-128">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="trustLevel"><span data-ttu-id="2b02e-129">用于指定信任级别的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="2b02e-129">One of the enumeration values that specifies the trust level.</span></span></param>
        <summary><span data-ttu-id="2b02e-130">在新应用程序域中激活具有指定信任级别的外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-130">Activates an add-in with a specified trust level in a new application domain.</span></span></summary>
        <returns><span data-ttu-id="2b02e-131">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="2b02e-131">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-132">此方法重载将外接程序加载到自动生成的应用程序域中。</span><span class="sxs-lookup"><span data-stu-id="2b02e-132">This method overload loads the add-in into an automatically generated application domain.</span></span> <span data-ttu-id="2b02e-133">如果要指定新应用程序域的名称，请使用 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="2b02e-133">If you want to specify a name for the new application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload.</span></span>  
  
 <span data-ttu-id="2b02e-134">此方法将应用程序域的基目录设置为外接程序程序集的位置。</span><span class="sxs-lookup"><span data-stu-id="2b02e-134">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="2b02e-135">它还查找配置文件 [addinassemblyname] .dll.config，如果找到该文件，则将其设置为新应用程序域的配置文件。</span><span class="sxs-lookup"><span data-stu-id="2b02e-135">It also looks for the configuration file [addinassemblyname].dll.config and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-136">下面的示例演示如何在具有指定安全级别的自动生成的应用程序域中激活由所选标记标识的外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-136">The following example shows how to activate an add-in, identified by the chosen token, in an automatically generated application domain with a specified security level.</span></span>  
  
 [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]
 [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/previous-versions/dotnet/netframework-4.0/bb384200(v=vs.100)"><span data-ttu-id="2b02e-137">Add-Ins 和扩展性</span><span class="sxs-lookup"><span data-stu-id="2b02e-137">Add-Ins and Extensibility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (AppDomain target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AppDomain target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (target As AppDomain) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(AppDomain ^ target);" />
      <MemberSignature Language="F#" Value="member this.Activate : AppDomain -&gt; 'T" Usage="addInToken.Activate target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2b02e-138">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="2b02e-138">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="target"><span data-ttu-id="2b02e-139">应在其中激活外接程序的应用程序域。</span><span class="sxs-lookup"><span data-stu-id="2b02e-139">The application domain that the add-in should be activated in.</span></span></param>
        <summary><span data-ttu-id="2b02e-140">在现有应用程序域中激活外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-140">Activates an add-in in an existing application domain.</span></span></summary>
        <returns><span data-ttu-id="2b02e-141">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="2b02e-141">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-142">若要在自动生成的应用程序域中激活外接程序，请使用 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> 重载生成具有指定安全级别或重载的新应用程序域， <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> 以包含应用程序域的友好名称。</span><span class="sxs-lookup"><span data-stu-id="2b02e-142">To activate an add-in in an automatically generated application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload to generate a new application domain with a specified security level or the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload to include a friendly name for the application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-143">下面的示例在其他外接程序所使用的应用程序域中激活外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-143">The following example activates an add-in in an application domain that is being used by another add-in.</span></span> <span data-ttu-id="2b02e-144">第一个外接程序的代码在类中提供 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-144">The code for the first add-in is provided in the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]
 [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2b02e-145">需要完全信任权限。</span><span class="sxs-lookup"><span data-stu-id="2b02e-145">Full-trust permission is demanded.</span></span> <span data-ttu-id="2b02e-146">调用链中的调用方没有足够权限。</span><span class="sxs-lookup"><span data-stu-id="2b02e-146">A caller in the call chain does not have sufficient permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.Security.PermissionSet permissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.Security.PermissionSet permissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (permissions As PermissionSet) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::Security::PermissionSet ^ permissions);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.Security.PermissionSet -&gt; 'T" Usage="addInToken.Activate permissions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="permissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2b02e-147">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="2b02e-147">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="permissions"><span data-ttu-id="2b02e-148">授予外接程序的权限。</span><span class="sxs-lookup"><span data-stu-id="2b02e-148">The permissions granted for the add-in.</span></span></param>
        <summary><span data-ttu-id="2b02e-149">在新应用程序域中激活具有指定权限集的外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-149">Activates an add-in with a specified permission set in a new application domain.</span></span></summary>
        <returns><span data-ttu-id="2b02e-150">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="2b02e-150">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-151">此方法重载将外接程序加载到自动生成的应用程序域中。</span><span class="sxs-lookup"><span data-stu-id="2b02e-151">This method overload loads the add-in into an automatically generated application domain.</span></span> <span data-ttu-id="2b02e-152">它将应用程序域的基目录设置为外接程序程序集的位置。</span><span class="sxs-lookup"><span data-stu-id="2b02e-152">It sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="2b02e-153">它还查找配置文件， `[addinassemblyname].dll.config` 如果找到，则将其设置为新应用程序域的配置文件。</span><span class="sxs-lookup"><span data-stu-id="2b02e-153">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b02e-154"><paramref name="permissions" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b02e-154"><paramref name="permissions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.AddIn.Hosting.AddInSecurityLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInProcess process, valuetype System.AddIn.Hosting.AddInSecurityLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (process As AddInProcess, level As AddInSecurityLevel) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInProcess ^ process, System::AddIn::Hosting::AddInSecurityLevel level);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInProcess * System.AddIn.Hosting.AddInSecurityLevel -&gt; 'T" Usage="addInToken.Activate (process, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="process" Type="System.AddIn.Hosting.AddInProcess" />
        <Parameter Name="level" Type="System.AddIn.Hosting.AddInSecurityLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2b02e-155">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="2b02e-155">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="process"><span data-ttu-id="2b02e-156">在其中激活外接程序的外部进程。</span><span class="sxs-lookup"><span data-stu-id="2b02e-156">The external process in which to activate the add-in.</span></span></param>
        <param name="level"><span data-ttu-id="2b02e-157">用于指定信任级别的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="2b02e-157">One of the enumeration values that specifies the trust level.</span></span></param>
        <summary><span data-ttu-id="2b02e-158">在外部进程中（且在新应用程序域内）激活具有指定信任级别的外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-158">Activates an add-in in an external process, in a new application domain, and with a specified trust level.</span></span></summary>
        <returns><span data-ttu-id="2b02e-159">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="2b02e-159">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-160">此方法将应用程序域的基目录设置为外接程序程序集的位置。</span><span class="sxs-lookup"><span data-stu-id="2b02e-160">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="2b02e-161">它还查找配置文件， `[addinassemblyname].dll.config` 如果找到，则将其设置为新应用程序域的配置文件。</span><span class="sxs-lookup"><span data-stu-id="2b02e-161">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-162">下面的示例创建一个新进程，并使用完全信任安全级别在该进程中激活外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-162">The following example creates a new process and activates an add-in in that process with a full trust security level.</span></span>  
  
 [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]
 [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.Security.PermissionSet permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInProcess process, class System.Security.PermissionSet permissionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (process As AddInProcess, permissionSet As PermissionSet) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInProcess ^ process, System::Security::PermissionSet ^ permissionSet);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInProcess * System.Security.PermissionSet -&gt; 'T" Usage="addInToken.Activate (process, permissionSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="process" Type="System.AddIn.Hosting.AddInProcess" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2b02e-163">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="2b02e-163">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="process"><span data-ttu-id="2b02e-164">在其中激活外接程序的外部进程。</span><span class="sxs-lookup"><span data-stu-id="2b02e-164">The external process in which to activate the add-in.</span></span></param>
        <param name="permissionSet"><span data-ttu-id="2b02e-165">授予外接程序的必需权限集。</span><span class="sxs-lookup"><span data-stu-id="2b02e-165">The required permission set granted for the add-in.</span></span></param>
        <summary><span data-ttu-id="2b02e-166">在外部进程中（且在新应用程序域内）激活具有指定权限集的外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-166">Activates an add-in in an external process, in a new application domain, and with a specified permission set.</span></span></summary>
        <returns><span data-ttu-id="2b02e-167">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="2b02e-167">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-168">此方法将应用程序域的基目录设置为外接程序程序集的位置。</span><span class="sxs-lookup"><span data-stu-id="2b02e-168">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="2b02e-169">它还查找配置文件， `[addinassemblyname].dll.config` 如果找到，则将其设置为新应用程序域的配置文件。</span><span class="sxs-lookup"><span data-stu-id="2b02e-169">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(valuetype System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (trustLevel As AddInSecurityLevel, appDomainName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInSecurityLevel trustLevel, System::String ^ appDomainName);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInSecurityLevel * string -&gt; 'T" Usage="addInToken.Activate (trustLevel, appDomainName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="trustLevel" Type="System.AddIn.Hosting.AddInSecurityLevel" />
        <Parameter Name="appDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2b02e-170">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="2b02e-170">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="trustLevel"><span data-ttu-id="2b02e-171">用于指定信任级别的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="2b02e-171">One of the enumeration values that specifies the trust level.</span></span></param>
        <param name="appDomainName"><span data-ttu-id="2b02e-172">要分配给新应用程序域的友好名称。</span><span class="sxs-lookup"><span data-stu-id="2b02e-172">The friendly name to assign to the new application domain.</span></span></param>
        <summary><span data-ttu-id="2b02e-173">在具有指定名称和信任级别的新应用程序域中激活外接程序。</span><span class="sxs-lookup"><span data-stu-id="2b02e-173">Activates an add-in in a new application domain with a specified name and trust level.</span></span></summary>
        <returns><span data-ttu-id="2b02e-174">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="2b02e-174">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-175">如果无需指定应用程序域名，请使用 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="2b02e-175">If you do not need to specify an application domain name, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload.</span></span>  
  
 <span data-ttu-id="2b02e-176">此方法将应用程序域的基目录设置为外接程序程序集的位置。</span><span class="sxs-lookup"><span data-stu-id="2b02e-176">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="2b02e-177">它还查找配置文件， `[addinassemblyname].dll.config` 如果找到，则将其设置为新应用程序域的配置文件。</span><span class="sxs-lookup"><span data-stu-id="2b02e-177">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInFullName">
      <MemberSignature Language="C#" Value="public string AddInFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddInFullName" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.AddInFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddInFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddInFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddInFullName : string" Usage="System.AddIn.Hosting.AddInToken.AddInFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b02e-178">获取外接程序的命名空间和类型。</span><span class="sxs-lookup"><span data-stu-id="2b02e-178">Gets the namespace and type of the add-in.</span></span></summary>
        <value><span data-ttu-id="2b02e-179">由命名空间完全限定的外接程序的类型。</span><span class="sxs-lookup"><span data-stu-id="2b02e-179">The type of the add-in, fully qualified by its namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-180">此属性获取外接程序的全名，因为它将由 <xref:System.Type.FullName%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="2b02e-180">This property obtains the full name of the add-in as it would be returned by the <xref:System.Type.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2b02e-181">此值在对象的实例上始终可用 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-181">This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-182">下面的示例显示了控制台的、、、、 <xref:System.AddIn.Hosting.AddInToken.Name%2A> <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A> <xref:System.AddIn.Hosting.AddInToken.Description%2A> <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A> <xref:System.AddIn.Hosting.AddInToken.Publisher%2A> 和 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2b02e-182">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="2b02e-183">此代码示例是为类提供的更大示例的一部分 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-183">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.AssemblyName AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyName ^ AssemblyName { System::Reflection::AssemblyName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : System.Reflection.AssemblyName" Usage="System.AddIn.Hosting.AddInToken.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b02e-184">获取包含外接程序的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2b02e-184">Gets the name of the assembly that contains the add-in.</span></span></summary>
        <value><span data-ttu-id="2b02e-185">程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2b02e-185">The name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-186">此属性获取包含外接程序的程序集的显示名称，因为它将由 <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="2b02e-186">This property obtains the display name of the assembly that contains the add-in, as it would be returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2b02e-187">此值在对象的实例上始终可用 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-187">This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-188">下面的示例显示了控制台的、、、、 <xref:System.AddIn.Hosting.AddInToken.Name%2A> <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A> <xref:System.AddIn.Hosting.AddInToken.Description%2A> <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A> <xref:System.AddIn.Hosting.AddInToken.Publisher%2A> 和 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2b02e-188">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="2b02e-189">此代码示例是为类提供的更大示例的一部分 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-189">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.AddIn.Hosting.AddInToken.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b02e-190">获取外接程序的说明。</span><span class="sxs-lookup"><span data-stu-id="2b02e-190">Gets the description of the add-in.</span></span></summary>
        <value><span data-ttu-id="2b02e-191">外接程序的说明；如果 <see cref="T:System.AddIn.AddInAttribute" /> 特性中未指定该说明，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b02e-191">A description of the add-in, or <see langword="null" /> if the description is not specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-192">此属性获取属性中指定的外接程序的说明 <xref:System.AddIn.AddInAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-192">This property obtains the description of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-193">下面的示例显示了控制台的、、、、 <xref:System.AddIn.Hosting.AddInToken.Name%2A> <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A> <xref:System.AddIn.Hosting.AddInToken.Description%2A> <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A> <xref:System.AddIn.Hosting.AddInToken.Publisher%2A> 和 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2b02e-193">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="2b02e-194">此代码示例是为类提供的更大示例的一部分 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-194">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDirectConnect">
      <MemberSignature Language="C#" Value="public static bool EnableDirectConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableDirectConnect" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.EnableDirectConnect" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableDirectConnect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableDirectConnect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDirectConnect : bool with get, set" Usage="System.AddIn.Hosting.AddInToken.EnableDirectConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b02e-195">获取或设置一个值，该值指示在条件允许时外接程序是否应直接连接到它们的宿主。</span><span class="sxs-lookup"><span data-stu-id="2b02e-195">Gets or sets a value that indicates whether add-ins should be directly connected to their hosts when conditions permit.</span></span></summary>
        <value><span data-ttu-id="2b02e-196">如果外接程序应该直接连接到宿主，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b02e-196"><see langword="true" /> if the add-in should be directly connected to the host; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2b02e-197">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b02e-197">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-198">若要进行直接连接，必须满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="2b02e-198">The following conditions must exist for the direct connection to occur:</span></span>  
  
-   <span data-ttu-id="2b02e-199">此属性必须设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="2b02e-199">This property must be set to `true`.</span></span>  
  
-   <span data-ttu-id="2b02e-200">外接程序必须与主机位于同一个应用程序域中。</span><span class="sxs-lookup"><span data-stu-id="2b02e-200">The add-in must be in the same application domain as the host.</span></span>  
  
-   <span data-ttu-id="2b02e-201">外接程序视图和外接程序的宿主视图必须具有相同的类型。</span><span class="sxs-lookup"><span data-stu-id="2b02e-201">The add-in view and the host view of the add-in must be the same type.</span></span>  
  
-   <span data-ttu-id="2b02e-202">管道的所有段都必须可用。</span><span class="sxs-lookup"><span data-stu-id="2b02e-202">All the segments of the pipeline must be available.</span></span>  
  
 <span data-ttu-id="2b02e-203">建立直接连接后，不会实例化外接程序端适配器和主机端适配器。</span><span class="sxs-lookup"><span data-stu-id="2b02e-203">When a direct connection is established, the add-in-side adapter and the host-side adapter are not instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="addInToken.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2b02e-204">要与当前实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="2b02e-204">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="2b02e-205">确定指定的对象是否等于当前实例。</span><span class="sxs-lookup"><span data-stu-id="2b02e-205">Determines whether a specified object is equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="2b02e-206">如果指定的对象与当前实例相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b02e-206"><see langword="true" /> if the specified object and the current instance are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.AddIn.Hosting.QualificationDataItem&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of QualificationDataItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::AddIn::Hosting::QualificationDataItem&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;" Usage="addInToken.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b02e-207">返回一个与此标记关联的管线段的限定数据枚举数。</span><span class="sxs-lookup"><span data-stu-id="2b02e-207">Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.</span></span></summary>
        <returns><span data-ttu-id="2b02e-208">一个枚举数，可用于循环访问与当前标记关联的管线段的限定数据。</span><span class="sxs-lookup"><span data-stu-id="2b02e-208">An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-209">使用此方法可以将令牌视为限定数据项的集合，例如，在 `foreach` Visual Basic 的语句中 (， `For Each` `for each` 在 Visual C++) 中。</span><span class="sxs-lookup"><span data-stu-id="2b02e-209">Use this method to treat a token as if it were a collection of qualification data items, for example, in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).</span></span>  
  
 <span data-ttu-id="2b02e-210">使用此方法返回的枚举器循环访问与当前标记关联的管线段的限定数据项。</span><span class="sxs-lookup"><span data-stu-id="2b02e-210">Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token.</span></span> <span data-ttu-id="2b02e-211">每个限定数据项都是一个 <xref:System.AddIn.Hosting.QualificationDataItem> 结构，用于标识管道段，并包含 <xref:System.AddIn.Pipeline.QualificationDataAttribute> 应用于该段的特性的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="2b02e-211">Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains a name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b02e-212">外接程序模型不使用应用于外接程序的宿主视图的限定数据。</span><span class="sxs-lookup"><span data-stu-id="2b02e-212">The add-in model does not use qualification data that is applied to the host view of the add-in.</span></span> <span data-ttu-id="2b02e-213">因此，枚举限定数据时，将找不到任何属性为的项 <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-213">As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2b02e-214">或者，可以使用 <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> 属性来获取嵌套的字典集，其中包含管线段的限定数据。</span><span class="sxs-lookup"><span data-stu-id="2b02e-214">Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries that contain the qualification data of the pipeline segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-215">下面的示例列出了与标记集合中的每个关联的管道段的限定数据 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-215">The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens.</span></span>  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="addInToken.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b02e-216">作为标记的哈希函数。</span><span class="sxs-lookup"><span data-stu-id="2b02e-216">Serves as a hash function for a token.</span></span></summary>
        <returns><span data-ttu-id="2b02e-217">当前标记的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="2b02e-217">A hash code for the current token.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.AddIn.Hosting.AddInToken.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b02e-218">获取外接程序的名称。</span><span class="sxs-lookup"><span data-stu-id="2b02e-218">Gets the name of the add-in.</span></span></summary>
        <value><span data-ttu-id="2b02e-219">外接程序的名称。</span><span class="sxs-lookup"><span data-stu-id="2b02e-219">The name of the add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-220">此属性获取属性中指定的外接程序的名称 <xref:System.AddIn.AddInAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-220">This property obtains the name of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.</span></span> <span data-ttu-id="2b02e-221">此值在对象的实例上始终可用 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-221">This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-222">下面的示例显示了控制台的、、、、 <xref:System.AddIn.Hosting.AddInToken.Name%2A> <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A> <xref:System.AddIn.Hosting.AddInToken.Description%2A> <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A> <xref:System.AddIn.Hosting.AddInToken.Publisher%2A> 和 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2b02e-222">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="2b02e-223">此代码示例是为类提供的更大示例的一部分 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-223">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Publisher">
      <MemberSignature Language="C#" Value="public string Publisher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Publisher" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Publisher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Publisher As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Publisher { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Publisher : string" Usage="System.AddIn.Hosting.AddInToken.Publisher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b02e-224">获取外接程序的发布者。</span><span class="sxs-lookup"><span data-stu-id="2b02e-224">Gets the publisher of the add-in.</span></span></summary>
        <value><span data-ttu-id="2b02e-225">外接程序的发行者；如果 <see cref="T:System.AddIn.AddInAttribute" /> 特性中未指定发行者，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b02e-225">The publisher of the add-in, or <see langword="null" /> if the publisher is not specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-226">此属性获取在特性中指定的外接程序的发行者 <xref:System.AddIn.AddInAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-226">This property obtains the publisher of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-227">下面的示例显示了控制台的、、、、 <xref:System.AddIn.Hosting.AddInToken.Name%2A> <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A> <xref:System.AddIn.Hosting.AddInToken.Description%2A> <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A> <xref:System.AddIn.Hosting.AddInToken.Publisher%2A> 和 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2b02e-227">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="2b02e-228">此代码示例是为类提供的更大示例的一部分 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-228">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QualificationData">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary&lt;string,string&gt;&gt; QualificationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;valuetype System.AddIn.Hosting.AddInSegmentType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt;&gt; QualificationData" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.QualificationData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QualificationData As IDictionary(Of AddInSegmentType, IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::AddIn::Hosting::AddInSegmentType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ QualificationData { System::Collections::Generic::IDictionary&lt;System::AddIn::Hosting::AddInSegmentType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QualificationData : System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType, System.Collections.Generic.IDictionary&lt;string, string&gt;&gt;" Usage="System.AddIn.Hosting.AddInToken.QualificationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b02e-229">获取与当前标记关联的各个管线段的相关数据的字典。</span><span class="sxs-lookup"><span data-stu-id="2b02e-229">Gets a dictionary of data about the segments in the pipeline associated with the current token.</span></span></summary>
        <value><span data-ttu-id="2b02e-230">一个字典，其键为管线段，其值为一系列名称/值对的字典，这些名称/值对表示每个段的限定数据。</span><span class="sxs-lookup"><span data-stu-id="2b02e-230">A dictionary whose keys are pipeline segments and whose values are dictionaries of name/value pairs that represent qualification data for each segment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-231">使用此属性可获取已应用到具有属性的管线段的数据 <xref:System.AddIn.Pipeline.QualificationDataAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-231">Use this property to obtain data that has been applied to pipeline segments with the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute.</span></span> <span data-ttu-id="2b02e-232">您可以使用此数据来标识和使用构成管道的类型。</span><span class="sxs-lookup"><span data-stu-id="2b02e-232">You can use this data to identify and work with the types that compose your pipelines.</span></span>  
  
 <span data-ttu-id="2b02e-233">此属性返回字典字典。</span><span class="sxs-lookup"><span data-stu-id="2b02e-233">This property returns a dictionary of dictionaries.</span></span> <span data-ttu-id="2b02e-234">顶部字典始终包含六个键。</span><span class="sxs-lookup"><span data-stu-id="2b02e-234">The top dictionary always has six keys.</span></span> <span data-ttu-id="2b02e-235">每个键都是 <xref:System.AddIn.Hosting.AddInSegmentType> 管道中段的值。</span><span class="sxs-lookup"><span data-stu-id="2b02e-235">Each key is an <xref:System.AddIn.Hosting.AddInSegmentType> value for a segment in the pipeline.</span></span> <span data-ttu-id="2b02e-236">每个值都是字符串的泛型， <xref:System.Collections.Generic.IDictionary%602> 其中包含段的限定数据。</span><span class="sxs-lookup"><span data-stu-id="2b02e-236">Each value is a generic <xref:System.Collections.Generic.IDictionary%602> of strings with string keys that contains the segment's qualification data.</span></span>  
  
 <span data-ttu-id="2b02e-237">这些内部字典的键和值是在段的特性中指定的名称和值 <xref:System.AddIn.Pipeline.QualificationDataAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-237">The keys and values of these inner dictionaries are the names and values specified in the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attributes for the segments.</span></span> <span data-ttu-id="2b02e-238">如果没有对段应用任何限定数据，则其字典为空。</span><span class="sxs-lookup"><span data-stu-id="2b02e-238">If no qualification data has been applied to a segment, its dictionary is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b02e-239">外接程序模型不使用应用于外接程序的宿主视图的限定数据。</span><span class="sxs-lookup"><span data-stu-id="2b02e-239">The add-in model does not use qualification data that is applied to the host view of the add-in.</span></span> <span data-ttu-id="2b02e-240">因此，字典 <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType> 始终为空。</span><span class="sxs-lookup"><span data-stu-id="2b02e-240">As a result, the dictionary for <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType> is always empty.</span></span>  
  
 <span data-ttu-id="2b02e-241">或者，你可以通过 <xref:System.AddIn.Hosting.AddInToken> <xref:System.AddIn.Hosting.QualificationDataItem> 使用 `foreach` Visual Basic 中 (的语句（ `For Each` `for each` 在 Visual C++) 中）枚举作为结构的集合来获取限定数据。</span><span class="sxs-lookup"><span data-stu-id="2b02e-241">Alternatively, you can obtain qualification data by enumerating an <xref:System.AddIn.Hosting.AddInToken> as if it were a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures, using a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).</span></span> <span data-ttu-id="2b02e-242">请参阅为结构提供的示例 <xref:System.AddIn.Hosting.QualificationDataItem> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-242">See the example provided for the <xref:System.AddIn.Hosting.QualificationDataItem> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-243">下面的示例演示如何检查外接程序的限定数据。</span><span class="sxs-lookup"><span data-stu-id="2b02e-243">The following example shows how to examine an add-in's qualification data.</span></span>  
  
 [!code-csharp[AddInP3Host#11](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#11)]
 [!code-vb[AddInP3Host#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="addInToken.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b02e-244">返回一个与此标记关联的管线段的限定数据枚举数。</span><span class="sxs-lookup"><span data-stu-id="2b02e-244">Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.</span></span></summary>
        <returns><span data-ttu-id="2b02e-245">一个枚举数，可用于循环访问与当前标记关联的管线段的限定数据。</span><span class="sxs-lookup"><span data-stu-id="2b02e-245">An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-246">此方法允许将令牌视为限定数据项的集合，例如，在 `foreach` Visual Basic 的语句中 (`For Each` `for each` Visual C++) 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-246">This method allows a token to be treated like a collection of qualification data items, for example in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).</span></span>  
  
 <span data-ttu-id="2b02e-247">使用此方法返回的枚举器循环访问与当前标记关联的管线段的限定数据项。</span><span class="sxs-lookup"><span data-stu-id="2b02e-247">Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token.</span></span> <span data-ttu-id="2b02e-248">每个限定数据项都是一个 <xref:System.AddIn.Hosting.QualificationDataItem> 结构，用于标识管道段，并包含 <xref:System.AddIn.Pipeline.QualificationDataAttribute> 应用于该段的特性的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="2b02e-248">Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains the name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b02e-249">外接程序模型不使用应用于外接程序的宿主视图的限定数据。</span><span class="sxs-lookup"><span data-stu-id="2b02e-249">The add-in model does not use qualification data that is applied to the host view of the add-in.</span></span> <span data-ttu-id="2b02e-250">因此，枚举限定数据时，将找不到任何属性为的项 <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-250">As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2b02e-251">或者，可以使用 <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> 属性来获取嵌套的字典集，其中包含管线段的限定数据。</span><span class="sxs-lookup"><span data-stu-id="2b02e-251">Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries containing the qualification data of the pipeline segments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="addInToken.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b02e-252">返回一个表示标记的字符串。</span><span class="sxs-lookup"><span data-stu-id="2b02e-252">Returns a string that represents the token.</span></span></summary>
        <returns><span data-ttu-id="2b02e-253">一个表示标记的字符串。</span><span class="sxs-lookup"><span data-stu-id="2b02e-253">A string that represents the token.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.AddIn.Hosting.AddInToken.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b02e-254">获取 <see cref="T:System.AddIn.AddInAttribute" /> 特性中指定的外接程序版本。</span><span class="sxs-lookup"><span data-stu-id="2b02e-254">Gets the version of the add-in, as specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></summary>
        <value><span data-ttu-id="2b02e-255">外接程序的版本；如果 <see cref="T:System.AddIn.AddInAttribute" /> 特性中未指定版本号，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b02e-255">The version of the add-in, or <see langword="null" /> if the version number is not specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b02e-256">版本号为自由格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="2b02e-256">The version number is a free-form string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b02e-257">下面的示例显示了控制台的、、、、 <xref:System.AddIn.Hosting.AddInToken.Name%2A> <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A> <xref:System.AddIn.Hosting.AddInToken.Description%2A> <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A> <xref:System.AddIn.Hosting.AddInToken.Publisher%2A> 和 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="2b02e-257">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="2b02e-258">此代码示例是为类提供的更大示例的一部分 <xref:System.AddIn.Hosting.AddInToken> 。</span><span class="sxs-lookup"><span data-stu-id="2b02e-258">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
