<Type Name="AddInController" FullName="System.AddIn.Hosting.AddInController">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1fdd95b7c11e7573ee7755322b4c5f05b3330241" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89917559" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInController extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInController" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInController sealed" />
  <TypeSignature Language="F#" Value="type AddInController = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a30b5-101">提供用于执行各种任务的外接程序的访问权限。</span><span class="sxs-lookup"><span data-stu-id="a30b5-101">Provides access to an add-in for a variety of tasks.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a30b5-102">使用此类可执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="a30b5-102">Use this class to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="a30b5-103">使用 <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> 属性可获取外接程序的 <xref:System.AddIn.Hosting.AddInEnvironment> 对象。</span><span class="sxs-lookup"><span data-stu-id="a30b5-103">Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in.</span></span> <span data-ttu-id="a30b5-104">然后使用该对象激活同一个应用程序域中的其他外接程序，并将其作为原始加载项进行处理。</span><span class="sxs-lookup"><span data-stu-id="a30b5-104">Then use that object to activate other add-ins in the same application domain and process as the original add-in.</span></span>  
  
-   <span data-ttu-id="a30b5-105">使用 <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> 属性可获取外接程序的 <xref:System.AppDomain> 对象。</span><span class="sxs-lookup"><span data-stu-id="a30b5-105">Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in.</span></span> <span data-ttu-id="a30b5-106">然后，使用该对象在与原始外接程序相同的应用程序域中激活其他外接程序。</span><span class="sxs-lookup"><span data-stu-id="a30b5-106">Then use that object to activate other add-ins in the same application domain as the original add-in.</span></span> <span data-ttu-id="a30b5-107">请注意，由于跨进程远程处理存在限制，此方案不适用于在单独的进程中激活的外接程序。</span><span class="sxs-lookup"><span data-stu-id="a30b5-107">Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.</span></span>  
  
-   <span data-ttu-id="a30b5-108">使用 <xref:System.AddIn.Hosting.AddInController.Token%2A> 属性可获取 <xref:System.AddIn.Hosting.AddInToken> 表示外接程序的对象。</span><span class="sxs-lookup"><span data-stu-id="a30b5-108">Use the <xref:System.AddIn.Hosting.AddInController.Token%2A> property to obtain an <xref:System.AddIn.Hosting.AddInToken> object that represents an add-in.</span></span>  
  
-   <span data-ttu-id="a30b5-109">使用方法关闭外接程序 <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a30b5-109">Shut down an add-in with the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method.</span></span>  
  
 <span data-ttu-id="a30b5-110">若要获取外接程序的控制器，请调用 <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> 方法，并将外接程序的实例作为其参数传递。</span><span class="sxs-lookup"><span data-stu-id="a30b5-110">To obtain the controller for an add-in, call the <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> method and pass an instance of the add-in as its parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a30b5-111">下面的示例使用对象在与以前激活的外接程序相同的环境中激活外接程序 <xref:System.AddIn.Hosting.AddInController> 。</span><span class="sxs-lookup"><span data-stu-id="a30b5-111">The following example activates an add-in within the same environment as a previously activated add-in by using an <xref:System.AddIn.Hosting.AddInController> object.</span></span>  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddInEnvironment">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInEnvironment AddInEnvironment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInEnvironment AddInEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.AddInEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddInEnvironment As AddInEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInEnvironment ^ AddInEnvironment { System::AddIn::Hosting::AddInEnvironment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddInEnvironment : System.AddIn.Hosting.AddInEnvironment" Usage="System.AddIn.Hosting.AddInController.AddInEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a30b5-112">获取一个 <see cref="T:System.AddIn.Hosting.AddInEnvironment" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a30b5-112">Gets an <see cref="T:System.AddIn.Hosting.AddInEnvironment" /> object.</span></span></summary>
        <value><span data-ttu-id="a30b5-113">一个对象，可用于激活与原始外接程序在同一环境中的其他外接程序。</span><span class="sxs-lookup"><span data-stu-id="a30b5-113">An object that can be used to activate other add-ins in the same environment as the original add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a30b5-114">使用此属性可获取 <xref:System.AddIn.Hosting.AddInEnvironment> 外接程序的对象。</span><span class="sxs-lookup"><span data-stu-id="a30b5-114">Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in.</span></span> <span data-ttu-id="a30b5-115">然后使用该对象激活同一个应用程序域中的其他外接程序，并将其作为原始加载项进行处理。</span><span class="sxs-lookup"><span data-stu-id="a30b5-115">Then use that object to activate other add-ins in the same application domain and process as the original add-in.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a30b5-116">下面的示例在第一个外接程序所在的环境中激活第二个外接程序。</span><span class="sxs-lookup"><span data-stu-id="a30b5-116">The following example activates a second add-in within the same environment as the first add-in.</span></span>  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomain">
      <MemberSignature Language="C#" Value="public AppDomain AppDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AppDomain AppDomain" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.AppDomain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppDomain As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomain ^ AppDomain { AppDomain ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppDomain : AppDomain" Usage="System.AddIn.Hosting.AddInController.AppDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a30b5-117">获取包含外接程序的应用程序域。</span><span class="sxs-lookup"><span data-stu-id="a30b5-117">Gets the application domain that contains an add-in.</span></span></summary>
        <value><span data-ttu-id="a30b5-118">外接程序的应用程序域。</span><span class="sxs-lookup"><span data-stu-id="a30b5-118">The application domain of the add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a30b5-119">使用此属性可获取外接 <xref:System.AppDomain> 程序的对象并激活同一应用程序域中的其他外接程序。</span><span class="sxs-lookup"><span data-stu-id="a30b5-119">Use this property to obtain an add-in's <xref:System.AppDomain> object and to activate other add-ins in the same application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a30b5-120">下面的示例在第一个外接程序所在的应用程序域中激活第二个外接程序。</span><span class="sxs-lookup"><span data-stu-id="a30b5-120">The following example activates a second add-in in the same application domain as the first add-in.</span></span>  
  
 [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]
 [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAddInController">
      <MemberSignature Language="C#" Value="public static System.AddIn.Hosting.AddInController GetAddInController (object addIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Hosting.AddInController GetAddInController(object addIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInController.GetAddInController(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAddInController (addIn As Object) As AddInController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Hosting::AddInController ^ GetAddInController(System::Object ^ addIn);" />
      <MemberSignature Language="F#" Value="static member GetAddInController : obj -&gt; System.AddIn.Hosting.AddInController" Usage="System.AddIn.Hosting.AddInController.GetAddInController addIn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addIn" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addIn"><span data-ttu-id="a30b5-121">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="a30b5-121">The host view of the add-in.</span></span></param>
        <summary><span data-ttu-id="a30b5-122">获取外接程序的控制器。</span><span class="sxs-lookup"><span data-stu-id="a30b5-122">Obtains the controller for an add-in.</span></span></summary>
        <returns><span data-ttu-id="a30b5-123">外接程序的控制器。</span><span class="sxs-lookup"><span data-stu-id="a30b5-123">The controller for the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a30b5-124"><xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法返回一个对象，该对象表示外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="a30b5-124">The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> methods return an object that represents the host's view of the add-in.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInController.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="member this.Shutdown : unit -&gt; unit" Usage="addInController.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a30b5-125">禁用外接程序。</span><span class="sxs-lookup"><span data-stu-id="a30b5-125">Disables an add-in.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a30b5-126">此方法打破外接程序与其宿主之间的通信管道。</span><span class="sxs-lookup"><span data-stu-id="a30b5-126">This method breaks the communication pipeline between an add-in and its host.</span></span> <span data-ttu-id="a30b5-127">如果使用或方法在自动生成的应用程序域中激活外接程序 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> ，则该 <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> 方法还会卸载应用程序域。</span><span class="sxs-lookup"><span data-stu-id="a30b5-127">If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.</span></span>  
  
 <span data-ttu-id="a30b5-128">如果外接程序加载到其自己的应用程序域中，则该 <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> 方法还会卸载应用程序域。</span><span class="sxs-lookup"><span data-stu-id="a30b5-128">If the add-in was loaded into its own application domain, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.</span></span>  
  
 <span data-ttu-id="a30b5-129">如果外接程序加载到现有的应用程序域中，则主机和管道段将不再具有对该外接程序的任何引用。</span><span class="sxs-lookup"><span data-stu-id="a30b5-129">If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in.</span></span> <span data-ttu-id="a30b5-130">在这种情况下，可以通过垃圾回收来回收外接程序。</span><span class="sxs-lookup"><span data-stu-id="a30b5-130">In this case, the add-in will be eligible to be reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="a30b5-131">你还可以使用此类关闭在外部进程中激活的外接程序。</span><span class="sxs-lookup"><span data-stu-id="a30b5-131">You can also use this class to shut down an add-in that is activated in an external process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a30b5-132">下面的示例获取名为的 <xref:System.AddIn.Hosting.AddInController> 宿主视图的对象 `manager` ，然后关闭外接程序。</span><span class="sxs-lookup"><span data-stu-id="a30b5-132">The following example obtains the <xref:System.AddIn.Hosting.AddInController> object for a host view named `manager` and then shuts down the add-in.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineHost#6](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHost/cs/Program.cs#6)]
 [!code-vb[AddInCollectionPipelineHost#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHost/vb/Program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInToken Token" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As AddInToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInToken ^ Token { System::AddIn::Hosting::AddInToken ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.AddIn.Hosting.AddInToken" Usage="System.AddIn.Hosting.AddInController.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a30b5-133">获取表示外接程序的标记。</span><span class="sxs-lookup"><span data-stu-id="a30b5-133">Gets the token that represents the add-in.</span></span></summary>
        <value><span data-ttu-id="a30b5-134">一个表示外接程序的对象。</span><span class="sxs-lookup"><span data-stu-id="a30b5-134">An object that represents the add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a30b5-135">通常，使用此属性来获取用于在以后激活外接程序的标记。</span><span class="sxs-lookup"><span data-stu-id="a30b5-135">Typically, you use this property to obtain a token to activate an add-in at a later time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
