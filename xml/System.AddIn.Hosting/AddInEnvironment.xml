<Type Name="AddInEnvironment" FullName="System.AddIn.Hosting.AddInEnvironment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30f20a58eef751f06a06eccb3904fe8ff36ee40d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86622282" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInEnvironment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInEnvironment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInEnvironment" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInEnvironment sealed" />
  <TypeSignature Language="F#" Value="type AddInEnvironment = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供外接程序的应用程序域和进程的访问权限。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此类可将外接程序加载到所需的环境中，这可以是以下项之一：  
  
-   具有对象的现有应用程序域 <xref:System.AppDomain> 。  
  
-   自动生成的用于激活外接程序的应用程序域。  
  
-   现有外部进程。  
  
 若要获取外接程序的 <xref:System.AddIn.Hosting.AddInEnvironment> 对象，请将外接程序的应用程序域传递给 <xref:System.AddIn.Hosting.AddInEnvironment> 类构造函数。 或者，可以使用类的 <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> 属性 <xref:System.AddIn.Hosting.AddInController> 获取外接程序的 <xref:System.AddIn.Hosting.AddInEnvironment> 对象。  
  
 获取 <xref:System.AddIn.Hosting.AddInEnvironment> 对象后，可以执行以下操作：  
  
-   将该 <xref:System.AddIn.Hosting.AddInEnvironment> 对象传递给相应的 <xref:System.AddIn.Hosting.AddInToken.Activate%2A> 方法重载。 外接程序将在由对象表示的应用程序域和进程中激活 <xref:System.AddIn.Hosting.AddInEnvironment> 。  
  
-   使用 <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> 属性可获取 <xref:System.AddIn.Hosting.AddInProcess> 对象。 然后将该对象传递给相应的 <xref:System.AddIn.Hosting.AddInToken.Activate%2A> 方法重载。 外接程序将在由对象表示的进程中激活， <xref:System.AddIn.Hosting.AddInProcess> 而在新的应用程序域中激活。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b">外接程序和扩展性</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddInEnvironment (AppDomain appDomain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AppDomain appDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appDomain As AppDomain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddInEnvironment(AppDomain ^ appDomain);" />
      <MemberSignature Language="F#" Value="new System.AddIn.Hosting.AddInEnvironment : AppDomain -&gt; System.AddIn.Hosting.AddInEnvironment" Usage="new System.AddIn.Hosting.AddInEnvironment appDomain" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appDomain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="appDomain">包含外接程序的应用程序域。</param>
        <summary>初始化 <see cref="T:System.AddIn.Hosting.AddInEnvironment" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果有权访问包含所需外接程序的应用程序域，则可以使用此构造函数获取外接程序的 <xref:System.AddIn.Hosting.AddInEnvironment> 对象。 否则，可以使用类的 <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> 属性 <xref:System.AddIn.Hosting.AddInController> 来获取 <xref:System.AddIn.Hosting.AddInEnvironment> 对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="appDomain" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">需要完全信任权限。 调用链中的调用方没有足够权限。</exception>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInProcess Process { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInProcess Process" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInEnvironment.Process" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Process As AddInProcess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInProcess ^ Process { System::AddIn::Hosting::AddInProcess ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Process : System.AddIn.Hosting.AddInProcess" Usage="System.AddIn.Hosting.AddInEnvironment.Process" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInProcess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.AddIn.Hosting.AddInProcess" /> 对象，该对象表示在其中运行外接程序的进程。</summary>
        <value>在其中运行外接程序的进程。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此属性在同一个进程中激活多个外接程序，但在不同的域中。  
  
 将 <xref:System.AddIn.Hosting.AddInProcess> 通过此属性获取的对象传递给相应的 <xref:System.AddIn.Hosting.AddInToken.Activate%2A> 方法重载。  
  
 如果要在外部进程中的同一域中激活它们，则应将 <xref:System.AddIn.Hosting.AddInEnvironment> 对象直接传递给 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=nameWithType> 方法重载。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
