<Type Name="HasRunnableWorkflowEvent" FullName="System.Activities.DurableInstancing.HasRunnableWorkflowEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4431984aa838e0404c5cff5bb4f4bd63b2c7c2d1" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70658509" /></Metadata><TypeSignature Language="C#" Value="public sealed class HasRunnableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HasRunnableWorkflowEvent extends System.Runtime.DurableInstancing.InstancePersistenceEvent`1&lt;class System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HasRunnableWorkflowEvent&#xA;Inherits InstancePersistenceEvent(Of HasRunnableWorkflowEvent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HasRunnableWorkflowEvent sealed : System::Runtime::DurableInstancing::InstancePersistenceEvent&lt;System::Activities::DurableInstancing::HasRunnableWorkflowEvent ^&gt;" />
  <TypeSignature Language="F#" Value="type HasRunnableWorkflowEvent = class&#xA;    inherit InstancePersistenceEvent&lt;HasRunnableWorkflowEvent&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Activities.DurableInstancing.HasRunnableWorkflowEvent</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="18e94-101">表示一个事件，SQL 工作流实例存储将引发该事件，将持久性数据库中是否存在可运行实例的信息通知工作流宿主。</span><span class="sxs-lookup"><span data-stu-id="18e94-101">Represents an event that the SQL Workflow Instance Store raises to notify workflow hosts about the existence of runnable instances in the persistence database.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18e94-102">如果某个实例未处于挂起状态或完成状态并且满足以下条件，则该实例可 *运行*：</span><span class="sxs-lookup"><span data-stu-id="18e94-102">An instance is *runnable*, if it is not in the suspended state or the completed state and satisfies the following conditions:</span></span>  
  
-   <span data-ttu-id="18e94-103">实例处于解除锁定状态，并且具有已过期的挂起计时器。</span><span class="sxs-lookup"><span data-stu-id="18e94-103">The instance is unlocked and has a pending timer that has expired.</span></span>  
  
-   <span data-ttu-id="18e94-104">实例处于解除锁定状态，并且其状态为 "正在 **执行**"。</span><span class="sxs-lookup"><span data-stu-id="18e94-104">The instance is unlocked and its status is **Executing**.</span></span>  
  
-   <span data-ttu-id="18e94-105">实例上的锁无效。</span><span class="sxs-lookup"><span data-stu-id="18e94-105">The instance has an invalid lock on it.</span></span>  
  
 <span data-ttu-id="18e94-106">实例存储应定期搜索属于使用该存储的工作流宿主的可运行实例。</span><span class="sxs-lookup"><span data-stu-id="18e94-106">An instance store should periodically search for runnable instances that belong to a workflow host that uses the store.</span></span> <span data-ttu-id="18e94-107">在持久性存储中查找与其工作流主机类型匹配的可运行实例时，它应引发 <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent>。</span><span class="sxs-lookup"><span data-stu-id="18e94-107">It should raise the <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent> when it finds a runnable instance in the persistence store that matches its workflow host type.</span></span> <span data-ttu-id="18e94-108">如果实例存储在持久性存储中未找到可运行实例，它应继续监视持久性存储来查找任何可运行实例。</span><span class="sxs-lookup"><span data-stu-id="18e94-108">If the instance store does not find a runnable instance in the persistence store, it should continue to monitor the persistence store for any runnable instances.</span></span>  
  
 <span data-ttu-id="18e94-109">引发 HasRunnableWorkflowEvent 之后，实例存储应停止监视持久性存储来查找可运行实例，直至它收到并执行 <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> 为止。</span><span class="sxs-lookup"><span data-stu-id="18e94-109">After raising the HasRunnableWorkflowEvent, the instance store should stop monitoring the persistence store for runnable instances until it receives and executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>.</span></span> <span data-ttu-id="18e94-110">只有在 TryLoadRunnableWorkflowCommand 执行未返回任何可运行实例的情况下，监视才会继续。</span><span class="sxs-lookup"><span data-stu-id="18e94-110">The monitoring continues only if the TryLoadRunnableWorkflowCommand execution does not return any runnable instances.</span></span>  
  
 <span data-ttu-id="18e94-111">当工作流宿主收到 HasRunnableWorkflowEvent 时，它将针对实例存储执行 <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>，以将该实例加载到内存中。</span><span class="sxs-lookup"><span data-stu-id="18e94-111">When a workflow host receives the HasRunnableWorkflowEvent, it executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> against the instance store to load the instance into the memory.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HasRunnableWorkflowEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HasRunnableWorkflowEvent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18e94-112">初始化 <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="18e94-112">Initializes an instance of the <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
