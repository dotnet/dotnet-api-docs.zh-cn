<Type Name="HasActivatableWorkflowEvent" FullName="System.Activities.DurableInstancing.HasActivatableWorkflowEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a79191397739e8d08cad5d56b0d00737f003bc4f" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69310047" /></Metadata><TypeSignature Language="C#" Value="public sealed class HasActivatableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasActivatableWorkflowEvent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HasActivatableWorkflowEvent extends System.Runtime.DurableInstancing.InstancePersistenceEvent`1&lt;class System.Activities.DurableInstancing.HasActivatableWorkflowEvent&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HasActivatableWorkflowEvent&#xA;Inherits InstancePersistenceEvent(Of HasActivatableWorkflowEvent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HasActivatableWorkflowEvent sealed : System::Runtime::DurableInstancing::InstancePersistenceEvent&lt;System::Activities::DurableInstancing::HasActivatableWorkflowEvent ^&gt;" />
  <TypeSignature Language="F#" Value="type HasActivatableWorkflowEvent = class&#xA;    inherit InstancePersistenceEvent&lt;HasActivatableWorkflowEvent&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasActivatableWorkflowEvent&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Activities.DurableInstancing.HasActivatableWorkflowEvent</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="09efc-101">表示一个事件，实例存储将引发该事件，将持久性数据库中是否存在可激活实例的相关信息通知泛型宿主。</span><span class="sxs-lookup"><span data-stu-id="09efc-101">Represents an event that an instance store raises to notify generic hosts about the existence of activatable instances in the persistence database.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09efc-102">如果实例未处于挂起状态或完成状态并且满足以下条件，则它是可*激活*的：</span><span class="sxs-lookup"><span data-stu-id="09efc-102">An instance is *activatable*, if it is not in the suspended state or the completed state and satisfies the following conditions:</span></span>  
  
-   <span data-ttu-id="09efc-103">实例可*运行*。</span><span class="sxs-lookup"><span data-stu-id="09efc-103">The instance is *runnable*.</span></span> <span data-ttu-id="09efc-104">如果持久性数据库中的某个实例满足以下条件，则认为该实例可运行：</span><span class="sxs-lookup"><span data-stu-id="09efc-104">An instance in the persistence database is considered as runnable if it satisfies the following conditions:</span></span>  
  
    -   <span data-ttu-id="09efc-105">实例处于解除锁定状态，并且具有已过期的挂起计时器。</span><span class="sxs-lookup"><span data-stu-id="09efc-105">The instance is unlocked and has a pending timer that has expired.</span></span>  
  
    -   <span data-ttu-id="09efc-106">实例处于解除锁定状态，并且其状态为 "正在**执行**"。</span><span class="sxs-lookup"><span data-stu-id="09efc-106">The instance is unlocked and its status is **Executing**.</span></span>  
  
    -   <span data-ttu-id="09efc-107">实例上的锁无效。</span><span class="sxs-lookup"><span data-stu-id="09efc-107">The instance has an invalid lock on it.</span></span>  
  
-   <span data-ttu-id="09efc-108">计算机上没有能够加载实例的工作流宿主正在运行。</span><span class="sxs-lookup"><span data-stu-id="09efc-108">There is no workflow host capable of loading the instance is running on the computer.</span></span>  
  
 <span data-ttu-id="09efc-109">实例存储应定期搜索属于使用该存储的工作流宿主的可激活工作流实例。</span><span class="sxs-lookup"><span data-stu-id="09efc-109">An instance store should periodically search for activatable workflow instances that belong to a workflow host that uses the store.</span></span> <span data-ttu-id="09efc-110">如果它在持久性存储中找到了可激活实例，则会引发 <xref:System.Activities.DurableInstancing.HasActivatableWorkflowEvent>。</span><span class="sxs-lookup"><span data-stu-id="09efc-110">It should raise the <xref:System.Activities.DurableInstancing.HasActivatableWorkflowEvent> when it finds an activatable instance in the persistence store.</span></span> <span data-ttu-id="09efc-111">如果实例存储在持久性存储中未找到可激活实例，它应继续监视持久性存储来查找任何可激活实例。</span><span class="sxs-lookup"><span data-stu-id="09efc-111">If the instance store does not find an activatable instance in the persistence store, it should continue to monitor the persistence store for any activatable instances.</span></span>  
  
 <span data-ttu-id="09efc-112">引发 HasActivatableWorkflowEvent 之后，实例存储应停止监视持久性存储来查找可激活实例，直至它收到并执行 <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> 为止。</span><span class="sxs-lookup"><span data-stu-id="09efc-112">After raising the HasActivatableWorkflowEvent, the instance store should stop monitoring the persistence store for activatable instances until it receives and executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>.</span></span> <span data-ttu-id="09efc-113">只有在命令执行未返回任何可激活工作流实例的情况下，监视才会继续。</span><span class="sxs-lookup"><span data-stu-id="09efc-113">The monitoring continues only if the command execution does not return any activatable workflow instances.</span></span>  
  
 <span data-ttu-id="09efc-114">当泛型宿主收到此事件时，它将针对实例存储执行 <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> 以获取创建工作流宿主所需的激活参数。</span><span class="sxs-lookup"><span data-stu-id="09efc-114">When a generic host receives this event, it executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> against the instance store to obtain activation parameters required to create a workflow host.</span></span> <span data-ttu-id="09efc-115">泛型宿主使用这些激活参数来创建工作流宿主，后者又依次加载并运行服务实例。</span><span class="sxs-lookup"><span data-stu-id="09efc-115">The generic host uses these activation parameters to create a workflow host, which in turn loads and runs the service instance.</span></span> <span data-ttu-id="09efc-116">WAS 激活类型的激活参数包括：站点名称、应用程序路径（相对于站点）和服务路径（相对于应用程序）。</span><span class="sxs-lookup"><span data-stu-id="09efc-116">The activation parameters for the WAS activation type are: Site Name, Application Path (relative to the site), and Service Path (relative to the application).</span></span> <span data-ttu-id="09efc-117">实例存储可能返回多组这三个激活参数。</span><span class="sxs-lookup"><span data-stu-id="09efc-117">An instance store could return multiple sets of these three activation parameters.</span></span>  
  
 <span data-ttu-id="09efc-118">一般主机是一个主机，它具有名为**ActivationType**的 XName 参数，该参数应设置为实例存储支持的值。</span><span class="sxs-lookup"><span data-stu-id="09efc-118">A generic host is a host that has an XName parameter named **ActivationType**, which should be set to a value supported by the instance store.</span></span> <span data-ttu-id="09efc-119">目前，SQL 工作流实例存储支持 ActivationType 参数设置为值的泛型主机： **WAS**。</span><span class="sxs-lookup"><span data-stu-id="09efc-119">Currently, the SQL Workflow Instance Store supports generic hosts with ActivationType parameter set to value: **WAS**.</span></span> <span data-ttu-id="09efc-120">如果根本未设置 ActivationType，则 SQL 工作流实例存储将宿主视为泛型宿主。</span><span class="sxs-lookup"><span data-stu-id="09efc-120">If the ActivationType is not set at all, the SQL Workflow Instance Store treats the host as a generic host.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09efc-121">带有名为 "都柏林" （适用于 .NET 4.0 的应用程序服务器扩展）的代码的工作流管理服务是将激活类型设置为**WAS**的泛型主机。</span><span class="sxs-lookup"><span data-stu-id="09efc-121">The Workflow Management Service that ships with the code named "Dublin" (Application Server Extensions for .NET 4.0) is a generic host that has the activation type set to **WAS**.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HasActivatableWorkflowEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HasActivatableWorkflowEvent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09efc-122">初始化 <see cref="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="09efc-122">Initializes a new instance of the <see cref="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
