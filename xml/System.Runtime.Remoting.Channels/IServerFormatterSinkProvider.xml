<Type Name="IServerFormatterSinkProvider" FullName="System.Runtime.Remoting.Channels.IServerFormatterSinkProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e345c2622ac0c42cf52428eb556ef212a3f5960" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86759021" /></Metadata><TypeSignature Language="C#" Value="public interface IServerFormatterSinkProvider : System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServerFormatterSinkProvider implements class System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.IServerFormatterSinkProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServerFormatterSinkProvider&#xA;Implements IServerChannelSinkProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServerFormatterSinkProvider : System::Runtime::Remoting::Channels::IServerChannelSinkProvider" />
  <TypeSignature Language="F#" Value="type IServerFormatterSinkProvider = interface&#xA;    interface IServerChannelSinkProvider" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IServerChannelSinkProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>将服务器信道接收器提供程序标记为服务器格式化程序接收器提供程序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为 <xref:System.Runtime.Remoting.Channels.IServerFormatterSinkProvider> 远程处理消息流过的服务器通道创建服务器格式化程序接收器。  
  
 若要在 `<formatter>` 配置文件中使用标记而不是 `<provider>` 标记，服务器信道接收器提供程序必须实现 <xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider> 接口而不是 <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> 。 有关远程处理配置的其他信息，请参阅 [通道和格式化程序配置属性](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)) 以及 [远程处理设置架构](https://msdn.microsoft.com/library/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e)。  
  
 某些格式化程序接收器实现使用运行时格式化程序 (<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 和 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>) 。 其他实现可以使用自己的方法将信道消息转换为流。 在返回旅程上，格式化程序接收器会将消息流转换回信道消息元素， (返回消息) 。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
