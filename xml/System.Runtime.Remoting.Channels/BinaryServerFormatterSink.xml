<Type Name="BinaryServerFormatterSink" FullName="System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15fd499f7ba663d66065e87633949a463b1dc20a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86759463" /></Metadata><TypeSignature Language="C#" Value="public class BinaryServerFormatterSink : System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryServerFormatterSink extends System.Object implements class System.Runtime.Remoting.Channels.IChannelSinkBase, class System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryServerFormatterSink&#xA;Implements IServerChannelSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryServerFormatterSink : System::Runtime::Remoting::Channels::IServerChannelSink" />
  <TypeSignature Language="F#" Value="type BinaryServerFormatterSink = class&#xA;    interface IServerChannelSink&#xA;    interface IChannelSinkBase" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IServerChannelSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="da304-101">为使用 <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> 的服务器格式化程序接收器提供实现。</span><span class="sxs-lookup"><span data-stu-id="da304-101">Provides the implementation for a server formatter sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da304-102">请求流通过服务器信道接收器从服务器传输接收器传播到适当的格式化程序接收器。</span><span class="sxs-lookup"><span data-stu-id="da304-102">The request stream propagates from the server transport sink through the server channel sinks until it reaches the appropriate formatter sink.</span></span> <span data-ttu-id="da304-103">格式化程序接收器对消息进行反序列化，并通过管道传递该消息。</span><span class="sxs-lookup"><span data-stu-id="da304-103">The formatter sink deserializes the message and passes it through the pipeline.</span></span> <span data-ttu-id="da304-104">特殊的调度接收器通过方法插入到信道接收器链的末尾 <xref:System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain%2A?displayProperty=nameWithType> ，该方法由服务器通道调用以创建服务器信道接收器链。</span><span class="sxs-lookup"><span data-stu-id="da304-104">A special dispatch sink is inserted at the end of the channel sink chain by the <xref:System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain%2A?displayProperty=nameWithType> method, which is called by server channels to create the server channel sink chains.</span></span> <span data-ttu-id="da304-105">当消息到达调度接收器时，调度接收器将消息传递到远程处理基础结构。</span><span class="sxs-lookup"><span data-stu-id="da304-105">When the message reaches the dispatch sink, the dispatch sink passes the message to the remoting infrastructure.</span></span>  
  
 <span data-ttu-id="da304-106">下表显示了可为当前接收器提供程序指定的接收器配置属性。</span><span class="sxs-lookup"><span data-stu-id="da304-106">The following table shows the sink configuration properties that can be specified for the current sink provider.</span></span>  
  
|<span data-ttu-id="da304-107">Property</span><span class="sxs-lookup"><span data-stu-id="da304-107">Property</span></span>|<span data-ttu-id="da304-108">描述</span><span class="sxs-lookup"><span data-stu-id="da304-108">Description</span></span>|  
|--------------|-----------------|  
|`includeVersions`|<span data-ttu-id="da304-109">指定格式化程序是否将包含版本信息。</span><span class="sxs-lookup"><span data-stu-id="da304-109">Specifies whether the formatter will include versioning information.</span></span> <span data-ttu-id="da304-110">值 `true` 或 `false` 。</span><span class="sxs-lookup"><span data-stu-id="da304-110">Values `true` or `false`.</span></span>|  
|`strictBinding`|<span data-ttu-id="da304-111">指示在仅使用类型名称和程序集名称（无版本信息）之前，接收格式化程序首先试着使用完整的版本信息（如果有的话）来标识类型。</span><span class="sxs-lookup"><span data-stu-id="da304-111">Indicates that a receiving formatter will first try to identify the type using complete version information if it exists before using only the type name and assembly name without version information.</span></span> <span data-ttu-id="da304-112">值 `true` 或 `false` 。</span><span class="sxs-lookup"><span data-stu-id="da304-112">Values `true` or `false`.</span></span> <span data-ttu-id="da304-113">系统提供的两个格式化程序的默认值均为 `false`。</span><span class="sxs-lookup"><span data-stu-id="da304-113">The default for both system-provided formatters is `false`.</span></span>|  
|`typeFilterLevel`|<span data-ttu-id="da304-114">一个字符串值，指定服务器信道尝试的自动反序列化级别。</span><span class="sxs-lookup"><span data-stu-id="da304-114">A string value that specifies the level of automatic deserialization that a server channel attempts.</span></span> <span data-ttu-id="da304-115">支持的值为 `Low` 默认) 和 (`Full` 。</span><span class="sxs-lookup"><span data-stu-id="da304-115">Supported values are `Low` (the default) and `Full`.</span></span> <span data-ttu-id="da304-116">有关反序列化级别的详细信息，请参阅 [.NET Framework 远程处理中的自动反序列化](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/5dxse167(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="da304-116">For details about deserialization levels, see [Automatic Deserialization in .NET Framework Remoting](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/5dxse167(v=vs.100)).</span></span><br /><br /> <span data-ttu-id="da304-117">只有以下平台上的 .NET Framework 版本1.1 支持此属性： Windows 98、Windows NT 4.0、Windows Millennium Edition、Windows 2000、Windows XP Home Edition、Windows XP Professional 和 Windows Server 2003 系列。</span><span class="sxs-lookup"><span data-stu-id="da304-117">This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, and Windows Server 2003 family.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="da304-118">对不受信任的数据或不安全的通道使用此对象的实例是一种安全风险。</span><span class="sxs-lookup"><span data-stu-id="da304-118">Using an instance of this object with untrusted data or across an unsecure channel is a security risk.</span></span> <span data-ttu-id="da304-119">仅将此对象用于受信任的数据，并在安全通道中使用。</span><span class="sxs-lookup"><span data-stu-id="da304-119">Use this object only with trusted data and across a secure channel.</span></span> <span data-ttu-id="da304-120">有关详细信息，请参阅[数据验证](https://www.owasp.org/index.php/Data_Validation)。</span><span class="sxs-lookup"><span data-stu-id="da304-120">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tdzwhfy3(v=vs.100)"><span data-ttu-id="da304-121">接收器和接收器链</span><span class="sxs-lookup"><span data-stu-id="da304-121">Sinks and Sink Chains</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/5dxse167(v=vs.100)"><span data-ttu-id="da304-122">.NET Framework 远程处理中的自动反序列化</span><span class="sxs-lookup"><span data-stu-id="da304-122">Automatic Deserialization in .NET Framework Remoting</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryServerFormatterSink (System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol protocol, System.Runtime.Remoting.Channels.IServerChannelSink nextSink, System.Runtime.Remoting.Channels.IChannelReceiver receiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Remoting.Channels.BinaryServerFormatterSink/Protocol protocol, class System.Runtime.Remoting.Channels.IServerChannelSink nextSink, class System.Runtime.Remoting.Channels.IChannelReceiver receiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (protocol As BinaryServerFormatterSink.Protocol, nextSink As IServerChannelSink, receiver As IChannelReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryServerFormatterSink(System::Runtime::Remoting::Channels::BinaryServerFormatterSink::Protocol protocol, System::Runtime::Remoting::Channels::IServerChannelSink ^ nextSink, System::Runtime::Remoting::Channels::IChannelReceiver ^ receiver);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.BinaryServerFormatterSink : System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol * System.Runtime.Remoting.Channels.IServerChannelSink * System.Runtime.Remoting.Channels.IChannelReceiver -&gt; System.Runtime.Remoting.Channels.BinaryServerFormatterSink" Usage="new System.Runtime.Remoting.Channels.BinaryServerFormatterSink (protocol, nextSink, receiver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protocol" Type="System.Runtime.Remoting.Channels.BinaryServerFormatterSink+Protocol" />
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
        <Parameter Name="receiver" Type="System.Runtime.Remoting.Channels.IChannelReceiver" />
      </Parameters>
      <Docs>
        <param name="protocol"><span data-ttu-id="da304-123">将和 <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /> 的当前实例一起使用的 <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />。</span><span class="sxs-lookup"><span data-stu-id="da304-123">The <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /> that will be used with the current instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</span></span></param>
        <param name="nextSink"><span data-ttu-id="da304-124">信道接收器链中的下一个接收器。</span><span class="sxs-lookup"><span data-stu-id="da304-124">The next sink in the channel sink chain.</span></span></param>
        <param name="receiver"><span data-ttu-id="da304-125">指示将接收由 <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> 的新实例序列化的消息的信道。</span><span class="sxs-lookup"><span data-stu-id="da304-125">Indicates the channel that will receive the messages that are serialized by the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</span></span></param>
        <summary><span data-ttu-id="da304-126">初始化 <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="da304-126">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AsyncProcessResponse (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders, stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AsyncProcessResponse(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit&#xA;override this.AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit" Usage="binaryServerFormatterSink.AsyncProcessResponse (sinkStack, state, msg, headers, stream)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack"><span data-ttu-id="da304-127">将发回服务器传输接收器的接收器堆栈。</span><span class="sxs-lookup"><span data-stu-id="da304-127">A stack of sinks that is leading back to the server transport sink.</span></span></param>
        <param name="state"><span data-ttu-id="da304-128">与当前接收器关联的、在请求端生成而在响应端需要的信息。</span><span class="sxs-lookup"><span data-stu-id="da304-128">Information that is associated with the current sink, generated on the request side, and needed on the response side.</span></span></param>
        <param name="msg"><span data-ttu-id="da304-129">响应消息。</span><span class="sxs-lookup"><span data-stu-id="da304-129">The response message.</span></span></param>
        <param name="headers"><span data-ttu-id="da304-130">要添加到将发往客户端的返回消息的标头。</span><span class="sxs-lookup"><span data-stu-id="da304-130">The headers to add to the return message that is heading to the client.</span></span></param>
        <param name="stream"><span data-ttu-id="da304-131">将发回传输接收器的流。</span><span class="sxs-lookup"><span data-stu-id="da304-131">The stream that is heading back to the transport sink.</span></span></param>
        <summary><span data-ttu-id="da304-132">请求处理来自方法调用的异步发送的响应。</span><span class="sxs-lookup"><span data-stu-id="da304-132">Requests processing of the response from a method call that is sent asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Remoting.Channels.ServerChannelSinkStack" />
        <altmember cref="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tdzwhfy3(v=vs.100)"><span data-ttu-id="da304-133">接收器和接收器链</span><span class="sxs-lookup"><span data-stu-id="da304-133">Sinks and Sink Chains</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseStream (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetResponseStream(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream&#xA;override this.GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream" Usage="binaryServerFormatterSink.GetResponseStream (sinkStack, state, msg, headers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="sinkStack"><span data-ttu-id="da304-134">将发回服务器传输接收器的接收器堆栈。</span><span class="sxs-lookup"><span data-stu-id="da304-134">A stack of sinks that is leading back to the server transport sink.</span></span></param>
        <param name="state"><span data-ttu-id="da304-135">与当前接收器关联的、在请求端生成而在响应端需要的信息。</span><span class="sxs-lookup"><span data-stu-id="da304-135">Information that is associated with the current sink, generated on the request side, and needed on the response side.</span></span></param>
        <param name="msg"><span data-ttu-id="da304-136">要序列化的响应消息。</span><span class="sxs-lookup"><span data-stu-id="da304-136">The response message to serialize.</span></span></param>
        <param name="headers"><span data-ttu-id="da304-137">要放置在将发送到客户端的响应流中的标头。</span><span class="sxs-lookup"><span data-stu-id="da304-137">The headers to put in the response stream to the client.</span></span></param>
        <summary><span data-ttu-id="da304-138">返回提供的响应消息将序列化到其上的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="da304-138">Returns the <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</span></span></summary>
        <returns><span data-ttu-id="da304-139">提供的响应消息将序列化到其上的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="da304-139">The <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da304-140">需要创建响应流时，将调用此方法。</span><span class="sxs-lookup"><span data-stu-id="da304-140">This method is called when a response stream needs to be created.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tdzwhfy3(v=vs.100)"><span data-ttu-id="da304-141">接收器和接收器链</span><span class="sxs-lookup"><span data-stu-id="da304-141">Sinks and Sink Chains</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextChannelSink As IServerChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IServerChannelSink ^ NextChannelSink { System::Runtime::Remoting::Channels::IServerChannelSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink" Usage="System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IServerChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da304-142">获取接收器链中的下一个 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" />。</span><span class="sxs-lookup"><span data-stu-id="da304-142">Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</span></span></summary>
        <value><span data-ttu-id="da304-143">接收器链中的下一个 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" />。</span><span class="sxs-lookup"><span data-stu-id="da304-143">The next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage(class System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage requestMsg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, [out] class System.Runtime.Remoting.Messaging.IMessage&amp; responseMsg, [out] class System.Runtime.Remoting.Channels.ITransportHeaders&amp; responseHeaders, [out] class System.IO.Stream&amp; responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessMessage (sinkStack As IServerChannelSinkStack, requestMsg As IMessage, requestHeaders As ITransportHeaders, requestStream As Stream, ByRef responseMsg As IMessage, ByRef responseHeaders As ITransportHeaders, ByRef responseStream As Stream) As ServerProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Channels::ServerProcessing ProcessMessage(System::Runtime::Remoting::Channels::IServerChannelSinkStack ^ sinkStack, System::Runtime::Remoting::Messaging::IMessage ^ requestMsg, System::Runtime::Remoting::Channels::ITransportHeaders ^ requestHeaders, System::IO::Stream ^ requestStream, [Runtime::InteropServices::Out] System::Runtime::Remoting::Messaging::IMessage ^ % responseMsg, [Runtime::InteropServices::Out] System::Runtime::Remoting::Channels::ITransportHeaders ^ % responseHeaders, [Runtime::InteropServices::Out] System::IO::Stream ^ % responseStream);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream * IMessage * ITransportHeaders * Stream -&gt; System.Runtime.Remoting.Channels.ServerProcessing&#xA;override this.ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream * IMessage * ITransportHeaders * Stream -&gt; System.Runtime.Remoting.Channels.ServerProcessing" Usage="binaryServerFormatterSink.ProcessMessage (sinkStack, requestMsg, requestHeaders, requestStream, responseMsg, responseHeaders, responseStream)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.ServerProcessing</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
        <Parameter Name="requestMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseMsg" Type="System.Runtime.Remoting.Messaging.IMessage" RefType="out" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sinkStack"><span data-ttu-id="da304-144">调用了当前接收器的信道接收器的堆栈。</span><span class="sxs-lookup"><span data-stu-id="da304-144">A stack of channel sinks that called the current sink.</span></span></param>
        <param name="requestMsg"><span data-ttu-id="da304-145">包含请求的消息。</span><span class="sxs-lookup"><span data-stu-id="da304-145">The message that contains the request.</span></span></param>
        <param name="requestHeaders"><span data-ttu-id="da304-146">从来自客户端的传入消息中检索到的标头。</span><span class="sxs-lookup"><span data-stu-id="da304-146">Headers that are retrieved from the incoming message from the client.</span></span></param>
        <param name="requestStream"><span data-ttu-id="da304-147">需要被处理并传递到反序列化接收器的流。</span><span class="sxs-lookup"><span data-stu-id="da304-147">The stream that needs to be processed and passed on to the deserialization sink.</span></span></param>
        <param name="responseMsg"><span data-ttu-id="da304-148">此方法返回时，包含持有响应消息的 <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />。</span><span class="sxs-lookup"><span data-stu-id="da304-148">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message.</span></span> <span data-ttu-id="da304-149">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="da304-149">This parameter is passed uninitialized.</span></span></param>
        <param name="responseHeaders"><span data-ttu-id="da304-150">此方法返回时，包含一个 <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" />，它持有要添加到将发往客户端的返回消息的标头。</span><span class="sxs-lookup"><span data-stu-id="da304-150">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to the return message that is heading to the client.</span></span> <span data-ttu-id="da304-151">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="da304-151">This parameter is passed uninitialized.</span></span></param>
        <param name="responseStream"><span data-ttu-id="da304-152">当此方法返回时，包含传向传输接收器的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="da304-152">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading to the transport sink.</span></span> <span data-ttu-id="da304-153">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="da304-153">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="da304-154">请求从当前接收器处理消息。</span><span class="sxs-lookup"><span data-stu-id="da304-154">Requests message processing from the current sink.</span></span></summary>
        <returns><span data-ttu-id="da304-155"><see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> 状态值，提供有关如何处理消息的信息。</span><span class="sxs-lookup"><span data-stu-id="da304-155">A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that provides information about how the message was processed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da304-156">代理的作业是将其上调用的方法调用转换为消息。</span><span class="sxs-lookup"><span data-stu-id="da304-156">The proxy's job is to convert a method call that is invoked on it into a message.</span></span> <span data-ttu-id="da304-157">用于实现接口的消息 <xref:System.Runtime.Remoting.Messaging.IMessage> 通过调用消息接收器对象从客户端传递到服务器端 <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> 。</span><span class="sxs-lookup"><span data-stu-id="da304-157">The message, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects.</span></span> <span data-ttu-id="da304-158">消息接收器链接在一起，这意味着每个消息接收器负责 <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> 在当前消息接收器完成其工作后，在下一个消息接收器上调用。</span><span class="sxs-lookup"><span data-stu-id="da304-158">Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after the current message sink has finished its work.</span></span> <span data-ttu-id="da304-159">例如，与同步相关的消息接收器可能会导致获取或释放锁，并将锁委托给下游消息接收器。</span><span class="sxs-lookup"><span data-stu-id="da304-159">For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.</span></span>  
  
 <span data-ttu-id="da304-160">当格式化程序信道接收器获取需要通过通道发送的消息时，它会调用并将 <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A> 消息作为参数传递。</span><span class="sxs-lookup"><span data-stu-id="da304-160">When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter.</span></span> <span data-ttu-id="da304-161">然后，格式化程序接收器创建传输标头数组，并 <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> 在格式化程序接收器上调用。</span><span class="sxs-lookup"><span data-stu-id="da304-161">The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink.</span></span> <span data-ttu-id="da304-162">此调用将被转发到接收器链，并且任何接收器都可以创建将传递回格式化程序接收器的请求流。</span><span class="sxs-lookup"><span data-stu-id="da304-162">This call is forwarded down the sink chain, and any sink can create a request stream that will be passed back to the formatter sink.</span></span> <span data-ttu-id="da304-163">此调用返回后，将对消息进行序列化，在 <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> 接收器链中的第一个链上调用，并将消息传递给信道接收器。</span><span class="sxs-lookup"><span data-stu-id="da304-163">After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.</span></span>  
  
 <span data-ttu-id="da304-164">信道接收器收到消息后，可以将数据写入流，将标头添加到标头数组，并在将调用转发到下一个接收器之前，将它们添加到接收器堆栈。</span><span class="sxs-lookup"><span data-stu-id="da304-164">After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink.</span></span> <span data-ttu-id="da304-165">当调用到达链末尾的传输接收器时，传输接收器会将标头和序列化消息通过通道发送到服务器，在此过程中，进程会反向进行。</span><span class="sxs-lookup"><span data-stu-id="da304-165">When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.</span></span>  
  
 <span data-ttu-id="da304-166">当消息到达服务器端时，传输接收器将从流中检索标头和序列化消息，并通过接收器链转发这些消息，直到到达格式化程序接收器。</span><span class="sxs-lookup"><span data-stu-id="da304-166">When the message gets to the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until the formatter sink is reached.</span></span> <span data-ttu-id="da304-167">格式化程序接收器然后对消息进行反序列化，并将其转发到远程处理基础结构。</span><span class="sxs-lookup"><span data-stu-id="da304-167">The formatter sink then deserializes the message and forwards it to the remoting infrastructure.</span></span> <span data-ttu-id="da304-168">然后，远程处理基础结构将消息转换为方法调用，并调用服务器对象。</span><span class="sxs-lookup"><span data-stu-id="da304-168">Then, the remoting infrastructure turns the message into a method call, and calls the server object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.IDictionary" Usage="System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannelSinkBase.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da304-169">获取当前信道接收器属性的 <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="da304-169">Gets a <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</span></span></summary>
        <value><span data-ttu-id="da304-170">当前信道接收器属性的 <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="da304-170">A <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da304-171">有关详细信息，请参阅 [通道和格式化程序配置属性](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="da304-171">For more information, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="da304-172">通道和格式化程序配置属性</span><span class="sxs-lookup"><span data-stu-id="da304-172">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TypeFilterLevel">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.TypeFilterLevel TypeFilterLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel TypeFilterLevel" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFilterLevel As TypeFilterLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::TypeFilterLevel TypeFilterLevel { System::Runtime::Serialization::Formatters::TypeFilterLevel get(); void set(System::Runtime::Serialization::Formatters::TypeFilterLevel value); };" />
      <MemberSignature Language="F#" Value="member this.TypeFilterLevel : System.Runtime.Serialization.Formatters.TypeFilterLevel with get, set" Usage="System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.TypeFilterLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da304-173">获取或设置 <see langword="TypeFilterLevel" /> 执行的自动反序列化的 <see langword="BinaryServerFormatterSink" /> 值。</span><span class="sxs-lookup"><span data-stu-id="da304-173">Gets or sets the <see langword="TypeFilterLevel" /> value of automatic deserialization that the <see langword="BinaryServerFormatterSink" /> performs.</span></span></summary>
        <value><span data-ttu-id="da304-174">表示当前自动反序列化级别的 <see langword="TypeFilterLevel" />。</span><span class="sxs-lookup"><span data-stu-id="da304-174">The <see langword="TypeFilterLevel" /> that represents the current automatic deserialization level.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da304-175">支持的值为 `Low` 默认) 和 (`Full` 。</span><span class="sxs-lookup"><span data-stu-id="da304-175">Supported values are `Low` (the default) and `Full`.</span></span> <span data-ttu-id="da304-176">有关反序列化级别的详细信息，请参阅 [.Net 远程处理中的自动反序列化](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/5dxse167(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="da304-176">For details about deserialization levels, see [Automatic Deserialization in .NET Remoting](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/5dxse167(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
