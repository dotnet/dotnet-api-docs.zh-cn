<Type Name="IServerChannelSink" FullName="System.Runtime.Remoting.Channels.IServerChannelSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d90f2294017ee540e6110211f58bdb9518486a22" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86759138" /></Metadata><TypeSignature Language="C#" Value="public interface IServerChannelSink : System.Runtime.Remoting.Channels.IChannelSinkBase" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServerChannelSink implements class System.Runtime.Remoting.Channels.IChannelSinkBase" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServerChannelSink&#xA;Implements IChannelSinkBase" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServerChannelSink : System::Runtime::Remoting::Channels::IChannelSinkBase" />
  <TypeSignature Language="F#" Value="type IServerChannelSink = interface&#xA;    interface IChannelSinkBase" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="99455-101">提供用于安全和传输接收器的方法。</span><span class="sxs-lookup"><span data-stu-id="99455-101">Provides methods used for security and transport sinks.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99455-102">信道接收器提供了一个插件点，该插件点允许访问流过通道的基础消息，以及用于将消息发送到远程对象的传输机制所使用的流。</span><span class="sxs-lookup"><span data-stu-id="99455-102">Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.</span></span> <span data-ttu-id="99455-103">信道接收器在通道接收器提供程序链中链接在一起，并且在序列化并传输消息之前，所有通道消息都流过此接收器链。</span><span class="sxs-lookup"><span data-stu-id="99455-103">Channel sinks are linked together in a chain of channel sink providers, and all channel messages flow through this chain of sinks before the message is serialized and transported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99455-104">下面的代码示例演示接口的实现 <xref:System.Runtime.Remoting.Channels.IServerChannelSink> 。</span><span class="sxs-lookup"><span data-stu-id="99455-104">The following code example illustrates an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSink> interface.</span></span>  
  
 [!code-cpp[Remoting_Sinks#60](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Sinks/CPP/serversink.cpp#60)]
 [!code-csharp[Remoting_Sinks#60](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Sinks/CS/serversink.cs#60)]  
  
 <span data-ttu-id="99455-105"><xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>有关相应的服务器接收器提供程序实现的示例，请参阅接口文档。</span><span class="sxs-lookup"><span data-stu-id="99455-105">See the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface documentation for an example of the corresponding server sink provider implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AsyncProcessResponse (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders, stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AsyncProcessResponse(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit" Usage="iServerChannelSink.AsyncProcessResponse (sinkStack, state, msg, headers, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack"><span data-ttu-id="99455-106">将发回服务器传输接收器的接收器堆栈。</span><span class="sxs-lookup"><span data-stu-id="99455-106">A stack of sinks leading back to the server transport sink.</span></span></param>
        <param name="state"><span data-ttu-id="99455-107">在请求端生成的、与此接收器关联的信息。</span><span class="sxs-lookup"><span data-stu-id="99455-107">Information generated on the request side that is associated with this sink.</span></span></param>
        <param name="msg"><span data-ttu-id="99455-108">响应消息。</span><span class="sxs-lookup"><span data-stu-id="99455-108">The response message.</span></span></param>
        <param name="headers"><span data-ttu-id="99455-109">要添加到将发往客户端的返回消息的标头。</span><span class="sxs-lookup"><span data-stu-id="99455-109">The headers to add to the return message heading to the client.</span></span></param>
        <param name="stream"><span data-ttu-id="99455-110">将发回传输接收器的流。</span><span class="sxs-lookup"><span data-stu-id="99455-110">The stream heading back to the transport sink.</span></span></param>
        <summary><span data-ttu-id="99455-111">请求从当前接收器对异步发送的方法调用的响应进行处理。</span><span class="sxs-lookup"><span data-stu-id="99455-111">Requests processing from the current sink of the response from a method call sent asynchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99455-112">`state`参数包含推送到信道接收器堆栈并与当前接收器关联的信息。</span><span class="sxs-lookup"><span data-stu-id="99455-112">The `state` parameter contains information that was pushed onto the channel sink stack and associated with the current sink.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CommonTransportKeys#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CommonTransportKeys/CPP/commontransportkeys.cpp#1)]
 [!code-csharp[CommonTransportKeys#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CommonTransportKeys/CS/commontransportkeys.cs#1)]
 [!code-vb[CommonTransportKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CommonTransportKeys/VB/commontransportkeys.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="99455-113">直接调用方没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="99455-113">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseStream (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetResponseStream(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream" Usage="iServerChannelSink.GetResponseStream (sinkStack, state, msg, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="sinkStack"><span data-ttu-id="99455-114">将发回服务器传输接收器的接收器堆栈。</span><span class="sxs-lookup"><span data-stu-id="99455-114">A stack of sinks leading back to the server transport sink.</span></span></param>
        <param name="state"><span data-ttu-id="99455-115">已被该接收器推送到堆栈的状态。</span><span class="sxs-lookup"><span data-stu-id="99455-115">The state that has been pushed to the stack by this sink.</span></span></param>
        <param name="msg"><span data-ttu-id="99455-116">要序列化的响应消息。</span><span class="sxs-lookup"><span data-stu-id="99455-116">The response message to serialize.</span></span></param>
        <param name="headers"><span data-ttu-id="99455-117">要放置在将发送到客户端的响应流中的标头。</span><span class="sxs-lookup"><span data-stu-id="99455-117">The headers to put in the response stream to the client.</span></span></param>
        <summary><span data-ttu-id="99455-118">返回提供的响应消息将序列化到其上的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="99455-118">Returns the <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</span></span></summary>
        <returns><span data-ttu-id="99455-119">提供的响应消息将序列化到其上的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="99455-119">The <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99455-120">需要创建响应流时，将调用此方法。</span><span class="sxs-lookup"><span data-stu-id="99455-120">This method is called when a response stream needs to be created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="99455-121">直接调用方没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="99455-121">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextChannelSink As IServerChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IServerChannelSink ^ NextChannelSink { System::Runtime::Remoting::Channels::IServerChannelSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink" Usage="System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IServerChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99455-122">获取服务器接收器链中的下一个服务器信道接收器。</span><span class="sxs-lookup"><span data-stu-id="99455-122">Gets the next server channel sink in the server sink chain.</span></span></summary>
        <value><span data-ttu-id="99455-123">服务器接收器链中的下一个服务器信道接收器。</span><span class="sxs-lookup"><span data-stu-id="99455-123">The next server channel sink in the server sink chain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99455-124">信道接收器在接收器提供程序链中链接在一起，在序列化和传输消息之前，所有信道消息都流过此链。</span><span class="sxs-lookup"><span data-stu-id="99455-124">Channel sinks are linked together in a chain of sink providers, and all channel messages flow through this chain before the message is serialized and transported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="99455-125">直接调用方没有所要求的 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="99455-125">The immediate caller does not have the required <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage(class System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage requestMsg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, [out] class System.Runtime.Remoting.Messaging.IMessage&amp; responseMsg, [out] class System.Runtime.Remoting.Channels.ITransportHeaders&amp; responseHeaders, [out] class System.IO.Stream&amp; responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessMessage (sinkStack As IServerChannelSinkStack, requestMsg As IMessage, requestHeaders As ITransportHeaders, requestStream As Stream, ByRef responseMsg As IMessage, ByRef responseHeaders As ITransportHeaders, ByRef responseStream As Stream) As ServerProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Channels::ServerProcessing ProcessMessage(System::Runtime::Remoting::Channels::IServerChannelSinkStack ^ sinkStack, System::Runtime::Remoting::Messaging::IMessage ^ requestMsg, System::Runtime::Remoting::Channels::ITransportHeaders ^ requestHeaders, System::IO::Stream ^ requestStream, [Runtime::InteropServices::Out] System::Runtime::Remoting::Messaging::IMessage ^ % responseMsg, [Runtime::InteropServices::Out] System::Runtime::Remoting::Channels::ITransportHeaders ^ % responseHeaders, [Runtime::InteropServices::Out] System::IO::Stream ^ % responseStream);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream * IMessage * ITransportHeaders * Stream -&gt; System.Runtime.Remoting.Channels.ServerProcessing" Usage="iServerChannelSink.ProcessMessage (sinkStack, requestMsg, requestHeaders, requestStream, responseMsg, responseHeaders, responseStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.ServerProcessing</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
        <Parameter Name="requestMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseMsg" Type="System.Runtime.Remoting.Messaging.IMessage" RefType="out" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sinkStack"><span data-ttu-id="99455-126">调用了当前接收器的信道接收器的堆栈。</span><span class="sxs-lookup"><span data-stu-id="99455-126">A stack of channel sinks that called the current sink.</span></span></param>
        <param name="requestMsg"><span data-ttu-id="99455-127">包含请求的消息。</span><span class="sxs-lookup"><span data-stu-id="99455-127">The message that contains the request.</span></span></param>
        <param name="requestHeaders"><span data-ttu-id="99455-128">从来自客户端的传入消息中检索到的标头。</span><span class="sxs-lookup"><span data-stu-id="99455-128">Headers retrieved from the incoming message from the client.</span></span></param>
        <param name="requestStream"><span data-ttu-id="99455-129">需要进行处理并传递到反序列化接收器的流。</span><span class="sxs-lookup"><span data-stu-id="99455-129">The stream that needs to be to processed and passed on to the deserialization sink.</span></span></param>
        <param name="responseMsg"><span data-ttu-id="99455-130">此方法返回时，包含持有响应消息的 <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />。</span><span class="sxs-lookup"><span data-stu-id="99455-130">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message.</span></span> <span data-ttu-id="99455-131">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="99455-131">This parameter is passed uninitialized.</span></span></param>
        <param name="responseHeaders"><span data-ttu-id="99455-132">当该方法返回时，包含一个 <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" />，它持有要添加到将发往客户端的返回消息的标头。</span><span class="sxs-lookup"><span data-stu-id="99455-132">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers that are to be added to return message heading to the client.</span></span> <span data-ttu-id="99455-133">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="99455-133">This parameter is passed uninitialized.</span></span></param>
        <param name="responseStream"><span data-ttu-id="99455-134">当该方法返回时，包含将发回到传输接收器的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="99455-134">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading back to the transport sink.</span></span> <span data-ttu-id="99455-135">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="99455-135">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="99455-136">请求从当前接收器处理消息。</span><span class="sxs-lookup"><span data-stu-id="99455-136">Requests message processing from the current sink.</span></span></summary>
        <returns><span data-ttu-id="99455-137">一个 <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> 状态值，该值提供有关如何处理消息的信息。</span><span class="sxs-lookup"><span data-stu-id="99455-137">A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that provides information about how message was processed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99455-138">代理的工作是将调用的方法调用转换为消息对象。</span><span class="sxs-lookup"><span data-stu-id="99455-138">The job of a proxy is to convert a method call invoked on it into a message object.</span></span> <span data-ttu-id="99455-139">此消息对象（实现 <xref:System.Runtime.Remoting.Messaging.IMessage> 接口）通过调用 <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> 消息接收器对象从客户端传递到服务器端。</span><span class="sxs-lookup"><span data-stu-id="99455-139">This message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects.</span></span> <span data-ttu-id="99455-140">消息接收器链接在一起，因为每个消息接收器都在 <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> 执行其工作后负责调用下一个消息接收器。</span><span class="sxs-lookup"><span data-stu-id="99455-140">Message sinks are chained together in the sense that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work.</span></span> <span data-ttu-id="99455-141">例如，与同步相关的消息接收器可以导致获取或释放锁，然后将其进一步委托给下游消息接收器。</span><span class="sxs-lookup"><span data-stu-id="99455-141">For instance, a synchronization-related message sink can cause a lock to be acquired or released, and then delegated further to the downstream message sink.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="99455-142">直接调用方没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="99455-142">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
