<Type Name="WebServiceAttribute" FullName="System.Web.Services.WebServiceAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1c9c6d4e03c91939b379f54f7e978728c96d482" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89923979" /></Metadata><TypeSignature Language="C#" Value="public sealed class WebServiceAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebServiceAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebServiceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebServiceAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebServiceAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WebServiceAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用于向 XML Web services 添加附加信息，如描述其功能的字符串。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.WebServiceAttribute>对于要发布和执行 XML Web service，不是必需的。 你可以使用 `WebServiceAttribute` 指定不受公共语言运行时标识符规则限制的 XML Web service 的名称，该标识符在服务说明和 XML Web service 的服务帮助页中使用。  
  
 XML Web service 应更改其默认的 XML 命名空间，然后将其公开。 每个 XML Web service 都需要一个唯一的 XML 命名空间来标识该命名空间，以便客户端应用程序可以将其与 Web 上的其他服务区分开来。 http://tempuri.org/ 适用于正在开发的 XML Web services，但发布的 XML Web services 应使用更永久性的命名空间。  
  
 您的 XML Web service 应由您控制的 XML 命名空间标识。 例如，你可以使用公司的 Internet 域名作为 XML 命名空间的一部分。 尽管许多 XML Web service XML 命名空间看起来像 Url，但它们不需要指向 Web 上的实际资源。  (XML Web service XML 命名空间为 Uri。 ) 用于使用 ASP.NET 创建的 XML Web services，则可以使用属性更改默认的 XML 命名空间 <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> 。  
  
 有关使用特性的详细信息，请参阅 [特性](/dotnet/standard/attributes/)。  
  
   
  
## Examples  
 下面的示例将 <xref:System.Web.Services.WebServiceAttribute.Description%2A> 的属性设置 <xref:System.Web.Services.WebServiceAttribute> 为 `"Common Server Variables"` ，并将 XML 命名空间设置为 `http://www.microsoft.com/` 。

[!code-aspx-csharp[Classic WebServiceAttribute Example](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebServiceAttribute Example/CS/sourcecs.asmx)]
[!code-aspx-vb[Classic WebServiceAttribute Example](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebServiceAttribute Example/VB/sourcevb.asmx)]    
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.WebService" />
    <altmember cref="T:System.Web.Services.WebMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcServiceAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebServiceAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.WebServiceAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNamespace">
      <MemberSignature Language="C#" Value="public const string DefaultNamespace;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultNamespace" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.WebServiceAttribute.DefaultNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultNamespace As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultNamespace;" />
      <MemberSignature Language="F#" Value="val mutable DefaultNamespace : string" Usage="System.Web.Services.WebServiceAttribute.DefaultNamespace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.Services.WebServiceAttribute.Namespace" /> 属性的默认值。 此字段为常数。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebServiceAttribute.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.Services.WebServiceAttribute.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web services 的描述性消息。</summary>
        <value>对 XML Web services 的功能进行描述的文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当生成 XML Web service 的说明文档时（如服务说明和服务帮助页），将在 XML Web service 的预期使用者中显示描述性消息。  
  
   
  
## Examples  
 下面的示例将 <xref:System.Web.Services.WebServiceAttribute.Description%2A> 属性设置为 `"Common Server Variables"` 。
  
[!code-aspx-csharp[Classic WebServiceAttribute Example](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebServiceAttribute Example/CS/sourcecs.asmx)]
[!code-aspx-vb[Classic WebServiceAttribute Example](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebServiceAttribute Example/VB/sourcevb.asmx)]    
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebServiceAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.Services.WebServiceAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 XML Web services 的名称。</summary>
        <value>XML Web services 的名称。 默认值是实现 XML Web services 的类的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当用户导航到 XML Web service 的 URL 并提供的查询字符串时，将生成服务说明？.WSDL. 在服务说明中， <xref:System.Web.Services.WebServiceAttribute.Name%2A> 属性标识 XML Web service 的 XML 限定名的本地部分。 `Name`属性还用于显示服务帮助页上的 XML Web service 的名称。 当预期使用者导航到 XML Web service 的 .asmx 页面，而不指定 XML Web service 方法名称及其参数时，将显示服务帮助页。  
  
 XML 限定名称用于区分具有 XML 文档的名称相同的元素。 XML 限定名称由以下两部分组成：由冒号：命名空间分隔的部分或与命名空间和本地部分关联的前缀。 命名空间由 URI 引用组成，而对于服务说明，它是属性的值 <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> 。 通常，前缀与 URI 的别名相同，与命名空间相关联，因此使用命名空间的所有后续 XML 限定名称都可以使用缩写前缀。 本地部分是一个字符串，以字母或下划线开头，不含空格。 因此，在服务说明中标识 XML Web service 的 XML 限定名称采用以下格式：  
  
 <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> : <xref:System.Web.Services.WebServiceAttribute.Name%2A>  
  
 有关 XML 限定名称的详细信息，请参阅 [xml 1.0 中的命名空间](https://www.w3.org/TR/REC-xml-names/)。
  
   
  
## Examples  
 下面的示例将 <xref:System.Web.Services.WebServiceAttribute.Name%2A> XML Web service 设置为 `MyName` 。  
  
[!code-aspx-csharp[Classic WebServiceAttribute.Name Example](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebServiceAttribute.Name Example/CS/sourcecs.asmx)]
[!code-aspx-vb[Classic WebServiceAttribute.Name Example](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebServiceAttribute.Name Example/VB/sourcevb.asmx)]    
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.WebServiceAttribute.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebServiceAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Web.Services.WebServiceAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于 XML Web services 的默认 XML 命名空间。</summary>
        <value>用于 XML Web services 的默认 XML 命名空间。 默认值在 <see cref="F:System.Web.Services.WebServiceAttribute.DefaultNamespace" /> 属性中指定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML 命名空间提供了一种在 XML 文档中创建名称的方法，该文档由 (URI) 的统一资源标识符标识。 通过使用 XML 命名空间，可以唯一标识 XML 文档中的元素或属性。 XML Web service 的服务说明是在 XML 中定义的，尤其是在 Web Services 描述语言 (WSDL) 中定义的。  
  
 在 XML Web service 的服务说明中， <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> 用作直接与 XML Web service 相关的 XML 元素的默认命名空间。 例如，XML Web service 及其 XML Web service 方法的名称与属性中指定的命名空间有关 `Namespace` 。 特定于 WSDL 的元素属于 <http://schemas.xmlsoap.org/wsdl/> 命名空间。  
  
 对于使用 SOAP 调用 XML Web service 的 XML Web service 客户端，可以选择性地添加 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 或 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> 以调用 XML Web service 方法。 如果客户端调用使用 ASP.NET 创建的 XML Web service，则 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace%2A> <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace%2A> 默认情况下，和 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A> 属性均派生自 <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> 属性。 例如，给定 XML Web service 方法名称，属性为 `Time` ，则 `Namespace` `http://www.contoso.com/` `Action` 默认情况下该属性为 `http://www.contoso.com/Time` 。 若要更改 XML Web service 方法的、和的默认设置， `RequestNamespace` `ResponseNamespace` 可以向 `Action` XML Web service 方法中添加 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 。  
  
> [!NOTE]
>  XML 命名空间不同于类所驻留的命名空间，Windows SDK。 若要指定类的命名空间，请参阅 [命名空间关键字](/dotnet/csharp/language-reference/keywords/namespace-keywords) （如果你用 c # 编写）。  
  
   
  
## Examples  
 下面的示例将设置 <xref:System.Web.Services.WebServiceAttribute.Namespace%2A> 为 `http://www.contoso.com` ，并 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A> 通过将添加 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 到 XML Web service 方法来重写属性的命名空间 `Time` 。  
  
[!code-aspx-csharp[Classic WebServiceAttribute.Namespace Example](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebServiceAttribute.Namespace Example/CS/sourcecs.asmx)]
[!code-aspx-vb[Classic WebServiceAttribute.Namespace Example](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebServiceAttribute.Namespace Example/VB/sourcevb.asmx)]    
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.Services.WebServiceAttribute.DefaultNamespace" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace" />
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace" />
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" />
        <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>
