<Type Name="HtmlMeta" FullName="System.Web.UI.HtmlControls.HtmlMeta">
  <Metadata><Meta Name="ms.openlocfilehash" Value="869a96e67de3e4f1adfecbe8622b2d25c948e095" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89780715" /></Metadata><TypeSignature Language="C#" Value="public class HtmlMeta : System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlMeta extends System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlMeta" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlMeta&#xA;Inherits HtmlControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlMeta : System::Web::UI::HtmlControls::HtmlControl" />
  <TypeSignature Language="F#" Value="type HtmlMeta = class&#xA;    inherit HtmlControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ControlBuilder(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ControlBuilder(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许以编程方式访问服务器上的 HTML <see langword="&lt;meta&gt;" /> 标记。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlMeta>控件提供对服务器上的 HTML 元素的编程访问 `<meta>` 。 HTML `<meta>` 元素是有关呈现的页的数据的容器，但不是页内容本身。 `<meta>`标记放置在开始和关闭 HTML `<head>` 元素之间。 每个 `<meta>` 元素都描述了元数据属性名称及其关联值。  
  
 使用 <xref:System.Web.UI.HtmlControls.HtmlMeta> 控件的 <xref:System.Web.UI.HtmlControls.HtmlMeta.Name%2A> 属性来指定元数据属性名称，并使用 <xref:System.Web.UI.HtmlControls.HtmlMeta.Content%2A> 属性指定元数据属性值。 使用 <xref:System.Web.UI.HtmlControls.HtmlMeta.Scheme%2A> 属性为用户代理指定有关如何解释元数据属性的其他信息。 <xref:System.Web.UI.HtmlControls.HtmlMeta.HttpEquiv%2A> <xref:System.Web.UI.HtmlControls.HtmlMeta.Name%2A> 当使用 HTTP 检索生成的元数据属性时，请使用属性来代替属性。  
  
 可以 `<head>` 使用对象的属性获取对 page 元素的引用 <xref:System.Web.UI.Page.Header%2A> <xref:System.Web.UI.Page> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlMeta> 控件为网页定义 HTML `<meta>` 元素。 `<meta>`定义了两个元素，一个列表关键字用于描述页面，另一个列出创建页面的日期。  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlMeta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlMeta/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlMeta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlMeta/vb/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTitle" />
    <altmember cref="P:System.Web.UI.Page.Header" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlMeta ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlMeta.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlMeta();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建并初始化控件的新实例 <xref:System.Web.UI.HtmlControls.HtmlMeta> 。  
  
 下表显示了实例的初始属性值 <xref:System.Web.UI.HtmlControls.HtmlMeta> 。  
  
|属性|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Meta" 文本字符串。|  
  
   
  
## Examples  
 有关如何使用 <xref:System.Web.UI.HtmlControls.HtmlMeta.%23ctor%2A> 构造函数的示例，请参阅 <xref:System.Web.UI.HtmlControls.HtmlMeta> 类概述主题。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual string Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlMeta.Content" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Content As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Content { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlMeta.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> 控件定义的元数据属性值。</summary>
        <value>元数据属性值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlMeta.Content%2A>属性与 <xref:System.Web.UI.HtmlControls.HtmlMeta.Name%2A> 属性一起定义页的元数据属性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlMeta.Content%2A>属性呈现为 `content` 生成的 HTML 元素的特性 `<meta>` 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlMeta> 控件为网页定义 HTML `<meta>` 元素。 `<meta>`定义了两个元素，一个列表关键字用于描述页面，另一个列出创建页面的日期。 <xref:System.Web.UI.HtmlControls.HtmlMeta.Content%2A>属性用于定义 `content` 每个标记的属性 `<meta>` 。  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlMeta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlMeta/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlMeta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlMeta/vb/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlMeta.Name" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlMeta.Scheme" />
      </Docs>
    </Member>
    <Member MemberName="HttpEquiv">
      <MemberSignature Language="C#" Value="public virtual string HttpEquiv { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpEquiv" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlMeta.HttpEquiv" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HttpEquiv As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HttpEquiv { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpEquiv : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlMeta.HttpEquiv" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 HTTP 响应标头中包含的 <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> 控件属性。</summary>
        <value>HTTP 响应标头项的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlMeta.HttpEquiv%2A> 属性代替 <xref:System.Web.UI.HtmlControls.HtmlMeta.Name%2A> 属性来标识应包含在 HTTP 请求的响应标头中的信息。  
  
 <xref:System.Web.UI.HtmlControls.HtmlMeta.HttpEquiv%2A>属性呈现为 `http-equiv` 生成的 HTML 元素的特性 `<meta>` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlMeta.Name" />
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlMeta.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlMeta.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> 控件定义的元数据属性名称。</summary>
        <value>属性名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlMeta.Name%2A>属性与 <xref:System.Web.UI.HtmlControls.HtmlMeta.Content%2A> 属性一起定义页的元数据属性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlMeta.Name%2A>属性呈现为 `name` 生成的 HTML 元素的特性 `<meta>` 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlMeta> 控件为网页定义 HTML `<meta>` 元素。 `<meta>`定义了两个标记，一个列表关键字用于描述页面，另一个列出创建页面的日期。 <xref:System.Web.UI.HtmlControls.HtmlMeta.Name%2A>属性用于定义 `name` 每个标记的属性 `<meta>` 。  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlMeta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlMeta/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlMeta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlMeta/vb/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlMeta.Content" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlMeta.Scheme" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlMeta.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlMeta.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> 用于在客户端浏览器上呈现 <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> 控件的内容。</param>
        <summary>使用指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象将 <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> 控件呈现给客户端浏览器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlMeta> <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> `<meta>` 如果客户端的浏览器符合 XHTML，控件将在元素上呈现)  (/> 的 HTML 括号。 有关为非 XHTML 呈现配置 ASP.NET 的详细信息，请参阅 [如何：在 ASP.NET 网站中配置 XHTML 呈现](https://docs.microsoft.com/previous-versions/aspnet/ms178159(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>扩展控件时 <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> ，重写 <see cref="M:System.Web.UI.HtmlControls.HtmlMeta.Render(System.Web.UI.HtmlTextWriter)" /> 方法以提供自定义呈现。</para></block>
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100)">ASP.NET 和 XHTML 遵从性</related>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public virtual string Scheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlMeta.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlMeta.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see langword="scheme" /> 特性，该特性用于解释由 <see cref="T:System.Web.UI.HtmlControls.HtmlMeta" /> 控件定义的元数据属性值。</summary>
        <value><see langword="scheme" /> 特性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlMeta.Scheme%2A>属性允许您指定 `scheme` 呈现的 HTML 元素的特性 `<meta>` 。 `scheme`特性可用于提供用户代理，如客户端浏览器或搜索引擎，以及用于解释元数据属性的其他上下文。  
  
 <xref:System.Web.UI.HtmlControls.HtmlMeta.Scheme%2A>属性呈现为 `scheme` 生成的 HTML 元素的特性 `<meta>` 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlMeta> 控件为网页定义 HTML `<meta>` 元素。 `<meta>`定义了两个标记，一个列表关键字用于描述页面，另一个列出创建页面的日期。 <xref:System.Web.UI.HtmlControls.HtmlMeta.Scheme%2A>属性用于与日期相关的 `<meta>` 标记，以帮助用户代理读取日期值。  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlMeta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlMeta/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlMeta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlMeta/vb/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlMeta.Content" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlMeta.Name" />
      </Docs>
    </Member>
  </Members>
</Type>
