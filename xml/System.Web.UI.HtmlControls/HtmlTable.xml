<Type Name="HtmlTable" FullName="System.Web.UI.HtmlControls.HtmlTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0889e01f99d4c1b5427b29487ac9fd42fcf21fa2" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89726270" /></Metadata><TypeSignature Language="C#" Value="public class HtmlTable : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlTable extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTable" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTable&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTable : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlTable = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ParseChildren(true, "Rows")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ParseChildren(true, "Rows")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许在服务器上对 HTML <see langword="&lt;table&gt;" /> 元素进行编程访问。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTable> 控件以编程方式控制 `<table>` 服务器上的 HTML 元素。 这允许您在网页上创建表。  
  
 可以 `<table>` 通过设置、、、 <xref:System.Web.UI.HtmlControls.HtmlTable.BgColor%2A> <xref:System.Web.UI.HtmlControls.HtmlTable.Border%2A> <xref:System.Web.UI.HtmlControls.HtmlTable.BorderColor%2A> <xref:System.Web.UI.HtmlControls.HtmlTable.Height%2A> 和 <xref:System.Web.UI.HtmlControls.HtmlTable.Width%2A> 属性，动态更改元素的外观。 还可以通过设置 <xref:System.Web.UI.HtmlControls.HtmlTable.Align%2A> 、和属性来控制单元格内容的显示方式 <xref:System.Web.UI.HtmlControls.HtmlTable.CellPadding%2A> <xref:System.Web.UI.HtmlControls.HtmlTable.CellSpacing%2A> 。  
  
 控件的行 <xref:System.Web.UI.HtmlControls.HtmlTable> 存储在控件的属性中 <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> 。 这使您能够以编程方式访问表中的各个行。  
  
> [!NOTE]
>  不支持复杂表模型。 不能将 <xref:System.Web.UI.HtmlControls.HtmlTable> 控件与嵌套的、、、、 `<caption>` `<col>` `<colgroup>` `<tbody>` `<thead>` 或 `<tfoot>` 元素一起使用。 这些元素将被删除，而不会发出警告，并且不会显示在输出 HTML 中。 如果尝试以编程方式将这些表模型元素添加到控件的集合，则将引发异常 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 有关实例的初始属性值的列表 <xref:System.Web.UI.HtmlControls.HtmlTable> ，请参见 <xref:System.Web.UI.HtmlControls.HtmlTable.%23ctor%2A> 构造函数。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlTable> 控件显示表中的信息。  
  
 [!code-aspx-csharp[HtmlTableAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableAppearance/CS/htmltablebgcolorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableAppearance/VB/htmltablebgcolorvb.aspx#1)]  
  
 下面的代码示例演示如何动态创建 <xref:System.Web.UI.HtmlControls.HtmlTable> 控件。  
  
 [!code-aspx-csharp[HtmlTable#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTable/CS/htmltablecs.aspx#1)]
 [!code-aspx-vb[HtmlTable#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTable/VB/htmltablevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建并初始化类的新实例 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 下表显示了实例的初始属性值 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Table" 文本字符串。|  
  
   
  
## Examples  
 下面的代码示例演示如何以编程方式创建控件的新实例 <xref:System.Web.UI.HtmlControls.HtmlTable> 并将其放置在网页上。  
  
 [!code-aspx-csharp[HtmlTableCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCtor/CS/htmltablectorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCtor/VB/htmltablectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableRow.#ctor" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public string Align { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Align" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTable.Align" />
      <MemberSignature Language="VB.NET" Value="Public Property Align As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Align { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Align : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTable.Align" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件相对于网页上其他元素的对齐方式。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件相对于网页上其他元素的对齐方式。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTable.Align%2A> 属性指定 <xref:System.Web.UI.HtmlControls.HtmlTable> 控件相对于网页上其他元素的对齐方式。  
  
> [!NOTE]
>  此属性不控制控件的单元格中内容的对齐方式 <xref:System.Web.UI.HtmlControls.HtmlTable> 。 若要控制单个单元格的内容对齐方式，请使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A> 类的和 <xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A> 属性 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。 还可以通过使用类的和属性，控制整行中单元格内容的对齐 <xref:System.Web.UI.HtmlControls.HtmlTableRow.Align%2A> 方式 <xref:System.Web.UI.HtmlControls.HtmlTableRow.VAlign%2A> <xref:System.Web.UI.HtmlControls.HtmlTableRow> 。  
  
 下表列出了可用于此属性的值。  
  
|“值”|说明|  
|-----------|-----------------|  
|`Left`|使 <xref:System.Web.UI.HtmlControls.HtmlTable> 控件在网页的左边缘对齐。|  
|`Center`|在网页 <xref:System.Web.UI.HtmlControls.HtmlTable> 中间对齐控件。|  
|`Right`|使 <xref:System.Web.UI.HtmlControls.HtmlTable> 控件在网页的右边缘对齐。|  
  
> [!NOTE]
>  如果指定 `Left` 或 `Right` 对齐，则网页上的其他元素将分别换行到控件的右侧或左侧 <xref:System.Web.UI.HtmlControls.HtmlTable> 。 如果指定 `Center` 对齐方式，则不进行换行，并且其他元素显示在控件下方。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlTable.Align%2A> 属性指定 <xref:System.Web.UI.HtmlControls.HtmlTable> 控件相对于网页上其他元素的对齐方式。  
  
 [!code-aspx-csharp[HtmlTableLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableLayout/CS/htmltablealigncs.aspx#1)]
 [!code-aspx-vb[HtmlTableLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableLayout/VB/htmltablealignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.CellSpacing" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.CellPadding" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="BgColor">
      <MemberSignature Language="C#" Value="public string BgColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BgColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTable.BgColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BgColor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BgColor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BgColor : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTable.BgColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的背景色。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的背景色。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTable.BgColor%2A> 属性指定控件的背景色 <xref:System.Web.UI.HtmlControls.HtmlTable> 。 您可以按名称指定颜色，也可以使用十六进制值（前面带有井号字符） ( # ) ，格式为 #RRGGBB。 RR、GG 和 BB 表示0到255之间的十六进制值，分别指示颜色的红色、绿色和蓝色成分。 例如，值 #0000FF 表示蓝色。 它指定红色和绿色分量 (00) 的最小值，同时指定蓝色分量 (FF) 的最大值。  
  
 下表显示了十六种预定义的 HTML 颜色名称以及可用于属性的相应十六进制值 <xref:System.Web.UI.HtmlControls.HtmlTable.BgColor%2A> 。 有关 HTML 颜色的详细信息，请参阅 [W3C) 网站 (万维网联合会](https://go.microsoft.com/fwlink/?linkid=37125)。  
  
|颜色名称|十六进制值|  
|----------------|-----------------------|  
|Aqua|#00FFFF|  
|黑色|#000000|  
|蓝色|#0000FF|  
|Fuchsia|#FF00FF|  
|灰色|#808080|  
|绿色|#008000|  
|酸|#00FF00|  
|褐紫红色|#800000|  
|Navy|#000080|  
|橄榄绿|#808000|  
|紫色|#800080|  
|Red|#FF0000|  
|Silver|#C0C0C0|  
|青色|#008080|  
|White|#FFFFFF|  
|Yellow|#FFFF00|  
  
 <xref:System.Web.UI.HtmlControls.HtmlTable.BgColor%2A>可从枚举确定用于属性的可用颜色 <xref:System.Drawing.KnownColor> 。  
  
 颜色名称不区分大小写。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性以 <xref:System.Web.UI.HtmlControls.HtmlTable.BgColor%2A> 编程方式控制控件的背景色 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTableAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableAppearance/CS/htmltablebgcolorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableAppearance/VB/htmltablebgcolorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Border" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Height" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Width" />
        <altmember cref="T:System.Drawing.KnownColor" />
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public int Border { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Border" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTable.Border" />
      <MemberSignature Language="VB.NET" Value="Public Property Border As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Border { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Border : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTable.Border" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(-1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(-1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的边框宽度（以像素为单位）。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的边框宽度（以像素为单位）。 默认值为 -1，指示未设置边框宽度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTable.Border%2A> 属性指定边框的宽度。 如果不想显示控件的边框 <xref:System.Web.UI.HtmlControls.HtmlTable> ，请将此属性设置为 0 (没有边框宽度) 或-1 (边框宽度未设置) 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性以 <xref:System.Web.UI.HtmlControls.HtmlTable.Border%2A> 编程方式控制控件的边框宽度 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTableAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableAppearance/CS/htmltablebgcolorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableAppearance/VB/htmltablebgcolorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Height" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Width" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public string BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTable.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BorderColor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTable.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的边框颜色。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的边框颜色。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTable.BorderColor%2A> 属性指定控件的边框颜色 <xref:System.Web.UI.HtmlControls.HtmlTable> 。 您可以按名称指定颜色，也可以使用十六进制值（前面带有井号字符） ( # ) ，格式为 #RRGGBB。 RR、GG 和 BB 表示0到255之间的十六进制值，分别指示颜色的红色、绿色和蓝色成分。 例如，值 #0000FF 表示蓝色。 它指定红色和绿色分量 (00) 的最小值，同时指定蓝色分量 (FF) 的最大值。  
  
 下表显示了十六种预定义的 HTML 颜色名称以及可用于属性的相应十六进制值 <xref:System.Web.UI.HtmlControls.HtmlTable.BorderColor%2A> 。 有关 HTML 颜色的详细信息，请参阅 [W3C) 网站 (万维网联合会](https://go.microsoft.com/fwlink/?linkid=37125)。  
  
|颜色名称|十六进制值|  
|----------------|-----------------------|  
|Aqua|#00FFFF|  
|黑色|#000000|  
|蓝色|#0000FF|  
|Fuchsia|#FF00FF|  
|灰色|#808080|  
|绿色|#008000|  
|酸|#00FF00|  
|褐紫红色|#800000|  
|Navy|#000080|  
|橄榄绿|#808000|  
|紫色|#800080|  
|Red|#FF0000|  
|Silver|#C0C0C0|  
|青色|#008080|  
|White|#FFFFFF|  
|Yellow|#FFFF00|  
  
 <xref:System.Web.UI.HtmlControls.HtmlTable.BorderColor%2A>可从枚举确定用于属性的可用颜色 <xref:System.Drawing.KnownColor> 。  
  
 颜色名称不区分大小写。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性以 <xref:System.Web.UI.HtmlControls.HtmlTable.BorderColor%2A> 编程方式控制控件的边框颜色 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTableAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableAppearance/CS/htmltablebgcolorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableAppearance/VB/htmltablebgcolorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Border" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Height" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Width" />
        <altmember cref="T:System.Drawing.KnownColor" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTable.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTable.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件中单元格内容和单元格边框之间的间距（以像素为单位）。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件中单元格内容和单元格边框之间的间距（以像素为单位）。 默认值为 -1，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTable.CellPadding%2A> 属性可控制单元格的内容和单元格的边框之间的间距。 指定的填充量将添加到单元格的四个边。 列中的所有单元格都具有相同的单元宽度;因此，间距适用于列中最宽的单元格。 同样，同一行中的所有单元格都具有相同的单元高度。 间距应用于行中最高的单元格。 无法指定单个单元大小。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性以 <xref:System.Web.UI.HtmlControls.HtmlTable.CellPadding%2A> 编程方式控制单元格的内容与控件中单元格的边框之间的间距 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTableLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableLayout/CS/htmltablealigncs.aspx#1)]
 [!code-aspx-vb[HtmlTableLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableLayout/VB/htmltablealignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTable.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTable.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件中相邻单元格之间的间距（以像素为单位）。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件中相邻单元格之间的间距（以像素为单位）。 默认值为 -1，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTable.CellSpacing%2A> 属性控制控件中各个单元格之间的间距 <xref:System.Web.UI.HtmlControls.HtmlTable> 。 此间距同时应用于垂直和水平。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性以 <xref:System.Web.UI.HtmlControls.HtmlTable.CellSpacing%2A> 编程方式控制控件中单元格的间距 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTableLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableLayout/CS/htmltablealigncs.aspx#1)]
 [!code-aspx-vb[HtmlTableLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableLayout/VB/htmltablealignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.CellPadding" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTable.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlTable.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为 <see cref="T:System.Web.UI.ControlCollection" /> 控件创建一个新的 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 对象。</summary>
        <returns>包含 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的子服务器控件的 <see cref="T:System.Web.UI.ControlCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTable.CreateControlCollection%2A>方法创建一个 <xref:System.Web.UI.ControlCollection> 用于保存表行的对象。  
  
 <xref:System.Web.UI.HtmlControls.HtmlTable.CreateControlCollection%2A> 方法主要由扩展 <xref:System.Web.UI.HtmlControls.HtmlTable> 控件功能的控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable.HtmlTableRowControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public string Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTable.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Height { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Height : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTable.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的高度。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的高度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTable.Height%2A> 属性控制控件的高度 <xref:System.Web.UI.HtmlControls.HtmlTable> 。 高度通常以像素为单位指定。 不过，还可以通过将百分号 (% ) 追加到值来指定浏览器窗口高度的百分比。 例如，值 `100%` 表示表的高度，即浏览器窗口的高度。 当用户更改窗口大小时，该表会自动扩展和收缩。  
  
> [!NOTE]
>  如果指定的值小于显示控件内容所需的值 <xref:System.Web.UI.HtmlControls.HtmlTable> ，则忽略此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlTable.Height%2A> 属性以编程方式控制控件的高度 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTableAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableAppearance/CS/htmltablebgcolorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableAppearance/VB/htmltablebgcolorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Border" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Width" />
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public override string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTable.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerHtml : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTable.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件的开始标记和结束标记之间的内容，但不自动将特殊字符转换为等效的 HTML 实体。 此控件不支持该属性。</summary>
        <value>控件的开始标记和结束标记之间的内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  不要读取或为此属性赋值。 否则，将引发 <xref:System.NotSupportedException?displayProperty=nameWithType> 异常。 此属性是从类继承的 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> ，不适用于 <xref:System.Web.UI.HtmlControls.HtmlTable> 类。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">尝试读取此属性的值或向其分配值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.InnerText" />
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTable.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTable.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件的开始标记和结束标记之间的内容，并自动将特殊字符转换为等效的 HTML 实体。 此控件不支持该属性。</summary>
        <value>控件的开始标记和结束标记之间的内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  不要读取或为此属性赋值。 否则，将引发 <xref:System.NotSupportedException?displayProperty=nameWithType> 异常。 此属性是从类继承的 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> ，不适用于 <xref:System.Web.UI.HtmlControls.HtmlTable> 类。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">尝试读取此属性的值或向其分配值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTable.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderChildren (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlTable.RenderChildren writer" />
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的子控件呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTable.RenderChildren%2A>方法在调用基类的方法之前和之后提供其他格式设置 <xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=nameWithType> 。 其他格式设置 <xref:System.Web.UI.HtmlControls.HtmlTable> 通过在呈现 <xref:System.Web.UI.HtmlControls.HtmlTable> 控件的子控件之前插入行返回和缩进，使呈现的 HTML 控件更易于读取。  
  
 <xref:System.Web.UI.HtmlControls.HtmlTable.RenderChildren%2A>方法主要由控件开发人员用来扩展控件的功能 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
   
  
## Examples  
 下面的代码示例演示如何重写 <xref:System.Web.UI.HtmlControls.HtmlTable.RenderChildren%2A> 自定义服务器控件中的方法，以便将新的表行追加到 <xref:System.Web.UI.HtmlControls.HtmlTable> 控件上。  
  
 [!code-aspx-csharp[CustomHtmlTableRenderChildren#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTableRenderChildren/CS/custom_htmltable_renderchildrencs.aspx#1)]
 [!code-aspx-vb[CustomHtmlTableRenderChildren#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTableRenderChildren/VB/custom_htmltable_renderchildrenvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlTableRenderChildren#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTableRenderChildren/CS/custom_htmltable_renderchildren.cs#2)]
 [!code-vb[CustomHtmlTableRenderChildren#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTableRenderChildren/VB/custom_htmltable_renderchildren.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTable.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlTable.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的结束标记。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTable.RenderEndTag%2A>方法在调用基类的方法之后提供其他格式设置 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A?displayProperty=nameWithType> 。 其他格式设置 <xref:System.Web.UI.HtmlControls.HtmlTable> 通过插入结束标记后的行返回，使呈现的 HTML 控件更易于读取 `<table>` 。  
  
 <xref:System.Web.UI.HtmlControls.HtmlTable.RenderChildren%2A>方法主要由控件开发人员用来扩展控件的功能 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
   
  
## Examples  
 下面的代码示例演示如何重写 <xref:System.Web.UI.HtmlControls.HtmlTable.RenderEndTag%2A> 方法，以便它始终在自定义服务器控件中写入结束标记和新行 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[CustomHtmlTableRenderEndTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTableRenderEndTag/CS/custom_htmltable_renderendtagcs.aspx#1)]
 [!code-aspx-vb[CustomHtmlTableRenderEndTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTableRenderEndTag/VB/custom_htmltable_renderendtagvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlTableRenderEndTag#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTableRenderEndTag/CS/custom_htmltable_renderendtag.cs#2)]
 [!code-vb[CustomHtmlTableRenderEndTag#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTableRenderEndTag/VB/custom_htmltable_renderendtag.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.HtmlControls.HtmlTableRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlTableRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTable.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Rows As HtmlTableRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::HtmlControls::HtmlTableRowCollection ^ Rows { System::Web::UI::HtmlControls::HtmlTableRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Web.UI.HtmlControls.HtmlTableRowCollection" Usage="System.Web.UI.HtmlControls.HtmlTable.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlTableRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含 <see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" /> 控件中的所有行的 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 集合。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" />，它包含 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件中的所有行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> 集合以编程方式访问控件中的行 <xref:System.Web.UI.HtmlControls.HtmlTable> 。 您可以通过编程方式将行添加到集合中，也可以在集合中插入行。  
  
> [!NOTE]
>  如果 `<tr>` 控件中未列出任何元素 <xref:System.Web.UI.HtmlControls.HtmlTable> ， <xref:System.Web.UI.HtmlControls.HtmlTableRowCollection> 则返回空对象。  
  
   
  
## Examples  
 下面的代码示例演示如何使用集合以 <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> 编程方式向控件添加行 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTable#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTable/CS/htmltablecs.aspx#1)]
 [!code-aspx-vb[HtmlTable#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTable/VB/htmltablevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRowCollection" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public string Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTable.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Width { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Width : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTable.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的宽度。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的宽度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTable.Width%2A> 属性控制控件的宽度 <xref:System.Web.UI.HtmlControls.HtmlTable> 。 宽度通常以像素为单位指定。 不过，还可以通过将百分号 (% ) 追加到值来指定浏览器窗口宽度的百分比。 例如，值 `100%` 指示表格宽度为浏览器窗口的宽度。 当用户更改窗口大小时，该表会自动扩展和收缩。  
  
> [!NOTE]
>  如果指定的值小于显示控件内容所需的值 <xref:System.Web.UI.HtmlControls.HtmlTable> ，则忽略此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlTable.Width%2A> 属性以编程方式控制控件的宽度 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTableAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableAppearance/CS/htmltablebgcolorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableAppearance/VB/htmltablebgcolorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Border" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Height" />
      </Docs>
    </Member>
  </Members>
</Type>
