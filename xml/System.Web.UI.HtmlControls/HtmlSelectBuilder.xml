<Type Name="HtmlSelectBuilder" FullName="System.Web.UI.HtmlControls.HtmlSelectBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a1e912b98244d902d00c4e9b58bee3cdcc8dda3" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86630966" /></Metadata><TypeSignature Language="C#" Value="public class HtmlSelectBuilder : System.Web.UI.ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlSelectBuilder extends System.Web.UI.ControlBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlSelectBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlSelectBuilder&#xA;Inherits ControlBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlSelectBuilder : System::Web::UI::ControlBuilder" />
  <TypeSignature Language="F#" Value="type HtmlSelectBuilder = class&#xA;    inherit ControlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ControlBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>与分析器进行交互以生成 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder>控件与页分析器进行交互以生成 <xref:System.Web.UI.HtmlControls.HtmlSelect> 控件。 使用 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder> 控件自定义控件的分析 <xref:System.Web.UI.HtmlControls.HtmlSelect> 。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.AllowWhitespaceLiterals%2A>将属性设置为， `false` 以使空白始终被忽略。 使用 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType%2A> 方法确定 <xref:System.Web.UI.HtmlControls.HtmlSelect> 控件的子控件的类型。  
  
   
  
## Examples  
 下面的代码示例演示如何创建自定义 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder> 控件，该控件定义 `<option>` 自定义控件的两种类型的子元素 <xref:System.Web.UI.HtmlControls.HtmlSelect> ，然后以不同的方式处理每个类型。  
  
 [!code-aspx-csharp[HtmlSelectBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectBuilder/cs/source.aspx#1)]
 [!code-aspx-vb[HtmlSelectBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectBuilder/vb/source.aspx#1)]  
  
 [!code-csharp[HtmlSelectBuilder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectBuilder/cs/source.cs#2)]
 [!code-vb[HtmlSelectBuilder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectBuilder/vb/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>若要为控件创建自定义控件生成器 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> ，需要从此类继承。</para></block>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
    <altmember cref="T:System.Web.UI.ControlBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlSelectBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlSelectBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlSelectBuilder" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  此构造函数由 ASP.NET 在分析页和创建控件层次结构时使用。 它不应在代码中使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
      </Docs>
    </Member>
    <Member MemberName="AllowWhitespaceLiterals">
      <MemberSignature Language="C#" Value="public override bool AllowWhitespaceLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AllowWhitespaceLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.AllowWhitespaceLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AllowWhitespaceLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool AllowWhitespaceLiterals();" />
      <MemberSignature Language="F#" Value="override this.AllowWhitespaceLiterals : unit -&gt; bool" Usage="htmlSelectBuilder.AllowWhitespaceLiterals " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定是处理还是忽略 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中的空白。</summary>
        <returns>此方法总是返回 <see langword="false" />，指示忽略 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中的空白。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将重写 <xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A?displayProperty=nameWithType> 方法，以始终忽略控件中的空白 <xref:System.Web.UI.HtmlControls.HtmlSelect> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
      </Docs>
    </Member>
    <Member MemberName="GetChildControlType">
      <MemberSignature Language="C#" Value="public override Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetChildControlType(string tagName, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildControlType (tagName As String, attribs As IDictionary) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetChildControlType(System::String ^ tagName, System::Collections::IDictionary ^ attribs);" />
      <MemberSignature Language="F#" Value="override this.GetChildControlType : string * System.Collections.IDictionary -&gt; Type" Usage="htmlSelectBuilder.GetChildControlType (tagName, attribs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="tagName">子控件的标记名称。</param>
        <param name="attribs">包含在子控件中的属性的数组。</param>
        <summary>获取 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的子控件的 <see cref="T:System.Type" />。</summary>
        <returns><see cref="T:System.Type" /> 控件的指定子控件的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType%2A> 方法返回 <xref:System.Type> 控件中指定子控件的 <xref:System.Web.UI.HtmlControls.HtmlSelect> 。  
  
   
  
## Examples  
 下面的代码示例演示如何重写 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType%2A> 方法以检查自定义子控件类型。 有关完整的工作代码示例，请参阅 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder> 类概述主题。  
  
 [!code-csharp[HtmlSelectBuilder#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectBuilder/cs/source.cs#3)]
 [!code-vb[HtmlSelectBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectBuilder/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
      </Docs>
    </Member>
  </Members>
</Type>
