<Type Name="HtmlLink" FullName="System.Web.UI.HtmlControls.HtmlLink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0b562bae111f319fd98af64a137b25e1e869904" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86674516" /></Metadata><TypeSignature Language="C#" Value="public class HtmlLink : System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlLink extends System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlLink" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlLink&#xA;Inherits HtmlControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlLink : System::Web::UI::HtmlControls::HtmlControl" />
  <TypeSignature Language="F#" Value="type HtmlLink = class&#xA;    inherit HtmlControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ControlBuilder(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ControlBuilder(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许对服务器上的 HTML <see langword="link" /> 元素进行编程访问。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlLink>控件允许以编程方式访问 `link` 服务器上的 HTML 元素。 <xref:System.Web.UI.HtmlControls.HtmlLink>控件可用于以编程方式在网页中指定 (CSS) 引用的级联样式表。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlLink> 控件以编程方式将样式表添加到网页。  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlLink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlLink/CS/htmllinkcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlLink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlLink/VB/htmllinkvb.aspx#1)]  
  
 若要运行前面的代码示例，需要一个名为的级联样式表 (CSS) `Stylesheet.css` ，其中包含以下代码，与您的网站保存在同一目录中。  
  
```vb  
body {  
  padding-left: 11em;  
  font-family:  Verdana, "Times New Roman",  
        Times, serif;  
  color: blue;  
  background-color: silver }  
h1 {  
  font-family: Helvetica, Geneva, Arial,  
        SunSans-Regular, sans-serif;   
  color: purple }  
```  
  
```csharp  
body {  
  padding-left: 11em;  
  font-family:  Verdana, "Times New Roman",  
        Times, serif;  
  color: blue;  
  background-color: silver }  
h1 {  
  font-family: Helvetica, Geneva, Arial,  
        SunSans-Regular, sans-serif;   
  color: purple }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlLink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlLink.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlLink();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlLink" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建并初始化控件的新实例 <xref:System.Web.UI.HtmlControls.HtmlLink> 。  
  
   
  
## Examples  
 下面的代码示例演示如何以编程方式声明 <xref:System.Web.UI.HtmlControls.HtmlLink> 控件并定义其属性。 有关完整的工作代码示例，请参阅 <xref:System.Web.UI.HtmlControls.HtmlLink> 类概述主题。  
  
 [!code-csharp[System.Web.UI.HtmlControls.HtmlLink#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlLink/CS/htmllink.cs#2)]
 [!code-csharp[System.Web.UI.HtmlControls.HtmlLink#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlLink/CS/htmllinkcs.aspx#2)]
 [!code-vb[System.Web.UI.HtmlControls.HtmlLink#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlLink/VB/htmllinkvb.aspx#2)]
 [!code-vb[System.Web.UI.HtmlControls.HtmlLink#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlLink/VB/htmllink.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Href">
      <MemberSignature Language="C#" Value="public virtual string Href { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Href" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlLink.Href" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Href As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Href { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Href : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlLink.Href" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.HtmlControls.HtmlLink" /> 控件中指定的链接的 URL 目标。</summary>
        <value>链接的 URL 目标。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlLink.Href%2A>属性指定在控件中指定的链接的 URL 目标 <xref:System.Web.UI.HtmlControls.HtmlLink> 。 您可以使用此属性指定 (CSS) 的外部级联样式表的位置。  
  
   
  
## Examples  
 下面的代码示例演示如何将 <xref:System.Web.UI.HtmlControls.HtmlLink.Href%2A> 属性设置为级联样式表 (CSS) 与网页保存在同一目录中。 有关完整的工作代码示例，请参阅 <xref:System.Web.UI.HtmlControls.HtmlLink> 类概述主题。  
  
 [!code-csharp[System.Web.UI.HtmlControls.HtmlLink#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlLink/CS/htmllink.cs#2)]
 [!code-csharp[System.Web.UI.HtmlControls.HtmlLink#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlLink/CS/htmllinkcs.aspx#2)]
 [!code-vb[System.Web.UI.HtmlControls.HtmlLink#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlLink/VB/htmllinkvb.aspx#2)]
 [!code-vb[System.Web.UI.HtmlControls.HtmlLink#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlLink/VB/htmllink.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlLink.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlLink.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.HtmlControls.HtmlLink" /> 控件呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlLink.Render%2A> <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> 如果 ASP.NET 应用程序配置为呈现 XHTML 兼容标记，则方法将呈现)  (/> 的右括号。 默认情况下，ASP.NET 页和控件呈现与 XHTML 1.1 标准兼容的标记。 有关为非 XHTML 呈现配置 ASP.NET 网站的详细信息，请参阅 [如何：在 ASP.NET 网站中配置 XHTML 呈现](https://docs.microsoft.com/previous-versions/aspnet/ms178159(v=vs.100))。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlLink.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlLink.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.HtmlControls.HtmlLink" /> 控件的属性呈现到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlLink.RenderAttributes%2A>方法解析属性， <xref:System.Web.UI.HtmlControls.HtmlLink.Href%2A> 然后调用基类的 <xref:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes%2A> 方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlLink.Href" />
        <altmember cref="M:System.Web.UI.Control.ResolveClientUrl(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
