<Type Name="HtmlTableCell" FullName="System.Web.UI.HtmlControls.HtmlTableCell">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1893b06c48156ab351e9847a9e6816c0eebe8ad7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86674477" /></Metadata><TypeSignature Language="C#" Value="public class HtmlTableCell : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlTableCell extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTableCell" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTableCell&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTableCell : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlTableCell = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ConstructorNeedsTag(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ConstructorNeedsTag(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> 对象中的 <see langword="&lt;td&gt;" /> 和 <see langword="&lt;th&gt;" /> HTML 元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<td>`元素表示表中的数据单元，而 `<th>` 元素表示表头单元格。 使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 类以编程方式控制 `<td>` 对象中的和 `<th>` HTML 元素 <xref:System.Web.UI.HtmlControls.HtmlTableRow> 。  
  
 <xref:System.Web.UI.HtmlControls.HtmlTableCell>通过使用类，您可以通过指定背景色、边框颜色、高度和宽度自定义表格中单元格的外观。 这些属性使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> 、 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> 、 <xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A> 和属性进行设置 <xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A> 。  
  
 您可以通过指定内容的垂直和水平对齐方式来控制单元格内容的显示方式。 还可以指定在到达单元格的末尾时，是否自动在下一行上继续执行内容。 水平对齐是由属性控制的 <xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A> ，而属性则 <xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A> 控制垂直对齐。 <xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A>属性指示是否禁用文本换行。  
  
 通过使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> 或 <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> 属性，您可以控制单元格占据的列数或行数。 例如，可以通过将属性设置为来创建一个单元格，该单元格占据表中的两列 <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> `2` 。  
  
 有关实例的初始属性值的列表 <xref:System.Web.UI.HtmlControls.HtmlTableCell> ，请参见 <xref:System.Web.UI.HtmlControls.HtmlTableCell.%23ctor%2A> 构造函数。  
  
> [!CAUTION]
>  此控件可用于显示用户输入，其中可能包括恶意客户端脚本。 在应用程序中显示可执行脚本、SQL 语句或其他代码之前，请检查从该客户端发送的任何信息。 ASP.NET 提供输入请求验证功能来阻止用户输入中的脚本和 HTML。 还提供验证服务器控件以评估用户输入。 有关详细信息，请参阅 [验证服务器控制语法](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 修改表中单元格的内容。 请注意， <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> 控件的集合 <xref:System.Web.UI.HtmlControls.HtmlTable> 包含 <xref:System.Web.UI.HtmlControls.HtmlTableRow> 表中)  (对象的集合。 <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A>对象的集合 <xref:System.Web.UI.HtmlControls.HtmlTableRow> 是 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 行中 (对象) 单元格的集合。  
  
 [!code-aspx-csharp[HtmlTblCell#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCell/CS/htmltablecellcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCell#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCell/VB/htmltablecellvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Rows" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTableCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTableCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认值初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建并初始化类的新实例 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。 此构造函数用于创建一个 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 对象，该对象表示 `<td>` 表数据单元的元素。  
  
 下表显示了实例的初始属性值 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Td" 文本字符串。|  
  
   
  
## Examples  
 下面的代码示例演示如何使用控件创建控件的实例 <xref:System.Web.UI.HtmlControls.HtmlTable> <xref:System.Web.UI.HtmlControls.HtmlTableCell> ，并将表放置在网页上。 请注意如何 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 使用控件的无参数构造函数创建一个 `<td>` 元素，而它的重载构造函数采用字符串参数，用于创建 `<th>` 元素。  
  
 [!code-aspx-csharp[HtmlTableCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCtor/CS/htmltablectorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCtor/VB/htmltablectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableRow.#ctor" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTable.#ctor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTableCell (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTableCell(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlTableCell : string -&gt; System.Web.UI.HtmlControls.HtmlTableCell" Usage="new System.Web.UI.HtmlControls.HtmlTableCell tagName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">标记的元素名。</param>
        <summary>用指定的标记名初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建并初始化类的新实例 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。 它允许创建 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 表示控件中的单元格的对象 <xref:System.Web.UI.HtmlControls.HtmlTable> 。 它通常用于创建一个 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 对象，该对象表示 `<th>` 表标题单元格的元素。 尽管可以使用此构造函数来创建 `<td>` 表数据单元的元素，但通常使用无参数的构造函数。  
  
> [!NOTE]
>  尽管此构造函数允许你指定要创建的单元元素，但 `<th>` 元素是唯一受支持的单元元素。 为了实现将来的兼容性，此构造函数允许你创建可能会变得可用的其他 HTML 单元元素。  
  
 下表显示了实例的初始属性值 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|`tagName` 参数的值。|  
  
   
  
## Examples  
 下面的代码示例演示如何使用控件创建控件的实例 <xref:System.Web.UI.HtmlControls.HtmlTable> <xref:System.Web.UI.HtmlControls.HtmlTableCell> ，并将表放置在网页上。 请注意如何 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 使用控件的无参数构造函数来创建 `<td>` 元素，而它的重载构造函数采用字符串参数，以创建 `<th>` 元素。  
  
 [!code-aspx-csharp[HtmlTableCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCtor/CS/htmltablectorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCtor/VB/htmltablectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public string Align { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Align" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
      <MemberSignature Language="VB.NET" Value="Public Property Align As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Align { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Align : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Align" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格中内容的水平对齐方式。</summary>
        <value>由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例表示的单元格中的内容的水平对齐方式。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A> 属性可以指定由类的实例所表示的单元格中内容的水平对齐方式 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。  
  
> [!NOTE]
>  设置此属性仅影响类的实例所表示的单元格 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。 若要对表中整行的单元格应用相同的对齐方式，请设置 <xref:System.Web.UI.HtmlControls.HtmlTableRow.Align%2A> 由类的实例所表示的行的属性 <xref:System.Web.UI.HtmlControls.HtmlTableRow> 。  
  
 下表列出了可用于此属性的值。  
  
|“值”|说明|  
|-----------|-----------------|  
|`Left`|将单元格的内容与单元格的左边缘对齐。|  
|`Center`|将单元格的内容在单元格中居中对齐。|  
|`Right`|将单元格的内容与单元格的右边缘对齐。|  
  
> [!NOTE]
>  你还可以使用 `Justify` 和 `Char` 作为此属性的值; 但是，并非所有浏览器都支持这些功能。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性以 <xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A> 编程方式控制控件中单元格内容的对齐方式 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="BgColor">
      <MemberSignature Language="C#" Value="public string BgColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BgColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BgColor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BgColor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BgColor : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格的背景色。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格的背景色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> 属性可以指定由类的实例所表示的单元格的背景色 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。 您可以按名称指定颜色，也可以使用十六进制值（前面带有井号字符） ( # ) ，格式为 #RRGGBB。 RR、GG 和 BB 表示0到255之间的十六进制值，分别指示颜色的红色、绿色和蓝色成分。 例如，值 #0000FF 表示蓝色。 它指定红色和绿色分量 (00) 的最小值，同时指定蓝色分量 (FF) 的最大值。  
  
 下表显示了十六种预定义的 HTML 颜色名称以及可用于属性的相应十六进制值 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> 。 有关 HTML 颜色的详细信息，请参阅 [W3C) 网站 (万维网联合会](https://go.microsoft.com/fwlink/?linkid=37125)。  
  
|颜色名称|十六进制值|  
|----------------|-----------------------|  
|Aqua|#00FFFF|  
|黑色|#000000|  
|蓝色|#0000FF|  
|Fuchsia|#FF00FF|  
|灰色|#808080|  
|绿色|#008000|  
|酸|#00FF00|  
|褐紫红色|#800000|  
|Navy|#000080|  
|橄榄绿|#808000|  
|紫色|#800080|  
|Red|#FF0000|  
|Silver|#C0C0C0|  
|青色|#008080|  
|White|#FFFFFF|  
|Yellow|#FFFF00|  
  
 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>可从枚举确定用于属性的可用颜色 <xref:System.Drawing.KnownColor> 。  
  
 颜色名称不区分大小写。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性以 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> 编程方式控制控件中单元格的背景色 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
        <altmember cref="T:System.Drawing.KnownColor" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public string BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BorderColor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格的边框颜色。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格的边框颜色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> 属性可以指定由类的实例所表示的单元格的边框颜色 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。 您可以按名称指定颜色，也可以使用十六进制值（前面带有井号字符） ( # ) ，格式为 #RRGGBB。 RR、GG 和 BB 表示0到255之间的十六进制值，分别指示颜色的红色、绿色和蓝色成分。 例如，值 #0000FF 表示蓝色。 它指定红色和绿色分量 (00) 的最小值，同时指定蓝色分量 (FF) 的最大值。  
  
 下表显示了十六种预定义的 HTML 颜色名称以及可用于属性的相应十六进制值 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> 。 有关 HTML 颜色的详细信息，请参阅 [W3C) 网站 (万维网联合会](https://go.microsoft.com/fwlink/?linkid=37125) 。  
  
|颜色名称|十六进制值|  
|----------------|-----------------------|  
|Aqua|#00FFFF|  
|黑色|#000000|  
|蓝色|#0000FF|  
|Fuchsia|#FF00FF|  
|灰色|#808080|  
|绿色|#008000|  
|酸|#00FF00|  
|褐紫红色|#800000|  
|Navy|#000080|  
|橄榄绿|#808000|  
|紫色|#800080|  
|Red|#FF0000|  
|Silver|#C0C0C0|  
|青色|#008080|  
|White|#FFFFFF|  
|Yellow|#FFFF00|  
  
 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>可从枚举确定用于属性的可用颜色 <xref:System.Drawing.KnownColor> 。  
  
 颜色名称不区分大小写。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性以 <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> 编程方式控制控件中单元格的边框颜色 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
        <altmember cref="T:System.Drawing.KnownColor" />
      </Docs>
    </Member>
    <Member MemberName="ColSpan">
      <MemberSignature Language="C#" Value="public int ColSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
      <MemberSignature Language="VB.NET" Value="Public Property ColSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColSpan : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格占用的列数。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格所占用的列数。 默认值为 <see langword="-1" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在由类的实例表示的单元格中 <xref:System.Web.UI.HtmlControls.HtmlTableCell> ，使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> 属性指定单元格所占据的列数。 这允许您在表中创建占据多列的单元格。 例如，假设您有一个包含两列和两行的表。 您可以创建跨两个列的表标题单元格。 将 <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> 第一行中最左边的单元格的属性设置为 `2` ，以指示此单元格占据表中的两列。  
  
> [!CAUTION]
>  跨列时，请确保在该行中为你跨越的每个列定义一个单元格。 例如，如果跨越两个列，请在当前行中定义一个单元格。 否则，该行的长度将大于表中的列数，并且表将不会按预期方式显示。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> 属性指定控件的第一行中的单元格 <xref:System.Web.UI.HtmlControls.HtmlTable> 占据两列。  
  
 [!code-aspx-csharp[HtmlTblCellColSpan#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellColSpan/CS/htmltablecellcolspancs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellColSpan#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellColSpan/VB/htmltablecellcolspanvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public string Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Height { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Height : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格的高度（以像素为单位）。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格的高度（以像素为单位）。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A> 属性可以指定由类的实例所表示的单元格的高度 (（以像素为单位）) <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。 指定单元格的高度时，同一行中的所有单元格都将自动共享该高度。  
  
> [!NOTE]
>  如果指定的高度小于显示该单元格的内容所需的高度，则将忽略此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A> 属性以编程方式控制控件中单元格的高度 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      </Docs>
    </Member>
    <Member MemberName="NoWrap">
      <MemberSignature Language="C#" Value="public bool NoWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoWrap : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.MinimizableAttributeTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.MinimizableAttributeTypeConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示当到达单元格末尾时，由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格中的文本是否自动继续在下一行显示。</summary>
        <value>如果在单元格中文本不自动换行，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A> 属性来指定或确定由类的实例表示的单元格中的文本在 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 到达单元格末尾时是否自动在下一行上继续。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性以 <xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A> 编程方式控制文本是否换行到控件的单元格中 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlTableCell.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 控件的结束标记。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag%2A>方法在调用基类的方法之后提供其他格式设置 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A> 。 其他格式设置通过在 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 结束标记后添加一个行返回，使控件呈现的 HTML 更易于读取。  
  
 <xref:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag%2A>方法主要由控件开发人员用来扩展控件的功能 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="RowSpan">
      <MemberSignature Language="C#" Value="public int RowSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      <MemberSignature Language="VB.NET" Value="Public Property RowSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowSpan : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格占用的行数。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格占用的行数。 默认值为 <see langword="-1" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在由类的实例表示的单元格中 <xref:System.Web.UI.HtmlControls.HtmlTableCell> ，使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> 属性指定单元格所占据的行数。 这允许您在表中创建占据多行的单元格。 例如，假设您有一个包含两列和两行的表。 您可以创建与这两行重叠的列。 将 <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> 第一列中最左边的单元格的属性设置为 `2` ，以指示此单元格在表中占据两行。  
  
> [!CAUTION]
>  跨越行时，请确保为你跨越的每一行的列中的单元格分别定义一个。 例如，如果您跨越两行，则在该列中定义一个单元格。 否则，该列的长度将超过表中的行数，并且表将不会按预期方式显示。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> 属性指定控件的第一列中的单元格 <xref:System.Web.UI.HtmlControls.HtmlTable> 跨越两行。  
  
 [!code-aspx-csharp[HtmlTblCellRowSpan#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellRowSpan/CS/htmltablecellrowspancs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellRowSpan#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellRowSpan/VB/htmltablecellrowspanvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="VAlign">
      <MemberSignature Language="C#" Value="public string VAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property VAlign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VAlign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VAlign : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格内容的垂直对齐方式。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格的内容的垂直对齐方式。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A> 属性可以指定由类的实例所表示的单元格中的内容的垂直对齐方式 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。  
  
> [!NOTE]
>  设置此属性仅影响类的实例所表示的单元格 <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。 若要对表中整行的单元格应用相同的垂直对齐方式，请设置 <xref:System.Web.UI.HtmlControls.HtmlTableRow.VAlign%2A> 由类的实例所表示的行的属性 <xref:System.Web.UI.HtmlControls.HtmlTableRow> 。  
  
 下表列出了可用于此属性的值。  
  
|“值”|说明|  
|-----------|-----------------|  
|`Top`|将单元格的内容与单元格的上边缘对齐。|  
|`Middle`|将单元格的内容与单元格的中心对齐。|  
|`Bottom`|将单元格的内容与单元格的下边缘对齐。|  
  
> [!NOTE]
>  你还可以使用 `BaseLine` 作为此属性的值。 但是，并非所有浏览器都支持此功能。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性以 <xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A> 编程方式控制控件中单元格内容的垂直对齐方式 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public string Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Width { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Width : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格的宽度（以像素为单位）。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格的宽度（以像素为单位）。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A> 属性可以指定由类的实例所表示的单元格的宽度 (（以像素为单位）) <xref:System.Web.UI.HtmlControls.HtmlTableCell> 。 指定单元格的宽度时，同一列中的所有单元格都将自动共享该宽度。  
  
> [!NOTE]
>  如果指定的宽度小于显示单元格内容所需的宽度，则忽略此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A> 属性以编程方式控制控件中单元格的宽度 <xref:System.Web.UI.HtmlControls.HtmlTable> 。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      </Docs>
    </Member>
  </Members>
</Type>
