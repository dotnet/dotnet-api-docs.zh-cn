<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7efa59626d17817518cfca2a679266b632cdabe1" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83970792" /></Metadata><TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlForm = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供对服务器上的 HTML <see langword="&lt;form&gt;" /> 元素的编程访问。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件是 Web 窗体页上的服务器控件的容器。 回发到服务器的所有服务器控件都必须放置在 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的开始标记和结束标记之间。  
  
> [!NOTE]
>  ASP.NET 仅允许在 Web 窗体页上激活单个 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件。 如果 Web 窗体页上存在多个活动 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件，则当您请求该页时，公共语言运行时将引发 <xref:System.Web.HttpException?displayProperty=nameWithType> 异常。 但是，可以使用 <xref:System.Web.UI.WebControls.MultiView> 控件，其中每个 <xref:System.Web.UI.WebControls.View> 对象都包含一个 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件，因为在任何给定时间都只有一个 <xref:System.Web.UI.WebControls.View> 处于活动状态。  
  
 可以通过设置 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的属性来控制该控件的行为。 若要为窗体数据指定编码类型，请设置 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> 属性。 浏览器用来将表单数据发布到服务器以进行处理的方法（`GET` 或 `POST`）是通过设置 <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> 属性指定的。  
  
> [!CAUTION]
>  默认情况下，<xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> 属性设置为 `POST`。 您可以将此属性的值修改为 `GET`，但这可能会破坏 ASP.NET 页框架提供的内置状态和回发服务。  
  
 可以将实现 <xref:System.Web.UI.WebControls.IButtonControl> 接口的控件配置为发布到不同的目标页。 这称为跨页发送。 有关详细信息，请参阅[ASP.NET Web Forms 中的跨页面发布](https://docs.microsoft.com/previous-versions/aspnet/ms178139(v=vs.100))。  
  
 有关 <xref:System.Web.UI.HtmlControls.HtmlForm>实例的初始属性值的列表，请参阅 <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> 构造函数。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlForm> 类来创建一个简单的窗体。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178139(v=vs.100)">ASP.NET 网页中的跨页面发送</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建并初始化 <xref:System.Web.UI.HtmlControls.HtmlForm> 类的新实例。  
  
 下表显示了 <xref:System.Web.UI.HtmlControls.HtmlForm>实例的初始属性值。  
  
|属性|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Form" 文本字符串。|  
  
   
  
## Examples  
 下面的代码示例演示如何创建 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的新实例并将其放置在网页上。  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 HTML 表单的 action 属性。</summary>
        <value>HTML 表单的 action 属性。 默认值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你重写原始请求的 URL 时，但你想要保留 HTML 窗体的 action 属性的原始 URL 时，可以使用 <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> 属性。 将 <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> 属性设置为您要保留的 URL 的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 为 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件生成的控件标识符。</summary>
        <value>为 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 生成的控件标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要在呈现控件的多个实例时避免命名冲突，[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 会自动为页面上的每个控件生成唯一的 <xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> 值。 有关详细信息，请参阅 <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType> 属性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/1d04y8ss(v=vs.140)">ASP.NET 控件标识</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlForm.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件创建一个新的 <see cref="T:System.Web.UI.ControlCollection" /> 集合。</summary>
        <returns>包含 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件的子服务器控件的 <see cref="T:System.Web.UI.ControlCollection" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置按 Enter 键时会引起回发的 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件的子控件。</summary>
        <value>在加载 <see cref="P:System.Web.UI.Control.ID" /> 后要显示为默认按钮的按钮控件的 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 利用 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 属性，您可以通过在输入控件（如文本框）中按 ENTER 来指定用户可能会导致回发。 可以将从 <xref:System.Web.UI.WebControls.IButtonControl> 接口派生的任何控件指定为默认按钮，但 <xref:System.Web.UI.WebControls.LinkButton> 控件除外。 如果 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 属性引用的控件不是从 <xref:System.Web.UI.WebControls.IButtonControl>派生的，则会引发 <xref:System.InvalidOperationException> 异常。  
  
 如果使用的是母版页，并从内容页设置 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 属性，请使用 "<xref:System.Web.UI.WebControls.IButtonControl>" 按钮的 <xref:System.Web.UI.Control.UniqueID%2A> 属性。 有关母版页的详细信息，请参阅[ASP.NET 母版页](https://docs.microsoft.com/previous-versions/aspnet/wtxbf3hh(v=vs.100))。  
  
 在以下情况下，<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 属性可能不会导致回发：  
  
-   当焦点位于窗体中的输入控件之外时按 ENTER。 不保证会触发默认的回发操作。  
  
-   当焦点位于多行文本框内时按 ENTER。 在多行文本框中，预期的行为是在文本框中按 ENTER 创建新行。 在某些浏览器中，在多行文本框中按 ENTER 将触发回发。 在这种情况下，如果希望 ENTER 改为创建新行，则可以将 JavaScript 函数附加到输入控件。 脚本应捕获 ENTER 键并停止回发。 例如，可以使用 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> 属性集合为 `onKeyPress` 事件添加客户端脚本。  
  
-   将 <xref:System.Web.UI.WebControls.LinkButton> 控件指定为默认按钮。 仅支持 <xref:System.Web.UI.WebControls.Button> 和 <xref:System.Web.UI.WebControls.ImageButton> 控件。  
  
-   在异步回发过程中以编程方式更改 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 属性。 可以通过将一个或多个 <xref:System.Web.UI.UpdatePanel> 控件添加到页面上来启用异步回发。 有关详细信息，请参阅[UpdatePanel 控件概述](https://docs.microsoft.com/previous-versions/aspnet/bb386454(v=vs.100))和[部分页呈现概述](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100))。  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 属性，以设置导致回发的默认控件。  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">作为默认按钮引用的控件的类型不是 <see cref="T:System.Web.UI.WebControls.IButtonControl" />。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wtxbf3hh(v=vs.100)">ASP.NET 母版页概述</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFocus : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置窗体上的控件，该控件要在加载 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件后显示为具有输入焦点的控件。</summary>
        <value>窗体上的控件的 <see cref="P:System.Web.UI.Control.ClientID" />，该控件要在加载 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 后显示为具有输入焦点的控件。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 属性访问窗体上的控件，以便在加载 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件时将其显示为具有输入焦点的控件。 可以选择的控件将显示一个视觉提示，指示它们具有焦点。 例如，具有焦点的 <xref:System.Web.UI.WebControls.TextBox> 控件将显示在其内部的插入点。  
  
 还可以使用 <xref:System.Web.UI.Control.Focus%2A> 或 <xref:System.Web.UI.Page.SetFocus%2A> 方法设置具有焦点的控件。 这些方法优先于 "<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>" 属性。 如果调用这两个方法中的任意一种来设置具有焦点的控件，则将忽略 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 属性的值。  
  
   
  
## Examples  
 下面的代码示例演示如何设置 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 属性，以便在窗体加载时，将窗体上的指定控件显示为具有输入焦点的控件。 当 `Form1` 呈现时，请注意插入点定位在 `TextBox1`中，指示 `TextBox1` 为具有焦点的控件。  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Enctype : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置将窗体的数据发送到服务器时浏览器使用的编码类型。</summary>
        <value>字符串，它包含编码类型。 默认值为空字符串 ("")，指示使用浏览器的默认内容类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> 属性指定浏览器用来将数据发回服务器的编码类型。  
  
 下表显示了常见的编码类型。  
  
|编码类型|说明|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|窗体数据被编码为名称/值对。 这是标准编码格式。|  
|多部分/窗体数据|窗体数据将编码为一条消息，其中每个控件在页面上都有单独的部分。|  
|text/plain|窗体数据是以纯文本编码的，不包含任何控件或格式字符。|  
  
 有关编码类型的详细信息，请参阅[万维网联合会（W3C](https://go.microsoft.com/fwlink/?linkid=37125)网站。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> 属性指定浏览器用于将数据发送回服务器的编码类型。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示浏览器将窗体数据发送到服务器进行处理的方式。</summary>
        <value>字符串，它指示浏览器向服务器发送窗体数据的方式。 默认值是 <see langword="POST" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性指定浏览器将窗体数据发送到服务器进行处理的方式。 所有浏览器都支持的两种常见方法是 `GET` 和 `POST`。  
  
> [!CAUTION]
>  您可以重写此属性的默认值，并使用 `GET` 方法，而不是 `POST`。 但是，因为 `GET` 请求限制了它们可以包含的数据量，所以使用 `GET` 方法在某些情况下可能会导致 ASP.NET 页框架提供的回发和状态管理功能失败。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> 属性指定将窗体数据回发到服务器。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件的标识符名称。</summary>
        <value>包含 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 的标识符名称的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> 属性可确定 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的唯一标识符名称。 在此实现中，获取此属性将返回 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 属性的值。 但是，设置属性不会将值分配给属性。 设置属性不会将值分配给此属性，因为 <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> 属性的值必须与 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 属性的值相同。  
  
> [!NOTE]
>  `name` 属性不是符合 XHTML 标准的属性，不会由 ASP.NET 呈现，而不管 `xhtmlConformance` 设置如何。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100)">ASP.NET 和 XHTML 遵从性</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlForm.OnInit e" />
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>为 <see cref="E:System.Web.UI.Control.Init" /> 控件引发 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> 方法通知时，Web 服务器控件必须执行创建和设置实例所需的任何初始化步骤。 在服务器控件生命周期的此阶段中，尚未填充控件的视图状态。 此外，如果调用此方法，则不能访问其他服务器控件，无论它是此控件的子控件还是父控件。 不保证其他服务器控件已创建并且可供访问。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> 方法主要由控件开发人员用来扩展 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的功能。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> 方法时，请确保调用基类的 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> 方法，以便注册的委托接收事件。 此外，调用基类的 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> 方法可确保将 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件正确设置为网页窗体，并保存页面的视图状态。</para></block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlForm.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>为 <see cref="E:System.Web.UI.Control.PreRender" /> 控件引发 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在呈现 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件之前，只需调用 <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> 方法。 如果将 <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> 属性设置为 `true`，则 <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> 方法将注册智能导航脚本文件引用，以便呈现该脚本。  
  
> [!NOTE]
>  ASP.NET 版本2.0 中已弃用 <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> 属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter output);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (output As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.Render output" />
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.UI.Page.SmartNavigation%2A> 属性设置为 `true`，<xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> 方法将呈现 HTML `<iframe>` 元素。 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> 方法调用基 <xref:System.Web.UI.Control.Render%2A> 方法。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> 方法主要由控件开发人员用来扩展 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的功能。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">只在引用 <see cref="T:System.Web.UI.Page" /> 实例的情况下才呈现 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件。</exception>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> 方法时，请确保调用基类的 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> 方法，以便正确呈现 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件的子控件。</para></block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件的属性呈现到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> 方法使用 <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> 方法来检查 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的特性，以确保它们可以在 `<form>` HTML 元素的开始标记中呈现。  
  
 此外，<xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> 方法将呈现 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的 `method`、`action`和 `onsubmit` 特性。 如果 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 属性中设置的控件 ID 未实现 <xref:System.Web.UI.WebControls.IButtonControl> 接口，则会引发 <xref:System.InvalidOperationException> 异常。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> 方法主要由控件开发人员用来扩展 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的功能。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在 <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" /> 属性中设置的控件 ID 类型不是 <see cref="T:System.Web.UI.WebControls.IButtonControl" />。</exception>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> 方法时，请确保调用基类的 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> 方法，以便正确呈现 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件的特性。</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderChildren (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderChildren writer" />
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件的子控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A> 方法呈现客户端脚本，以确保将浏览器焦点设置为 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 属性中指定的控件。  
  
> [!NOTE]
>  <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType> 属性指定的控件优先于 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 属性所指定的控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">网页有多个服务器端 <see langword="&lt;form&gt;" /> 标记。</exception>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 方法时，请确保调用基类的 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 方法，以便正确呈现 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件的子控件。</para></block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer">接收窗体控件内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" /> 方法时，请确保调用基类的 <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> 方法，以便正确呈现 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件。</para></block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SubmitDisabledControls : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个布尔值，指示是否强制客户端上被禁用的控件提交它们的值，以在页回发到服务器后允许这些控件保留它们的值。</summary>
        <value>如果强制客户端上被禁用的控件提交它们的值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> 属性指定在页回发时是否强制客户端上禁用的控件提交其值。 这允许禁用的控件在页回发到服务器后保留其值。 当 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> 属性设置为 `false`时，使用客户端脚本禁用的窗体上的控件将不会在下一次回发页面时提交给服务器。 因此，由禁用控件存储的任何值都将丢失。 若要允许禁用的控件在页回发到服务器后保留其值，请将 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> 属性设置为 `true`。  
  
   
  
## Examples  
 下面的代码示例演示如何设置窗体上的 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> 属性，以 `true` 使客户端脚本禁用的控件在页回发到服务器后保持其值。 在此示例中，如果将 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> 属性设置为 "`false`，然后单击"**上一页**"按钮，则" html "文本框中的文本将丢失，并且不再选中" html "复选框。  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置框架或窗口以呈现发送到服务器的信息结果。</summary>
        <value>显示发送到服务器的信息结果的浏览器窗口或框架。 默认值为空字符串 ("")，这会刷新具有焦点的窗口或框架。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> 属性指定显示发送到服务器的信息结果的目标窗口或框架。 重定向发送到服务器的信息的结果是一种高级任务。 不建议使用此属性来回发。  
  
> [!NOTE]
> <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> 属性作为 `target` 属性呈现。 XHTML 1.1 中不允许 `form` 元素上的 `target` 属性。 因此，如果呈现的标记必须符合 XHTML 标准，或者必须符合辅助功能标准，则不要设置 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> 属性。 有关详细信息，请参阅[Visual studio 中的 XHTML 标准和](https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100)) [visual studio 和 ASP.NET 中的 ASP.NET 和可访问性](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140))。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> 值必须以 A 到 Z 的字母（不区分大小写）开头，但以下特殊值除外，后者以下划线开头。  
  
|目标值|说明|  
|------------------|-----------------|  
|`_blank`|将内容呈现在一个没有框架的新窗口中。|  
|`_parent`|将内容呈现在上一个框架集父级中。|  
|`_search`|在搜索窗格中呈现内容。|  
|`_self`|将内容呈现在含焦点的框架中。|  
|`_top`|将内容呈现在没有框架的全窗口中。|  
  
> [!NOTE]
>  请查看浏览器文档，确定是否支持 `_search` 值。  例如，Microsoft Internet Explorer 5.0 及更高版本支持 `_search` 目标值。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> 属性指定新的 unframed 窗口，以显示回发到服务器的信息的结果。  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100)">ASP.NET 和 XHTML 遵从性</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/ms228004(v=vs.140)">Visual Studio 2010 和 ASP.NET 4 中的辅助功能</related>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取分配给 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件的唯一编程标识符。</summary>
        <value>分配给 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件的唯一编程标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 属性可获取分配给 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的唯一编程标识符。 当控件包含在页之外的 <xref:System.Web.UI.INamingContainer>实现的对象（如自定义服务器控件）中时，此属性将重写基实现以返回一个常数值。 如果命名容器是页面，则返回 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的 <xref:System.Web.UI.Control.ID%2A> 属性的值。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 属性和 <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> 属性始终返回相同的值。 此方法在以下情况下很有用： <xref:System.Web.UI.HtmlControls.HtmlForm> 控件呈现在要求 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 和 <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> 属性相同的浏览器中。 为了保持这些属性同步，<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> 属性始终返回 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 属性的值。  
  
> [!NOTE]
>  `name` 属性不是符合 XHTML 标准的属性，并且默认情况下不由 ASP.NET 呈现。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 属性检索 <xref:System.Web.UI.HtmlControls.HtmlForm> 控件的唯一标识符。  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100)">ASP.NET 和 XHTML 遵从性</related>
      </Docs>
    </Member>
  </Members>
</Type>
