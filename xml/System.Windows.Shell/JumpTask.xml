<Type Name="JumpTask" FullName="System.Windows.Shell.JumpTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87eeb6bb9da8af9dff5f8d8001168131d69cdd01" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89928169" /></Metadata><TypeSignature Language="C#" Value="public class JumpTask : System.Windows.Shell.JumpItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JumpTask extends System.Windows.Shell.JumpItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpTask" />
  <TypeSignature Language="VB.NET" Value="Public Class JumpTask&#xA;Inherits JumpItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpTask : System::Windows::Shell::JumpItem" />
  <TypeSignature Language="F#" Value="type JumpTask = class&#xA;    inherit JumpItem" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Shell.JumpItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bd6e5-101">表示某应用程序在 Windows 7 任务栏跳转列表中的快捷方式。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-101">Represents a shortcut to an application in the Windows 7 taskbar Jump List.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6e5-102"><xref:System.Windows.Shell.JumpTask>可以将视为应用程序的快捷方式。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-102">A <xref:System.Windows.Shell.JumpTask> can be thought of as a shortcut to an application.</span></span> <span data-ttu-id="bd6e5-103">通过设置属性来指定可执行文件的路径 <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-103">You specify the path to the executable file by setting the <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> property.</span></span> <span data-ttu-id="bd6e5-104">如果 <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> 未设置，则隐含当前正在运行的进程的路径。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-104">If the <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> is not set, the path of the current running process is implied.</span></span> <span data-ttu-id="bd6e5-105">您可以选择指定 <xref:System.Windows.Shell.JumpTask.Arguments%2A> 在启动时传递到应用程序。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-105">You can optionally specify <xref:System.Windows.Shell.JumpTask.Arguments%2A> to pass to the application at startup.</span></span>  
  
 <span data-ttu-id="bd6e5-106">你可以设置基本显示属性，如 <xref:System.Windows.Shell.JumpTask.Title%2A> 、 <xref:System.Windows.Shell.JumpTask.Description%2A> 和， <xref:System.Windows.Shell.JumpTask.IconResourcePath%2A> 以指定任务在跳转列表中的外观。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-106">You can set basic display properties, such as <xref:System.Windows.Shell.JumpTask.Title%2A>, <xref:System.Windows.Shell.JumpTask.Description%2A>, and <xref:System.Windows.Shell.JumpTask.IconResourcePath%2A> to specify the appearance of the task in the Jump List.</span></span> <span data-ttu-id="bd6e5-107">与一起使用的图标 <xref:System.Windows.Shell.JumpTask> 必须作为本机资源提供。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-107">An icon used with a <xref:System.Windows.Shell.JumpTask> must be available as a native resource.</span></span> <span data-ttu-id="bd6e5-108">如果 DLL 或可执行文件中有多个图标资源，则可以通过指示属性中的偏移量来指定要使用的图标资源 <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-108">If multiple icon resources are available in a DLL or executable file, you specify the one to use by indicating an offset in the <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> property.</span></span>  
  
 <span data-ttu-id="bd6e5-109">默认情况下， <xref:System.Windows.Shell.JumpTask> 将放置在 "跳转列表" 的 " **任务** " 类别中。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-109">By default, a <xref:System.Windows.Shell.JumpTask> will be placed in the **Tasks** category of the Jump List.</span></span> <span data-ttu-id="bd6e5-110">可以通过设置属性来指定自定义任务分组 <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-110">You can specify custom grouping of tasks by setting the <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> property.</span></span>  
  
 <span data-ttu-id="bd6e5-111">可以通过创建 <xref:System.Windows.Shell.JumpTask> 未指定和的来直观地分隔跳转列表中的项 <xref:System.Windows.Shell.JumpTask.Title%2A> <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-111">You can visually separate items in a Jump List by creating a <xref:System.Windows.Shell.JumpTask> that does not have a <xref:System.Windows.Shell.JumpTask.Title%2A> and <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> specified.</span></span> <span data-ttu-id="bd6e5-112">此项为空 <xref:System.Windows.Shell.JumpTask> 将在跳转列表中显示为水平线。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-112">This empty <xref:System.Windows.Shell.JumpTask> will be displayed as a horizontal line in the Jump List.</span></span> <span data-ttu-id="bd6e5-113">在这种情况下，可以设置其他属性，但它们不会有任何影响。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-113">In this case, other properties can be set, but they will not have any effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd6e5-114">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在标记中声明。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-114">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="bd6e5-115">在 <xref:System.Windows.Shell.JumpTask> 记事本应用程序中打开一个名为的文本文件 `readme.txt` 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-115">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 <span data-ttu-id="bd6e5-116">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在代码中配置。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-116">The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code.</span></span> <span data-ttu-id="bd6e5-117"><xref:System.Windows.Shell.JumpTask>打开计算器应用程序。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-117">The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.</span></span>  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Shell.JumpPath" />
    <altmember cref="T:System.Windows.Shell.JumpList" />
    <altmember cref="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
    <altmember cref="E:System.Windows.Application.Startup" />
    <altmember cref="P:System.Windows.StartupEventArgs.Args" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpTask.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpTask();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bd6e5-118">初始化 <see cref="T:System.Windows.Shell.JumpTask" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-118">Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpTask" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string with get, set" Usage="System.Windows.Shell.JumpTask.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd6e5-119">获取或设置应用程序的路径。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-119">Gets or sets the path to the application.</span></span></summary>
        <value><span data-ttu-id="bd6e5-120">应用程序的路径。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-120">The path to the application.</span></span> <span data-ttu-id="bd6e5-121">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-121">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6e5-122">如果 <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> 未指定属性，则暗示当前正在运行的进程的路径。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-122">If the <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> property is not specified, then the path of the current running process is implied.</span></span> <span data-ttu-id="bd6e5-123">应用程序可以包含其自身之外的可执行文件的任务。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-123">An application can contain tasks for executables other than itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd6e5-124">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在标记中声明。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-124">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="bd6e5-125">在 <xref:System.Windows.Shell.JumpTask> 记事本应用程序中打开一个名为的文本文件 `readme.txt` 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-125">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 <span data-ttu-id="bd6e5-126">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在代码中配置。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-126">The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code.</span></span> <span data-ttu-id="bd6e5-127"><xref:System.Windows.Shell.JumpTask>打开计算器应用程序。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-127">The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.</span></span>  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Arguments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="System.Windows.Shell.JumpTask.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd6e5-128">获取或设置启动时要传递给应用程序的参数。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-128">Gets or sets the arguments passed to the application on startup.</span></span></summary>
        <value><span data-ttu-id="bd6e5-129">启动时要传递给应用程序的参数。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-129">The arguments passed to the application on startup.</span></span> <span data-ttu-id="bd6e5-130">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-130">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bd6e5-131">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在标记中声明。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-131">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="bd6e5-132">在 <xref:System.Windows.Shell.JumpTask> 记事本应用程序中打开一个名为的文本文件 `readme.txt` 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-132">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Startup" />
        <altmember cref="P:System.Windows.StartupEventArgs.Args" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Shell.JumpTask.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd6e5-133">获取或设置针对跳转列表中的任务在工具提示中显示的文本。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-133">Gets or sets the text displayed in the tooltip for the task in the Jump List.</span></span></summary>
        <value><span data-ttu-id="bd6e5-134">针对任务在工具提示中显示的文本。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-134">The text displayed in the tooltip for the task.</span></span> <span data-ttu-id="bd6e5-135">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-135">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bd6e5-136">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在标记中声明。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-136">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="bd6e5-137">在 <xref:System.Windows.Shell.JumpTask> 记事本应用程序中打开一个名为的文本文件 `readme.txt` 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-137">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 <span data-ttu-id="bd6e5-138">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在代码中配置。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-138">The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code.</span></span> <span data-ttu-id="bd6e5-139"><xref:System.Windows.Shell.JumpTask>打开计算器应用程序。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-139">The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.</span></span>  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconResourceIndex">
      <MemberSignature Language="C#" Value="public int IconResourceIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IconResourceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.IconResourceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property IconResourceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IconResourceIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IconResourceIndex : int with get, set" Usage="System.Windows.Shell.JumpTask.IconResourceIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd6e5-140">获取或设置嵌入在资源中的图标的索引，索引从零开始。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-140">Gets or sets the zero-based index of an icon embedded in a resource.</span></span></summary>
        <value><span data-ttu-id="bd6e5-141">图标的从零开始的索引；如果未使用图标，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-141">The zero-based index of the icon, or -1 if no icon is used.</span></span> <span data-ttu-id="bd6e5-142">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-142">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6e5-143">与一起使用的图标 <xref:System.Windows.Shell.JumpTask> 必须作为本机资源提供。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-143">An icon used with a <xref:System.Windows.Shell.JumpTask> must be available as a native resource.</span></span> <span data-ttu-id="bd6e5-144">如果 DLL 或可执行文件中有多个图标，则可以通过指示属性中的偏移量来指定要使用的图标 <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-144">If multiple icons are available in a DLL or executable file, you specify the one to use by indicating an offset in the <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> property.</span></span>  
  
 <span data-ttu-id="bd6e5-145">如果未指定图标资源，或者如果找不到指定的图标，则显示标准系统图标。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-145">If no icon resource is specified, or if the specified icon is not found, the standard system icon is displayed.</span></span> <span data-ttu-id="bd6e5-146">若要指定不显示图标，请将 <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> 属性设置为-1。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-146">To specify that no icon is displayed, set the <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> property to -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd6e5-147">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在标记中声明。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-147">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="bd6e5-148">在 <xref:System.Windows.Shell.JumpTask> 记事本应用程序中打开一个名为的文本文件 `readme.txt` 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-148">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpTask.IconResourcePath" />
      </Docs>
    </Member>
    <Member MemberName="IconResourcePath">
      <MemberSignature Language="C#" Value="public string IconResourcePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconResourcePath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.IconResourcePath" />
      <MemberSignature Language="VB.NET" Value="Public Property IconResourcePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconResourcePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IconResourcePath : string with get, set" Usage="System.Windows.Shell.JumpTask.IconResourcePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd6e5-149">获取或设置资源的路径，该资源包含要在跳转列表中显示的图标。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-149">Gets or sets the path to a resource that contains the icon to display in the Jump List.</span></span></summary>
        <value><span data-ttu-id="bd6e5-150">包含图标的资源的路径。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-150">The path to a resource that contains the icon.</span></span> <span data-ttu-id="bd6e5-151">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-151">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6e5-152">与一起使用的图标 <xref:System.Windows.Shell.JumpTask> 必须作为本机资源提供。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-152">An icon used with a <xref:System.Windows.Shell.JumpTask> must be available as a native resource.</span></span> <span data-ttu-id="bd6e5-153">如果 DLL 或可执行文件中有多个图标，则可以通过指示属性中的偏移量来指定要使用的图标 <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-153">If multiple icons are available in a DLL or executable file, you specify the one to use by indicating an offset in the <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> property.</span></span>  
  
 <span data-ttu-id="bd6e5-154">如果未指定图标资源，或者如果找不到指定的图标，则显示标准系统图标。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-154">If no icon resource is specified, or if the specified icon is not found, the standard system icon is displayed.</span></span> <span data-ttu-id="bd6e5-155">若要指定不显示图标，请将 <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> 属性设置为-1。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-155">To specify that no icon is displayed, set the <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> property to -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd6e5-156">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在标记中声明。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-156">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="bd6e5-157">在 <xref:System.Windows.Shell.JumpTask> 记事本应用程序中打开一个名为的文本文件 `readme.txt` 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-157">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 <span data-ttu-id="bd6e5-158">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在代码中配置。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-158">The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code.</span></span> <span data-ttu-id="bd6e5-159"><xref:System.Windows.Shell.JumpTask>打开计算器应用程序。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-159">The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.</span></span>  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpTask.IconResourceIndex" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Shell.JumpTask.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd6e5-160">获取或设置针对跳转列表中的任务显示的文本。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-160">Gets or sets the text displayed for the task in the Jump List.</span></span></summary>
        <value><span data-ttu-id="bd6e5-161">针对跳转列表中的任务显示的文本。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-161">The text displayed for the task in the Jump List.</span></span> <span data-ttu-id="bd6e5-162">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-162">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6e5-163">通常， <xref:System.Windows.Shell.JumpTask.Title%2A> 必须将属性设置为， <xref:System.Windows.Shell.JumpTask> 以使作为可单击任务出现在 "跳转列表" 中。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-163">Typically, the <xref:System.Windows.Shell.JumpTask.Title%2A> property must be set for the <xref:System.Windows.Shell.JumpTask> to appear in the Jump List as a clickable task.</span></span>  
  
 <span data-ttu-id="bd6e5-164">或者，您可以通过创建 <xref:System.Windows.Shell.JumpTask> 未指定和的来直观地分隔跳转列表中的 <xref:System.Windows.Shell.JumpTask.Title%2A> 项 <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-164">Alternatively, you can visually separate items in a Jump List by creating a <xref:System.Windows.Shell.JumpTask> that does not have a <xref:System.Windows.Shell.JumpTask.Title%2A> and <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> specified.</span></span> <span data-ttu-id="bd6e5-165">此项为空 <xref:System.Windows.Shell.JumpTask> 将在跳转列表中显示为水平线。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-165">This empty <xref:System.Windows.Shell.JumpTask> will be displayed as a horizontal line in the Jump List.</span></span> <span data-ttu-id="bd6e5-166">在这种情况下，可以设置其他属性，但它们不会有任何影响。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-166">In this case, other properties can be set, but they will not have any effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd6e5-167">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在标记中声明。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-167">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="bd6e5-168">在 <xref:System.Windows.Shell.JumpTask> `readme.txt` 记事本应用程序中打开一个文本文件名称。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-168">The <xref:System.Windows.Shell.JumpTask> opens a text file name `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 <span data-ttu-id="bd6e5-169">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在代码中配置。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-169">The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code.</span></span> <span data-ttu-id="bd6e5-170"><xref:System.Windows.Shell.JumpTask>打开计算器应用程序。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-170">The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.</span></span>  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkingDirectory : string with get, set" Usage="System.Windows.Shell.JumpTask.WorkingDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd6e5-171">获取或设置启动时应用程序的工作目录。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-171">Gets or sets the working directory of the application on startup.</span></span></summary>
        <value><span data-ttu-id="bd6e5-172">启动时应用程序的工作目录。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-172">The working directory of the application on startup.</span></span> <span data-ttu-id="bd6e5-173">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-173">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bd6e5-174">下面的示例演示如何 <xref:System.Windows.Shell.JumpTask> 在标记中声明。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-174">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="bd6e5-175">在 <xref:System.Windows.Shell.JumpTask> 记事本应用程序中打开一个名为的文本文件 `readme.txt` 。</span><span class="sxs-lookup"><span data-stu-id="bd6e5-175">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
