<Type Name="JumpList" FullName="System.Windows.Shell.JumpList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd10311d69971953861784c24b977f865b2a5936" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83948069" /></Metadata><TypeSignature Language="C#" Value="public sealed class JumpList : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JumpList extends System.Object implements class System.ComponentModel.ISupportInitialize" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JumpList&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpList sealed : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type JumpList = class&#xA;    interface ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JumpList extends System.Object implements class System.ComponentModel.ISupportInitialize" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("JumpItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示作为菜单显示在 Windows 7 任务栏按钮上的项和任务的列表。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[win7](~/includes/win7-md.md)] 任务栏通过使用跳转列表，为直接从任务栏按钮启动程序提供了增强的功能。 "跳转列表" 也用于 [!INCLUDE[win7](~/includes/win7-md.md)] "开始" 菜单。 您可以通过右键单击任务栏按钮或单击 "开始" 菜单中的程序旁边的箭头来访问跳转列表。 有关 "跳转列表" 的详细信息，请参阅 Windows 用户体验交互指南的 "[任务栏](https://go.microsoft.com/fwlink/?LinkId=178478)" 部分。  
  
 <xref:System.Windows.Shell.JumpList> 类为 [!INCLUDE[win7](~/includes/win7-md.md)] 任务栏中的跳转列表功能提供托管包装，并管理传递到 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell 的数据。 <xref:System.Windows.Shell.JumpList> 类公开的功能在 [!INCLUDE[win7](~/includes/win7-md.md)]之前的 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 版本中不可用。 使用 <xref:System.Windows.Shell.JumpList> 类的应用程序将在 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]的其他版本中运行，但跳转列表将不可用。 有关 Windows shell 和本机跳转列表 Api 的详细信息，请参阅[任务栏扩展](https://go.microsoft.com/fwlink/?LinkId=178479)。  
  
 下图显示了 Windows Media Player 的跳转列表，其中包含 "**任务**" 和 "**常用**" 类别中的项。  
  
 ![Windows Media Player 跳转列表](~/add/media/wpfshell-jumplist.png "Windows Media Player 跳跃菜单")  
Windows Media Player 跳跃菜单  
  
## <a name="configuring-a-jump-list"></a>配置跳转列表  
 跳转列表可以包含两种类型的项： <xref:System.Windows.Shell.JumpTask> 和 <xref:System.Windows.Shell.JumpPath>。 <xref:System.Windows.Shell.JumpTask> 是指向程序的链接，<xref:System.Windows.Shell.JumpPath> 是指向文件的链接。 您可以通过创建没有 <xref:System.Windows.Shell.JumpTask.Title%2A> 并 <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> 指定的 <xref:System.Windows.Shell.JumpTask>，直观地分隔跳转列表中的项。 此空 <xref:System.Windows.Shell.JumpTask> 将在跳转列表中显示为水平线。  
  
> [!NOTE]
>  如果未向应用程序注册 <xref:System.Windows.Shell.JumpPath> 中指定的文件类型，则该文件将不会显示在跳转列表中。 例如，如果添加指向 .txt 文件的 <xref:System.Windows.Shell.JumpPath>，则必须注册应用程序以处理 .txt 文件。 有关详细信息，请参阅[文件关联简介](https://go.microsoft.com/fwlink/?LinkId=178480)。  
  
 跳转项置于 <xref:System.Windows.Shell.JumpList>的类别中。 默认情况下，<xref:System.Windows.Shell.JumpItem> 显示在“任务”类别中。 或者，您可以为 <xref:System.Windows.Shell.JumpItem>指定 <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>。  
  
 通过设置 <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> 和 <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> 属性，可以指定是否在 <xref:System.Windows.Shell.JumpList> 中显示标准的**最近**和**频繁**的类别。 这些类别的内容由 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell 管理。 由于这些类别可能包含很多相同的数据，因此你通常会在 <xref:System.Windows.Shell.JumpList>中显示其中一种，但不能同时显示两者。 如果通过公共文件对话框打开最近的项，或通过文件类型关联来打开应用程序，[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 会自动管理这些项。 通过跳转列表访问项时，可以通过调用 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> 方法通知 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell 将该项添加到**最近**的类别。  
  
## <a name="applying-a-jump-list-to-the-windows-shell"></a>将跳转列表应用于 Windows Shell  
 不能直接访问 shell 的跳转列表，也不能将其内容读入到 <xref:System.Windows.Shell.JumpList> 类中。 相反，<xref:System.Windows.Shell.JumpList> 类提供可以使用的跳转列表的表示形式，然后应用于 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell。 通常创建一个 <xref:System.Windows.Shell.JumpList> 并在应用程序首次运行时将其设置一次。 不过，您可以在运行时修改或替换 <xref:System.Windows.Shell.JumpList>。  
  
 设置 <xref:System.Windows.Shell.JumpList> 属性后，必须先将 <xref:System.Windows.Shell.JumpList> 应用到 Windows shell，然后它的内容才会显示在任务栏跳转列表中。 当 <xref:System.Windows.Shell.JumpList> 首次附加到应用程序时（在 XAML 中或在调用 <xref:System.Windows.Shell.JumpList.SetJumpList%2A> 方法时），将自动执行此操作。 如果在运行时修改 <xref:System.Windows.Shell.JumpList> 的内容，则必须调用 <xref:System.Windows.Shell.JumpList.Apply%2A> 方法将其当前内容应用到 Windows shell。  
  
## <a name="setting-a-jump-list-in-xaml"></a>在 XAML 中设置跳转列表  
 <xref:System.Windows.Shell.JumpList> 不会自动附加到 <xref:System.Windows.Application> 对象。 通过使用附加的属性语法，可以在 XAML 中将 <xref:System.Windows.Shell.JumpList> 附加到 <xref:System.Windows.Application> 对象。 <xref:System.Windows.Shell.JumpList> 类实现 <xref:System.ComponentModel.ISupportInitialize> 接口以支持 <xref:System.Windows.Shell.JumpList>的 XAML 声明。 如果 <xref:System.Windows.Shell.JumpList> 在 XAML 中声明并附加到当前 <xref:System.Windows.Application>，则在初始化该 <xref:System.Windows.Shell.JumpList> 时，它会自动应用到 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell。  
  
## <a name="setting-and-modifying-a-jump-list-in-code"></a>设置和修改代码中的跳转列表  
 通过调用静态 <xref:System.Windows.Shell.JumpList.SetJumpList%2A> 方法，在代码中将 <xref:System.Windows.Shell.JumpList> 附加到 <xref:System.Windows.Application> 对象。 这还会将 <xref:System.Windows.Shell.JumpList> 应用到 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell。  
  
 若要在运行时修改 <xref:System.Windows.Shell.JumpList>，请调用 <xref:System.Windows.Shell.JumpList.GetJumpList%2A> 方法以获取当前附加到 <xref:System.Windows.Application>的 <xref:System.Windows.Shell.JumpList>。 在修改了 <xref:System.Windows.Shell.JumpList>的属性后，必须调用 <xref:System.Windows.Shell.JumpList.Apply%2A> 方法将更改应用到 Windows shell。  
  
> [!NOTE]
>  通常会创建一个附加到 <xref:System.Windows.Application> 并应用于 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell 的 <xref:System.Windows.Shell.JumpList>。 但是，可以创建多个 <xref:System.Windows.Shell.JumpList> 对象。 一次只能将一个 <xref:System.Windows.Shell.JumpList> 应用于 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell，一次只能将一个 <xref:System.Windows.Shell.JumpList> 与 <xref:System.Windows.Application>关联。 .NET Framework 不要求这些是相同的 <xref:System.Windows.Shell.JumpList>。  
  
> [!NOTE]
>  此类包含类级别的链接要求，该请求应用于所有成员。 当直接调用方不具有完全信任权限时，将引发 <xref:System.Security.SecurityException>。 有关安全要求的详细信息，请参阅[链接要求](/dotnet/framework/misc/link-demands)和[继承要求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))。  
  
   
  
## Examples  
 下面的示例演示具有跳转列表的应用程序。 该应用程序有三个按钮，可用于向当前跳转列表中添加任务，清除 "跳转列表" 的内容，并将新的跳转列表应用于应用程序。  
  
 下面的示例演示如何在标记中声明 <xref:System.Windows.Shell.JumpList>。 <xref:System.Windows.Shell.JumpList> 包含两个 <xref:System.Windows.Shell.JumpTask> 链接和一个 <xref:System.Windows.Shell.JumpPath>。 如果未注册应用程序来处理 .txt 文件扩展名，则将 <xref:System.Windows.Shell.JumpPath> 应用到 shell 将会失败。  
  
 [!code-xaml[Shell_JumpListSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#000)]  
  
 下面的示例演示了 `App.xaml`的代码隐藏页。 此代码处理 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 和 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 事件。  
  
 [!code-csharp[Shell_JumpListSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#100)]  
  
 下面的示例演示用于创建应用程序用户界面的标记。  
  
 [!code-xaml[Shell_JumpListSample#300](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml#300)]  
  
 下面的示例演示了 `MainWindow.xaml`的代码隐藏页。 此代码演示如何在程序代码中修改、清除和创建 <xref:System.Windows.Shell.JumpList>。 对于新的跳转列表，将调用静态 <xref:System.Windows.Shell.JumpList.SetJumpList%2A> 方法，将 <xref:System.Windows.Shell.JumpList> 与当前应用程序相关联，并将 <xref:System.Windows.Shell.JumpList> 应用于 Windows shell。  
  
 [!code-csharp[Shell_JumpListSample#200](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#200)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Shell.JumpList" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Shell.JumpList" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList (System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of JumpItem), showFrequent As Boolean, showRecent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList(System::Collections::Generic::IEnumerable&lt;System::Windows::Shell::JumpItem ^&gt; ^ items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Shell.JumpList : seq&lt;System.Windows.Shell.JumpItem&gt; * bool * bool -&gt; System.Windows.Shell.JumpList" Usage="new System.Windows.Shell.JumpList (items, showFrequent, showRecent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt;" />
        <Parameter Name="showFrequent" Type="System.Boolean" />
        <Parameter Name="showRecent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="items">在跳转列表中显示的 <see cref="T:System.Windows.Shell.JumpItem" /> 对象的集合。</param>
        <param name="showFrequent">一个指示常用项是否显示在跳转列表中的值。</param>
        <param name="showRecent">一个指示最近使用的项是否显示在跳转列表中的值。</param>
        <summary>使用指定的参数初始化 <see cref="T:System.Windows.Shell.JumpList" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最近**和**频繁**的类别通常包含多个相同的跳转项。 因此，应用程序通常会在跳转列表中显示 "**最近**" 或 "**常用**" 类别，但不能同时显示两者。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpList.JumpItems" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToRecentCategory">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将指定的项添加到跳转列表的“最近”类别中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (string itemPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(string itemPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddToRecentCategory (itemPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::String ^ itemPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : string -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory itemPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemPath">要添加到跳转列表中的路径。</param>
        <summary>将指定的项路径添加到跳转列表的“最近”类别中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最新**类别的内容由 Windows shell 管理。 若要在跳转列表中显示最近使用过的项，请将 <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> 属性设置为 `true`。  
  
 可以调用 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> 方法，以请求 Windows shell 将项路径添加到 "**最近使用**的项" 列表中。 如果你的应用程序未注册为处理该项的文件类型，则它将不会出现在 "**最近**" 列表中，并且对 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> 的调用将以静默方式失败。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpPath jumpPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddToRecentCategory (jumpPath As JumpPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpPath ^ jumpPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpPath -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpPath" Type="System.Windows.Shell.JumpPath" />
      </Parameters>
      <Docs>
        <param name="jumpPath">要添加到跳转列表中的 <see cref="T:System.Windows.Shell.JumpPath" />。</param>
        <summary>将指定的跳转路径添加到跳转列表的“最近”类别中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最新**类别的内容由 Windows shell 管理。 若要在跳转列表中显示最近使用过的项，请将 <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> 属性设置为 `true`。  
  
 可以调用 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> 方法来请求 Windows shell 将指定的跳转路径添加到**最近使用**的项列表。 如果你的应用程序未注册为处理该项的文件类型，则它将不会出现在 "**最近**" 列表中，并且对 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> 的调用将以静默方式失败。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpTask jumpTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddToRecentCategory (jumpTask As JumpTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpTask ^ jumpTask);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpTask -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpTask" Type="System.Windows.Shell.JumpTask" />
      </Parameters>
      <Docs>
        <param name="jumpTask">要添加到跳转列表中的 <see cref="T:System.Windows.Shell.JumpTask" />。</param>
        <summary>将指定的跳转任务添加到跳转列表的“最近”类别中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最新**类别的内容由 Windows shell 管理。 若要在跳转列表中显示最近使用过的项，请将 <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> 属性设置为 `true`。  
  
 可以调用 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpTask%29> 方法，以请求 Windows shell 将指定的跳转任务添加到**最近使用**的项列表。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberSignature Language="F#" Value="member this.Apply : unit -&gt; unit" Usage="jumpList.Apply " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在其当前状态下将 <see cref="T:System.Windows.Shell.JumpList" /> 发送到 Windows shell 中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList.Apply%2A> 方法将 <xref:System.Windows.Shell.JumpList> 的内容发送到 Windows shell 的当前状态。 完成此调用后，将修改 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 属性，使其只包含 Windows shell 成功添加到其任务栏跳转列表中的那些项。 可以通过事件处理程序为 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 和 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 事件访问已删除项的列表。  
  
   
  
## Examples  
 下面的示例演示如何获取当前 <xref:System.Windows.Shell.JumpList> 并清除 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 集合的内容。 然后调用 <xref:System.Windows.Shell.JumpList.Apply%2A> 方法，将 <xref:System.Windows.Shell.JumpList> 更改应用于 Windows shell。 此示例是 <xref:System.Windows.Shell.JumpList> 类概述中提供的一个更大示例的一部分。  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Shell.JumpList" /> 未完全初始化。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="jumpList.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用信号通知 <see cref="T:System.Windows.Shell.JumpList" /> 初始化开始。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList> 类实现 <xref:System.ComponentModel.ISupportInitialize> 接口以支持 <xref:System.Windows.Shell.JumpList>的 XAML 声明。 仅当 <xref:System.Windows.Shell.JumpList> 在 XAML 中声明并使用附加的属性语法附加到 <xref:System.Windows.Application> 时，才会调用 <xref:System.Windows.Shell.JumpList.BeginInit%2A> 方法。 不要从代码中调用此方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">对 <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> 的此调用嵌套在对 <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> 的之前调用中。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="jumpList.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用信号通知 <see cref="T:System.Windows.Shell.JumpList" /> 初始化结束。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList> 类实现 <xref:System.ComponentModel.ISupportInitialize> 接口以支持 <xref:System.Windows.Shell.JumpList>的 XAML 声明。 仅当 <xref:System.Windows.Shell.JumpList> 在 XAML 中声明并使用附加的属性语法附加到 <xref:System.Windows.Application> 时，才会调用 <xref:System.Windows.Shell.JumpList.EndInit%2A> 方法。 不要从代码中调用此方法。  
  
 <xref:System.Windows.Shell.JumpList.EndInit%2A> 方法与 <xref:System.Windows.Shell.JumpList.Apply%2A> 方法具有相同的效果。 <xref:System.Windows.Shell.JumpList.EndInit%2A> 将 <xref:System.Windows.Shell.JumpList> 的内容发送到 Windows shell 的当前状态。 完成此调用后，将修改 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 属性，使其只包含 Windows shell 成功添加到其跳转列表中的那些项。 可以通过事件处理程序为 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 和 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 事件访问已删除项的列表。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">对 <see cref="M:System.Windows.Shell.JumpList.EndInit" /> 的此调用未与对 <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> 的调用配对。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJumpList">
      <MemberSignature Language="C#" Value="public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Shell.JumpList GetJumpList(class System.Windows.Application application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetJumpList (application As Application) As JumpList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Shell::JumpList ^ GetJumpList(System::Windows::Application ^ application);" />
      <MemberSignature Language="F#" Value="static member GetJumpList : System.Windows.Application -&gt; System.Windows.Shell.JumpList" Usage="System.Windows.Shell.JumpList.GetJumpList application" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.JumpList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
      </Parameters>
      <Docs>
        <param name="application">与 <see cref="T:System.Windows.Shell.JumpList" /> 关联的应用程序。</param>
        <summary>返回与某个应用程序关联的 <see cref="T:System.Windows.Shell.JumpList" /> 对象。</summary>
        <returns>与指定应用程序关联的 <see cref="T:System.Windows.Shell.JumpList" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以调用 <xref:System.Windows.Shell.JumpList.GetJumpList%2A> 方法获取当前与 <xref:System.Windows.Application>关联的 <xref:System.Windows.Shell.JumpList>。 .NET Framework 不需要此为当前应用于 Windows shell 的 <xref:System.Windows.Shell.JumpList>。  
  
   
  
## Examples  
 下面的示例演示如何获取与当前应用程序关联的 <xref:System.Windows.Shell.JumpList>。 <xref:System.Windows.Shell.JumpTask> 将添加到 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 集合并添加到**最近**的类别。 调用 <xref:System.Windows.Shell.JumpList.Apply%2A> 方法，将更新的 <xref:System.Windows.Shell.JumpList> 应用到 Windows shell。 此示例是 <xref:System.Windows.Shell.JumpList> 类概述中提供的一个更大示例的一部分。  
  
 [!code-csharp[Shell_JumpListSample#240](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#240)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt; JumpItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Windows.Shell.JumpItem&gt; JumpItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.JumpItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JumpItems As List(Of JumpItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ JumpItems { System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JumpItems : System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;" Usage="System.Windows.Shell.JumpList.JumpItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在跳转列表中显示的 <see cref="T:System.Windows.Shell.JumpItem" /> 对象的集合。</summary>
        <value>在跳转列表中显示的 <see cref="T:System.Windows.Shell.JumpItem" /> 对象的集合。 默认值为空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 跳转列表可以包含两种类型的项： <xref:System.Windows.Shell.JumpTask> 和 <xref:System.Windows.Shell.JumpPath>。 <xref:System.Windows.Shell.JumpTask> 是指向程序的链接，<xref:System.Windows.Shell.JumpPath> 是指向文件的链接。  
  
 创建 <xref:System.Windows.Shell.JumpList> 时，<xref:System.Windows.Shell.JumpList.JumpItems%2A> 集合为空。 可以将任何 <xref:System.Windows.Shell.JumpTask> 或 <xref:System.Windows.Shell.JumpPath> 对象添加到集合中。 集合将只包含程序添加的项。 通过成功调用 <xref:System.Windows.Shell.JumpList.EndInit%2A> 或 <xref:System.Windows.Shell.JumpList.Apply%2A> 方法将 <xref:System.Windows.Shell.JumpList> 传递到 Windows shell 后，<xref:System.Windows.Shell.JumpList.JumpItems%2A> 集合将仅包含已成功添加到任务栏跳转列表中的项。 将从 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 集合中删除未成功添加的项。 可以通过事件处理程序为 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 和 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 事件访问已删除项的列表。  
  
   
  
## Examples  
 下面的示例演示如何获取当前 <xref:System.Windows.Shell.JumpList> 并清除 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 集合的内容。 然后调用 <xref:System.Windows.Shell.JumpList.Apply%2A> 方法，将 <xref:System.Windows.Shell.JumpList> 更改应用于 Windows shell。 此示例是 <xref:System.Windows.Shell.JumpList> 类概述中提供的一个更大示例的一部分。  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRejected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event JumpItemsRejected As EventHandler(Of JumpItemsRejectedEventArgs) " FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRejectedEventArgs ^&gt; ^ JumpItemsRejected;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRejected : EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " Usage="member this.JumpItemsRejected : System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRejected As EventHandler(Of JumpItemsRejectedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 Windows shell 将跳转项添加到跳转列表中失败时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.Shell.JumpList> 的内容应用到 Windows shell 后，<xref:System.Windows.Shell.JumpList.JumpItems%2A> 属性将修改为仅包含 Windows shell 成功添加到其跳转列表中的那些项。 可以通过事件处理程序为 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 和 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 事件访问已删除项的列表。  
  
   
  
## Examples  
 下面的示例演示如何处理 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 事件以便在消息框中显示拒绝的项。 此示例是 <xref:System.Windows.Shell.JumpList> 类概述中提供的一个更大示例的一部分。  
  
 [!code-csharp[Shell_JumpListSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRemovedByUser">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event JumpItemsRemovedByUser As EventHandler(Of JumpItemsRemovedEventArgs) " FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRemovedEventArgs ^&gt; ^ JumpItemsRemovedByUser;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRemovedByUser : EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " Usage="member this.JumpItemsRemovedByUser : System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRemovedByUser As EventHandler(Of JumpItemsRemovedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在用户从跳转列表中移除以前位于该列表中的跳转项时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Windows.Shell.JumpList> 的内容应用到 Windows shell 后，<xref:System.Windows.Shell.JumpList.JumpItems%2A> 属性将修改为仅包含 Windows shell 成功添加到其跳转列表中的那些项。 可以通过事件处理程序为 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 和 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 事件访问已删除项的列表。  
  
   
  
## Examples  
 下面的示例演示如何处理 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 事件以便在消息框中显示拒绝的项。 此示例是 <xref:System.Windows.Shell.JumpList> 类概述中提供的一个更大示例的一部分。  
  
 [!code-csharp[Shell_JumpListSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJumpList">
      <MemberSignature Language="C#" Value="public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetJumpList(class System.Windows.Application application, class System.Windows.Shell.JumpList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetJumpList (application As Application, value As JumpList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetJumpList(System::Windows::Application ^ application, System::Windows::Shell::JumpList ^ value);" />
      <MemberSignature Language="F#" Value="static member SetJumpList : System.Windows.Application * System.Windows.Shell.JumpList -&gt; unit" Usage="System.Windows.Shell.JumpList.SetJumpList (application, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
        <Parameter Name="value" Type="System.Windows.Shell.JumpList" />
      </Parameters>
      <Docs>
        <param name="application">与 <see cref="T:System.Windows.Shell.JumpList" /> 关联的应用程序。</param>
        <param name="value">要与应用程序关联的 <see cref="T:System.Windows.Shell.JumpList" />。</param>
        <summary>设置与应用程序关联的 <see cref="T:System.Windows.Shell.JumpList" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以创建多个 <xref:System.Windows.Shell.JumpList> 对象。 但是，一次只能有一个 <xref:System.Windows.Shell.JumpList> 与 <xref:System.Windows.Application>相关联。 调用 <xref:System.Windows.Shell.JumpList.SetJumpList%2A> 方法，设置当前与 <xref:System.Windows.Application>关联的 <xref:System.Windows.Shell.JumpList>。  
  
   
  
## Examples  
 下面的示例演示如何在代码中创建 <xref:System.Windows.Shell.JumpList>。 调用静态 <xref:System.Windows.Shell.JumpList.SetJumpList%2A> 方法，将 <xref:System.Windows.Shell.JumpList> 与当前应用程序相关联。 设置后，会自动将 <xref:System.Windows.Shell.JumpList> 应用到 Windows shell。 此示例是 <xref:System.Windows.Shell.JumpList> 类概述中提供的一个更大示例的一部分。  
  
 [!code-csharp[Shell_JumpListSample#210](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#210)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFrequentCategory">
      <MemberSignature Language="C#" Value="public bool ShowFrequentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFrequentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowFrequentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowFrequentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFrequentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示常用项是否显示在跳转列表中。</summary>
        <value>如果常用项显示在跳转列表中，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **常见**类别的内容由 Windows shell 管理。 若要在跳转列表中显示常用项，请将 <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> 属性设置为 `true`。  
  
 **最近**和**频繁**的类别通常包含多个相同的跳转项。 因此，应用程序通常会在跳转列表中显示 "**最近**" 或 "**常用**" 类别，但不能同时显示两者。  
  
   
  
## Examples  
 下面的示例演示了一个配置为显示**常用**类别的 <xref:System.Windows.Shell.JumpList>。 此示例是 <xref:System.Windows.Shell.JumpList> 类概述中提供的一个更大示例的一部分。  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowRecentCategory">
      <MemberSignature Language="C#" Value="public bool ShowRecentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRecentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRecentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRecentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRecentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示最近使用的项是否显示在跳转列表中。</summary>
        <value>如果最近使用的项显示在跳转列表中，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最新**类别的内容由 Windows shell 管理。 若要在跳转列表中显示常用项，请将 <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> 属性设置为 `true`。  
  
 **最近**和**频繁**的类别通常包含多个相同的跳转项。 因此，应用程序通常会在跳转列表中显示 "**最近**" 或 "**常用**" 类别，但不能同时显示两者。  
  
 可以调用 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> 方法来请求 Windows shell 将项添加到**最近使用**的项列表。 如果你的应用程序未注册为处理该项的文件名类型，则它将不会出现在 "**最近**" 列表中，并且对 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> 的调用会以静默方式失败。  
  
   
  
## Examples  
 下面的示例演示了一个配置为显示 "**最近**" 类别的 <xref:System.Windows.Shell.JumpList>。 此示例是 <xref:System.Windows.Shell.JumpList> 类概述中提供的一个更大示例的一部分。  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
