<Type Name="TaskbarItemInfo" FullName="System.Windows.Shell.TaskbarItemInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c115e038d7f12f3cf1af4b4a63ab38328259ff49" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102078327" /></Metadata><TypeSignature Language="C#" Value="public sealed class TaskbarItemInfo : System.Windows.Freezable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TaskbarItemInfo extends System.Windows.Freezable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.TaskbarItemInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TaskbarItemInfo&#xA;Inherits Freezable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskbarItemInfo sealed : System::Windows::Freezable" />
  <TypeSignature Language="F#" Value="type TaskbarItemInfo = class&#xA;    inherit Freezable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示有关任务栏缩略图显示方式的信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.TaskbarItemInfo>类为 Windows 7 任务栏功能提供托管包装。 有关 Windows shell 和本机任务栏 Api 的详细信息，请参阅 [任务栏扩展](https://go.microsoft.com/fwlink/?LinkId=178479)。 <xref:System.Windows.Shell.TaskbarItemInfo> 公开为 <xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=nameWithType> 的依赖项属性 <xref:System.Windows.Window> 。  
  
 Windows 7 任务栏提供了增强的功能，使您可以使用任务栏项来向用户传达状态，并在窗口最小化或隐藏时公开常见任务。 <xref:System.Windows.Shell.TaskbarItemInfo>在 windows 7 之前的 windows 版本中，类公开的功能不可用。 使用类的应用程序 <xref:System.Windows.Shell.TaskbarItemInfo> 仍可以在早期版本的 Windows 中运行; 但是，这些任务栏增强功能在早期版本中不可用。  
  
 在 Windows 7 中，某些任务栏功能可能不可用，具体取决于用户的设置。 例如，如果禁用了 Windows Aero 或使用提升的权限启动了应用程序，则任务栏功能不可用。 应用程序应提供其他方法来与不依赖于 Windows 7 中的增强任务栏功能的用户进行交互。  
  
 通知区域中的程序图标位于任务栏最右侧，通常用于向用户传达应用程序状态。 默认情况下，Windows 7 任务栏隐藏通知区域中的程序图标。 但是，可以将属性设置 <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> 为将图像添加到任务栏按钮，以在消息传递应用程序中传达状态。 覆盖图像允许用户查看应用程序状态，即使他们无法看到通知区域中的程序图标。 通过设置和属性，还可以在任务栏按钮中显示运行任务的进度 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 。  
  
 当您将鼠标指针移到任务栏按钮上时，Windows 7 任务栏将显示应用程序的缩略图。 默认情况下，将显示整个应用程序窗口。 您可以通过设置属性来指定在缩略图中显示的窗口的特定部分 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> 。 你还可以指定在 <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> 任务栏缩略图上方显示的工具提示中显示的。 即使由于用户设置而无法看到缩略图，也会显示工具提示。  
  
 您可以向任务栏缩略图添加按钮，以提供对常见任务的访问，而无需切换到应用程序窗口。 例如，"窗口" Media Player 提供播放、暂停、前进和后退按钮，使你可以在应用程序被最小化时控制任务栏缩略图中的媒体播放。 任务栏缩略图中的按钮由 <xref:System.Windows.Shell.ThumbButtonInfo> 对象表示，并包含在 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> 集合中。  
  
 下图显示了 Windows 7 任务栏的增强功能。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏增强功能  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Windows.Shell.TaskbarItemInfo> 在标记中创建。 <xref:System.Windows.Shell.TaskbarItemInfo>包含 <xref:System.Windows.Shell.ThumbButtonInfo> 对象的集合，这些对象提供对任务栏项中的播放和停止命令的访问。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 以下标记和代码在其完整上下文中显示前面的示例。 应用程序使用 <xref:System.ComponentModel.BackgroundWorker> 从0到100的计数，并在用户界面中显示其进度。 可以从任务栏预览启动和停止任务。 进度将显示在任务栏按钮中。  
  
 [!code-xaml[Shell_TaskbarItemSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#001)]  
  
 [!code-csharp[Shell_TaskbarItemSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[Shell_TaskbarItemSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskbarItemInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.TaskbarItemInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskbarItemInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Shell.TaskbarItemInfo" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="taskbarItemInfo.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置任务栏项工具提示的文本。</summary>
        <value>任务栏项工具提示的文本。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当鼠标指针位于任务栏按钮上时，工具提示显示在任务栏缩略图上方。 如果由于用户设置而不显示任务栏缩略图，则仍将显示工具提示。  
  
 下图显示任务栏 <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> 工具提示。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏描述  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Windows.Shell.TaskbarItemInfo> 在标记中创建并设置 <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> 属性。 此示例是为类提供的更大示例的一部分 <xref:System.Windows.Shell.TaskbarItemInfo> 。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DescriptionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DescriptionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DescriptionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DescriptionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DescriptionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DescriptionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.DescriptionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Overlay">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Overlay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Overlay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.Overlay" />
      <MemberSignature Language="VB.NET" Value="Public Property Overlay As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ Overlay { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Overlay : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.Overlay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在任务栏按钮中的程序图标上方显示的图像。</summary>
        <value>在任务栏按钮中的程序图标上方显示的图像。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将图像添加到任务栏按钮中的程序图标，将应用程序状态传达给用户。 覆盖区使用一个静态或动态 <xref:System.Windows.Media.ImageSource> 的，它位于任务栏按钮中图标的右下角。 如果用户将任务栏设置为显示小图标，则不会显示覆盖。  
  
 通知区域中的程序图标位于任务栏最右侧，通常用于向用户传达应用程序状态。 在 Windows 7 中，通知区域中的程序图标默认情况下是隐藏的，因此，对于通信状态不太有用。 当通知区域中的图标处于隐藏状态时，可以使用 Windows 7 中的任务栏按钮重叠来传达状态。 您的应用程序可以检测到 Windows 版本，并以适用于操作系统的方式提供通知。  
  
 覆盖图像以适当大小呈现。 如果 <xref:System.Windows.Media.ImageSource> 表示，则 <xref:System.Drawing.Icon> 还使用适当的位深度。  
  
 下图显示任务栏 <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> 。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏覆盖  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Windows.Shell.TaskbarItemInfo> 在标记中创建并设置 <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> 属性。 此示例是为类提供的更大示例的一部分 <xref:System.Windows.Shell.TaskbarItemInfo> 。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 下面的示例演示如何在代码中设置 <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> 属性。  
  
 [!code-csharp[Shell_TaskbarItemSample#121](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#121)]
 [!code-vb[Shell_TaskbarItemSample#121](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#121)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Environment.OSVersion" />
      </Docs>
    </Member>
    <Member MemberName="OverlayProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OverlayProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OverlayProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OverlayProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OverlayProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OverlayProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.OverlayProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressState">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemProgressState ProgressState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Shell.TaskbarItemProgressState ProgressState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressState As TaskbarItemProgressState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::TaskbarItemProgressState ProgressState { System::Windows::Shell::TaskbarItemProgressState get(); void set(System::Windows::Shell::TaskbarItemProgressState value); };" />
      <MemberSignature Language="F#" Value="member this.ProgressState : System.Windows.Shell.TaskbarItemProgressState with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemProgressState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在任务栏按钮中显示进度指示器的方式。</summary>
        <value>一个枚举值，该值指示在任务栏按钮中显示进度指示器的方式。 默认值为 <see cref="F:System.Windows.Shell.TaskbarItemProgressState.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以通过在 Windows 7 任务栏按钮中显示进度指示器来传达长时间运行的任务的进度。 指示器的颜色由 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> 属性确定，该属性包含一个 <xref:System.Windows.Shell.TaskbarItemProgressState> 枚举值。 当 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> 为时 <xref:System.Windows.Shell.TaskbarItemProgressState.Normal> ，指示符为绿色。 如果 <xref:System.Windows.Shell.TaskbarItemProgressState.Paused> 为，则指示器为黄色。 如果 <xref:System.Windows.Shell.TaskbarItemProgressState.Error> 为，则指示符为红色。 对于这些状态， <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 属性决定进度指示器填充任务栏按钮的量。 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 对于的其他值，将忽略 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> 。 <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> 在整个任务栏按钮中显示闪烁的绿色指示器。 没有显示指示器 <xref:System.Windows.Shell.TaskbarItemProgressState.None> 。  
  
 下图显示了处于状态的任务栏进度指示器 <xref:System.Windows.Shell.TaskbarItemProgressState.Normal> 。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏进度指示器  
  
   
  
## Examples  
 下面的示例演示如何在代码中设置 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> 属性。 状态在事件的处理程序中设置 <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted?displayProperty=nameWithType> ，以指示该后台任务是由用户停止、结束并显示错误还是正常完成。 此示例是为类提供的更大示例的一部分 <xref:System.Windows.Shell.TaskbarItemInfo> 。  
  
 [!code-csharp[Shell_TaskbarItemSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[Shell_TaskbarItemSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ProgressStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ProgressStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProgressStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ProgressStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProgressStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressValue">
      <MemberSignature Language="C#" Value="public double ProgressValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ProgressValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressValue As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ProgressValue { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.ProgressValue : double with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示任务栏按钮中进度指示器的填满状态。</summary>
        <value>一个值，该值指示任务栏按钮中进度指示器的填满状态。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 属性表示为介于0.0 和1.0 之间的值。 小于或等于的数字将被强制为位于这些边界内。 <xref:System.Double.NaN> 被强制为0。  
  
 可以通过在 Windows 7 任务栏按钮中显示进度指示器来传达长时间运行的任务的进度。 指示器的颜色由 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> 属性确定，该属性包含一个 <xref:System.Windows.Shell.TaskbarItemProgressState> 枚举值。 如果 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> 属性为 <xref:System.Windows.Shell.TaskbarItemProgressState.Normal> 、 <xref:System.Windows.Shell.TaskbarItemProgressState.Paused> 或 <xref:System.Windows.Shell.TaskbarItemProgressState.Error> ，则 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 属性确定进度指示器的填满程度。 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 对于的某些值，将忽略 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> 。 <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> 在整个任务栏按钮中显示闪烁的绿色指示器。 没有显示指示器 <xref:System.Windows.Shell.TaskbarItemProgressState.None> 。  
  
 下图显示了82% 的任务栏进度指示器 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏进度指示器  
  
   
  
## Examples  
 下面的示例演示如何在代码中设置 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 属性。 在事件的处理程序中设置值 <xref:System.ComponentModel.BackgroundWorker.ProgressChanged?displayProperty=nameWithType> ，以指示后台任务的当前进度。 此示例是为类提供的更大示例的一部分 <xref:System.Windows.Shell.TaskbarItemInfo> 。  
  
 [!code-csharp[Shell_TaskbarItemSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[Shell_TaskbarItemSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressValueProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ProgressValueProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ProgressValueProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProgressValueProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ProgressValueProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProgressValueProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbButtonInfos">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" />
      <MemberSignature Language="VB.NET" Value="Public Property ThumbButtonInfos As ThumbButtonInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::ThumbButtonInfoCollection ^ ThumbButtonInfos { System::Windows::Shell::ThumbButtonInfoCollection ^ get(); void set(System::Windows::Shell::ThumbButtonInfoCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThumbButtonInfos : System.Windows.Shell.ThumbButtonInfoCollection with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.ThumbButtonInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 关联的 <see cref="T:System.Windows.Window" /> 对象的集合。</summary>
        <value>与 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 关联的 <see cref="T:System.Windows.Window" /> 对象的集合。 默认值为空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以向任务栏缩略图添加按钮，以使用户无需切换到应用程序窗口即可访问常见任务。 例如，Windows Media Player 提供播放、暂停、前进和后退按钮，使用户可以在应用程序被最小化时控制任务栏缩略图中的媒体播放。 任务栏缩略图中的按钮由 <xref:System.Windows.Shell.ThumbButtonInfo> 对象表示，并包含在 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> 集合中。  
  
 Windows 7 shell 最多允许任务栏缩略图中有七个按钮。 如果向添加了7个以上 <xref:System.Windows.Shell.ThumbButtonInfo> 的对象 <xref:System.Windows.Shell.ThumbButtonInfoCollection> ，则会将其他对象视为溢出。 如果是按钮 <xref:System.Windows.Visibility.Collapsed> ，则它不会包含任何可见元素，也不会为其保留空间。 在这种情况下，会显示溢出中的其他按钮 <xref:System.Windows.Shell.ThumbButtonInfoCollection> 。  
  
 下图显示了任务栏预览，其中包含两个拇指按钮的集合。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏拇指按钮  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Windows.Shell.TaskbarItemInfo> 在标记中创建。 <xref:System.Windows.Shell.TaskbarItemInfo>包含 <xref:System.Windows.Shell.ThumbButtonInfo> 对象的集合，这些对象提供对任务栏项中的播放和停止命令的访问。 此示例是为类提供的更大示例的一部分 <xref:System.Windows.Shell.TaskbarItemInfo> 。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbButtonInfosProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ThumbButtonInfosProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ThumbButtonInfosProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThumbButtonInfosProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ThumbButtonInfosProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThumbButtonInfosProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailClipMargin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness ThumbnailClipMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness ThumbnailClipMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property ThumbnailClipMargin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness ThumbnailClipMargin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.ThumbnailClipMargin : System.Windows.Thickness with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定在任务栏缩略图中显示的应用程序窗口工作区的部件。</summary>
        <value>一个值，该值指定在任务栏缩略图中显示的应用程序窗口工作区的部件。 默认值为空 <see cref="T:System.Windows.Thickness" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，Windows 7 任务栏显示应用程序窗口工作区的缩放缩略图。 您可以设置 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> 属性，以指定在缩略图中显示的客户端窗口的剪裁区域。 例如，如果想要在排除应用程序工具栏时将缩略图集中在窗口内容上，则此属性很有用。 此属性不能用于显示缩略图中未在应用程序窗口中显示的内容。  
  
 通过设置 <xref:System.Windows.Thickness> 区域周围的边框的来指定在缩略图中显示的区域。 边框从客户端窗口的边缘开始，并向内扩展指定的量。 边框内的内容将显示在缩略图中。  
  
 下图显示了定义的边框 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> 。  
  
 ![缩略图剪辑边距](~/add/media/wpfshell-clipmargin.png "缩略图剪辑边距")  
缩略图剪辑边距边框  
  
 下图显示了剪切的缩略图预览。  
  
 ![任务栏项目信息示例](~/add/media/wpfshell-taskbariteminfo.png "任务栏项目信息示例")  
Windows 任务栏缩略图预览  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Windows.Shell.TaskbarItemInfo> 在标记中创建并设置 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> 属性。 此示例是为类提供的更大示例的一部分 <xref:System.Windows.Shell.TaskbarItemInfo> 。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailClipMarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ThumbnailClipMarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ThumbnailClipMarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThumbnailClipMarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ThumbnailClipMarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThumbnailClipMarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
