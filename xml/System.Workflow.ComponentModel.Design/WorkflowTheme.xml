<Type Name="WorkflowTheme" FullName="System.Workflow.ComponentModel.Design.WorkflowTheme">
  <Metadata><Meta Name="ms.openlocfilehash" Value="963120ca094e92f9c2c59ac0bcb32634221aa531" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86694419" /></Metadata><TypeSignature Language="C#" Value="public sealed class WorkflowTheme : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WorkflowTheme extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowTheme&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowTheme sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type WorkflowTheme = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为设计时环境中的工作流提供外观属性设置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 工作流主题定义工作流设计图面的外观。 这包括为工作流定义的背景样式、前景样式、字体以及图标。  
  
 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme> 是为特定工作流定义的主题。 如果不需要特定的工作流主题，则可以使用 <xref:System.Workflow.ComponentModel.Design.AmbientTheme> 类以设置为默认属性。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowTheme ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowTheme();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbientTheme">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.AmbientTheme AmbientTheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.AmbientTheme AmbientTheme" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.AmbientTheme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AmbientTheme As AmbientTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::AmbientTheme ^ AmbientTheme { System::Workflow::ComponentModel::Design::AmbientTheme ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AmbientTheme : System.Workflow.ComponentModel.Design.AmbientTheme" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.AmbientTheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.AmbientTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</summary>
        <value>一个 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />，它描述 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 外观的默认值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.AmbientTheme> 描述工作流设计图面的外观。 这包括为工作流设计图面定义的背景样式、前景样式、字体以及图标。  
  
   
  
## Examples  
 下面的示例演示如何访问 `AmbientTheme` 属性。 此示例摘自“跟踪配置文件设计器”SDK 示例。 有关详细信息，请参阅 [跟踪配置文件设计器示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90))。  
  
 [!code-csharp[Wf_samples#124](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#124)]
 [!code-vb[Wf_samples#124](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.WorkflowTheme Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Design.WorkflowTheme Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As WorkflowTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Design::WorkflowTheme ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Workflow.ComponentModel.Design.WorkflowTheme" Usage="workflowTheme.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowTheme</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建重复主题。</summary>
        <returns>一个表示新克隆的主题的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 `Clone` 可创建一个重复主题，其中包含与所克隆主题相匹配的属性设置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingFileDirectory">
      <MemberSignature Language="C#" Value="public string ContainingFileDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContainingFileDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.ContainingFileDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainingFileDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContainingFileDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainingFileDirectory : string" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.ContainingFileDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath" /> 的目录部分。</summary>
        <value><see cref="P:System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath" /> 的目录部分。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.ContainingFileDirectory%2A> 可获取 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath%2A> 的目录部分。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStandardTheme">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.WorkflowTheme CreateStandardTheme (System.Workflow.ComponentModel.Design.ThemeType standardThemeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Design.WorkflowTheme CreateStandardTheme(valuetype System.Workflow.ComponentModel.Design.ThemeType standardThemeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.CreateStandardTheme(System.Workflow.ComponentModel.Design.ThemeType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateStandardTheme (standardThemeType As ThemeType) As WorkflowTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::ComponentModel::Design::WorkflowTheme ^ CreateStandardTheme(System::Workflow::ComponentModel::Design::ThemeType standardThemeType);" />
      <MemberSignature Language="F#" Value="static member CreateStandardTheme : System.Workflow.ComponentModel.Design.ThemeType -&gt; System.Workflow.ComponentModel.Design.WorkflowTheme" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.CreateStandardTheme standardThemeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowTheme</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standardThemeType" Type="System.Workflow.ComponentModel.Design.ThemeType" />
      </Parameters>
      <Docs>
        <param name="standardThemeType">要创建的标准主题的 <see cref="T:System.Workflow.ComponentModel.Design.ThemeType" />。</param>
        <summary>创建标准主题。</summary>
        <returns>新创建的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.CreateStandardTheme%2A> 可创建一个供使用工作流设计器的任何人使用的新主题。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTheme">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.WorkflowTheme CurrentTheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Workflow.ComponentModel.Design.WorkflowTheme CurrentTheme" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentTheme As WorkflowTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Workflow::ComponentModel::Design::WorkflowTheme ^ CurrentTheme { System::Workflow::ComponentModel::Design::WorkflowTheme ^ get(); void set(System::Workflow::ComponentModel::Design::WorkflowTheme ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentTheme : System.Workflow.ComponentModel.Design.WorkflowTheme with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前主题。</summary>
        <value>用于显示设置的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme%2A> 可对用于显示工作流的主题进行更改。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme%2A> 属性来访问与工作流关联的 <xref:System.Workflow.ComponentModel.Design.AmbientTheme>。  
  
 此代码示例摘自工作流监视器 SDK 示例中的 DesignerGlyphProvider.cs 文件。 有关详细信息，请参阅 [工作流监视器](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90))。  
  
 [!code-csharp[WF_Samples#133](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#133)]
 [!code-vb[WF_Samples#133](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#133)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)">工作流监视器</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置主题的说明。</summary>
        <value>主题的说明。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">由于工作流主题是只读的，因此不能设置属性值。</exception>
      </Docs>
    </Member>
    <Member MemberName="DesignerThemes">
      <MemberSignature Language="C#" Value="public System.Collections.IList DesignerThemes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList DesignerThemes" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.DesignerThemes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerThemes As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ DesignerThemes { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerThemes : System.Collections.IList" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.DesignerThemes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与工作流关联的设计器主题的列表。</summary>
        <value>与工作流关联的设计器主题的列表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.DesignerThemes%2A> 可检索与工作流关联的设计器主题的列表。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableChangeNotification">
      <MemberSignature Language="C#" Value="public static bool EnableChangeNotification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.EnableChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableChangeNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableChangeNotification { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableChangeNotification : bool with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.EnableChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示是否启用更改通知的值。</summary>
        <value>为 <see langword="true" /> 则启用更改通知；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果启用更改通知，则在对主题进行更改时会发生主题更改事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置主题的文件路径。</summary>
        <value>主题的文件路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath%2A> 表示存储主题设置的文件的路径。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">由于工作流主题是只读的，因此不能设置属性值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WorkflowTheme ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WorkflowTheme ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="workflowTheme.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中重写时，允许对象自行清理任何资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法通过调用 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.System%23IDisposable%23Dispose%2A>(`false`) 来清理资源。 重写 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.System%23IDisposable%23Dispose%2A> 以自定义清理。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateThemeFilePath">
      <MemberSignature Language="C#" Value="public static string GenerateThemeFilePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateThemeFilePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.GenerateThemeFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateThemeFilePath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateThemeFilePath();" />
      <MemberSignature Language="F#" Value="static member GenerateThemeFilePath : unit -&gt; string" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.GenerateThemeFilePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>生成主题的文件路径。</summary>
        <returns>主题的新的唯一文件路径。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.GenerateThemeFilePath%2A> 可为主题创建唯一的文件路径。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesignerTheme">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.ActivityDesignerTheme GetDesignerTheme (System.Workflow.ComponentModel.Design.ActivityDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Design.ActivityDesignerTheme GetDesignerTheme(class System.Workflow.ComponentModel.Design.ActivityDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.GetDesignerTheme(System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDesignerTheme (designer As ActivityDesigner) As ActivityDesignerTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ GetDesignerTheme(System::Workflow::ComponentModel::Design::ActivityDesigner ^ designer);" />
      <MemberSignature Language="F#" Value="member this.GetDesignerTheme : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; System.Workflow.ComponentModel.Design.ActivityDesignerTheme" Usage="workflowTheme.GetDesignerTheme designer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerTheme</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="designer">从中检索主题的活动设计器。</param>
        <summary>获取指定 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的主题。</summary>
        <returns>与指定 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.GetDesignerTheme%2A> 可检索与指定活动设计器关联的主题。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>加载 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.WorkflowTheme Load (string themeFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Design.WorkflowTheme Load(string themeFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (themeFilePath As String) As WorkflowTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::ComponentModel::Design::WorkflowTheme ^ Load(System::String ^ themeFilePath);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; System.Workflow.ComponentModel.Design.WorkflowTheme" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.Load themeFilePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowTheme</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="themeFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="themeFilePath">主题的文件路径。</param>
        <summary>从指定的文件路径加载主题。</summary>
        <returns>从指定文件名加载的新的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.WorkflowTheme Load (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, string themeFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Design.WorkflowTheme Load(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, string themeFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Load(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (serializationManager As IDesignerSerializationManager, themeFilePath As String) As WorkflowTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::ComponentModel::Design::WorkflowTheme ^ Load(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager, System::String ^ themeFilePath);" />
      <MemberSignature Language="F#" Value="static member Load : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string -&gt; System.Workflow.ComponentModel.Design.WorkflowTheme" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.Load (serializationManager, themeFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowTheme</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="themeFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializationManager">要用于加载主题的序列化管理器。</param>
        <param name="themeFilePath">从中加载主题的文件路径。</param>
        <summary>使用序列化管理器从指定的路径加载新主题。</summary>
        <returns>使用指定的序列化管理器从指定文件路径加载的新的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果主题需要自定义序列化，则可以使用此方法，通过自定义序列化管理器来加载所需的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadThemeSettingFromRegistry">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.WorkflowTheme LoadThemeSettingFromRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Design.WorkflowTheme LoadThemeSettingFromRegistry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.LoadThemeSettingFromRegistry" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadThemeSettingFromRegistry () As WorkflowTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::ComponentModel::Design::WorkflowTheme ^ LoadThemeSettingFromRegistry();" />
      <MemberSignature Language="F#" Value="static member LoadThemeSettingFromRegistry : unit -&gt; System.Workflow.ComponentModel.Design.WorkflowTheme" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.LoadThemeSettingFromRegistry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowTheme</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从注册表中加载主题。</summary>
        <returns>从注册表加载的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `LoadThemeSettingFromRegistry` 加载  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPath">
      <MemberSignature Language="C#" Value="public static string LookupPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string LookupPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.LookupPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LookupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LookupPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LookupPath : string" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.LookupPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从注册表获取文件路径。</summary>
        <value>注册表中主题的文件路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `FilePath` 表示存储主题设置的文件的路径。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置主题的名称。</summary>
        <value>主题的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用名称来唯一地标识主题。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">由于工作流主题是只读的，因此不能设置属性值。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示工作流主题是否为只读。</summary>
        <value>如果工作流主题为只读，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何设置和取消设置 `ReadOnly` 属性以设置 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.AmbientTheme%2A> 属性。 此示例摘自“跟踪配置文件设计器”SDK 示例。 有关详细信息，请参阅 [跟踪配置文件设计器示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90))。  
  
 [!code-csharp[Wf_samples#124](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#124)]
 [!code-vb[Wf_samples#124](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegistryKeyPath">
      <MemberSignature Language="C#" Value="public static string RegistryKeyPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RegistryKeyPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.RegistryKeyPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RegistryKeyPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ RegistryKeyPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryKeyPath : string" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.RegistryKeyPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取主题的注册表项路径。</summary>
        <value>主题的注册表项路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用注册表项可在 Windows 注册表中提供一个用于保存主题信息的唯一位置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string themeFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string themeFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (themeFilePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ themeFilePath);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="workflowTheme.Save themeFilePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="themeFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="themeFilePath">要在其中保存 <see langword="WorkflowTheme" /> 的文件。</param>
        <summary>将主题保存到文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.Save%2A> 可将主题保持到文件中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveThemeSettingToRegistry">
      <MemberSignature Language="C#" Value="public static void SaveThemeSettingToRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveThemeSettingToRegistry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.SaveThemeSettingToRegistry" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveThemeSettingToRegistry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveThemeSettingToRegistry();" />
      <MemberSignature Language="F#" Value="static member SaveThemeSettingToRegistry : unit -&gt; unit" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.SaveThemeSettingToRegistry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将主题保存到注册表。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.SaveThemeSettingToRegistry%2A>，可以使用 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.RegistryKeyPath%2A> 所指定的注册表项，将主题保存到注册表。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardThemes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;System.Workflow.ComponentModel.Design.ThemeType,string[]&gt; StandardThemes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;valuetype System.Workflow.ComponentModel.Design.ThemeType, string[]&gt; StandardThemes" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.StandardThemes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StandardThemes As IDictionary(Of ThemeType, String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IDictionary&lt;System::Workflow::ComponentModel::Design::ThemeType, cli::array &lt;System::String ^&gt; ^&gt; ^ StandardThemes { System::Collections::Generic::IDictionary&lt;System::Workflow::ComponentModel::Design::ThemeType, cli::array &lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardThemes : System.Collections.Generic.IDictionary&lt;System.Workflow.ComponentModel.Design.ThemeType, string[]&gt;" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.StandardThemes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Workflow.ComponentModel.Design.ThemeType,System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取标准主题的列表。</summary>
        <value>可用主题的列表。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowTheme.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="workflowTheme.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 占用的托管资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThemeChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler ThemeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThemeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Design.WorkflowTheme.ThemeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThemeChanged As EventHandler " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ ThemeChanged;" />
      <MemberSignature Language="F#" Value="member this.ThemeChanged : EventHandler " Usage="member this.ThemeChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Shared Event ThemeChanged As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当主题发生更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当主题的属性发生更改或加载主题时，将发生 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.ThemeChanged>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.ThemeType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.ComponentModel.Design.ThemeType Type" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As ThemeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::ThemeType Type { System::Workflow::ComponentModel::Design::ThemeType get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Workflow.ComponentModel.Design.ThemeType" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ThemeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取主题的类型。</summary>
        <value>主题的 <see cref="T:System.Workflow.ComponentModel.Design.ThemeType" />。 可能值为 <see langword="Default" />、<see langword="System" /> 和 <see langword="UserDefined" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Version : string with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowTheme.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置主题的版本。</summary>
        <value>主题的版本信息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用版本信息可指示对命名主题的后续改进。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">由于工作流主题是只读的，因此不能设置属性值。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
