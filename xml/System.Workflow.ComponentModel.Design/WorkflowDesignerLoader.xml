<Type Name="WorkflowDesignerLoader" FullName="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="204238cb3a6739b4fb54847aa9aedcedeb65f840" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102066627" /></Metadata><TypeSignature Language="C#" Value="public abstract class WorkflowDesignerLoader : System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WorkflowDesignerLoader extends System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowDesignerLoader&#xA;Inherits BasicDesignerLoader" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowDesignerLoader abstract : System::ComponentModel::Design::Serialization::BasicDesignerLoader" />
  <TypeSignature Language="F#" Value="type WorkflowDesignerLoader = class&#xA;    inherit BasicDesignerLoader" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.BasicDesignerLoader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="32b65-101">提供可用于实现自定义工作流设计器加载程序的通用设计器加载程序功能。</span><span class="sxs-lookup"><span data-stu-id="32b65-101">Provides common designer loader functionality that can be used to implement custom workflow designer loaders.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="32b65-102">设计器加载程序类用于按照用户的指示加载设计器以及保存对设计器状态所做的任何更改。</span><span class="sxs-lookup"><span data-stu-id="32b65-102">Designer loader classes are used to load the designer and save any changes to the state of the designer when the user so instructs.</span></span> <span data-ttu-id="32b65-103">可实现 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 类以支持工作流设计器及其组件的自定义加载。</span><span class="sxs-lookup"><span data-stu-id="32b65-103">The <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> class can be implemented to support custom loading of a workflow designer and workflow designer components.</span></span> <span data-ttu-id="32b65-104">工作流设计器加载程序还负责在调用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> 方法后，将对打开文档所做的更改写回加载程序在加载文档时所使用的存储区。</span><span class="sxs-lookup"><span data-stu-id="32b65-104">A workflow designer loader is also responsible for writing changes to an open document back to the storage the loader used when loading the document after the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> method is called.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="32b65-105">当从 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 继承时，必须重写下面的成员：<see cref="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />、<see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" />、<see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" /> 和 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="32b65-105">When you inherit from <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />, you must override the following members: <see cref="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />, <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" />, <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" /> and <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32b65-106">在派生类中实现时，初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="32b65-106">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-107">下面的示例演示如何创建 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 对象的新实例。</span><span class="sxs-lookup"><span data-stu-id="32b65-107">The following example demonstrates how to create a new instance of a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> object.</span></span> <span data-ttu-id="32b65-108">在本例中，`WorkflowLoader` 类是从 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 派生的。</span><span class="sxs-lookup"><span data-stu-id="32b65-108">In this case, the `WorkflowLoader` class is derived from <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>.</span></span> <span data-ttu-id="32b65-109">创建 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 时，还会创建 <xref:System.ComponentModel.Design.DesignSurface> 并使用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 方法将其与 `BeginLoad` 关联。</span><span class="sxs-lookup"><span data-stu-id="32b65-109">When the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> is created, a <xref:System.ComponentModel.Design.DesignSurface> is also created and associated with the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> using the `BeginLoad` method.</span></span>  
  
 [!code-csharp[WF_Samples#47](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#47)]
 [!code-vb[WF_Samples#47](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddActivityToDesigner">
      <MemberSignature Language="C#" Value="public void AddActivityToDesigner (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddActivityToDesigner(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddActivityToDesigner (activity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddActivityToDesigner(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.AddActivityToDesigner : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowDesignerLoader.AddActivityToDesigner activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="32b65-110">要添加的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="32b65-110"><see cref="T:System.Workflow.ComponentModel.Activity" /> to add.</span></span></param>
        <summary><span data-ttu-id="32b65-111">当将活动添加到父活动集合中后，即会将该活动添加到设计器宿主。</span><span class="sxs-lookup"><span data-stu-id="32b65-111">Adds an activity to the designer host after it has been added to the parent activities collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-112">下面的示例演示如何将 <xref:System.Workflow.Activities.CodeActivity> 添加到设计器。</span><span class="sxs-lookup"><span data-stu-id="32b65-112">The following example demonstrates how to add a <xref:System.Workflow.Activities.CodeActivity> to the designer.</span></span> <span data-ttu-id="32b65-113">在使用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner%2A> 方法将活动添加到设计器之前，首先将该活动添加到工作流中根活动的 Activities 集合中。</span><span class="sxs-lookup"><span data-stu-id="32b65-113">Before the activity is added to the designer using the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner%2A> method, it is first added to the Activities collection of the root activity within the workflow.</span></span>  
  
 [!code-csharp[WF_Samples#55](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#55)]
 [!code-vb[WF_Samples#55](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#55)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="workflowDesignerLoader.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32b65-114">释放由 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="32b65-114">Releases all resources used by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32b65-115"><xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A> 释放设计器宿主使用的所有服务，但不将挂起的更改写入到设计器加载程序。</span><span class="sxs-lookup"><span data-stu-id="32b65-115"><xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A> releases all services used by the designer host, but it does not write pending changes to the designer loader.</span></span> <span data-ttu-id="32b65-116">如果希望在释放所有资源之前保存所有挂起的更改，请先调用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A>，然后再调用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="32b65-116">If you want to save any pending changes prior to releasing all resources, call <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> before you call <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32b65-117">下面的示例演示 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A> 方法的实现。</span><span class="sxs-lookup"><span data-stu-id="32b65-117">The following example demonstrates an implementation of the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A> method.</span></span> <span data-ttu-id="32b65-118">在本实现中，将会移除已添加到 LoaderHost 对象的各个服务，以准备关闭应用程序。</span><span class="sxs-lookup"><span data-stu-id="32b65-118">In this implementation, various services that have been added to the LoaderHost object are removed in preparation for closing the application.</span></span> <span data-ttu-id="32b65-119">此示例摘自“跟踪配置文件设计器”SDK 示例。</span><span class="sxs-lookup"><span data-stu-id="32b65-119">This example is from the Tracking Profile Designer SDK sample.</span></span> <span data-ttu-id="32b65-120">有关详细信息，请参阅 [跟踪配置文件设计器示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90))。</span><span class="sxs-lookup"><span data-stu-id="32b65-120">For more information, see [Tracking Profile Designer Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#121](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#121)]
 [!code-vb[WF_Samples#121](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public abstract string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32b65-121">当在派生类中重写时，获取要加载的设计器的文件名。</span><span class="sxs-lookup"><span data-stu-id="32b65-121">When overridden in a derived class, gets the file name of the designer to load.</span></span></summary>
        <value><span data-ttu-id="32b65-122">一个字符串，其中包含要加载的设计器的文件名。</span><span class="sxs-lookup"><span data-stu-id="32b65-122">A string that contains the file name of the designer to load.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-123">下面的示例演示如何重写 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName%2A> 属性以返回 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 所使用的当前加载的工作流文件的路径。</span><span class="sxs-lookup"><span data-stu-id="32b65-123">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName%2A> property to return the path of the currently loaded workflow file used by the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>.</span></span>  
  
 [!code-csharp[WF_Samples#32](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#32)]
 [!code-vb[WF_Samples#32](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="workflowDesignerLoader.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32b65-124">将挂起的更改写入设计器的加载位置。</span><span class="sxs-lookup"><span data-stu-id="32b65-124">Writes pending changes to the location that the designer was loaded from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-125">下面的示例演示如何重写 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> 方法以使用 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 序列化工作流。</span><span class="sxs-lookup"><span data-stu-id="32b65-125">The following example demonstrates how to override the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> method to serialize a workflow using the <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>.</span></span> <span data-ttu-id="32b65-126">在本示例中，重写的 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> 委托 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A> 派生类中定义的 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 方法。</span><span class="sxs-lookup"><span data-stu-id="32b65-126">In this example, the overridden <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> delegates to the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A> method defined in the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> derived class.</span></span>  
  
 [!code-csharp[WF_Samples#35](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#35)]
 [!code-vb[WF_Samples#35](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceReload">
      <MemberSignature Language="C#" Value="public virtual void ForceReload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForceReload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ForceReload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ForceReload();" />
      <MemberSignature Language="F#" Value="abstract member ForceReload : unit -&gt; unit&#xA;override this.ForceReload : unit -&gt; unit" Usage="workflowDesignerLoader.ForceReload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32b65-127">在派生类中重写时，将使 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 重新加载设计器。</span><span class="sxs-lookup"><span data-stu-id="32b65-127">When overridden in a derived class, causes <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> to reload the designer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileReader">
      <MemberSignature Language="C#" Value="public abstract System.IO.TextReader GetFileReader (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextReader GetFileReader(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFileReader (filePath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::TextReader ^ GetFileReader(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="abstract member GetFileReader : string -&gt; System.IO.TextReader" Usage="workflowDesignerLoader.GetFileReader filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="32b65-128">一个字符串，其中包含要从中读取的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="32b65-128">A string that contains a path to the file to read from.</span></span></param>
        <summary><span data-ttu-id="32b65-129">在派生类中重写时，将会检索 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 用于从指定文件中进行读取的对象。</span><span class="sxs-lookup"><span data-stu-id="32b65-129">When overridden in a derived class, retrieves an object that <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> uses to read from the specified file.</span></span></summary>
        <returns><span data-ttu-id="32b65-130">用于读取指定文件的 <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="32b65-130">A <see cref="T:System.IO.TextReader" /> to read the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-131">下面的示例演示如何在调用 `TextReader` 重载方法时创建和返回 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader%2A> 对象。</span><span class="sxs-lookup"><span data-stu-id="32b65-131">The following example shows how to create and return a `TextReader` object when the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader%2A> overloaded method is called.</span></span>  
  
 [!code-csharp[WF_Samples#33](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#33)]
 [!code-vb[WF_Samples#33](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileWriter">
      <MemberSignature Language="C#" Value="public abstract System.IO.TextWriter GetFileWriter (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextWriter GetFileWriter(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFileWriter (filePath As String) As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::TextWriter ^ GetFileWriter(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="abstract member GetFileWriter : string -&gt; System.IO.TextWriter" Usage="workflowDesignerLoader.GetFileWriter filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="32b65-132">一个字符串，其中包含要写入的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="32b65-132">A string that contains the path to the file to write to.</span></span></param>
        <summary><span data-ttu-id="32b65-133">在派生类中重写时，将会获取 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 用于对指定文件进行写入的对象。</span><span class="sxs-lookup"><span data-stu-id="32b65-133">When overridden in a derived class, gets an object that the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> uses to write to the specified file.</span></span></summary>
        <returns><span data-ttu-id="32b65-134">用于写入文件的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="32b65-134">A <see cref="T:System.IO.TextWriter" /> to write to the file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32b65-135">下面的示例演示如何在调用 `TextWriter` 重载方法时创建和返回 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter%2A> 对象。</span><span class="sxs-lookup"><span data-stu-id="32b65-135">The following example shows how to create and return a `TextWriter` object when the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter%2A> overloaded method is called.</span></span>  
  
 [!code-csharp[WF_Samples#34](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#34)]
 [!code-vb[WF_Samples#34](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDebugMode">
      <MemberSignature Language="C#" Value="public virtual bool InDebugMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InDebugMode" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InDebugMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool InDebugMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InDebugMode : bool" Usage="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32b65-136">获取一个值，该值指示是否应在调试模式下加载工作流。</span><span class="sxs-lookup"><span data-stu-id="32b65-136">Gets a value that indicates whether the workflow should be loaded in debug mode.</span></span></summary>
        <value><span data-ttu-id="32b65-137">如果应在调试模式下加载工作流，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="32b65-137"><see langword="true" /> if the workflow should be loaded in debug mode; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="32b65-138">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="32b65-138">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-139">如果当前返回的属性，则以下方法将确定调试器是否已锁定工作流设计器 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode%2A> `WorkflowDesignerLoader` `true` 。</span><span class="sxs-lookup"><span data-stu-id="32b65-139">The following method determines whether the workflow designer is locked by the debugger if the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode%2A> property of the current `WorkflowDesignerLoader` returns `true`.</span></span>  
  
 [!code-csharp[WF_Samples#54](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#54)]
 [!code-vb[WF_Samples#54](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#54)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="workflowDesignerLoader.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32b65-140">使用设计器加载程序宿主所需的任何服务初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />。</span><span class="sxs-lookup"><span data-stu-id="32b65-140">Initializes the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> with any services required by the designer loader host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-141">下面的示例演示如何在派生类中重写 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize%2A> 方法以添加设计器所需的服务。</span><span class="sxs-lookup"><span data-stu-id="32b65-141">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize%2A> method in a derived class to add the services needed for the designer.</span></span> <span data-ttu-id="32b65-142">根据应用程序所需的服务支持级别，这些服务会有所不同。</span><span class="sxs-lookup"><span data-stu-id="32b65-142">The services can vary based on the level of service support required by your application.</span></span>  
  
 [!code-csharp[WF_Samples#31](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#31)]
 [!code-vb[WF_Samples#31](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDesignerLayout">
      <MemberSignature Language="C#" Value="protected void LoadDesignerLayout (System.Xml.XmlReader layoutReader, out System.Collections.IList layoutLoadErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void LoadDesignerLayout(class System.Xml.XmlReader layoutReader, [out] class System.Collections.IList&amp; layoutLoadErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub LoadDesignerLayout (layoutReader As XmlReader, ByRef layoutLoadErrors As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void LoadDesignerLayout(System::Xml::XmlReader ^ layoutReader, [Runtime::InteropServices::Out] System::Collections::IList ^ % layoutLoadErrors);" />
      <MemberSignature Language="F#" Value="member this.LoadDesignerLayout : System.Xml.XmlReader * IList -&gt; unit" Usage="workflowDesignerLoader.LoadDesignerLayout (layoutReader, layoutLoadErrors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutReader" Type="System.Xml.XmlReader" />
        <Parameter Name="layoutLoadErrors" Type="System.Collections.IList" RefType="out" />
      </Parameters>
      <Docs>
        <param name="layoutReader"><span data-ttu-id="32b65-143">一个为序列化布局创建的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="32b65-143">An <see cref="T:System.Xml.XmlReader" /> that is created for the serialized layout.</span></span></param>
        <param name="layoutLoadErrors"><span data-ttu-id="32b65-144">在反序列化期间发生的错误的列表。</span><span class="sxs-lookup"><span data-stu-id="32b65-144">List of errors that occurred during the deserialization.</span></span></param>
        <summary><span data-ttu-id="32b65-145">将序列化布局应用于当前设计器宿主中的根设计器。</span><span class="sxs-lookup"><span data-stu-id="32b65-145">Applies the serialized layout to the root designer in the current designer host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-146">本示例演示如何使用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A> 方法来加载特定工作流定义的布局。</span><span class="sxs-lookup"><span data-stu-id="32b65-146">This example shows how to load the layout for a specific workflow definition using the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A> method.</span></span> <span data-ttu-id="32b65-147">将使用设计器布局文件的文件名创建一个 <xref:System.Xml.XmlReader> 对象，该文件是用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> 创建的。</span><span class="sxs-lookup"><span data-stu-id="32b65-147">An <xref:System.Xml.XmlReader> object is created using the file name of a designer layout file that was created using <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A>.</span></span> <span data-ttu-id="32b65-148">当布局加载完成后，将向用户显示可能出现的任何错误。</span><span class="sxs-lookup"><span data-stu-id="32b65-148">When the layout has finished loading, any errors that might have occurred are displayed to the user.</span></span>  
  
 [!code-csharp[WF_Samples#39](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#39)]
 [!code-vb[WF_Samples#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDesignerLayoutFromResource">
      <MemberSignature Language="C#" Value="protected void LoadDesignerLayoutFromResource (Type type, string manifestResourceName, out System.Collections.IList errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void LoadDesignerLayoutFromResource(class System.Type type, string manifestResourceName, [out] class System.Collections.IList&amp; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub LoadDesignerLayoutFromResource (type As Type, manifestResourceName As String, ByRef errors As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void LoadDesignerLayoutFromResource(Type ^ type, System::String ^ manifestResourceName, [Runtime::InteropServices::Out] System::Collections::IList ^ % errors);" />
      <MemberSignature Language="F#" Value="member this.LoadDesignerLayoutFromResource : Type * string * IList -&gt; unit" Usage="workflowDesignerLoader.LoadDesignerLayoutFromResource (type, manifestResourceName, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="manifestResourceName" Type="System.String" />
        <Parameter Name="errors" Type="System.Collections.IList" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="32b65-149">与资源关联的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="32b65-149"><see cref="T:System.Type" /> that the resource is associated with.</span></span></param>
        <param name="manifestResourceName"><span data-ttu-id="32b65-150">资源的名称。</span><span class="sxs-lookup"><span data-stu-id="32b65-150">Name of the resource.</span></span></param>
        <param name="errors"><span data-ttu-id="32b65-151">调用 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /> 时遇到的错误。</span><span class="sxs-lookup"><span data-stu-id="32b65-151">Errors encountered during the call to <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" />.</span></span></param>
        <summary><span data-ttu-id="32b65-152">检索指定的资源，并调用 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /> 方法，从而将序列化布局应用于当前设计器宿主中的根设计器。</span><span class="sxs-lookup"><span data-stu-id="32b65-152">Retrieves the specified resource and calls the <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /> method that applies the serialized layout to the root designer in the current designer host.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected override void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="override this.OnEndLoad : bool * System.Collections.ICollection -&gt; unit" Usage="workflowDesignerLoader.OnEndLoad (successful, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><span data-ttu-id="32b65-153">如果加载操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="32b65-153"><see langword="true" /> if load operation is successful; otherwise, <see langword="false" />.</span></span></param>
        <param name="errors"><span data-ttu-id="32b65-154">包含加载错误。</span><span class="sxs-lookup"><span data-stu-id="32b65-154">Contains the load errors.</span></span></param>
        <summary><span data-ttu-id="32b65-155">在设计器加载完成时调用。</span><span class="sxs-lookup"><span data-stu-id="32b65-155">Called when loading of the designer is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-156">下面的示例演示如何重写 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad%2A> 方法以显示在加载工作流时可能出现的错误。</span><span class="sxs-lookup"><span data-stu-id="32b65-156">The following example demonstrates how to override the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad%2A> method to display errors that might have occurred during the loading of a workflow.</span></span>  
  
 [!code-csharp[WF_Samples#36](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#36)]
 [!code-vb[WF_Samples#36](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected override void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformFlush (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="override this.PerformFlush : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="workflowDesignerLoader.PerformFlush serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><span data-ttu-id="32b65-157">实现 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 接口的类，此接口管理设计时序列化。</span><span class="sxs-lookup"><span data-stu-id="32b65-157">Class that implements the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface, which manages design-time serialization.</span></span></param>
        <summary><span data-ttu-id="32b65-158">将缓存的更改写入设计器的加载位置。</span><span class="sxs-lookup"><span data-stu-id="32b65-158">Writes cached changes to the location that the designer was loaded from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-159">下面的示例演示如何重写 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A> 方法以使用 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 序列化工作流。</span><span class="sxs-lookup"><span data-stu-id="32b65-159">The following example demonstrates how to override the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A> method to serialize the workflow using the <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>.</span></span>  
  
 [!code-csharp[WF_Samples#35](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#35)]
 [!code-vb[WF_Samples#35](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected override void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformLoad (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="override this.PerformLoad : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="workflowDesignerLoader.PerformLoad serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><span data-ttu-id="32b65-160">实现 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 接口的类，此接口管理设计时序列化。</span><span class="sxs-lookup"><span data-stu-id="32b65-160">Class that implements the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface, which manages design-time serialization.</span></span></param>
        <summary><span data-ttu-id="32b65-161">从设计文档加载设计器。</span><span class="sxs-lookup"><span data-stu-id="32b65-161">Loads the designer from a design document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-162">下面的示例演示如何重写 `PerformLoad` 方法，以便反序列化工作流并在设计器中使用 helper 方法加载该工作流 `AddObjectGraphToDesignerHost` 。</span><span class="sxs-lookup"><span data-stu-id="32b65-162">The following example shows how to override the `PerformLoad` method to deserialize a workflow and load it in the designer using the `AddObjectGraphToDesignerHost` helper method.</span></span>  
  
 [!code-csharp[WF_Samples#37](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#37)]
 [!code-vb[WF_Samples#37](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActivityFromDesigner">
      <MemberSignature Language="C#" Value="public void RemoveActivityFromDesigner (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveActivityFromDesigner(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveActivityFromDesigner (activity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveActivityFromDesigner(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.RemoveActivityFromDesigner : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowDesignerLoader.RemoveActivityFromDesigner activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="32b65-163">要从设计器中移除的活动。</span><span class="sxs-lookup"><span data-stu-id="32b65-163">Activity to be removed from the designer.</span></span></param>
        <summary><span data-ttu-id="32b65-164">当将活动添加到父活动集合中后，从设计器宿主中移除该活动。</span><span class="sxs-lookup"><span data-stu-id="32b65-164">Removes an activity from the designer host after it has been added to the parent activities collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-165">下面的示例演示如何从 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 中移除活动。</span><span class="sxs-lookup"><span data-stu-id="32b65-165">The following example shows how to remove an activity from the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>.</span></span> <span data-ttu-id="32b65-166">在从 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 中移除工作流中的最后一个子活动前，首先从工作流的 <xref:System.Workflow.ComponentModel.CompositeActivity.Activities%2A> 集合中移除该子活动。</span><span class="sxs-lookup"><span data-stu-id="32b65-166">Before the last child activity in the workflow is removed from the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>, it is first removed from the workflow <xref:System.Workflow.ComponentModel.CompositeActivity.Activities%2A> collection.</span></span>  
  
 [!code-csharp[WF_Samples#40](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#40)]
 [!code-vb[WF_Samples#40](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#40)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDesignerLayout">
      <MemberSignature Language="C#" Value="protected void SaveDesignerLayout (System.Xml.XmlWriter layoutWriter, System.Workflow.ComponentModel.Design.ActivityDesigner rootDesigner, out System.Collections.IList layoutSaveErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SaveDesignerLayout(class System.Xml.XmlWriter layoutWriter, class System.Workflow.ComponentModel.Design.ActivityDesigner rootDesigner, [out] class System.Collections.IList&amp; layoutSaveErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SaveDesignerLayout (layoutWriter As XmlWriter, rootDesigner As ActivityDesigner, ByRef layoutSaveErrors As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SaveDesignerLayout(System::Xml::XmlWriter ^ layoutWriter, System::Workflow::ComponentModel::Design::ActivityDesigner ^ rootDesigner, [Runtime::InteropServices::Out] System::Collections::IList ^ % layoutSaveErrors);" />
      <MemberSignature Language="F#" Value="member this.SaveDesignerLayout : System.Xml.XmlWriter * System.Workflow.ComponentModel.Design.ActivityDesigner * IList -&gt; unit" Usage="workflowDesignerLoader.SaveDesignerLayout (layoutWriter, rootDesigner, layoutSaveErrors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="rootDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="layoutSaveErrors" Type="System.Collections.IList" RefType="out" />
      </Parameters>
      <Docs>
        <param name="layoutWriter"><span data-ttu-id="32b65-167">用于将布局序列化到其中的 <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="32b65-167"><see langword="XmlWriter" /> that is used to serialize the layout into.</span></span></param>
        <param name="rootDesigner"><span data-ttu-id="32b65-168">从中获取布局信息的根活动。</span><span class="sxs-lookup"><span data-stu-id="32b65-168">Root activity from which you get the layout information.</span></span></param>
        <param name="layoutSaveErrors"><span data-ttu-id="32b65-169">序列化时遇到的错误。</span><span class="sxs-lookup"><span data-stu-id="32b65-169">Errors encountered during serialization.</span></span></param>
        <summary><span data-ttu-id="32b65-170">序列化设计器布局。</span><span class="sxs-lookup"><span data-stu-id="32b65-170">Serializes the designer layout.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32b65-171">下面的示例演示如何使用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> 方法保存工作流的设计布局信息。</span><span class="sxs-lookup"><span data-stu-id="32b65-171">The following example demonstrates how to save the design layout information of a workflow using the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> method.</span></span> <span data-ttu-id="32b65-172"><xref:System.Xml.XmlWriter>创建对象后，将检索工作流的的，并将其 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> `RootComponent` 传递给 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="32b65-172">After the <xref:System.Xml.XmlWriter> object is created, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> for the `RootComponent` of the workflow is retrieved and passed to the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> method.</span></span> <span data-ttu-id="32b65-173">若要加载使用此方法生成的布局文件，请参见 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A>。</span><span class="sxs-lookup"><span data-stu-id="32b65-173">To load the layout file that is generated by this method, see <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A>.</span></span>  
  
 [!code-csharp[WF_Samples#38](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#38)]
 [!code-vb[WF_Samples#38](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkTypeDescriptionProvider">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.TypeDescriptionProvider TargetFrameworkTypeDescriptionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeDescriptionProvider TargetFrameworkTypeDescriptionProvider" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TargetFrameworkTypeDescriptionProvider As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::TypeDescriptionProvider ^ TargetFrameworkTypeDescriptionProvider { System::ComponentModel::TypeDescriptionProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetFrameworkTypeDescriptionProvider : System.ComponentModel.TypeDescriptionProvider" Usage="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32b65-174">获取 <see cref="T:System.ComponentModel.TypeDescriptor" /> 目标 .NET Framework 的元数据。</span><span class="sxs-lookup"><span data-stu-id="32b65-174">Gets the <see cref="T:System.ComponentModel.TypeDescriptor" /> metadata of the target .NET Framework.</span></span></summary>
        <value><span data-ttu-id="32b65-175"><see cref="T:System.ComponentModel.TypeDescriptor" />目标 .NET Framework 的元数据。</span><span class="sxs-lookup"><span data-stu-id="32b65-175">The <see cref="T:System.ComponentModel.TypeDescriptor" /> metadata of the target .NET Framework.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
