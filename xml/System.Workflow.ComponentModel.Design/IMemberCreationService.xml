<Type Name="IMemberCreationService" FullName="System.Workflow.ComponentModel.Design.IMemberCreationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a54f2288413d6b972e7b3e4f052a2ec95c4ad2f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89898475" /></Metadata><TypeSignature Language="C#" Value="public interface IMemberCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMemberCreationService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.IMemberCreationService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMemberCreationService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMemberCreationService" />
  <TypeSignature Language="F#" Value="type IMemberCreationService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c285f-101">定义用于在设计时动态创建、更新和移除某一类型的代码元素的方法。</span><span class="sxs-lookup"><span data-stu-id="c285f-101">Defines methods to dynamically create, update and remove code elements for a type at design time.</span></span> <span data-ttu-id="c285f-102">还提供了用于在设计时显示代码的方法。</span><span class="sxs-lookup"><span data-stu-id="c285f-102">Methods are also provided that allow you to display code at design time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public void CreateEvent (string className, string eventName, Type eventType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateEvent(string className, string eventName, class System.Type eventType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateEvent(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateEvent (className As String, eventName As String, eventType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateEvent(System::String ^ className, System::String ^ eventName, Type ^ eventType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty);" />
      <MemberSignature Language="F#" Value="abstract member CreateEvent : string * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool -&gt; unit" Usage="iMemberCreationService.CreateEvent (className, eventName, eventType, attributes, emitDependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c285f-103">一个字符串，其中包含事件所要添加到的类名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-103">A string that contains the class name to add the event to.</span></span></param>
        <param name="eventName"><span data-ttu-id="c285f-104">定义事件的名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="c285f-104">A string that defines the name of the event.</span></span></param>
        <param name="eventType"><span data-ttu-id="c285f-105">分配给事件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-105">The <see cref="T:System.Type" /> assigned to the event.</span></span></param>
        <param name="attributes"><span data-ttu-id="c285f-106">一个 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 数组，其中包含有关要分配给事件的所有属性的信息。</span><span class="sxs-lookup"><span data-stu-id="c285f-106">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the event.</span></span></param>
        <param name="emitDependencyProperty"><span data-ttu-id="c285f-107">为 <see langword="true" /> 则发出与事件关联的任何依赖项属性；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-107"><see langword="true" /> to emit any dependency properties associated with the event; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c285f-108">使用指定的事件名称、事件类型和属性在指定类上创建一个事件。</span><span class="sxs-lookup"><span data-stu-id="c285f-108">Creates an event on the specified class by using the specified event name, event type and attributes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="public void CreateField (string className, string fieldName, Type fieldType, Type[] genericParameterTypes, System.CodeDom.MemberAttributes attributes, System.CodeDom.CodeSnippetExpression initializationExpression, bool overwriteExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateField(string className, string fieldName, class System.Type fieldType, class System.Type[] genericParameterTypes, valuetype System.CodeDom.MemberAttributes attributes, class System.CodeDom.CodeSnippetExpression initializationExpression, bool overwriteExisting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateField(System.String,System.String,System.Type,System.Type[],System.CodeDom.MemberAttributes,System.CodeDom.CodeSnippetExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateField (className As String, fieldName As String, fieldType As Type, genericParameterTypes As Type(), attributes As MemberAttributes, initializationExpression As CodeSnippetExpression, overwriteExisting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateField(System::String ^ className, System::String ^ fieldName, Type ^ fieldType, cli::array &lt;Type ^&gt; ^ genericParameterTypes, System::CodeDom::MemberAttributes attributes, System::CodeDom::CodeSnippetExpression ^ initializationExpression, bool overwriteExisting);" />
      <MemberSignature Language="F#" Value="abstract member CreateField : string * string * Type * Type[] * System.CodeDom.MemberAttributes * System.CodeDom.CodeSnippetExpression * bool -&gt; unit" Usage="iMemberCreationService.CreateField (className, fieldName, fieldType, genericParameterTypes, attributes, initializationExpression, overwriteExisting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="fieldName" Type="System.String" />
        <Parameter Name="fieldType" Type="System.Type" />
        <Parameter Name="genericParameterTypes" Type="System.Type[]" />
        <Parameter Name="attributes" Type="System.CodeDom.MemberAttributes" />
        <Parameter Name="initializationExpression" Type="System.CodeDom.CodeSnippetExpression" />
        <Parameter Name="overwriteExisting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c285f-109">一个字符串，用于定义类的名称以添加字段。</span><span class="sxs-lookup"><span data-stu-id="c285f-109">A string that defines the name of the class to add the field.</span></span></param>
        <param name="fieldName"><span data-ttu-id="c285f-110">一个字符串，用于定义字段的名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-110">A string that defines the name of the field.</span></span></param>
        <param name="fieldType"><span data-ttu-id="c285f-111">新字段的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-111">The <see cref="T:System.Type" /> of the new field.</span></span></param>
        <param name="genericParameterTypes"><span data-ttu-id="c285f-112">与字段关联的任何参数的 <see cref="T:System.Type" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="c285f-112">A <see cref="T:System.Type" /> array of any parameters associated with the field.</span></span></param>
        <param name="attributes"><span data-ttu-id="c285f-113">一个 <see cref="T:System.CodeDom.MemberAttributes" />，用于定义字段的成员属性标识符。</span><span class="sxs-lookup"><span data-stu-id="c285f-113">A <see cref="T:System.CodeDom.MemberAttributes" /> that defines the member attribute identifier for the field.</span></span></param>
        <param name="initializationExpression"><span data-ttu-id="c285f-114">一个 <see cref="T:System.CodeDom.CodeSnippetExpression" />，其中包含字段的文本表达式。</span><span class="sxs-lookup"><span data-stu-id="c285f-114">A <see cref="T:System.CodeDom.CodeSnippetExpression" /> that contains the literal expression of the field.</span></span></param>
        <param name="overwriteExisting"><span data-ttu-id="c285f-115">为 <see langword="true" /> 则在创建新字段时删除 <paramref name="className" /> 上的任何现有字段；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-115"><see langword="true" /> to delete any existing fields on <paramref name="className" /> when creating the new field; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c285f-116">在指定类上使用指定的字段名、字段类型、参数类型、属性和文本初始化表达式创建一个字段。</span><span class="sxs-lookup"><span data-stu-id="c285f-116">Creates a field on the specified class by using the specified field name, field type, parameter types, attributes and literal initialization expression.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public void CreateProperty (string className, string propertyName, Type propertyType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, Type ownerType, bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateProperty(string className, string propertyName, class System.Type propertyType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, class System.Type ownerType, bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateProperty(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean,System.Boolean,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateProperty (className As String, propertyName As String, propertyType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean, isAttached As Boolean, ownerType As Type, isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateProperty(System::String ^ className, System::String ^ propertyName, Type ^ propertyType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, Type ^ ownerType, bool isReadOnly);" />
      <MemberSignature Language="F#" Value="abstract member CreateProperty : string * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool * bool * Type * bool -&gt; unit" Usage="iMemberCreationService.CreateProperty (className, propertyName, propertyType, attributes, emitDependencyProperty, isMetaProperty, isAttached, ownerType, isReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
        <Parameter Name="isAttached" Type="System.Boolean" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c285f-117">一个字符串，用于定义类的名称以添加字段。</span><span class="sxs-lookup"><span data-stu-id="c285f-117">A string that defines the name of the class to add the field.</span></span></param>
        <param name="propertyName"><span data-ttu-id="c285f-118">一个字符串，用于定义字段的名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-118">A string that defines the name of the field.</span></span></param>
        <param name="propertyType"><span data-ttu-id="c285f-119">新属性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-119">The <see cref="T:System.Type" /> of the new property.</span></span></param>
        <param name="attributes"><span data-ttu-id="c285f-120">一个 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 数组，其中包含有关要分配给属性 (property) 的所有属性 (attribute) 的信息。</span><span class="sxs-lookup"><span data-stu-id="c285f-120">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the property.</span></span></param>
        <param name="emitDependencyProperty"><span data-ttu-id="c285f-121">为 <see langword="true" /> 则发出任何与属性关联的依赖项属性；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-121"><see langword="true" /> to emit any dependency properties associated with the property; otherwise, <see langword="false" />.</span></span></param>
        <param name="isMetaProperty"><span data-ttu-id="c285f-122">为 <see langword="true" /> 则作为元属性来创建属性；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-122"><see langword="true" /> to create the property as a meta property; otherwise, <see langword="false" />.</span></span></param>
        <param name="isAttached"><span data-ttu-id="c285f-123">为 <see langword="true" /> 则指示发出的依赖项属性的 <see cref="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" /> 属性设置为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-123"><see langword="true" /> to indicate that the emitted dependency property has its <see cref="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" /> property set to <see langword="true" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="ownerType"><span data-ttu-id="c285f-124">声明依赖项属性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-124">The <see cref="T:System.Type" /> that is declaring the dependency property.</span></span></param>
        <param name="isReadOnly"><span data-ttu-id="c285f-125">为 <see langword="true" /> 则创建的属性作为只读属性；为 <see langword="false" /> 则创建的属性作为读写属性。</span><span class="sxs-lookup"><span data-stu-id="c285f-125"><see langword="true" /> to create the property as a read-only property; <see langword="false" /> to create the property as a read-write property.</span></span></param>
        <summary><span data-ttu-id="c285f-126">在指定类上使用指定的属性 (property) 名、属性 (property) 类型和属性 (attribute) 创建一个属性 (property)。</span><span class="sxs-lookup"><span data-stu-id="c285f-126">Creates a property on the specified class by using the specified property name, property type and attributes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEvent">
      <MemberSignature Language="C#" Value="public void RemoveEvent (string className, string eventName, Type eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEvent(string className, string eventName, class System.Type eventType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveEvent(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEvent (className As String, eventName As String, eventType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEvent(System::String ^ className, System::String ^ eventName, Type ^ eventType);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEvent : string * string * Type -&gt; unit" Usage="iMemberCreationService.RemoveEvent (className, eventName, eventType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c285f-127">一个字符串，其中包含要从中移除事件的类的名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-127">A string that contains the name of the class from which to remove the event.</span></span></param>
        <param name="eventName"><span data-ttu-id="c285f-128">一个字符串，其中包含要移除的事件的名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-128">A string that contains the name of the event to remove.</span></span></param>
        <param name="eventType"><span data-ttu-id="c285f-129">与要移除的事件关联的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-129">The <see cref="T:System.Type" /> associated with the event to remove.</span></span></param>
        <summary><span data-ttu-id="c285f-130">从指定类中移除指定事件。</span><span class="sxs-lookup"><span data-stu-id="c285f-130">Removes the specified event from the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public void RemoveProperty (string className, string propertyName, Type propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveProperty(string className, string propertyName, class System.Type propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveProperty(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveProperty (className As String, propertyName As String, propertyType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveProperty(System::String ^ className, System::String ^ propertyName, Type ^ propertyType);" />
      <MemberSignature Language="F#" Value="abstract member RemoveProperty : string * string * Type -&gt; unit" Usage="iMemberCreationService.RemoveProperty (className, propertyName, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c285f-131">一个字符串，其中包含要从中移除属性的类的名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-131">A string that contains the name of the class from which to remove the property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="c285f-132">一个字符串，其中包含要移除的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-132">A string that contains the name of the property to remove.</span></span></param>
        <param name="propertyType"><span data-ttu-id="c285f-133">要移除的属性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-133">The <see cref="T:System.Type" /> of the property to remove.</span></span></param>
        <summary><span data-ttu-id="c285f-134">从指定类中移除指定属性。</span><span class="sxs-lookup"><span data-stu-id="c285f-134">Removes the specified property from the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowCode">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c285f-135">显示工作流设计图面上的新成员的代码。</span><span class="sxs-lookup"><span data-stu-id="c285f-135">Displays code for the new member on a workflow design surface.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public void ShowCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowCode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowCode();" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : unit -&gt; unit" Usage="iMemberCreationService.ShowCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c285f-136">显示工作流设计图面上的新成员的代码。</span><span class="sxs-lookup"><span data-stu-id="c285f-136">Displays code for the new member on a workflow design surface.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public void ShowCode (System.Workflow.ComponentModel.Activity activity, string methodName, Type delegateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowCode(class System.Workflow.ComponentModel.Activity activity, string methodName, class System.Type delegateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode(System.Workflow.ComponentModel.Activity,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowCode (activity As Activity, methodName As String, delegateType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowCode(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ methodName, Type ^ delegateType);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : System.Workflow.ComponentModel.Activity * string * Type -&gt; unit" Usage="iMemberCreationService.ShowCode (activity, methodName, delegateType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="delegateType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="c285f-137">与要显示的代码关联的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-137">The <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with the code to display.</span></span></param>
        <param name="methodName"><span data-ttu-id="c285f-138">要显示的方法的名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-138">The name of the method to display.</span></span></param>
        <param name="delegateType"><span data-ttu-id="c285f-139">与要显示的方法关联的委托的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-139">The <see cref="T:System.Type" /> of the delegate associated with the method to display.</span></span></param>
        <summary><span data-ttu-id="c285f-140">使用指定的 <see cref="T:System.Workflow.ComponentModel.Activity" />、指定的方法和指定的委托类型显示工作流设计图面上的新成员的代码。</span><span class="sxs-lookup"><span data-stu-id="c285f-140">Displays code for the new member on a workflow design surface by using the specified <see cref="T:System.Workflow.ComponentModel.Activity" />, the specified method and the specified delegate type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBaseType">
      <MemberSignature Language="C#" Value="public void UpdateBaseType (string className, Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateBaseType(string className, class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateBaseType(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateBaseType (className As String, baseType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateBaseType(System::String ^ className, Type ^ baseType);" />
      <MemberSignature Language="F#" Value="abstract member UpdateBaseType : string * Type -&gt; unit" Usage="iMemberCreationService.UpdateBaseType (className, baseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c285f-141">一个字符串，其中包含要用新的基类型更新的类的名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-141">A string that contains the name of the class to update with a new base type.</span></span></param>
        <param name="baseType"><span data-ttu-id="c285f-142">将作为类的新基类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-142">The <see cref="T:System.Type" /> to be the new base type for the class.</span></span></param>
        <summary><span data-ttu-id="c285f-143">更新与指定类关联的基类型。</span><span class="sxs-lookup"><span data-stu-id="c285f-143">Updates the base type to associate with the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateEvent">
      <MemberSignature Language="C#" Value="public void UpdateEvent (string className, string oldEventName, Type oldEventType, string newEventName, Type newEventType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateEvent(string className, string oldEventName, class System.Type oldEventType, string newEventName, class System.Type newEventType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateEvent(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateEvent (className As String, oldEventName As String, oldEventType As Type, newEventName As String, newEventType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateEvent(System::String ^ className, System::String ^ oldEventName, Type ^ oldEventType, System::String ^ newEventName, Type ^ newEventType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="F#" Value="abstract member UpdateEvent : string * string * Type * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool -&gt; unit" Usage="iMemberCreationService.UpdateEvent (className, oldEventName, oldEventType, newEventName, newEventType, attributes, emitDependencyProperty, isMetaProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="oldEventName" Type="System.String" />
        <Parameter Name="oldEventType" Type="System.Type" />
        <Parameter Name="newEventName" Type="System.String" />
        <Parameter Name="newEventType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c285f-144">一个包含类名称的字符串，该类中包含要更新的事件。</span><span class="sxs-lookup"><span data-stu-id="c285f-144">A string that contains the name of the class that contains the event to update.</span></span></param>
        <param name="oldEventName"><span data-ttu-id="c285f-145">一个字符串，其中包含现有事件的名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-145">A string that contains the name of the existing event.</span></span></param>
        <param name="oldEventType"><span data-ttu-id="c285f-146">与现有事件关联的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-146">The <see cref="T:System.Type" /> associated with the existing event.</span></span></param>
        <param name="newEventName"><span data-ttu-id="c285f-147">一个字符串，其中包含已更新的事件的新名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-147">A string that contains the new name of the updated event.</span></span></param>
        <param name="newEventType"><span data-ttu-id="c285f-148">要与已更新的事件关联的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-148">The <see cref="T:System.Type" /> to associate with the updated event.</span></span></param>
        <param name="attributes"><span data-ttu-id="c285f-149">一个 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 数组，其中包含有关要分配给已更新的事件的所有属性的信息。</span><span class="sxs-lookup"><span data-stu-id="c285f-149">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the updated event.</span></span></param>
        <param name="emitDependencyProperty"><span data-ttu-id="c285f-150">为 <see langword="true" /> 则更新事件以发出依赖项属性；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-150"><see langword="true" /> to update the event to emit a dependency property; otherwise, <see langword="false" />.</span></span></param>
        <param name="isMetaProperty"><span data-ttu-id="c285f-151">为 <see langword="true" /> 则将事件设置为元属性；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-151"><see langword="true" /> to set the event as a meta property; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c285f-152">将新名称和类型设置为指定类上的现有事件。</span><span class="sxs-lookup"><span data-stu-id="c285f-152">Sets a new name and type to an existing event on the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateProperty">
      <MemberSignature Language="C#" Value="public void UpdateProperty (string className, string oldPropertyName, Type oldPropertyType, string newPropertyName, Type newPropertyType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateProperty(string className, string oldPropertyName, class System.Type oldPropertyType, string newPropertyName, class System.Type newPropertyType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateProperty(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateProperty (className As String, oldPropertyName As String, oldPropertyType As Type, newPropertyName As String, newPropertyType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateProperty(System::String ^ className, System::String ^ oldPropertyName, Type ^ oldPropertyType, System::String ^ newPropertyName, Type ^ newPropertyType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="F#" Value="abstract member UpdateProperty : string * string * Type * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool -&gt; unit" Usage="iMemberCreationService.UpdateProperty (className, oldPropertyName, oldPropertyType, newPropertyName, newPropertyType, attributes, emitDependencyProperty, isMetaProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="oldPropertyName" Type="System.String" />
        <Parameter Name="oldPropertyType" Type="System.Type" />
        <Parameter Name="newPropertyName" Type="System.String" />
        <Parameter Name="newPropertyType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c285f-153">一个字符串，其中包含要更新的属性所在的类的名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-153">A string that contains the name of the class on which the property to update resides.</span></span></param>
        <param name="oldPropertyName"><span data-ttu-id="c285f-154">一个字符串，其中包含属性的现有名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-154">A string that contains the existing name of the property.</span></span></param>
        <param name="oldPropertyType"><span data-ttu-id="c285f-155">与现有属性关联的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-155">The <see cref="T:System.Type" /> associated with the existing property.</span></span></param>
        <param name="newPropertyName"><span data-ttu-id="c285f-156">一个字符串，其中包含属性的新名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-156">A string that contains the new name of the property.</span></span></param>
        <param name="newPropertyType"><span data-ttu-id="c285f-157">要与属性的更新版本关联的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-157">The <see cref="T:System.Type" /> to associate with the updated version of the property.</span></span></param>
        <param name="attributes"><span data-ttu-id="c285f-158">一个 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 数组，其中包含有关要分配给已更新的属性 (property) 的所有属性 (attribute) 的信息。</span><span class="sxs-lookup"><span data-stu-id="c285f-158">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the updated property.</span></span></param>
        <param name="emitDependencyProperty"><span data-ttu-id="c285f-159">为 <see langword="true" /> 则更新属性以发出依赖项属性；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-159"><see langword="true" /> to update the property emit a dependency property; otherwise, <see langword="false" />.</span></span></param>
        <param name="isMetaProperty"><span data-ttu-id="c285f-160">为 <see langword="true" /> 则将属性设置为元属性；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c285f-160"><see langword="true" /> to set the property as a meta property; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c285f-161">将新名称和类型设置为指定类上的属性。</span><span class="sxs-lookup"><span data-stu-id="c285f-161">Sets a new name and type to a property on the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTypeName">
      <MemberSignature Language="C#" Value="public void UpdateTypeName (string oldClassName, string newClassName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTypeName(string oldClassName, string newClassName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateTypeName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateTypeName (oldClassName As String, newClassName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateTypeName(System::String ^ oldClassName, System::String ^ newClassName);" />
      <MemberSignature Language="F#" Value="abstract member UpdateTypeName : string * string -&gt; unit" Usage="iMemberCreationService.UpdateTypeName (oldClassName, newClassName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldClassName" Type="System.String" />
        <Parameter Name="newClassName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldClassName"><span data-ttu-id="c285f-162">一个字符串，其中包含类的现有名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-162">A string that contains the existing name of the class.</span></span></param>
        <param name="newClassName"><span data-ttu-id="c285f-163">一个字符串，其中包含要分配给类的新名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-163">A string that contains the new name to assign to the class.</span></span></param>
        <summary><span data-ttu-id="c285f-164">更新指定类的名称。</span><span class="sxs-lookup"><span data-stu-id="c285f-164">Updates the name of the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
