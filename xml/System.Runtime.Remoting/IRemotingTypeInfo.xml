<Type Name="IRemotingTypeInfo" FullName="System.Runtime.Remoting.IRemotingTypeInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a072dff6252190001eec765ed9ed62faa112d398" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86756031" /></Metadata><TypeSignature Language="C#" Value="public interface IRemotingTypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemotingTypeInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.IRemotingTypeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemotingTypeInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemotingTypeInfo" />
  <TypeSignature Language="F#" Value="type IRemotingTypeInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c9744-101">提供对象的类型信息。</span><span class="sxs-lookup"><span data-stu-id="c9744-101">Provides type information for an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9744-102">使用此接口可提供与对象一起传送的自定义类型信息 <xref:System.Runtime.Remoting.ObjRef> 。</span><span class="sxs-lookup"><span data-stu-id="c9744-102">Use this interface to provide custom type information that is carried along with the <xref:System.Runtime.Remoting.ObjRef> objects.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Remoting.ObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting.ObjRef/CPP/client.cpp#1)]
 [!code-csharp[Remoting.ObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting.ObjRef/CS/client.cs#1)]
 [!code-vb[Remoting.ObjRef#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Remoting.ObjRef/VB/client.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanCastTo">
      <MemberSignature Language="C#" Value="public bool CanCastTo (Type fromType, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCastTo(class System.Type fromType, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.IRemotingTypeInfo.CanCastTo(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCastTo (fromType As Type, o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCastTo(Type ^ fromType, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member CanCastTo : Type * obj -&gt; bool" Usage="iRemotingTypeInfo.CanCastTo (fromType, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromType" Type="System.Type" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fromType"><span data-ttu-id="c9744-103">要强制转换到的类型。</span><span class="sxs-lookup"><span data-stu-id="c9744-103">The type to cast to.</span></span></param>
        <param name="o"><span data-ttu-id="c9744-104">要为其检查强制转换的对象。</span><span class="sxs-lookup"><span data-stu-id="c9744-104">The object for which to check casting.</span></span></param>
        <summary><span data-ttu-id="c9744-105">检查是否可以将表示指定对象类型的代理强制转换为由 <see cref="T:System.Runtime.Remoting.IRemotingTypeInfo" /> 接口表示的类型。</span><span class="sxs-lookup"><span data-stu-id="c9744-105">Checks whether the proxy that represents the specified object type can be cast to the type represented by the <see cref="T:System.Runtime.Remoting.IRemotingTypeInfo" /> interface.</span></span></summary>
        <returns><span data-ttu-id="c9744-106">如果强制转换将成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9744-106"><see langword="true" /> if cast will succeed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9744-107">当尝试强制转换从生成的代理时，将调用当前方法 <xref:System.Runtime.Remoting.ObjRef> 。</span><span class="sxs-lookup"><span data-stu-id="c9744-107">The current method is called when an attempt is made to cast a proxy generated from a <xref:System.Runtime.Remoting.ObjRef>.</span></span> <span data-ttu-id="c9744-108">此方法将考虑中携带的类型信息 <xref:System.Runtime.Remoting.ObjRef> 。</span><span class="sxs-lookup"><span data-stu-id="c9744-108">This method takes into account the type information carried in the <xref:System.Runtime.Remoting.ObjRef>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c9744-109">直接调用方通过引用接口进行调用，且没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="c9744-109">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.IRemotingTypeInfo.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Runtime.Remoting.IRemotingTypeInfo.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9744-110">获取或设置 <see cref="T:System.Runtime.Remoting.ObjRef" /> 中的服务器对象的完全限定类型名。</span><span class="sxs-lookup"><span data-stu-id="c9744-110">Gets or sets the fully qualified type name of the server object in a <see cref="T:System.Runtime.Remoting.ObjRef" />.</span></span></summary>
        <value><span data-ttu-id="c9744-111"><see cref="T:System.Runtime.Remoting.ObjRef" /> 中的服务器对象的完全限定类型名。</span><span class="sxs-lookup"><span data-stu-id="c9744-111">The fully qualified type name of the server object in a <see cref="T:System.Runtime.Remoting.ObjRef" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[Remoting.ObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting.ObjRef/CPP/client.cpp#1)]
 [!code-csharp[Remoting.ObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting.ObjRef/CS/client.cs#1)]
 [!code-vb[Remoting.ObjRef#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Remoting.ObjRef/VB/client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c9744-112">直接调用方通过引用接口进行调用，且没有基础结构权限。</span><span class="sxs-lookup"><span data-stu-id="c9744-112">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
