<Namespace Name="System.Runtime.Remoting.Contexts">
  <Metadata><Meta Name="ms.openlocfilehash" Value="273871a4f5fbfad3eeca96a9131b841e0cbe128c" /><Meta Name="ms.sourcegitcommit" Value="02dd069b9696eb4eee675b6541f86b2602076448" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/20/2020" /><Meta Name="ms.locfileid" Value="92233576" /></Metadata><Docs>
    <summary><span data-ttu-id="dc030-101">包含定义所有对象所驻留的上下文的对象。</span><span class="sxs-lookup"><span data-stu-id="dc030-101">Contains objects that define the contexts all objects reside within.</span></span> <span data-ttu-id="dc030-102">上下文是一个有序的属性序列，用于定义其中的对象所处的环境。</span><span class="sxs-lookup"><span data-stu-id="dc030-102">A context is an ordered sequence of properties that defines an environment for the objects within it.</span></span> <span data-ttu-id="dc030-103">上下文是在对象的激活过程中创建的，这些对象被配置为要求某些自动服务，如同步、事务、实时 (JIT) 激活、安全性等。</span><span class="sxs-lookup"><span data-stu-id="dc030-103">Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time (JIT) activation, security, and so on.</span></span> <span data-ttu-id="dc030-104">多个对象可以存留在一个上下文内。</span><span class="sxs-lookup"><span data-stu-id="dc030-104">Multiple objects can live inside a context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="dc030-105">每当创建新对象时，the.NET Framework 将查找兼容的上下文或为对象创建新的上下文。</span><span class="sxs-lookup"><span data-stu-id="dc030-105">Whenever a new object is created, the.NET Framework finds a compatible context or creates a new context for the object.</span></span> <span data-ttu-id="dc030-106">将对象放置在上下文中后，它将一直保留在其中。</span><span class="sxs-lookup"><span data-stu-id="dc030-106">After an object is placed in a context, it stays in it for life.</span></span> <span data-ttu-id="dc030-107">可以绑定到上下文的类称为上下文绑定类。</span><span class="sxs-lookup"><span data-stu-id="dc030-107">Classes that can be bound to a context are called context-bound classes.</span></span> <span data-ttu-id="dc030-108">从另一个上下文访问时，将直接使用代理引用这些上下文绑定类。</span><span class="sxs-lookup"><span data-stu-id="dc030-108">When accessed from another context, these context-bound classes are referenced directly using a proxy.</span></span> <span data-ttu-id="dc030-109">从一个上下文中的对象到另一个上下文中对象的调用将通过上下文代理，并受组合上下文属性实现的策略的影响。</span><span class="sxs-lookup"><span data-stu-id="dc030-109">A call from an object in one context to an object in another context will go through a context proxy and be affected by the policy implemented by the combined context properties.</span></span>

 ]]></format>
    </remarks>
  </Docs>
</Namespace>
