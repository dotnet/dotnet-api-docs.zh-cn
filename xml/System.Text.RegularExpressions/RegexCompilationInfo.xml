<Type Name="RegexCompilationInfo" FullName="System.Text.RegularExpressions.RegexCompilationInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ffcefa964237bb9d002f06c8458275334b82a934" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83958401" /></Metadata><TypeSignature Language="C#" Value="public class RegexCompilationInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegexCompilationInfo extends System.Object" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexCompilationInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RegexCompilationInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexCompilationInfo" />
  <TypeSignature Language="F#" Value="type RegexCompilationInfo = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RegexCompilationInfo extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3ebed-101">提供有关使用正则表达式将正则表达式编译为独立程序集的信息。</span><span class="sxs-lookup"><span data-stu-id="3ebed-101">Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ebed-102">向 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 方法传递 <xref:System.Text.RegularExpressions.RegexCompilationInfo> 对象的数组，以提供有关要包含在程序集中的每个正则表达式的信息。</span><span class="sxs-lookup"><span data-stu-id="3ebed-102">An array of <xref:System.Text.RegularExpressions.RegexCompilationInfo> objects is passed to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method to provide information about each regular expression to be included in the assembly.</span></span> <span data-ttu-id="3ebed-103">程序集中包含的每个已编译的正则表达式均表示为从 <xref:System.Text.RegularExpressions.Regex>派生的类。</span><span class="sxs-lookup"><span data-stu-id="3ebed-103">Each compiled regular expression that is included in the assembly is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="3ebed-104"><xref:System.Text.RegularExpressions.RegexCompilationInfo> 类型的属性定义正则表达式的类名称、其完全限定名称（即其命名空间及其类型名称）、其正则表达式模式、任何其他选项（例如正则表达式是否不区分大小写）以及指定正则表达式引擎应在多长时间内搜索匹配项的超时间隔。</span><span class="sxs-lookup"><span data-stu-id="3ebed-104">The properties of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.</span></span>  
  
 <span data-ttu-id="3ebed-105">可以通过调用其重载类构造函数来实例化 <xref:System.Text.RegularExpressions.RegexCompilationInfo> 的对象。</span><span class="sxs-lookup"><span data-stu-id="3ebed-105">You can instantiate a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object by calling its overloaded class constructor.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />
    <related type="Article" href="/dotnet/standard/base-types/compilation-and-reuse-in-regular-expressions"><span data-ttu-id="3ebed-106">编译和重复使用</span><span class="sxs-lookup"><span data-stu-id="3ebed-106">Compilation and Reuse</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ebed-107">初始化 <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3ebed-107">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class.</span></span></summary>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="3ebed-108">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="3ebed-108">Regular Expression Language Elements</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexCompilationInfo : string * System.Text.RegularExpressions.RegexOptions * string * string * bool -&gt; System.Text.RegularExpressions.RegexCompilationInfo" Usage="new System.Text.RegularExpressions.RegexCompilationInfo (pattern, options, name, fullnamespace, ispublic)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="3ebed-109">要编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-109">The regular expression to compile.</span></span></param>
        <param name="options"><span data-ttu-id="3ebed-110">编译正则表达式时使用的正则表达式选项。</span><span class="sxs-lookup"><span data-stu-id="3ebed-110">The regular expression options to use when compiling the regular expression.</span></span></param>
        <param name="name"><span data-ttu-id="3ebed-111">表示已编译的正则表达式的类型名称。</span><span class="sxs-lookup"><span data-stu-id="3ebed-111">The name of the type that represents the compiled regular expression.</span></span></param>
        <param name="fullnamespace"><span data-ttu-id="3ebed-112">新类型所属的命名空间。</span><span class="sxs-lookup"><span data-stu-id="3ebed-112">The namespace to which the new type belongs.</span></span></param>
        <param name="ispublic"><span data-ttu-id="3ebed-113">若要使所编译的正则表达式对公共可见，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-113"><see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3ebed-114">初始化 <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 类的新实例，该类包含有关要在程序集内包括的正则表达式的信息。</span><span class="sxs-lookup"><span data-stu-id="3ebed-114">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression to be included in an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ebed-115"><xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 构造函数的每个参数都直接对应于 <xref:System.Text.RegularExpressions.RegexCompilationInfo> 类的属性。</span><span class="sxs-lookup"><span data-stu-id="3ebed-115">Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class.</span></span> <span data-ttu-id="3ebed-116">由于所有属性都是可读/写的，因此也可以直接分配其值。</span><span class="sxs-lookup"><span data-stu-id="3ebed-116">Because all properties are read/write, their values can also be assigned directly.</span></span>  
  
 <span data-ttu-id="3ebed-117"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 方法将生成一个包含已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="3ebed-117">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="3ebed-118">因此，不应将 <xref:System.Text.RegularExpressions.RegexOptions.Compiled> 指定为 `options`的值之一。</span><span class="sxs-lookup"><span data-stu-id="3ebed-118">Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of `options`.</span></span>  
  
 <span data-ttu-id="3ebed-119">如果 `true``ispublic`，则会为已编译的正则表达式类提供公共可访问性。</span><span class="sxs-lookup"><span data-stu-id="3ebed-119">If `ispublic` is `true`, the compiled regular expression class is given public accessibility.</span></span> <span data-ttu-id="3ebed-120">也就是说，可以通过在任何程序集中执行的代码对其进行实例化。</span><span class="sxs-lookup"><span data-stu-id="3ebed-120">That is, it can be instantiated from code that executes in any assembly.</span></span> <span data-ttu-id="3ebed-121">如果 `false``ispublic`，则会为已编译的正则表达式类提供C#`internal` （在中）或 `Friend` （Visual Basic）可访问性。</span><span class="sxs-lookup"><span data-stu-id="3ebed-121">If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility.</span></span> <span data-ttu-id="3ebed-122">也就是说，它只能从与正则表达式类相同的程序集中执行的代码实例化。</span><span class="sxs-lookup"><span data-stu-id="3ebed-122">That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ebed-123">下面的示例在两个步骤中创建并使用已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-123">The following example creates and uses a compiled regular expression in two steps.</span></span>  
  
 <span data-ttu-id="3ebed-124">在第一步中，编译并执行下面的代码示例。</span><span class="sxs-lookup"><span data-stu-id="3ebed-124">In the first step, compile and execute the following code example.</span></span> <span data-ttu-id="3ebed-125">代码示例中的 <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> 构造函数定义已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-125">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> constructor in the code example defines a compiled regular expression.</span></span> <span data-ttu-id="3ebed-126">执行代码的结果是名为 FishRegex 的程序集，其中包含名为 `FishRegex`的已编译正则表达式类型。</span><span class="sxs-lookup"><span data-stu-id="3ebed-126">The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.</span></span>  
  
 [!code-csharp[sys.txt.rgxCompInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/genFishRegex.cs#1)]
 [!code-vb[sys.txt.rgxCompInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/genFishRegex.vb#1)]  
  
 <span data-ttu-id="3ebed-127">在第二步中，使用对 FishRegex 的引用编译下面的代码示例，然后运行生成的可执行文件。</span><span class="sxs-lookup"><span data-stu-id="3ebed-127">In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file.</span></span> <span data-ttu-id="3ebed-128">可执行文件通过使用 `FishRegex` 类型匹配目标字符串，并在目标字符串中显示匹配项、组、捕获组和匹配项的索引位置。</span><span class="sxs-lookup"><span data-stu-id="3ebed-128">The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.</span></span>  
  
 [!code-csharp[sys.txt.rgxCompInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/useFishRegex.cs#2)]
 [!code-vb[sys.txt.rgxCompInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/useFishRegex.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ebed-129"><paramref name="name" /> 为 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-129"><paramref name="name" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3ebed-130"><paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-130"><paramref name="pattern" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="3ebed-131">-或-</span><span class="sxs-lookup"><span data-stu-id="3ebed-131">-or-</span></span> 
 <span data-ttu-id="3ebed-132"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-132"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="3ebed-133">-或-</span><span class="sxs-lookup"><span data-stu-id="3ebed-133">-or-</span></span> 
 <span data-ttu-id="3ebed-134"><paramref name="fullnamespace" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-134"><paramref name="fullnamespace" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="3ebed-135">此构造函数创建已编译的正则表达式，该表达式使用在其中创建它的应用程序域的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="3ebed-135">This constructor creates a compiled regular expression that uses the default time-out value of the application domain in which it is created.</span></span> <span data-ttu-id="3ebed-136">如果为应用程序域定义了超时值，则已编译的正则表达式将使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />，这会阻止模式匹配操作超时。建议使用 <see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />创建已编译的正则表达式的构造函数，该构造函数可用于设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="3ebed-136">If a time-out value is defined for the application domain, the compiled regular expression uses the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents a pattern-matching operation from timing out. The recommended constructor for creating a compiled regular expression is <see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexCompilationInfo : string * System.Text.RegularExpressions.RegexOptions * string * string * bool * TimeSpan -&gt; System.Text.RegularExpressions.RegexCompilationInfo" Usage="new System.Text.RegularExpressions.RegexCompilationInfo (pattern, options, name, fullnamespace, ispublic, matchTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="1" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fullnamespace" Type="System.String" Index="3" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ispublic" Type="System.Boolean" Index="4" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="5" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="3ebed-137">要编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-137">The regular expression to compile.</span></span></param>
        <param name="options"><span data-ttu-id="3ebed-138">编译正则表达式时使用的正则表达式选项。</span><span class="sxs-lookup"><span data-stu-id="3ebed-138">The regular expression options to use when compiling the regular expression.</span></span></param>
        <param name="name"><span data-ttu-id="3ebed-139">表示已编译的正则表达式的类型名称。</span><span class="sxs-lookup"><span data-stu-id="3ebed-139">The name of the type that represents the compiled regular expression.</span></span></param>
        <param name="fullnamespace"><span data-ttu-id="3ebed-140">新类型所属的命名空间。</span><span class="sxs-lookup"><span data-stu-id="3ebed-140">The namespace to which the new type belongs.</span></span></param>
        <param name="ispublic"><span data-ttu-id="3ebed-141">若要使所编译的正则表达式对公共可见，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-141"><see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="3ebed-142">正则表达式的默认超时间隔。</span><span class="sxs-lookup"><span data-stu-id="3ebed-142">The default time-out interval for the regular expression.</span></span></param>
        <summary><span data-ttu-id="3ebed-143">初始化 <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 类的新实例，该类包含有关要在程序集内包括的指定的超时值的信息。</span><span class="sxs-lookup"><span data-stu-id="3ebed-143">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression with a specified time-out value to be included in an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ebed-144"><xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 构造函数的每个参数都直接对应于 <xref:System.Text.RegularExpressions.RegexCompilationInfo> 类的属性。</span><span class="sxs-lookup"><span data-stu-id="3ebed-144">Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class.</span></span> <span data-ttu-id="3ebed-145">由于所有属性都是可读/写的，因此也可以直接分配其值。</span><span class="sxs-lookup"><span data-stu-id="3ebed-145">Because all properties are read/write, their values can also be assigned directly.</span></span>  
  
 <span data-ttu-id="3ebed-146"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 方法将生成一个包含已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="3ebed-146">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="3ebed-147">因此，不应将 <xref:System.Text.RegularExpressions.RegexOptions.Compiled> 指定为 `options`的值之一。</span><span class="sxs-lookup"><span data-stu-id="3ebed-147">Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of `options`.</span></span>  
  
 <span data-ttu-id="3ebed-148">如果 `true``ispublic`，则会为已编译的正则表达式类提供公共可访问性。</span><span class="sxs-lookup"><span data-stu-id="3ebed-148">If `ispublic` is `true`, the compiled regular expression class is given public accessibility.</span></span> <span data-ttu-id="3ebed-149">也就是说，可以通过在任何程序集中执行的代码对其进行实例化。</span><span class="sxs-lookup"><span data-stu-id="3ebed-149">That is, it can be instantiated from code that executes in any assembly.</span></span> <span data-ttu-id="3ebed-150">如果 `false``ispublic`，则会为已编译的正则表达式类提供C#`internal` （在中）或 `Friend` （Visual Basic）可访问性。</span><span class="sxs-lookup"><span data-stu-id="3ebed-150">If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility.</span></span> <span data-ttu-id="3ebed-151">也就是说，它只能从与正则表达式类相同的程序集中执行的代码实例化。</span><span class="sxs-lookup"><span data-stu-id="3ebed-151">That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</span></span>  
  
 <span data-ttu-id="3ebed-152">`matchTimeout` 参数定义已编译的正则表达式的默认超时间隔。</span><span class="sxs-lookup"><span data-stu-id="3ebed-152">The `matchTimeout` parameter defines the default time-out interval for the compiled regular expression.</span></span> <span data-ttu-id="3ebed-153">此值表示已编译的正则表达式对象在操作超时之前将执行单个匹配操作的大约时间量，并且正则表达式引擎将在其下一次计时检查过程中引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="3ebed-153">This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.</span></span> <span data-ttu-id="3ebed-154">有关超时值的其他信息，请参阅 "<xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>" 属性。</span><span class="sxs-lookup"><span data-stu-id="3ebed-154">For additional information about the time-out value, see the <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3ebed-155">建议你始终为已编译的正则表达式设置默认超时值。</span><span class="sxs-lookup"><span data-stu-id="3ebed-155">We recommend that you always set a default time-out value for a compiled regular expression.</span></span> <span data-ttu-id="3ebed-156">正则表达式库的使用者可以通过将表示新的超时间隔的 <xref:System.TimeSpan> 值传递到此构造函数重载，来覆盖该超时值。</span><span class="sxs-lookup"><span data-stu-id="3ebed-156">Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to this constructor overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ebed-157">下面的示例定义了一个名为 `DuplicateChars` 的、用于标识输入字符串中相同字符的两个或更多匹配项的已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-157">The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string.</span></span> <span data-ttu-id="3ebed-158">已编译的正则表达式的默认超时值为2秒。</span><span class="sxs-lookup"><span data-stu-id="3ebed-158">The compiled regular expression has a default time-out of 2 seconds.</span></span> <span data-ttu-id="3ebed-159">当您执行该示例时，它将创建一个名为 RegexLib 的类库，其中包含已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-159">When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 <span data-ttu-id="3ebed-160">正则表达式模式 `(\w)\1+` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="3ebed-160">The regular expression pattern `(\w)\1+` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="3ebed-161">模式</span><span class="sxs-lookup"><span data-stu-id="3ebed-161">Pattern</span></span>|<span data-ttu-id="3ebed-162">说明</span><span class="sxs-lookup"><span data-stu-id="3ebed-162">Description</span></span>|  
|-------------|-----------------|  
|`(\w)`|<span data-ttu-id="3ebed-163">匹配任意单词字符，并将其分配给第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="3ebed-163">Match any word character and assign it to the first capturing group.</span></span>|  
|`\1+`|<span data-ttu-id="3ebed-164">匹配第一个捕获组的值的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="3ebed-164">Match one or more occurrences of the value of the first captured group.</span></span>|  
  
 <span data-ttu-id="3ebed-165">下面的示例使用 `DuplicatedChars` 正则表达式来标识字符串数组中的重复字符。</span><span class="sxs-lookup"><span data-stu-id="3ebed-165">The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array.</span></span> <span data-ttu-id="3ebed-166">当它调用 `DuplicatedChars` 构造函数时，它会将超时间隔更改为5秒。</span><span class="sxs-lookup"><span data-stu-id="3ebed-166">When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ebed-167"><paramref name="name" /> 为 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-167"><paramref name="name" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3ebed-168"><paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-168"><paramref name="pattern" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="3ebed-169">-或-</span><span class="sxs-lookup"><span data-stu-id="3ebed-169">-or-</span></span> 
 <span data-ttu-id="3ebed-170"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-170"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="3ebed-171">-或-</span><span class="sxs-lookup"><span data-stu-id="3ebed-171">-or-</span></span> 
 <span data-ttu-id="3ebed-172"><paramref name="fullnamespace" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-172"><paramref name="fullnamespace" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3ebed-173"><paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span><span class="sxs-lookup"><span data-stu-id="3ebed-173"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <altmember cref="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ebed-174">获取或设置一个值，该值指示已编译的正则表达式是否具有公共可见性。</span><span class="sxs-lookup"><span data-stu-id="3ebed-174">Gets or sets a value that indicates whether the compiled regular expression has public visibility.</span></span></summary>
        <value><span data-ttu-id="3ebed-175">如果正则表达式具有公共可见性，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-175"><see langword="true" /> if the regular expression has public visibility; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ebed-176">如果 `false`<xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A> 属性，则由当前实例定义的正则表达式类只能通过在包含类的程序集中执行的代码来实例化。</span><span class="sxs-lookup"><span data-stu-id="3ebed-176">If the <xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A> property is `false`, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class.</span></span> <span data-ttu-id="3ebed-177">但是，因为 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType> 方法会生成一个程序集，该程序集只包含已编译的正则表达式，不允许添加其他代码，因此，通常没有理由将此属性的值指定为 `false`。</span><span class="sxs-lookup"><span data-stu-id="3ebed-177">However, because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType> method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeout : TimeSpan with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ebed-178">获取或设置正则表达式的默认超时间隔。</span><span class="sxs-lookup"><span data-stu-id="3ebed-178">Gets or sets the regular expression's default time-out interval.</span></span></summary>
        <value><span data-ttu-id="3ebed-179">在样式对的操作可经过的默认最长时间间隔时间，在 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 引发之前或 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，如果挂起被禁用。</span><span class="sxs-lookup"><span data-stu-id="3ebed-179">The default maximum time interval that can elapse in a pattern-matching operation before a <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> is thrown, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> if time-outs are disabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ebed-180"><xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> 属性定义已编译的正则表达式的默认超时间隔。</span><span class="sxs-lookup"><span data-stu-id="3ebed-180">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property defines the default time-out interval for the compiled regular expression.</span></span> <span data-ttu-id="3ebed-181">此值表示已编译的正则表达式在操作超时之前将执行单个匹配操作的大约时间量，并且正则表达式引擎将在其下一次计时检查过程中引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="3ebed-181">This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3ebed-182">建议你始终为已编译的正则表达式设置默认超时值。</span><span class="sxs-lookup"><span data-stu-id="3ebed-182">We recommend that you always set a default time-out value for a compiled regular expression.</span></span> <span data-ttu-id="3ebed-183">正则表达式库的使用者可以通过将表示新的超时间隔的 <xref:System.TimeSpan> 值传递到已编译的正则表达式的类构造函数来替代该超时值。</span><span class="sxs-lookup"><span data-stu-id="3ebed-183">Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to the compiled regular expression's class constructor.</span></span>  
  
 <span data-ttu-id="3ebed-184">可以通过以下任一方式向 <xref:System.Text.RegularExpressions.RegexCompilationInfo> 对象分配默认超时值：</span><span class="sxs-lookup"><span data-stu-id="3ebed-184">You can assign a default time-out value to a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object in any of the following ways:</span></span>  
  
-   <span data-ttu-id="3ebed-185">通过调用 <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> 方法，并为 "REGEX_DEFAULT_MATCH_TIMEOUT" 属性提供 <xref:System.TimeSpan> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-185">By calling the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method and providing the string representation of a <xref:System.TimeSpan> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</span></span>  
  
-   <span data-ttu-id="3ebed-186">通过调用 <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> 构造函数并提供 `matchTimeout` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="3ebed-186">By calling the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> constructor and providing a value for the `matchTimeout` parameter.</span></span>  
  
-   <span data-ttu-id="3ebed-187">通过设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="3ebed-187">By setting the value of this property.</span></span>  
  
 <span data-ttu-id="3ebed-188">若要设置合理的超时间隔，请考虑以下因素：</span><span class="sxs-lookup"><span data-stu-id="3ebed-188">To set a reasonable time-out interval, consider the following factors:</span></span>  
  
-   <span data-ttu-id="3ebed-189">正则表达式模式的长度和复杂性。</span><span class="sxs-lookup"><span data-stu-id="3ebed-189">The length and complexity of the regular expression pattern.</span></span> <span data-ttu-id="3ebed-190">较长和更复杂的正则表达式所需的时间比较短且更简单。</span><span class="sxs-lookup"><span data-stu-id="3ebed-190">Longer and more complex regular expressions require more time than shorter and simpler ones.</span></span>  
  
-   <span data-ttu-id="3ebed-191">预期的计算机负载。</span><span class="sxs-lookup"><span data-stu-id="3ebed-191">The expected machine load.</span></span> <span data-ttu-id="3ebed-192">在 CPU 和内存利用率较高的系统上，处理时间会更长。</span><span class="sxs-lookup"><span data-stu-id="3ebed-192">Processing takes more time on systems with high CPU and memory utilization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ebed-193">下面的示例定义了一个名为 `DuplicateChars` 的、用于标识输入字符串中相同字符的两个或更多匹配项的已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-193">The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string.</span></span> <span data-ttu-id="3ebed-194">已编译的正则表达式的默认超时值为2秒。</span><span class="sxs-lookup"><span data-stu-id="3ebed-194">The compiled regular expression has a default time-out of 2 seconds.</span></span> <span data-ttu-id="3ebed-195">当您执行该示例时，它将创建一个名为 RegexLib 的类库，其中包含已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-195">When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 <span data-ttu-id="3ebed-196">正则表达式模式 `(\w)\1+` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="3ebed-196">The regular expression pattern `(\w)\1+` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="3ebed-197">模式</span><span class="sxs-lookup"><span data-stu-id="3ebed-197">Pattern</span></span>|<span data-ttu-id="3ebed-198">说明</span><span class="sxs-lookup"><span data-stu-id="3ebed-198">Description</span></span>|  
|-------------|-----------------|  
|`(\w)`|<span data-ttu-id="3ebed-199">匹配任意单词字符，并将其分配给第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="3ebed-199">Match any word character and assign it to the first capturing group.</span></span>|  
|`\1+`|<span data-ttu-id="3ebed-200">匹配第一个捕获组的值的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="3ebed-200">Match one or more occurrences of the value of the first captured group.</span></span>|  
  
 <span data-ttu-id="3ebed-201">下面的示例使用 `DuplicatedChars` 正则表达式来标识字符串数组中的重复字符。</span><span class="sxs-lookup"><span data-stu-id="3ebed-201">The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array.</span></span> <span data-ttu-id="3ebed-202">当它调用 `DuplicatedChars` 构造函数时，它会将超时间隔更改为5秒。</span><span class="sxs-lookup"><span data-stu-id="3ebed-202">When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ebed-203">获取或设置表示已编译的正则表达式的类型名称。</span><span class="sxs-lookup"><span data-stu-id="3ebed-203">Gets or sets the name of the type that represents the compiled regular expression.</span></span></summary>
        <value><span data-ttu-id="3ebed-204">新类型的名称。</span><span class="sxs-lookup"><span data-stu-id="3ebed-204">The name of the new type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ebed-205"><xref:System.Text.RegularExpressions.RegexCompilationInfo> 类用于定义已编译的正则表达式，该表达式表示为从 <xref:System.Text.RegularExpressions.Regex>派生的类。</span><span class="sxs-lookup"><span data-stu-id="3ebed-205">The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="3ebed-206"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> 属性定义正则表达式类型的类名称，并且 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> 和 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> 属性共同定义其完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="3ebed-206">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> property defines the class name of the regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3ebed-207">此属性的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-207">The value for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ebed-208">此属性的值为空字符串。</span><span class="sxs-lookup"><span data-stu-id="3ebed-208">The value for this property is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ebed-209">获取或设置新类型所属的命名空间。</span><span class="sxs-lookup"><span data-stu-id="3ebed-209">Gets or sets the namespace to which the new type belongs.</span></span></summary>
        <value><span data-ttu-id="3ebed-210">新类型的命名空间。</span><span class="sxs-lookup"><span data-stu-id="3ebed-210">The namespace of the new type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ebed-211"><xref:System.Text.RegularExpressions.RegexCompilationInfo> 类用于定义已编译的正则表达式，该表达式表示为从 <xref:System.Text.RegularExpressions.Regex>派生的类。</span><span class="sxs-lookup"><span data-stu-id="3ebed-211">The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="3ebed-212"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> 属性定义包含已编译的正则表达式类型的命名空间，并且 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> 和 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> 属性共同定义其完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="3ebed-212">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> property defines the namespace that contains the compiled regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3ebed-213">此属性的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-213">The value for this property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As RegexOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexOptions Options { System::Text::RegularExpressions::RegexOptions get(); void set(System::Text::RegularExpressions::RegexOptions value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.RegularExpressions.RegexOptions with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ebed-214">获取或设置编译正则表达式时使用的选项。</span><span class="sxs-lookup"><span data-stu-id="3ebed-214">Gets or sets the options to use when compiling the regular expression.</span></span></summary>
        <value><span data-ttu-id="3ebed-215">枚举值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="3ebed-215">A bitwise combination of the enumeration values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ebed-216"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 方法将生成一个包含已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="3ebed-216">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="3ebed-217">因此，无需指定 <xref:System.Text.RegularExpressions.RegexOptions.Compiled> 作为此属性的值之一。</span><span class="sxs-lookup"><span data-stu-id="3ebed-217">Therefore, you do not have to specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of this property.</span></span> <span data-ttu-id="3ebed-218">如果它存在，则将忽略 <xref:System.Text.RegularExpressions.RegexOptions.Compiled> 选项。</span><span class="sxs-lookup"><span data-stu-id="3ebed-218">If it is present, the <xref:System.Text.RegularExpressions.RegexOptions.Compiled> option is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ebed-219">获取或设置要编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-219">Gets or sets the regular expression to compile.</span></span></summary>
        <value><span data-ttu-id="3ebed-220">要编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-220">The regular expression to compile.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ebed-221"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> 属性可以包含任何有效的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="3ebed-221">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> property can contain any valid regular expression.</span></span> <span data-ttu-id="3ebed-222">如果 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> 属性的值不是语法正确的正则表达式模式，则调用 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 方法将引发一个 <xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="3ebed-222">If the value of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> property is not a syntactically correct regular expression pattern, the call to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method throws an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3ebed-223">此属性的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3ebed-223">The value for this property is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/regular-expressions"><span data-ttu-id="3ebed-224">.NET Framework 正则表达式</span><span class="sxs-lookup"><span data-stu-id="3ebed-224">.NET Framework Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="3ebed-225">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="3ebed-225">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
