<Type Name="Capture" FullName="System.Text.RegularExpressions.Capture">
  <Metadata><Meta Name="ms.openlocfilehash" Value="63ff3269b227586e250aec846808fe66405a9b62" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89699223" /></Metadata><TypeSignature Language="C#" Value="public class Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Capture extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="VB.NET" Value="Public Class Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Capture" />
  <TypeSignature Language="F#" Value="type Capture = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Capture extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Text.RegularExpressions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Text.RegularExpressions" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="41b22-101">表示来自单个成功子表达式捕获的结果。</span><span class="sxs-lookup"><span data-stu-id="41b22-101">Represents the results from a single successful subexpression capture.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b22-102"><xref:System.Text.RegularExpressions.Capture>对象是不可变的，并且没有公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="41b22-102">A <xref:System.Text.RegularExpressions.Capture> object is immutable and has no public constructor.</span></span> <span data-ttu-id="41b22-103">实例通过 <xref:System.Text.RegularExpressions.CaptureCollection> 对象返回，该对象由 `Match.Captures` 和属性返回 <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="41b22-103">Instances are returned through the <xref:System.Text.RegularExpressions.CaptureCollection> object, which is returned by the `Match.Captures` and <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="41b22-104">但是， `Match.Captures` 属性提供有关与对象相同的匹配项的信息 <xref:System.Text.RegularExpressions.Match> 。</span><span class="sxs-lookup"><span data-stu-id="41b22-104">However, the `Match.Captures` property provides information about the same match as the <xref:System.Text.RegularExpressions.Match> object.</span></span>  
  
 <span data-ttu-id="41b22-105">如果未将限定符应用于捕获组，则 <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> 属性将返回一个 <xref:System.Text.RegularExpressions.CaptureCollection> <xref:System.Text.RegularExpressions.Capture> 对象，该对象提供与对象相同的捕获的相关信息 <xref:System.Text.RegularExpressions.Group> 。</span><span class="sxs-lookup"><span data-stu-id="41b22-105">If you do not apply a quantifier to a capturing group, the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> property returns a <xref:System.Text.RegularExpressions.CaptureCollection> with a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="41b22-106">如果将限定符应用于捕获组，则 `Group.Index` 、 `Group.Length` 和 `Group.Value` 属性仅提供有关最后捕获的组的信息，而中的对象提供 <xref:System.Text.RegularExpressions.Capture> <xref:System.Text.RegularExpressions.CaptureCollection> 有关所有子表达式捕获的信息。</span><span class="sxs-lookup"><span data-stu-id="41b22-106">If you do apply a quantifier to a capturing group, the `Group.Index`, `Group.Length`, and `Group.Value` properties provide information only about the last captured group, whereas the <xref:System.Text.RegularExpressions.Capture> objects in the <xref:System.Text.RegularExpressions.CaptureCollection> provide information about all subexpression captures.</span></span> <span data-ttu-id="41b22-107">说明如示例所示。</span><span class="sxs-lookup"><span data-stu-id="41b22-107">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b22-108">下面的示例定义一个正则表达式，该正则表达式匹配不包含标点的句子，但句点 ( "。) 。</span><span class="sxs-lookup"><span data-stu-id="41b22-108">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb" id="Snippet1"::: 
  
 <span data-ttu-id="41b22-109">正则表达式模式 `((\w+)[\s.])+` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="41b22-109">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="41b22-110">请注意，在此正则表达式中，限定符 (+) 应用于整个正则表达式。</span><span class="sxs-lookup"><span data-stu-id="41b22-110">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="41b22-111">模式</span><span class="sxs-lookup"><span data-stu-id="41b22-111">Pattern</span></span>|<span data-ttu-id="41b22-112">描述</span><span class="sxs-lookup"><span data-stu-id="41b22-112">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="41b22-113">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="41b22-113">Match one or more word characters.</span></span> <span data-ttu-id="41b22-114">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="41b22-114">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="41b22-115">匹配空白字符或句点 ( "。") 。</span><span class="sxs-lookup"><span data-stu-id="41b22-115">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="41b22-116">匹配一个或多个单词字符，后跟一个空白字符或句点 ( "。) 。</span><span class="sxs-lookup"><span data-stu-id="41b22-116">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="41b22-117">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="41b22-117">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="41b22-118">匹配一个或多个单词字符的一个或多个匹配项，后跟一个空白字符或句点 ( "。) 。</span><span class="sxs-lookup"><span data-stu-id="41b22-118">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="41b22-119">在此示例中，输入字符串包含两个句子。</span><span class="sxs-lookup"><span data-stu-id="41b22-119">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="41b22-120">如输出所示，第一句只包含一个单词，因此该 <xref:System.Text.RegularExpressions.CaptureCollection> 对象有一个 <xref:System.Text.RegularExpressions.Capture> 对象，该对象表示与对象相同的捕获 <xref:System.Text.RegularExpressions.Group> 。</span><span class="sxs-lookup"><span data-stu-id="41b22-120">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="41b22-121">第二个句子包含多个单词，因此 <xref:System.Text.RegularExpressions.Group> 对象只包含与最后一个匹配的子表达式有关的信息。</span><span class="sxs-lookup"><span data-stu-id="41b22-121">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="41b22-122">组1，表示第一个捕获，包含具有结束时间的句子中的最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="41b22-122">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="41b22-123">组2表示第二个捕获，其中包含句子中的最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="41b22-123">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="41b22-124">但 <xref:System.Text.RegularExpressions.Capture> 组的对象中的对象将 <xref:System.Text.RegularExpressions.CaptureCollection> 捕获每个子表达式匹配项。</span><span class="sxs-lookup"><span data-stu-id="41b22-124">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="41b22-125"><xref:System.Text.RegularExpressions.Capture>第一个捕获组的捕获集合中的对象包含有关每个捕获的单词和空白字符或句点的信息。</span><span class="sxs-lookup"><span data-stu-id="41b22-125">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="41b22-126"><xref:System.Text.RegularExpressions.Capture>第二个捕获组的捕获集合中的对象包含有关每个捕获的字词的信息。</span><span class="sxs-lookup"><span data-stu-id="41b22-126">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.CaptureCollection" />
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Text.RegularExpressions.Capture.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b22-127">原始字符串中发现捕获的子字符串的第一个字符的位置。</span><span class="sxs-lookup"><span data-stu-id="41b22-127">The position in the original string where the first character of the captured substring is found.</span></span></summary>
        <value><span data-ttu-id="41b22-128">原始字符串中发现捕获的子字符串的从零开始的起始位置。</span><span class="sxs-lookup"><span data-stu-id="41b22-128">The zero-based starting position in the original string where the captured substring is found.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Text.RegularExpressions.Capture.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b22-129">获取捕获的子字符串的长度。</span><span class="sxs-lookup"><span data-stu-id="41b22-129">Gets the length of the captured substring.</span></span></summary>
        <value><span data-ttu-id="41b22-130">捕获的子字符串的长度。</span><span class="sxs-lookup"><span data-stu-id="41b22-130">The length of the captured substring.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Capture.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="capture.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="41b22-131">通过调用 <see cref="P:System.Text.RegularExpressions.Capture.Value" /> 属性，从输入的字符串中检索捕获的子字符串。</span><span class="sxs-lookup"><span data-stu-id="41b22-131">Retrieves the captured substring from the input string by calling the <see cref="P:System.Text.RegularExpressions.Capture.Value" /> property.</span></span></summary>
        <returns><span data-ttu-id="41b22-132">通过匹配捕获的子字符串。</span><span class="sxs-lookup"><span data-stu-id="41b22-132">The substring that was captured by the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b22-133">`ToString` 实际上是对属性的内部调用 <xref:System.Text.RegularExpressions.Capture.Value%2A> 。</span><span class="sxs-lookup"><span data-stu-id="41b22-133">`ToString` is actually an internal call to the <xref:System.Text.RegularExpressions.Capture.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Text.RegularExpressions.Capture.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41b22-134">获取输入的字符串中的捕获的子字符串。</span><span class="sxs-lookup"><span data-stu-id="41b22-134">Gets the captured substring from the input string.</span></span></summary>
        <value><span data-ttu-id="41b22-135">通过匹配捕获的子字符串。</span><span class="sxs-lookup"><span data-stu-id="41b22-135">The substring that is captured by the match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41b22-136">如果调用 <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> 或 <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> 方法未能找到匹配项，则返回的属性的值 `Match.Value` 为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="41b22-136">If a call to the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> or <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method fails to find a match, the value of the returned `Match.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41b22-137">如果正则表达式引擎不能与捕获组匹配，则为。</span><span class="sxs-lookup"><span data-stu-id="41b22-137">If the regular expression engine is unable to match a capturing group.</span></span> <span data-ttu-id="41b22-138">返回的属性的值 `Group.Value` 为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="41b22-138">the value of the returned `Group.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41b22-139">有关说明，请参阅第二个示例。</span><span class="sxs-lookup"><span data-stu-id="41b22-139">See the second example for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41b22-140">下面的示例定义一个正则表达式，该正则表达式匹配不包含标点的句子，但句点 ( "。) 。</span><span class="sxs-lookup"><span data-stu-id="41b22-140">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span> <span data-ttu-id="41b22-141">`Match.Value`属性显示每个匹配项的结果字符串，其中包含匹配的句子。</span><span class="sxs-lookup"><span data-stu-id="41b22-141">The `Match.Value` property displays the result string, which consists of a matched sentence, for each match.</span></span> <span data-ttu-id="41b22-142">`Group.Value`属性显示每个捕获组的结果字符串; 它包含由该捕获组捕获的最后一个字符串。</span><span class="sxs-lookup"><span data-stu-id="41b22-142">The `Group.Value` property displays the result string for each capturing group; it consists of the last string captured by that capturing group.</span></span> <span data-ttu-id="41b22-143"><xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType>属性显示每个捕获的结果字符串。</span><span class="sxs-lookup"><span data-stu-id="41b22-143">The <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType> property displays the result string for each capture.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb" id="Snippet1":::  
  
 <span data-ttu-id="41b22-144">正则表达式模式 `((\w+)[\s.])+` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="41b22-144">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="41b22-145">请注意，在此正则表达式中，限定符 (+) 应用于整个正则表达式。</span><span class="sxs-lookup"><span data-stu-id="41b22-145">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="41b22-146">模式</span><span class="sxs-lookup"><span data-stu-id="41b22-146">Pattern</span></span>|<span data-ttu-id="41b22-147">描述</span><span class="sxs-lookup"><span data-stu-id="41b22-147">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="41b22-148">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="41b22-148">Match one or more word characters.</span></span> <span data-ttu-id="41b22-149">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="41b22-149">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="41b22-150">匹配空白字符或句点 ( "。") 。</span><span class="sxs-lookup"><span data-stu-id="41b22-150">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="41b22-151">匹配一个或多个单词字符，后跟一个空白字符或句点 ( "。) 。</span><span class="sxs-lookup"><span data-stu-id="41b22-151">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="41b22-152">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="41b22-152">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="41b22-153">匹配一个或多个单词字符的一个或多个匹配项，后跟一个空白字符或句点 ( "。) 。</span><span class="sxs-lookup"><span data-stu-id="41b22-153">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="41b22-154">在此示例中，输入字符串包含两个句子。</span><span class="sxs-lookup"><span data-stu-id="41b22-154">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="41b22-155">如输出所示，第一句只包含一个单词，因此该 <xref:System.Text.RegularExpressions.CaptureCollection> 对象有一个 <xref:System.Text.RegularExpressions.Capture> 对象，该对象表示与对象相同的捕获 <xref:System.Text.RegularExpressions.Group> 。</span><span class="sxs-lookup"><span data-stu-id="41b22-155">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="41b22-156">第二个句子包含多个单词，因此 <xref:System.Text.RegularExpressions.Group> 对象只包含与最后一个匹配的子表达式有关的信息。</span><span class="sxs-lookup"><span data-stu-id="41b22-156">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="41b22-157">组1，表示第一个捕获，包含具有结束时间的句子中的最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="41b22-157">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="41b22-158">组2表示第二个捕获，其中包含句子中的最后一个单词。</span><span class="sxs-lookup"><span data-stu-id="41b22-158">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="41b22-159">但 <xref:System.Text.RegularExpressions.Capture> 组的对象中的对象将 <xref:System.Text.RegularExpressions.CaptureCollection> 捕获每个子表达式匹配项。</span><span class="sxs-lookup"><span data-stu-id="41b22-159">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="41b22-160"><xref:System.Text.RegularExpressions.Capture>第一个捕获组的捕获集合中的对象包含有关每个捕获的单词和空白字符或句点的信息。</span><span class="sxs-lookup"><span data-stu-id="41b22-160">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="41b22-161"><xref:System.Text.RegularExpressions.Capture>第二个捕获组的捕获集合中的对象包含有关每个捕获的字词的信息。</span><span class="sxs-lookup"><span data-stu-id="41b22-161">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 <span data-ttu-id="41b22-162">下面的示例使用正则表达式模式 `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$` 来匹配由以句点分隔的两部分组成的产品编号。</span><span class="sxs-lookup"><span data-stu-id="41b22-162">The following example uses a regular expression pattern, `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`, to match a product number that consists of two parts separated by a period.</span></span> <span data-ttu-id="41b22-163">这两个部分由字母字符后跟可选数字组成。</span><span class="sxs-lookup"><span data-stu-id="41b22-163">Both parts consist of alphabetic characters followed by optional numbers.</span></span> <span data-ttu-id="41b22-164">由于第一个输入字符串与模式不匹配，因此返回对象的属性的值 <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> `Value` 为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="41b22-164">Because the first input string does not match the pattern, the value of the returned <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41b22-165">同样，如果正则表达式模式与捕获组不匹配，则相应对象的属性的值 <xref:System.Text.RegularExpressions.Group> `Value` 为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="41b22-165">Similarly, when the regular expression pattern is unable to match a capturing group, the value of the corresponding <xref:System.Text.RegularExpressions.Group> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb" id="Snippet1":::  
  
 <span data-ttu-id="41b22-166">正则表达式模式的定义如下表所示：</span><span class="sxs-lookup"><span data-stu-id="41b22-166">The regular expression pattern is defined as shown in the following table:</span></span>  
  
|<span data-ttu-id="41b22-167">模式</span><span class="sxs-lookup"><span data-stu-id="41b22-167">Pattern</span></span>|<span data-ttu-id="41b22-168">描述</span><span class="sxs-lookup"><span data-stu-id="41b22-168">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="41b22-169">从字符串开头开始匹配。</span><span class="sxs-lookup"><span data-stu-id="41b22-169">Begin the match at the beginning of the string.</span></span>|  
|`([a-z]+)`|<span data-ttu-id="41b22-170">匹配从 a 到 z 的任意字符的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="41b22-170">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="41b22-171">因为正则表达式引擎是通过选项传递的 <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> ，所以此比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="41b22-171">Because the regular expression engine is passed the <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> option, this comparison is case-insensitive.</span></span> <span data-ttu-id="41b22-172">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="41b22-172">This is the first capturing group.</span></span>|  
|`(\d+)?`|<span data-ttu-id="41b22-173">匹配一个或多个十进制数字的零个或一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="41b22-173">Match zero or one occurrence of one or more decimal digits.</span></span> <span data-ttu-id="41b22-174">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="41b22-174">This is the second capturing group.</span></span>|  
|`\.`|<span data-ttu-id="41b22-175">匹配文本句点字符。</span><span class="sxs-lookup"><span data-stu-id="41b22-175">Match a literal period character.</span></span>|  
|`([a-z]+`|<span data-ttu-id="41b22-176">匹配从 a 到 z 的任意字符的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="41b22-176">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="41b22-177">比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="41b22-177">The comparison is case-insensitive.</span></span>|  
|`(\d)*`|<span data-ttu-id="41b22-178">匹配零个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="41b22-178">Match zero or more decimal digits.</span></span> <span data-ttu-id="41b22-179">单个匹配的数字是第四个捕获组。</span><span class="sxs-lookup"><span data-stu-id="41b22-179">A single matched digit is the fourth capturing group.</span></span>|  
|`([a-z]+(\d)*)`|<span data-ttu-id="41b22-180">匹配从 a 到 z 的一个或多个字母字符，后跟零个、一个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="41b22-180">Match one or more alphabetic characters from a to z followed by zero, one, or more decimal digits.</span></span> <span data-ttu-id="41b22-181">这是第四个捕获组。</span><span class="sxs-lookup"><span data-stu-id="41b22-181">This is the fourth capturing group.</span></span>|  
|`$`|<span data-ttu-id="41b22-182">在字符串末尾结束匹配。</span><span class="sxs-lookup"><span data-stu-id="41b22-182">Conclude the match at the end of the string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
