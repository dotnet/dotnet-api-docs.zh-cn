<Type Name="Regex" FullName="System.Text.RegularExpressions.Regex">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e70e8da7008ddf17403b0eb0d84b80de64def70" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100314542" /></Metadata><TypeSignature Language="C#" Value="public class Regex" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Regex extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Regex" />
  <TypeSignature Language="VB.NET" Value="Public Class Regex" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class Regex" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type Regex = class" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public class Regex : System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Regex extends System.Object implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class Regex&#xA;Implements ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Regex : System::Runtime::Serialization::ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Regex = class&#xA;    interface ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Regex extends System.Object implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Text.RegularExpressions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Text.RegularExpressions" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4fd7a-101">表示不可变的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-101">Represents an immutable regular expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-102"><xref:System.Text.RegularExpressions.Regex>类表示 .NET Framework 的正则表达式引擎。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-102">The <xref:System.Text.RegularExpressions.Regex> class represents the .NET Framework's regular expression engine.</span></span> <span data-ttu-id="4fd7a-103">它可用于快速分析大量文本以找到特定的字符模式;提取、编辑、替换或删除文本子字符串;和将提取的字符串添加到集合以生成报告。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-103">It can be used to quickly parse large amounts of text to find specific character patterns; to extract, edit, replace, or delete text substrings; and to add the extracted strings to a collection to generate a report.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fd7a-104">如果你的主要兴趣是通过确定是否符合特定模式来验证字符串，则可以使用 <xref:System.Configuration.RegexStringValidator?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-104">If your primary interest is to validate a string by determining whether it conforms to a particular pattern, you can use the <xref:System.Configuration.RegexStringValidator?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="4fd7a-105">若要使用正则表达式，可以使用 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)中记录的语法来定义要在文本流中标识的模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-105">To use regular expressions, you define the pattern that you want to identify in a text stream by using the syntax documented in [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span> <span data-ttu-id="4fd7a-106">接下来，你可以根据需要实例化 <xref:System.Text.RegularExpressions.Regex> 对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-106">Next, you can optionally instantiate a <xref:System.Text.RegularExpressions.Regex> object.</span></span> <span data-ttu-id="4fd7a-107">最后，调用执行某种操作的方法，例如替换与正则表达式模式匹配的文本，或标识模式匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-107">Finally, you call a method that performs some operation, such as replacing text that matches the regular expression pattern, or identifying a pattern match.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fd7a-108">有关某些常见正则表达式模式，请参阅 [正则表达式示例](/dotnet/standard/base-types/regular-expression-examples)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-108">For some common regular expression patterns, see [Regular Expression Examples](/dotnet/standard/base-types/regular-expression-examples).</span></span> <span data-ttu-id="4fd7a-109">还有多个正则表达式模式的联机库，如 [Regular-Expressions.info](https://www.regular-expressions.info/examples.html)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-109">There are also a number of online libraries of regular expression patterns, such as the one at [Regular-Expressions.info](https://www.regular-expressions.info/examples.html).</span></span>  
  
<a name="remarks"></a> <span data-ttu-id="4fd7a-110">有关使用类的详细信息 <xref:System.Text.RegularExpressions.Regex> ，请参阅本主题中的以下部分：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-110">For more information about using the <xref:System.Text.RegularExpressions.Regex> class, see the following sections in this topic:</span></span>  
  
-   [<span data-ttu-id="4fd7a-111">Regex 与 String 方法</span><span class="sxs-lookup"><span data-stu-id="4fd7a-111">Regex vs. String Methods</span></span>](#regex_vs_string)  
  
-   [<span data-ttu-id="4fd7a-112">静态方法与实例方法</span><span class="sxs-lookup"><span data-stu-id="4fd7a-112">Static vs. Instance Methods</span></span>](#static_vs_instance)  
  
-   [<span data-ttu-id="4fd7a-113">执行正则表达式运算</span><span class="sxs-lookup"><span data-stu-id="4fd7a-113">Performing Regular Expression Operations</span></span>](#regex_ops)  
  
-   [<span data-ttu-id="4fd7a-114">定义 Time-Out 值</span><span class="sxs-lookup"><span data-stu-id="4fd7a-114">Defining a Time-Out Value</span></span>](#define_timeout)  
  
 <span data-ttu-id="4fd7a-115">若要详细了解正则表达式语言，请参阅[正则表达式语言 - 快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)，或下载和打印下面的小册子之一：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-115">For more information about the regular expression language, see [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference) or download and print one of these brochures:</span></span>  
  
 [<span data-ttu-id="4fd7a-116">快速参考（Word (.docx) 格式）</span><span class="sxs-lookup"><span data-stu-id="4fd7a-116">Quick Reference in Word (.docx) format</span></span>](https://download.microsoft.com/download/D/2/4/D240EBF6-A9BA-4E4F-A63F-AEB6DA0B921C/Regular%20expressions%20quick%20reference.docx)  
 [<span data-ttu-id="4fd7a-117">快速参考（PDF (.pdf) 格式）</span><span class="sxs-lookup"><span data-stu-id="4fd7a-117">Quick Reference in PDF (.pdf) format</span></span>](https://download.microsoft.com/download/D/2/4/D240EBF6-A9BA-4E4F-A63F-AEB6DA0B921C/Regular%20expressions%20quick%20reference.pdf)  
  
<a name="regex_vs_string"></a>   
## <a name="regex-vs-string-methods"></a><span data-ttu-id="4fd7a-118">Regex 与 String 方法</span><span class="sxs-lookup"><span data-stu-id="4fd7a-118">Regex vs. String Methods</span></span>  
 <span data-ttu-id="4fd7a-119"><xref:System.String?displayProperty=nameWithType>类包含若干搜索和比较方法，您可以使用这些方法来执行与文本的模式匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-119">The <xref:System.String?displayProperty=nameWithType> class includes several search and comparison methods that you can use to perform pattern matching with text.</span></span> <span data-ttu-id="4fd7a-120">例如， <xref:System.String.Contains%2A?displayProperty=nameWithType> 、 <xref:System.String.EndsWith%2A?displayProperty=nameWithType> 和 <xref:System.String.StartsWith%2A?displayProperty=nameWithType> 方法确定字符串实例是否包含指定的子字符串; <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 、、 <xref:System.String.IndexOfAny%2A?displayProperty=nameWithType> <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 和 <xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType> 方法返回指定子字符串在字符串中的起始位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-120">For example, the <xref:System.String.Contains%2A?displayProperty=nameWithType>, <xref:System.String.EndsWith%2A?displayProperty=nameWithType>, and <xref:System.String.StartsWith%2A?displayProperty=nameWithType> methods determine whether a string instance contains a specified substring; and the <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, <xref:System.String.IndexOfAny%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>, and <xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType> methods return the starting position of a specified substring in a string.</span></span> <span data-ttu-id="4fd7a-121"><xref:System.String?displayProperty=nameWithType>搜索特定字符串时，请使用类的方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-121">Use the methods of the <xref:System.String?displayProperty=nameWithType> class when you are searching for a specific string.</span></span> <span data-ttu-id="4fd7a-122"><xref:System.Text.RegularExpressions.Regex>搜索字符串中的特定模式时，请使用类。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-122">Use the <xref:System.Text.RegularExpressions.Regex> class when you are searching for a specific pattern in a string.</span></span> <span data-ttu-id="4fd7a-123">有关详细信息和示例，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-123">For more information and examples, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions).</span></span>  
  
 [<span data-ttu-id="4fd7a-124">返回到备注</span><span class="sxs-lookup"><span data-stu-id="4fd7a-124">Back to Remarks</span></span>](#remarks)  
  
<a name="static_vs_instance"></a>   
## <a name="static-vs-instance-methods"></a><span data-ttu-id="4fd7a-125">静态方法与实例方法</span><span class="sxs-lookup"><span data-stu-id="4fd7a-125">Static vs. Instance Methods</span></span>  
 <span data-ttu-id="4fd7a-126">定义正则表达式模式后，可以通过以下两种方式之一将其提供给正则表达式引擎：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-126">After you define a regular expression pattern, you can provide it to the regular expression engine in either of two ways:</span></span>  
  
-   <span data-ttu-id="4fd7a-127">通过实例化 <xref:System.Text.RegularExpressions.Regex> 表示正则表达式的对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-127">By instantiating a <xref:System.Text.RegularExpressions.Regex> object that represents the regular expression.</span></span> <span data-ttu-id="4fd7a-128">为此，请将正则表达式模式传递到 <xref:System.Text.RegularExpressions.Regex.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-128">To do this, you pass the regular expression pattern to a <xref:System.Text.RegularExpressions.Regex.%23ctor%2A> constructor.</span></span> <span data-ttu-id="4fd7a-129"><xref:System.Text.RegularExpressions.Regex>对象是不可变的; 当 <xref:System.Text.RegularExpressions.Regex> 使用正则表达式实例化对象时，无法更改该对象的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-129">A <xref:System.Text.RegularExpressions.Regex> object is immutable; when you instantiate a <xref:System.Text.RegularExpressions.Regex> object with a regular expression, that object's regular expression cannot be changed.</span></span>  
  
-   <span data-ttu-id="4fd7a-130">通过同时提供正则表达式和文本来搜索 `static` `Shared` Visual Basic) 方法中的 (<xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-130">By supplying both the regular expression and the text to search to a `static` (`Shared` in Visual Basic) <xref:System.Text.RegularExpressions.Regex> method.</span></span> <span data-ttu-id="4fd7a-131">这使你可以使用正则表达式，而无需显式创建 <xref:System.Text.RegularExpressions.Regex> 对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-131">This enables you to use a regular expression without explicitly creating a <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="4fd7a-132">所有 <xref:System.Text.RegularExpressions.Regex> 模式标识方法均包括静态和实例重载。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-132">All <xref:System.Text.RegularExpressions.Regex> pattern identification methods include both static and instance overloads.</span></span>  
  
 <span data-ttu-id="4fd7a-133">正则表达式引擎必须先编译特定模式，然后才能使用该模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-133">The regular expression engine must compile a particular pattern before the pattern can be used.</span></span> <span data-ttu-id="4fd7a-134">由于 <xref:System.Text.RegularExpressions.Regex> 对象是不可变的，因此这是一个在 <xref:System.Text.RegularExpressions.Regex> 调用类构造函数或静态方法时发生的一次性过程。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-134">Because <xref:System.Text.RegularExpressions.Regex> objects are immutable, this is a one-time procedure that occurs when a <xref:System.Text.RegularExpressions.Regex> class constructor or a static method is called.</span></span> <span data-ttu-id="4fd7a-135">为了消除重复编译单个正则表达式的需要，正则表达式引擎会缓存静态方法调用中使用的已编译正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-135">To eliminate the need to repeatedly compile a single regular expression, the regular expression engine caches the compiled regular expressions used in static method calls.</span></span> <span data-ttu-id="4fd7a-136">因此，正则表达式模式匹配方法为静态和实例方法提供了相当的性能。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-136">As a result, regular expression pattern-matching methods offer comparable performance for static and instance methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4fd7a-137">在 .NET Framework 版本1.0 和1.1 中，已缓存所有已编译的正则表达式，无论它们是在实例中使用还是静态方法调用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-137">In the .NET Framework versions 1.0 and 1.1, all compiled regular expressions, whether they were used in instance or static method calls, were cached.</span></span> <span data-ttu-id="4fd7a-138">从 .NET Framework 2.0 开始，仅缓存静态方法调用中使用的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-138">Starting with the .NET Framework 2.0, only regular expressions used in static method calls are cached.</span></span>  
  
 <span data-ttu-id="4fd7a-139">但是，在以下两种情况下，缓存可能会对性能产生负面影响：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-139">However, caching can adversely affect performance in the following two cases:</span></span>  
  
-   <span data-ttu-id="4fd7a-140">当使用带有大量正则表达式的静态方法调用时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-140">When you use static method calls with a large number of regular expressions.</span></span> <span data-ttu-id="4fd7a-141">默认情况下，正则表达式引擎会缓存15个最近使用的静态正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-141">By default, the regular expression engine caches the 15 most recently used static regular expressions.</span></span> <span data-ttu-id="4fd7a-142">如果应用程序使用15个以上的静态正则表达式，则必须重新编译某些正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-142">If your application uses more than 15 static regular expressions, some regular expressions must be recompiled.</span></span> <span data-ttu-id="4fd7a-143">若要防止这种重新编译，可以增加 <xref:System.Text.RegularExpressions.Regex.CacheSize%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-143">To prevent this recompilation, you can increase the <xref:System.Text.RegularExpressions.Regex.CacheSize%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="4fd7a-144"><xref:System.Text.RegularExpressions.Regex>使用之前已编译的正则表达式实例化新的对象时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-144">When you instantiate new <xref:System.Text.RegularExpressions.Regex> objects with regular expressions that have previously been compiled.</span></span> <span data-ttu-id="4fd7a-145">例如，下面的代码定义了一个正则表达式来查找文本流中的重复单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-145">For example, the following code defines a regular expression to locate duplicated words in a text stream.</span></span> <span data-ttu-id="4fd7a-146">尽管该示例使用单个正则表达式，但它将实例化一个新的 <xref:System.Text.RegularExpressions.Regex> 对象来处理每行文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-146">Although the example uses a single regular expression, it instantiates a new <xref:System.Text.RegularExpressions.Regex> object to process each line of text.</span></span> <span data-ttu-id="4fd7a-147">这会导致在循环的每次迭代时重新编译正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-147">This results in the recompilation of the regular expression with each iteration of the loop.</span></span>  
  
     [!code-csharp[System.Text.RegularExpressions.Class.Caching#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/cs/caching1.cs#1)]
     [!code-vb[System.Text.RegularExpressions.Class.Caching#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/vb/caching1.vb#1)]  
  
     <span data-ttu-id="4fd7a-148">若要防止重新编译，应实例化单个 <xref:System.Text.RegularExpressions.Regex> 对象，该对象可由需要它的所有代码访问，如下面的重写示例中所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-148">To prevent recompilation, you should instantiate a single <xref:System.Text.RegularExpressions.Regex> object that is accessible to all code that requires it, as shown in the following rewritten example.</span></span>  
  
     [!code-csharp[System.Text.RegularExpressions.Class.Caching#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/cs/caching1.cs#2)]
     [!code-vb[System.Text.RegularExpressions.Class.Caching#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.class.caching/vb/caching1.vb#2)]  
  
 [<span data-ttu-id="4fd7a-149">返回到备注</span><span class="sxs-lookup"><span data-stu-id="4fd7a-149">Back to Remarks</span></span>](#remarks)  
  
<a name="regex_ops"></a>   
## <a name="performing-regular-expression-operations"></a><span data-ttu-id="4fd7a-150">执行正则表达式运算</span><span class="sxs-lookup"><span data-stu-id="4fd7a-150">Performing Regular Expression Operations</span></span>  
 <span data-ttu-id="4fd7a-151">无论你决定要实例化 <xref:System.Text.RegularExpressions.Regex> 对象并调用其方法或调用静态方法， <xref:System.Text.RegularExpressions.Regex> 类都提供以下模式匹配功能：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-151">Whether you decide to instantiate a <xref:System.Text.RegularExpressions.Regex> object and call its methods or call static methods, the <xref:System.Text.RegularExpressions.Regex> class offers the following pattern-matching functionality:</span></span>  
  
-   <span data-ttu-id="4fd7a-152">验证匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-152">Validation of a match.</span></span> <span data-ttu-id="4fd7a-153">调用 <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> 方法以确定是否存在匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-153">You call the <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method to determine whether a match is present.</span></span>  
  
-   <span data-ttu-id="4fd7a-154">检索单个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-154">Retrieval of a single match.</span></span> <span data-ttu-id="4fd7a-155">调用 <xref:System.Text.RegularExpressions.Regex.Match%2A> 方法以检索一个 <xref:System.Text.RegularExpressions.Match> 对象，该对象表示字符串中的第一个匹配项或字符串的一部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-155">You call the <xref:System.Text.RegularExpressions.Regex.Match%2A> method to retrieve a <xref:System.Text.RegularExpressions.Match> object that represents the first match in a string or in part of a string.</span></span> <span data-ttu-id="4fd7a-156">可以通过调用方法来检索后续匹配项 <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-156">Subsequent matches can be retrieved by calling the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="4fd7a-157">检索所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-157">Retrieval of all matches.</span></span> <span data-ttu-id="4fd7a-158">调用 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 方法可检索 <xref:System.Text.RegularExpressions.MatchCollection?displayProperty=nameWithType> 对象，该对象表示在字符串或字符串的一部分中找到的所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-158">You call the <xref:System.Text.RegularExpressions.Regex.Matches%2A> method to retrieve a <xref:System.Text.RegularExpressions.MatchCollection?displayProperty=nameWithType> object that represents all the matches found in a string or in part of a string.</span></span>  
  
-   <span data-ttu-id="4fd7a-159">替换匹配文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-159">Replacement of matched text.</span></span> <span data-ttu-id="4fd7a-160">调用 <xref:System.Text.RegularExpressions.Regex.Replace%2A> 方法以替换匹配的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-160">You call the <xref:System.Text.RegularExpressions.Regex.Replace%2A> method to replace matched text.</span></span> <span data-ttu-id="4fd7a-161">替换文本还可以由正则表达式定义。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-161">The replacement text can also be defined by a regular expression.</span></span> <span data-ttu-id="4fd7a-162">此外，某些 <xref:System.Text.RegularExpressions.Regex.Replace%2A> 方法还包括一个 <xref:System.Text.RegularExpressions.MatchEvaluator> 参数，使你能够以编程方式定义替换文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-162">In addition, some of the <xref:System.Text.RegularExpressions.Regex.Replace%2A> methods include a <xref:System.Text.RegularExpressions.MatchEvaluator> parameter that enables you to programmatically define the replacement text.</span></span>  
  
-   <span data-ttu-id="4fd7a-163">创建一个字符串数组，该数组由输入字符串的各个部分组成。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-163">Creation of a string array that is formed from parts of an input string.</span></span> <span data-ttu-id="4fd7a-164">调用 <xref:System.Text.RegularExpressions.Regex.Split%2A> 方法以在由正则表达式定义的位置拆分输入字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-164">You call the <xref:System.Text.RegularExpressions.Regex.Split%2A> method to split an input string at positions that are defined by the regular expression.</span></span>  
  
 <span data-ttu-id="4fd7a-165">除了其模式匹配方法以外， <xref:System.Text.RegularExpressions.Regex> 类还包括几种特殊用途的方法：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-165">In addition to its pattern-matching methods, the <xref:System.Text.RegularExpressions.Regex> class includes several special-purpose methods:</span></span>  
  
-   <span data-ttu-id="4fd7a-166"><xref:System.Text.RegularExpressions.Regex.Escape%2A>方法将可解释为正则表达式或输入字符串中的正则表达式运算符的任何字符转义。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-166">The <xref:System.Text.RegularExpressions.Regex.Escape%2A> method escapes any characters that may be interpreted as regular expression operators in a regular expression or input string.</span></span>  
  
-   <span data-ttu-id="4fd7a-167"><xref:System.Text.RegularExpressions.Regex.Unescape%2A>方法删除这些转义字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-167">The <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method removes these escape characters.</span></span>  
  
-   <span data-ttu-id="4fd7a-168"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>方法创建包含预定义的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-168">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method creates an assembly that contains predefined regular expressions.</span></span> <span data-ttu-id="4fd7a-169">.NET Framework 包含命名空间中这些特殊用途程序集的示例 <xref:System.Web.RegularExpressions?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-169">The .NET Framework contains examples of these special-purpose assemblies in the <xref:System.Web.RegularExpressions?displayProperty=nameWithType> namespace.</span></span>  
  
 [<span data-ttu-id="4fd7a-170">返回到备注</span><span class="sxs-lookup"><span data-stu-id="4fd7a-170">Back to Remarks</span></span>](#remarks)  
  
<a name="define_timeout"></a>   
## <a name="defining-a-time-out-value"></a><span data-ttu-id="4fd7a-171">定义 Time-Out 值</span><span class="sxs-lookup"><span data-stu-id="4fd7a-171">Defining a Time-Out Value</span></span>  
 <span data-ttu-id="4fd7a-172">.NET Framework 支持功能完备的正则表达式语言，可在模式匹配中提供强大的功能和灵活性。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-172">The .NET Framework supports a full-featured regular expression language that provides substantial power and flexibility in pattern matching.</span></span> <span data-ttu-id="4fd7a-173">不过，功能和灵活性的代价是：性能不佳的风险。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-173">However, the power and flexibility come at a cost: the risk of poor performance.</span></span> <span data-ttu-id="4fd7a-174">很难创建的正则表达式非常简单。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-174">Regular expressions that perform poorly are surprisingly easy to create.</span></span> <span data-ttu-id="4fd7a-175">在某些情况下，在处理与正则表达式模式大致匹配的文本时，依赖于过度回溯的正则表达式操作可能会停止响应。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-175">In some cases, regular expression operations that rely on excessive backtracking can appear to stop responding when they process text that nearly matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-176">有关 .NET Framework 正则表达式引擎的详细信息，请参阅 [正则表达式行为的详细](/dotnet/standard/base-types/details-of-regular-expression-behavior)信息。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-176">For more information about the .NET Framework regular expression engine, see [Details of Regular Expression Behavior](/dotnet/standard/base-types/details-of-regular-expression-behavior).</span></span> <span data-ttu-id="4fd7a-177">有关过量回溯的详细信息，请参阅 [回溯](/dotnet/standard/base-types/backtracking-in-regular-expressions)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-177">For more information about excessive backtracking, see [Backtracking](/dotnet/standard/base-types/backtracking-in-regular-expressions).</span></span>  
  
 <span data-ttu-id="4fd7a-178">从开始 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] ，您可以定义正则表达式匹配的超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-178">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can define a time-out interval for regular expression matches.</span></span> <span data-ttu-id="4fd7a-179">如果正则表达式引擎无法在此时间间隔内标识匹配项，则匹配操作将引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-179">If the regular expression engine cannot identify a match within this time interval, the matching operation throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-180">在大多数情况下，这样可以防止正则表达式引擎尝试匹配与正则表达式模式近似匹配的文本，从而使处理能力浪费。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-180">In most cases, this prevents the regular expression engine from wasting processing power by trying to match text that nearly matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-181">但这也可能表示超时间隔设置得太低，或当前计算机负荷导致总体性能下降。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-181">It also could indicate, however, that the timeout interval has been set too low, or that the current machine load has caused an overall degradation in performance.</span></span>  
  
 <span data-ttu-id="4fd7a-182">处理异常的方式取决于异常的原因。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-182">How you handle the exception depends on the cause of the exception.</span></span> <span data-ttu-id="4fd7a-183">如果发生异常的原因是超时间隔设置得太低或计算机负载过多，则可以增加超时间隔，然后重试匹配操作。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-183">If the exception occurs because the time-out interval is set too low or because of excessive machine load, you can increase the time-out interval and retry the matching operation.</span></span> <span data-ttu-id="4fd7a-184">如果发生异常的原因是正则表达式依赖过多回溯，则可以假定不存在匹配项，并且可以选择记录有助于修改正则表达式模式的信息。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-184">If the exception occurs because the regular expression relies on excessive backtracking, you can assume that a match does not exist, and, optionally, you can log information that will help you modify the regular expression pattern.</span></span>  
  
 <span data-ttu-id="4fd7a-185">在 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> 实例化正则表达式对象时，可以通过调用构造函数来设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-185">You can set a time-out interval by calling the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> constructor when you instantiate a regular expression object.</span></span> <span data-ttu-id="4fd7a-186">对于静态方法，你可以通过调用具有参数的匹配方法的重载来设置超时间隔 `matchTimeout` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-186">For static methods, you can set a time-out interval by calling an overload of a matching method that has a `matchTimeout` parameter.</span></span> <span data-ttu-id="4fd7a-187">如果未显式设置超时值，则按如下方式确定默认超时值：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-187">If you do not set a time-out value explicitly, the default time-out value  is determined as follows:</span></span>  
  
-   <span data-ttu-id="4fd7a-188">使用应用程序范围的超时值（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-188">By using the application-wide time-out value, if one exists.</span></span> <span data-ttu-id="4fd7a-189">这可以是任何应用于在其中实例化对象的应用程序域 <xref:System.Text.RegularExpressions.Regex> 或进行静态方法调用的超时值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-189">This can be any time-out value that applies to the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is instantiated or the static method call is made.</span></span> <span data-ttu-id="4fd7a-190">通过调用 <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> 方法将值的字符串表示形式分配给 <xref:System.TimeSpan> "REGEX_DEFAULT_MATCH_TIMEOUT" 属性，可以设置应用程序范围的超时值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-190">You can set the application-wide time-out value by calling the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method to assign the string representation of a <xref:System.TimeSpan> value to the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</span></span>  
  
-   <span data-ttu-id="4fd7a-191"><xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>如果未设置应用程序范围的超时值，则使用值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-191">By using the value <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>, if no application-wide time-out value has been set.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4fd7a-192">建议在所有正则表达式模式匹配操作中设置超时值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-192">We recommend that you set a time-out value in all regular expression pattern-matching operations.</span></span> <span data-ttu-id="4fd7a-193">有关详细信息，请参阅 [正则表达式的最佳实践](/dotnet/standard/base-types/best-practices)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-193">For more information, see [Best Practices for Regular Expressions](/dotnet/standard/base-types/best-practices).</span></span>  
  
 [<span data-ttu-id="4fd7a-194">返回到备注</span><span class="sxs-lookup"><span data-stu-id="4fd7a-194">Back to Remarks</span></span>](#remarks)  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-195">下面的示例使用正则表达式检查字符串中重复出现的单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-195">The following example uses a regular expression to check for repeated occurrences of words in a string.</span></span> <span data-ttu-id="4fd7a-196">正则表达式 `\b(?<word>\w+)\s+(\k<word>)\b` 可以解释为下表中所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-196">The regular expression `\b(?<word>\w+)\s+(\k<word>)\b` can be interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-197">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-197">Pattern</span></span>|<span data-ttu-id="4fd7a-198">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-198">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="4fd7a-199">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-199">Start the match at a word boundary.</span></span>|  
|`(?<word>\w+)`|<span data-ttu-id="4fd7a-200">匹配一个或多个单词字符，最多一个字边界。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-200">Match one or more word characters up to a word boundary.</span></span> <span data-ttu-id="4fd7a-201">将此捕获的组命名为 `word` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-201">Name this captured group `word`.</span></span>|  
|`\s+`|<span data-ttu-id="4fd7a-202">匹配一个或多个空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-202">Match one or more white-space characters.</span></span>|  
|`(\k<word>)`|<span data-ttu-id="4fd7a-203">匹配名为的捕获组 `word` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-203">Match the captured group that is named `word`.</span></span>|  
|`\b`|<span data-ttu-id="4fd7a-204">与字边界匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-204">Match a word boundary.</span></span>|  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/Regex_Words/CPP/words.cpp" id="Snippet0":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Regex_Words/CS/words.cs" interactive="try-dotnet" id="Snippet0":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Regex_Words/VB/words.vb" id="Snippet0"::: 
  
 <span data-ttu-id="4fd7a-205">下面的示例演示如何使用正则表达式来检查字符串是表示货币值，还是具有表示货币值的正确格式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-205">The following example illustrates the use of a regular expression to check whether a string either represents a currency value or has the correct format to represent a currency value.</span></span> <span data-ttu-id="4fd7a-206">在这种情况下，将从 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> 用户的当前区域性的、、、和属性动态生成正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-206">In this case, the regular expression is built dynamically from the <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties for the user's current culture.</span></span> <span data-ttu-id="4fd7a-207">如果系统的当前区域性为 en-us，则生成的正则表达式是 `^\s*[\+-]?\s?\$?\s?(\d*\.?\d{2}?){1}$` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-207">If the system's current culture is en-US, the resulting regular expression is `^\s*[\+-]?\s?\$?\s?(\d*\.?\d{2}?){1}$`.</span></span> <span data-ttu-id="4fd7a-208">此正则表达式可以解释为下表中所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-208">This regular expression can be interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-209">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-209">Pattern</span></span>|<span data-ttu-id="4fd7a-210">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-210">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="4fd7a-211">从字符串的开头开始。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-211">Start at the beginning of the string.</span></span>|  
|`\s*`|<span data-ttu-id="4fd7a-212">匹配零个或多个空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-212">Match zero or more white-space characters.</span></span>|  
|`[\+-]?`|<span data-ttu-id="4fd7a-213">匹配正号或负号的零个或一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-213">Match zero or one occurrence of either the positive sign or the negative sign.</span></span>|  
|`\s?`|<span data-ttu-id="4fd7a-214">匹配零个或一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-214">Match zero or one white-space character.</span></span>|  
|`\$?`|<span data-ttu-id="4fd7a-215">匹配美元符号的零个或一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-215">Match zero or one occurrence of the dollar sign.</span></span>|  
|`\s?`|<span data-ttu-id="4fd7a-216">匹配零个或一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-216">Match zero or one white-space character.</span></span>|  
|`\d*`|<span data-ttu-id="4fd7a-217">匹配零个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-217">Match zero or more decimal digits.</span></span>|  
|`\.?`|<span data-ttu-id="4fd7a-218">匹配零个或一个小数点符号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-218">Match zero or one decimal point symbol.</span></span>|  
|`\d{2}?`|<span data-ttu-id="4fd7a-219">匹配两个十进制数字零次或一次。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-219">Match two decimal digits zero or one time.</span></span>|  
|`(\d*\.?\d{2}?){1}`|<span data-ttu-id="4fd7a-220">匹配由小数点符号分隔的整数和小数位的模式（至少一次）。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-220">Match the pattern of integral and fractional digits separated by a decimal point symbol at least one time.</span></span>|  
|`$`|<span data-ttu-id="4fd7a-221">与字符串的末尾匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-221">Match the end of the string.</span></span>|  
  
 <span data-ttu-id="4fd7a-222">在这种情况下，正则表达式假定有效的货币字符串不包含组分隔符符号，并且它没有小数位数或当前区域性的属性定义的小数位数 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-222">In this case, the regular expression assumes that a valid currency string does not contain group separator symbols, and that it has either no fractional digits or the number of fractional digits defined by the current culture's <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> property.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.class/cs/regex_example1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.class/vb/regex_example1.vb" id="Snippet1"::: 
  
 <span data-ttu-id="4fd7a-223">由于此示例中的正则表达式是动态生成的，因此，在设计时不知道当前区域性的货币符号、十进制符号或正负号是否可能被正则表达式引擎错误地解释为正则表达式语言运算符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-223">Because the regular expression in this example is built dynamically, we do not know at design time whether the current culture's currency symbol, decimal sign, or positive and negative signs might be misinterpreted by the regular expression engine as regular expression language operators.</span></span> <span data-ttu-id="4fd7a-224">为了防止任何误解，此示例将每个动态生成的字符串传递给 <xref:System.Text.RegularExpressions.Regex.Escape%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-224">To prevent any misinterpretation, the example passes each dynamically generated string to the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="4fd7a-225"><see cref="T:System.Text.RegularExpressions.Regex" />该类 (只读) 并且是线程安全的不可变的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-225">The <see cref="T:System.Text.RegularExpressions.Regex" /> class is immutable (read-only) and thread safe.</span></span> <span data-ttu-id="4fd7a-226"><see cref="T:System.Text.RegularExpressions.Regex" /> 可以在任何线程上创建对象并在线程之间共享。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-226"><see cref="T:System.Text.RegularExpressions.Regex" /> objects can be created on any thread and shared between threads.</span></span> <span data-ttu-id="4fd7a-227">有关详细信息，请参阅 [线程安全](/dotnet/standard/base-types/thread-safety-in-regular-expressions)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-227">For more information, see [Thread Safety](/dotnet/standard/base-types/thread-safety-in-regular-expressions).</span></span></threadsafe>
    <altmember cref="T:System.Configuration.RegexStringValidator" />
    <related type="Article" href="/dotnet/standard/base-types/regular-expressions"><span data-ttu-id="4fd7a-228">.NET Framework 正则表达式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-228">.NET Framework Regular Expressions</span></span></related>
    <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-229">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-229">Regular Expression Language Elements</span></span></related>
    <related type="ExternalDocumentation" href="https://download.microsoft.com/download/D/2/4/D240EBF6-A9BA-4E4F-A63F-AEB6DA0B921C/Regular%20expressions%20quick%20reference.docx"><span data-ttu-id="4fd7a-230">正则表达式 — 快速参考（以 Word 格式下载）</span><span class="sxs-lookup"><span data-stu-id="4fd7a-230">Regular Expressions - Quick Reference (download in Word format)</span></span></related>
    <related type="ExternalDocumentation" href="https://download.microsoft.com/download/D/2/4/D240EBF6-A9BA-4E4F-A63F-AEB6DA0B921C/Regular%20expressions%20quick%20reference.pdf"><span data-ttu-id="4fd7a-231">正则表达式 — 快速参考（以 PDF 格式下载）</span><span class="sxs-lookup"><span data-stu-id="4fd7a-231">Regular Expressions - Quick Reference (download in PDF format)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fd7a-232">初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-232">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class.</span></span></summary>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-233">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-233">Regular Expression Language Elements</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Regex ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Regex();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fd7a-234">初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-234">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-235">请注意，此构造函数是受保护的;它只能由派生自类的类调用 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-235">Note that this constructor is protected; it can only be called by classes derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Regex (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Regex(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : string -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex pattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="4fd7a-236">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-236">The regular expression pattern to match.</span></span></param>
        <summary><span data-ttu-id="4fd7a-237">为指定的正则表达式初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-237">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-238">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-238">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-239">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference) 主题。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-239">For more information about regular expressions, see the [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference) topics.</span></span>  
  
 <span data-ttu-id="4fd7a-240">调用 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String)> 构造函数等效于 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions)> 使用参数的值调用构造函数 <xref:System.Text.RegularExpressions.RegexOptions.None> `options` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-240">Calling the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String)> constructor is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions)> constructor with a value of <xref:System.Text.RegularExpressions.RegexOptions.None> for the `options` argument.</span></span>  
  
 <span data-ttu-id="4fd7a-241"><xref:System.Text.RegularExpressions.Regex>对象是不可变的，这意味着它只能用于在创建时定义的匹配模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-241">A <xref:System.Text.RegularExpressions.Regex> object is immutable, which means that it can be used only for the match pattern you define when you create it.</span></span> <span data-ttu-id="4fd7a-242">但是，无需重新编译即可使用任意次。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-242">However, it can be used any number of times without being recompiled.</span></span>  
  
 <span data-ttu-id="4fd7a-243">此构造函数实例化一个正则表达式对象，该对象尝试区分大小写匹配在中定义的任何字母字符 `pattern` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-243">This constructor instantiates a regular expression object that attempts a case-sensitive match of any alphabetical characters defined in `pattern`.</span></span> <span data-ttu-id="4fd7a-244">对于不区分大小写的匹配项，请使用 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-244">For a case-insensitive match, use the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-245">下面的示例演示如何使用此构造函数实例化一个与任何以字母 "a" 或 "t" 开头的单词匹配的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-245">The following example illustrates how to use this constructor to instantiate a regular expression that matches any word that begins with the letters "a" or "t".</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/cs/constructors1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/vb/constructors1.vb" id="Snippet1":::
  
 <span data-ttu-id="4fd7a-246">请注意，正则表达式模式无法匹配文本开头的单词 "the"，因为默认情况下比较区分大小写。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-246">Note that the regular expression pattern cannot match the word "The" at the beginning of the text, because comparisons are case-sensitive by default.</span></span> <span data-ttu-id="4fd7a-247">有关不区分大小写的比较的示例，请参见 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions)> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-247">For an example of case-insensitive comparison, see the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions)> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-248">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-248">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-249"><paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-249"><paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-250">此构造函数将创建一个 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象，该对象使用在其中创建它的应用程序域的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-250">This constructor creates a <see cref="T:System.Text.RegularExpressions.Regex" /> object that uses the default time-out value of the application domain in which it is created.</span></span> <span data-ttu-id="4fd7a-251">如果尚未为应用程序域定义超时值，则 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象将使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，这会阻止操作超时。用于创建对象的推荐构造函数 <see cref="T:System.Text.RegularExpressions.Regex" /> 是 <see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" /> ，可用于设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-251">If a time-out value has not been defined for the application domain,  the <see cref="T:System.Text.RegularExpressions.Regex" /> object uses the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the operation from timing out. The recommended constructor for creating a <see cref="T:System.Text.RegularExpressions.Regex" /> object is <see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-252">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-252">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Regex (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Regex(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="4fd7a-253">包含串行化模式和 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-253">The object that contains a serialized pattern and <see cref="T:System.Text.RegularExpressions.RegexOptions" /> information.</span></span></param>
        <param name="context"><span data-ttu-id="4fd7a-254">此序列化的目标。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-254">The destination for this serialization.</span></span> <span data-ttu-id="4fd7a-255">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="4fd7a-255">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="4fd7a-256">使用序列化数据初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-256">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class by using serialized data.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-257">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-257">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-258"><paramref name="info" /> 包含的模式为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-258">The pattern that <paramref name="info" /> contains is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-259"><paramref name="info" /> 包含无效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 标志。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-259"><paramref name="info" /> contains an invalid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> flag.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Regex (string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Regex(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : string * System.Text.RegularExpressions.RegexOptions -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex (pattern, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="4fd7a-260">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-260">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-261">修改正则表达式的枚举值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-261">A bitwise combination of the enumeration values that modify the regular expression.</span></span></param>
        <summary><span data-ttu-id="4fd7a-262">使用修改模式的选项为指定的正则表达式初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-262">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression, with options that modify the pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-263">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-263">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-264">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference) 主题。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-264">For more information about regular expressions, see the [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference) topics.</span></span>  
  
 <span data-ttu-id="4fd7a-265"><xref:System.Text.RegularExpressions.Regex>对象是不可变的，这意味着它只能用于在创建时定义的匹配参数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-265">A <xref:System.Text.RegularExpressions.Regex> object is immutable, which means that it can be used only for the match parameters you define when you create it.</span></span> <span data-ttu-id="4fd7a-266">但是，无需重新编译即可使用任意次。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-266">However, it can be used any number of times without being recompiled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-267">下面的示例演示如何使用此构造函数实例化一个与任何以字母 "a" 或 "t" 开头的单词匹配的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-267">The following example illustrates how to use this constructor to instantiate a regular expression that matches any word that begins with the letters "a" or "t".</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/cs/Constructors2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Constructors/vb/Constructors2.vb" id="Snippet2":::
  
 <span data-ttu-id="4fd7a-268">请注意，match 集合包含开始文本的 "the" 一词，因为该 `options` 参数定义了不区分大小写的比较。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-268">Note that the match collection includes the word "The" that begins the text because the `options` parameter has defined case-insensitive comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-269">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-269">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-270"><paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-270"><paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-271"><paramref name="options" /> 包含无效标志。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-271"><paramref name="options" /> contains an invalid flag.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-272">此构造函数将创建一个 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象，该对象使用在其中创建它的应用程序域的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-272">This constructor creates a <see cref="T:System.Text.RegularExpressions.Regex" /> object that uses the default time-out value of the application domain in which it is created.</span></span> <span data-ttu-id="4fd7a-273">如果尚未为应用程序域定义超时值，则 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象将使用值 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，这会阻止操作超时。用于创建对象的推荐构造函数 <see cref="T:System.Text.RegularExpressions.Regex" /> 是 <see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" /> ，可用于设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-273">If a time-out value has not been defined for the application domain, the <see cref="T:System.Text.RegularExpressions.Regex" /> object uses the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the operation from timing out. The recommended constructor for creating a <see cref="T:System.Text.RegularExpressions.Regex" /> object is <see cref="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-274">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-274">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Regex (string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Regex(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.Regex : string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; System.Text.RegularExpressions.Regex" Usage="new System.Text.RegularExpressions.Regex (pattern, options, matchTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="4fd7a-275">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-275">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-276">修改正则表达式的枚举值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-276">A bitwise combination of the enumeration values that modify the regular expression.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="4fd7a-277">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-277">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="4fd7a-278">使用修改模式的选项和指定在超时前多久模式匹配方法应进行匹配尝试的值为指定正则表达式初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-278">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-279">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-279">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-280">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference) 主题。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-280">For more information about regular expressions, see the [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference) topics.</span></span>  
  
 <span data-ttu-id="4fd7a-281"><xref:System.Text.RegularExpressions.Regex>对象是不可变的，这意味着它只能用于在创建时定义的匹配模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-281">A <xref:System.Text.RegularExpressions.Regex> object is immutable, which means that it can be used only for the match pattern that you define when you create it.</span></span> <span data-ttu-id="4fd7a-282">但是，无需重新编译即可使用任意次。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-282">However, it can be used any number of times without being recompiled.</span></span>  
  
 <span data-ttu-id="4fd7a-283">`matchTimeout`参数指定模式匹配方法在超时前应尝试找到匹配项的时间长度。如果在该时间间隔内未找到匹配项，则模式匹配方法会引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-283">The `matchTimeout` parameter specifies how long a pattern-matching method should try to find a match before it times out. If no match is found in that time interval, the pattern-matching method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-284">`matchTimeout` 重写为在其中创建对象的应用程序域定义的任何默认超时值 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-284">`matchTimeout` overrides any default time-out value defined for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-285">观察超时间隔的实例模式匹配方法 `matchTimeout` 包括：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-285">The instance pattern-matching methods that observe the `matchTimeout` time-out interval include the following:</span></span>  
  
-   <xref:System.Text.RegularExpressions.Regex.IsMatch%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Match%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Matches%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Replace%2A>  
  
-   <xref:System.Text.RegularExpressions.Regex.Split%2A>  
  
-   <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="4fd7a-286">设置超时间隔可防止正则表达式在处理包含接近匹配项的输入时，这些表达式会出现依赖于过量回溯的正则表达式停止响应。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-286">Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="4fd7a-287">有关详细信息，请参阅[正则表达式和回溯的最佳实践](/dotnet/standard/base-types/best-practices)。 [](/dotnet/standard/base-types/backtracking-in-regular-expressions)</span><span class="sxs-lookup"><span data-stu-id="4fd7a-287">For more information, see [Best Practices for Regular Expressions](/dotnet/standard/base-types/best-practices) and [Backtracking](/dotnet/standard/base-types/backtracking-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-288">若要设置合理的超时间隔，请考虑以下因素：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-288">To set a reasonable time-out interval, consider the following factors:</span></span>  
  
-   <span data-ttu-id="4fd7a-289">正则表达式模式的长度和复杂性。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-289">The length and complexity of the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-290">较长和更复杂的正则表达式所需的时间比较短且更简单。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-290">Longer and more complex regular expressions require more time than shorter and simpler ones.</span></span>  
  
-   <span data-ttu-id="4fd7a-291">预期的计算机负载。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-291">The expected machine load.</span></span> <span data-ttu-id="4fd7a-292">在 CPU 和内存利用率较高的系统上处理需要更多时间。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-292">Processing takes more time on systems that have high CPU and memory utilization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-293">下面的示例调用 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> 构造函数来实例化 <xref:System.Text.RegularExpressions.Regex> 超时值为1秒的对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-293">The following example calls the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> constructor to instantiate a <xref:System.Text.RegularExpressions.Regex> object with a time-out value of one second.</span></span> <span data-ttu-id="4fd7a-294">正则表达式模式 `(a+)+$`（与行尾的一个或多个“a”字符的一个或多个序列匹配）受过度回溯的约束。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-294">The regular expression pattern `(a+)+$`, which matches one or more sequences of one or more "a" characters at the end of a line, is subject to excessive backtracking.</span></span> <span data-ttu-id="4fd7a-295">如果 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 引发了，则该示例会将超时值增大到最大值三秒。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-295">If a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> is thrown, the example increases the time-out value up to the maximum value of three seconds.</span></span> <span data-ttu-id="4fd7a-296">否则，它会放弃与模式匹配的尝试。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-296">Otherwise, it abandons the attempt to match the pattern.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ctor/cs/ctor1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ctor/vb/ctor1.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-297">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-297">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-298"><paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-298"><paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-299"><paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-299"><paramref name="options" /> is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> value.</span></span>  
  
<span data-ttu-id="4fd7a-300">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-300">-or-</span></span> 
 <span data-ttu-id="4fd7a-301"><paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-301"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-302">建议将 <paramref name="matchTimeout" /> 参数设置为适当的值，例如两秒钟。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-302">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="4fd7a-303">如果通过指定禁用超时 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，则正则表达式引擎可提供略微更好的性能。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-303">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="4fd7a-304">但是，只应在以下条件下禁用超时：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-304">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="4fd7a-305">-正则表达式处理的输入派生自已知的和受信任的源，或由静态文本组成。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-305">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="4fd7a-306">这不包括用户动态输入的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-306">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="4fd7a-307">-对正则表达式模式进行了全面测试，以确保它有效地处理匹配、不匹配和接近匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-307">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="4fd7a-308">-当正则表达式模式不包含已知的语言元素时，这些元素会导致在处理接近的匹配时导致过度回溯。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-308">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/backtracking-in-regular-expressions"><span data-ttu-id="4fd7a-309">正则表达式中的回溯</span><span class="sxs-lookup"><span data-stu-id="4fd7a-309">Backtracking in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-310">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-310">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CacheSize">
      <MemberSignature Language="C#" Value="public static int CacheSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CacheSize" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.CacheSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CacheSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CacheSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheSize : int with get, set" Usage="System.Text.RegularExpressions.Regex.CacheSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-311">获取或设置已编译的正则表达式的当前静态缓存中的最大项数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-311">Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.</span></span></summary>
        <value><span data-ttu-id="4fd7a-312">静态缓存中的最大项数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-312">The maximum number of entries in the static cache.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-313"><xref:System.Text.RegularExpressions.Regex>类维护静态方法调用中使用的已编译正则表达式的内部缓存。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-313">The <xref:System.Text.RegularExpressions.Regex> class maintains an internal cache of compiled regular expressions used in static method calls.</span></span> <span data-ttu-id="4fd7a-314">如果在 set 操作中指定的值小于当前的缓存大小，则会丢弃缓存项，直到缓存大小等于指定值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-314">If the value specified in a set operation is less than the current cache size, cache entries are discarded until the cache size is equal to the specified value.</span></span>  
  
 <span data-ttu-id="4fd7a-315">默认情况下，缓存保存15个已编译的静态正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-315">By default, the cache holds 15 compiled static regular expressions.</span></span> <span data-ttu-id="4fd7a-316">应用程序通常不需要修改缓存大小。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-316">Your application typically will not have to modify the size of the cache.</span></span> <span data-ttu-id="4fd7a-317"><xref:System.Text.RegularExpressions.Regex.CacheSize%2A>仅当你想要关闭缓存或遇到非常大的缓存时才使用属性。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-317">Use the <xref:System.Text.RegularExpressions.Regex.CacheSize%2A> property only when you want to turn off caching or when you have an unusually large cache.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-318">集运算中的值小于零。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-318">The value in a set operation is less than zero.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-319">在 .NET Framework 前面的中 [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] ，将缓存静态和实例方法调用中使用的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-319">In the .NET Framework prior to the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], regular expressions used in both static and instance method calls were cached.</span></span> <span data-ttu-id="4fd7a-320">从开始 [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] ，仅缓存静态方法调用中使用的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-320">Beginning with the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], only regular expressions used in static method calls are cached.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="capnames">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Hashtable? capnames;" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly class System.Collections.Hashtable capnames" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.capnames" />
      <MemberSignature Language="VB.NET" Value="Protected Friend capnames As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Collections::Hashtable ^ capnames;" />
      <MemberSignature Language="F#" Value="val mutable capnames : System.Collections.Hashtable" Usage="System.Text.RegularExpressions.Regex.capnames" />
      <MemberSignature Language="C#" Value="protected internal System.Collections.Hashtable capnames;" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-321">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-321">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CapNames">
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary? CapNames { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary CapNames" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.CapNames" />
      <MemberSignature Language="VB.NET" Value="Protected Property CapNames As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IDictionary ^ CapNames { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CapNames : System.Collections.IDictionary with get, set" Usage="System.Text.RegularExpressions.Regex.CapNames" />
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary CapNames { get; set; }" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-322">获取或设置将命名捕获组映射到其索引值的字典。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-322">Gets or sets a dictionary that maps named capturing groups to their index values.</span></span></summary>
        <value><span data-ttu-id="4fd7a-323">将命名捕获组映射到其索引值的字典。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-323">A dictionary that maps named capturing groups to their index values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-324">请注意，此属性是受保护的;它只能从类派生的类中访问 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-324">Note that this property is protected; it can only be accessed from a class derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
 <span data-ttu-id="4fd7a-325">设置操作尝试将分配给该属性的值转换为 <xref:System.Collections.Hashtable> 对象; 如果此转换失败，它将调用 <xref:System.Collections.Hashtable.%23ctor(System.Collections.IDictionary)?displayProperty=nameWithType> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-325">A set operation attempts to convert the value assigned to the property to a <xref:System.Collections.Hashtable> object; if this conversion fails, it calls the <xref:System.Collections.Hashtable.%23ctor(System.Collections.IDictionary)?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-326">向设置操作中的 <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> 属性分配的值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-326">The value assigned to the <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> property in a set operation is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="caps">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Hashtable? caps;" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly class System.Collections.Hashtable caps" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.caps" />
      <MemberSignature Language="VB.NET" Value="Protected Friend caps As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Collections::Hashtable ^ caps;" />
      <MemberSignature Language="F#" Value="val mutable caps : System.Collections.Hashtable" Usage="System.Text.RegularExpressions.Regex.caps" />
      <MemberSignature Language="C#" Value="protected internal System.Collections.Hashtable caps;" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-327">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-327">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caps">
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary? Caps { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Caps" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.Caps" />
      <MemberSignature Language="VB.NET" Value="Protected Property Caps As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IDictionary ^ Caps { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caps : System.Collections.IDictionary with get, set" Usage="System.Text.RegularExpressions.Regex.Caps" />
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary Caps { get; set; }" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-328">获取或设置将编号捕获组映射到其索引值的字典。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-328">Gets or sets a dictionary that maps numbered capturing groups to their index values.</span></span></summary>
        <value><span data-ttu-id="4fd7a-329">将编号捕获组映射到其索引值的字典。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-329">A dictionary that maps numbered capturing groups to their index values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-330">请注意，此属性是受保护的;它只能从类派生的类中访问 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-330">Note that this property is protected; it can only be accessed from a class derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
 <span data-ttu-id="4fd7a-331">设置操作尝试将分配给该属性的值转换为 <xref:System.Collections.Hashtable> 对象; 如果此转换失败，它将调用 <xref:System.Collections.Hashtable.%23ctor(System.Collections.IDictionary)?displayProperty=nameWithType> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-331">A set operation attempts to convert the value assigned to the property to a <xref:System.Collections.Hashtable> object; if this conversion fails, it calls the <xref:System.Collections.Hashtable.%23ctor(System.Collections.IDictionary)?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-332">向设置操作中的 <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> 属性分配的值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-332">The value assigned to the <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> property in a set operation is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="capsize">
      <MemberSignature Language="C#" Value="protected internal int capsize;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly int32 capsize" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.capsize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend capsize As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected public: int capsize;" />
      <MemberSignature Language="F#" Value="val mutable capsize : int" Usage="System.Text.RegularExpressions.Regex.capsize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-333">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-333">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="capslist">
      <MemberSignature Language="C#" Value="protected internal string[]? capslist;" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly string[] capslist" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.capslist" />
      <MemberSignature Language="VB.NET" Value="Protected Friend capslist As String() " />
      <MemberSignature Language="C++ CLI" Value="protected public: cli::array &lt;System::String ^&gt; ^ capslist;" />
      <MemberSignature Language="F#" Value="val mutable capslist : string[]" Usage="System.Text.RegularExpressions.Regex.capslist" />
      <MemberSignature Language="C#" Value="protected internal string[] capslist;" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-334">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-334">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileToAssembly">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fd7a-335">编译正则表达式，并将其保存到单个程序集的磁盘中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-335">Compiles regular expressions and saves them to disk in a single assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="4fd7a-336">在 .NET Core 中，对方法的调用将 `Regex.CompileToAssembly` 引发 <xref:System.PlatformNotSupportedException> ; 不支持写出程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-336">On .NET Core, calls to the `Regex.CompileToAssembly` method throw a <xref:System.PlatformNotSupportedException>; writing out an assembly is not supported.</span></span>
  
       ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileToAssembly">
      <MemberSignature Language="C#" Value="public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class System.Reflection.AssemblyName assemblyname) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CompileToAssembly (regexinfos As RegexCompilationInfo(), assemblyname As AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompileToAssembly(cli::array &lt;System::Text::RegularExpressions::RegexCompilationInfo ^&gt; ^ regexinfos, System::Reflection::AssemblyName ^ assemblyname);" />
      <MemberSignature Language="F#" Value="static member CompileToAssembly : System.Text.RegularExpressions.RegexCompilationInfo[] * System.Reflection.AssemblyName -&gt; unit" Usage="System.Text.RegularExpressions.Regex.CompileToAssembly (regexinfos, assemblyname)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="regexinfos"><span data-ttu-id="4fd7a-337">描述要编译的正则表达式的数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-337">An array that describes the regular expressions to compile.</span></span></param>
        <param name="assemblyname"><span data-ttu-id="4fd7a-338">程序集的文件名。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-338">The file name of the assembly.</span></span></param>
        <summary><span data-ttu-id="4fd7a-339">将一个或多个指定的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象编译为命名程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-339">Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects to a named assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-340"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName)>方法生成一个 .NET Framework 程序集，其中在数组中定义的每个正则表达式 `regexinfos` 由一个类表示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-340">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName)> method generates a .NET Framework assembly in which each regular expression defined in the `regexinfos` array is represented by a class.</span></span> <span data-ttu-id="4fd7a-341">通常， <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName)> 方法是从生成已编译的正则表达式的程序集的单独的应用程序中调用的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-341">Typically, the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName)> method is called from a separate application that generates an assembly of compiled regular expressions.</span></span> <span data-ttu-id="4fd7a-342">程序集中包含的每个正则表达式具有以下特征：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-342">Each regular expression included in the assembly has the following characteristics:</span></span>  
  
-   <span data-ttu-id="4fd7a-343">它派生自 <xref:System.Text.RegularExpressions.Regex> 类。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-343">It is derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
-   <span data-ttu-id="4fd7a-344">为它分配由 `fullnamespace` 其对应对象的和参数定义的完全限定名称 `name` <xref:System.Text.RegularExpressions.RegexCompilationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-344">It is assigned the fully qualified name that is defined by the `fullnamespace` and `name` parameters of its corresponding <xref:System.Text.RegularExpressions.RegexCompilationInfo> object.</span></span>  
  
-   <span data-ttu-id="4fd7a-345">它具有默认 (或无参数) 构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-345">It has a default (or parameterless) constructor.</span></span>  
  
 <span data-ttu-id="4fd7a-346">通常，在独立于创建程序集的代码的程序集或应用程序中，会找到实例化并使用已编译的正则表达式的代码。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-346">Ordinarily, the code that instantiates and uses the compiled regular expression is found in an assembly or application that is separate from the code that creates the assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-347">下面的示例创建一个名为 RegexLib.dll 的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-347">The following example creates an assembly named RegexLib.dll.</span></span> <span data-ttu-id="4fd7a-348">程序集包括两个已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-348">The assembly includes two compiled regular expressions.</span></span> <span data-ttu-id="4fd7a-349">第一个是， `Utilities.RegularExpressions.DuplicatedString` 匹配两个相同的连续单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-349">The first, `Utilities.RegularExpressions.DuplicatedString`, matches two identical contiguous words.</span></span> <span data-ttu-id="4fd7a-350">第二个 `Utilities.RegularExpressions.EmailAddress` 检查字符串的格式是否正确，是否为电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-350">The second, `Utilities.RegularExpressions.EmailAddress`, checks whether a string has the correct format to be an email address.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile1.vb#1)]  
  
 <span data-ttu-id="4fd7a-351">然后，使用正则表达式来检查字符串中是否存在重复的单词，并将其用于以下示例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-351">The regular expression that checks a string for duplicate words is then instantiated and used by the following example.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile2.vb#2)]  
  
 <span data-ttu-id="4fd7a-352">成功编译第二个示例需要引用 RegexLib.dll () 添加到项目中的第一个示例所创建的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-352">Successful compilation of this second example requires a reference to RegexLib.dll (the assembly created by the first example) to be added to the project.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-353"><paramref name="assemblyname" /> 参数的 <see cref="P:System.Reflection.AssemblyName.Name" /> 属性值是一个空字符串或 null。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-353">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.</span></span>  
  
<span data-ttu-id="4fd7a-354">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-354">-or-</span></span> 
<span data-ttu-id="4fd7a-355"><paramref name="regexinfos" /> 中的一个或多个对象的正则表达式模式包含无效语法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-355">The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-356"><paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-356"><paramref name="assemblyname" /> or <paramref name="regexinfos" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="4fd7a-357">仅限 .NET 5 及更高版本和 .NET Core：不支持创建已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-357">.NET 5+ and .NET Core only: Creating an assembly of compiled regular expressions is not supported.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-358">如果要在 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 安装了或其单点版本的系统上进行开发，则需要 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 以为目标，并使用 <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> 方法创建包含已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-358">If you are developing on a system that has [!INCLUDE[net_v45](~/includes/net-v45-md.md)] or its point releases installed, you target [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], and you use the <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> method to create an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="4fd7a-359">尝试在已引发异常的系统上，使用该程序集中的某个正则表达式 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-359">Trying to use one of the regular expressions in that assembly on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] throws an exception.</span></span> <span data-ttu-id="4fd7a-360">若要解决此问题，可执行下列操作之一：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-360">To work around this problem, you can do either of the following:</span></span> 
<span data-ttu-id="4fd7a-361">-在 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 安装了而不是更高版本的系统上生成包含已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-361">-   Build the assembly that contains the compiled regular expressions on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] instead of later versions installed.</span></span>  
  
<span data-ttu-id="4fd7a-362">-在 <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> <see cref="T:System.Text.RegularExpressions.Regex" /> <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> 实例化 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象或调用正则表达式模式匹配方法时，请使用带有选项的静态方法或实例方法，而不是从程序集调用和检索已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-362">-   Instead of calling <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> and retrieving the compiled regular expression from an assembly, use either static or instance <see cref="T:System.Text.RegularExpressions.Regex" /> methods with the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option when you instantiate a <see cref="T:System.Text.RegularExpressions.Regex" /> object or call a regular expression pattern matching method.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/compilation-and-reuse-in-regular-expressions"><span data-ttu-id="4fd7a-363">编译和重复使用</span><span class="sxs-lookup"><span data-stu-id="4fd7a-363">Compilation and Reuse</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompileToAssembly">
      <MemberSignature Language="C#" Value="public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname, System.Reflection.Emit.CustomAttributeBuilder[]? attributes);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class System.Reflection.AssemblyName assemblyname, class System.Reflection.Emit.CustomAttributeBuilder[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CompileToAssembly (regexinfos As RegexCompilationInfo(), assemblyname As AssemblyName, attributes As CustomAttributeBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompileToAssembly(cli::array &lt;System::Text::RegularExpressions::RegexCompilationInfo ^&gt; ^ regexinfos, System::Reflection::AssemblyName ^ assemblyname, cli::array &lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CompileToAssembly : System.Text.RegularExpressions.RegexCompilationInfo[] * System.Reflection.AssemblyName * System.Reflection.Emit.CustomAttributeBuilder[] -&gt; unit" Usage="System.Text.RegularExpressions.Regex.CompileToAssembly (regexinfos, assemblyname, attributes)" />
      <MemberSignature Language="C#" Value="public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname, System.Reflection.Emit.CustomAttributeBuilder[] attributes);" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="attributes" Type="System.Reflection.Emit.CustomAttributeBuilder[]" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="regexinfos"><span data-ttu-id="4fd7a-364">描述要编译的正则表达式的数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-364">An array that describes the regular expressions to compile.</span></span></param>
        <param name="assemblyname"><span data-ttu-id="4fd7a-365">程序集的文件名。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-365">The file name of the assembly.</span></span></param>
        <param name="attributes"><span data-ttu-id="4fd7a-366">定义要应用于程序集的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-366">An array that defines the attributes to apply to the assembly.</span></span></param>
        <summary><span data-ttu-id="4fd7a-367">将一个或多个指定的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象编译为具有指定特性的命名程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-367">Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects to a named assembly with the specified attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-368"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D)>方法生成一个 .NET Framework 程序集，其中在数组中定义的每个正则表达式 `regexinfos` 由一个类表示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-368">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D)> method generates a .NET Framework assembly in which each regular expression defined in the `regexinfos` array is represented by a class.</span></span> <span data-ttu-id="4fd7a-369">通常， <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D)> 方法是从生成已编译的正则表达式的程序集的单独的应用程序中调用的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-369">Typically, the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D)> method is called from a separate application that generates an assembly of compiled regular expressions.</span></span> <span data-ttu-id="4fd7a-370">程序集中包含的每个正则表达式具有以下特征：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-370">Each regular expression included in the assembly has the following characteristics:</span></span>  
  
-   <span data-ttu-id="4fd7a-371">它派生自 <xref:System.Text.RegularExpressions.Regex> 类。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-371">It is derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
-   <span data-ttu-id="4fd7a-372">为它分配由 `fullnamespace` 其对应对象的和参数定义的完全限定名称 `name` <xref:System.Text.RegularExpressions.RegexCompilationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-372">It is assigned the fully qualified name that is defined by the `fullnamespace` and `name` parameters of its corresponding <xref:System.Text.RegularExpressions.RegexCompilationInfo> object.</span></span>  
  
-   <span data-ttu-id="4fd7a-373">它具有默认 (或无参数) 构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-373">It has a default (or parameterless) constructor.</span></span>  
  
 <span data-ttu-id="4fd7a-374">通常，在独立于创建程序集的代码的程序集或应用程序中，会找到实例化并使用已编译的正则表达式的代码。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-374">Ordinarily, the code that instantiates and uses the compiled regular expression is found in an assembly or application that is separate from the code that creates the assembly.</span></span>  
  
 <span data-ttu-id="4fd7a-375">由于 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 方法从方法调用生成 .NET Framework 程序集，而不是使用特定语言的类定义关键字，如 c # 中的 (`class` 或 `Class` ... `End Class` 在 Visual Basic) 中，它不允许使用开发语言的标准特性语法将 .NET Framework 特性分配给程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-375">Because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates a .NET Framework assembly from a method call instead of using a particular language's class definition keyword (such as `class` in C# or `Class`...`End Class` in Visual Basic), it does not allow .NET Framework attributes to be assigned to the assembly by using the development language's standard attribute syntax.</span></span> <span data-ttu-id="4fd7a-376">`attributes`参数提供了一种替代方法，用于定义应用于程序集的特性。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-376">The `attributes` parameter provides an alternative method for defining the attributes that apply to the assembly.</span></span> <span data-ttu-id="4fd7a-377">对于要应用于程序集的每个属性，请执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-377">For each attribute that you want to apply to the assembly, do the following:</span></span>  
  
1.  <span data-ttu-id="4fd7a-378">创建对象的数组，这些 <xref:System.Type> 对象表示要调用的特性构造函数的参数类型。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-378">Create an array of <xref:System.Type> objects representing the parameter types of the attribute constructor that you want to call.</span></span>  
  
2.  <span data-ttu-id="4fd7a-379">检索一个 <xref:System.Type> 对象，该对象表示要应用于新程序集的特性类。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-379">Retrieve a <xref:System.Type> object representing the attribute class that you want to apply to the new assembly.</span></span>  
  
3.  <span data-ttu-id="4fd7a-380">调用 <xref:System.Type.GetConstructor%2A> attribute 对象的方法 <xref:System.Type> 以检索一个对象，该 <xref:System.Reflection.ConstructorInfo> 对象表示要调用的特性构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-380">Call the <xref:System.Type.GetConstructor%2A> method of the attribute <xref:System.Type> object to retrieve a <xref:System.Reflection.ConstructorInfo> object representing the attribute constructor that you want to call.</span></span> <span data-ttu-id="4fd7a-381"><xref:System.Type.GetConstructor%2A>向方法传递 <xref:System.Type> 表示构造函数的参数类型的对象数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-381">Pass the <xref:System.Type.GetConstructor%2A> method the array of <xref:System.Type> objects that represents the constructor's parameter types.</span></span>  
  
4.  <span data-ttu-id="4fd7a-382">创建一个 <xref:System.Object> 数组，该数组定义要传递给该特性的构造函数的参数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-382">Create a <xref:System.Object> array that defines the parameters to pass to the attribute's constructor.</span></span>  
  
5.  <span data-ttu-id="4fd7a-383"><xref:System.Reflection.Emit.CustomAttributeBuilder>通过将对象的构造函数传递给在第 <xref:System.Reflection.ConstructorInfo> 3 步中检索的对象以及 <xref:System.Object> 在步骤4中创建的数组来实例化对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-383">Instantiate a <xref:System.Reflection.Emit.CustomAttributeBuilder> object by passing its constructor the <xref:System.Reflection.ConstructorInfo> object retrieved in step 3 and the <xref:System.Object> array created in step 4.</span></span>  
  
 <span data-ttu-id="4fd7a-384">然后，可以将这些对象的数组 <xref:System.Reflection.Emit.CustomAttributeBuilder> （而非参数）传递 `attributes` 给 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D)?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-384">You can then pass an array of these <xref:System.Reflection.Emit.CustomAttributeBuilder> objects instead of the `attributes` parameter to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D)?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-385">下面的示例创建一个名为 RegexLib.dll 的程序集，并将该特性应用于该程序集 <xref:System.Reflection.AssemblyTitleAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-385">The following example creates an assembly named RegexLib.dll and applies the <xref:System.Reflection.AssemblyTitleAttribute> attribute to it.</span></span> <span data-ttu-id="4fd7a-386">程序集包括两个已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-386">The assembly includes two compiled regular expressions.</span></span> <span data-ttu-id="4fd7a-387">第一个是， `Utilities.RegularExpressions.DuplicatedString` 匹配两个相同的连续单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-387">The first, `Utilities.RegularExpressions.DuplicatedString`, matches two identical contiguous words.</span></span> <span data-ttu-id="4fd7a-388">第二个 `Utilities.RegularExpressions.EmailAddress` 检查字符串的格式是否正确，是否为电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-388">The second, `Utilities.RegularExpressions.EmailAddress`, checks whether a string has the correct format to be an email address.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile3.vb#3)]  
  
 <span data-ttu-id="4fd7a-389">可以 <xref:System.Reflection.AssemblyTitleAttribute> 通过使用类型为的反射实用程序来检查程序集是否已应用于该程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-389">You can verify that the <xref:System.Reflection.AssemblyTitleAttribute> attribute has been applied to the assembly by examining its manifest with a reflection utility such as ILDasm.</span></span>  
  
 <span data-ttu-id="4fd7a-390">然后，使用正则表达式来检查字符串中是否存在重复的单词，并将其用于以下示例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-390">The regular expression that checks a string for duplicate words is then instantiated and used by the following example.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/cs/Compile2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.CompileToAssembly#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.CompileToAssembly/vb/Compile2.vb#2)]  
  
 <span data-ttu-id="4fd7a-391">成功编译第二个示例需要引用 RegexLib.dll () 添加到项目中的第一个示例所创建的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-391">Successful compilation of this second example requires a reference to RegexLib.dll (the assembly created by the first example) to be added to the project.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-392"><paramref name="assemblyname" /> 参数的 <see cref="P:System.Reflection.AssemblyName.Name" /> 属性值是一个空字符串或 null。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-392">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.</span></span>  
  
<span data-ttu-id="4fd7a-393">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-393">-or-</span></span> 
<span data-ttu-id="4fd7a-394"><paramref name="regexinfos" /> 中的一个或多个对象的正则表达式模式包含无效语法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-394">The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-395"><paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-395"><paramref name="assemblyname" /> or <paramref name="regexinfos" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="4fd7a-396">仅限 .NET 5 及更高版本和 .NET Core：不支持创建已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-396">.NET 5+ and .NET Core only: Creating an assembly of compiled regular expressions is not supported.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-397">如果要在 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 安装了或其单点版本的系统上进行开发，则需要 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 以为目标，并使用 <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> 方法创建包含已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-397">If you are developing on a system that has [!INCLUDE[net_v45](~/includes/net-v45-md.md)] or its point releases installed, you target [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], and you use the <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> method to create an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="4fd7a-398">尝试在已引发异常的系统上，使用该程序集中的某个正则表达式 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-398">Trying to use one of the regular expressions in that assembly on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] throws an exception.</span></span> <span data-ttu-id="4fd7a-399">若要解决此问题，可执行下列操作之一：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-399">To work around this problem, you can do either of the following:</span></span> 
<span data-ttu-id="4fd7a-400">-在 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 安装了而不是更高版本的系统上生成包含已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-400">-   Build the assembly that contains the compiled regular expressions on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] instead of later versions installed.</span></span>  
  
<span data-ttu-id="4fd7a-401">-在 <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> <see cref="T:System.Text.RegularExpressions.Regex" /> <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> 实例化 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象或调用正则表达式模式匹配方法时，请使用带有选项的静态方法或实例方法，而不是从程序集调用和检索已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-401">-   Instead of calling <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> and retrieving the compiled regular expression from an assembly, use either static or instance <see cref="T:System.Text.RegularExpressions.Regex" /> methods with the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option when you instantiate a <see cref="T:System.Text.RegularExpressions.Regex" /> object or call a regular expression pattern matching method.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/compilation-and-reuse-in-regular-expressions"><span data-ttu-id="4fd7a-402">编译和重复使用</span><span class="sxs-lookup"><span data-stu-id="4fd7a-402">Compilation and Reuse</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompileToAssembly">
      <MemberSignature Language="C#" Value="public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname, System.Reflection.Emit.CustomAttributeBuilder[]? attributes, string? resourceFile);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompileToAssembly(class System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, class System.Reflection.AssemblyName assemblyname, class System.Reflection.Emit.CustomAttributeBuilder[] attributes, string resourceFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CompileToAssembly (regexinfos As RegexCompilationInfo(), assemblyname As AssemblyName, attributes As CustomAttributeBuilder(), resourceFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompileToAssembly(cli::array &lt;System::Text::RegularExpressions::RegexCompilationInfo ^&gt; ^ regexinfos, System::Reflection::AssemblyName ^ assemblyname, cli::array &lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ attributes, System::String ^ resourceFile);" />
      <MemberSignature Language="F#" Value="static member CompileToAssembly : System.Text.RegularExpressions.RegexCompilationInfo[] * System.Reflection.AssemblyName * System.Reflection.Emit.CustomAttributeBuilder[] * string -&gt; unit" Usage="System.Text.RegularExpressions.Regex.CompileToAssembly (regexinfos, assemblyname, attributes, resourceFile)" />
      <MemberSignature Language="C#" Value="public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname, System.Reflection.Emit.CustomAttributeBuilder[] attributes, string resourceFile);" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regexinfos" Type="System.Text.RegularExpressions.RegexCompilationInfo[]" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="assemblyname" Type="System.Reflection.AssemblyName" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="attributes" Type="System.Reflection.Emit.CustomAttributeBuilder[]" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="resourceFile" Type="System.String" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="regexinfos"><span data-ttu-id="4fd7a-403">描述要编译的正则表达式的数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-403">An array that describes the regular expressions to compile.</span></span></param>
        <param name="assemblyname"><span data-ttu-id="4fd7a-404">程序集的文件名。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-404">The file name of the assembly.</span></span></param>
        <param name="attributes"><span data-ttu-id="4fd7a-405">定义要应用于程序集的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-405">An array that defines the attributes to apply to the assembly.</span></span></param>
        <param name="resourceFile"><span data-ttu-id="4fd7a-406">要包含在程序集中的 Win32 资源文件的名称。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-406">The name of the Win32 resource file to include in the assembly.</span></span></param>
        <summary><span data-ttu-id="4fd7a-407">将一个或多个指定的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象和一个指定的资源文件编译为具有指定特性的命名程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-407">Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects and a specified resource file to a named assembly with the specified attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-408"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D,System.String)>方法生成一个 .NET Framework 程序集，其中在数组中定义的每个正则表达式 `regexinfos` 由一个类表示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-408">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D,System.String)> method generates a .NET Framework assembly in which each regular expression defined in the `regexinfos` array is represented by a class.</span></span> <span data-ttu-id="4fd7a-409">通常， <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D,System.String)> 方法是从生成已编译的正则表达式的程序集的单独的应用程序中调用的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-409">Typically, the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D,System.String)> method is called from a separate application that generates an assembly of compiled regular expressions.</span></span> <span data-ttu-id="4fd7a-410">程序集中包含的每个正则表达式具有以下特征：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-410">Each regular expression included in the assembly has the following characteristics:</span></span>  
  
-   <span data-ttu-id="4fd7a-411">它派生自 <xref:System.Text.RegularExpressions.Regex> 类。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-411">It is derived from the <xref:System.Text.RegularExpressions.Regex> class.</span></span>  
  
-   <span data-ttu-id="4fd7a-412">为它分配由 `fullnamespace` 其对应对象的和参数定义的完全限定名称 `name` <xref:System.Text.RegularExpressions.RegexCompilationInfo> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-412">It is assigned the fully qualified name that is defined by the `fullnamespace` and `name` parameters of its corresponding <xref:System.Text.RegularExpressions.RegexCompilationInfo> object.</span></span>  
  
-   <span data-ttu-id="4fd7a-413">它具有默认 (或无参数) 构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-413">It has a default (or parameterless) constructor.</span></span>  
  
 <span data-ttu-id="4fd7a-414">通常，在独立于创建程序集的代码的程序集或应用程序中，会找到实例化并使用已编译的正则表达式的代码。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-414">Ordinarily, the code that instantiates and uses the compiled regular expression is found in an assembly or application that is separate from the code that creates the assembly.</span></span>  
  
 <span data-ttu-id="4fd7a-415">由于 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 方法从方法调用生成 .NET Framework 程序集，而不是使用特定语言的类定义关键字，如 c # 中的 (`class` 或 `Class` ... `End Class` 在 Visual Basic) 中，它不允许使用开发语言的标准特性语法将 .NET Framework 特性分配给程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-415">Because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates a .NET Framework assembly from a method call instead of using a particular language's class definition keyword (such as `class` in C# or `Class`...`End Class` in Visual Basic), it does not allow .NET Framework attributes to be assigned to the assembly by using the development language's standard attribute syntax.</span></span> <span data-ttu-id="4fd7a-416">`attributes`参数提供了一种替代方法，用于定义应用于程序集的特性。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-416">The `attributes` parameter provides an alternative method for defining the attributes that apply to the assembly.</span></span> <span data-ttu-id="4fd7a-417">对于要应用于程序集的每个属性，请执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-417">For each attribute that you want to apply to the assembly, do the following:</span></span>  
  
1.  <span data-ttu-id="4fd7a-418">创建对象的数组，这些 <xref:System.Type> 对象表示要调用的特性构造函数的参数类型。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-418">Create an array of <xref:System.Type> objects representing the parameter types of the attribute constructor that you want to call.</span></span>  
  
2.  <span data-ttu-id="4fd7a-419">检索一个 <xref:System.Type> 对象，该对象表示要应用于新程序集的特性类。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-419">Retrieve a <xref:System.Type> object representing the attribute class that you want to apply to the new assembly.</span></span>  
  
3.  <span data-ttu-id="4fd7a-420">调用 <xref:System.Type.GetConstructor%2A> attribute 对象的方法 <xref:System.Type> 以检索一个对象，该 <xref:System.Reflection.ConstructorInfo> 对象表示要调用的特性构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-420">Call the <xref:System.Type.GetConstructor%2A> method of the attribute <xref:System.Type> object to retrieve a <xref:System.Reflection.ConstructorInfo> object representing the attribute constructor that you want to call.</span></span> <span data-ttu-id="4fd7a-421"><xref:System.Type.GetConstructor%2A>向方法传递 <xref:System.Type> 表示构造函数的参数类型的对象数组</span><span class="sxs-lookup"><span data-stu-id="4fd7a-421">Pass the <xref:System.Type.GetConstructor%2A> method the array of <xref:System.Type> objects that represents the constructor's parameter types</span></span>  
  
4.  <span data-ttu-id="4fd7a-422">创建一个 <xref:System.Object> 数组，该数组定义要传递给该特性的构造函数的参数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-422">Create a <xref:System.Object> array that defines the parameters to pass to the attribute's constructor.</span></span>  
  
5.  <span data-ttu-id="4fd7a-423"><xref:System.Reflection.Emit.CustomAttributeBuilder>通过将对象的构造函数传递给在第 <xref:System.Reflection.ConstructorInfo> 3 步中检索的对象以及 <xref:System.Object> 在步骤4中创建的数组来实例化对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-423">Instantiate a <xref:System.Reflection.Emit.CustomAttributeBuilder> object by passing its constructor the <xref:System.Reflection.ConstructorInfo> object retrieved in step 3 and the <xref:System.Object> array created in step 4.</span></span>  
  
 <span data-ttu-id="4fd7a-424">然后，可以将这些对象的数组 <xref:System.Reflection.Emit.CustomAttributeBuilder> （而非参数）传递 `attributes` 给 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D,System.String)> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-424">You can then pass an array of these <xref:System.Reflection.Emit.CustomAttributeBuilder> objects instead of the `attributes` parameter to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo%5B%5D,System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder%5B%5D,System.String)> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-425"><paramref name="assemblyname" /> 参数的 <see cref="P:System.Reflection.AssemblyName.Name" /> 属性值是一个空字符串或 null。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-425">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.</span></span>  
  
<span data-ttu-id="4fd7a-426">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-426">-or-</span></span> 
<span data-ttu-id="4fd7a-427"><paramref name="regexinfos" /> 中的一个或多个对象的正则表达式模式包含无效语法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-427">The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-428"><paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-428"><paramref name="assemblyname" /> or <paramref name="regexinfos" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="4fd7a-429"><paramref name="resourceFile" /> 参数指定了无效的 Win32 资源文件。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-429">The <paramref name="resourceFile" /> parameter designates an invalid Win32 resource file.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="4fd7a-430">找不到 <paramref name="resourceFile" /> 参数指定的文件。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-430">The file designated by the <paramref name="resourceFile" /> parameter cannot be found.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="4fd7a-431">仅限 .NET 5 及更高版本和 .NET Core：不支持创建已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-431">.NET 5+ and .NET Core only: Creating an assembly of compiled regular expressions is not supported.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-432">如果要在 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 安装了或其单点版本的系统上进行开发，则需要 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 以为目标，并使用 <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> 方法创建包含已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-432">If you are developing on a system that has [!INCLUDE[net_v45](~/includes/net-v45-md.md)] or its point releases installed, you target [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], and you use the <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> method to create an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="4fd7a-433">尝试在已引发异常的系统上，使用该程序集中的某个正则表达式 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-433">Trying to use one of the regular expressions in that assembly on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] throws an exception.</span></span> <span data-ttu-id="4fd7a-434">若要解决此问题，可执行下列操作之一：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-434">To work around this problem, you can do either of the following:</span></span> 
<span data-ttu-id="4fd7a-435">-在 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 安装了而不是更高版本的系统上生成包含已编译的正则表达式的程序集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-435">-   Build the assembly that contains the compiled regular expressions on a system that has [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] instead of later versions installed.</span></span>  
  
<span data-ttu-id="4fd7a-436">-在 <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> <see cref="T:System.Text.RegularExpressions.Regex" /> <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> 实例化 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象或调用正则表达式模式匹配方法时，请使用带有选项的静态方法或实例方法，而不是从程序集调用和检索已编译的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-436">-   Instead of calling <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> and retrieving the compiled regular expression from an assembly, use either static or instance <see cref="T:System.Text.RegularExpressions.Regex" /> methods with the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option when you instantiate a <see cref="T:System.Text.RegularExpressions.Regex" /> object or call a regular expression pattern matching method.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/compilation-and-reuse-in-regular-expressions"><span data-ttu-id="4fd7a-437">编译和重复使用</span><span class="sxs-lookup"><span data-stu-id="4fd7a-437">Compilation and Reuse</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Text.RegularExpressions.Regex.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="4fd7a-438">包含要转换的文本的输入字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-438">The input string that contains the text to convert.</span></span></param>
        <summary><span data-ttu-id="4fd7a-439">通过替换为转义码来转义最小的字符集（\\、\*、+、?、|、{、[、(、)、^、$、.、# 和空白）。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-439">Escapes a minimal set of characters (\\, \*, +, ?, |, {, [, (,), ^, $, ., #, and white space) by replacing them with their escape codes.</span></span> <span data-ttu-id="4fd7a-440">这将指示正则表达式引擎按原义解释这些字符而不是解释为元字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-440">This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-441">由转换为转义形式的元字符组成的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-441">A string of characters with metacharacters converted to their escaped form.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-442"><xref:System.Text.RegularExpressions.Regex.Escape%2A> 转换字符串，以便正则表达式引擎会将它可能包含的任何元字符解释为字符文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-442"><xref:System.Text.RegularExpressions.Regex.Escape%2A> converts a string so that the regular expression engine will interpret any metacharacters that it may contain as character literals.</span></span> <span data-ttu-id="4fd7a-443">例如，请考虑一个正则表达式，该表达式旨在提取由直接左括号和右括号分隔的注释， ( [和] 从文本 ) 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-443">For example, consider a regular expression that is designed to extract comments that are delimited by straight opening and closing brackets ([ and ]) from text.</span></span> <span data-ttu-id="4fd7a-444">在下面的示例中，正则表达式 "[ (. \*？ ) ]" 被解释为字符类。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-444">In the following example, the regular expression "[(.\*?)]" is interpreted as a character class.</span></span> <span data-ttu-id="4fd7a-445">正则表达式匹配每个左括号或右括号、句点、星号或问号，而不是匹配输入文本中嵌入的注释。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-445">Rather than matching comments embedded in the input text, the regular expression matches each opening or closing parenthesis, period, asterisk, or question mark.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Escape#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/cs/Escape1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Escape#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/vb/Escape1.vb#1)]  
  
 <span data-ttu-id="4fd7a-446">但是，如果通过将左大括号传递给方法对其进行转义 <xref:System.Text.RegularExpressions.Regex.Escape%2A> ，则正则表达式成功匹配嵌入到输入字符串中的注释。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-446">However, if the opening bracket is escaped by passing it to the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method, the regular expression succeeds in matching comments that are embedded in the input string.</span></span> <span data-ttu-id="4fd7a-447">下面的示例对此进行了演示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-447">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Escape#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/cs/Escape1.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Regex.Escape#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/vb/Escape1.vb#2)]  
  
 <span data-ttu-id="4fd7a-448">在使用静态文本定义的正则表达式中，通过在其前面加上反斜杠符号（ (\\) ，以及通过调用方法），可以转义要按原义解释的字符而不是作为元字符的字符 <xref:System.Text.RegularExpressions.Regex.Escape%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-448">In a regular expression that is defined by using static text, characters that are to be interpreted literally rather than as metacharacters can be escaped by preceding them with a backslash symbol (\\) as well as by calling the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method.</span></span> <span data-ttu-id="4fd7a-449">在使用设计时未知的字符动态定义的正则表达式中，调用 <xref:System.Text.RegularExpressions.Regex.Escape%2A> 方法对于确保正则表达式引擎将单个字符解释为文本而不是作为元字符非常重要。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-449">In a regular expression that is defined dynamically using characters that are not known at design time, calling the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method is particularly important to ensure that the regular expression engine interprets individual characters as literals rather than as metacharacters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fd7a-450">如果正则表达式模式包含数字符号 ( # ) 或文本空白字符，则如果在启用选项的情况下分析输入文本，则必须对这些字符进行转义 <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-450">If a regular expression pattern includes either the number sign (#) or literal white-space characters, they must be escaped if input text is parsed with the <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> option enabled.</span></span>  
  
 <span data-ttu-id="4fd7a-451">虽然<xref:System.Text.RegularExpressions.Regex.Escape%2A>方法可转义直接打开方括号 ([)，并打开大括号 （{） 字符，它未转义其对应的结束字符 (] 和})。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-451">While the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method escapes the straight opening bracket ([) and opening brace ({) characters, it does not escape their corresponding closing characters (] and }).</span></span> <span data-ttu-id="4fd7a-452">在大多数情况下，不需要进行转义。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-452">In most cases, escaping these is not necessary.</span></span> <span data-ttu-id="4fd7a-453">如果右大括号或大括号前面没有相应的开始字符，则正则表达式引擎将按原义解释它。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-453">If a closing bracket or brace is not preceded by its corresponding opening character, the regular expression engine interprets it literally.</span></span> <span data-ttu-id="4fd7a-454">如果左大括号或大括号解释为元字符，则正则表达式引擎会将第一个对应的结束字符解释为元字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-454">If an opening bracket or brace is interpreted as a metacharacter, the regular expression engine interprets the first corresponding closing character as a metacharacter.</span></span> <span data-ttu-id="4fd7a-455">如果这不是所需的行为，则应通过显式地将反斜杠 () 字符来转义右大括号或大括号 \\ 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-455">If this is not the desired behavior, the closing bracket or brace should be escaped by explicitly prepending the backslash (\\) character.</span></span> <span data-ttu-id="4fd7a-456">有关说明，请参阅 "示例" 部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-456">For an illustration, see the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-457">下面的示例从文本中提取注释。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-457">The following example extracts comments from text.</span></span> <span data-ttu-id="4fd7a-458">它假定注释由开始注释符号和用户选择的结束注释符号分隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-458">It assumes that the comments are delimited by a begin comment symbol and an end comment symbol that is selected by the user.</span></span> <span data-ttu-id="4fd7a-459">由于注释符号按字面解释，因此传递给 <xref:System.Text.RegularExpressions.Regex.Escape%2A> 方法以确保它们不会被错误地解释为元字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-459">Because the comment symbols are to be interpreted literally, they are passed to the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method to ensure that they cannot be misinterpreted as metacharacters.</span></span> <span data-ttu-id="4fd7a-460">此外，该示例显式检查用户输入的结束注释符号是否为右方括号 (] ) 或大括号 (} ) 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-460">In addition, the example explicitly checks whether the end comment symbol entered by the user is a closing bracket (]) or brace (}).</span></span> <span data-ttu-id="4fd7a-461">如果为，则在括号或大括号前面加上一个反斜杠字符 (\\) ，以便按原义解释该字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-461">If it is, a backslash character (\\) is prepended to the bracket or brace so that it is interpreted literally.</span></span> <span data-ttu-id="4fd7a-462">请注意，此示例还使用 <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> 集合仅显示注释，而不是显示注释以及其开始和结束注释符号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-462">Note that the example also uses the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> collection to display the comment only, rather than the comment together with its opening and closing comment symbols.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Escape#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/cs/Escape3.cs#3)]
 [!code-vb[System.Text.RegularExpressions.Regex.Escape#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Escape/vb/Escape3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-463"><paramref name="str" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-463"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Text.RegularExpressions.Regex.Unescape(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-464">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-464">Regular Expression Language - Quick Reference</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/character-escapes-in-regular-expressions"><span data-ttu-id="4fd7a-465">正则表达式中的字符转义</span><span class="sxs-lookup"><span data-stu-id="4fd7a-465">Character Escapes in Regular Expressions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="factory">
      <MemberSignature Language="C#" Value="protected internal System.Text.RegularExpressions.RegexRunnerFactory? factory;" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly class System.Text.RegularExpressions.RegexRunnerFactory factory" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.factory" />
      <MemberSignature Language="VB.NET" Value="Protected Friend factory As RegexRunnerFactory " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Text::RegularExpressions::RegexRunnerFactory ^ factory;" />
      <MemberSignature Language="F#" Value="val mutable factory : System.Text.RegularExpressions.RegexRunnerFactory" Usage="System.Text.RegularExpressions.Regex.factory" />
      <MemberSignature Language="C#" Value="protected internal System.Text.RegularExpressions.RegexRunnerFactory factory;" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexRunnerFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-466">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-466">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Regex ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Regex ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="regex.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fd7a-467">此成员替代 <see cref="M:System.Object.Finalize" /> 且该主题可能包括更完整的文档。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-467">This member overrides <see cref="M:System.Object.Finalize" />, and more complete documentation might be available in that topic.</span></span>

<span data-ttu-id="4fd7a-468">允许 <see cref="T:System.Object" /> 在"垃圾回收"回收 <see cref="T:System.Object" /> 之前尝试释放资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-468">Allows an <see cref="T:System.Object" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Object" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGroupNames">
      <MemberSignature Language="C#" Value="public string[] GetGroupNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetGroupNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GetGroupNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGroupNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetGroupNames();" />
      <MemberSignature Language="F#" Value="member this.GetGroupNames : unit -&gt; string[]" Usage="regex.GetGroupNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fd7a-469">返回正则表达式的捕获组名数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-469">Returns an array of capturing group names for the regular expression.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-470">组名的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-470">A string array of group names.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-471">组名的集合包含用于对表达式中的捕获组进行命名的字符串集。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-471">The collection of group names contains the set of strings used to name capturing groups in the expression.</span></span> <span data-ttu-id="4fd7a-472">即使捕获组未显式命名，它们也会自动分配数字名称 ( "0"、"1"、"2"、"3" 等) 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-472">Even if capturing groups are not explicitly named, they are automatically assigned numerical names ("0", "1", "2", "3", and so on).</span></span> <span data-ttu-id="4fd7a-473">"0" 命名组表示由正则表达式模式匹配的所有文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-473">The "0" named group represents all text matched by the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-474">编号组位于集合中的显式命名组之前，命名组按其在正则表达式模式中定义的顺序出现。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-474">Numbered groups precede explicitly named groups in the collection, and named groups appear in the order in which they are defined in the regular expression pattern.</span></span>  
  
 <span data-ttu-id="4fd7a-475">您可以使用 <xref:System.Array.Length%2A> 此方法返回的数组中的属性来确定正则表达式中的组数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-475">You can use the <xref:System.Array.Length%2A> property on the array returned by this method to determine the number of groups in a regular expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-476">下面的示例定义了一个常规用途 `ShowMatches` 方法，该方法显示正则表达式组的名称及其匹配文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-476">The following example defines a general-purpose `ShowMatches` method that displays the names of regular expression groups and their matched text.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnames/cs/getgroupnames1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnames/vb/getgroupnames1.vb" id="Snippet1":::
  
 <span data-ttu-id="4fd7a-477">在这种情况下，正则表达式模式 `\b(?<FirstWord>\w+)\s?((\w+)\s)*(?<LastWord>\w+)?(?<Punctuation>\p{Po})` 旨在分析简单的句子，并识别它的第一个单词、上一个词和结束标点符号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-477">In this case, the regular expression pattern `\b(?<FirstWord>\w+)\s?((\w+)\s)*(?<LastWord>\w+)?(?<Punctuation>\p{Po})` is intended to parse a simple sentence, and to identify its first word, last word, and ending punctuation mark.</span></span> <span data-ttu-id="4fd7a-478">下表显示了如何解释正则表达式模式：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-478">The following table shows how the regular expression pattern is interpreted:</span></span>  
  
|<span data-ttu-id="4fd7a-479">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-479">Pattern</span></span>|<span data-ttu-id="4fd7a-480">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-480">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="4fd7a-481">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-481">Begin the match at a word boundary.</span></span>|  
|`(?<FirstWord>\w+)`|<span data-ttu-id="4fd7a-482">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-482">Match one or more word characters.</span></span> <span data-ttu-id="4fd7a-483">这是 `FirstWord` 命名组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-483">This is the `FirstWord` named group.</span></span>|  
|<span data-ttu-id="4fd7a-484">\s?</span><span class="sxs-lookup"><span data-stu-id="4fd7a-484">\s?</span></span>|<span data-ttu-id="4fd7a-485">匹配零个或一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-485">Match zero or one white-space characters.</span></span>|  
|<span data-ttu-id="4fd7a-486">(\w+)</span><span class="sxs-lookup"><span data-stu-id="4fd7a-486">(\w+)</span></span>|<span data-ttu-id="4fd7a-487">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-487">Match one or more word characters.</span></span> <span data-ttu-id="4fd7a-488">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-488">This is the second capturing group.</span></span>|  
|<span data-ttu-id="4fd7a-489">\s</span><span class="sxs-lookup"><span data-stu-id="4fd7a-489">\s</span></span>|<span data-ttu-id="4fd7a-490">与空白字符匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-490">Match a white-space character.</span></span>|  
|<span data-ttu-id="4fd7a-491"> ( ( \w +) \s)\ *</span><span class="sxs-lookup"><span data-stu-id="4fd7a-491">((\w+)\s)\*</span></span>|<span data-ttu-id="4fd7a-492">匹配一个或多个单词字符后跟一个空格的零个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-492">Match zero or more occurrences of one or more word characters followed by a white space.</span></span> <span data-ttu-id="4fd7a-493">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-493">This is the first capturing group.</span></span>|  
|<span data-ttu-id="4fd7a-494"> (？ \<LastWord>\w +) ？</span><span class="sxs-lookup"><span data-stu-id="4fd7a-494">(?\<LastWord>\w+)?</span></span>|<span data-ttu-id="4fd7a-495">匹配一个或多个单词字符的零个或一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-495">Match zero or one occurrence of one or more word characters.</span></span> <span data-ttu-id="4fd7a-496">这是 `LastWord` 命名组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-496">This is the `LastWord` named group.</span></span>|  
|<span data-ttu-id="4fd7a-497"> (？ \<Punctuation>\p{Po} ) </span><span class="sxs-lookup"><span data-stu-id="4fd7a-497">(?\<Punctuation>\p{Po})</span></span>|<span data-ttu-id="4fd7a-498">匹配 Unicode 类别为标点符号的字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-498">Match a character whose Unicode category is Punctuation, Other.</span></span> <span data-ttu-id="4fd7a-499">这是 `Punctuation` 命名组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-499">This is the `Punctuation` named group.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
        <related type="Article" href="/dotnet/standard/base-types/grouping-constructs-in-regular-expressions"><span data-ttu-id="4fd7a-500">正则表达式中的分组构造</span><span class="sxs-lookup"><span data-stu-id="4fd7a-500">Grouping Constructs in Regular Expressions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetGroupNumbers">
      <MemberSignature Language="C#" Value="public int[] GetGroupNumbers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetGroupNumbers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GetGroupNumbers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGroupNumbers () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetGroupNumbers();" />
      <MemberSignature Language="F#" Value="member this.GetGroupNumbers : unit -&gt; int[]" Usage="regex.GetGroupNumbers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fd7a-501">返回与数组中的组名相对应的捕获组号的数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-501">Returns an array of capturing group numbers that correspond to group names in an array.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-502">组号的整数数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-502">An integer array of group numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-503">未命名的捕获组和命名捕获组都可按编号访问。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-503">Both unnamed and named capturing groups can be accessed by number.</span></span> <span data-ttu-id="4fd7a-504">未命名的组从1开始从左到右进行编号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-504">Unnamed groups are numbered from left to right starting with 1.</span></span> <span data-ttu-id="4fd7a-505"> (索引0中的捕获组 (零) 表示整个匹配项 ) 。然后从左到右对命名组进行编号，以大于未命名捕获组数的数字开头。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-505">(The capturing group in index 0 (zero) represents the match as a whole.)  Named groups are then numbered from left to right starting with a number that is one greater than the number of unnamed capturing groups.</span></span>  
  
 <span data-ttu-id="4fd7a-506">按其编号而不是按字符串名称引用组可以提供更快的访问速度。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-506">Referencing a group by its number instead of by string name can provide faster access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-507">下面的示例定义了与句子匹配的正则表达式 `\b((?<word>\w+)\s*)+(?<end>[.?!])` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-507">The following example defines a regular expression, `\b((?<word>\w+)\s*)+(?<end>[.?!])`, that matches a sentence.</span></span> <span data-ttu-id="4fd7a-508">正则表达式包括三个捕获组：一个未命名组，用于捕获单独的单词，还包含一个可跟随的空格字符;名为 `word` 的组，用于捕获句子中的各个单词; 名为的组， `end` 用于捕获结束句子的标点。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-508">The regular expression includes three capturing groups: an unnamed group that captures an individual word along with a space character that may follow it; a group named `word` that captures the individual words in the sentence; and a group named `end` that captures the punctuation that ends the sentence.</span></span> <span data-ttu-id="4fd7a-509">该示例调用 <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A> 方法以获取所有捕获组的数目，然后显示其捕获的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-509">The example calls the <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A> method to get the numbers of all capturing groups, and then displays their captured string.</span></span> <span data-ttu-id="4fd7a-510">此外， <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> 方法用于指示特定编号组是否对应于命名组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-510">In addition, the <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> method is used to indicate whether a particular numbered group corresponds to a named group.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnumbers/cs/getgroupnumbers1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.getgroupnumbers/vb/getgroupnumbers1.vb" id="Snippet1":::
  
 <span data-ttu-id="4fd7a-511">正则表达式模式可以解释为下表中所示内容。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-511">The regular expression pattern is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-512">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-512">Pattern</span></span>|<span data-ttu-id="4fd7a-513">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-513">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="4fd7a-514">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-514">Begin the match at a word boundary.</span></span>|  
|`(?<word>\w+)`|<span data-ttu-id="4fd7a-515">匹配一个或多个单词字符，并将匹配的字符串分配给名为的组 `word` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-515">Match one or more word characters and assign the matched strings to a group named `word`.</span></span>|  
|`\s*`|<span data-ttu-id="4fd7a-516">匹配零个或多个空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-516">Match zero or more white-space characters.</span></span>|  
|`((?<word>\w+)\s*)`|<span data-ttu-id="4fd7a-517">将 `word` 后跟任何捕获的空白字符的捕获组分配给第一个捕获的组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-517">Assign the `word` captured group followed by any captured white-space characters to the first captured group.</span></span>|  
|`((?<word>\w+)\s*)+`|<span data-ttu-id="4fd7a-518">一次或多次匹配一个或多个单词字符后跟任意空白字符的模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-518">Match the pattern of one or more word characters followed by any white-space characters one or more times.</span></span>|  
|`(?<end>[.?!])`|<span data-ttu-id="4fd7a-519">匹配句号、问号或感叹号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-519">Match a period, question mark, or exclamation point.</span></span> <span data-ttu-id="4fd7a-520">将匹配的字符分配给 `end` 捕获组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-520">Assign the matched character to the `end` capturing group.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
        <related type="Article" href="/dotnet/standard/base-types/grouping-constructs-in-regular-expressions"><span data-ttu-id="4fd7a-521">正则表达式中的分组构造</span><span class="sxs-lookup"><span data-stu-id="4fd7a-521">Grouping Constructs in Regular Expressions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupNameFromNumber">
      <MemberSignature Language="C#" Value="public string GroupNameFromNumber (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GroupNameFromNumber(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupNameFromNumber (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GroupNameFromNumber(int i);" />
      <MemberSignature Language="F#" Value="member this.GroupNameFromNumber : int -&gt; string" Usage="regex.GroupNameFromNumber i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="4fd7a-522">要转换为相应组名的组号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-522">The group number to convert to the corresponding group name.</span></span></param>
        <summary><span data-ttu-id="4fd7a-523">获取与指定组号相对应的组名。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-523">Gets the group name that corresponds to the specified group number.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-524">包含与指定组号关联的组名的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-524">A string that contains the group name associated with the specified group number.</span></span> <span data-ttu-id="4fd7a-525">如果没有与 <paramref name="i" /> 对应的组名，此方法会返回 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-525">If there is no group name that corresponds to <paramref name="i" />, the method returns <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-526">正则表达式模式可以包含已命名或已编号的捕获组，这些组描绘了模式匹配中的子表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-526">A regular expression pattern may contain either named or numbered capturing groups, which delineate subexpressions within a pattern match.</span></span> <span data-ttu-id="4fd7a-527">编号组由 (*子表达式*) 的语法进行分隔，并根据其在正则表达式中的顺序为其赋值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-527">Numbered groups are delimited by the syntax (*subexpression*) and are assigned numbers based on their order in the regular expression.</span></span> <span data-ttu-id="4fd7a-528">命名组由语法 ( `<` 分隔：*名称* `>`*子表达式*) 或 (？ "*name*'*子表达式*) ，其中 *name* 是用于标识子表达式的名称。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-528">Named groups are delimited by the syntax (?`<`*name*`>`*subexpression*) or (?'*name*'*subexpression*), where *name* is the name by which the subexpression will be identified.</span></span> <span data-ttu-id="4fd7a-529"> (有关详细信息，请参阅 [分组构造](/dotnet/standard/base-types/grouping-constructs-in-regular-expressions)。 ) <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> 方法通过其在正则表达式中的序号位置来标识命名组和编号组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-529">(For more information, see [Grouping Constructs](/dotnet/standard/base-types/grouping-constructs-in-regular-expressions).) The <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> method identifies both named groups and numbered groups by their ordinal positions in the regular expression.</span></span> <span data-ttu-id="4fd7a-530">序号位置零始终表示整个正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-530">Ordinal position zero always represents the entire regular expression.</span></span> <span data-ttu-id="4fd7a-531">然后，在命名组之前对所有编号组进行计数，而不考虑它们在正则表达式模式中的实际位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-531">All numbered groups are then counted before named groups, regardless of their actual position in the regular expression pattern.</span></span>  
  
 <span data-ttu-id="4fd7a-532">如果 `i` 是命名组的编号，则方法返回组的名称。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-532">If `i` is the number of a named group, the method returns the name of the group.</span></span> <span data-ttu-id="4fd7a-533">如果 `i` 是未命名组的编号，则方法返回该数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-533">If `i` is the number of an unnamed group, the method returns the string representation of the number.</span></span> <span data-ttu-id="4fd7a-534">例如，如果 `i` 为1，则方法返回 "1"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-534">For example, if `i` is 1, the method returns "1".</span></span> <span data-ttu-id="4fd7a-535">如果不 `i` 是捕获组的编号，则该方法返回 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-535">If `i` is not the number of a capturing group, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4fd7a-536">如果找到了模式匹配项，则可使用此方法返回的值 <xref:System.Text.RegularExpressions.Group> 从属性中检索表示捕获的组的对象 <xref:System.Text.RegularExpressions.GroupCollection.Item%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-536">If a pattern match is found, the value returned by this method can then be used to retrieve the <xref:System.Text.RegularExpressions.Group> object that represents the captured group from the <xref:System.Text.RegularExpressions.GroupCollection.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="4fd7a-537"><xref:System.Text.RegularExpressions.GroupCollection>对象由 <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-537">The <xref:System.Text.RegularExpressions.GroupCollection> object is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-538">下面的示例定义一个正则表达式模式，该模式与包含美国城市名称、省/市/自治区名称和邮政编码的地址行匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-538">The following example defines a regular expression pattern that matches an address line containing a U.S. city name, state name, and zip code.</span></span> <span data-ttu-id="4fd7a-539">该示例使用 <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> 方法检索捕获组的名称。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-539">The example uses the <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A> method to retrieve the names of capturing groups.</span></span> <span data-ttu-id="4fd7a-540">然后，它使用这些名称检索对应的捕获组以进行匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-540">It then uses these names to retrieve the corresponding captured groups for matches.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.groupnamefromnumber/cs/groupnamefromnumberex.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.groupnamefromnumber/vb/groupnamefromnumberex.vb" id="Snippet1"::: 
  
 <span data-ttu-id="4fd7a-541">正则表达式模式由以下表达式定义：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-541">The regular expression pattern is defined by the following expression:</span></span>  
  
 `(?<city>[A-Za-z\s]+), (?<state>[A-Za-z]{2}) (?<zip>\d{5}(-\d{4})?)`  
  
 <span data-ttu-id="4fd7a-542">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-542">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="4fd7a-543">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-543">Pattern</span></span>|<span data-ttu-id="4fd7a-544">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-544">Description</span></span>|  
|-------------|-----------------|  
|`(?<city>[A-Za-z\s]+)`|<span data-ttu-id="4fd7a-545">匹配一个或多个字母或空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-545">Match one or more alphabetic or white-space character.</span></span> <span data-ttu-id="4fd7a-546">为此捕获的组指定名称 `city` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-546">Assign this captured group the name `city`.</span></span>|  
|`,`|<span data-ttu-id="4fd7a-547">匹配逗号 (，) 后跟一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-547">Match a comma (,) followed by a white-space character.</span></span>|  
|`(?<state>[A-Za-z]{2})`|<span data-ttu-id="4fd7a-548">匹配两个字母字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-548">Match two alphabetic characters.</span></span> <span data-ttu-id="4fd7a-549">为此捕获的组指定名称 `state` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-549">Assign this captured group the name `state`.</span></span> <span data-ttu-id="4fd7a-550">此组后面应跟一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-550">This group should be followed by a white-space character.</span></span>|  
|`(?<zip>\d{5}(-\d{4})?)`|<span data-ttu-id="4fd7a-551">匹配后跟零个或一个连字符后跟四位数的数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-551">Match five numeric digits followed by either zero or one occurrence of a hyphen followed by four digits.</span></span> <span data-ttu-id="4fd7a-552">为此捕获的组指定名称 `zip` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-552">Assign this captured group the name `zip`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
        <altmember cref="M:System.Text.RegularExpressions.Regex.GetGroupNumbers" />
        <related type="Article" href="/dotnet/standard/base-types/grouping-constructs-in-regular-expressions"><span data-ttu-id="4fd7a-553">正则表达式中的分组构造</span><span class="sxs-lookup"><span data-stu-id="4fd7a-553">Grouping Constructs in Regular Expressions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupNumberFromName">
      <MemberSignature Language="C#" Value="public int GroupNumberFromName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GroupNumberFromName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupNumberFromName (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GroupNumberFromName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GroupNumberFromName : string -&gt; int" Usage="regex.GroupNumberFromName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4fd7a-554">要转换为相应组号的组名。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-554">The group name to convert to the corresponding group number.</span></span></param>
        <summary><span data-ttu-id="4fd7a-555">返回与指定组名相对应的组号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-555">Returns the group number that corresponds to the specified group name.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-556">与指定组名相对应的组号，如果 <paramref name="name" /> 不是有效组名，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-556">The group number that corresponds to the specified group name, or -1 if <paramref name="name" /> is not a valid group name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-557">正则表达式模式可以包含已命名或已编号的捕获组，这些组描绘了模式匹配中的子表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-557">A regular expression pattern may contain either named or numbered capturing groups, which delineate subexpressions within a pattern match.</span></span> <span data-ttu-id="4fd7a-558">编号组由 (*子表达式*) 的语法进行分隔，并根据其在正则表达式中的顺序为其赋值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-558">Numbered groups are delimited by the syntax (*subexpression*) and are assigned numbers based on their order in the regular expression.</span></span> <span data-ttu-id="4fd7a-559">命名组由语法 ( `<` 分隔：*名称* `>`*子表达式*) 或 (？ "*name*'*子表达式*) ，其中 *name* 是用于标识子表达式的名称。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-559">Named groups are delimited by the syntax (?`<`*name*`>`*subexpression*) or (?'*name*'*subexpression*), where *name* is the name by which the subexpression will be identified.</span></span> <span data-ttu-id="4fd7a-560"> (有关详细信息，请参阅 [分组构造](/dotnet/standard/base-types/grouping-constructs-in-regular-expressions)。 ) <xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A> 方法通过其在正则表达式中的序号位置来标识命名组和编号组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-560">(For more information, see [Grouping Constructs](/dotnet/standard/base-types/grouping-constructs-in-regular-expressions).) The <xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A> method identifies both named groups and numbered groups by their ordinal positions in the regular expression.</span></span> <span data-ttu-id="4fd7a-561">序号位置零始终表示整个正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-561">Ordinal position zero always represents the entire regular expression.</span></span> <span data-ttu-id="4fd7a-562">然后，在命名组之前对所有编号组进行计数，而不考虑它们在正则表达式模式中的实际位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-562">All numbered groups are then counted before named groups, regardless of their actual position in the regular expression pattern.</span></span>  
  
 <span data-ttu-id="4fd7a-563">如果 `name` 是正则表达式模式中出现的组号的字符串表示形式，则此方法将返回该数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-563">If `name` is the string representation of a group number that is present in the regular expression pattern, the method returns that number.</span></span> <span data-ttu-id="4fd7a-564">如果 `name` 对应于正则表达式模式中存在的命名捕获组，则该方法返回其对应的数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-564">If `name` corresponds to a named capturing group that is present in the regular expression pattern, the method returns its corresponding number.</span></span> <span data-ttu-id="4fd7a-565">`name`与组名称的比较区分大小写。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-565">The comparison of `name` with the group name is case-sensitive.</span></span> <span data-ttu-id="4fd7a-566">如果与 `name` 捕获组的名称或捕获组编号的字符串表示形式不对应，则该方法将返回-1。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-566">If `name` does not correspond to the name of a capturing group or to the string representation of the number of a capturing group, the method returns -1.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-567"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-567"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Text.RegularExpressions.GroupCollection" />
        <altmember cref="M:System.Text.RegularExpressions.Regex.GetGroupNames" />
        <related type="Article" href="/dotnet/standard/base-types/grouping-constructs-in-regular-expressions"><span data-ttu-id="4fd7a-568">正则表达式中的分组构造</span><span class="sxs-lookup"><span data-stu-id="4fd7a-568">Grouping Constructs in Regular Expressions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InfiniteMatchTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteMatchTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteMatchTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteMatchTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteMatchTimeout;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteMatchTimeout : TimeSpan" Usage="System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-569">指定模式匹配操作不应超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-569">Specifies that a pattern-matching operation should not time out.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-570"><xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)>类构造函数和多个静态匹配方法使用 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout> 常数指示查找模式匹配项的尝试不会超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-570">The <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> class constructor and a number of static matching methods use the <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout> constant to indicate that the attempt to find a pattern match should not time out.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="4fd7a-571">将正则表达式引擎的超时值设置为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout> 可能会导致依赖过多回溯的正则表达式似乎在处理与正则表达式模式几乎匹配的文本时停止响应。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-571">Setting the regular expression engine's time-out value to <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout> can cause regular expressions that rely on excessive backtracking to appear to stop responding when processing text that nearly matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-572">如果禁用超时，则应确保正则表达式不依赖于过度回溯，并处理与正则表达式模式几乎匹配的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-572">If you disable time-outs, you should ensure that your regular expression does not rely on excessive backtracking and that it handles text that nearly matches the regular expression pattern.</span></span>  
>   
>  <span data-ttu-id="4fd7a-573">有关如何处理回溯的详细信息，请参阅 [回溯](/dotnet/standard/base-types/backtracking-in-regular-expressions)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-573">For more information about handling backtracking, see [Backtracking](/dotnet/standard/base-types/backtracking-in-regular-expressions).</span></span>  
  
 <span data-ttu-id="4fd7a-574"><xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout>可以将常量作为以下成员的参数值提供 `matchTimeout` ：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-574">The <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout> constant can be supplied as the value of the `matchTimeout` argument of the following members:</span></span>  
  
-   <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)>  
  
-   <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)?displayProperty=nameWithType>  
  
-   <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)>  
  
-   <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)>  
  
-   <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)>  
  
-   <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)>  
  
-   <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)>  
  
-   <xref:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.RegularExpressions.Regex.MatchTimeout" />
      </Docs>
    </Member>
    <Member MemberName="InitializeReferences">
      <MemberSignature Language="C#" Value="protected void InitializeReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.InitializeReferences" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeReferences ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeReferences();" />
      <MemberSignature Language="F#" Value="member this.InitializeReferences : unit -&gt; unit" Usage="regex.InitializeReferences " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fd7a-575">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-575">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4fd7a-576">引用已初始化。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-576">References have already been initialized.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="internalMatchTimeout">
      <MemberSignature Language="C#" Value="protected internal TimeSpan internalMatchTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly valuetype System.TimeSpan internalMatchTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.internalMatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Friend internalMatchTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="protected public: TimeSpan internalMatchTimeout;" />
      <MemberSignature Language="F#" Value="val mutable internalMatchTimeout : TimeSpan" Usage="System.Text.RegularExpressions.Regex.internalMatchTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.Serialization.OptionalField(VersionAdded=2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Serialization.OptionalField(VersionAdded=2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-577">操作超时之前在一个模式匹配操作中可以经过的最长时间。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-577">The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsMatch">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fd7a-578">指示正则表达式在输入字符串中是否找到匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-578">Indicates whether the regular expression finds a match in the input string.</span></span></summary>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-579">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-579">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public bool IsMatch (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsMatch(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsMatch (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsMatch(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.IsMatch : string -&gt; bool" Usage="regex.IsMatch input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-580">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-580">The string to search for a match.</span></span></param>
        <summary><span data-ttu-id="4fd7a-581">指示 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式在指定的输入字符串中是否找到了匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-581">Indicates whether the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor finds a match in a specified input string.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-582">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-582"><see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-583"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用于验证字符串或确保字符串符合特定模式，而不检索该字符串进行后续操作。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-583">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="4fd7a-584">如果要确定一个或多个字符串是否与正则表达式模式匹配，然后检索它们以供后续操作，请调用 <xref:System.Text.RegularExpressions.Regex.Match%2A> 或 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-584">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="4fd7a-585"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-585">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-586">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-586">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-587">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-587">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-588">下面的示例演示 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String)> 如何使用方法来确定字符串是否是有效的部件号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-588">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String)> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="4fd7a-589">正则表达式假定部件号具有特定的格式，该格式包含三组由连字符分隔的字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-589">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="4fd7a-590">包含四个字符的第一个集必须包含一个字母数字字符，后跟两个数字字符后跟一个字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-590">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="4fd7a-591">由三个字符组成的第二个集必须为数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-591">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="4fd7a-592">第三个集由四个字符组成，必须有三个数字字符后跟一个字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-592">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch2.vb" id="Snippet2":::
  
 <span data-ttu-id="4fd7a-593">正则表达式模式为：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-593">The regular expression pattern is:</span></span>  
  
```  
^[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]$  
```  
  
 <span data-ttu-id="4fd7a-594">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-594">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="4fd7a-595">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-595">Pattern</span></span>|<span data-ttu-id="4fd7a-596">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-596">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="4fd7a-597">从行的开头开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-597">Begin the match at the beginning of the line.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="4fd7a-598">匹配单个字母字符 (`a` 到 `z` 或 `A` 通过 `Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-598">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="4fd7a-599">匹配两个数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-599">Match two numeric characters.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="4fd7a-600">匹配单个字母字符 (`a` 到 `z` 或 `A` 通过 `Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-600">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`-`|<span data-ttu-id="4fd7a-601">匹配连字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-601">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="4fd7a-602">正好匹配三个数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-602">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="4fd7a-603">查找后跟三个数字字符的连字符，并匹配此模式的两个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-603">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="4fd7a-604">匹配单个字母字符 (`a` 到 `z` 或 `A` 通过 `Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-604">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`$`|<span data-ttu-id="4fd7a-605">在行的末尾结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-605">End the match at the end of the line.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-606"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-606"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-607">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-607">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-608">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-608">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-609">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-609">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public bool IsMatch (string input, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsMatch(string input, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsMatch (input As String, startat As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsMatch(System::String ^ input, int startat);" />
      <MemberSignature Language="F#" Value="member this.IsMatch : string * int -&gt; bool" Usage="regex.IsMatch (input, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-610">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-610">The string to search for a match.</span></span></param>
        <param name="startat"><span data-ttu-id="4fd7a-611">开始搜索的字符位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-611">The character position at which to start the search.</span></span></param>
        <summary><span data-ttu-id="4fd7a-612">指示 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式在指定的输入字符串中，从该字符串中的指定起始位置开始是否找到了匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-612">Indicates whether the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor finds a match in the specified input string, beginning at the specified starting position in the string.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-613">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-613"><see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-614"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用于验证字符串或确保字符串符合特定模式，而不检索该字符串进行后续操作。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-614">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="4fd7a-615">如果要确定一个或多个字符串是否与正则表达式模式匹配，然后检索它们以供后续操作，请调用 <xref:System.Text.RegularExpressions.Regex.Match%2A> 或 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-615">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="4fd7a-616"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-616">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-617">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-617">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-618">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-618">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-619">下面的示例演示 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)> 如何使用方法来确定字符串是否是有效的部件号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-619">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="4fd7a-620">它会搜索后面跟有冒号 (： ) 字符的部件号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-620">It searches for a part number that follows a colon (:) character in a string.</span></span> <span data-ttu-id="4fd7a-621"><xref:System.String.IndexOf(System.Char)>方法用于确定冒号字符的位置，然后将其传递给 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-621">The <xref:System.String.IndexOf(System.Char)> method is used to determine the position of the colon character, which is then passed to the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)> method.</span></span> <span data-ttu-id="4fd7a-622">正则表达式假定部件号具有特定的格式，该格式包含三组由连字符分隔的字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-622">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="4fd7a-623">包含四个字符的第一个集必须包含一个字母数字字符，后跟两个数字字符后跟一个字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-623">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="4fd7a-624">由三个字符组成的第二个集必须为数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-624">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="4fd7a-625">第三个集由四个字符组成，必须有三个数字字符后跟一个字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-625">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch3.cs" interactive="try-dotnet" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch3.vb" id="Snippet3":::
  
 <span data-ttu-id="4fd7a-626">正则表达式模式为：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-626">The regular expression pattern is:</span></span>  
  
```  
[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]$  
```  
  
 <span data-ttu-id="4fd7a-627">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-627">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="4fd7a-628">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-628">Pattern</span></span>|<span data-ttu-id="4fd7a-629">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-629">Description</span></span>|  
|-------------|-----------------|  
|`[a-zA-Z0-9]`|<span data-ttu-id="4fd7a-630">匹配单个字母字符 (`a` 到 `z` 或 `A` 通过 `Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-630">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="4fd7a-631">匹配两个数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-631">Match two numeric characters.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="4fd7a-632">匹配单个字母字符 (`a` 到 `z` 或 `A` 通过 `Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-632">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`-`|<span data-ttu-id="4fd7a-633">匹配连字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-633">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="4fd7a-634">正好匹配三个数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-634">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="4fd7a-635">查找后跟三个数字字符的连字符，并匹配此模式的两个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-635">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="4fd7a-636">匹配单个字母字符 (`a` 到 `z` 或 `A` 通过 `Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-636">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`$`|<span data-ttu-id="4fd7a-637">在行的末尾结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-637">End the match at the end of the line.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-638"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-638"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-639"><paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-639"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-640">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-640">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-641">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-641">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-642">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-642">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public static bool IsMatch (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMatch(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMatch (input As String, pattern As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMatch(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member IsMatch : string * string -&gt; bool" Usage="System.Text.RegularExpressions.Regex.IsMatch (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-643">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-643">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-644">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-644">The regular expression pattern to match.</span></span></param>
        <summary><span data-ttu-id="4fd7a-645">指示所指定的正则表达式在指定的输入字符串中是否找到了匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-645">Indicates whether the specified regular expression finds a match in the specified input string.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-646">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-646"><see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-647"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用于验证字符串或确保字符串符合特定模式，而不检索该字符串进行后续操作。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-647">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="4fd7a-648">如果要确定一个或多个字符串是否与正则表达式模式匹配，然后检索它们以供后续操作，请调用 <xref:System.Text.RegularExpressions.Regex.Match%2A> 或 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-648">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="4fd7a-649">静态 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)> 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用指定的正则表达式模式构造对象 `pattern` ，并调用 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String)> 实例方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-649">The static <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the regular expression pattern specified by `pattern` and calling the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String)> instance method.</span></span> <span data-ttu-id="4fd7a-650">此正则表达式模式将缓存，以便正则表达式引擎进行快速检索。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-650">This regular expression pattern is cached for rapid retrieval by the regular expression engine.</span></span>  
  
 <span data-ttu-id="4fd7a-651">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-651">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-652">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-652">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-653"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超过为其调用该方法的应用程序域指定的超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-653">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-654">如果在应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-654">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-655">下面的示例演示 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)> 如何使用方法来确定字符串是否是有效的部件号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-655">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="4fd7a-656">正则表达式假定部件号具有特定的格式，该格式包含三组由连字符分隔的字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-656">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="4fd7a-657">包含四个字符的第一个集必须包含一个字母数字字符，后跟两个数字字符后跟一个字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-657">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="4fd7a-658">由三个字符组成的第二个集必须为数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-658">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="4fd7a-659">第三个集由四个字符组成，必须有三个数字字符后跟一个字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-659">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch1.vb" id="Snippet1":::
  
 <span data-ttu-id="4fd7a-660">正则表达式模式为：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-660">The regular expression pattern is:</span></span>  
  
```  
^[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]$  
```  
  
 <span data-ttu-id="4fd7a-661">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-661">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="4fd7a-662">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-662">Pattern</span></span>|<span data-ttu-id="4fd7a-663">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-663">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="4fd7a-664">从行的开头开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-664">Begin the match at the beginning of the line.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="4fd7a-665">匹配单个字母字符 (`a` 到 `z` 或 `A` 通过 `Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-665">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="4fd7a-666">匹配两个数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-666">Match two numeric characters.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="4fd7a-667">匹配单个字母字符 (`a` 到 `z` 或 `A` 通过 `Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-667">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`-`|<span data-ttu-id="4fd7a-668">匹配连字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-668">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="4fd7a-669">正好匹配三个数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-669">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="4fd7a-670">查找后跟三个数字字符的连字符，并匹配此模式的两个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-670">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[a-zA-Z0-9]`|<span data-ttu-id="4fd7a-671">匹配单个字母字符 (`a` 到 `z` 或 `A` 通过 `Z`) 或数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-671">Match a single alphabetic character (`a` through `z` or `A` through `Z`) or numeric character.</span></span>|  
|`$`|<span data-ttu-id="4fd7a-672">在行的末尾结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-672">End the match at the end of the line.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-673">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-673">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-674"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-674"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-675">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-675">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-676">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-676">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-677">此方法在与调用方法的应用程序域的默认超时值相等的时间间隔后超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-677">This method times out after an interval that is equal to the default time-out value of the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-678">如果尚未为应用程序域定义超时值，则将 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> 使用该值来阻止方法超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-678">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="4fd7a-679">建议用于验证模式匹配的静态方法是 <see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" /> ，它允许您设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-679">The recommended static method for verifying a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-680">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-680">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public static bool IsMatch (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMatch(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMatch (input As String, pattern As String, options As RegexOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMatch(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member IsMatch : string * string * System.Text.RegularExpressions.RegexOptions -&gt; bool" Usage="System.Text.RegularExpressions.Regex.IsMatch (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-681">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-681">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-682">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-682">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-683">枚举值的一个按位组合，这些枚举值提供匹配选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-683">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <summary><span data-ttu-id="4fd7a-684">指示所指定的正则表达式是否使用指定的匹配选项在指定的输入字符串中找到了匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-684">Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-685">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-685"><see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-686"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用于验证字符串或确保字符串符合特定模式，而不检索该字符串进行后续操作。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-686">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="4fd7a-687">如果要确定一个或多个字符串是否与正则表达式模式匹配，然后检索它们以供后续操作，请调用 <xref:System.Text.RegularExpressions.Regex.Match%2A> 或 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-687">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="4fd7a-688">静态 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用指定的正则表达式模式构造对象 `pattern` ，并使用指定的正则表达式选项 `options` 调用 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String)> 实例方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-688">The static <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the regular expression pattern specified by `pattern` and the regular expression options specified by `options` and calling the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String)> instance method.</span></span> <span data-ttu-id="4fd7a-689">此正则表达式模式将缓存，以便正则表达式引擎进行快速检索。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-689">This regular expression pattern is cached for rapid retrieval by the regular expression engine.</span></span>  
  
 <span data-ttu-id="4fd7a-690">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-690">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-691">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-691">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-692"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超过为其调用该方法的应用程序域指定的超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-692">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-693">如果在应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-693">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-694">下面的示例演示 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)> 如何使用方法来确定字符串是否是有效的部件号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-694">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="4fd7a-695">正则表达式假定部件号具有特定的格式，该格式包含三组由连字符分隔的字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-695">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="4fd7a-696">包含四个字符的第一个集必须包含一个字母数字字符，后跟两个数字字符后跟一个字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-696">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="4fd7a-697">由三个字符组成的第二个集必须为数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-697">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="4fd7a-698">第三个集由四个字符组成，必须有三个数字字符后跟一个字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-698">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch4.cs" interactive="try-dotnet" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch4.vb" id="Snippet4":::
  
 <span data-ttu-id="4fd7a-699">正则表达式模式为：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-699">The regular expression pattern is:</span></span>  
  
```  
^[A-Z0-9]\d{2}[A-Z0-9](-\d{3}){2}[A-Z0-9]$  
```  
  
 <span data-ttu-id="4fd7a-700">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-700">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="4fd7a-701">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-701">Pattern</span></span>|<span data-ttu-id="4fd7a-702">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-702">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="4fd7a-703">从字符串开头开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-703">Begin the match at the beginning of the string.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="4fd7a-704">匹配任何单个字母字符 `A` ，从到 `Z` 或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-704">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="4fd7a-705">匹配两个数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-705">Match two numeric characters.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="4fd7a-706">匹配任何单个字母字符 `A` ，从到 `Z` 或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-706">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`-`|<span data-ttu-id="4fd7a-707">匹配连字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-707">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="4fd7a-708">正好匹配三个数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-708">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="4fd7a-709">查找后跟三个数字字符的连字符，并匹配此模式的两个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-709">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern..</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="4fd7a-710">匹配任何单个字母字符 `A` ，从到 `Z` 或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-710">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`$`|<span data-ttu-id="4fd7a-711">在字符串的结尾结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-711">End the match at the end of the string.</span></span>|  
  
 <span data-ttu-id="4fd7a-712">调用 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> 方法并将 `options` 参数设置为 <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> 相当于定义以下正则表达式：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-712">Calling the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> method with the `options` parameter set to <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> is equivalent to defining the following regular expression:</span></span>  
  
```  
[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]  
```  
  
 <span data-ttu-id="4fd7a-713">若要进行比较，请参阅方法的示例 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-713">For comparison, see the example for the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-714">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-714">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-715"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-715"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-716"><paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-716"><paramref name="options" /> is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> value.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-717">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-717">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-718">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-718">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-719">此方法在与调用该方法的应用程序域的默认超时值相等的时间间隔后超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-719">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="4fd7a-720">如果尚未为应用程序域定义超时值，则将 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> 使用该值来阻止方法超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-720">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="4fd7a-721">建议用于验证模式匹配的静态方法是 <see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" /> ，它允许您设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-721">The recommended static method for verifying a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-722">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-722">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMatch">
      <MemberSignature Language="C#" Value="public static bool IsMatch (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMatch(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMatch (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMatch(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member IsMatch : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; bool" Usage="System.Text.RegularExpressions.Regex.IsMatch (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-723">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-723">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-724">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-724">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-725">枚举值的一个按位组合，这些枚举值提供匹配选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-725">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="4fd7a-726">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-726">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="4fd7a-727">指示所指定的正则表达式是否使用指定的匹配选项和超时间隔在指定的输入字符串中找到了匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-727">Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-728">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-728"><see langword="true" /> if the regular expression finds a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-729"><xref:System.Text.RegularExpressions.Regex.IsMatch%2A>方法通常用于验证字符串或确保字符串符合特定模式，而不检索该字符串进行后续操作。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-729">The <xref:System.Text.RegularExpressions.Regex.IsMatch%2A> method is typically used to validate a string or to ensure that a string conforms to a particular pattern without retrieving that string for subsequent manipulation.</span></span> <span data-ttu-id="4fd7a-730">如果要确定一个或多个字符串是否与正则表达式模式匹配，然后检索它们以供后续操作，请调用 <xref:System.Text.RegularExpressions.Regex.Match%2A> 或 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-730">If you want to determine whether one or more strings match a regular expression pattern and then retrieve them for subsequent manipulation, call the <xref:System.Text.RegularExpressions.Regex.Match%2A> or <xref:System.Text.RegularExpressions.Regex.Matches%2A> method.</span></span>  
  
 <span data-ttu-id="4fd7a-731">静态 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用指定的正则表达式模式构造对象 `pattern` ，并使用指定的正则表达式选项 `options` 调用 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String)> 实例方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-731">The static <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the regular expression pattern specified by `pattern` and the regular expression options specified by `options` and calling the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String)> instance method.</span></span> <span data-ttu-id="4fd7a-732">此正则表达式模式将缓存，以便正则表达式引擎进行快速检索。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-732">This regular expression pattern is cached for rapid retrieval by the regular expression engine.</span></span>  
  
 <span data-ttu-id="4fd7a-733">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-733">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-734">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-734">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-735">`matchTimeout`参数指定模式匹配方法在超时之前应尝试找到匹配项的时间长度。设置超时间隔可防止正则表达式在处理包含接近匹配项的输入时，这些表达式会出现依赖于过量回溯的正则表达式停止响应。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-735">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="4fd7a-736">有关详细信息，请参阅[正则表达式和回溯的最佳实践](/dotnet/standard/base-types/best-practices)。 [](/dotnet/standard/base-types/backtracking-in-regular-expressions)</span><span class="sxs-lookup"><span data-stu-id="4fd7a-736">For more information, see [Best Practices for Regular Expressions](/dotnet/standard/base-types/best-practices) and [Backtracking](/dotnet/standard/base-types/backtracking-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-737">如果在该时间间隔内未找到匹配项，则该方法将引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-737">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-738">`matchTimeout` 重写为在其中执行该方法的应用程序域定义的任何默认超时值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-738">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-739">下面的示例演示 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> 如何使用方法来确定字符串是否是有效的部件号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-739">The following example illustrates the use of the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> method to determine whether a string is a valid part number.</span></span> <span data-ttu-id="4fd7a-740">正则表达式假定部件号具有特定的格式，该格式包含三组由连字符分隔的字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-740">The regular expression assumes that the part number has a specific format that consists of three sets of characters separated by hyphens.</span></span> <span data-ttu-id="4fd7a-741">包含四个字符的第一个集必须包含一个字母数字字符，后跟两个数字字符后跟一个字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-741">The first set, which contains four characters, must consist of an alphanumeric character followed by two numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="4fd7a-742">由三个字符组成的第二个集必须为数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-742">The second set, which consists of three characters, must be numeric.</span></span> <span data-ttu-id="4fd7a-743">第三个集由四个字符组成，必须有三个数字字符后跟一个字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-743">The third set, which consists of four characters, must have three numeric characters followed by an alphanumeric character.</span></span> <span data-ttu-id="4fd7a-744">匹配正则表达式模式应涉及到最小搜索输入字符串，因此该方法将超时间隔设置为500毫秒。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-744">Matching the regular expression pattern should involve minimal searching through the input string, so the method sets a time-out interval of 500 milliseconds.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/cs/ismatch5.cs" interactive="try-dotnet" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.ismatch/vb/ismatch5.vb" id="Snippet5":::
  
 <span data-ttu-id="4fd7a-745">正则表达式模式为：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-745">The regular expression pattern is:</span></span>  
  
```  
^[A-Z0-9]\d{2}[A-Z0-9](-\d{3}){2}[A-Z0-9]$  
```  
  
 <span data-ttu-id="4fd7a-746">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-746">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="4fd7a-747">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-747">Pattern</span></span>|<span data-ttu-id="4fd7a-748">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-748">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="4fd7a-749">从字符串开头开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-749">Begin the match at the beginning of the string.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="4fd7a-750">匹配任何单个字母字符 `A` ，从到 `Z` 或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-750">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`\d{2}`|<span data-ttu-id="4fd7a-751">匹配两个数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-751">Match two numeric characters.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="4fd7a-752">匹配任何单个字母字符 `A` ，从到 `Z` 或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-752">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`-`|<span data-ttu-id="4fd7a-753">匹配连字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-753">Match a hyphen.</span></span>|  
|`\d{3}`|<span data-ttu-id="4fd7a-754">正好匹配三个数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-754">Match exactly three numeric characters.</span></span>|  
|`(-\d{3}){2}`|<span data-ttu-id="4fd7a-755">查找后跟三个数字字符的连字符，并匹配此模式的两个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-755">Find a hyphen followed by three numeric characters, and match two occurrences of this pattern.</span></span>|  
|`[A-Z0-9]`|<span data-ttu-id="4fd7a-756">匹配任何单个字母字符 `A` ，从到 `Z` 或任意数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-756">Match any single alphabetic character from `A` through `Z`, or any numeric character.</span></span>|  
|`$`|<span data-ttu-id="4fd7a-757">在字符串的结尾结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-757">End the match at the end of the string.</span></span>|  
  
 <span data-ttu-id="4fd7a-758">调用 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> 方法并将 `options` 参数设置为 <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> 相当于定义以下正则表达式：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-758">Calling the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> method with the `options` parameter set to <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> is equivalent to defining the following regular expression:</span></span>  
  
```  
[a-zA-Z0-9]\d{2}[a-zA-Z0-9](-\d{3}){2}[A-Za-z0-9]  
```  
  
 <span data-ttu-id="4fd7a-759">若要进行比较，请参阅方法的示例 <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-759">For comparison, see the example for the <xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-760">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-760">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-761"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-761"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-762"><paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-762"><paramref name="options" /> is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> value.</span></span>  
  
<span data-ttu-id="4fd7a-763">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-763">-or-</span></span> 
 <span data-ttu-id="4fd7a-764"><paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-764"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-765">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-765">A time-out occurred.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-766">建议将 <paramref name="matchTimeout" /> 参数设置为适当的值，例如两秒钟。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-766">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="4fd7a-767">如果通过指定禁用超时 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，则正则表达式引擎可提供略微更好的性能。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-767">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="4fd7a-768">但是，只应在以下条件下禁用超时：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-768">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="4fd7a-769">-正则表达式处理的输入派生自已知的和受信任的源，或由静态文本组成。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-769">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="4fd7a-770">这不包括用户动态输入的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-770">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="4fd7a-771">-对正则表达式模式进行了全面测试，以确保它有效地处理匹配、不匹配和接近匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-771">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="4fd7a-772">-当正则表达式模式不包含已知的语言元素时，这些元素会导致在处理接近的匹配时导致过度回溯。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-772">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-773">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-773">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fd7a-774">在输入字符串中搜索匹配正则表达式模式的子字符串，并将第一个匹配项作为单个 <see cref="T:System.Text.RegularExpressions.Match" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-774">Searches an input string for a substring that matches a regular expression pattern and returns the first occurrence as a single <see cref="T:System.Text.RegularExpressions.Match" /> object.</span></span></summary>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-775">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-775">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match Match (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match Match(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (input As String) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ Match(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Match : string -&gt; System.Text.RegularExpressions.Match" Usage="regex.Match input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-776">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-776">The string to search for a match.</span></span></param>
        <summary><span data-ttu-id="4fd7a-777">在指定的输入字符串中搜索 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-777">Searches the specified input string for the first occurrence of the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-778">一个包含有关匹配的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-778">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-779"><xref:System.Text.RegularExpressions.Regex.Match(System.String)>方法返回输入字符串中与正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-779">The <xref:System.Text.RegularExpressions.Regex.Match(System.String)> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="4fd7a-780">有关用于生成正则表达式模式的语言元素的信息，请参阅 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-780">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-781">您可以通过检查返回对象的属性的值来确定是否在输入字符串中找到了正则表达式模式 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Group.Success%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-781">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="4fd7a-782">如果找到匹配项，则返回的 <xref:System.Text.RegularExpressions.Match> 对象的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 属性包含与 `input` 正则表达式模式匹配的子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-782">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-783">如果未找到匹配项，则其值为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-783">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4fd7a-784">此方法将返回中 `input` 与正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-784">This method returns the first substring in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-785">您可以通过重复调用返回对象的方法来检索后续匹配项 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-785">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4fd7a-786">还可以通过调用方法来检索单个方法调用中的所有匹配项 <xref:System.Text.RegularExpressions.Regex.Matches(System.String)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-786">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String)?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4fd7a-787"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-787">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-788">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-788">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-789">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-789">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-790">下面的示例查找字符串中的正则表达式模式匹配，然后列出匹配的组、捕获和捕获位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-790">The following example finds regular expression pattern matches in a string, then lists the matched groups, captures, and capture positions.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cpp/snippet8.cpp" id="Snippet8":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cs/snippet8.cs" interactive="try-dotnet" id="Snippet8":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/regex match, nextmatch, groups, captures/vb/snippet8.vb" id="Snippet8":::
  
 <span data-ttu-id="4fd7a-791">正则表达式模式 `(\w+)\s+(car)` 匹配单词 "car" 和其前面的单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-791">The regular expression pattern `(\w+)\s+(car)` matches occurrences of the word "car" along with the word that precedes it.</span></span> <span data-ttu-id="4fd7a-792">它被解释如下表所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-792">It is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-793">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-793">Pattern</span></span>|<span data-ttu-id="4fd7a-794">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-794">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="4fd7a-795">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-795">Match one or more word characters.</span></span> <span data-ttu-id="4fd7a-796">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-796">This is the first capturing group.</span></span>|  
|`\s+`|<span data-ttu-id="4fd7a-797">匹配一个或多个空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-797">Match one or more white-space characters.</span></span>|  
|<span data-ttu-id="4fd7a-798"> (汽车) </span><span class="sxs-lookup"><span data-stu-id="4fd7a-798">(car)</span></span>|<span data-ttu-id="4fd7a-799">匹配文本字符串 "car"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-799">Match the literal string "car".</span></span> <span data-ttu-id="4fd7a-800">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-800">This is the second capturing group.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-801"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-801"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-802">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-802">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-803">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-803">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-804">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-804">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match Match (string input, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match Match(string input, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (input As String, startat As Integer) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ Match(System::String ^ input, int startat);" />
      <MemberSignature Language="F#" Value="member this.Match : string * int -&gt; System.Text.RegularExpressions.Match" Usage="regex.Match (input, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-805">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-805">The string to search for a match.</span></span></param>
        <param name="startat"><span data-ttu-id="4fd7a-806">开始搜索的字符位置（从零开始）。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-806">The zero-based character position at which to start the search.</span></span></param>
        <summary><span data-ttu-id="4fd7a-807">从输入字符串中的指定起始位置开始，在该字符串中搜索正则表达式的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-807">Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-808">一个包含有关匹配的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-808">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-809"><xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)>方法返回一个匹配正则表达式模式的第一个子字符串，该模式从 `startat` 字符位置或字符位置之后的输入字符串中开始。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-809">The <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)> method returns the first substring that matches a regular expression pattern, starting at or after the `startat` character position, in an input string.</span></span> <span data-ttu-id="4fd7a-810">有关用于生成正则表达式模式的语言元素的信息，请参阅 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-810">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-811">方法搜索的正则表达式模式 <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)> 由对一个 <xref:System.Text.RegularExpressions.Regex> 类构造函数的调用定义。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-811">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="4fd7a-812">有关可形成正则表达式模式的元素的详细信息，请参阅 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-812">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-813">您可以根据需要使用参数指定字符串中的起始位置 `startat` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-813">You can optionally specify a starting position in the string by using the `startat` parameter.</span></span> <span data-ttu-id="4fd7a-814">正则表达式引擎从左到右进行分析时 (默认) ，匹配和扫描从右移中指定的字符开始 `startat` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-814">When the regular expression engine parses from left to right (the default), the match and the scan move rightward, starting at the character specified in `startat`.</span></span> <span data-ttu-id="4fd7a-815">当正则表达式引擎从右到左进行分析时 (如果正则表达式模式是通过 <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType> 选项) 构造的，则匹配和扫描将按相反方向移动，并以 `startat` -1 开头。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-815">When the regular expression engine parses from right to left (when the regular expression pattern is constructed with the <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType> option), the match and scan move in the opposite direction and begin with the character at `startat` -1.</span></span> <span data-ttu-id="4fd7a-816">如果未指定起始位置，搜索将从默认 `startat` 位置开始。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-816">If you do not specify a starting position, the search begins at the default `startat` position.</span></span> <span data-ttu-id="4fd7a-817">如果正则表达式从左到右搜索，则默认 `startat` 位置位于的左侧 `input` ; 如果从右到左搜索，则默认 `startat` 位置位于的右端 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-817">If the regular expression searches from left to right, the default `startat` position is at the left end of `input`; if it searches from right to left, the default `startat` position is at the right end of `input`.</span></span>  
  
 <span data-ttu-id="4fd7a-818">如果要限制匹配，使其在字符串中的特定字符位置开始，并且正则表达式引擎不会扫描字符串的剩余部分以查找匹配项，请使用左侧 `\G` 的 (定位于左到右模式，或从右到左的模式) 右侧定位正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-818">If you want to restrict a match so that it begins at a particular character position in the string and the regular expression engine does not scan the remainder of the string for a match, anchor the regular expression with a `\G` (at the left for a left-to-right pattern, or at the right for a right-to-left pattern).</span></span> <span data-ttu-id="4fd7a-819">这会限制匹配项，因此它必须正好从开始 `startat` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-819">This restricts the match so it must start exactly at `startat`.</span></span>  
  
 <span data-ttu-id="4fd7a-820">您可以通过检查返回对象的属性的值来确定是否在输入字符串中找到了正则表达式模式 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Group.Success%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-820">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="4fd7a-821">如果找到匹配项，则返回的 <xref:System.Text.RegularExpressions.Match> 对象的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 属性包含与 `input` 正则表达式模式匹配的子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-821">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-822">如果未找到匹配项，则其值为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-822">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4fd7a-823">此方法返回在 `startat` 中 `input` 与正则表达式模式匹配的字符位置处找到的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-823">This method returns the first substring found at or after the `startat` character position in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-824">您可以通过重复调用返回对象的方法来检索后续匹配项 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-824">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4fd7a-825">还可以通过调用方法来检索单个方法调用中的所有匹配项 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-825">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4fd7a-826"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-826">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-827">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-827">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-828">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-828">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-829"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-829"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-830"><paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-830"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-831">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-831">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-832">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-832">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-833">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-833">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Match (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Match(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Match (input As String, pattern As String) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Match(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Match : string * string -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Regex.Match (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-834">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-834">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-835">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-835">The regular expression pattern to match.</span></span></param>
        <summary><span data-ttu-id="4fd7a-836">在指定的输入字符串中搜索指定的正则表达式的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-836">Searches the specified input string for the first occurrence of the specified regular expression.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-837">一个包含有关匹配的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-837">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-838"><xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String)>方法返回输入字符串中与正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-838">The <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String)> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="4fd7a-839">有关用于生成正则表达式模式的语言元素的信息，请参阅 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-839">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-840">静态 <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String)> 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用指定的正则表达式模式构造对象，并调用实例 <xref:System.Text.RegularExpressions.Regex.Match(System.String)> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-840">The static <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String)> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance <xref:System.Text.RegularExpressions.Regex.Match(System.String)> method.</span></span> <span data-ttu-id="4fd7a-841">在这种情况下，正则表达式引擎会缓存正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-841">In this case, the regular expression engine caches the regular expression pattern.</span></span>  
  
 <span data-ttu-id="4fd7a-842">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-842">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-843">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-843">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-844">您可以通过检查返回对象的属性的值来确定是否在输入字符串中找到了正则表达式模式 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Group.Success%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-844">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="4fd7a-845">如果找到匹配项，则返回的 <xref:System.Text.RegularExpressions.Match> 对象的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 属性包含与 `input` 正则表达式模式匹配的子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-845">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-846">如果未找到匹配项，则其值为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-846">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4fd7a-847">此方法将返回中 `input` 与正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-847">This method returns the first substring in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-848">您可以通过重复调用返回对象的方法来检索后续匹配项 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-848">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4fd7a-849">还可以通过调用方法来检索单个方法调用中的所有匹配项 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-849">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4fd7a-850"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超过为其调用该方法的应用程序域指定的超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-850">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-851">如果在应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-851">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-852">下面的示例调用 <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String)> 方法查找至少包含一个字符的第一个单词 `z` ，然后调用 <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> 方法查找任何其他匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-852">The following example calls the <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String)> method to find the first word that contains at least one `z` character, and then calls the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method to find any additional matches.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/cs/match1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/vb/match1.vb" id="Snippet1":::  
  
 <span data-ttu-id="4fd7a-853">正则表达式模式 `\b\w*z+\w*\b` 的含义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-853">The regular expression pattern `\b\w*z+\w*\b` is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-854">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-854">Pattern</span></span>|<span data-ttu-id="4fd7a-855">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-855">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="4fd7a-856">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-856">Begin the match at a word boundary.</span></span>|  
|`\w*`|<span data-ttu-id="4fd7a-857">匹配零个、一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-857">Match zero, one, or more word characters.</span></span>|  
|`z+`|<span data-ttu-id="4fd7a-858">匹配一个或多个字符匹配项 `z` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-858">Match one or more occurrences of the `z` character.</span></span>|  
|`\w*`|<span data-ttu-id="4fd7a-859">匹配零个、一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-859">Match zero, one, or more word characters.</span></span>|  
|`\b`|<span data-ttu-id="4fd7a-860">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-860">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-861">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-861">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-862"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-862"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-863">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-863">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-864">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-864">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-865">此方法在与调用该方法的应用程序域的默认超时值相等的时间间隔后超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-865">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="4fd7a-866">如果尚未为应用程序域定义超时值，则将 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> 使用该值来阻止方法超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-866">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="4fd7a-867">用于检索模式匹配项的建议静态方法是 <see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" /> ，它允许您设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-867">The recommended static method for retrieving a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />, which lets you set the time-out interval.</span></span></para></block>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-868">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-868">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Match Match (string input, int beginning, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.Match Match(string input, int32 beginning, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (input As String, beginning As Integer, length As Integer) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::Match ^ Match(System::String ^ input, int beginning, int length);" />
      <MemberSignature Language="F#" Value="member this.Match : string * int * int -&gt; System.Text.RegularExpressions.Match" Usage="regex.Match (input, beginning, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="beginning" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-869">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-869">The string to search for a match.</span></span></param>
        <param name="beginning"><span data-ttu-id="4fd7a-870">输入字符串中从零开始的字符位置，它定义要搜索的最左侧的位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-870">The zero-based character position in the input string that defines the leftmost position to be searched.</span></span></param>
        <param name="length"><span data-ttu-id="4fd7a-871">子字符串中包含在搜索中的字符数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-871">The number of characters in the substring to include in the search.</span></span></param>
        <summary><span data-ttu-id="4fd7a-872">从指定的起始位置开始，在输入字符串中搜索正则表达式的第一个匹配项，并且仅搜索指定数量的字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-872">Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-873">一个包含有关匹配的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-873">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-874"><xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)>方法返回在输入字符串的一部分中与正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-874">The <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)> method returns the first substring that matches a regular expression pattern in a portion of an input string.</span></span> <span data-ttu-id="4fd7a-875">有关用于生成正则表达式模式的语言元素的信息，请参阅 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-875">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-876">方法搜索的正则表达式模式 <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)> 由对一个 <xref:System.Text.RegularExpressions.Regex> 类构造函数的调用定义。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-876">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="4fd7a-877">有关可形成正则表达式模式的元素的详细信息，请参阅 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-877">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-878"><xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)>方法在 `input` 由和参数定义的部分中搜索 `beginning` `length` 正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-878">The <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)> method searches the portion of `input` defined by the `beginning` and `length` parameters for the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-879">`beginning` 始终定义要包括在搜索中的最左侧字符的索引，并 `length` 定义要搜索的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-879">`beginning` always defines the index of the leftmost character to include in the search, and `length` defines the maximum number of characters to search.</span></span> <span data-ttu-id="4fd7a-880">它们共同定义搜索范围。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-880">Together, they define the range of the search.</span></span> <span data-ttu-id="4fd7a-881">如果从左到右 (默认) 进行搜索，则正则表达式引擎将从索引处的字符搜索 `beginning` 到索引 `beginning`  +  `length` -1 处的字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-881">If the search proceeds from left to right (the default), the regular expression engine searches from the character at index `beginning` to the character at index `beginning` + `length` - 1.</span></span> <span data-ttu-id="4fd7a-882">如果正则表达式引擎是通过使用选项进行实例化的 <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType> ，以便从右到左进行搜索，则正则表达式引擎将从位于索引-1 的字符搜索 `beginning`  +  `length` 到索引处的字符 `beginning` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-882">If the regular expression engine was instantiated by using the <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft?displayProperty=nameWithType> option so that the search proceeds from right to left, the regular expression engine searches from the character at index `beginning` + `length` - 1 to the character at index `beginning`.</span></span> <span data-ttu-id="4fd7a-883">此方法返回它在此范围内找到的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-883">This method returns the first match that it finds within this range.</span></span> <span data-ttu-id="4fd7a-884">您可以通过重复调用返回对象的方法来检索后续匹配项 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-884">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4fd7a-885">您可以通过检查返回对象的属性的值来确定是否在输入字符串中找到了正则表达式模式 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Group.Success%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-885">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="4fd7a-886">如果找到匹配项，则返回的 <xref:System.Text.RegularExpressions.Match> 对象的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 属性包含与 `input` 正则表达式模式匹配的子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-886">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-887">如果未找到匹配项，则其值为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-887">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4fd7a-888"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-888">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-889">如果在调用构造函数时未设置超时值，则在操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-889">If you do not set a time-out value when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-890">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-890">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-891"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-891"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-892"><paramref name="beginning" /> 小于零或大于 <paramref name="input" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-892"><paramref name="beginning" /> is less than zero or greater than the length of <paramref name="input" />.</span></span>  
  
<span data-ttu-id="4fd7a-893">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-893">-or-</span></span> 
 <span data-ttu-id="4fd7a-894"><paramref name="length" /> 小于零或大于 <paramref name="input" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-894"><paramref name="length" /> is less than zero or greater than the length of <paramref name="input" />.</span></span>  
  
<span data-ttu-id="4fd7a-895">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-895">-or-</span></span> 
 <span data-ttu-id="4fd7a-896"><paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> 表示 <paramref name="input" /> 范围外的某个位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-896"><paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> identifies a position that is outside the range of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-897">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-897">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-898">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-898">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-899">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-899">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Match (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Match(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Match (input As String, pattern As String, options As RegexOptions) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Match(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Match : string * string * System.Text.RegularExpressions.RegexOptions -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Regex.Match (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-900">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-900">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-901">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-901">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-902">枚举值的一个按位组合，这些枚举值提供匹配选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-902">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <summary><span data-ttu-id="4fd7a-903">使用指定的匹配选项在输入字符串中搜索指定的正则表达式的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-903">Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-904">一个包含有关匹配的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-904">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-905"><xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)>方法返回输入字符串中与正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-905">The <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="4fd7a-906">有关用于生成正则表达式模式的语言元素的信息，请参阅 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-906">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-907">静态 <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions)> 构造函数构造对象和调用实例 <xref:System.Text.RegularExpressions.Regex.Match(System.String)> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-907">The static <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions)> constructor and calling the instance <xref:System.Text.RegularExpressions.Regex.Match(System.String)> method.</span></span>  
  
 <span data-ttu-id="4fd7a-908">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-908">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-909">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-909">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-910">您可以通过检查返回对象的属性的值来确定是否在输入字符串中找到了正则表达式模式 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Group.Success%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-910">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="4fd7a-911">如果找到匹配项，则返回的 <xref:System.Text.RegularExpressions.Match> 对象的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 属性包含与 `input` 正则表达式模式匹配的子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-911">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-912">如果未找到匹配项，则其值为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-912">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4fd7a-913">此方法返回中找到 `input` 的与正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-913">This method returns the first substring found in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-914">您可以通过重复调用返回对象的方法来检索后续匹配项 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Match.NextMatch%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-914">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A> method.</span></span> <span data-ttu-id="4fd7a-915">还可以通过调用方法来检索单个方法调用中的所有匹配项 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-915">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4fd7a-916"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果匹配操作的执行时间超过为其调用该方法的应用程序域指定的超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-916">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the matching operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-917">如果在应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-917">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-918">下面的示例定义一个正则表达式，该正则表达式匹配以字母 "a" 开头的单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-918">The following example defines a regular expression that matches words beginning with the letter "a".</span></span> <span data-ttu-id="4fd7a-919">它使用 <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> 选项来确保正则表达式查找以大写 "a" 和小写 "a" 开头的单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-919">It uses the <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> option to ensure that the regular expression locates words beginning with both an uppercase "a" and a lowercase "a".</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/cs/match2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.match/vb/match2.vb" id="Snippet2":::
  
 <span data-ttu-id="4fd7a-920">正则表达式模式 `\ba\w*\b` 的含义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-920">The regular expression pattern `\ba\w*\b` is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-921">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-921">Pattern</span></span>|<span data-ttu-id="4fd7a-922">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-922">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="4fd7a-923">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-923">Begin the match at a word boundary.</span></span>|  
|`a`|<span data-ttu-id="4fd7a-924">匹配 "a" 字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-924">Match the character "a".</span></span>|  
|`\w*`|<span data-ttu-id="4fd7a-925">匹配零个、一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-925">Match zero, one, or more word characters.</span></span>|  
|`\b`|<span data-ttu-id="4fd7a-926">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-926">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-927">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-927">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-928"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-928"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-929"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-929"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-930">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-930">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-931">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-931">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-932">此方法在与调用该方法的应用程序域的默认超时值相等的时间间隔后超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-932">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="4fd7a-933">如果尚未为应用程序域定义超时值，则将 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> 使用该值来阻止方法超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-933">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="4fd7a-934">用于检索模式匹配项的建议静态方法是 <see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" /> ，它允许您设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-934">The recommended static method for retrieving a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)" />, which lets you set the time-out interval.</span></span></para></block>
        <altmember cref="M:System.Text.RegularExpressions.Match.NextMatch" />
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-935">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-935">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Match Match (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Match Match(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Match (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Match ^ Match(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Match : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.Regex.Match (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-936">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-936">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-937">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-937">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-938">枚举值的一个按位组合，这些枚举值提供匹配选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-938">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="4fd7a-939">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-939">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="4fd7a-940">使用指定的匹配选项和超时间隔在输入字符串中搜索指定的正则表达式的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-940">Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-941">一个包含有关匹配的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-941">An object that contains information about the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-942"><xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)>方法返回输入字符串中与正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-942">The <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> method returns the first substring that matches a regular expression pattern in an input string.</span></span> <span data-ttu-id="4fd7a-943">有关用于生成正则表达式模式的语言元素的信息，请参阅 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-943">For information about the language elements used to build a regular expression pattern, see [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-944">静态 <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> 构造函数构造对象和调用实例 <xref:System.Text.RegularExpressions.Regex.Match(System.String)> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-944">The static <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> method is equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> constructor and calling the instance <xref:System.Text.RegularExpressions.Regex.Match(System.String)> method.</span></span>  
  
 <span data-ttu-id="4fd7a-945">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-945">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-946">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-946">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-947">您可以通过检查返回对象的属性的值来确定是否在输入字符串中找到了正则表达式模式 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Group.Success%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-947">You can determine whether the regular expression pattern has been found in the input string by checking the value of the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Group.Success%2A> property.</span></span> <span data-ttu-id="4fd7a-948">如果找到匹配项，则返回的 <xref:System.Text.RegularExpressions.Match> 对象的 <xref:System.Text.RegularExpressions.Capture.Value%2A> 属性包含与 `input` 正则表达式模式匹配的子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-948">If a match is found, the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the substring from `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-949">如果未找到匹配项，则其值为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-949">If no match is found, its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4fd7a-950">此方法返回中找到 `input` 的与正则表达式模式匹配的第一个子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-950">This method returns the first substring found in `input` that matches the regular expression pattern.</span></span> <span data-ttu-id="4fd7a-951">您可以通过重复调用返回对象的方法来检索后续匹配项 <xref:System.Text.RegularExpressions.Match> <xref:System.Text.RegularExpressions.Match.NextMatch%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-951">You can retrieve subsequent matches by repeatedly calling the returned <xref:System.Text.RegularExpressions.Match> object's <xref:System.Text.RegularExpressions.Match.NextMatch%2A> method.</span></span> <span data-ttu-id="4fd7a-952">还可以通过调用方法来检索单个方法调用中的所有匹配项 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-952">You can also retrieve all matches in a single method call by calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4fd7a-953">`matchTimeout`参数指定模式匹配方法在超时之前应尝试找到匹配项的时间长度。设置超时间隔可防止正则表达式在处理包含接近匹配项的输入时，这些表达式会出现依赖于过量回溯的正则表达式停止响应。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-953">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="4fd7a-954">有关详细信息，请参阅[正则表达式和回溯的最佳实践](/dotnet/standard/base-types/best-practices)。 [](/dotnet/standard/base-types/backtracking-in-regular-expressions)</span><span class="sxs-lookup"><span data-stu-id="4fd7a-954">For more information, see [Best Practices for Regular Expressions](/dotnet/standard/base-types/best-practices) and [Backtracking](/dotnet/standard/base-types/backtracking-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-955">如果在该时间间隔内未找到匹配项，则该方法将引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-955">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-956">`matchTimeout` 重写为在其中执行该方法的应用程序域定义的任何默认超时值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-956">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-957">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-957">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-958"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-958"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-959"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-959"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span>  
  
<span data-ttu-id="4fd7a-960">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-960">-or-</span></span> 
 <span data-ttu-id="4fd7a-961"><paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-961"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-962">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-962">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-963">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-963">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-964">建议将 <paramref name="matchTimeout" /> 参数设置为适当的值，例如两秒钟。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-964">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="4fd7a-965">如果通过指定禁用超时 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，则正则表达式引擎可提供略微更好的性能。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-965">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="4fd7a-966">但是，只应在以下条件下禁用超时：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-966">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="4fd7a-967">-正则表达式处理的输入派生自已知的和受信任的源，或由静态文本组成。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-967">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="4fd7a-968">这不包括用户动态输入的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-968">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="4fd7a-969">-对正则表达式模式进行了全面测试，以确保它有效地处理匹配、不匹配和接近匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-969">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="4fd7a-970">-当正则表达式模式不包含已知的语言元素时，这些元素会导致在处理接近的匹配时导致过度回溯。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-970">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-971">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-971">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fd7a-972">在输入字符串中搜索正则表达式的所有匹配项并返回所有匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-972">Searches an input string for all occurrences of a regular expression and returns all the matches.</span></span></summary>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-973">当通过调用方法重复匹配尝试时 <see cref="Overload:System.Text.RegularExpressions.Regex.Matches" /> ，正则表达式引擎将提供空匹配特殊处理。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-973">When a match attempt is repeated by calling the <see cref="Overload:System.Text.RegularExpressions.Regex.Matches" /> method, the regular expression engine gives empty matches special treatment.</span></span> <span data-ttu-id="4fd7a-974">通常，正则表达式引擎会开始搜索下一个匹配项的精确位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-974">Usually, the regular expression engine begins the search for the next match exactly where the previous match left off.</span></span> <span data-ttu-id="4fd7a-975">但是，在空匹配项后，正则表达式引擎在尝试下一个匹配项之前前进一个字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-975">However, after an empty match, the regular expression engine advances by one character before trying the next match.</span></span> <span data-ttu-id="4fd7a-976">此行为可确保正则表达式引擎将通过字符串进行。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-976">This behavior guarantees that the regular expression engine will progress through the string.</span></span> <span data-ttu-id="4fd7a-977">否则，由于空匹配不会导致任何向前移动，因此下一个匹配项将与上一个匹配项完全相同的位置开始，并且它将重复匹配相同的空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-977">Otherwise, because an empty match does not result in any forward movement, the next match would start in exactly the same place as the previous match, and it would match the same empty string repeatedly.</span></span>  
  
<span data-ttu-id="4fd7a-978">在下面的示例中，正则表达式模式 <c>a \*</c> 在字符串 "abaabb" 中搜索字母 "a" 的零个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-978">In the following example, the regular expression pattern <c>a\*</c> searches for zero or more occurrences of the letter "a" in the string "abaabb".</span></span> <span data-ttu-id="4fd7a-979">如示例的输出所示，生成的 <see cref="T:System.Text.RegularExpressions.MatchCollection" /> 对象包含六个 <see cref="T:System.Text.RegularExpressions.Match" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-979">As the output from the example shows, the resulting <see cref="T:System.Text.RegularExpressions.MatchCollection" /> object contains six <see cref="T:System.Text.RegularExpressions.Match" /> objects.</span></span> <span data-ttu-id="4fd7a-980">第一个匹配尝试查找第一个 "a"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-980">The first match attempt finds the first "a".</span></span> <span data-ttu-id="4fd7a-981">第二个匹配从第一个匹配结束的位置开始，在第一个 b 之前开始;它查找 "a" 的零次，并返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-981">The second match starts exactly where the first match ends, before the first b; it finds zero occurrences of "a" and returns an empty string.</span></span> <span data-ttu-id="4fd7a-982">第三个匹配项并不完全从第二个匹配项结束的位置开始，因为第二个匹配项返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-982">The third match does not begin exactly where the second match ended, because the second match returned an empty string.</span></span> <span data-ttu-id="4fd7a-983">相反，它会在后面的第一个 "b" 后开始一个字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-983">Instead, it begins one character later, after the first "b".</span></span> <span data-ttu-id="4fd7a-984">第三个匹配项查找 "a" 的两个匹配项，并返回 "aa"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-984">The third match finds two occurrences of "a" and returns "aa".</span></span> <span data-ttu-id="4fd7a-985">第四个匹配尝试从第三个匹配项的第二个匹配项的第二个 "b" 之前开始，并返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-985">The fourth match attempt begins where the third match ended, before the second "b", and returns an empty string.</span></span> <span data-ttu-id="4fd7a-986">第五次匹配尝试再次推进一个字符，以使其在第三个 "b" 之前开始，并返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-986">The fifth match attempt again advances one character so that it begins before the third "b" and returns an empty string.</span></span> <span data-ttu-id="4fd7a-987">第六个匹配项的开头为 "b"，并再次返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-987">The sixth match begins after the last "b" and returns an empty string again.</span></span>  
  
<span data-ttu-id="4fd7a-988">[！ code-csharp[system.text.regularexpressions # 9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/emptymatches1.cs#9)][！ code-vb[system.text.regularexpressions # 9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/emptymatches1.vb#9)]</span><span class="sxs-lookup"><span data-stu-id="4fd7a-988">[!code-csharp[System.Text.RegularExpressions.Regex.Matches#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/emptymatches1.cs#9)] [!code-vb[System.Text.RegularExpressions.Regex.Matches#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/emptymatches1.vb#9)]</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-989">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-989">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.MatchCollection Matches (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.MatchCollection Matches(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (input As String) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Matches : string -&gt; System.Text.RegularExpressions.MatchCollection" Usage="regex.Matches input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-990">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-990">The string to search for a match.</span></span></param>
        <summary><span data-ttu-id="4fd7a-991">在指定的输入字符串中搜索正则表达式的所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-991">Searches the specified input string for all occurrences of a regular expression.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-992">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-992">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span></span> <span data-ttu-id="4fd7a-993">如果未找到匹配项，则此方法将返回一个空集合对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-993">If no matches are found, the method returns an empty collection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-994"><xref:System.Text.RegularExpressions.Regex.Matches(System.String)>方法与 <xref:System.Text.RegularExpressions.Regex.Match(System.String)> 方法类似，不同之处在于，它返回在输入字符串中找到的所有匹配项的相关信息，而不是一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-994">The <xref:System.Text.RegularExpressions.Regex.Matches(System.String)> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match(System.String)> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="4fd7a-995">它等效于以下代码：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-995">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#5)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#5)]  
  
 <span data-ttu-id="4fd7a-996">集合仅包含匹配项，并且在第一个不匹配时终止。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-996">The collection includes only matches and terminates at the first non-match.</span></span>  
  
 <span data-ttu-id="4fd7a-997">方法搜索的正则表达式模式 <xref:System.Text.RegularExpressions.Regex.Matches(System.String)> 由对一个 <xref:System.Text.RegularExpressions.Regex> 类构造函数的调用定义。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-997">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Matches(System.String)> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="4fd7a-998">有关可形成正则表达式模式的元素的详细信息，请参阅 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-998">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-999"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法使用延迟计算来填充返回的 <xref:System.Text.RegularExpressions.MatchCollection> 对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-999">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="4fd7a-1000">访问此集合的成员（如 <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> 和）将 <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> 导致立即填充该集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1000">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="4fd7a-1001">若要充分利用延迟计算，应使用构造（如 `foreach` c # 中的和 `For Each` ... `Next` in Visual Basic）来循环访问集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1001">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`...`Next` in Visual Basic.</span></span>  
  
 <span data-ttu-id="4fd7a-1002">由于其延迟计算，调用方法不 <xref:System.Text.RegularExpressions.Regex.Matches(System.String)> 会引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1002">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String)> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-1003">但是，如果在此方法返回的对象上执行操作时引发了异常，则为 <xref:System.Text.RegularExpressions.MatchCollection> ; 如果 <xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A> 属性不为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，并且匹配操作超过超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1003">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if the <xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A> property is not <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> and a matching operation exceeds the time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1004">下面的示例使用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String)> 方法来识别句子中以 "es" 结尾的所有单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1004">The following example uses the <xref:System.Text.RegularExpressions.Regex.Matches(System.String)> method to identify any words in a sentence that end in "es".</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches1.vb" id="Snippet1"::: 
  
 <span data-ttu-id="4fd7a-1005">正则表达式模式 `\b\w+es\b` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1005">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-1006">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1006">Pattern</span></span>|<span data-ttu-id="4fd7a-1007">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1007">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="4fd7a-1008">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1008">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="4fd7a-1009">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1009">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="4fd7a-1010">匹配文本字符串 "es"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1010">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="4fd7a-1011">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1011">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1012"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1012"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1013">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1013">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.MatchCollection Matches (string input, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.RegularExpressions.MatchCollection Matches(string input, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (input As String, startat As Integer) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, int startat);" />
      <MemberSignature Language="F#" Value="member this.Matches : string * int -&gt; System.Text.RegularExpressions.MatchCollection" Usage="regex.Matches (input, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1014">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1014">The string to search for a match.</span></span></param>
        <param name="startat"><span data-ttu-id="4fd7a-1015">在输入字符串中开始搜索的字符位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1015">The character position in the input string at which to start the search.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1016">从字符串中的指定起始位置开始，在指定的输入字符串中搜索正则表达式的所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1016">Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1017">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1017">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span></span> <span data-ttu-id="4fd7a-1018">如果未找到匹配项，则此方法将返回一个空集合对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1018">If no matches are found, the method returns an empty collection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1019"><xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)>方法与 <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)> 方法类似，不同之处在于，它返回在输入字符串中找到的所有匹配项的相关信息，而不是一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1019">The  <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)> method is similar to the  <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="4fd7a-1020">它等效于以下代码：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1020">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#6)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#6)]  
  
 <span data-ttu-id="4fd7a-1021">方法搜索的正则表达式模式 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)> 由对一个 <xref:System.Text.RegularExpressions.Regex> 类构造函数的调用定义。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1021">The regular expression pattern for which the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)> method searches is defined by the call to one of the <xref:System.Text.RegularExpressions.Regex> class constructors.</span></span> <span data-ttu-id="4fd7a-1022">有关可形成正则表达式模式的元素的详细信息，请参阅 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1022">For more information about the elements that can form a regular expression pattern, see [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-1023"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法使用延迟计算来填充返回的 <xref:System.Text.RegularExpressions.MatchCollection> 对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1023">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="4fd7a-1024">访问此集合的成员（如 <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> 和）将 <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> 导致立即填充该集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1024">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="4fd7a-1025">若要充分利用延迟计算，应使用构造（如 `foreach` c # 中的和 `For Each` ... `Next` in Visual Basic）来循环访问集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1025">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`...`Next` in Visual Basic.</span></span>  
  
 <span data-ttu-id="4fd7a-1026">由于其延迟计算，调用方法不 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)> 会引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1026">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-1027">但是，如果在此方法返回的对象上执行操作时引发了异常，则为 <xref:System.Text.RegularExpressions.MatchCollection> ; 如果 <xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A> 属性不为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，并且匹配操作超过超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1027">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if the <xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A> property is not <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> and a matching operation exceeds the time-out interval.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1028">下面的示例使用 <xref:System.Text.RegularExpressions.Regex.Match(System.String)> 方法来查找句子中以 "es" 结尾的第一个单词，然后调用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)> 方法以识别以 "es" 结尾的任何其他单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1028">The following example uses the <xref:System.Text.RegularExpressions.Regex.Match(System.String)> method to find the first word in a sentence that ends in "es", and then calls the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)> method to identify any additional words that end in "es".</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches3.cs" interactive="try-dotnet" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches3.vb" id="Snippet3"::: 
  
 <span data-ttu-id="4fd7a-1029">正则表达式模式 `\b\w+es\b` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1029">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-1030">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1030">Pattern</span></span>|<span data-ttu-id="4fd7a-1031">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1031">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="4fd7a-1032">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1032">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="4fd7a-1033">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1033">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="4fd7a-1034">匹配文本字符串 "es"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1034">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="4fd7a-1035">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1035">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1036"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1036"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1037"><paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1037"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1038">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1038">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.MatchCollection Matches (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.MatchCollection Matches(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Matches (input As String, pattern As String) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Matches : string * string -&gt; System.Text.RegularExpressions.MatchCollection" Usage="System.Text.RegularExpressions.Regex.Matches (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1039">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1039">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1040">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1040">The regular expression pattern to match.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1041">在指定的输入字符串中搜索指定的正则表达式的所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1041">Searches the specified input string for all occurrences of a specified regular expression.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1042">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1042">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span></span> <span data-ttu-id="4fd7a-1043">如果未找到匹配项，则此方法将返回一个空集合对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1043">If no matches are found, the method returns an empty collection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1044"><xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)>方法与 <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String)> 方法类似，不同之处在于，它返回在输入字符串中找到的所有匹配项的相关信息，而不是一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1044">The <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String)> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="4fd7a-1045">它等效于以下代码：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1045">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#7)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#7)]  
  
 <span data-ttu-id="4fd7a-1046">静态 `Matches` 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用指定的正则表达式模式构造对象并调用实例方法 `Matches` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1046">The static `Matches` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Matches`.</span></span>  
  
 <span data-ttu-id="4fd7a-1047">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1047">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1048">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1048">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-1049"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法使用延迟计算来填充返回的 <xref:System.Text.RegularExpressions.MatchCollection> 对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1049">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="4fd7a-1050">访问此集合的成员（如 <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> 和）将 <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> 导致立即填充该集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1050">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="4fd7a-1051">若要充分利用延迟计算，应使用构造（如 `foreach` c # 中的和 `For Each` ... `Next` in Visual Basic）来循环访问集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1051">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`...`Next` in Visual Basic.</span></span>  
  
 <span data-ttu-id="4fd7a-1052">由于其延迟计算，调用方法不 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)> 会引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1052">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-1053">但是， <xref:System.Text.RegularExpressions.MatchCollection> 如果在当前应用程序域的 "REGEX_DEFAULT_MATCH_TIMEOUT" 属性定义了超时间隔并且匹配操作超过此超时间隔，则在此方法返回的对象上执行操作时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1053">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if a time-out interval is defined by the "REGEX_DEFAULT_MATCH_TIMEOUT" property of the current application domain and a matching operation exceeds this time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1054">下面的示例使用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)> 方法标识句子中以 "es" 结尾的任何单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1054">The following example uses the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)> method to identify any word in a sentence that ends in "es".</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches2.vb" id="Snippet2"::: 
  
 <span data-ttu-id="4fd7a-1055">正则表达式模式 `\b\w+es\b` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1055">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-1056">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1056">Pattern</span></span>|<span data-ttu-id="4fd7a-1057">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1057">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="4fd7a-1058">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1058">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="4fd7a-1059">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1059">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="4fd7a-1060">匹配文本字符串 "es"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1060">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="4fd7a-1061">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1061">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1062">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1062">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1063"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1063"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-1064">此方法在与调用该方法的应用程序域的默认超时值相等的时间间隔后超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1064">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="4fd7a-1065">如果尚未为应用程序域定义超时值，则将 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> 使用该值来阻止方法超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1065">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="4fd7a-1066">用于检索多个模式匹配项的建议静态方法为 <see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" /> ，可让你指定超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1066">The recommended static method for retrieving multiple pattern matches is <see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you specify the time-out interval.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1067">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1067">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.MatchCollection Matches (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.MatchCollection Matches(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Matches (input As String, pattern As String, options As RegexOptions) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Matches : string * string * System.Text.RegularExpressions.RegexOptions -&gt; System.Text.RegularExpressions.MatchCollection" Usage="System.Text.RegularExpressions.Regex.Matches (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1068">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1068">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1069">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1069">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-1070">枚举值的按位组合，这些枚举值指定用于匹配的选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1070">A bitwise combination of the enumeration values that specify options for matching.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1071">使用指定的匹配选项在指定的输入字符串中搜索指定的正则表达式的所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1071">Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1072">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1072">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span></span> <span data-ttu-id="4fd7a-1073">如果未找到匹配项，则此方法将返回一个空集合对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1073">If no matches are found, the method returns an empty collection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1074"><xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)>方法与 <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> 方法类似，不同之处在于，它返回在输入字符串中找到的所有匹配项的相关信息，而不是一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1074">The <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="4fd7a-1075">它等效于以下代码：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1075">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#8)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#8)]  
  
 <span data-ttu-id="4fd7a-1076">静态 `Matches` 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用指定的正则表达式模式构造对象并调用实例方法 `Matches` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1076">The static `Matches` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Matches`.</span></span>  
  
 <span data-ttu-id="4fd7a-1077">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1077">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1078">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1078">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-1079"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法使用延迟计算来填充返回的 <xref:System.Text.RegularExpressions.MatchCollection> 对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1079">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="4fd7a-1080">访问此集合的成员（如 <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> 和）将 <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> 导致立即填充该集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1080">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="4fd7a-1081">若要充分利用延迟计算，应使用构造（如 `foreach` c # 中的和 `For Each` ... `Next` in Visual Basic）来循环访问集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1081">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`...`Next` in Visual Basic.</span></span>  
  
 <span data-ttu-id="4fd7a-1082">由于其延迟计算，调用方法不 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)> 会引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1082">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-1083">但是， <xref:System.Text.RegularExpressions.MatchCollection> 如果在当前应用程序域的 "REGEX_DEFAULT_MATCH_TIMEOUT" 属性定义了超时间隔并且匹配操作超过此超时间隔，则在此方法返回的对象上执行操作时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1083">However, the exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if a time-out interval is defined by the "REGEX_DEFAULT_MATCH_TIMEOUT" property of the current application domain and a matching operation exceeds this time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1084">下面的示例调用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)> 方法来标识句子中以 "es" 结尾的任何单词，然后调用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> 方法以使用输入字符串执行不区分大小写的模式比较。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1084">The following example calls the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)> method to identify any word in a sentence that ends in "es", and then calls the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)> method to perform a case-insensitive comparison of the pattern with the input string.</span></span> <span data-ttu-id="4fd7a-1085">如输出所示，这两个方法返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1085">As the output shows, the two methods return different results.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches4.cs" interactive="try-dotnet" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches4.vb" id="Snippet4":::
  
 <span data-ttu-id="4fd7a-1086">正则表达式模式 `\b\w+es\b` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1086">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-1087">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1087">Pattern</span></span>|<span data-ttu-id="4fd7a-1088">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1088">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="4fd7a-1089">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1089">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="4fd7a-1090">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1090">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="4fd7a-1091">匹配文本字符串 "es"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1091">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="4fd7a-1092">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1092">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1093">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1093">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1094"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1094"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1095"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1095"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-1096">此方法在与调用该方法的应用程序域的默认超时值相等的时间间隔后超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1096">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="4fd7a-1097">如果尚未为应用程序域定义超时值，则将 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> 使用该值来阻止方法超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1097">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="4fd7a-1098">用于检索多个模式匹配项的建议静态方法是 <see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" /> ，它允许您设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1098">The recommended static method for retrieving multiple pattern matches is <see cref="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1099">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1099">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.MatchCollection Matches (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.MatchCollection Matches(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Matches (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As MatchCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::MatchCollection ^ Matches(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Matches : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; System.Text.RegularExpressions.MatchCollection" Usage="System.Text.RegularExpressions.Regex.Matches (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.MatchCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1100">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1100">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1101">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1101">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-1102">枚举值的按位组合，这些枚举值指定用于匹配的选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1102">A bitwise combination of the enumeration values that specify options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="4fd7a-1103">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1103">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1104">使用指定的匹配选项和超时间隔在指定的输入字符串中搜索指定的正则表达式的所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1104">Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1105">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1105">A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</span></span> <span data-ttu-id="4fd7a-1106">如果未找到匹配项，则此方法将返回一个空集合对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1106">If no matches are found, the method returns an empty collection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1107"><xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)>方法与 <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> 方法类似，不同之处在于，它返回在输入字符串中找到的所有匹配项的相关信息，而不是一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1107">The <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> method is similar to the <xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> method, except that it returns information about all the matches found in the input string, instead of a single match.</span></span> <span data-ttu-id="4fd7a-1108">它等效于以下代码：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1108">It is equivalent to the following code:</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Matches#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matchespattern.cs#10)]
 [!code-vb[System.Text.RegularExpressions.Regex.Matches#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matchespattern.vb#10)]  
  
 <span data-ttu-id="4fd7a-1109">静态 `Matches` 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用指定的正则表达式模式构造对象并调用实例方法 `Matches` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1109">The static `Matches` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Matches`.</span></span>  
  
 <span data-ttu-id="4fd7a-1110">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1110">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1111">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1111">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-1112"><xref:System.Text.RegularExpressions.Regex.Matches%2A>方法使用延迟计算来填充返回的 <xref:System.Text.RegularExpressions.MatchCollection> 对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1112">The <xref:System.Text.RegularExpressions.Regex.Matches%2A> method uses lazy evaluation to populate the returned <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="4fd7a-1113">访问此集合的成员（如 <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> 和）将 <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> 导致立即填充该集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1113">Accessing members of this collection such as <xref:System.Text.RegularExpressions.MatchCollection.Count%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.MatchCollection.CopyTo%2A?displayProperty=nameWithType> causes the collection to be populated immediately.</span></span> <span data-ttu-id="4fd7a-1114">若要充分利用延迟计算，应使用构造（如 `foreach` c # 中的和 `For Each` ... `Next` in Visual Basic）来循环访问集合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1114">To take advantage of lazy evaluation, you should iterate the collection by using a construct such as `foreach` in C# and `For Each`...`Next` in Visual Basic.</span></span>  
  
 <span data-ttu-id="4fd7a-1115">由于其延迟计算，调用方法不 <xref:System.Text.RegularExpressions.Regex.Matches%2A> 会引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1115">Because of its lazy evaluation, calling the <xref:System.Text.RegularExpressions.Regex.Matches%2A> method does not throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-1116">但是， <xref:System.Text.RegularExpressions.MatchCollection> 如果匹配操作超过参数所指定的超时间隔，则在此方法返回的对象上执行操作时，将引发异常 `matchTimeout` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1116">However, an exception is thrown when an operation is performed on the <xref:System.Text.RegularExpressions.MatchCollection> object returned by this method, if a matching operation exceeds this time-out interval specified by the`matchTimeout` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1117">下面的示例调用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> 方法来执行区分大小写的比较，匹配以 "es" 结尾的句子中的任何单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1117">The following example calls the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> method to perform a case-sensitive comparison that matches any word in a sentence that ends in "es".</span></span> <span data-ttu-id="4fd7a-1118">然后，它调用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> 方法，以使用输入字符串执行不区分大小写的模式比较。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1118">It then calls the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> method to perform a case-insensitive comparison of the pattern with the input string.</span></span> <span data-ttu-id="4fd7a-1119">在这两种情况下，超时间隔设置为1秒。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1119">In both cases, the time-out interval is set to one second.</span></span> <span data-ttu-id="4fd7a-1120">如输出所示，这两个方法返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1120">As the output shows, the two methods return different results.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/cs/matches5.cs" interactive="try-dotnet" id="Snippet11":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matches/vb/matches5.vb" id="Snippet11":::
  
 <span data-ttu-id="4fd7a-1121">正则表达式模式 `\b\w+es\b` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1121">The regular expression pattern `\b\w+es\b` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-1122">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1122">Pattern</span></span>|<span data-ttu-id="4fd7a-1123">描述</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1123">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="4fd7a-1124">在单词边界处开始匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1124">Begin the match at a word boundary.</span></span>|  
|`\w+`|<span data-ttu-id="4fd7a-1125">匹配一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1125">Match one or more word characters.</span></span>|  
|`es`|<span data-ttu-id="4fd7a-1126">匹配文本字符串 "es"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1126">Match the literal string "es".</span></span>|  
|`\b`|<span data-ttu-id="4fd7a-1127">在单词边界处结束匹配。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1127">End the match at a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1128">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1128">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1129"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1129"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1130"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1130"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span>  
  
<span data-ttu-id="4fd7a-1131">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1131">-or-</span></span> 
 <span data-ttu-id="4fd7a-1132"><paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1132"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-1133">建议将 <paramref name="matchTimeout" /> 参数设置为适当的值，例如两秒钟。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1133">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="4fd7a-1134">如果通过指定禁用超时 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，则正则表达式引擎可提供略微更好的性能。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1134">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="4fd7a-1135">但是，只应在以下条件下禁用超时：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1135">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="4fd7a-1136">-正则表达式处理的输入派生自已知的和受信任的源，或由静态文本组成。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1136">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="4fd7a-1137">这不包括用户动态输入的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1137">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="4fd7a-1138">-对正则表达式模式进行了全面测试，以确保它有效地处理匹配、不匹配和接近匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1138">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="4fd7a-1139">-当正则表达式模式不包含已知的语言元素时，这些元素会导致在处理接近的匹配时导致过度回溯。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1139">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1140">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1140">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeout : TimeSpan" Usage="System.Text.RegularExpressions.Regex.MatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-1141">获取当前实例的超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1141">Gets the time-out interval of the current instance.</span></span></summary>
        <value><span data-ttu-id="4fd7a-1142">在 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 引发之前或如果时间超期被禁用 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，在样式匹配操作符中可以经过的最长时间间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1142">The maximum time interval that can elapse in a pattern-matching operation before a <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> is thrown, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> if time-outs are disabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1143"><xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A>属性定义 <xref:System.Text.RegularExpressions.Regex> 实例在操作超时前执行单个匹配操作的近似最大时间间隔。在超时间隔结束后，正则表达式引擎将 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 在其下一次计时检查期间引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1143">The <xref:System.Text.RegularExpressions.Regex.MatchTimeout%2A> property defines the approximate maximum time interval for a <xref:System.Text.RegularExpressions.Regex> instance to execute a single matching operation before the operation times out. The regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check after the time-out interval has elapsed.</span></span> <span data-ttu-id="4fd7a-1144">这可以防止正则表达式引擎处理需要过多回溯的输入字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1144">This prevents the regular expression engine from processing input strings that require excessive backtracking.</span></span> <span data-ttu-id="4fd7a-1145">有关详细信息，请[](/dotnet/standard/base-types/backtracking-in-regular-expressions)参阅[正则表达式的回溯和最佳实践](/dotnet/standard/base-types/best-practices)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1145">For more information, see [Backtracking](/dotnet/standard/base-types/backtracking-in-regular-expressions) and [Best Practices for Regular Expressions](/dotnet/standard/base-types/best-practices).</span></span>  
  
 <span data-ttu-id="4fd7a-1146">此属性为只读。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1146">This property is read-only.</span></span> <span data-ttu-id="4fd7a-1147">您可以通过调用构造函数为单个对象显式设置其值，也 <xref:System.Text.RegularExpressions.Regex> <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 可以 <xref:System.Text.RegularExpressions.Regex> 通过调用方法并提供 "REGEX_DEFAULT_MATCH_TIMEOUT" 属性的值，为应用程序域中的所有匹配操作设置其值 <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> <xref:System.TimeSpan> ，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1147">You can set its value explicitly for an individual <xref:System.Text.RegularExpressions.Regex> object by calling the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor; and you can set its value for all <xref:System.Text.RegularExpressions.Regex> matching operations in an application domain by calling the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method and providing a <xref:System.TimeSpan> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property, as the following example illustrates.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matchtimeout/cs/regexmatchtimeout1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.matchtimeout/vb/regexmatchtimeout1.vb" id="Snippet1":::
  
 <span data-ttu-id="4fd7a-1148">如果未显式设置超时间隔，则使用默认值 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，并且匹配操作不会超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1148">If you do not explicitly set a time-out interval, the default value <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> is used, and matching operations do not time out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As RegexOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexOptions Options { System::Text::RegularExpressions::RegexOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.RegularExpressions.RegexOptions" Usage="System.Text.RegularExpressions.Regex.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-1149">获取传递给 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数的选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1149">Gets the options that were passed into the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span></span></summary>
        <value><span data-ttu-id="4fd7a-1150"><see cref="T:System.Text.RegularExpressions.RegexOptions" /> 枚举 的一个或多个成员表示传递至 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数的选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1150">One or more members of the <see cref="T:System.Text.RegularExpressions.RegexOptions" /> enumeration that represent options that were passed to the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1151">属性的值 <xref:System.Text.RegularExpressions.Regex.Options%2A> 由一个或多个枚举成员组成 <xref:System.Text.RegularExpressions.RegexOptions> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1151">The value of the <xref:System.Text.RegularExpressions.Regex.Options%2A> property consists of one or more members of the <xref:System.Text.RegularExpressions.RegexOptions> enumeration.</span></span> <span data-ttu-id="4fd7a-1152">如果类构造函数中未定义任何选项 <xref:System.Text.RegularExpressions.Regex> ，则其值为 <xref:System.Text.RegularExpressions.RegexOptions.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1152">If no options were defined in the <xref:System.Text.RegularExpressions.Regex> class constructor, its value is <xref:System.Text.RegularExpressions.RegexOptions.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4fd7a-1153">[正则表达式选项](/dotnet/standard/base-types/regular-expression-options)主题中详细讨论了可用选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1153">The available options are discussed in detail in the [Regular Expression Options](/dotnet/standard/base-types/regular-expression-options) topic.</span></span>  
  
 <span data-ttu-id="4fd7a-1154">请注意，该 <xref:System.Text.RegularExpressions.Regex.Options%2A> 属性不反映正则表达式模式本身中定义的内联选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1154">Note that the <xref:System.Text.RegularExpressions.Regex.Options%2A> property does not reflect inline options defined in the regular expression pattern itself.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4fd7a-1155">
            <see cref="T:System.Text.RegularExpressions.Regex" /> 方法创建的正则表达式的基类 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1155">
            <see cref="T:System.Text.RegularExpressions.Regex" /> is the base class of regular expressions created by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span> <span data-ttu-id="4fd7a-1156">这些已编译的正则表达式使用属性的基类实现 <see cref="P:System.Text.RegularExpressions.Regex.Options" /> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1156">These compiled regular expressions use the base class implementation of the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property.</span></span> <span data-ttu-id="4fd7a-1157">如果是从派生类调用的，则 <see cref="P:System.Text.RegularExpressions.Regex.Options" /> 属性返回传递给 <paramref name="options" /> <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 用于定义正则表达式的类构造函数的参数的选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1157">If called from a derived class, the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property returns the options that were passed to the <paramref name="options" /> parameter of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class constructor that was used to define the regular expression.</span></span></para></block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-options"><span data-ttu-id="4fd7a-1158">正则表达式选项</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1158">Regular Expression Options</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="pattern">
      <MemberSignature Language="C#" Value="protected internal string? pattern;" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly string pattern" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.pattern" />
      <MemberSignature Language="VB.NET" Value="Protected Friend pattern As String " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::String ^ pattern;" />
      <MemberSignature Language="F#" Value="val mutable pattern : string" Usage="System.Text.RegularExpressions.Regex.pattern" />
      <MemberSignature Language="C#" Value="protected internal string pattern;" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-1159">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1159">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fd7a-1160">在指定的输入字符串内，使用指定的替换字符串替换与某个正则表达式模式匹配的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1160">In a specified input string, replaces strings that match a regular expression pattern with a specified replacement string.</span></span></summary>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1161">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1161">Regular Expression Language - Quick Reference</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1162">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1162">Substitutions in Regular Expressions</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, replacement As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::String ^ replacement);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string -&gt; string" Usage="regex.Replace (input, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1163">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1163">The string to search for a match.</span></span></param>
        <param name="replacement"><span data-ttu-id="4fd7a-1164">替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1164">The replacement string.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1165">在指定的输入字符串内，使用指定的替换字符串替换与某个正则表达式模式匹配的所有的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1165">In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1166">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1166">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1167">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1167">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1168">搜索匹配项从字符串的开头开始 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1168">The search for matches starts at the beginning of the `input` string.</span></span> <span data-ttu-id="4fd7a-1169">正则表达式是由当前对象的构造函数定义的模式 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1169">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="4fd7a-1170">`replacement`参数指定要在其中替换每个匹配项的字符串 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1170">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="4fd7a-1171">`replacement` 可以包含文字文本和 [替换](/dotnet/standard/base-types/substitutions-in-regular-expressions)的任意组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1171">`replacement` can consist of any combination of literal text and [substitutions](/dotnet/standard/base-types/substitutions-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-1172">例如，替换模式 `a*${test}b` 插入字符串 "a \*"，后面跟有捕获组匹配的子字符串 `test` （如果有），后跟字符串 "b"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1172">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="4fd7a-1173">在替换模式中不将 \* 字符识别为元字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1173">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fd7a-1174">替换是替换模式中唯一识别的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1174">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="4fd7a-1175">所有其他正则表达式语言元素（包括 [字符转义](/dotnet/standard/base-types/character-escapes-in-regular-expressions)）仅在正则表达式模式中允许，在替换模式下不能识别。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1175">All other regular expression language elements, including [character escapes](/dotnet/standard/base-types/character-escapes-in-regular-expressions), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="4fd7a-1176"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1176">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-1177">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1177">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-1178">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1178">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="4fd7a-1179">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1179">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1180">下面的示例定义了 `\s+` 一个与一个或多个空白字符匹配的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1180">The following example defines a regular expression, `\s+`, that matches one or more white-space characters.</span></span> <span data-ttu-id="4fd7a-1181">替换字符串 "" 会将它们替换为单个空格字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1181">The replacement string, " ", replaces them with a single space character.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample5.cs" interactive="try-dotnet" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample5.vb" id="Snippet5":::
  
 <span data-ttu-id="4fd7a-1182">下面的示例定义了一个正则表达式， `(\p{Sc}\s?)?(\d+\.?((?<=\.)\d+)?)(?(1)|\s?\p{Sc})?` 以及一个 `$2` 从数值中删除前导或尾随货币符号的替换模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1182">The following example defines a regular expression, `(\p{Sc}\s?)?(\d+\.?((?<=\.)\d+)?)(?(1)|\s?\p{Sc})?`, and a replacement pattern, `$2`, that removes either a leading or a trailing currency symbol from a numeric value.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample7.cs" interactive="try-dotnet" id="Snippet7":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample7.vb" id="Snippet7"::: 
  
 <span data-ttu-id="4fd7a-1183">正则表达式模式可以解释为下表中所示内容。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1183">The regular expression is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-1184">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1184">Pattern</span></span>|<span data-ttu-id="4fd7a-1185">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1185">Description</span></span>|  
|-------------|-----------------|  
|`\p{Sc}`|<span data-ttu-id="4fd7a-1186">匹配货币符号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1186">Match a currency symbol.</span></span> <span data-ttu-id="4fd7a-1187">`{Sc}` 表示作为 Unicode 符号、货币类别的成员的任何字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1187">`{Sc}` denotes any character that is a member of the Unicode Symbol, Currency category.</span></span>|  
|`\s?`|<span data-ttu-id="4fd7a-1188">匹配零个或一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1188">Match zero or one white-space character.</span></span>|  
|`(\p{Sc}\s?)?`|<span data-ttu-id="4fd7a-1189">匹配后跟零个或一个空白字符的货币符号组合的零个或一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1189">Match zero or one occurrence of the combination of a currency symbol followed by zero or one white-space character.</span></span> <span data-ttu-id="4fd7a-1190">这是第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1190">This is the first capturing group.</span></span>|  
|`\d+`|<span data-ttu-id="4fd7a-1191">匹配一个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1191">Match one or more decimal digits.</span></span>|  
|`\.?`|<span data-ttu-id="4fd7a-1192">将一个句点的零个或一个匹配项 (用作小数点分隔符) 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1192">Match zero or one occurrence of a period (used as a decimal separator character).</span></span>|  
|`((?<=\.)\d+)?`|<span data-ttu-id="4fd7a-1193">如果句点是前一个字符，则匹配一个或多个十进制数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1193">If a period is the previous character, match one or more decimal digits.</span></span> <span data-ttu-id="4fd7a-1194">此模式可以匹配零次或一次。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1194">This pattern can be matched either zero or one time.</span></span>|  
|`(\d+\.?((?<=\.)\d+)?)`|<span data-ttu-id="4fd7a-1195">匹配一个或多个十进制数字的模式，后跟可选的句点和其他十进制数字。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1195">Match the pattern of one or more decimal digits followed by an optional period and additional decimal digits.</span></span> <span data-ttu-id="4fd7a-1196">这是第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1196">This is the second capturing group.</span></span> <span data-ttu-id="4fd7a-1197">调用 <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)> 方法会将整个匹配替换为此捕获组的值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1197">The call to the <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)> method replaces the entire match with the value of this captured group.</span></span>|  
|<code>(?(1)&#124;\s?\p{Sc})?</code>|<span data-ttu-id="4fd7a-1198">如果第一个捕获组存在，则匹配空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1198">If the first captured group exists, match an empty string.</span></span> <span data-ttu-id="4fd7a-1199">否则，匹配后跟货币符号的零个或一个空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1199">Otherwise, match zero or one white-space character followed by a currency symbol.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1200"><paramref name="input" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1200"><paramref name="input" /> or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1201">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1201">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1202">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1202">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1203">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1203">Regular Expression Language - Quick Reference</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1204">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1204">Substitutions in Regular Expressions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, evaluator As MatchEvaluator) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::Text::RegularExpressions::MatchEvaluator ^ evaluator);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * System.Text.RegularExpressions.MatchEvaluator -&gt; string" Usage="regex.Replace (input, evaluator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1205">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1205">The string to search for a match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="4fd7a-1206">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1206">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1207">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1207">In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1208">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1208">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1209">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1209">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1210"><xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)?displayProperty=nameWithType>如果满足以下任一条件，则方法可用于替换正则表达式匹配：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1210">The <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="4fd7a-1211">正则表达式替换模式无法轻易指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1211">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="4fd7a-1212">替换字符串是对匹配的字符串执行的一些处理导致的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1212">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="4fd7a-1213">从条件处理中得到的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1213">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="4fd7a-1214">方法等效于调用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String)?displayProperty=nameWithType> 方法并 <xref:System.Text.RegularExpressions.Match> 将返回集合中的每个对象传递 <xref:System.Text.RegularExpressions.MatchCollection> 给 `evaluator` 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1214">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String)?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="4fd7a-1215">正则表达式是由当前对象的构造函数定义的模式 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1215">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="4fd7a-1216">`evaluator`参数是你定义的用于检查每个匹配项的自定义方法的委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1216">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="4fd7a-1217">自定义方法必须具有以下签名才能匹配 <xref:System.Text.RegularExpressions.MatchEvaluator> 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1217">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
 
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
   
 <span data-ttu-id="4fd7a-1218">自定义方法返回替换匹配输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1218">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="4fd7a-1219"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1219">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-1220">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1220">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-1221">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1221">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="4fd7a-1222">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1222">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1223">下面的代码示例将显示原始字符串中的每个单词，并将每个匹配项的第一个字符转换为大写，然后显示转换后的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1223">The following code example displays an original string, matches each word in the original string, converts the first character of each match to uppercase, then displays the converted string.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Regex.Replace-Instance/cs/sample.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Regex.Replace-Instance/vb/sample.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1224"><paramref name="input" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1224"><paramref name="input" /> or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1225">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1225">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1226">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1226">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1227">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1227">Substitutions in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1228">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1228">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, string replacement, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, string replacement, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, replacement As String, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::String ^ replacement, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * int -&gt; string" Usage="regex.Replace (input, replacement, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1229">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1229">The string to search for a match.</span></span></param>
        <param name="replacement"><span data-ttu-id="4fd7a-1230">替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1230">The replacement string.</span></span></param>
        <param name="count"><span data-ttu-id="4fd7a-1231">可进行替换的最大次数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1231">The maximum number of times the replacement can occur.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1232">在指定输入字符串内，使用指定替换字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1232">In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1233">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1233">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1234">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1234">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1235">搜索匹配项从字符串的开头开始 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1235">The search for matches starts at the beginning of the `input` string.</span></span> <span data-ttu-id="4fd7a-1236">正则表达式是由当前对象的构造函数定义的模式 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1236">The regular expression is the pattern that is defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span> <span data-ttu-id="4fd7a-1237">如果 `count` 为负，则替换将继续到字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1237">If `count` is negative, replacements continue to the end of the string.</span></span> <span data-ttu-id="4fd7a-1238">如果 `count` 超过匹配项的数目，则将替换所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1238">If `count` exceeds the number of matches, all matches are replaced.</span></span>  
  
 <span data-ttu-id="4fd7a-1239">`replacement`参数指定要替换中第一个匹配项的字符串 `count` `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1239">The `replacement` parameter specifies the string that is to replace the first `count` matches in `input`.</span></span> <span data-ttu-id="4fd7a-1240">`replacement` 可以包含文字文本和 [替换](/dotnet/standard/base-types/substitutions-in-regular-expressions)的任意组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1240">`replacement` can consist of any combination of literal text and [substitutions](/dotnet/standard/base-types/substitutions-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-1241">例如，替换模式 `a*${test}b` 插入字符串 "a \*"，后面跟有捕获组匹配的子字符串 `test` （如果有），后跟字符串 "b"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1241">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="4fd7a-1242">在替换模式中不将 \* 字符识别为元字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1242">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fd7a-1243">替换是替换模式中唯一识别的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1243">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="4fd7a-1244">所有其他正则表达式语言元素（包括 [字符转义](/dotnet/standard/base-types/character-escapes-in-regular-expressions)）仅在正则表达式模式中允许，在替换模式下不能识别。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1244">All other regular expression language elements, including [character escapes](/dotnet/standard/base-types/character-escapes-in-regular-expressions), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="4fd7a-1245"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1245">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-1246">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1246">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-1247">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1247">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="4fd7a-1248">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1248">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1249">下面的示例将重复字符的前五个匹配项替换为单个字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1249">The following example replaces the first five occurrences of duplicated characters with a single character.</span></span> <span data-ttu-id="4fd7a-1250">正则表达式模式 `(\w)\1` 匹配单个字符连续出现的次数，并将第一个匹配项赋给第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1250">The regular expression pattern `(\w)\1` matches consecutive occurrences of a single character and assigns the first occurrence to the first capturing group.</span></span> <span data-ttu-id="4fd7a-1251">替换模式会 `$1` 将整个匹配项替换为第一个捕获的组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1251">The replacement pattern `$1` replaces the entire match with the first captured group.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample8.cs" interactive="try-dotnet" id="Snippet8":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample8.vb" id="Snippet8":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1252"><paramref name="input" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1252"><paramref name="input" /> or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1253">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1253">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1254">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1254">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1255">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1255">Regular Expression Language - Quick Reference</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1256">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1256">Substitutions in Regular Expressions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, replacement As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::String ^ replacement);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1257">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1257">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1258">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1258">The regular expression pattern to match.</span></span></param>
        <param name="replacement"><span data-ttu-id="4fd7a-1259">替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1259">The replacement string.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1260">在指定的输入字符串内，使用指定的替换字符串替换与指定正则表达式匹配的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1260">In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1261">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1261">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1262">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1262">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1263">静态 `Replace` 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用指定的正则表达式模式构造对象并调用实例方法 `Replace` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1263">The static `Replace` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Replace`.</span></span>  
  
 <span data-ttu-id="4fd7a-1264">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1264">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1265">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1265">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span> <span data-ttu-id="4fd7a-1266">搜索匹配项从字符串的开头开始 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1266">The search for matches starts at the beginning of the `input` string.</span></span>  
  
 <span data-ttu-id="4fd7a-1267">`replacement`参数指定要在其中替换每个匹配项的字符串 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1267">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="4fd7a-1268">`replacement` 可以包含文字文本和 [替换](/dotnet/standard/base-types/substitutions-in-regular-expressions)的任意组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1268">`replacement` can consist of any combination of literal text and [substitutions](/dotnet/standard/base-types/substitutions-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-1269">例如，替换模式 `a*${test}b` 插入字符串 "a \*"，后面跟有捕获组匹配的子字符串 `test` （如果有），后跟字符串 "b"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1269">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="4fd7a-1270">在替换模式中不将 \* 字符识别为元字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1270">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fd7a-1271">替换是替换模式中唯一识别的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1271">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="4fd7a-1272">所有其他正则表达式语言元素（包括 [字符转义](/dotnet/standard/base-types/character-escapes-in-regular-expressions)）仅在正则表达式模式中允许，在替换模式下不能识别。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1272">All other regular expression language elements, including [character escapes](/dotnet/standard/base-types/character-escapes-in-regular-expressions), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="4fd7a-1273"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超过为其调用该方法的应用程序域指定的超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1273">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-1274">如果在应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1274">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="4fd7a-1275">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1275">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1276">下面的示例定义了 `\s+` 一个与一个或多个空白字符匹配的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1276">The following example defines a regular expression, `\s+`, that matches one or more white-space characters.</span></span> <span data-ttu-id="4fd7a-1277">替换字符串 "" 会将它们替换为单个空格字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1277">The replacement string, " ", replaces them with a single space character.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample6.cs" interactive="try-dotnet" id="Snippet6":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample6.vb" id="Snippet6"::: 
  
 <span data-ttu-id="4fd7a-1278">下面的示例使用 <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)> 方法将 UNC 路径中的本地计算机和驱动器名称替换为本地文件路径。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1278">The following example uses the <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)> method to replace the local machine and drive names in a UNC path with a local file path.</span></span> <span data-ttu-id="4fd7a-1279">正则表达式使用 <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> 属性包含本地计算机的名称，并使用 <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> 方法来包含逻辑驱动器的名称。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1279">The regular expression uses the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property to include the name of the local computer, and the <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> method to include the names of the logical drives.</span></span> <span data-ttu-id="4fd7a-1280">若要成功运行此示例，应将文本字符串 "MyMachine" 替换为本地计算机名称。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1280">To run the example successfully, you should replace the literal string "MyMachine" with your local machine name.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace3.cs" interactive="try-dotnet" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace3.vb" id="Snippet3":::
  
 <span data-ttu-id="4fd7a-1281">正则表达式模式由以下表达式定义：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1281">The regular expression pattern is defined by the following expression:</span></span>  
  
 `"\\\\(?i:" + Environment.MachineName + ")(?:\.\w+)*\\((?i:[" + driveNames + "]))\$"`  
  
 <span data-ttu-id="4fd7a-1282">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1282">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="4fd7a-1283">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1283">Pattern</span></span>|<span data-ttu-id="4fd7a-1284">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1284">Description</span></span>|  
|-------------|-----------------|  
|`\\\\`|<span data-ttu-id="4fd7a-1285">匹配两个连续的反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1285">Match two consecutive backslash (`\`) characters.</span></span> <span data-ttu-id="4fd7a-1286">因为反斜杠字符被解释为转义字符，所以每个反斜杠都必须用另一个反斜杠进行转义。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1286">Because the backslash character is interpreted as the escape character, each backslash must be escaped with another backslash.</span></span>|  
|`(?i:" + Environment.MachineName + ")`|<span data-ttu-id="4fd7a-1287">执行属性返回的字符串的不区分大小写的匹配项 <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1287">Perform a case-insensitive match of the string that is returned by the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property.</span></span>|  
|`(?:\.\w+)*`|<span data-ttu-id="4fd7a-1288">匹配句点 (`.`) 字符后跟一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1288">Match the period (`.`) character followed by one or more word characters.</span></span> <span data-ttu-id="4fd7a-1289">此匹配可以出现零次或多次。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1289">This match can occur zero or more times.</span></span> <span data-ttu-id="4fd7a-1290">不捕获匹配的子表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1290">The matched subexpression is not captured.</span></span>|  
|`\\`|<span data-ttu-id="4fd7a-1291">匹配反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1291">Match a backslash (`\`) character.</span></span>|  
|`((?i:[" + driveNames + "]))`|<span data-ttu-id="4fd7a-1292">执行由单个驱动器号组成的字符类的不区分大小写的匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1292">Perform a case-insensitive match of the character class that consists of the individual drive letters.</span></span> <span data-ttu-id="4fd7a-1293">此匹配是第一个捕获的子表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1293">This match is the first captured subexpression.</span></span>|  
|`\$`|<span data-ttu-id="4fd7a-1294">匹配文本美元符号 (`$`) 字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1294">Match the literal dollar sign (`$`) character.</span></span>|  
  
 <span data-ttu-id="4fd7a-1295">替换模式将 `$1` 整个匹配项替换为第一个捕获的子表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1295">The replacement pattern `$1` replaces the entire match with the first captured subexpression.</span></span> <span data-ttu-id="4fd7a-1296">也就是说，它将 UNC 计算机和驱动器名称替换为驱动器号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1296">That is, it replaces the UNC machine and drive name with the drive letter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1297">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1297">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1298"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1298"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1299">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1299">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1300">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1300">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-1301">此方法在与调用该方法的应用程序域的默认超时值相等的时间间隔后超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1301">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="4fd7a-1302">如果尚未为应用程序域定义超时值，则将 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> 使用该值来阻止方法超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1302">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="4fd7a-1303">建议用于替换模式匹配的静态方法是 <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" /> ，这使你可以设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1303">The recommended static method for replacing a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1304">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1304">Substitutions in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1305">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1305">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, System.Text.RegularExpressions.MatchEvaluator evaluator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, class System.Text.RegularExpressions.MatchEvaluator evaluator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, evaluator As MatchEvaluator) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::MatchEvaluator ^ evaluator);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * System.Text.RegularExpressions.MatchEvaluator -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, evaluator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1306">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1306">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1307">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1307">The regular expression pattern to match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="4fd7a-1308">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1308">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1309">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1309">In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1310">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1310">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1311">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1311">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1312"><xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)?displayProperty=nameWithType>如果满足以下任一条件，则方法可用于替换正则表达式匹配：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1312">The <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="4fd7a-1313">正则表达式替换模式无法轻易指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1313">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="4fd7a-1314">替换字符串是对匹配的字符串执行的一些处理导致的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1314">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="4fd7a-1315">从条件处理中得到的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1315">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="4fd7a-1316">方法等效于调用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)?displayProperty=nameWithType> 方法并 <xref:System.Text.RegularExpressions.Match> 将返回集合中的每个对象传递 <xref:System.Text.RegularExpressions.MatchCollection> 给 `evaluator` 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1316">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="4fd7a-1317">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1317">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1318">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1318">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-1319">`evaluator`参数是你定义的用于检查每个匹配项的自定义方法的委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1319">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="4fd7a-1320">自定义方法必须具有以下签名才能匹配 <xref:System.Text.RegularExpressions.MatchEvaluator> 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1320">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
  
 <span data-ttu-id="4fd7a-1321">自定义方法返回替换匹配输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1321">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="4fd7a-1322"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超过为其调用该方法的应用程序域指定的超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1322">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-1323">如果在应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1323">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="4fd7a-1324">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1324">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1325">下面的示例使用正则表达式从字符串中提取各个单词，然后使用 <xref:System.Text.RegularExpressions.MatchEvaluator> 委托调用一个名为 `WordScramble` 的方法，该方法对单词中的各个字母进行编码。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1325">The following example uses a regular expression to extract the individual words from a string, and then uses a <xref:System.Text.RegularExpressions.MatchEvaluator> delegate to call a method named `WordScramble` that scrambles the individual letters in the word.</span></span> <span data-ttu-id="4fd7a-1326">为此， `WordScramble` 方法会创建一个包含匹配项中的字符的数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1326">To do this, the `WordScramble` method creates an array that contains the characters in the match.</span></span> <span data-ttu-id="4fd7a-1327">它还会创建一个并行数组，该数组使用随机浮点数填充。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1327">It also creates a parallel array that it populates with random floating-point numbers.</span></span> <span data-ttu-id="4fd7a-1328">通过调用方法对数组进行排序 <xref:System.Array.Sort%60%602(%60%600%5B%5D,%60%601%5B%5D,System.Collections.Generic.IComparer%7B%60%600%7D)?displayProperty=nameWithType> ，并将排序的数组作为参数提供给 <xref:System.String> 类构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1328">The arrays are sorted by calling the <xref:System.Array.Sort%60%602(%60%600%5B%5D,%60%601%5B%5D,System.Collections.Generic.IComparer%7B%60%600%7D)?displayProperty=nameWithType> method, and the sorted array is provided as an argument to a <xref:System.String> class constructor.</span></span> <span data-ttu-id="4fd7a-1329">然后，该方法将返回这个新创建的字符串 `WordScramble` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1329">This newly created string is then returned by the `WordScramble` method.</span></span> <span data-ttu-id="4fd7a-1330">正则表达式模式 `\w+` 匹配一个或多个单词字符; 正则表达式引擎将继续向匹配项添加字符，直到遇到非单词字符，例如空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1330">The regular expression pattern `\w+` matches one or more word characters; the regular expression engine will continue to add characters to the match until it encounters a non-word character, such as a white-space character.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace5.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace5.vb" id="Snippet2":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1331">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1331">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1332"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1332"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1333">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1333">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1334">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1334">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-1335">此方法在与调用该方法的应用程序域的默认超时值相等的时间间隔后超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1335">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="4fd7a-1336">如果尚未为应用程序域定义超时值，则将 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> 使用该值来阻止方法超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1336">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="4fd7a-1337">用于计算和替换模式匹配的推荐静态方法是 <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" /> ，这使你可以设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1337">The recommended static method for evaluating and replacing a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1338">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1338">Substitutions in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1339">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1339">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, evaluator As MatchEvaluator, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * System.Text.RegularExpressions.MatchEvaluator * int -&gt; string" Usage="regex.Replace (input, evaluator, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1340">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1340">The string to search for a match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="4fd7a-1341">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1341">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <param name="count"><span data-ttu-id="4fd7a-1342">进行替换的最大次数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1342">The maximum number of times the replacement will occur.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1343">在指定的输入字符串内，使用 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1343">In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1344">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1344">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1345">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1345">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1346"><xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)?displayProperty=nameWithType>如果满足以下任一条件，则方法可用于替换正则表达式匹配：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1346">The <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="4fd7a-1347">正则表达式替换模式无法轻易指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1347">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="4fd7a-1348">替换字符串是对匹配的字符串执行的一些处理导致的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1348">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="4fd7a-1349">从条件处理中得到的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1349">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="4fd7a-1350">方法等效于调用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String)?displayProperty=nameWithType> 方法，并将 `count` <xref:System.Text.RegularExpressions.Match> 返回集合中的第一个对象传递 <xref:System.Text.RegularExpressions.MatchCollection> 到 `evaluator` 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1350">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String)?displayProperty=nameWithType> method and passing the first `count`<xref:System.Text.RegularExpressions.Match> objects in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="4fd7a-1351">正则表达式是由当前对象的构造函数定义的模式 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1351">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="4fd7a-1352">`evaluator`参数是你定义的用于检查每个匹配项的自定义方法的委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1352">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="4fd7a-1353">自定义方法必须具有以下签名才能匹配 <xref:System.Text.RegularExpressions.MatchEvaluator> 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1353">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  

 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
    
 <span data-ttu-id="4fd7a-1354">自定义方法返回替换匹配输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1354">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="4fd7a-1355"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1355">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-1356">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1356">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-1357">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1357">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="4fd7a-1358">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1358">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1359">下面的示例使用正则表达式来特意拼错列表中的半个单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1359">The following example uses a regular expression to deliberately misspell half of the words in a list.</span></span> <span data-ttu-id="4fd7a-1360">它使用正则表达式 `\w*(ie|ei)\w*` 来匹配包含字符 "ie" 或 "ei" 的单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1360">It uses the regular expression `\w*(ie|ei)\w*` to match words that include the characters "ie" or "ei".</span></span> <span data-ttu-id="4fd7a-1361">它将匹配单词的前半部分传递给 `ReverseLetter` 方法，该方法反过来使用 <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)> 方法反转匹配字符串中的 "i" 和 "e"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1361">It passes the first half of the matching words to the `ReverseLetter` method, which, in turn, uses the <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)> method to reverse "i" and "e" in the matched string.</span></span> <span data-ttu-id="4fd7a-1362">其余单词保持不变。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1362">The remaining words remain unchanged.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace7.cs" interactive="try-dotnet" id="Snippet11":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace7.vb" id="Snippet11":::  
  
 <span data-ttu-id="4fd7a-1363">正则表达式 `\w*(ie|ei)\w*` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1363">The regular expression `\w*(ie|ei)\w*` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-1364">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1364">Pattern</span></span>|<span data-ttu-id="4fd7a-1365">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1365">Description</span></span>|  
|-------------|-----------------|  
|`\w*`|<span data-ttu-id="4fd7a-1366">匹配零个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1366">Match zero or more word characters.</span></span>|  
|<code>(ie&#124;ei)</code>|<span data-ttu-id="4fd7a-1367">匹配 "ie" 或 "ei"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1367">Match either "ie" or "ei".</span></span>|  
|`\w*`|<span data-ttu-id="4fd7a-1368">匹配零个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1368">Match zero or more word characters.</span></span>|  
  
 <span data-ttu-id="4fd7a-1369">方法中的正则表达式模式 `([ie])([ie])` `ReverseLetter` 匹配 diphthong "ie" 或 "ei" 中的第一个 "i" 或 "e"，并将该字母分配给第一个捕获组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1369">The regular expression pattern `([ie])([ie])` in the `ReverseLetter` method matches the first "i" or "e" in the diphthong "ie" or "ei" and assigns the letter to the first capturing group.</span></span> <span data-ttu-id="4fd7a-1370">它与第二个 "i" 或 "e" 匹配，并将该字母分配给第二个捕获组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1370">It matches the second "i" or "e" and assigns the letter to the second capturing group.</span></span> <span data-ttu-id="4fd7a-1371">然后通过使用替换模式调用方法来反转两个字符 <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)> `$2$1` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1371">The two characters are then reversed by calling the <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)> method with the replacement pattern `$2$1`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1372"><paramref name="input" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1372"><paramref name="input" /> or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1373">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1373">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1374">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1374">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1375">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1375">Substitutions in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1376">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1376">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, string replacement, int count, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, string replacement, int32 count, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, replacement As String, count As Integer, startat As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::String ^ replacement, int count, int startat);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * int * int -&gt; string" Usage="regex.Replace (input, replacement, count, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1377">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1377">The string to search for a match.</span></span></param>
        <param name="replacement"><span data-ttu-id="4fd7a-1378">替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1378">The replacement string.</span></span></param>
        <param name="count"><span data-ttu-id="4fd7a-1379">可进行替换的最大次数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1379">Maximum number of times the replacement can occur.</span></span></param>
        <param name="startat"><span data-ttu-id="4fd7a-1380">输入字符串中开始执行搜索的字符位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1380">The character position in the input string where the search begins.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1381">在指定输入子字符串内，使用指定替换字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1381">In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1382">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1382">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1383">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1383">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1384">搜索匹配项从 `input` 参数指定的位置处的字符串开始 `startat` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1384">The search for matches starts in the `input` string at the position specified by the `startat` parameter.</span></span> <span data-ttu-id="4fd7a-1385">正则表达式是由当前对象的构造函数定义的模式 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1385">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span> <span data-ttu-id="4fd7a-1386">如果 `count` 为负，则替换将继续到字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1386">If `count` is negative, replacements continue to the end of the string.</span></span> <span data-ttu-id="4fd7a-1387">如果 `count` 超过匹配项的数目，则将替换所有匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1387">If `count` exceeds the number of matches, all matches are replaced.</span></span>  
  
 <span data-ttu-id="4fd7a-1388">`replacement`参数指定要在其中替换每个匹配项的字符串 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1388">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="4fd7a-1389">`replacement` 可以包含文字文本和 [替换](/dotnet/standard/base-types/substitutions-in-regular-expressions)的任意组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1389">`replacement` can consist of any combination of literal text and [substitutions](/dotnet/standard/base-types/substitutions-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-1390">例如，替换模式 `a*${test}b` 插入字符串 "a \*"，后面跟有捕获组匹配的子字符串 `test` （如果有），后跟字符串 "b"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1390">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="4fd7a-1391">在替换模式中不将 \* 字符识别为元字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1391">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fd7a-1392">替换是替换模式中唯一识别的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1392">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="4fd7a-1393">所有其他正则表达式语言元素（包括 [字符转义](/dotnet/standard/base-types/character-escapes-in-regular-expressions)）仅在正则表达式模式中允许，在替换模式下不能识别。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1393">All other regular expression language elements, including [character escapes](/dotnet/standard/base-types/character-escapes-in-regular-expressions), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="4fd7a-1394"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1394">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-1395">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1395">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-1396">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1396">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="4fd7a-1397">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1397">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1398">下面的示例在字符串的第一行之外的所有字符都是双空格。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1398">The following example double-spaces all but the first line of a string.</span></span> <span data-ttu-id="4fd7a-1399">它定义了与文本行匹配的正则表达式模式， `^.*$` 调用 <xref:System.Text.RegularExpressions.Regex.Match(System.String)> 方法与字符串的第一行匹配，并使用 `Match.Index` 和 `Match.Count` 属性来确定第二行的起始位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1399">It defines a regular expression pattern, `^.*$`, that matches a line of text, calls the <xref:System.Text.RegularExpressions.Regex.Match(System.String)> method to match the first line of the string, and uses the `Match.Index` and `Match.Count` properties to determine the starting position of the second line.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replaceexample9.cs" interactive="try-dotnet" id="Snippet9":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replaceexample9.vb" id="Snippet9"::: 
  
 <span data-ttu-id="4fd7a-1400">正则表达式模式 `^.*$` 的定义如下表所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1400">The regular expression pattern `^.*$` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="4fd7a-1401">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1401">Pattern</span></span>|<span data-ttu-id="4fd7a-1402">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1402">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="4fd7a-1403">匹配行的开头。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1403">Match the start of a line.</span></span> <span data-ttu-id="4fd7a-1404"> (请注意， <xref:System.Text.RegularExpressions.Regex> 对象已使用选项进行实例化 <xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType> ; 否则，此字符类将仅匹配输入字符串的开头。 ) </span><span class="sxs-lookup"><span data-stu-id="4fd7a-1404">(Note that the <xref:System.Text.RegularExpressions.Regex> object was instantiated by using the <xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType> option; otherwise, this character class would only match the beginning of the input string.)</span></span>|  
|`.*`|<span data-ttu-id="4fd7a-1405">零次或多次匹配任何字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1405">Match any character zero or more times.</span></span>|  
|`$`|<span data-ttu-id="4fd7a-1406">匹配行尾。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1406">Match the end of a line.</span></span> <span data-ttu-id="4fd7a-1407"> (请注意， <xref:System.Text.RegularExpressions.Regex> 对象已使用选项进行实例化 <xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType> ; 否则，此字符类将仅匹配输入字符串的开头。 ) </span><span class="sxs-lookup"><span data-stu-id="4fd7a-1407">(Note that the <xref:System.Text.RegularExpressions.Regex> object was instantiated by using the <xref:System.Text.RegularExpressions.RegexOptions.Multiline?displayProperty=nameWithType> option; otherwise, this character class would only match the beginning of the input string.)</span></span>|  
  
 <span data-ttu-id="4fd7a-1408">在 c # 中，替换字符串 (`vbCrLf + "$&"` 在 Visual Basic 中 `"\n$&"` ) 在匹配的字符串之前添加新行。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1408">The replacement string (`vbCrLf + "$&"` in Visual Basic, `"\n$&"` in C#) adds a new line before the matched string.</span></span> <span data-ttu-id="4fd7a-1409">请注意， `\n` 在 c # 示例中，c # 编译器将解释为换行符，它不表示正则表达式字符转义。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1409">Note that `\n` in the C# example is interpreted as the newline character by the C# compiler; it does not represent a regular expression character escape.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1410"><paramref name="input" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1410"><paramref name="input" /> or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1411"><paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1411"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1412">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1412">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1413">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1413">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1414">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1414">Substitutions in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1415">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1415">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, string replacement, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, string replacement, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, replacement As String, options As RegexOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::String ^ replacement, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * System.Text.RegularExpressions.RegexOptions -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, replacement, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1416">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1416">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1417">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1417">The regular expression pattern to match.</span></span></param>
        <param name="replacement"><span data-ttu-id="4fd7a-1418">替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1418">The replacement string.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-1419">枚举值的一个按位组合，这些枚举值提供匹配选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1419">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1420">在指定的输入字符串内，使用指定的替换字符串替换与指定正则表达式匹配的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1420">In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.</span></span> <span data-ttu-id="4fd7a-1421">指定的选项将修改匹配操作。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1421">Specified options modify the matching operation.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1422">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1422">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1423">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1423">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1424">静态 `Replace` 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用指定的正则表达式模式构造对象并调用实例方法 `Replace` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1424">The static `Replace` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Replace`.</span></span>  
  
 <span data-ttu-id="4fd7a-1425">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1425">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1426">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1426">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span> <span data-ttu-id="4fd7a-1427">如果 <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> 为 `options` 参数指定，则搜索匹配项将从输入字符串的末尾开始，并向左移动; 否则，搜索将从输入字符串的开头开始向右移动。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1427">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="4fd7a-1428">`replacement`参数指定要在其中替换每个匹配项的字符串 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1428">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="4fd7a-1429">`replacement` 可以包含文字文本和 [替换](/dotnet/standard/base-types/substitutions-in-regular-expressions)的任意组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1429">`replacement` can consist of any combination of literal text and [substitutions](/dotnet/standard/base-types/substitutions-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-1430">例如，替换模式 `a*${test}b` 插入字符串 "a \*"，后面跟有捕获组匹配的子字符串 `test` （如果有），后跟字符串 "b"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1430">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="4fd7a-1431">在替换模式中不将 \* 字符识别为元字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1431">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fd7a-1432">替换是替换模式中唯一识别的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1432">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="4fd7a-1433">所有其他正则表达式语言元素（包括 [字符转义](/dotnet/standard/base-types/character-escapes-in-regular-expressions)）仅在正则表达式模式中允许，在替换模式下不能识别。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1433">All other regular expression language elements, including [character escapes](/dotnet/standard/base-types/character-escapes-in-regular-expressions), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="4fd7a-1434"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超过为其调用该方法的应用程序域指定的超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1434">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-1435">如果在应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1435">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="4fd7a-1436">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1436">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1437">下面的示例使用 <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)> 方法将 UNC 路径中的本地计算机和驱动器名称替换为本地文件路径。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1437">The following example uses the <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)> method to replace the local machine and drive names in a UNC path with a local file path.</span></span> <span data-ttu-id="4fd7a-1438">正则表达式使用 <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> 属性包含本地计算机的名称，并使用 <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> 方法来包含逻辑驱动器的名称。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1438">The regular expression uses the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property to include the name of the local computer, and the <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> method to include the names of the logical drives.</span></span> <span data-ttu-id="4fd7a-1439">所有正则表达式字符串比较都不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1439">All regular expression string comparisons are case-insensitive.</span></span> <span data-ttu-id="4fd7a-1440">若要成功运行此示例，应将文本字符串 "MyMachine" 替换为本地计算机名称。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1440">To run the example successfully, you should replace the literal string "MyMachine" with your local machine name.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace4.cs" interactive="try-dotnet" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace4.vb" id="Snippet4":::
  
 <span data-ttu-id="4fd7a-1441">正则表达式模式由以下表达式定义：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1441">The regular expression pattern is defined by the following expression:</span></span>  
  
 `"\\\\" + Environment.MachineName + "(?:\.\w+)*\\([" + driveNames + "])\$"`  
  
 <span data-ttu-id="4fd7a-1442">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1442">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="4fd7a-1443">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1443">Pattern</span></span>|<span data-ttu-id="4fd7a-1444">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1444">Description</span></span>|  
|-------------|-----------------|  
|`\\\\`|<span data-ttu-id="4fd7a-1445">匹配两个连续的反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1445">Match two consecutive backslash (`\`) characters.</span></span> <span data-ttu-id="4fd7a-1446">因为反斜杠字符被解释为转义字符，所以每个反斜杠都必须用另一个反斜杠进行转义。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1446">Because the backslash character is interpreted as the escape character, each backslash must be escaped with another backslash.</span></span>|  
|`+ Environment.MachineName +`|<span data-ttu-id="4fd7a-1447">与属性返回的字符串匹配 <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1447">Match the string that is returned by the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property.</span></span>|  
|`(?:\.\w+)*`|<span data-ttu-id="4fd7a-1448">匹配句点 (`.`) 字符后跟一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1448">Match the period (`.`) character followed by one or more word characters.</span></span> <span data-ttu-id="4fd7a-1449">此匹配可以出现零次或多次。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1449">This match can occur zero or more times.</span></span> <span data-ttu-id="4fd7a-1450">不捕获匹配的子表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1450">The matched subexpression is not captured.</span></span>|  
|`\\`|<span data-ttu-id="4fd7a-1451">匹配反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1451">Match a backslash (`\`) character.</span></span>|  
|`([" + driveNames + "])`|<span data-ttu-id="4fd7a-1452">匹配由单个驱动器号组成的字符类。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1452">Match the character class that consists of the individual drive letters.</span></span> <span data-ttu-id="4fd7a-1453">此匹配是第一个捕获的子表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1453">This match is the first captured subexpression.</span></span>|  
|`\$`|<span data-ttu-id="4fd7a-1454">匹配文本美元符号 (`$`) 字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1454">Match the literal dollar sign (`$`) character.</span></span>|  
  
 <span data-ttu-id="4fd7a-1455">替换模式将 `$1` 整个匹配项替换为第一个捕获的子表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1455">The replacement pattern `$1` replaces the entire match with the first captured subexpression.</span></span> <span data-ttu-id="4fd7a-1456">也就是说，它将 UNC 计算机和驱动器名称替换为驱动器号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1456">That is, it replaces the UNC machine and drive name with the drive letter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1457">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1457">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1458"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1458"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1459"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1459"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1460">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1460">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1461">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1461">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-1462">此方法在与调用该方法的应用程序域的默认超时值相等的时间间隔后超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1462">This method times out after an interval that is equal to the default time-out value of the application domain in which it is called.</span></span> <span data-ttu-id="4fd7a-1463">如果尚未为应用程序域定义超时值，则将 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> 使用该值来阻止方法超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1463">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="4fd7a-1464">建议用于替换模式匹配的静态方法是 <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" /> ，这使你可以设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1464">The recommended static method for replacing a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1465">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1465">Substitutions in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1466">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1466">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, System.Text.RegularExpressions.MatchEvaluator evaluator, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, class System.Text.RegularExpressions.MatchEvaluator evaluator, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, evaluator As MatchEvaluator, options As RegexOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * System.Text.RegularExpressions.MatchEvaluator * System.Text.RegularExpressions.RegexOptions -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, evaluator, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1467">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1467">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1468">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1468">The regular expression pattern to match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="4fd7a-1469">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1469">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-1470">枚举值的一个按位组合，这些枚举值提供匹配选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1470">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1471">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1471">In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span> <span data-ttu-id="4fd7a-1472">指定的选项将修改匹配操作。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1472">Specified options modify the matching operation.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1473">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1473">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1474">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1474">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1475"><xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType>如果满足以下任一条件，则方法可用于替换中的正则表达式匹配：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1475">The <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> method is useful for replacing a regular expression match in if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="4fd7a-1476">正则表达式替换模式无法轻易指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1476">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="4fd7a-1477">替换字符串是对匹配的字符串执行的一些处理导致的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1477">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="4fd7a-1478">从条件处理中得到的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1478">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="4fd7a-1479">方法等效于调用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> 方法并 <xref:System.Text.RegularExpressions.Match> 将返回集合中的每个对象传递 <xref:System.Text.RegularExpressions.MatchCollection> 给 `evaluator` 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1479">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="4fd7a-1480">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1480">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1481">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1481">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-1482">`evaluator`参数是你定义的用于检查每个匹配项的自定义方法的委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1482">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="4fd7a-1483">自定义方法必须具有以下签名才能匹配 <xref:System.Text.RegularExpressions.MatchEvaluator> 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1483">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
   
 <span data-ttu-id="4fd7a-1484">自定义方法返回替换匹配输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1484">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="4fd7a-1485">如果 <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> 为 `options` 参数指定，则搜索匹配项将从输入字符串的末尾开始，并向左移动; 否则，搜索将从输入字符串的开头开始向右移动。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1485">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="4fd7a-1486"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超过为其调用该方法的应用程序域指定的超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1486">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-1487">如果在应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1487">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="4fd7a-1488">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1488">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1489">下面的示例使用正则表达式从字符串中提取各个单词，然后使用 <xref:System.Text.RegularExpressions.MatchEvaluator> 委托调用一个名为 `WordScramble` 的方法，该方法对单词中的各个字母进行编码。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1489">The following example uses a regular expression to extract the individual words from a string, and then uses a <xref:System.Text.RegularExpressions.MatchEvaluator> delegate to call a method named `WordScramble` that scrambles the individual letters in the word.</span></span> <span data-ttu-id="4fd7a-1490">为此， `WordScramble` 方法会创建一个包含匹配项中的字符的数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1490">To do this, the `WordScramble` method creates an array that contains the characters in the match.</span></span> <span data-ttu-id="4fd7a-1491">它还会创建一个并行数组，该数组使用随机浮点数填充。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1491">It also creates a parallel array that it populates with random floating-point numbers.</span></span> <span data-ttu-id="4fd7a-1492">通过调用方法对数组进行排序 <xref:System.Array.Sort%60%602(%60%600%5B%5D,%60%601%5B%5D,System.Collections.Generic.IComparer%7B%60%600%7D)?displayProperty=nameWithType> ，并将排序的数组作为参数提供给 <xref:System.String> 类构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1492">The arrays are sorted by calling the <xref:System.Array.Sort%60%602(%60%600%5B%5D,%60%601%5B%5D,System.Collections.Generic.IComparer%7B%60%600%7D)?displayProperty=nameWithType> method, and the sorted array is provided as an argument to a <xref:System.String> class constructor.</span></span> <span data-ttu-id="4fd7a-1493">然后，该方法将返回这个新创建的字符串 `WordScramble` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1493">This newly created string is then returned by the `WordScramble` method.</span></span> <span data-ttu-id="4fd7a-1494">正则表达式模式 `\w+` 匹配一个或多个单词字符; 正则表达式引擎将继续向匹配项添加字符，直到遇到非单词字符，例如空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1494">The regular expression pattern `\w+` matches one or more word characters; the regular expression engine will continue to add characters to the match until it encounters a non-word character, such as a white-space character.</span></span> <span data-ttu-id="4fd7a-1495">对方法的调用 <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)> 包括 <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> 选项，以便正则表达式引擎将忽略正则表达式模式中的注释 `\w+  # Matches all the characters in a word.` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1495">The call to the <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)> method includes the <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> option so that the comment in the regular expression pattern `\w+  # Matches all the characters in a word.` is ignored by the regular expression engine.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace6.cs" interactive="try-dotnet" id="Snippet10":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace6.vb" id="Snippet10"::: 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1496">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1496">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1497"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1497"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1498"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1498"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1499">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1499">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1500">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1500">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1501">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1501">Substitutions in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1502">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1502">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator, int count, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string input, class System.Text.RegularExpressions.MatchEvaluator evaluator, int32 count, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, evaluator As MatchEvaluator, count As Integer, startat As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ input, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, int count, int startat);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * System.Text.RegularExpressions.MatchEvaluator * int * int -&gt; string" Usage="regex.Replace (input, evaluator, count, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1503">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1503">The string to search for a match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="4fd7a-1504">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1504">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <param name="count"><span data-ttu-id="4fd7a-1505">进行替换的最大次数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1505">The maximum number of times the replacement will occur.</span></span></param>
        <param name="startat"><span data-ttu-id="4fd7a-1506">输入字符串中开始执行搜索的字符位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1506">The character position in the input string where the search begins.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1507">在指定的输入子字符串内，使用 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1507">In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1508">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1508">A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1509">如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1509">If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1510"><xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)?displayProperty=nameWithType>如果满足以下任一条件，则方法可用于替换正则表达式匹配：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1510">The <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="4fd7a-1511">正则表达式替换模式无法轻易指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1511">The replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="4fd7a-1512">替换字符串是对匹配的字符串执行的一些处理导致的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1512">The replacement string results from some processing done on the matched string.</span></span>  
  
-   <span data-ttu-id="4fd7a-1513">从条件处理中得到的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1513">The replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="4fd7a-1514">方法等效于调用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)?displayProperty=nameWithType> 方法，并将 `count` <xref:System.Text.RegularExpressions.Match> 返回集合中的第一个对象传递 <xref:System.Text.RegularExpressions.MatchCollection> 到 `evaluator` 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1514">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)?displayProperty=nameWithType> method and passing the first `count`<xref:System.Text.RegularExpressions.Match> objects in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="4fd7a-1515">正则表达式是由当前对象的构造函数定义的模式 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1515">The regular expression is the pattern defined by the constructor for the current <xref:System.Text.RegularExpressions.Regex> object.</span></span>  
  
 <span data-ttu-id="4fd7a-1516">`evaluator`参数是你定义的用于检查每个匹配项的自定义方法的委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1516">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="4fd7a-1517">自定义方法必须具有以下签名才能匹配 <xref:System.Text.RegularExpressions.MatchEvaluator> 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1517">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
 
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
   
 <span data-ttu-id="4fd7a-1518">自定义方法返回替换匹配输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1518">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="4fd7a-1519"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果替换操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1519">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the replacement operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-1520">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1520">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-1521">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1521">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 <span data-ttu-id="4fd7a-1522">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1522">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1523"><paramref name="input" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1523"><paramref name="input" /> or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1524"><paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1524"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1525">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1525">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1526">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1526">For more information about time-outs, see the Remarks section.</span></span></exception>
        <altmember cref="T:System.Text.RegularExpressions.MatchEvaluator" />
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1527">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1527">Substitutions in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1528">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1528">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, string replacement, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, string replacement, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, replacement As String, options As RegexOptions, matchTimeout As TimeSpan) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::String ^ replacement, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, replacement, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="replacement" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="4" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1529">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1529">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1530">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1530">The regular expression pattern to match.</span></span></param>
        <param name="replacement"><span data-ttu-id="4fd7a-1531">替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1531">The replacement string.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-1532">枚举值的一个按位组合，这些枚举值提供匹配选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1532">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="4fd7a-1533">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1533">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1534">在指定的输入字符串内，使用指定的替换字符串替换与指定正则表达式匹配的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1534">In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.</span></span> <span data-ttu-id="4fd7a-1535">如果未找到匹配项，则其他参数指定修改匹配操作的选项和超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1535">Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1536">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1536">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1537">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1537">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1538">静态 `Replace` 方法等效于 <xref:System.Text.RegularExpressions.Regex> 使用指定的正则表达式模式构造对象并调用实例方法 `Replace` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1538">The static `Replace` methods are equivalent to constructing a <xref:System.Text.RegularExpressions.Regex> object with the specified regular expression pattern and calling the instance method `Replace`.</span></span>  
  
 <span data-ttu-id="4fd7a-1539">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1539">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1540">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1540">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span> <span data-ttu-id="4fd7a-1541">如果 <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> 为 `options` 参数指定，则搜索匹配项将从输入字符串的末尾开始，并向左移动; 否则，搜索将从输入字符串的开头开始向右移动。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1541">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="4fd7a-1542">`replacement`参数指定要在其中替换每个匹配项的字符串 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1542">The `replacement` parameter specifies the string that is to replace each match in `input`.</span></span> <span data-ttu-id="4fd7a-1543">`replacement` 可以包含文字文本和 [替换](/dotnet/standard/base-types/substitutions-in-regular-expressions)的任意组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1543">`replacement` can consist of any combination of literal text and [substitutions](/dotnet/standard/base-types/substitutions-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-1544">例如，替换模式 `a*${test}b` 插入字符串 "a \*"，后面跟有捕获组匹配的子字符串 `test` （如果有），后跟字符串 "b"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1544">For example, the replacement pattern `a*${test}b` inserts the string "a\*" followed by the substring that is matched by the `test` capturing group, if any, followed by the string "b".</span></span> <span data-ttu-id="4fd7a-1545">在替换模式中不将 \* 字符识别为元字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1545">The \* character is not recognized as a metacharacter within a replacement pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fd7a-1546">替换是替换模式中唯一识别的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1546">Substitutions are the only regular expression language elements that are recognized in a replacement pattern.</span></span> <span data-ttu-id="4fd7a-1547">所有其他正则表达式语言元素（包括 [字符转义](/dotnet/standard/base-types/character-escapes-in-regular-expressions)）仅在正则表达式模式中允许，在替换模式下不能识别。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1547">All other regular expression language elements, including [character escapes](/dotnet/standard/base-types/character-escapes-in-regular-expressions), are allowed in regular expression patterns only and are not recognized in replacement patterns.</span></span>  
  
 <span data-ttu-id="4fd7a-1548">`matchTimeout`参数指定模式匹配方法在超时之前应尝试找到匹配项的时间长度。设置超时间隔可防止正则表达式在处理包含接近匹配项的输入时，这些表达式会出现依赖于过量回溯的正则表达式停止响应。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1548">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="4fd7a-1549">有关详细信息，请参阅[正则表达式和回溯的最佳实践](/dotnet/standard/base-types/best-practices)。 [](/dotnet/standard/base-types/backtracking-in-regular-expressions)</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1549">For more information, see [Best Practices for Regular Expressions](/dotnet/standard/base-types/best-practices) and [Backtracking](/dotnet/standard/base-types/backtracking-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-1550">如果在该时间间隔内未找到匹配项，则该方法将引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1550">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-1551">`matchTimeout` 重写为在其中执行该方法的应用程序域定义的任何默认超时值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1551">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 <span data-ttu-id="4fd7a-1552">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1552">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1553">下面的示例使用 <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> 方法将 UNC 路径中的本地计算机和驱动器名称替换为本地文件路径。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1553">The following example uses the <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)> method to replace the local machine and drive names in a UNC path with a local file path.</span></span> <span data-ttu-id="4fd7a-1554">正则表达式使用 <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> 属性包含本地计算机的名称，并使用 <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> 方法来包含逻辑驱动器的名称。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1554">The regular expression uses the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property to include the name of the local computer and the <xref:System.Environment.GetLogicalDrives%2A?displayProperty=nameWithType> method to include the names of the logical drives.</span></span> <span data-ttu-id="4fd7a-1555">所有正则表达式字符串比较都不区分大小写，并且如果在0.5 秒内找不到匹配项，则任何单个替换操作都将超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1555">All regular expression string comparisons are case-insensitive, and any single replacement operation times out if a match cannot be found in 0.5 second.</span></span> <span data-ttu-id="4fd7a-1556">若要成功运行此示例，应将文本字符串 "MyMachine" 替换为本地计算机名称。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1556">To run the example successfully, you should replace the literal string "MyMachine" with your local machine name.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace12.cs" interactive="try-dotnet" id="Snippet12":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace12.vb" id="Snippet12"::: 
  
 <span data-ttu-id="4fd7a-1557">正则表达式模式由以下表达式定义：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1557">The regular expression pattern is defined by the following expression:</span></span>  
  
 `"\\\\" + Environment.MachineName + "(?:\.\w+)*\\([" + driveNames + "])\$"`  
  
 <span data-ttu-id="4fd7a-1558">下表演示了如何解释正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1558">The following table shows how the regular expression pattern is interpreted.</span></span>  
  
|<span data-ttu-id="4fd7a-1559">模式</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1559">Pattern</span></span>|<span data-ttu-id="4fd7a-1560">说明</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1560">Description</span></span>|  
|-------------|-----------------|  
|`\\\\`|<span data-ttu-id="4fd7a-1561">匹配两个连续的反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1561">Match two consecutive backslash (`\`) characters.</span></span> <span data-ttu-id="4fd7a-1562">因为反斜杠字符被解释为转义字符，所以每个反斜杠都必须用另一个反斜杠进行转义。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1562">Because the backslash character is interpreted as the escape character, each backslash must be escaped with another backslash.</span></span>|  
|`+ Environment.MachineName +`|<span data-ttu-id="4fd7a-1563">与属性返回的字符串匹配 <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1563">Match the string that is returned by the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property.</span></span>|  
|`(?:\.\w+)*`|<span data-ttu-id="4fd7a-1564">匹配句点 (`.`) 字符后跟一个或多个单词字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1564">Match the period (`.`) character followed by one or more word characters.</span></span> <span data-ttu-id="4fd7a-1565">此匹配可以出现零次或多次。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1565">This match can occur zero or more times.</span></span> <span data-ttu-id="4fd7a-1566">不捕获匹配的子表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1566">The matched subexpression is not captured.</span></span>|  
|`\\`|<span data-ttu-id="4fd7a-1567">匹配反斜杠 (`\`) 字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1567">Match a backslash (`\`) character.</span></span>|  
|`([" + driveNames + "])`|<span data-ttu-id="4fd7a-1568">匹配由单个驱动器号组成的字符类。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1568">Match the character class that consists of the individual drive letters.</span></span> <span data-ttu-id="4fd7a-1569">此匹配是第一个捕获的子表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1569">This match is the first captured subexpression.</span></span>|  
|`\$`|<span data-ttu-id="4fd7a-1570">匹配文本美元符号 (`$`) 字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1570">Match the literal dollar sign (`$`) character.</span></span>|  
  
 <span data-ttu-id="4fd7a-1571">替换模式将 `$1` 整个匹配项替换为第一个捕获的子表达式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1571">The replacement pattern `$1` replaces the entire match with the first captured subexpression.</span></span> <span data-ttu-id="4fd7a-1572">也就是说，它将 UNC 计算机和驱动器名称替换为驱动器号。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1572">That is, it replaces the UNC machine and drive name with the drive letter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1573">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1573">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1574"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1574"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1575"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1575"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span>  
  
<span data-ttu-id="4fd7a-1576">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1576">-or-</span></span> 
 <span data-ttu-id="4fd7a-1577"><paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1577"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1578">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1578">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1579">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1579">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-1580">建议将 <paramref name="matchTimeout" /> 参数设置为适当的值，例如两秒钟。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1580">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="4fd7a-1581">如果通过指定禁用超时 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，则正则表达式引擎可提供略微更好的性能。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1581">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="4fd7a-1582">但是，只应在以下条件下禁用超时：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1582">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="4fd7a-1583">-正则表达式处理的输入派生自已知的和受信任的源，或由静态文本组成。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1583">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="4fd7a-1584">这不包括用户动态输入的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1584">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="4fd7a-1585">-对正则表达式模式进行了全面测试，以确保它有效地处理匹配、不匹配和接近匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1585">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="4fd7a-1586">-当正则表达式模式不包含已知的语言元素时，这些元素会导致在处理接近的匹配时导致过度回溯。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1586">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1587">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1587">Substitutions in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1588">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1588">Regular Expression Language Elements</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/backtracking-in-regular-expressions"><span data-ttu-id="4fd7a-1589">正则表达式中的回溯</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1589">Backtracking in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/best-practices"><span data-ttu-id="4fd7a-1590">.NET 中的正则表达式最佳做法</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1590">Best practices for regular expressions in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string input, string pattern, System.Text.RegularExpressions.MatchEvaluator evaluator, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string input, string pattern, class System.Text.RegularExpressions.MatchEvaluator evaluator, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Replace (input As String, pattern As String, evaluator As MatchEvaluator, options As RegexOptions, matchTimeout As TimeSpan) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Replace(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::MatchEvaluator ^ evaluator, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * System.Text.RegularExpressions.MatchEvaluator * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; string" Usage="System.Text.RegularExpressions.Regex.Replace (input, pattern, evaluator, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evaluator" Type="System.Text.RegularExpressions.MatchEvaluator" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="4" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1591">要搜索匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1591">The string to search for a match.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1592">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1592">The regular expression pattern to match.</span></span></param>
        <param name="evaluator"><span data-ttu-id="4fd7a-1593">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1593">A custom method that examines each match and returns either the original matched string or a replacement string.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-1594">枚举值的一个按位组合，这些枚举值提供匹配选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1594">A bitwise combination of enumeration values that provide options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="4fd7a-1595">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1595">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1596">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1596">In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</span></span> <span data-ttu-id="4fd7a-1597">如果未找到匹配项，则其他参数指定修改匹配操作的选项和超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1597">Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1598">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1598">A new string that is identical to the input string, except that the replacement string takes the place of each matched string.</span></span> <span data-ttu-id="4fd7a-1599">如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1599">If <paramref name="pattern" /> is not matched in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1600"><xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType>如果满足以下任一条件，则方法可用于替换正则表达式匹配：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1600">The <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> method is useful for replacing a regular expression match if any of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="4fd7a-1601">如果正则表达式替换模式无法轻松指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1601">If the replacement string cannot readily be specified by a regular expression replacement pattern.</span></span>  
  
-   <span data-ttu-id="4fd7a-1602">如果替换字符串是对匹配的字符串执行的某些处理导致的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1602">If the replacement string results from some processing performed on the matched string.</span></span>  
  
-   <span data-ttu-id="4fd7a-1603">如果替换字符串是通过条件处理导致的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1603">If the replacement string results from conditional processing.</span></span>  
  
 <span data-ttu-id="4fd7a-1604">方法等效于调用 <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> 方法并 <xref:System.Text.RegularExpressions.Match> 将返回集合中的每个对象传递 <xref:System.Text.RegularExpressions.MatchCollection> 给 `evaluator` 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1604">The method is equivalent to calling the <xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)?displayProperty=nameWithType> method and passing each <xref:System.Text.RegularExpressions.Match> object in the returned <xref:System.Text.RegularExpressions.MatchCollection> collection to the `evaluator` delegate.</span></span>  
  
 <span data-ttu-id="4fd7a-1605">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1605">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1606">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1606">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 <span data-ttu-id="4fd7a-1607">`evaluator`参数是你定义的用于检查每个匹配项的自定义方法的委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1607">The `evaluator` parameter is the delegate for a custom method that you define and that examines each match.</span></span> <span data-ttu-id="4fd7a-1608">自定义方法必须具有以下签名才能匹配 <xref:System.Text.RegularExpressions.MatchEvaluator> 委托。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1608">The custom method must have the following signature to match the <xref:System.Text.RegularExpressions.MatchEvaluator> delegate.</span></span>  
 
 [!code-csharp[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/syntax1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Regex.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/syntax1.vb#1)]  
   
 <span data-ttu-id="4fd7a-1609">自定义方法返回替换匹配输入的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1609">Your custom method returns a string that replaces the matched input.</span></span>  
  
 <span data-ttu-id="4fd7a-1610">如果 <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> 为 `options` 参数指定，则搜索匹配项将从输入字符串的末尾开始，并向左移动; 否则，搜索将从输入字符串的开头开始向右移动。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1610">If you specify <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> for the `options` parameter, the search for matches begins at the end of the input string and moves left; otherwise, the search begins at the start of the input string and moves right.</span></span>  
  
 <span data-ttu-id="4fd7a-1611">`matchTimeout`参数指定模式匹配方法在超时之前应尝试找到匹配项的时间长度。设置超时间隔可防止正则表达式依赖于过量回溯，使其在处理包含接近匹配项的输入时停止响应。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1611">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to "stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="4fd7a-1612">有关详细信息，请参阅[正则表达式和回溯的最佳实践](/dotnet/standard/base-types/best-practices)。 [](/dotnet/standard/base-types/backtracking-in-regular-expressions)</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1612">For more information, see [Best Practices for Regular Expressions](/dotnet/standard/base-types/best-practices) and [Backtracking](/dotnet/standard/base-types/backtracking-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-1613">如果在该时间间隔内未找到匹配项，则该方法将引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1613">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-1614">`matchTimeout` 重写为在其中执行该方法的应用程序域定义的任何默认超时值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1614">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 <span data-ttu-id="4fd7a-1615">因为如果没有匹配项，则此方法返回 `input` 不变，你可以使用 <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> 方法来确定该方法是否已对输入字符串进行任何替换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1615">Because the method returns `input` unchanged if there is no match, you can use the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method to determine whether the method has made any replacements to the input string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fd7a-1616">下面的示例使用正则表达式从字符串中提取各个单词，然后使用 <xref:System.Text.RegularExpressions.MatchEvaluator> 委托调用一个名为 `WordScramble` 的方法，该方法对单词中的各个字母进行编码。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1616">The following example uses a regular expression to extract the individual words from a string, and then uses a <xref:System.Text.RegularExpressions.MatchEvaluator> delegate to call a method named `WordScramble` that scrambles the individual letters in the word.</span></span> <span data-ttu-id="4fd7a-1617">为此， `WordScramble` 方法会创建一个包含匹配项中的字符的数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1617">To do this, the `WordScramble` method creates an array that contains the characters in the match.</span></span> <span data-ttu-id="4fd7a-1618">它还会创建一个并行数组，该数组使用随机浮点数填充。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1618">It also creates a parallel array that it populates with random floating-point numbers.</span></span> <span data-ttu-id="4fd7a-1619">通过调用方法对数组进行排序 <xref:System.Array.Sort%60%602(%60%600%5B%5D,%60%601%5B%5D,System.Collections.Generic.IComparer%7B%60%600%7D)?displayProperty=nameWithType> ，并将排序的数组作为参数提供给 <xref:System.String> 类构造函数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1619">The arrays are sorted by calling the <xref:System.Array.Sort%60%602(%60%600%5B%5D,%60%601%5B%5D,System.Collections.Generic.IComparer%7B%60%600%7D)?displayProperty=nameWithType> method, and the sorted array is provided as an argument to a <xref:System.String> class constructor.</span></span> <span data-ttu-id="4fd7a-1620">然后，该方法将返回这个新创建的字符串 `WordScramble` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1620">This newly created string is then returned by the `WordScramble` method.</span></span> <span data-ttu-id="4fd7a-1621">正则表达式模式 `\w+` 匹配一个或多个单词字符; 正则表达式引擎将继续向匹配项添加字符，直到遇到非单词字符，例如空白字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1621">The regular expression pattern `\w+` matches one or more word characters; the regular expression engine will continue to add characters to the match until it encounters a non-word character, such as a white-space character.</span></span> <span data-ttu-id="4fd7a-1622">对方法的调用 <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)> 包括 <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> 选项，以便正则表达式引擎将忽略正则表达式模式中的注释 `\w+  # Matches all the characters in a word.` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1622">The call to the <xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)> method includes the <xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace?displayProperty=nameWithType> option so that the comment in the regular expression pattern `\w+  # Matches all the characters in a word.` is ignored by the regular expression engine.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/cs/replace13.cs" interactive="try-dotnet" id="Snippet13":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regex.replace/vb/replace13.vb" id="Snippet13"::: 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1623">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1623">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1624"><paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1624"><paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1625"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1625"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span>  
  
<span data-ttu-id="4fd7a-1626">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1626">-or-</span></span> 
 <span data-ttu-id="4fd7a-1627"><paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1627"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1628">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1628">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1629">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1629">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-1630">建议将 <paramref name="matchTimeout" /> 参数设置为适当的值，例如两秒钟。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1630">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="4fd7a-1631">如果通过指定禁用超时 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，则正则表达式引擎可提供略微更好的性能。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1631">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="4fd7a-1632">但是，只应在以下条件下禁用超时：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1632">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="4fd7a-1633">-正则表达式处理的输入派生自已知的和受信任的源，或由静态文本组成。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1633">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="4fd7a-1634">这不包括用户动态输入的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1634">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="4fd7a-1635">-对正则表达式模式进行了全面测试，以确保它有效地处理匹配、不匹配和接近匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1635">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="4fd7a-1636">-当正则表达式模式不包含已知的语言元素时，这些元素会导致在处理接近的匹配时导致过度回溯。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1636">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <altmember cref="T:System.Text.RegularExpressions.RegexOptions" />
        <related type="Article" href="/dotnet/standard/base-types/substitutions-in-regular-expressions"><span data-ttu-id="4fd7a-1637">正则表达式中的替代</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1637">Substitutions in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1638">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1638">Regular Expression Language Elements</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/backtracking-in-regular-expressions"><span data-ttu-id="4fd7a-1639">正则表达式中的回溯</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1639">Backtracking in Regular Expressions</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/best-practices"><span data-ttu-id="4fd7a-1640">.NET 中的正则表达式最佳做法</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1640">Best practices for regular expressions in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public bool RightToLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Regex.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RightToLeft { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : bool" Usage="System.Text.RegularExpressions.Regex.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-1641">获取一个值，该值指示正则表达式是否从右向左进行搜索。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1641">Gets a value that indicates whether the regular expression searches from right to left.</span></span></summary>
        <value><span data-ttu-id="4fd7a-1642">如果正则表达式从右向左进行搜索，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1642"><see langword="true" /> if the regular expression searches from right to left; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1643"><xref:System.Text.RegularExpressions.Regex.RightToLeft%2A>`true`如果该 <xref:System.Text.RegularExpressions.Regex> 实例是通过选项创建的，则为 <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1643"><xref:System.Text.RegularExpressions.Regex.RightToLeft%2A> is `true` if the <xref:System.Text.RegularExpressions.Regex> instance was created with the <xref:System.Text.RegularExpressions.RegexOptions.RightToLeft> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="roptions">
      <MemberSignature Language="C#" Value="protected internal System.Text.RegularExpressions.RegexOptions roptions;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly valuetype System.Text.RegularExpressions.RegexOptions roptions" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.Regex.roptions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend roptions As RegexOptions " />
      <MemberSignature Language="C++ CLI" Value="protected public: System::Text::RegularExpressions::RegexOptions roptions;" />
      <MemberSignature Language="F#" Value="val mutable roptions : System.Text.RegularExpressions.RegexOptions" Usage="System.Text.RegularExpressions.Regex.roptions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fd7a-1644">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1644">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Split">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4fd7a-1645">在由正则表达式匹配定义的位置将输入字符串拆分为一个子字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1645">Splits an input string into an array of substrings at the positions defined by a regular expression match.</span></span></summary>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1646">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1646">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (input As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Split : string -&gt; string[]" Usage="regex.Split input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1647">要拆分的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1647">The string to split.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1648">在由 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数指定的正则表达式模式所定义的位置，将输入字符串拆分为子字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1648">Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1649">字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1649">An array of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1650"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法与 <xref:System.String.Split(System.Char%5B%5D)?displayProperty=nameWithType> 方法类似，只是 <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> 在由正则表达式（而不是一组字符）确定的分隔符处拆分字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1650">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split(System.Char%5B%5D)?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="4fd7a-1651">尽可能多地拆分字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1651">The string is split as many times as possible.</span></span> <span data-ttu-id="4fd7a-1652">如果未找到分隔符，则返回值将包含一个值为原始输入字符串的元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1652">If no delimiter is found, the return value contains one element whose value is the original input string.</span></span>  
  
 <span data-ttu-id="4fd7a-1653">如果多个匹配项彼此相邻，则将空字符串插入到数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1653">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="4fd7a-1654">例如，将字符串拆分为单个连字符会导致返回的数组在找到两个相邻连字符的位置包含空字符串，如以下代码所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1654">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found, as the following code shows.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split1.vb" id="Snippet1"::: 
  
 <span data-ttu-id="4fd7a-1655">如果在输入字符串的开头或末尾找到了匹配项，则返回数组的开头或结尾处将包含空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1655">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="4fd7a-1656">下面的示例使用正则表达式模式 `\d+` 对数字字符拆分输入字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1656">The following example uses the regular expression pattern `\d+` to split an input string on numeric characters.</span></span> <span data-ttu-id="4fd7a-1657">因为字符串以匹配的数字字符开始和结束，所以返回数组的第一个元素和最后一个元素的值为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1657">Because the string begins and ends with matching numeric characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split21.cs" interactive="try-dotnet" id="Snippet21":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split21.vb" id="Snippet21"::: 
  
 <span data-ttu-id="4fd7a-1658">如果在表达式中使用捕获括号 <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> ，则生成的字符串数组中将包括任何捕获的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1658">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="4fd7a-1659">例如，如果在放在捕获括号内的连字符处拆分字符串 "plum"，则返回的数组包含一个包含连字符的字符串元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1659">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split2.vb" id="Snippet2":::
  
 <span data-ttu-id="4fd7a-1660">但是，当正则表达式模式包含多组捕获括号时，此方法的行为取决于 .NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1660">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="4fd7a-1661">在 .NET Framework 1.0 和1.1 中，如果在第一组捕获括号中找不到匹配项，则不会在返回的数组中包含从其他捕获括号中捕获的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1661">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="4fd7a-1662">从 .NET Framework 2.0 开始，所有捕获的文本也会添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1662">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="4fd7a-1663">例如，下面的代码使用两组捕获括号从日期字符串提取日期的元素，包括日期分隔符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1663">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="4fd7a-1664">第一组捕获括号捕获连字符，第二组捕获的是正斜杠。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1664">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="4fd7a-1665">如果在 .NET Framework 1.0 或1.1 下编译并运行示例代码，它将排除斜杠字符;如果编译并在 .NET Framework 2.0 或更高版本下运行，则它将包含它们。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1665">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split3.cs" interactive="try-dotnet" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split3.vb" id="Snippet3"::: 
  
 <span data-ttu-id="4fd7a-1666">如果正则表达式可以匹配空字符串，则 <xref:System.Text.RegularExpressions.Regex.Split(System.String)> 会将字符串拆分为单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1666">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split(System.String)> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="4fd7a-1667">例如：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1667">For example:</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split11.cs" interactive="try-dotnet" id="Snippet11":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split11.vb" id="Snippet11"::: 
  
 <span data-ttu-id="4fd7a-1668">请注意，返回的数组还在数组的开头和结尾包含空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1668">Note that the returned array also includes an empty string at the beginning and end of the array.</span></span>  
  
 <span data-ttu-id="4fd7a-1669"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果 split 操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1669">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-1670">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1670">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-1671">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1671">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1672"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1672"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1673">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1673">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1674">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1674">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1675">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1675">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string input, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string input, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (input As String, count As Integer) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, int count);" />
      <MemberSignature Language="F#" Value="member this.Split : string * int -&gt; string[]" Usage="regex.Split (input, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1676">要拆分的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1676">The string to be split.</span></span></param>
        <param name="count"><span data-ttu-id="4fd7a-1677">可拆分的最大次数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1677">The maximum number of times the split can occur.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1678">在由 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式定义的位置，将输入字符串拆分为子字符串数组指定的最大次数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1678">Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1679">字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1679">An array of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1680"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法与 <xref:System.String.Split%2A?displayProperty=nameWithType> 方法类似，只是 <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> 在由正则表达式（而不是一组字符）确定的分隔符处拆分字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1680">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%2A?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="4fd7a-1681">`count`参数指定可将字符串拆分到其中的子字符串的最大数量 `input` ; 最后一个字符串包含字符串的撤消余数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1681">The `count` parameter specifies the maximum number of substrings into which the `input` string can be split; the last string contains the unsplit remainder of the string.</span></span> <span data-ttu-id="4fd7a-1682">如果 `count` 值为零，则提供尽可能多的拆分的默认行为。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1682">A `count` value of zero provides the default behavior of splitting as many times as possible.</span></span>  
  
 <span data-ttu-id="4fd7a-1683">如果多个匹配项彼此相邻，或者如果在的开头或末尾找到了匹配项 `input` ，并且找到的匹配项的数目至少小于，则会将 `count` 空字符串插入到数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1683">If multiple matches are adjacent to one another or if a match is found at the beginning or end of `input`, and the number of matches found is at least two less than `count`, an empty string is inserted into the array.</span></span> <span data-ttu-id="4fd7a-1684">也就是说，在确定匹配的子字符串的数目是否等于时，将计算从输入字符串的开头或结尾处的相邻匹配项或从匹配项中产生的空字符串 `count` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1684">That is, empty strings that result from adjacent matches or from matches at the beginning or end of the input string are counted in determining whether the number of matched substrings equals `count`.</span></span> <span data-ttu-id="4fd7a-1685">在下面的示例中，正则表达式 `/d+` 用于将包含一个或多个十进制数字的输入字符串拆分为最多三个子字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1685">In the following example, the regular expression `/d+` is used to split an input string that includes one or more decimal digits into a maximum of three substrings.</span></span> <span data-ttu-id="4fd7a-1686">由于输入字符串的开头与正则表达式模式匹配，因此第一个数组元素包含 <xref:System.String.Empty?displayProperty=nameWithType> ，第二个数组元素包含输入字符串中的第一组字母字符，第三个元素包含第三个匹配项后的字符串的剩余部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1686">Because the beginning of the input string matches the regular expression pattern, the first array element contains <xref:System.String.Empty?displayProperty=nameWithType>, the second contains the first set of alphabetic characters in the input string, and the third contains the remainder of the string that follows the third match.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split25.cs" interactive="try-dotnet" id="Snippet25":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split25.vb" id="Snippet25":::  
  
 <span data-ttu-id="4fd7a-1687">如果正则表达式中使用了捕获括号，则任何捕获的文本都将包含在拆分字符串数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1687">If capturing parentheses are used in a regular expression, any captured text is included in the array of split strings.</span></span> <span data-ttu-id="4fd7a-1688">但是，任何包含捕获文本的数组元素都不会在确定是否已达到匹配项的数量时进行计数 `count` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1688">However, any array elements that contain captured text are not counted in determining whether the number of matches has reached `count`.</span></span> <span data-ttu-id="4fd7a-1689">例如，将字符串 "apricot-plum-香蕉" 拆分为最多四个子字符串会生成一个7元素数组，如以下代码所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1689">For example, splitting the string "apple-apricot-plum-pear-banana" into a maximum of four substrings results in a seven-element array, as the following code shows.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split4.cs" interactive="try-dotnet" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split4.vb" id="Snippet4":::
  
 <span data-ttu-id="4fd7a-1690">但是，当正则表达式模式包含多组捕获括号时，此方法的行为取决于 .NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1690">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="4fd7a-1691">在 .NET Framework 1.0 和1.1 中，只在返回的数组中包含从第一组捕获括号中捕获的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1691">In the .NET Framework 1.0 and 1.1, only captured text from the first set of capturing parentheses is included in the returned array.</span></span> <span data-ttu-id="4fd7a-1692">从 .NET Framework 2.0 开始，所有捕获的文本都将添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1692">Starting with the .NET Framework 2.0, all captured text is added to the returned array.</span></span> <span data-ttu-id="4fd7a-1693">但是，在确定匹配的子字符串的数目是否等于时，不会对返回的数组中包含捕获的文本的元素进行计数 `count` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1693">However, elements in the returned array that contain captured text are not counted in determining whether the number of matched substrings equals `count`.</span></span> <span data-ttu-id="4fd7a-1694">例如，在下面的代码中，正则表达式使用两组捕获括号从日期字符串提取日期的元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1694">For example, in the following code, a regular expression uses two sets of capturing parentheses to extract the elements of a date from a date string.</span></span> <span data-ttu-id="4fd7a-1695">第一组捕获括号捕获连字符，第二组捕获的是正斜杠。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1695">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="4fd7a-1696">然后调用方法，在 <xref:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)> 返回的数组中指定最多两个元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1696">The call to the <xref:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)> method then specifies a maximum of two elements in the returned array.</span></span> <span data-ttu-id="4fd7a-1697">如果在 .NET Framework 1.0 或1.1 下编译并运行示例代码，则该方法将返回一个双元素字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1697">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, the method returns a two-element string array.</span></span> <span data-ttu-id="4fd7a-1698">如果编译并在 .NET Framework 2.0 或更高版本下运行，则该方法将返回一个由三个元素组成的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1698">If it is compiled and run under the .NET Framework 2.0 or later versions, the method returns a three-element string array.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split5.cs" interactive="try-dotnet" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split5.vb" id="Snippet5":::
  
 <span data-ttu-id="4fd7a-1699">如果正则表达式可以匹配空字符串，则 <xref:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)> 会将字符串拆分为单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1699">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="4fd7a-1700">下面的示例将字符串 "字符" 拆分为与输入字符串中的元素数量相同的元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1700">The following example splits the string "characters" into as many elements as there are in the input string.</span></span> <span data-ttu-id="4fd7a-1701">由于 null 字符串与输入字符串的开头匹配，因此将在返回的数组的开头插入一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1701">Because the null string matches the beginning of the input string, a null string is inserted at the beginning of the returned array.</span></span> <span data-ttu-id="4fd7a-1702">这将导致第十个元素由输入字符串末尾的两个字符组成。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1702">This causes the tenth element to consist of the two characters at the end of the input string.</span></span>  
  
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split12.vb" id="Snippet12":::  
  
 <span data-ttu-id="4fd7a-1703"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果 split 操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1703">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-1704">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1704">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-1705">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1705">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1706"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1706"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1707">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1707">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1708">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1708">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1709">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1709">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string input, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Split(string input, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Split (input As String, pattern As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Split : string * string -&gt; string[]" Usage="System.Text.RegularExpressions.Regex.Split (input, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1710">要拆分的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1710">The string to split.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1711">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1711">The regular expression pattern to match.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1712">在由正则表达式模式定义的位置将输入字符串拆分为一个子字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1712">Splits an input string into an array of substrings at the positions defined by a regular expression pattern.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1713">字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1713">An array of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1714"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法与 <xref:System.String.Split%2A?displayProperty=nameWithType> 方法类似，只是 <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> 在由正则表达式（而不是一组字符）确定的分隔符处拆分字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1714">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%2A?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="4fd7a-1715">尽可能 `input` 多地拆分字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1715">The `input` string is split as many times as possible.</span></span> <span data-ttu-id="4fd7a-1716">如果 `pattern` 在字符串中找不到 `input` ，则返回值将包含一个值为原始字符串的元素 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1716">If `pattern` is not found in the `input` string, the return value contains one element whose value is the original `input` string.</span></span>  
  
 <span data-ttu-id="4fd7a-1717">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1717">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1718">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1718">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4fd7a-1719">将自动缓存用于静态方法调用中的已编译正则表达式 <xref:System.Text.RegularExpressions.Regex.Split%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1719">Compiled regular expressions used in calls to static <xref:System.Text.RegularExpressions.Regex.Split%2A> methods are automatically cached.</span></span> <span data-ttu-id="4fd7a-1720">若要自行管理已编译的正则表达式的生存期，请使用实例 <xref:System.Text.RegularExpressions.Regex.Split%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1720">To manage the lifetime of compiled regular expressions yourself, use the instance <xref:System.Text.RegularExpressions.Regex.Split%2A> methods.</span></span>  
  
 <span data-ttu-id="4fd7a-1721">如果多个匹配项彼此相邻，则将空字符串插入到数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1721">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="4fd7a-1722">例如，将字符串拆分为单个连字符会导致返回的数组在找到两个相邻连字符的位置包含空字符串，如以下代码所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1722">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found, as the following code shows.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split8.cs" interactive="try-dotnet" id="Snippet8":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split8.vb" id="Snippet8":::  
  
 <span data-ttu-id="4fd7a-1723">如果在输入字符串的开头或末尾找到了匹配项，则返回数组的开头或结尾处将包含空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1723">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="4fd7a-1724">下面的示例使用正则表达式模式 `\d+` 对数字字符拆分输入字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1724">The following example uses the regular expression pattern `\d+` to split an input string on numeric characters.</span></span> <span data-ttu-id="4fd7a-1725">因为字符串以匹配的数字字符开始和结束，所以返回数组的第一个元素和最后一个元素的值为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1725">Because the string begins and ends with matching numeric characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split22.cs" interactive="try-dotnet" id="Snippet22":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split22.vb" id="Snippet22"::: 
  
 <span data-ttu-id="4fd7a-1726">如果在表达式中使用捕获括号 <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> ，则生成的字符串数组中将包括任何捕获的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1726">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="4fd7a-1727">例如，如果在放在捕获括号内的连字符处拆分字符串 "plum"，则返回的数组包含一个包含连字符的字符串元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1727">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split9.cs" interactive="try-dotnet" id="Snippet9":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split9.vb" id="Snippet9":::
  
 <span data-ttu-id="4fd7a-1728">但是，当正则表达式模式包含多组捕获括号时，此方法的行为取决于 .NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1728">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="4fd7a-1729">在 .NET Framework 1.0 和1.1 中，如果在第一组捕获括号中找不到匹配项，则不会在返回的数组中包含从其他捕获括号中捕获的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1729">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="4fd7a-1730">从 .NET Framework 2.0 开始，所有捕获的文本也会添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1730">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="4fd7a-1731">例如，下面的代码使用两组捕获括号从日期字符串提取日期的元素，包括日期分隔符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1731">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="4fd7a-1732">第一组捕获括号捕获连字符，第二组捕获的是正斜杠。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1732">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="4fd7a-1733">如果在 .NET Framework 1.0 或1.1 下编译并运行示例代码，它将排除斜杠字符;如果编译并在 .NET Framework 2.0 或更高版本下运行，则它将包含它们。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1733">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split10.cs" interactive="try-dotnet" id="Snippet10":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split10.vb" id="Snippet10":::
  
 <span data-ttu-id="4fd7a-1734">如果正则表达式可以匹配空字符串，则 <xref:System.Text.RegularExpressions.Regex.Split%2A> 会将字符串拆分为单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1734">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="4fd7a-1735">例如：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1735">For example:</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split13.cs" interactive="try-dotnet" id="Snippet13":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split13.vb" id="Snippet13":::
  
 <span data-ttu-id="4fd7a-1736">请注意，返回的数组还在数组的开头和结尾包含空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1736">Note that the returned array also includes an empty string at the beginning and end of the array.</span></span>  
  
 <span data-ttu-id="4fd7a-1737"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果拆分操作的执行时间超过为其调用该方法的应用程序域指定的超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1737">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-1738">如果在应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1738">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1739">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1739">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1740"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1740"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1741">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1741">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1742">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1742">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-1743">此方法在与调用方法的应用程序域的默认超时值相等的时间间隔后超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1743">This method times out after an interval that is equal to the default time-out value of the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-1744">如果尚未为应用程序域定义超时值，则将 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> 使用该值来阻止方法超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1744">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="4fd7a-1745">用于在模式匹配时拆分文本的建议静态方法是 <see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" /> ，这使你可以设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1745">The recommended static method for splitting text on a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1746">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1746">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string input, int count, int startat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string input, int32 count, int32 startat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (input As String, count As Integer, startat As Integer) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, int count, int startat);" />
      <MemberSignature Language="F#" Value="member this.Split : string * int * int -&gt; string[]" Usage="regex.Split (input, count, startat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="startat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1747">要拆分的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1747">The string to be split.</span></span></param>
        <param name="count"><span data-ttu-id="4fd7a-1748">可拆分的最大次数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1748">The maximum number of times the split can occur.</span></span></param>
        <param name="startat"><span data-ttu-id="4fd7a-1749">输入字符串中将开始搜索的字符位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1749">The character position in the input string where the search will begin.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1750">在由 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式定义的位置，将输入字符串拆分为子字符串数组指定的最大次数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1750">Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</span></span> <span data-ttu-id="4fd7a-1751">从输入字符串的指定字符位置开始搜索正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1751">The search for the regular expression pattern starts at a specified character position in the input string.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1752">字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1752">An array of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1753"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法与 <xref:System.String.Split%2A?displayProperty=nameWithType> 方法类似，只是 <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> 在由正则表达式（而不是一组字符）确定的分隔符处拆分字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1753">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split%2A?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="4fd7a-1754">`count`参数指定将字符串拆分到其中的子字符串的最大数量 `input` ; 最后一个字符串包含字符串的撤消余数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1754">The `count` parameter specifies the maximum number of substrings into which the `input` string is split; the last string contains the unsplit remainder of the string.</span></span> <span data-ttu-id="4fd7a-1755">如果 `count` 值为零，则提供尽可能多的拆分的默认行为。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1755">A `count` value of zero provides the default behavior of splitting as many times as possible.</span></span> <span data-ttu-id="4fd7a-1756">`startat`参数定义开始搜索第一个分隔符 (此点可以用于跳过前导空白) 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1756">The `startat` parameter defines the point at which the search for the first delimiter begins (this can be used for skipping leading white space).</span></span>  
  
 <span data-ttu-id="4fd7a-1757">如果 `count` 在字符串的 + 1 位置中找不到匹配项，则该方法将返回包含该字符串的单元素数组 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1757">If no matches are found from the `count`+1 position in the string, the method returns a one-element array that contains the `input` string.</span></span> <span data-ttu-id="4fd7a-1758">如果找到一个或多个匹配项，则返回数组的第一个元素包含字符串的第一部分，该字符串的第一个部分中的第一个字符到匹配项前一个字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1758">If one or more matches are found, the first element of the returned array contains the first portion of the string from the first character up to one character before the match.</span></span>  
  
 <span data-ttu-id="4fd7a-1759">如果多个匹配项彼此相邻并且找到的匹配项的数量至少小于两个，则将 `count` 空字符串插入到数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1759">If multiple matches are adjacent to one another and the number of matches found is at least two less than `count`, an empty string is inserted into the array.</span></span> <span data-ttu-id="4fd7a-1760">同样，如果在中找到了匹配项 `startat` （字符串中的第一个字符），则返回数组的第一个元素为空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1760">Similarly, if a match is found at `startat`, which is the first character in the string, the first element of the returned array is an empty string.</span></span> <span data-ttu-id="4fd7a-1761">也就是说，将在确定匹配的子字符串的数目是否相等时，计算相邻匹配项产生的空字符串 `count` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1761">That is, empty strings that result from adjacent matches are counted in determining whether the number of matched substrings equals `count`.</span></span> <span data-ttu-id="4fd7a-1762">在下面的示例中，正则表达式 `\d+` 用于查找字符串中数字字符的第一个子字符串的起始位置，然后从该位置开始最多拆分字符串三次。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1762">In the following example, the regular expression `\d+` is used to find the starting position of the first substring of numeric characters in a string, and then to split the string a maximum of three times starting at that position.</span></span> <span data-ttu-id="4fd7a-1763">由于正则表达式模式与输入字符串的开头匹配，因此返回的字符串数组包含空字符串、5个字符的字母字符串和字符串的其余部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1763">Because the regular expression pattern matches the beginning of the input string, the returned string array consists of an empty string, a five-character alphabetic string, and the remainder of the string,</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split26.cs" interactive="try-dotnet" id="Snippet26":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split26.vb" id="Snippet26":::  
  
 <span data-ttu-id="4fd7a-1764">如果正则表达式中使用了捕获括号，则任何捕获的文本都将包含在拆分字符串数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1764">If capturing parentheses are used in a regular expression, any captured text is included in the array of split strings.</span></span> <span data-ttu-id="4fd7a-1765">但是，任何包含捕获文本的数组元素都不会在确定是否已达到匹配项的数量时进行计数 `count` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1765">However, any array elements that contain captured text are not counted in determining whether the number of matches has reached `count`.</span></span> <span data-ttu-id="4fd7a-1766">例如，将字符串 "" apple-apricot-plum-石榴-pineapple-粉 "拆分为最多四个子字符串，从字符串中的字符15开始，如以下代码所示。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1766">For example, splitting the string '"apple-apricot-plum-pear-pomegranate-pineapple-peach" into a maximum of four substrings beginning at character 15 in the string results in a seven-element array, as the following code shows.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split6.cs" interactive="try-dotnet" id="Snippet6"::: 
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split6.vb" id="Snippet6"::: 
  
 <span data-ttu-id="4fd7a-1767">但是，当正则表达式模式包含多组捕获括号时，此方法的行为取决于 .NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1767">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="4fd7a-1768">在 .NET Framework 1.0 和1.1 中，如果在第一组捕获括号中找不到匹配项，则不会在返回的数组中包含从其他捕获括号中捕获的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1768">In .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="4fd7a-1769">从 .NET Framework 2.0 开始，所有捕获的文本也会添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1769">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="4fd7a-1770">例如，下面的代码使用两组捕获括号来提取字符串中的各个单词。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1770">For example, the following code uses two sets of capturing parentheses to extract the individual words in a string.</span></span> <span data-ttu-id="4fd7a-1771">第一组捕获括号捕获连字符，第二组捕获竖线。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1771">The first set of capturing parentheses captures the hyphen, and the second set captures the vertical bar.</span></span> <span data-ttu-id="4fd7a-1772">如果在 .NET Framework 1.0 或1.1 下编译并运行示例代码，它将排除竖线字符;如果编译并在 .NET Framework 2.0 或更高版本下运行，则它将包含它们。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1772">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the vertical bar characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split7.cs" interactive="try-dotnet" id="Snippet7":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split7.vb" id="Snippet7"::: 
  
 <span data-ttu-id="4fd7a-1773">如果正则表达式可以匹配空字符串，则 <xref:System.Text.RegularExpressions.Regex.Split%2A> 会将字符串拆分为单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1773">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span> <span data-ttu-id="4fd7a-1774">下面的示例将字符串 "字符" 拆分为输入字符串中包含的多个元素，以字符 "a" 开头。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1774">The following example splits the string "characters" into as many elements as the input string contains, starting with the character "a".</span></span> <span data-ttu-id="4fd7a-1775">由于 null 字符串与输入字符串的末尾匹配，因此将在返回的数组的末尾插入一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1775">Because the null string matches the end of the input string, a null string is inserted at the end of the returned array.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split14.cs" interactive="try-dotnet" id="Snippet14":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split14.vb" id="Snippet14"::: 
  
 <span data-ttu-id="4fd7a-1776"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果 split 操作的执行时间超过了构造函数指定的超时间隔，则会引发异常 <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1776">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified by the <xref:System.Text.RegularExpressions.Regex.%23ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4fd7a-1777">如果在调用构造函数时未设置超时间隔，则当操作超过在其中创建对象的应用程序域的任何超时值时，将引发异常 <xref:System.Text.RegularExpressions.Regex> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1777">If you do not set a time-out interval when you call the constructor, the exception is thrown if the operation exceeds any time-out value established for the application domain in which the <xref:System.Text.RegularExpressions.Regex> object is created.</span></span> <span data-ttu-id="4fd7a-1778">如果在 <xref:System.Text.RegularExpressions.Regex> 构造函数调用或应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1778">If no time-out is defined in the <xref:System.Text.RegularExpressions.Regex> constructor call or in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1779"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1779"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1780"><paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1780"><paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1781">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1781">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1782">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1782">For more information about time-outs, see the Remarks section.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1783">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1783">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Split(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Split (input As String, pattern As String, options As RegexOptions) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options);" />
      <MemberSignature Language="F#" Value="static member Split : string * string * System.Text.RegularExpressions.RegexOptions -&gt; string[]" Usage="System.Text.RegularExpressions.Regex.Split (input, pattern, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1784">要拆分的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1784">The string to split.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1785">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1785">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-1786">枚举值的一个按位组合，这些枚举值提供匹配选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1786">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1787">在由指定正则表达式模式定义的位置将输入字符串拆分为一个子字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1787">Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern.</span></span> <span data-ttu-id="4fd7a-1788">指定的选项将修改匹配操作。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1788">Specified options modify the matching operation.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1789">字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1789">An array of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1790"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法与 <xref:System.String.Split(System.Char%5B%5D)?displayProperty=nameWithType> 方法类似，只是 <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> 在由正则表达式（而不是一组字符）确定的分隔符处拆分字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1790">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split(System.Char%5B%5D)?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="4fd7a-1791">尽可能多地拆分字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1791">The string is split as many times as possible.</span></span> <span data-ttu-id="4fd7a-1792">如果未找到分隔符，则返回值将包含一个值为原始字符串的元素 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1792">If no delimiter is found, the return value contains one element whose value is the original `input` string.</span></span>  
  
 <span data-ttu-id="4fd7a-1793">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1793">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1794">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1794">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4fd7a-1795">将自动缓存用于静态方法调用中的已编译正则表达式 <xref:System.Text.RegularExpressions.Regex.Split%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1795">Compiled regular expressions used in calls to static <xref:System.Text.RegularExpressions.Regex.Split%2A> methods are automatically cached.</span></span> <span data-ttu-id="4fd7a-1796">若要自行管理已编译的正则表达式的生存期，请使用实例 <xref:System.Text.RegularExpressions.Regex.Split%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1796">To manage the lifetime of compiled regular expressions yourself, use the instance <xref:System.Text.RegularExpressions.Regex.Split%2A> methods.</span></span>  
  
 <span data-ttu-id="4fd7a-1797">如果多个匹配项彼此相邻，则将空字符串插入到数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1797">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="4fd7a-1798">例如，将字符串拆分为单个连字符会导致返回的数组在找到两个相邻连字符的位置包含空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1798">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found.</span></span>  
  
 <span data-ttu-id="4fd7a-1799">如果在输入字符串的开头或末尾找到了匹配项，则返回数组的开头或结尾处将包含空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1799">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="4fd7a-1800">下面的示例使用正则表达式模式 `[a-z]+` 对任意大写或小写字母字符拆分输入字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1800">The following example uses the regular expression pattern `[a-z]+` to split an input string on any uppercase or lowercase alphabetic character.</span></span> <span data-ttu-id="4fd7a-1801">因为字符串以匹配的字母字符开头和结尾，所以返回数组的第一个元素和最后一个元素的值为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1801">Because the string begins and ends with matching alphabetic characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split24.cs" interactive="try-dotnet" id="Snippet24":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split24.vb" id="Snippet24"::: 
  
 <span data-ttu-id="4fd7a-1802">如果在表达式中使用捕获括号 <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> ，则生成的字符串数组中将包括任何捕获的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1802">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="4fd7a-1803">例如，如果在放在捕获括号内的连字符处拆分字符串 "plum"，则返回的数组包含一个包含连字符的字符串元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1803">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split9.cs" interactive="try-dotnet" id="Snippet9":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split9.vb" id="Snippet9"::: 
  
 <span data-ttu-id="4fd7a-1804">但是，当正则表达式模式包含多组捕获括号时，此方法的行为取决于 .NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1804">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="4fd7a-1805">在 .NET Framework 1.0 和1.1 中，如果在第一组捕获括号中找不到匹配项，则不会在返回的数组中包含从其他捕获括号中捕获的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1805">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="4fd7a-1806">从 .NET Framework 2.0 开始，所有捕获的文本也会添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1806">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="4fd7a-1807">例如，下面的代码使用两组捕获括号从日期字符串提取日期的元素，包括日期分隔符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1807">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="4fd7a-1808">第一组捕获括号捕获连字符，第二组捕获的是正斜杠。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1808">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="4fd7a-1809">如果在 .NET Framework 1.0 或1.1 下编译并运行示例代码，它将排除斜杠字符;如果编译并在 .NET Framework 2.0 或更高版本下运行，则它将包含它们。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1809">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split10.cs" interactive="try-dotnet" id="Snippet10":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split10.vb" id="Snippet10":::  
  
 <span data-ttu-id="4fd7a-1810">如果正则表达式可以匹配空字符串，则 <xref:System.Text.RegularExpressions.Regex.Split%2A> 会将字符串拆分为单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1810">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span>  
  
 <span data-ttu-id="4fd7a-1811"><xref:System.Text.RegularExpressions.RegexMatchTimeoutException>如果拆分操作的执行时间超过为其调用该方法的应用程序域指定的超时间隔，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1811">The <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception is thrown if the execution time of the split operation exceeds the time-out interval specified for the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-1812">如果在应用程序域的属性中没有定义超时，或者超时值为 <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType> ，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1812">If no time-out is defined in the application domain's properties, or if the time-out value is <xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=nameWithType>, no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1813">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1813">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1814"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1814"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1815"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1815"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1816">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1816">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1817">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1817">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-1818">此方法在与调用方法的应用程序域的默认超时值相等的时间间隔后超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1818">This method times out after an interval that is equal to the default time-out value of the application domain in which the method is called.</span></span> <span data-ttu-id="4fd7a-1819">如果尚未为应用程序域定义超时值，则将 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> 使用该值来阻止方法超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1819">If a time-out value has not been defined for the application domain, the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents the method from timing out, is used.</span></span> <span data-ttu-id="4fd7a-1820">用于在模式匹配时拆分文本的建议静态方法是 <see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" /> ，这使你可以设置超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1820">The recommended static method for splitting text on a pattern match is <see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1821">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1821">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string input, string pattern, System.Text.RegularExpressions.RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Split(string input, string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Split (input As String, pattern As String, options As RegexOptions, matchTimeout As TimeSpan) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Split(System::String ^ input, System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member Split : string * string * System.Text.RegularExpressions.RegexOptions * TimeSpan -&gt; string[]" Usage="System.Text.RegularExpressions.Regex.Split (input, pattern, options, matchTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pattern" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4fd7a-1822">要拆分的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1822">The string to split.</span></span></param>
        <param name="pattern"><span data-ttu-id="4fd7a-1823">要匹配的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1823">The regular expression pattern to match.</span></span></param>
        <param name="options"><span data-ttu-id="4fd7a-1824">枚举值的一个按位组合，这些枚举值提供匹配选项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1824">A bitwise combination of the enumeration values that provide options for matching.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="4fd7a-1825">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1825">A time-out interval, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> to indicate that the method should not time out.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1826">在由指定正则表达式模式定义的位置将输入字符串拆分为一个子字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1826">Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern.</span></span> <span data-ttu-id="4fd7a-1827">如果未找到匹配项，则其他参数指定修改匹配操作的选项和超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1827">Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1828">字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1828">A string array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1829"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType>方法与 <xref:System.String.Split(System.Char%5B%5D)?displayProperty=nameWithType> 方法类似，只是 <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> 在由正则表达式（而不是一组字符）确定的分隔符处拆分字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1829">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> methods are similar to the <xref:System.String.Split(System.Char%5B%5D)?displayProperty=nameWithType> method, except that <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> splits the string at a delimiter determined by a regular expression instead of a set of characters.</span></span> <span data-ttu-id="4fd7a-1830">尽可能多地拆分字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1830">The string is split as many times as possible.</span></span> <span data-ttu-id="4fd7a-1831">如果未找到分隔符，则返回值将包含一个值为原始字符串的元素 `input` 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1831">If no delimiter is found, the return value contains one element whose value is the original `input` string.</span></span>  
  
 <span data-ttu-id="4fd7a-1832">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1832">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1833">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1833">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4fd7a-1834">将自动缓存用于静态方法调用中的已编译正则表达式 <xref:System.Text.RegularExpressions.Regex.Split%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1834">Compiled regular expressions used in calls to static <xref:System.Text.RegularExpressions.Regex.Split%2A> methods are automatically cached.</span></span> <span data-ttu-id="4fd7a-1835">若要自行管理已编译的正则表达式的生存期，请使用实例 <xref:System.Text.RegularExpressions.Regex.Split%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1835">To manage the lifetime of compiled regular expressions yourself, use the instance <xref:System.Text.RegularExpressions.Regex.Split%2A> methods.</span></span>  
  
 <span data-ttu-id="4fd7a-1836">如果多个匹配项彼此相邻，则将空字符串插入到数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1836">If multiple matches are adjacent to one another, an empty string is inserted into the array.</span></span> <span data-ttu-id="4fd7a-1837">例如，将字符串拆分为单个连字符会导致返回的数组在找到两个相邻连字符的位置包含空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1837">For example, splitting a string on a single hyphen causes the returned array to include an empty string in the position where two adjacent hyphens are found.</span></span>  
  
 <span data-ttu-id="4fd7a-1838">如果在输入字符串的开头或末尾找到了匹配项，则返回数组的开头或结尾处将包含空字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1838">If a match is found at the beginning or the end of the input string, an empty string is included at the beginning or the end of the returned array.</span></span> <span data-ttu-id="4fd7a-1839">下面的示例使用正则表达式模式 `[a-z]+` 对任意大写或小写字母字符拆分输入字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1839">The following example uses the regular expression pattern `[a-z]+` to split an input string on any uppercase or lowercase alphabetic character.</span></span> <span data-ttu-id="4fd7a-1840">因为字符串以匹配的字母字符开头和结尾，所以返回数组的第一个元素和最后一个元素的值为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1840">Because the string begins and ends with matching alphabetic characters, the value of the first and last element of the returned array is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split23.cs" interactive="try-dotnet" id="Snippet23":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split23.vb" id="Snippet23":::
  
 <span data-ttu-id="4fd7a-1841">如果在表达式中使用捕获括号 <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> ，则生成的字符串数组中将包括任何捕获的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1841">If capturing parentheses are used in a <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> expression, any captured text is included in the resulting string array.</span></span> <span data-ttu-id="4fd7a-1842">例如，如果在放在捕获括号内的连字符处拆分字符串 "plum"，则返回的数组包含一个包含连字符的字符串元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1842">For example, if you split the string "plum-pear" on a hyphen placed within capturing parentheses, the returned array includes a string element that contains the hyphen.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split9.cs" interactive="try-dotnet" id="Snippet9":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split9.vb" id="Snippet9":::  
  
 <span data-ttu-id="4fd7a-1843">但是，当正则表达式模式包含多组捕获括号时，此方法的行为取决于 .NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1843">However, when the regular expression pattern includes multiple sets of capturing parentheses, the behavior of this method depends on the version of the .NET Framework.</span></span> <span data-ttu-id="4fd7a-1844">在 .NET Framework 1.0 和1.1 中，如果在第一组捕获括号中找不到匹配项，则不会在返回的数组中包含从其他捕获括号中捕获的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1844">In the .NET Framework 1.0 and 1.1, if a match is not found within the first set of capturing parentheses, captured text from additional capturing parentheses is not included in the returned array.</span></span> <span data-ttu-id="4fd7a-1845">从 .NET Framework 2.0 开始，所有捕获的文本也会添加到返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1845">Starting with the .NET Framework 2.0, all captured text is also added to the returned array.</span></span> <span data-ttu-id="4fd7a-1846">例如，下面的代码使用两组捕获括号从日期字符串提取日期的元素，包括日期分隔符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1846">For example, the following code uses two sets of capturing parentheses to extract the elements of a date, including the date delimiters, from a date string.</span></span> <span data-ttu-id="4fd7a-1847">第一组捕获括号捕获连字符，第二组捕获的是正斜杠。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1847">The first set of capturing parentheses captures the hyphen, and the second set captures the forward slash.</span></span> <span data-ttu-id="4fd7a-1848">如果在 .NET Framework 1.0 或1.1 下编译并运行示例代码，它将排除斜杠字符;如果编译并在 .NET Framework 2.0 或更高版本下运行，则它将包含它们。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1848">If the example code is compiled and run under the .NET Framework 1.0 or 1.1, it excludes the slash characters; if it is compiled and run under the .NET Framework 2.0 or later versions, it includes them.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/cs/split10.cs" interactive="try-dotnet" id="Snippet10":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Regex.Split/vb/split10.vb" id="Snippet10"::: 
  
 <span data-ttu-id="4fd7a-1849">如果正则表达式可以匹配空字符串，则 <xref:System.Text.RegularExpressions.Regex.Split%2A> 会将字符串拆分为单字符字符串数组，因为可以在每个位置找到空字符串分隔符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1849">If the regular expression can match the empty string, <xref:System.Text.RegularExpressions.Regex.Split%2A> will split the string into an array of single-character strings because the empty string delimiter can be found at every location.</span></span>  
  
 <span data-ttu-id="4fd7a-1850">`matchTimeout`参数指定模式匹配方法在超时之前应尝试找到匹配项的时间长度。设置超时间隔可防止正则表达式在处理包含接近匹配项的输入时，这些表达式会出现依赖于过量回溯的正则表达式停止响应。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1850">The `matchTimeout` parameter specifies how long a pattern matching method should try to find a match before it times out. Setting a time-out interval prevents regular expressions that rely on excessive backtracking from appearing to stop responding when they process input that contains near matches.</span></span> <span data-ttu-id="4fd7a-1851">有关详细信息，请参阅[正则表达式和回溯的最佳实践](/dotnet/standard/base-types/best-practices)。 [](/dotnet/standard/base-types/backtracking-in-regular-expressions)</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1851">For more information, see [Best Practices for Regular Expressions](/dotnet/standard/base-types/best-practices) and [Backtracking](/dotnet/standard/base-types/backtracking-in-regular-expressions).</span></span> <span data-ttu-id="4fd7a-1852">如果在该时间间隔内未找到匹配项，则该方法将引发 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 异常。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1852">If no match is found in that time interval, the method throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="4fd7a-1853">`matchTimeout` 重写为在其中执行该方法的应用程序域定义的任何默认超时值。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1853">`matchTimeout` overrides any default time-out value defined for the application domain in which the method executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1854">出现正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1854">A regular expression parsing error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1855"><paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1855"><paramref name="input" /> or <paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1856"><paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1856"><paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</span></span>  
  
<span data-ttu-id="4fd7a-1857">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1857">-or-</span></span> 
 <span data-ttu-id="4fd7a-1858"><paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1858"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="4fd7a-1859">发生超时。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1859">A time-out occurred.</span></span> <span data-ttu-id="4fd7a-1860">有关超时的详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1860">For more information about time-outs, see the Remarks section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="4fd7a-1861">建议将 <paramref name="matchTimeout" /> 参数设置为适当的值，例如两秒钟。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1861">We recommend that you set the <paramref name="matchTimeout" /> parameter to an appropriate value, such as two seconds.</span></span> <span data-ttu-id="4fd7a-1862">如果通过指定禁用超时 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，则正则表达式引擎可提供略微更好的性能。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1862">If you disable time-outs by specifying <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, the regular expression engine offers slightly better performance.</span></span> <span data-ttu-id="4fd7a-1863">但是，只应在以下条件下禁用超时：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1863">However, you should disable time-outs only under the following conditions:</span></span> 
<span data-ttu-id="4fd7a-1864">-正则表达式处理的输入派生自已知的和受信任的源，或由静态文本组成。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1864">-   When the input processed by a regular expression is derived from a known and trusted source or consists of static text.</span></span> <span data-ttu-id="4fd7a-1865">这不包括用户动态输入的文本。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1865">This excludes text that has been dynamically input by users.</span></span>  
  
<span data-ttu-id="4fd7a-1866">-对正则表达式模式进行了全面测试，以确保它有效地处理匹配、不匹配和接近匹配项。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1866">-   When the regular expression pattern has been thoroughly tested to ensure that it efficiently handles matches, non-matches, and near matches.</span></span>  
  
<span data-ttu-id="4fd7a-1867">-当正则表达式模式不包含已知的语言元素时，这些元素会导致在处理接近的匹配时导致过度回溯。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1867">-   When the regular expression pattern contains no language elements that are known to cause excessive backtracking when processing a near match.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1868">正则表达式语言元素</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1868">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="regex.System.Runtime.Serialization.ISerializable.GetObjectData (si, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="si"><span data-ttu-id="4fd7a-1869">要用序列化信息填充的对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1869">The object to populate with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="4fd7a-1870">存储和检索序列化数据的位置。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1870">The place to store and retrieve serialized data.</span></span> <span data-ttu-id="4fd7a-1871">此参数留待将来使用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1871">This parameter is reserved for future use.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1872">使用所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象来反序列化当前 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1872">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data necessary to deserialize the current <see cref="T:System.Text.RegularExpressions.Regex" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4fd7a-1873"><xref:System.Runtime.Serialization.SerializationInfo>格式化程序会自动跟踪和序列化中包含的所有对象。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1873">Any objects that are included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>   
 <span data-ttu-id="4fd7a-1874">调用的代码 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> 需要 <xref:System.Security.Permissions.SecurityPermission> 提供序列化服务的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1874">Code that calls <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> requires the <xref:System.Security.Permissions.SecurityPermission> for providing serialization services.</span></span> <span data-ttu-id="4fd7a-1875">关联的枚举：<xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1875">Associated enumeration: <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType>.</span></span>   
 > [!NOTE] 
 >  <span data-ttu-id="4fd7a-1876">不保证在序列化过程中每个对象实例只调用一次此方法。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1876">It is not guaranteed that this method will be called only once per object instance during serialization.</span></span> <span data-ttu-id="4fd7a-1877">因此，方法应以这样一种方式实现：无论调用多少次，方法的行为都是相同的。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1877">Therefore, the method should be implemented in such a way that its behavior will be the same regardless of the number of times it is called.</span></span>   
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="regex.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fd7a-1878">返回传入 <see langword="Regex" /> 构造函数的正则表达式模式。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1878">Returns the regular expression pattern that was passed into the <see langword="Regex" /> constructor.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1879">传入 <see langword="Regex" /> 构造函数的 <paramref name="pattern" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1879">The <paramref name="pattern" /> parameter that was passed into the <see langword="Regex" /> constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1880">`pattern`参数包含符号描述要匹配的字符串的正则表达式语言元素。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1880">The `pattern` parameter consists of regular expression language elements that symbolically describe the string to match.</span></span> <span data-ttu-id="4fd7a-1881">有关正则表达式的详细信息，请参阅 [.NET Framework 正则表达式](/dotnet/standard/base-types/regular-expressions) 和 [正则表达式语言-快速参考](/dotnet/standard/base-types/regular-expression-language-quick-reference)。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1881">For more information about regular expressions, see [.NET Framework Regular Expressions](/dotnet/standard/base-types/regular-expressions) and [Regular Expression Language - Quick Reference](/dotnet/standard/base-types/regular-expression-language-quick-reference).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4fd7a-1882">
            <see cref="T:System.Text.RegularExpressions.Regex" /> 方法创建的正则表达式的基类 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1882">
            <see cref="T:System.Text.RegularExpressions.Regex" /> is the base class of regular expressions created by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span> <span data-ttu-id="4fd7a-1883">这些已编译的正则表达式使用 <see cref="M:System.Text.RegularExpressions.Regex.ToString" /> 基类的实现。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1883">These compiled regular expressions use the <see cref="M:System.Text.RegularExpressions.Regex.ToString" /> implementation of the base class.</span></span> <span data-ttu-id="4fd7a-1884">如果是从派生类调用的，则 <see cref="M:System.Text.RegularExpressions.Regex.ToString" /> 方法将返回传递给 <paramref name="pattern" /> <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 用于定义正则表达式的类构造函数的参数的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1884">If called from a derived class, the <see cref="M:System.Text.RegularExpressions.Regex.ToString" /> method returns the string that was passed to the <paramref name="pattern" /> parameter of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class constructor that was used to define the regular expression.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Unescape">
      <MemberSignature Language="C#" Value="public static string Unescape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Unescape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.Unescape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unescape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Unescape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Unescape : string -&gt; string" Usage="System.Text.RegularExpressions.Regex.Unescape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="4fd7a-1885">包含要转换的文本的输入字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1885">The input string containing the text to convert.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1886">转换输入字符串中的任何转义字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1886">Converts any escaped characters in the input string.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1887">包含任何转换为非转义形式的转义字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1887">A string of characters with any escaped characters converted to their unescaped form.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fd7a-1888"><xref:System.Text.RegularExpressions.Regex.Unescape%2A>方法执行以下两种转换之一：</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1888">The <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method performs one of the following two transformations:</span></span>  
  
-   <span data-ttu-id="4fd7a-1889">它 <xref:System.Text.RegularExpressions.Regex.Escape%2A> 通过 \\ 从该方法转义的每个字符中删除转义符 ( "" ) ，来反转方法所执行的转换。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1889">It reverses the transformation performed by the <xref:System.Text.RegularExpressions.Regex.Escape%2A> method by removing the escape character ("\\") from each character escaped by the method.</span></span> <span data-ttu-id="4fd7a-1890">其中包括 \\ 、\*、+、？、&#124;、{、[、 (、) 、^、$、.、# 和空格字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1890">These include the \\, \*, +, ?, &#124;, {, [, (,), ^, $, ., #, and white space characters.</span></span> <span data-ttu-id="4fd7a-1891">此外，该 <xref:System.Text.RegularExpressions.Regex.Unescape%2A> 方法 unescapes 右方括号 (] ) 和右大括号 (} ) 个字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1891">In addition, the <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method unescapes the closing bracket (]) and closing brace (}) characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fd7a-1892"><xref:System.Text.RegularExpressions.Regex.Unescape%2A> 无法完全反转转义字符串，因为它无法准确推导转义的字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1892"><xref:System.Text.RegularExpressions.Regex.Unescape%2A> cannot reverse an escaped string perfectly because it cannot deduce precisely which characters were escaped,</span></span>  
  
-   <span data-ttu-id="4fd7a-1893">它将原义字符串文本中的十六进制值替换为实际的可打印字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1893">It replaces the hexadecimal values in verbatim string literals with the actual printable characters.</span></span> <span data-ttu-id="4fd7a-1894">例如，它将替换 @"\x07" 为 "\a" 或 @"\x0A" "\n"。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1894">For example, it replaces @"\x07" with "\a", or @"\x0A" with "\n".</span></span> <span data-ttu-id="4fd7a-1895">它转换为支持的转义字符，如 \a、\b、\e、\n、\r、\f、\t、\v 和字母数字字符。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1895">It converts to supported escape characters such as \a, \b, \e, \n, \r, \f, \t, \v, and alphanumeric characters.</span></span>
  
 <span data-ttu-id="4fd7a-1896">如果该 <xref:System.Text.RegularExpressions.Regex.Unescape%2A> 方法遇到无法转换的其他转义序列（如 \w 或 \s），则它将引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1896">If the <xref:System.Text.RegularExpressions.Regex.Unescape%2A> method encounters other escape sequences that it cannot convert, such as \w or \s, it throws an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fd7a-1897"><paramref name="str" /> 包括无法识别的转义序列。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1897"><paramref name="str" /> includes an unrecognized escape sequence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4fd7a-1898"><paramref name="str" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1898"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Text.RegularExpressions.Regex.Escape(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/regular-expression-language-quick-reference"><span data-ttu-id="4fd7a-1899">正则表达式语言 - 快速参考</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1899">Regular Expression Language - Quick Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UseOptionC">
      <MemberSignature Language="C#" Value="protected bool UseOptionC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool UseOptionC() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.UseOptionC" />
      <MemberSignature Language="VB.NET" Value="Protected Function UseOptionC () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool UseOptionC();" />
      <MemberSignature Language="F#" Value="member this.UseOptionC : unit -&gt; bool" Usage="regex.UseOptionC " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fd7a-1900">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1900">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1901">如果 <see cref="P:System.Text.RegularExpressions.Regex.Options" /> 属性包含 <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> 选项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1901"><see langword="true" /> if the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property contains the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOptionR">
      <MemberSignature Language="C#" Value="protected internal bool UseOptionR ();" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool UseOptionR() cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.UseOptionR" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function UseOptionR () As Boolean" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; bool UseOptionR();" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="member this.UseOptionR : unit -&gt; bool" Usage="regex.UseOptionR " />
      <MemberSignature Language="C#" Value="protected bool UseOptionR ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool UseOptionR() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Function UseOptionR () As Boolean" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool UseOptionR();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fd7a-1902">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1902">Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</span></span></summary>
        <returns><span data-ttu-id="4fd7a-1903">如果 <see cref="P:System.Text.RegularExpressions.Regex.Options" /> 属性包含 <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> 选项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1903"><see langword="true" /> if the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property contains the <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> option; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMatchTimeout">
      <MemberSignature Language="C#" Value="protected internal static void ValidateMatchTimeout (TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig void ValidateMatchTimeout(valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Sub ValidateMatchTimeout (matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static void ValidateMatchTimeout(TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="static member ValidateMatchTimeout : TimeSpan -&gt; unit" Usage="System.Text.RegularExpressions.Regex.ValidateMatchTimeout matchTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="matchTimeout"><span data-ttu-id="4fd7a-1904">要检查的超时间隔。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1904">The time-out interval to check.</span></span></param>
        <summary><span data-ttu-id="4fd7a-1905">检查超时间隔是否在可接受的范围内。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1905">Checks whether a time-out interval is within an acceptable range.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4fd7a-1906">指定的超时不在有效范围内。</span><span class="sxs-lookup"><span data-stu-id="4fd7a-1906">The specified time-out is not within a valid range.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
