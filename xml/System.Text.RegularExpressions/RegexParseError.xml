<Type Name="RegexParseError" FullName="System.Text.RegularExpressions.RegexParseError">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e31561939f2cdbd4db2f9e7c3354c88de09b897b" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90801501" /></Metadata><TypeSignature Language="C#" Value="public enum RegexParseError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RegexParseError extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexParseError" />
  <TypeSignature Language="VB.NET" Value="Public Enum RegexParseError" />
  <TypeSignature Language="C++ CLI" Value="public enum class RegexParseError" />
  <TypeSignature Language="F#" Value="type RegexParseError = " />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="83a16-101">指定当正则表达式包含分析错误时引发 <see cref="T:System.Text.RegularExpressions.RegexParseException" /> 的详细基本原因。</span><span class="sxs-lookup"><span data-stu-id="83a16-101">Specifies the detailed underlying reason why a <see cref="T:System.Text.RegularExpressions.RegexParseException" /> is thrown when a regular expression contains a parsing error.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="83a16-102">此信息通过提供 <xref:System.Text.RegularExpressions.RegexParseException.Error> 。</span><span class="sxs-lookup"><span data-stu-id="83a16-102">This information is made available through <xref:System.Text.RegularExpressions.RegexParseException.Error>.</span></span>

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AlternationHasComment">
      <MemberSignature Language="C#" Value="AlternationHasComment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasComment = int32(17)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasComment" />
      <MemberSignature Language="VB.NET" Value="AlternationHasComment" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasComment" />
      <MemberSignature Language="F#" Value="AlternationHasComment = 17" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasComment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-103">正则表达式中的某个替换构造包含注释。</span><span class="sxs-lookup"><span data-stu-id="83a16-103">An alternation construct in a regular expression contains a comment.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AlternationHasMalformedCondition">
      <MemberSignature Language="C#" Value="AlternationHasMalformedCondition" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasMalformedCondition = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedCondition" />
      <MemberSignature Language="VB.NET" Value="AlternationHasMalformedCondition" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasMalformedCondition" />
      <MemberSignature Language="F#" Value="AlternationHasMalformedCondition = 2" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedCondition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-104">正则表达式中的某个替换包含格式不正确的条件。</span><span class="sxs-lookup"><span data-stu-id="83a16-104">An alternation in a regular expression has a malformed condition.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AlternationHasMalformedReference">
      <MemberSignature Language="C#" Value="AlternationHasMalformedReference" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasMalformedReference = int32(18)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedReference" />
      <MemberSignature Language="VB.NET" Value="AlternationHasMalformedReference" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasMalformedReference" />
      <MemberSignature Language="F#" Value="AlternationHasMalformedReference = 18" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedReference" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-105">正则表达式中的某个替换构造包含格式不正确的引用。</span><span class="sxs-lookup"><span data-stu-id="83a16-105">An alternation construct in a regular expression contains a malformed reference.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AlternationHasNamedCapture">
      <MemberSignature Language="C#" Value="AlternationHasNamedCapture" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasNamedCapture = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasNamedCapture" />
      <MemberSignature Language="VB.NET" Value="AlternationHasNamedCapture" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasNamedCapture" />
      <MemberSignature Language="F#" Value="AlternationHasNamedCapture = 16" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasNamedCapture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-106">正则表达式中的某个替换构造使用已命名的捕获。</span><span class="sxs-lookup"><span data-stu-id="83a16-106">An alternation construct in a regular expression uses a named capture.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AlternationHasTooManyConditions">
      <MemberSignature Language="C#" Value="AlternationHasTooManyConditions" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasTooManyConditions = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasTooManyConditions" />
      <MemberSignature Language="VB.NET" Value="AlternationHasTooManyConditions" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasTooManyConditions" />
      <MemberSignature Language="F#" Value="AlternationHasTooManyConditions = 1" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasTooManyConditions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-107">正则表达式中的某个替换具有过多条件。</span><span class="sxs-lookup"><span data-stu-id="83a16-107">An alternation in a regular expression has too many conditions.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AlternationHasUndefinedReference">
      <MemberSignature Language="C#" Value="AlternationHasUndefinedReference" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError AlternationHasUndefinedReference = int32(19)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.AlternationHasUndefinedReference" />
      <MemberSignature Language="VB.NET" Value="AlternationHasUndefinedReference" />
      <MemberSignature Language="C++ CLI" Value="AlternationHasUndefinedReference" />
      <MemberSignature Language="F#" Value="AlternationHasUndefinedReference = 19" Usage="System.Text.RegularExpressions.RegexParseError.AlternationHasUndefinedReference" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-108">正则表达式中的某个替换构造包含未定义的引用。</span><span class="sxs-lookup"><span data-stu-id="83a16-108">An alternation construct in a regular expression contains an undefined reference.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CaptureGroupNameInvalid">
      <MemberSignature Language="C#" Value="CaptureGroupNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError CaptureGroupNameInvalid = int32(20)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupNameInvalid" />
      <MemberSignature Language="VB.NET" Value="CaptureGroupNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="CaptureGroupNameInvalid" />
      <MemberSignature Language="F#" Value="CaptureGroupNameInvalid = 20" Usage="System.Text.RegularExpressions.RegexParseError.CaptureGroupNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-109">正则表达式中某个捕获的组的组名无效。</span><span class="sxs-lookup"><span data-stu-id="83a16-109">The group name of a captured group in a regular expression is invalid.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CaptureGroupOfZero">
      <MemberSignature Language="C#" Value="CaptureGroupOfZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError CaptureGroupOfZero = int32(21)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupOfZero" />
      <MemberSignature Language="VB.NET" Value="CaptureGroupOfZero" />
      <MemberSignature Language="C++ CLI" Value="CaptureGroupOfZero" />
      <MemberSignature Language="F#" Value="CaptureGroupOfZero = 21" Usage="System.Text.RegularExpressions.RegexParseError.CaptureGroupOfZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-110">正则表达式定义了一个名为零的带编号的子表达式。</span><span class="sxs-lookup"><span data-stu-id="83a16-110">A regular expression defines a numbered subexpression named zero.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ExclusionGroupNotLast">
      <MemberSignature Language="C#" Value="ExclusionGroupNotLast" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError ExclusionGroupNotLast = int32(23)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.ExclusionGroupNotLast" />
      <MemberSignature Language="VB.NET" Value="ExclusionGroupNotLast" />
      <MemberSignature Language="C++ CLI" Value="ExclusionGroupNotLast" />
      <MemberSignature Language="F#" Value="ExclusionGroupNotLast = 23" Usage="System.Text.RegularExpressions.RegexParseError.ExclusionGroupNotLast" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-111">某个字符类位于一个具有排除组的正则表达式中，该组不是该字符类的最后一部分。</span><span class="sxs-lookup"><span data-stu-id="83a16-111">A character class in a regular expression with an exclusion group is not the last part of the character class.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InsufficientClosingParentheses">
      <MemberSignature Language="C#" Value="InsufficientClosingParentheses" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError InsufficientClosingParentheses = int32(26)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.InsufficientClosingParentheses" />
      <MemberSignature Language="VB.NET" Value="InsufficientClosingParentheses" />
      <MemberSignature Language="C++ CLI" Value="InsufficientClosingParentheses" />
      <MemberSignature Language="F#" Value="InsufficientClosingParentheses = 26" Usage="System.Text.RegularExpressions.RegexParseError.InsufficientClosingParentheses" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-112">某个正则表达式有一个非转义的左括号，或缺少右括号。</span><span class="sxs-lookup"><span data-stu-id="83a16-112">A regular expression has a non-escaped left parenthesis, or misses a closing right parenthesis.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InsufficientOpeningParentheses">
      <MemberSignature Language="C#" Value="InsufficientOpeningParentheses" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError InsufficientOpeningParentheses = int32(30)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.InsufficientOpeningParentheses" />
      <MemberSignature Language="VB.NET" Value="InsufficientOpeningParentheses" />
      <MemberSignature Language="C++ CLI" Value="InsufficientOpeningParentheses" />
      <MemberSignature Language="F#" Value="InsufficientOpeningParentheses = 30" Usage="System.Text.RegularExpressions.RegexParseError.InsufficientOpeningParentheses" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-113">某个正则表达式有一个非转义的右括号，或缺少左括号。</span><span class="sxs-lookup"><span data-stu-id="83a16-113">A regular expression has a non-escaped right parenthesis, or misses an opening left parenthesis.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InsufficientOrInvalidHexDigits">
      <MemberSignature Language="C#" Value="InsufficientOrInvalidHexDigits" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError InsufficientOrInvalidHexDigits = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.InsufficientOrInvalidHexDigits" />
      <MemberSignature Language="VB.NET" Value="InsufficientOrInvalidHexDigits" />
      <MemberSignature Language="C++ CLI" Value="InsufficientOrInvalidHexDigits" />
      <MemberSignature Language="F#" Value="InsufficientOrInvalidHexDigits = 8" Usage="System.Text.RegularExpressions.RegexParseError.InsufficientOrInvalidHexDigits" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-114">正则表达式中的十六进制转义序列位数不足，或包含无效位。</span><span class="sxs-lookup"><span data-stu-id="83a16-114">A hexadecimal escape sequence in a regular expression does not have enough digits, or contains invalid digits.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InvalidGroupingConstruct">
      <MemberSignature Language="C#" Value="InvalidGroupingConstruct" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError InvalidGroupingConstruct = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.InvalidGroupingConstruct" />
      <MemberSignature Language="VB.NET" Value="InvalidGroupingConstruct" />
      <MemberSignature Language="C++ CLI" Value="InvalidGroupingConstruct" />
      <MemberSignature Language="F#" Value="InvalidGroupingConstruct = 15" Usage="System.Text.RegularExpressions.RegexParseError.InvalidGroupingConstruct" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-115">正则表达式中的分组构造无效或格式不正确。</span><span class="sxs-lookup"><span data-stu-id="83a16-115">A grouping construct in a regular expression is invalid or malformed.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InvalidUnicodePropertyEscape">
      <MemberSignature Language="C#" Value="InvalidUnicodePropertyEscape" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError InvalidUnicodePropertyEscape = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.InvalidUnicodePropertyEscape" />
      <MemberSignature Language="VB.NET" Value="InvalidUnicodePropertyEscape" />
      <MemberSignature Language="C++ CLI" Value="InvalidUnicodePropertyEscape" />
      <MemberSignature Language="F#" Value="InvalidUnicodePropertyEscape = 3" Usage="System.Text.RegularExpressions.RegexParseError.InvalidUnicodePropertyEscape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-116">正则表达式中的 Unicode 属性转义无效或未知。</span><span class="sxs-lookup"><span data-stu-id="83a16-116">A Unicode property escape in a regular expression is invalid or unknown.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MalformedNamedReference">
      <MemberSignature Language="C#" Value="MalformedNamedReference" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError MalformedNamedReference = int32(12)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.MalformedNamedReference" />
      <MemberSignature Language="VB.NET" Value="MalformedNamedReference" />
      <MemberSignature Language="C++ CLI" Value="MalformedNamedReference" />
      <MemberSignature Language="F#" Value="MalformedNamedReference = 12" Usage="System.Text.RegularExpressions.RegexParseError.MalformedNamedReference" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-117">正则表达式中的命名引用的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="83a16-117">A named reference in a regular expression is malformed.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MalformedUnicodePropertyEscape">
      <MemberSignature Language="C#" Value="MalformedUnicodePropertyEscape" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError MalformedUnicodePropertyEscape = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.MalformedUnicodePropertyEscape" />
      <MemberSignature Language="VB.NET" Value="MalformedUnicodePropertyEscape" />
      <MemberSignature Language="C++ CLI" Value="MalformedUnicodePropertyEscape" />
      <MemberSignature Language="F#" Value="MalformedUnicodePropertyEscape = 4" Usage="System.Text.RegularExpressions.RegexParseError.MalformedUnicodePropertyEscape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-118">Unicode 属性转义格式不正确。</span><span class="sxs-lookup"><span data-stu-id="83a16-118">A Unicode property escape is malformed.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MissingControlCharacter">
      <MemberSignature Language="C#" Value="MissingControlCharacter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError MissingControlCharacter = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.MissingControlCharacter" />
      <MemberSignature Language="VB.NET" Value="MissingControlCharacter" />
      <MemberSignature Language="C++ CLI" Value="MissingControlCharacter" />
      <MemberSignature Language="F#" Value="MissingControlCharacter = 7" Usage="System.Text.RegularExpressions.RegexParseError.MissingControlCharacter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-119">正则表达式中缺少某个控制字符。</span><span class="sxs-lookup"><span data-stu-id="83a16-119">A control character in a regular expression is missing.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NestedQuantifiersNotParenthesized">
      <MemberSignature Language="C#" Value="NestedQuantifiersNotParenthesized" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError NestedQuantifiersNotParenthesized = int32(28)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.NestedQuantifiersNotParenthesized" />
      <MemberSignature Language="VB.NET" Value="NestedQuantifiersNotParenthesized" />
      <MemberSignature Language="C++ CLI" Value="NestedQuantifiersNotParenthesized" />
      <MemberSignature Language="F#" Value="NestedQuantifiersNotParenthesized = 28" Usage="System.Text.RegularExpressions.RegexParseError.NestedQuantifiersNotParenthesized" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-120">正则表达式中另一个限定符上的重复限定符未使用括号归组。</span><span class="sxs-lookup"><span data-stu-id="83a16-120">Repeated quantifiers on another quantifier inside a regular expression are not grouped in parentheses.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="QuantifierAfterNothing">
      <MemberSignature Language="C#" Value="QuantifierAfterNothing" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError QuantifierAfterNothing = int32(29)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.QuantifierAfterNothing" />
      <MemberSignature Language="VB.NET" Value="QuantifierAfterNothing" />
      <MemberSignature Language="C++ CLI" Value="QuantifierAfterNothing" />
      <MemberSignature Language="F#" Value="QuantifierAfterNothing = 29" Usage="System.Text.RegularExpressions.RegexParseError.QuantifierAfterNothing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-121">正则表达式中的限定符位于某个无法量化任何内容的位置，例如，在正则表达式的开头或某个组中。</span><span class="sxs-lookup"><span data-stu-id="83a16-121">A quantifier in a regular expression is in a position where it cannot quantify anything, like at the beginning of a regular expression or in a group.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="QuantifierOrCaptureGroupOutOfRange">
      <MemberSignature Language="C#" Value="QuantifierOrCaptureGroupOutOfRange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError QuantifierOrCaptureGroupOutOfRange = int32(9)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.QuantifierOrCaptureGroupOutOfRange" />
      <MemberSignature Language="VB.NET" Value="QuantifierOrCaptureGroupOutOfRange" />
      <MemberSignature Language="C++ CLI" Value="QuantifierOrCaptureGroupOutOfRange" />
      <MemberSignature Language="F#" Value="QuantifierOrCaptureGroupOutOfRange = 9" Usage="System.Text.RegularExpressions.RegexParseError.QuantifierOrCaptureGroupOutOfRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-122">正则表达式中某个捕获的组或限定符不在范围内，即大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="83a16-122">A captured group or a quantifier in a regular expression is not within range, that is, it is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReversedCharacterRange">
      <MemberSignature Language="C#" Value="ReversedCharacterRange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError ReversedCharacterRange = int32(24)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.ReversedCharacterRange" />
      <MemberSignature Language="VB.NET" Value="ReversedCharacterRange" />
      <MemberSignature Language="C++ CLI" Value="ReversedCharacterRange" />
      <MemberSignature Language="F#" Value="ReversedCharacterRange = 24" Usage="System.Text.RegularExpressions.RegexParseError.ReversedCharacterRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-123">正则表达式中的某个字符类包含逆向字符范围，如 z-a 而不是 a-z。</span><span class="sxs-lookup"><span data-stu-id="83a16-123">A character class in a regular expression contains an inverse character range, like z-a instead of a-z.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReversedQuantifierRange">
      <MemberSignature Language="C#" Value="ReversedQuantifierRange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError ReversedQuantifierRange = int32(27)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.ReversedQuantifierRange" />
      <MemberSignature Language="VB.NET" Value="ReversedQuantifierRange" />
      <MemberSignature Language="C++ CLI" Value="ReversedQuantifierRange" />
      <MemberSignature Language="F#" Value="ReversedQuantifierRange = 27" Usage="System.Text.RegularExpressions.RegexParseError.ReversedQuantifierRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-124">正则表达式中的某个限定符范围是逆向的，如</span><span class="sxs-lookup"><span data-stu-id="83a16-124">A quantifier range in a regular expression is inverse, like</span></span> <code>{10,1}</code> <span data-ttu-id="83a16-125">而不是</span><span class="sxs-lookup"><span data-stu-id="83a16-125">instead of</span></span> <code>(1,10}</code><span data-ttu-id="83a16-126">。</span><span class="sxs-lookup"><span data-stu-id="83a16-126">.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ShorthandClassInCharacterRange">
      <MemberSignature Language="C#" Value="ShorthandClassInCharacterRange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError ShorthandClassInCharacterRange = int32(25)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.ShorthandClassInCharacterRange" />
      <MemberSignature Language="VB.NET" Value="ShorthandClassInCharacterRange" />
      <MemberSignature Language="C++ CLI" Value="ShorthandClassInCharacterRange" />
      <MemberSignature Language="F#" Value="ShorthandClassInCharacterRange = 25" Usage="System.Text.RegularExpressions.RegexParseError.ShorthandClassInCharacterRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-127">正则表达式中的某个字符类包含一个字符类中不允许的简略类。</span><span class="sxs-lookup"><span data-stu-id="83a16-127">A character-class in a regular expression contains a short-hand class that is not allowed inside a character class.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UndefinedNamedReference">
      <MemberSignature Language="C#" Value="UndefinedNamedReference" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UndefinedNamedReference = int32(10)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UndefinedNamedReference" />
      <MemberSignature Language="VB.NET" Value="UndefinedNamedReference" />
      <MemberSignature Language="C++ CLI" Value="UndefinedNamedReference" />
      <MemberSignature Language="F#" Value="UndefinedNamedReference = 10" Usage="System.Text.RegularExpressions.RegexParseError.UndefinedNamedReference" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-128">正则表达式中使用的某个命名引用未进行定义。</span><span class="sxs-lookup"><span data-stu-id="83a16-128">A used named reference in a regular expression is not defined.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UndefinedNumberedReference">
      <MemberSignature Language="C#" Value="UndefinedNumberedReference" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UndefinedNumberedReference = int32(11)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UndefinedNumberedReference" />
      <MemberSignature Language="VB.NET" Value="UndefinedNumberedReference" />
      <MemberSignature Language="C++ CLI" Value="UndefinedNumberedReference" />
      <MemberSignature Language="F#" Value="UndefinedNumberedReference = 11" Usage="System.Text.RegularExpressions.RegexParseError.UndefinedNumberedReference" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-129">正则表达式中使用的某个带编号的引用未进行定义。</span><span class="sxs-lookup"><span data-stu-id="83a16-129">A used numbered reference in a regular expression is not defined.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UnescapedEndingBackslash">
      <MemberSignature Language="C#" Value="UnescapedEndingBackslash" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnescapedEndingBackslash = int32(13)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnescapedEndingBackslash" />
      <MemberSignature Language="VB.NET" Value="UnescapedEndingBackslash" />
      <MemberSignature Language="C++ CLI" Value="UnescapedEndingBackslash" />
      <MemberSignature Language="F#" Value="UnescapedEndingBackslash = 13" Usage="System.Text.RegularExpressions.RegexParseError.UnescapedEndingBackslash" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-130">正则表达式以非转义结尾反斜杠结尾。</span><span class="sxs-lookup"><span data-stu-id="83a16-130">A regular expression ends with a non-escaped ending backslash.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="System.Text.RegularExpressions.RegexParseError.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-131">未知的正则表达式分析错误。</span><span class="sxs-lookup"><span data-stu-id="83a16-131">An unknown regular expression parse error.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UnrecognizedControlCharacter">
      <MemberSignature Language="C#" Value="UnrecognizedControlCharacter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnrecognizedControlCharacter = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedControlCharacter" />
      <MemberSignature Language="VB.NET" Value="UnrecognizedControlCharacter" />
      <MemberSignature Language="C++ CLI" Value="UnrecognizedControlCharacter" />
      <MemberSignature Language="F#" Value="UnrecognizedControlCharacter = 6" Usage="System.Text.RegularExpressions.RegexParseError.UnrecognizedControlCharacter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-132">正则表达式中的某个控制字符无法识别。</span><span class="sxs-lookup"><span data-stu-id="83a16-132">A control character in a regular expression is not recognized.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UnrecognizedEscape">
      <MemberSignature Language="C#" Value="UnrecognizedEscape" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnrecognizedEscape = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedEscape" />
      <MemberSignature Language="VB.NET" Value="UnrecognizedEscape" />
      <MemberSignature Language="C++ CLI" Value="UnrecognizedEscape" />
      <MemberSignature Language="F#" Value="UnrecognizedEscape = 5" Usage="System.Text.RegularExpressions.RegexParseError.UnrecognizedEscape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-133">正则表达式中的某个转义字符或序列无效。</span><span class="sxs-lookup"><span data-stu-id="83a16-133">An escape character or sequence in a regular expression is invalid.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UnrecognizedUnicodeProperty">
      <MemberSignature Language="C#" Value="UnrecognizedUnicodeProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnrecognizedUnicodeProperty = int32(31)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedUnicodeProperty" />
      <MemberSignature Language="VB.NET" Value="UnrecognizedUnicodeProperty" />
      <MemberSignature Language="C++ CLI" Value="UnrecognizedUnicodeProperty" />
      <MemberSignature Language="F#" Value="UnrecognizedUnicodeProperty = 31" Usage="System.Text.RegularExpressions.RegexParseError.UnrecognizedUnicodeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>31</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-134">正则表达式中的某个 unicode 属性无法识别或无效。</span><span class="sxs-lookup"><span data-stu-id="83a16-134">A unicode property in a regular expression is not recognized, or invalid.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UnterminatedBracket">
      <MemberSignature Language="C#" Value="UnterminatedBracket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnterminatedBracket = int32(22)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnterminatedBracket" />
      <MemberSignature Language="VB.NET" Value="UnterminatedBracket" />
      <MemberSignature Language="C++ CLI" Value="UnterminatedBracket" />
      <MemberSignature Language="F#" Value="UnterminatedBracket = 22" Usage="System.Text.RegularExpressions.RegexParseError.UnterminatedBracket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-135">正则表达式有一个非转义的左方括号，或缺少右方括号。</span><span class="sxs-lookup"><span data-stu-id="83a16-135">A regular expression has a non-escaped left square bracket, or misses a closing right square bracket.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UnterminatedComment">
      <MemberSignature Language="C#" Value="UnterminatedComment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.RegularExpressions.RegexParseError UnterminatedComment = int32(14)" />
      <MemberSignature Language="DocId" Value="F:System.Text.RegularExpressions.RegexParseError.UnterminatedComment" />
      <MemberSignature Language="VB.NET" Value="UnterminatedComment" />
      <MemberSignature Language="C++ CLI" Value="UnterminatedComment" />
      <MemberSignature Language="F#" Value="UnterminatedComment = 14" Usage="System.Text.RegularExpressions.RegexParseError.UnterminatedComment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexParseError</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary><span data-ttu-id="83a16-136">正则表达式中的某个注释未终止。</span><span class="sxs-lookup"><span data-stu-id="83a16-136">A comment in a regular expression is not terminated.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
