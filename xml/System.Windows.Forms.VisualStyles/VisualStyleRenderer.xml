<Type Name="VisualStyleRenderer" FullName="System.Windows.Forms.VisualStyles.VisualStyleRenderer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="486e1964ffb2760e16077a5cdb37321419f5067f" /><Meta Name="ms.sourcegitcommit" Value="ec905a25e6dd05a6a3ffa7f30bf59f3095a8cd67" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/01/2020" /><Meta Name="ms.locfileid" Value="89251445" /></Metadata><TypeSignature Language="C#" Value="public sealed class VisualStyleRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VisualStyleRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualStyleRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStyleRenderer sealed" />
  <TypeSignature Language="F#" Value="type VisualStyleRenderer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于绘制和获取有关 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> 的信息的方法。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType>命名空间公开 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> 对象，这些对象表示 (UI) 视觉样式支持的元素的所有控件和用户界面。 若要绘制或获取有关特定元素的信息，则必须将设置 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 为感兴趣的元素。 将 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 自动设置为 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> 构造函数中指定的 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%2A> ，但也可以通过调用方法将现有的设置 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 为其他元素 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters%2A> 。  
  
 若要绘制元素，请使用 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> 方法。 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>类还包含方法（如 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetColor%2A> 和）， <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> 这些方法提供了有关如何由当前视觉样式定义元素的信息。  
  
 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%2A> <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 如果在操作系统中启用了视觉样式，并将视觉样式应用于应用程序窗口的工作区，则构造函数和许多方法会引发异常。 若要检查这些情况，请使用 `static` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> 属性。  
  
 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>类通过 Windows 平台 SDK 的 Windows Shell 部分 (UxTheme) API 的视觉样式的功能进行包装。
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 类来实现一个自定义控件，该控件可模拟窗口的某些基本 UI，包括使用标题栏拖动、调整大小控点大小和结束。 此示例使用几个 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> 表示窗口的标准部分的对象，包括由 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption> 、 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.CloseButton> 和类公开的元素 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.Gripper> 。  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleInformation" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStyleRenderer (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.#ctor(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (element As VisualStyleElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStyleRenderer(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.VisualStyles.VisualStyleRenderer : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; System.Windows.Forms.VisualStyles.VisualStyleRenderer" Usage="new System.Windows.Forms.VisualStyles.VisualStyleRenderer element" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element">此 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> 将表示的 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />。</param>
        <summary>使用给定的 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> 初始化 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数使用 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.ClassName%2A?displayProperty=nameWithType> 参数的、 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Part%2A?displayProperty=nameWithType> 和 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.State%2A?displayProperty=nameWithType> 属性 `element` 来初始化 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> 、 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A> 和 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> 属性。  
  
 使用此构造函数之前，应调用 `static` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> 方法来验证当前视觉样式是否为参数所指定的元素提供了定义 `element` 。
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%28System.Windows.Forms.VisualStyles.VisualStyleElement%29> 构造函数创建 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 。 此代码示例摘自为类概述提供的更大的代码示例 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 。  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">操作系统不支持视觉样式。  
  
 \- 或 -  
  
 用户在操作系统中禁用视觉样式。  
  
 \- 或 -  
  
 视觉样式不应用于应用程序窗口的工作区。</exception>
        <exception cref="T:System.ArgumentException">当前视觉样式未定义 <paramref name="element" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStyleRenderer (string className, int part, int state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string className, int32 part, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (className As String, part As Integer, state As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStyleRenderer(System::String ^ className, int part, int state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.VisualStyles.VisualStyleRenderer : string * int * int -&gt; System.Windows.Forms.VisualStyles.VisualStyleRenderer" Usage="new System.Windows.Forms.VisualStyles.VisualStyleRenderer (className, part, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="part" Type="System.Int32" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="className">此 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> 将表示的元素的类名。</param>
        <param name="part">此 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> 将表示的元素的部件。</param>
        <param name="state">此 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> 将表示的元素的状态。</param>
        <summary>使用给定的类、部件和状态值初始化 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数使用 `className` 、 `part` 和 `state` 参数初始化 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> 、 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A> 和 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> 属性。  
  
 使用此构造函数之前，应调用 `static` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> 方法来验证当前视觉样式是否为 `className` 、和参数指定的元素提供了定义 `part` `state` 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">操作系统不支持视觉样式。  
  
 \- 或 -  
  
 用户在操作系统中禁用视觉样式。  
  
 \- 或 -  
  
 视觉样式不应用于应用程序窗口的工作区。</exception>
        <exception cref="T:System.ArgumentException">当前视觉样式未定义 <paramref name="className" />、<paramref name="part" /> 和 <paramref name="state" /> 的组合。</exception>
        <exception cref="T:System.ArgumentNullException">.NET 5.0 和更高版本：<paramref name="className" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public string Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Class" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Class { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Class : string" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前视觉样式元素的类名。</summary>
        <value>一个标识当前视觉样式元素的类的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性标识一组相关控件或用户界面 (UI) 元素。 有关视觉样式元素的类、部件和状态的详细信息，请参阅 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> 类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBackground">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>绘制当前视觉样式元素的背景图像。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground (dc As IDeviceContext, bounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; unit" Usage="visualStyleRenderer.DrawBackground (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc">用于绘制背景图像的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="bounds">在其中绘制背景图像的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <summary>在指定边框内绘制当前视觉样式元素的背景图像。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法绘制 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> 、和属性指定的当前视觉样式元素的背景 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A> <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> 。  
  
 如果 <xref:System.Drawing.Rectangle.Width%2A> <xref:System.Drawing.Rectangle.Height%2A> 参数指定的矩形的或 `bounds` 小于0，则 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> 方法将返回而不绘制背景。  
  
 视觉样式元素的背景可以是位图文件或填充的边框。 若要确定背景类型，请 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> 使用参数值调用方法 <xref:System.Windows.Forms.VisualStyles.EnumProperty.BackgroundType?displayProperty=nameWithType> 。 若要确定元素背景是否会缩放以适合指定的边界，请 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> 使用参数值调用方法 <xref:System.Windows.Forms.VisualStyles.EnumProperty.SizingType?displayProperty=nameWithType> 。  
  
   
  
## Examples  
 下面的代码示例演示如何在 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%28System.Drawing.IDeviceContext%2CSystem.Drawing.Rectangle%29> <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> 自定义控件的方法中使用方法绘制 <xref:System.Windows.Forms.Control.OnPaint%2A> 。 此代码示例是为类概述提供的更大示例的一部分 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 。  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Drawing.Rectangle clipRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Rectangle clipRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground (dc As IDeviceContext, bounds As Rectangle, clipRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Drawing::Rectangle clipRectangle);" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit" Usage="visualStyleRenderer.DrawBackground (dc, bounds, clipRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="clipRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc">用于绘制背景图像的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="bounds">在其中绘制背景图像的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="clipRectangle">为绘制操作定义剪辑矩形的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <summary>在指定边框内绘制当前视觉样式元素的背景图像，然后剪辑到指定的剪辑矩形。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法绘制 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> 、和属性指定的当前视觉样式元素的背景 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A> <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> 。 背景将被剪裁到参数所指定的区域 `clipRectangle` 。  
  
 如果 <xref:System.Drawing.Rectangle.Width%2A> <xref:System.Drawing.Rectangle.Height%2A> 或参数指定的矩形的或 `bounds` `clipRectangle` 小于0，则 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> 方法将返回，而不绘制背景。  
  
 视觉样式元素的背景可以是位图文件或填充的边框。 若要确定背景类型，请 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> 使用参数值调用方法 <xref:System.Windows.Forms.VisualStyles.EnumProperty.BackgroundType?displayProperty=nameWithType> 。 若要确定元素背景是否会缩放以适合指定的边界，请 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> 使用参数值调用方法 <xref:System.Windows.Forms.VisualStyles.EnumProperty.SizingType?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEdge">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle DrawEdge (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.Edges edges, System.Windows.Forms.VisualStyles.EdgeStyle style, System.Windows.Forms.VisualStyles.EdgeEffects effects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle DrawEdge(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.Edges edges, valuetype System.Windows.Forms.VisualStyles.EdgeStyle style, valuetype System.Windows.Forms.VisualStyles.EdgeEffects effects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawEdge(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.Edges,System.Windows.Forms.VisualStyles.EdgeStyle,System.Windows.Forms.VisualStyles.EdgeEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawEdge (dc As IDeviceContext, bounds As Rectangle, edges As Edges, style As EdgeStyle, effects As EdgeEffects) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle DrawEdge(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::VisualStyles::Edges edges, System::Windows::Forms::VisualStyles::EdgeStyle style, System::Windows::Forms::VisualStyles::EdgeEffects effects);" />
      <MemberSignature Language="F#" Value="member this.DrawEdge : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.VisualStyles.Edges * System.Windows.Forms.VisualStyles.EdgeStyle * System.Windows.Forms.VisualStyles.EdgeEffects -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.DrawEdge (dc, bounds, edges, style, effects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="edges" Type="System.Windows.Forms.VisualStyles.Edges" />
        <Parameter Name="style" Type="System.Windows.Forms.VisualStyles.EdgeStyle" />
        <Parameter Name="effects" Type="System.Windows.Forms.VisualStyles.EdgeEffects" />
      </Parameters>
      <Docs>
        <param name="dc">用于绘制边缘的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="bounds">其边界定义了要绘制的边缘的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="edges"><see cref="T:System.Windows.Forms.VisualStyles.Edges" /> 值的按位组合。</param>
        <param name="style"><see cref="T:System.Windows.Forms.VisualStyles.EdgeStyle" /> 值的按位组合。</param>
        <param name="effects"><see cref="T:System.Windows.Forms.VisualStyles.EdgeEffects" /> 值的按位组合。</param>
        <summary>绘制指定边框的一个或多个边缘。</summary>
        <returns>一个 <see cref="T:System.Drawing.Rectangle" />，表示 <paramref name="bounds" /> 参数的内部区域（不包含绘制的边缘）。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawImage">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在指定的边框内绘制指定的图像。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawImage (g As Graphics, bounds As Rectangle, image As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Image -&gt; unit" Usage="visualStyleRenderer.DrawImage (g, bounds, image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="g">用于绘制图像的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="bounds">在其中绘制图像的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
        <summary>在指定的边界内绘制指定的图像。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果视觉样式将值指定的其中一个效果应用于 <xref:System.Windows.Forms.VisualStyles.IconEffect?displayProperty=nameWithType> 当前元素，则此方法会将该效果应用于所绘制图像。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> 或 <paramref name="image" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.ImageList imageList, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.ImageList imageList, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ImageList,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawImage (g As Graphics, bounds As Rectangle, imageList As ImageList, imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::ImageList ^ imageList, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ImageList * int -&gt; unit" Usage="visualStyleRenderer.DrawImage (g, bounds, imageList, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="imageList" Type="System.Windows.Forms.ImageList" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="g">用于绘制图像的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="bounds">在其中绘制图像的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="imageList">包含要绘制的 <see cref="T:System.Windows.Forms.ImageList" /> 的 <see cref="T:System.Drawing.Image" />。</param>
        <param name="imageIndex">要绘制的 <see cref="T:System.Drawing.Image" /> 在 <paramref name="imageList" /> 中的索引。</param>
        <summary>在指定的边界内绘制指定的 <see cref="T:System.Windows.Forms.ImageList" /> 中的图像。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果视觉样式将值指定的其中一个效果应用于 <xref:System.Windows.Forms.VisualStyles.IconEffect?displayProperty=nameWithType> 当前元素，则此方法会将该效果应用于所绘制图像。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> 或 <paramref name="image" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="imageIndex" /> 小于 0，或者大于等于 <paramref name="imageList" /> 中的图像数。</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawParentBackground">
      <MemberSignature Language="C#" Value="public void DrawParentBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.Control childControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawParentBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.Control childControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawParentBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawParentBackground (dc As IDeviceContext, bounds As Rectangle, childControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawParentBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::Control ^ childControl);" />
      <MemberSignature Language="F#" Value="member this.DrawParentBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.Control -&gt; unit" Usage="visualStyleRenderer.DrawParentBackground (dc, bounds, childControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="childControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="dc">用于绘制 <paramref name="childControl" /> 的父级的背景的 <see cref="T:System.Drawing.IDeviceContext" />。 此对象通常属于子控件。</param>
        <param name="bounds">要在其中绘制父控件的背景的 <see cref="T:System.Drawing.Rectangle" />。 此矩形应位于子控件的边界之内。</param>
        <param name="childControl">将绘制其父控件的背景的控件。</param>
        <summary>在指定区域中绘制控件的父级的背景。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在指定边界内绘制文本。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dc">用于绘制文本的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="bounds">要在其中绘制文本的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="textToDraw">要绘制的文本。</param>
        <summary>使用默认格式在指定边界内绘制文本。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, drawDisabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, bool drawDisabled);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * bool -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw, drawDisabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="drawDisabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dc">用于绘制文本的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="bounds">要在其中绘制文本的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="textToDraw">要绘制的文本。</param>
        <param name="drawDisabled">若要绘制灰显文本，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>在指定边界内绘制文本并且可以选择显示禁用的文本。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Boolean,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, drawDisabled As Boolean, flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, bool drawDisabled, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * bool * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw, drawDisabled, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="drawDisabled" Type="System.Boolean" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">用于绘制文本的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="bounds">要在其中绘制文本的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="textToDraw">要绘制的文本。</param>
        <param name="drawDisabled">若要绘制灰显文本，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="flags"><see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的按位组合。</param>
        <summary>在指定边框内绘制文本，并且可以选择显示禁用的文本以及应用其他文本格式。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundContentRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBackgroundContentRectangle (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBackgroundContentRectangle(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundContentRectangle(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundContentRectangle (dc As IDeviceContext, bounds As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBackgroundContentRectangle(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundContentRectangle : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetBackgroundContentRectangle (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="bounds">一个 <see cref="T:System.Drawing.Rectangle" />，它包含当前视觉样式元素的整个背景区域。</param>
        <summary>返回当前视觉样式元素的背景的内容区域。</summary>
        <returns>一个 <see cref="T:System.Drawing.Rectangle" />，它包含当前视觉样式元素的背景的内容区域。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉样式可以在每个背景图像内定义内容区域。 这是可以在其中放置文本和图标等内容而不覆盖背景边框的区域。 此方法使用给定的背景区域来计算当前视觉样式元素的内容区域。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBackgroundExtent (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle contentBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBackgroundExtent(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle contentBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundExtent(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundExtent (dc As IDeviceContext, contentBounds As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBackgroundExtent(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle contentBounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundExtent : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetBackgroundExtent (dc, contentBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="contentBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="contentBounds">一个 <see cref="T:System.Drawing.Rectangle" />，它包含当前视觉样式元素的内容区域。</param>
        <summary>返回当前视觉样式元素的整个背景区域。</summary>
        <returns>一个 <see cref="T:System.Drawing.Rectangle" />，它包含当前视觉样式元素的整个背景区域。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉样式可以在每个背景图像内定义内容区域。 这是可以在其中放置文本和图标等内容而不覆盖背景边框的区域。 此方法使用给定的内容区域计算当前视觉样式元素的整个背景区域。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundRegion">
      <MemberSignature Language="C#" Value="public System.Drawing.Region GetBackgroundRegion (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Region GetBackgroundRegion(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundRegion (dc As IDeviceContext, bounds As Rectangle) As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Region ^ GetBackgroundRegion(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundRegion : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Region" Usage="visualStyleRenderer.GetBackgroundRegion (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SuppressUnmanagedCodeSecurity]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SuppressUnmanagedCodeSecurity&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="bounds">一个 <see cref="T:System.Drawing.Rectangle" />，它包含当前视觉样式元素的整个背景区域。</param>
        <summary>返回当前视觉样式元素背景的区域。</summary>
        <returns>一个 <see cref="T:System.Drawing.Region" />，它包含当前视觉样式元素的背景。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于获取 <xref:System.Drawing.Region> 其背景中包含部分透明或 alpha 混合部分的视觉样式元素的。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion%2A> 在自定义控件中使用方法。 此示例使用 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion%2A> 获取 <xref:System.Drawing.Region> 属性返回的窗口标题栏元素的 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption.Active%2A?displayProperty=nameWithType> 。 这 <xref:System.Drawing.Region> 用于设置 <xref:System.Windows.Forms.Control.Region%2A?displayProperty=nameWithType> 控件的属性，因此，窗口标题栏将与标准 Windows XP 视觉样式定义的圆角一起显示。 此代码示例是为类概述提供的更大示例的一部分 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 。  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#30)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean (System.Windows.Forms.VisualStyles.BooleanProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetBoolean(valuetype System.Windows.Forms.VisualStyles.BooleanProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBoolean(System.Windows.Forms.VisualStyles.BooleanProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoolean (prop As BooleanProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetBoolean(System::Windows::Forms::VisualStyles::BooleanProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetBoolean : System.Windows.Forms.VisualStyles.BooleanProperty -&gt; bool" Usage="visualStyleRenderer.GetBoolean prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.BooleanProperty" />
      </Parameters>
      <Docs>
        <param name="prop"><see cref="T:System.Windows.Forms.VisualStyles.BooleanProperty" /> 值之一，指定要为当前视觉样式元素检索的属性值。</param>
        <summary>返回当前视觉样式元素的指定布尔属性的值。</summary>
        <returns>如果 <paramref name="prop" /> 参数指定的属性值对于当前视觉样式元素为 <see langword="true" />，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉样式使用一组布尔值来描述样式定义的元素的某些属性。 这些属性由 <xref:System.Windows.Forms.VisualStyles.BooleanProperty> 值封装。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> 不是 <see cref="T:System.Windows.Forms.VisualStyles.BooleanProperty" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetColor (System.Windows.Forms.VisualStyles.ColorProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetColor(valuetype System.Windows.Forms.VisualStyles.ColorProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetColor(System.Windows.Forms.VisualStyles.ColorProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColor (prop As ColorProperty) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetColor(System::Windows::Forms::VisualStyles::ColorProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetColor : System.Windows.Forms.VisualStyles.ColorProperty -&gt; System.Drawing.Color" Usage="visualStyleRenderer.GetColor prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.ColorProperty" />
      </Parameters>
      <Docs>
        <param name="prop"><see cref="T:System.Windows.Forms.VisualStyles.ColorProperty" /> 值之一，指定要为当前视觉样式元素检索的属性值。</param>
        <summary>返回当前视觉样式元素的指定颜色属性的值。</summary>
        <returns><see cref="T:System.Drawing.Color" />，它包含 <paramref name="prop" /> 参数为当前视觉样式元素指定的属性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉样式使用一组颜色值来描述样式定义的元素的某些属性。 这些属性由 <xref:System.Windows.Forms.VisualStyles.ColorProperty> 值封装。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> 不是 <see cref="T:System.Windows.Forms.VisualStyles.ColorProperty" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumValue">
      <MemberSignature Language="C#" Value="public int GetEnumValue (System.Windows.Forms.VisualStyles.EnumProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEnumValue(valuetype System.Windows.Forms.VisualStyles.EnumProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue(System.Windows.Forms.VisualStyles.EnumProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumValue (prop As EnumProperty) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEnumValue(System::Windows::Forms::VisualStyles::EnumProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetEnumValue : System.Windows.Forms.VisualStyles.EnumProperty -&gt; int" Usage="visualStyleRenderer.GetEnumValue prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.EnumProperty" />
      </Parameters>
      <Docs>
        <param name="prop"><see cref="T:System.Windows.Forms.VisualStyles.EnumProperty" /> 值之一，指定要为当前视觉样式元素检索的属性值。</param>
        <summary>返回当前视觉样式元素的指定枚举类型属性的值。</summary>
        <returns>当前视觉样式元素的 <paramref name="prop" /> 参数指定的属性的整数值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉样式使用一组枚举类型来描述样式定义的元素的某些属性。 这些枚举类型由 <xref:System.Windows.Forms.VisualStyles.EnumProperty> 值封装。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> 不是 <see cref="T:System.Windows.Forms.VisualStyles.EnumProperty" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFilename">
      <MemberSignature Language="C#" Value="public string GetFilename (System.Windows.Forms.VisualStyles.FilenameProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetFilename(valuetype System.Windows.Forms.VisualStyles.FilenameProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetFilename(System.Windows.Forms.VisualStyles.FilenameProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFilename (prop As FilenameProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetFilename(System::Windows::Forms::VisualStyles::FilenameProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetFilename : System.Windows.Forms.VisualStyles.FilenameProperty -&gt; string" Usage="visualStyleRenderer.GetFilename prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.FilenameProperty" />
      </Parameters>
      <Docs>
        <param name="prop"><see cref="T:System.Windows.Forms.VisualStyles.FilenameProperty" /> 值之一，指定要为当前视觉样式元素检索的属性值。</param>
        <summary>返回当前视觉样式元素的指定文件名属性的值。</summary>
        <returns><see cref="T:System.String" />，它包含 <paramref name="prop" /> 参数为当前视觉样式元素指定的属性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉样式可指定用于绘制不同大小和分辨率中的特定元素的图像文件的名称。 这些文件名由 <xref:System.Windows.Forms.VisualStyles.FilenameProperty> 值封装。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> 不是 <see cref="T:System.Windows.Forms.VisualStyles.FilenameProperty" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font GetFont (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.FontProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Font GetFont(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.FontProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetFont(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.FontProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFont (dc As IDeviceContext, prop As FontProperty) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Font ^ GetFont(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::FontProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetFont : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.FontProperty -&gt; System.Drawing.Font" Usage="visualStyleRenderer.GetFont (dc, prop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.FontProperty" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="prop"><see cref="T:System.Windows.Forms.VisualStyles.FontProperty" /> 值之一，指定要为当前视觉样式元素检索的属性值。</param>
        <summary>返回当前视觉样式元素的指定字体属性的值。</summary>
        <returns><see cref="T:System.Drawing.Font" />，它包含 <paramref name="prop" /> 参数为当前视觉样式元素指定的属性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉样式使用一组字体值来描述样式定义的元素的某些属性。 这些属性由 <xref:System.Windows.Forms.VisualStyles.FontProperty> 值封装。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> 不是 <see cref="T:System.Windows.Forms.VisualStyles.FontProperty" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInteger">
      <MemberSignature Language="C#" Value="public int GetInteger (System.Windows.Forms.VisualStyles.IntegerProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetInteger(valuetype System.Windows.Forms.VisualStyles.IntegerProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetInteger(System.Windows.Forms.VisualStyles.IntegerProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInteger (prop As IntegerProperty) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetInteger(System::Windows::Forms::VisualStyles::IntegerProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetInteger : System.Windows.Forms.VisualStyles.IntegerProperty -&gt; int" Usage="visualStyleRenderer.GetInteger prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.IntegerProperty" />
      </Parameters>
      <Docs>
        <param name="prop"><see cref="T:System.Windows.Forms.VisualStyles.IntegerProperty" /> 值之一，指定要为当前视觉样式元素检索的属性值。</param>
        <summary>返回当前视觉样式元素的指定整数属性的值。</summary>
        <returns>当前视觉样式元素的 <paramref name="prop" /> 参数指定的属性的整数值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉样式使用一组整数值来描述样式定义的元素的某些属性。 这些属性由 <xref:System.Windows.Forms.VisualStyles.IntegerProperty> 值封装。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> 不是 <see cref="T:System.Windows.Forms.VisualStyles.IntegerProperty" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMargins">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding GetMargins (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.MarginProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.Padding GetMargins(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.MarginProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetMargins(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.MarginProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMargins (dc As IDeviceContext, prop As MarginProperty) As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Padding GetMargins(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::MarginProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetMargins : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.MarginProperty -&gt; System.Windows.Forms.Padding" Usage="visualStyleRenderer.GetMargins (dc, prop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.MarginProperty" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="prop"><see cref="T:System.Windows.Forms.VisualStyles.MarginProperty" /> 值之一，指定要为当前视觉样式元素检索的属性值。</param>
        <summary>返回当前视觉样式元素的指定边距属性的值。</summary>
        <returns><see cref="T:System.Windows.Forms.Padding" />，它包含 <paramref name="prop" /> 参数为当前视觉样式元素指定的属性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉样式使用一组边距值来描述样式定义的元素的某些属性。 这些属性由 <xref:System.Windows.Forms.VisualStyles.MarginProperty> 值封装。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> 不是 <see cref="T:System.Windows.Forms.VisualStyles.MarginProperty" /> 值之一。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPartSize">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回当前视觉样式部件的指定大小属性的值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPartSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size GetPartSize (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.ThemeSizeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size GetPartSize(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.ThemeSizeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.ThemeSizeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartSize (dc As IDeviceContext, type As ThemeSizeType) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size GetPartSize(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::ThemeSizeType type);" />
      <MemberSignature Language="F#" Value="member this.GetPartSize : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.ThemeSizeType -&gt; System.Drawing.Size" Usage="visualStyleRenderer.GetPartSize (dc, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="type" Type="System.Windows.Forms.VisualStyles.ThemeSizeType" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="type"><see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> 值之一，指定为部件检索哪个大小值。</param>
        <summary>返回当前视觉样式部件的指定大小属性的值。</summary>
        <returns>一个 <see cref="T:System.Drawing.Size" />，它包含由 <paramref name="type" /> 参数为当前视觉样式部件所指定的大小。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，只 <xref:System.Windows.Forms.VisualStyles.ThemeSizeType.True> 应将和 <xref:System.Windows.Forms.VisualStyles.ThemeSizeType.Minimum> 值用于 `type` 此方法的参数。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize%28System.Drawing.IDeviceContext%2CSystem.Windows.Forms.VisualStyles.ThemeSizeType%29> 自定义控件中的方法来获取由视觉样式指定的窗口标题栏、 **关闭** 按钮、边框和大小调整控点的大小。 这些大小用于计算 <xref:System.Drawing.Rectangle> 用于绘制 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> 表示这些窗口部分的对象的对象的大小。 此代码示例是为类概述提供的更大示例的一部分 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 。  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> 不是 <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size GetPartSize (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ThemeSizeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size GetPartSize(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.ThemeSizeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.ThemeSizeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartSize (dc As IDeviceContext, bounds As Rectangle, type As ThemeSizeType) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size GetPartSize(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::VisualStyles::ThemeSizeType type);" />
      <MemberSignature Language="F#" Value="member this.GetPartSize : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.VisualStyles.ThemeSizeType -&gt; System.Drawing.Size" Usage="visualStyleRenderer.GetPartSize (dc, bounds, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="type" Type="System.Windows.Forms.VisualStyles.ThemeSizeType" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="bounds">一个 <see cref="T:System.Drawing.Rectangle" />，它包含要在其中绘制部件的区域。</param>
        <param name="type"><see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> 值之一，指定为部件检索哪个大小值。</param>
        <summary>使用指定的绘制边界返回当前视觉样式部件的指定大小属性的值。</summary>
        <returns>一个 <see cref="T:System.Drawing.Size" />，它包含由 <paramref name="type" /> 参数为当前视觉样式部件所指定的大小。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> 不是 <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.Point GetPoint (System.Windows.Forms.VisualStyles.PointProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point GetPoint(valuetype System.Windows.Forms.VisualStyles.PointProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPoint(System.Windows.Forms.VisualStyles.PointProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPoint (prop As PointProperty) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point GetPoint(System::Windows::Forms::VisualStyles::PointProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetPoint : System.Windows.Forms.VisualStyles.PointProperty -&gt; System.Drawing.Point" Usage="visualStyleRenderer.GetPoint prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.PointProperty" />
      </Parameters>
      <Docs>
        <param name="prop"><see cref="T:System.Windows.Forms.VisualStyles.PointProperty" /> 值之一，指定要为当前视觉样式元素检索的属性值。</param>
        <summary>返回当前视觉样式元素的指定点属性的值。</summary>
        <returns><see cref="T:System.Drawing.Point" />，它包含 <paramref name="prop" /> 参数为当前视觉样式元素指定的属性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉样式使用一组点值来描述样式定义的元素的某些属性。 这些属性由 <xref:System.Windows.Forms.VisualStyles.PointProperty> 值封装。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPoint%2A> 自定义控件中的方法来获取窗口 " **关闭** " 按钮相对于标题栏右上角的偏移量。 此代码示例是为类概述提供的更大示例的一部分 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 。  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> 不是 <see cref="T:System.Windows.Forms.VisualStyles.PointProperty" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (System.Windows.Forms.VisualStyles.StringProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(valuetype System.Windows.Forms.VisualStyles.StringProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetString(System.Windows.Forms.VisualStyles.StringProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (prop As StringProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::Windows::Forms::VisualStyles::StringProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetString : System.Windows.Forms.VisualStyles.StringProperty -&gt; string" Usage="visualStyleRenderer.GetString prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.StringProperty" />
      </Parameters>
      <Docs>
        <param name="prop"><see cref="T:System.Windows.Forms.VisualStyles.StringProperty" /> 值之一，指定要为当前视觉样式元素检索的属性值。</param>
        <summary>返回当前视觉样式元素的指定字符串属性的值。</summary>
        <returns><see cref="T:System.String" />，它包含 <paramref name="prop" /> 参数为当前视觉样式元素指定的属性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉样式使用一组字符串值来描述样式定义的元素的某些属性。 这些属性由 <xref:System.Windows.Forms.VisualStyles.StringProperty> 值封装。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> 不是 <see cref="T:System.Windows.Forms.VisualStyles.StringProperty" /> 值之一。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextExtent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回指定的字符串在用当前视觉样式元素的字体绘制时的大小和位置。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetTextExtent (System.Drawing.IDeviceContext dc, string textToDraw, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetTextExtent(class System.Drawing.IDeviceContext dc, string textToDraw, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextExtent(System.Drawing.IDeviceContext,System.String,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextExtent (dc As IDeviceContext, textToDraw As String, flags As TextFormatFlags) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetTextExtent(System::Drawing::IDeviceContext ^ dc, System::String ^ textToDraw, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetTextExtent : System.Drawing.IDeviceContext * string * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetTextExtent (dc, textToDraw, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="textToDraw">要度量的字符串。</param>
        <param name="flags"><see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的按位组合。</param>
        <summary>返回指定的字符串在用当前视觉样式元素的字体绘制时的大小和位置。</summary>
        <returns>一个 <see cref="T:System.Drawing.Rectangle" />，它包含适应呈现的文本所需的区域。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetTextExtent (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetTextExtent(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextExtent(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextExtent (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, flags As TextFormatFlags) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetTextExtent(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetTextExtent : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetTextExtent (dc, bounds, textToDraw, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="bounds">一个 <see cref="T:System.Drawing.Rectangle" />，用于控制文本的流和换行。</param>
        <param name="textToDraw">要度量的字符串。</param>
        <param name="flags"><see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的按位组合。</param>
        <summary>返回指定的字符串当用当前视觉样式元素的字体在指定的初始边框内绘制时的大小和位置。</summary>
        <returns>一个 <see cref="T:System.Drawing.Rectangle" />，它包含适应呈现的文本所需的区域。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextMetrics">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.TextMetrics GetTextMetrics (System.Drawing.IDeviceContext dc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.TextMetrics GetTextMetrics(class System.Drawing.IDeviceContext dc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextMetrics(System.Drawing.IDeviceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextMetrics (dc As IDeviceContext) As TextMetrics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::TextMetrics GetTextMetrics(System::Drawing::IDeviceContext ^ dc);" />
      <MemberSignature Language="F#" Value="member this.GetTextMetrics : System.Drawing.IDeviceContext -&gt; System.Windows.Forms.VisualStyles.TextMetrics" Usage="visualStyleRenderer.GetTextMetrics dc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.TextMetrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <summary>检索有关由当前视觉样式元素指定的字体的信息。</summary>
        <returns>一个 <see cref="T:System.Windows.Forms.VisualStyles.TextMetrics" />，提供有关由当前视觉样式元素指定的字体的信息。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取视觉样式元素的当前类的唯一标识符。</summary>
        <value>一个标识一组数据的 <see cref="T:System.IntPtr" />，这些数据定义由 <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" /> 指定的元素的类。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性由方法在内部使用 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 。 如果由属性指定的元素的类 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> 不是由当前视觉样式定义的，则此属性返回 <xref:System.IntPtr.Zero?displayProperty=nameWithType> 。  
  
 当操作系统的视觉样式发生更改时，或当用户禁用视觉样式时，此属性值将无效。 如果直接访问此属性，代码应再次查询此属性，以便在引发事件时，使用的 <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged?displayProperty=nameWithType> 属性值获取新的句柄 <xref:Microsoft.Win32.UserPreferenceChangedEventArgs.Category%2A?displayProperty=nameWithType> <xref:Microsoft.Win32.UserPreferenceCategory.VisualStyle?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">操作系统不支持视觉样式。  
  
 \- 或 -  
  
 用户在操作系统中禁用视觉样式。  
  
 \- 或 -  
  
 视觉样式不应用于应用程序窗口的工作区。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestBackground">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>确定某个点是否包含在当前视觉样式元素的背景中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle backgroundRectangle, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle backgroundRectangle, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTestBackground (dc As IDeviceContext, backgroundRectangle As Rectangle, pt As Point, options As HitTestOptions) As HitTestCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle backgroundRectangle, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (dc, backgroundRectangle, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="backgroundRectangle">一个 <see cref="T:System.Drawing.Rectangle" />，它包含当前视觉样式元素的背景。</param>
        <param name="pt">要测试的 <see cref="T:System.Drawing.Point" />。</param>
        <param name="options"><see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" /> 值的按位组合。</param>
        <summary>返回一个命中测试代码，指示某个点是否包含在当前视觉样式元素的背景中。</summary>
        <returns>一个 <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" />，它描述 <paramref name="pt" /> 在当前视觉样式元素的背景中所处的位置。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.Graphics g, System.Drawing.Rectangle backgroundRectangle, System.Drawing.Region region, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle backgroundRectangle, class System.Drawing.Region region, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Region,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTestBackground (g As Graphics, backgroundRectangle As Rectangle, region As Region, pt As Point, options As HitTestOptions) As HitTestCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::Graphics ^ g, System::Drawing::Rectangle backgroundRectangle, System::Drawing::Region ^ region, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Region * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (g, backgroundRectangle, region, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="g">此操作将使用的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="backgroundRectangle">一个 <see cref="T:System.Drawing.Rectangle" />，它包含当前视觉样式元素的背景。</param>
        <param name="region">一个 <see cref="T:System.Drawing.Region" />，它指定背景中命中测试区域的边界。</param>
        <param name="pt">要测试的 <see cref="T:System.Drawing.Point" />。</param>
        <param name="options"><see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" /> 值的按位组合。</param>
        <summary>返回一个命中测试代码，指示该点是否包含在当前视觉样式元素的背景中的指定边界内。</summary>
        <returns>一个 <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" />，它描述 <paramref name="pt" /> 在当前视觉样式元素的背景中所处的位置（如果位于背景中）。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle backgroundRectangle, IntPtr hRgn, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle backgroundRectangle, native int hRgn, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.IntPtr,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTestBackground (dc As IDeviceContext, backgroundRectangle As Rectangle, hRgn As IntPtr, pt As Point, options As HitTestOptions) As HitTestCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle backgroundRectangle, IntPtr hRgn, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * nativeint * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (dc, backgroundRectangle, hRgn, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="hRgn" Type="System.IntPtr" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="dc">此操作将使用的 <see cref="T:System.Drawing.IDeviceContext" />。</param>
        <param name="backgroundRectangle">一个 <see cref="T:System.Drawing.Rectangle" />，它包含当前视觉样式元素的背景。</param>
        <param name="hRgn">一个指向用于指定背景内命中测试区域边界的 <see cref="T:System.Drawing.Region" /> 的 Windows 句柄。</param>
        <param name="pt">要测试的 <see cref="T:System.Drawing.Point" />。</param>
        <param name="options"><see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" /> 值的按位组合。</param>
        <summary>返回一个命中测试代码，指示该点是否包含在当前视觉样式元素的背景中的指定区域内。</summary>
        <returns>一个 <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" />，它描述 <paramref name="pt" /> 在当前视觉样式元素的背景中所处的位置。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundPartiallyTransparent">
      <MemberSignature Language="C#" Value="public bool IsBackgroundPartiallyTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBackgroundPartiallyTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsBackgroundPartiallyTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBackgroundPartiallyTransparent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBackgroundPartiallyTransparent();" />
      <MemberSignature Language="F#" Value="member this.IsBackgroundPartiallyTransparent : unit -&gt; bool" Usage="visualStyleRenderer.IsBackgroundPartiallyTransparent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示当前视觉样式元素的背景是否有半透明或 Alpha 混合部分。</summary>
        <returns>如果当前视觉样式元素的背景有半透明或 Alpha 混合部分，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementDefined">
      <MemberSignature Language="C#" Value="public static bool IsElementDefined (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsElementDefined(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsElementDefined (element As VisualStyleElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsElementDefined(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="static member IsElementDefined : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; bool" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element">将验证其类和部件组合的 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />。</param>
        <summary>确定当前视觉样式是否定义了指定的视觉样式元素。</summary>
        <returns>如果定义了 <paramref name="element" /> 的 <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ClassName" /> 和 <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Part" /> 属性的组合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> 在内部检查属性的值。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> 方法来确定是否将初始化 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 到给定的 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> 。 此代码示例是为类概述提供的更大示例的一部分 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 。  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">操作系统不支持视觉样式。  
  
 \- 或 -  
  
 用户在操作系统中禁用视觉样式。  
  
 \- 或 -  
  
 视觉样式不应用于应用程序窗口的工作区。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指定操作系统是否正在使用视觉样式绘制控件。</summary>
        <value>如果操作系统支持视觉样式，且用户已经在操作系统中启用了视觉样式并将视觉样式应用于应用程序窗口的工作区，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表介绍了如何单独检查每个必须为属性返回的三个条件 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> `true` 。  
  
|条件|如何单独确定|  
|---------------|---------------------------------|  
|操作系统支持视觉样式。|验证类的 <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A> 属性 <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> 是否为 `true` 。|  
|用户已在操作系统中启用视觉样式。|验证类的 <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A> 属性 <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> 是否为 `true` 。|  
|正在使用视觉样式来绘制应用程序窗口的工作区。|验证类的 <xref:System.Windows.Forms.Application.VisualStyleState%2A> 属性是否 <xref:System.Windows.Forms.Application> 具有值 <xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType> 或 <xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType> 。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastHResult">
      <MemberSignature Language="C#" Value="public int LastHResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastHResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.LastHResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastHResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastHResult { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastHResult : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.LastHResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取本机视觉样式 (UxTheme) API 方法所返回的上一个错误代码，这些方法由 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> 类封装。</summary>
        <value>一个指定上一个错误代码的值，该错误代码由此类封装的本机视觉样式 API 方法返回。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性获取由类的成员调用的上一个本机视觉样式 API 方法返回的 HRESULT 值 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 。 有关本机视觉样式 API 的详细信息，请参阅上 MSDN Library 的平台 SDK 部分中的 "使用 Windows XP 视觉样式" [https://msdn.microsoft.com/library](https://msdn.microsoft.com/library/) 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Part">
      <MemberSignature Language="C#" Value="public int Part { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Part" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Part As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Part { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Part : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前视觉样式元素的部件。</summary>
        <value>一个指定当前视觉样式元素的部件的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性标识类的特定专用化。 有关视觉样式元素的类、部件和状态的详细信息，请参阅 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> 类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParameters">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>设置此 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> 的当前视觉样式元素。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (element As VisualStyleElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; unit" Usage="visualStyleRenderer.SetParameters element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element">一个 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />，指定 <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />、<see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" /> 和 <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" /> 属性的新值。</param>
        <summary>将此 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> 设置给由指定 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> 所表示的视觉样式元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> 在内部检查属性的值。 在调用此方法之前，应调用 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> 方法来验证当前视觉样式是否为参数所指定的元素提供了定义 `element` 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters%28System.Windows.Forms.VisualStyles.VisualStyleElement%29> 方法将设置 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 为新的 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> 。 此代码示例是为类概述提供的更大示例的一部分 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 。  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">当前视觉样式未定义 <paramref name="element" />。</exception>
        <exception cref="T:System.InvalidOperationException">操作系统不支持视觉样式。  
  
 \- 或 -  
  
 用户在操作系统中禁用视觉样式。  
  
 \- 或 -  
  
 视觉样式不应用于应用程序窗口的工作区。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (string className, int part, int state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(string className, int32 part, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (className As String, part As Integer, state As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::String ^ className, int part, int state);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : string * int * int -&gt; unit" Usage="visualStyleRenderer.SetParameters (className, part, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="part" Type="System.Int32" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="className"><see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" /> 属性的新值。</param>
        <param name="part"><see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" /> 属性的新值。</param>
        <param name="state"><see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" /> 属性的新值。</param>
        <summary>将此 <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> 设置给由指定的类、部件和状态值所表示的视觉样式元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> 在内部检查属性的值。 在调用此方法之前，应调用 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> 方法来验证当前视觉样式是否为 `className` 、 `part` 和参数指定的元素提供了定义 `state` 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">当前视觉样式未定义 <paramref name="className" />、<paramref name="part" /> 和 <paramref name="state" /> 的组合。</exception>
        <exception cref="T:System.InvalidOperationException">操作系统不支持视觉样式。  
  
 \- 或 -  
  
 用户在操作系统中禁用视觉样式。  
  
 \- 或 -  
  
 视觉样式不应用于应用程序窗口的工作区。</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public int State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int State { int get(); };" />
      <MemberSignature Language="F#" Value="member this.State : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前视觉样式元素的状态。</summary>
        <value>一个标识当前视觉样式元素的状态的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性标识由当前 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> 和属性值标识的元素的当前可视状态 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A> 。 有关视觉样式元素的类、部件和状态的详细信息，请参阅 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> 类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
