<Type Name="JournalEntry" FullName="System.Windows.Navigation.JournalEntry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0f369dfd5d3e07373fe2c94e2ec410662d92aa0" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83529457" /></Metadata><TypeSignature Language="C#" Value="public class JournalEntry : System.Windows.DependencyObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JournalEntry extends System.Windows.DependencyObject implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.JournalEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class JournalEntry&#xA;Inherits DependencyObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class JournalEntry : System::Windows::DependencyObject, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type JournalEntry = class&#xA;    inherit DependencyObject&#xA;    interface ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JournalEntry extends System.Windows.DependencyObject implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示后退或前进导航历史记录中的一个条目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Presentation Foundation 实现一个导航历史记录服务，该服务为之前导航到的每个内容段存储一个条目，就像 [!INCLUDE[TLA#tla_ie](~/includes/tlasharptla-ie-md.md)]中的导航历史记录一样。 导航历史记录包含两个堆栈，一个用于记住后退导航历史记录，另一个用于记住前进导航历史记录。  
  
 当前进导航发生时，当前项的项将添加到后退导航历史记录中。 在下列情况下会发生这种情况：  
  
-   调用 `Navigate` 方法（<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>、<xref:System.Windows.Navigation.NavigationWindow.Navigate%2A?displayProperty=nameWithType><xref:System.Windows.Controls.Frame.Navigate%2A?displayProperty=nameWithType>）。  
  
-   调用 `GoForward` 方法（<xref:System.Windows.Navigation.NavigationService.GoForward%2A?displayProperty=nameWithType>、<xref:System.Windows.Navigation.NavigationWindow.GoForward%2A?displayProperty=nameWithType><xref:System.Windows.Controls.Frame.GoForward%2A?displayProperty=nameWithType>）。  
  
-   导航 UI 上从当前导航器显示的 "前进" 按钮（[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]、<xref:System.Windows.Navigation.NavigationWindow><xref:System.Windows.Controls.Frame>）。  
  
 同样，在发生后退导航之前，会将当前项的项添加到前进导航历史记录中，这会在以下情况发生：  
  
-   调用 `GoBack` 方法（<xref:System.Windows.Navigation.NavigationService.GoBack%2A?displayProperty=nameWithType>、<xref:System.Windows.Navigation.NavigationWindow.GoBack%2A?displayProperty=nameWithType><xref:System.Windows.Controls.Frame.GoBack%2A?displayProperty=nameWithType>）。  
  
-   导航 UI 上的 "后退" 按钮，该按钮从当前导航器（[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]、<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>）显示。  
  
 后退和前进导航历史记录中的每个条目都是 <xref:System.Windows.Navigation.JournalEntry> 类的实例。  
  
 每个 <xref:System.Windows.Navigation.JournalEntry> 对象将封装有关特定导航的信息，包括项的名称（<xref:System.Windows.Navigation.JournalEntry.Name%2A>）、项是否保持活动状态（<xref:System.Windows.Navigation.JournalEntry.KeepAlive%2A>）和导航到的内容（<xref:System.Windows.Navigation.JournalEntry.Source%2A>）的统一资源标识符（URI）。  
  
 可以通过枚举 <xref:System.Windows.Navigation.NavigationWindow.BackStack%2A?displayProperty=nameWithType> 或 <xref:System.Windows.Controls.Frame.BackStack%2A?displayProperty=nameWithType> 属性来检索后退导航历史记录中的所有 <xref:System.Windows.Navigation.JournalEntry> 对象。 对于前进导航历史记录，可以通过枚举 <xref:System.Windows.Navigation.NavigationWindow.ForwardStack%2A?displayProperty=nameWithType> 或 <xref:System.Windows.Controls.Frame.ForwardStack%2A?displayProperty=nameWithType> 属性检索所有 <xref:System.Windows.Navigation.JournalEntry> 对象。  
  
 如果需要从后退导航历史记录中删除最新的 <xref:System.Windows.Navigation.JournalEntry> 对象，以防止导航到该对象，例如，可以调用 `RemoveBackEntry` 方法（<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A?displayProperty=nameWithType>、<xref:System.Windows.Navigation.NavigationWindow.RemoveBackEntry%2A?displayProperty=nameWithType>、<xref:System.Windows.Controls.Frame.RemoveBackEntry%2A?displayProperty=nameWithType>），该方法将删除 <xref:System.Windows.Navigation.JournalEntry> 对象并返回对该对象的引用。  
  
 不过，您不能将 <xref:System.Windows.Navigation.JournalEntry> 对象添加到导航历史记录中，因为您既不能实例化，也不能从 <xref:System.Windows.Navigation.JournalEntry>派生，因为没有类型实现成员来执行此操作。 但是，可以通过调用 `AddBackEntry` 方法（<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>、<xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A>、<xref:System.Windows.Controls.Frame.AddBackEntry%2A>）将自定义 <xref:System.Windows.Navigation.CustomContentState> 对象添加到后退导航历史记录;<xref:System.Windows.Navigation.NavigationService> 将 <xref:System.Windows.Navigation.CustomContentState> 对象添加到内部创建的 <xref:System.Windows.Navigation.JournalEntry> 对象，然后将该对象添加到后退导航历史记录中。  
  
   
  
## Examples  
 下面的示例演示如何从后退导航堆栈检索最新的 <xref:System.Windows.Navigation.JournalEntry> 对象，以获取 <xref:System.Windows.Navigation.JournalEntry.Name%2A> 和 <xref:System.Windows.Navigation.JournalEntry.Source%2A> 属性值。  
  
 [!code-csharp[JournalEntrySnippets#GetJournalEntryCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/JournalEntrySnippets/CSharp/DatePage.xaml.cs#getjournalentrycodebehind)]
 [!code-vb[JournalEntrySnippets#GetJournalEntryCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/JournalEntrySnippets/visualbasic/datepage.xaml.vb#getjournalentrycodebehind)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JournalEntry (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JournalEntry(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Navigation.JournalEntry : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Windows.Navigation.JournalEntry" Usage="new System.Windows.Navigation.JournalEntry (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">序列化信息。</param>
        <param name="context">流上下文。</param>
        <summary>初始化 <see cref="T:System.Windows.Navigation.JournalEntry" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomContentState">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.CustomContentState CustomContentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Navigation.CustomContentState CustomContentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.CustomContentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomContentState As CustomContentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Navigation::CustomContentState ^ CustomContentState { System::Windows::Navigation::CustomContentState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomContentState : System.Windows.Navigation.CustomContentState" Usage="System.Windows.Navigation.JournalEntry.CustomContentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.CustomContentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与日记条目关联的 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。</summary>
        <value>与日记条目关联的 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。 如果没有关联对象，则返回 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeepAlive">
      <MemberSignature Language="C#" Value="public static bool GetKeepAlive (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetKeepAlive(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.GetKeepAlive(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKeepAlive (dependencyObject As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetKeepAlive(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetKeepAlive : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Navigation.JournalEntry.GetKeepAlive dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">从中获取附加属性值的元素。</param>
        <summary>返回指定元素的日记条目的附加属性 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" />。</summary>
        <returns>指定元素的日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性的值。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.GetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (dependencyObject As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetName : System.Windows.DependencyObject -&gt; string" Usage="System.Windows.Navigation.JournalEntry.GetName dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">从中获取附加属性值的元素。</param>
        <summary>设置指定元素日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</summary>
        <returns>指定元素日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Windows.Navigation.JournalEntry.NameProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="journalEntry.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">序列化目标对象所必需的数据。</param>
        <param name="context">流上下文。</param>
        <summary>将此对象序列化时调用。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="see GetKeepAlive, and SetKeepAlive" />
      <MemberSignature Language="ILAsm" Value="see GetKeepAlive, and SetKeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="see GetKeepAlive, and SetKeepAlive" />
      <MemberSignature Language="F#" Value="see GetKeepAlive, and SetKeepAlive" Usage="see GetKeepAlive, and SetKeepAlive" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取或设置一个值，该值指示在导航到日记条目内容时，在导航历史记录中是保留还是重新创建内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关页面如何使用此属性的详细说明，请参阅 <xref:System.Windows.Controls.Page.KeepAlive%2A>。  
  
<a name="dependencyPropertyInfo_KeepAlive"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Navigation.JournalEntry.KeepAliveProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何为 <xref:System.Windows.Controls.Page>设置附加的 <xref:System.Windows.Navigation.JournalEntry.KeepAlive%2A> 属性。  
  
 [!code-xml[JournalEntrySnippets#JEKeepAliveMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/JournalEntrySnippets/CSharp/JEKeepAlivePage.xaml#jekeepalivemarkup)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAliveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeepAliveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeepAliveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeepAliveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeepAliveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeepAliveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Navigation.JournalEntry.KeepAliveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Navigation.JournalEntry.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置日记条目的名称。</summary>
        <value>日记条目的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>或 [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]所承载的内容将显示允许用户导航后退和前进导航历史记录的导航 UI。 为导航历史记录中的每个条目显示的文本取决于使用以下哪一段数据来自动构造导航历史记录条目名称（按优先级顺序）：  
  
-   附加 <xref:System.Windows.Navigation.JournalEntry.Name%2A> 特性。  
  
-   <xref:System.Windows.Controls.Page.Title%2A> 列中的一个值匹配。  
  
-   当前页面的 <xref:System.Windows.Controls.Page.WindowTitle%2A> 和统一资源标识符（URI）  
  
-   当前页的统一资源标识符（URI）。  
  
<a name="xamlAttributeUsage_Name"></a>   
## <a name="xaml-attribute-usage"></a>XAML 特性用法  
 \<*对象* **JournalEntry.Name**= "<xref:System.String>"/>  
  
<a name="dependencyPropertyInfo_Name"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Navigation.JournalEntry.NameProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何从标记设置 <xref:System.Windows.Controls.Page> 的 <xref:System.Windows.Navigation.JournalEntry.Name%2A> 属性，同时提供 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 的附加属性用法。  
  
 [!code-xaml[JournalEntrySnippets#JENameMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/JournalEntrySnippets/CSharp/JENamePage.xaml#jenamemarkup)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.JournalEntry.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Navigation.JournalEntry.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeepAlive">
      <MemberSignature Language="C#" Value="public static void SetKeepAlive (System.Windows.DependencyObject dependencyObject, bool keepAlive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetKeepAlive(class System.Windows.DependencyObject dependencyObject, bool keepAlive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.SetKeepAlive(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetKeepAlive (dependencyObject As DependencyObject, keepAlive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetKeepAlive(System::Windows::DependencyObject ^ dependencyObject, bool keepAlive);" />
      <MemberSignature Language="F#" Value="static member SetKeepAlive : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Navigation.JournalEntry.SetKeepAlive (dependencyObject, keepAlive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="keepAlive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">要在其上设置附加属性值的元素。</param>
        <param name="keepAlive">若要将日记条目保留在内存中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>设置指定元素的 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public static void SetName (System.Windows.DependencyObject dependencyObject, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetName(class System.Windows.DependencyObject dependencyObject, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.SetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetName (dependencyObject As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetName(System::Windows::DependencyObject ^ dependencyObject, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetName : System.Windows.DependencyObject * string -&gt; unit" Usage="System.Windows.Navigation.JournalEntry.SetName (dependencyObject, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">要在其上设置附加属性值的元素。</param>
        <param name="name">要分配给附加属性的名称。</param>
        <summary>设置指定元素的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Windows.Navigation.JournalEntry.NameProperty" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Navigation.JournalEntry.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置导航到的内容的 URI。</summary>
        <value>导航到的内容的 URI，如果条目没有关联任何 URI，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
