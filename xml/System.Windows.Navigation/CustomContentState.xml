<Type Name="CustomContentState" FullName="System.Windows.Navigation.CustomContentState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f93c5ee9455e197b8043e712619c46bda7bb4f3" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83525687" /></Metadata><TypeSignature Language="C#" Value="public abstract class CustomContentState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CustomContentState extends System.Object" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.CustomContentState" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomContentState" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomContentState abstract" />
  <TypeSignature Language="F#" Value="type CustomContentState = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CustomContentState extends System.Object" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>使用 <see cref="T:System.Windows.Navigation.CustomContentState" />，可以在源内容片段的不同状态之间导航，而无需为每个后续导航重新加载源内容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，<xref:System.Windows.Navigation.NavigationService> 不会在导航历史记录中存储内容对象的实例。 相反，每次使用导航历史记录导航到内容对象时，<xref:System.Windows.Navigation.NavigationService> 都将创建该对象的新实例。 此行为旨在避免在将大量内容导航到时消耗过多的内存。 因此，不会从一个导航到下一个导航来记住内容的状态。 不过，[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 提供将一段自定义状态与内容的导航历史记录项关联的功能。  
  
 与导航历史记录项关联的自定义状态必须是从 <xref:System.Windows.Navigation.CustomContentState>派生的类。 使用以下方法之一将 <xref:System.Windows.Navigation.CustomContentState> 对象与导航历史记录项关联：  
  
-   调用**AddBackEntry**：  
  
    -   <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Controls.Frame.AddBackEntry%2A?displayProperty=nameWithType> 列中的一个值匹配。  
  
-   引发以下事件之一时 <xref:System.Windows.Navigation.NavigatingCancelEventArgs.Content%2A?displayProperty=nameWithType> 设置：  
  
    -   <xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Controls.Frame.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=nameWithType>  
  
-   通过在类上实现 <xref:System.Windows.Navigation.IProvideCustomContentState>，使其与自定义状态关联。  
  
> [!NOTE]
>  如果调用**AddBackEntry**方法，则必须处理**导航**事件或实现 <xref:System.Windows.Navigation.IProvideCustomContentState>。  
  
 导航到导航历史记录项时，[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 会检查是否有自定义的 <xref:System.Windows.Navigation.CustomContentState> 对象与其关联。 如果是这样，它将调用 <xref:System.Windows.Navigation.CustomContentState.Replay%2A>，以允许自定义 <xref:System.Windows.Navigation.CustomContentState> 对象应用它从上一导航中记住的状态。  
  
 自定义 <xref:System.Windows.Navigation.CustomContentState> 类可以重写 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>，以更改为 <xref:System.Windows.Navigation.CustomContentState> 对象关联的导航历史记录项显示的名称。 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> 返回的值在不同导航器的导航 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] （[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]、<xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>）中可见。  
  
 派生自 <xref:System.Windows.Navigation.CustomContentState> 的类必须是可序列化的，这意味着它必须至少与 <xref:System.SerializableAttribute>一起扩展，并且可以选择实现 <xref:System.Runtime.Serialization.ISerializable>。  
  
> [!IMPORTANT]
>  当你在自定义内容状态中存储信息时，如果不希望将内容保留在内存中，则不能存储对要记住其状态的页的实例的任何引用。 这会阻止 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 释放页面实例，并破坏默认导航历史记录行为的目的。 如果必须这样做，请考虑改用 <xref:System.Windows.Controls.Page.KeepAlive%2A>。  
  
   
  
## Examples  
 下面是重写 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A><xref:System.Windows.Navigation.CustomContentState> 实现的示例。  
  
 [!code-csharp[CustomContentStateSnippets#MyCustomContentStateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomContentStateSnippets/CSharp/MyCustomContentState.cs#mycustomcontentstatecode)]
 [!code-vb[CustomContentStateSnippets#MyCustomContentStateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomContentStateSnippets/visualbasic/mycustomcontentstate.vb#mycustomcontentstatecode)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Navigation.NavigationService" />
    <altmember cref="T:System.Windows.Navigation.JournalEntry" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomContentState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.CustomContentState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomContentState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Navigation.CustomContentState" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JournalEntryName">
      <MemberSignature Language="C#" Value="public virtual string JournalEntryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string JournalEntryName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.CustomContentState.JournalEntryName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JournalEntryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ JournalEntryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JournalEntryName : string" Usage="System.Windows.Navigation.CustomContentState.JournalEntryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>存储在导航历史记录中的内容的名称。 <see cref="P:System.Windows.Navigation.CustomContentState.JournalEntryName" /> 的值显示自 <see cref="T:System.Windows.Navigation.NavigationWindow" />、<see cref="T:System.Windows.Controls.Frame" /> 和 [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)] 导航 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]。</summary>
        <value>存储在导航历史记录中的内容的 <see cref="T:System.String" /> 名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 存储在后退和前进导航历史记录中的条目通常可以通过宿主导航器的导航 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 上的 "后退" 和 "前进" 下拉导航按钮获取，包括 <xref:System.Windows.Navigation.NavigationWindow>、<xref:System.Windows.Controls.Frame>或 [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)]。  
  
 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> 是显示在 "导航历史记录" 下拉列表中的 <xref:System.String> 值。  
  
 不需要重写 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>;如果不是，则使用以下数据片段，按优先级顺序自动构造导航历史记录项名称：  
  
-   <xref:System.Windows.Controls.Page.Title%2A> 列中的一个值匹配。  
  
-   当前页面的 <xref:System.Windows.Controls.Page.WindowTitle%2A> 和统一资源标识符（URI）  
  
-   当前页的统一资源标识符（URI）。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
        <altmember cref="T:System.Windows.Navigation.IProvideCustomContentState" />
      </Docs>
    </Member>
    <Member MemberName="Replay">
      <MemberSignature Language="C#" Value="public abstract void Replay (System.Windows.Navigation.NavigationService navigationService, System.Windows.Navigation.NavigationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Replay(class System.Windows.Navigation.NavigationService navigationService, valuetype System.Windows.Navigation.NavigationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Replay (navigationService As NavigationService, mode As NavigationMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Replay(System::Windows::Navigation::NavigationService ^ navigationService, System::Windows::Navigation::NavigationMode mode);" />
      <MemberSignature Language="F#" Value="abstract member Replay : System.Windows.Navigation.NavigationService * System.Windows.Navigation.NavigationMode -&gt; unit" Usage="customContentState.Replay (navigationService, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationService" Type="System.Windows.Navigation.NavigationService" />
        <Parameter Name="mode" Type="System.Windows.Navigation.NavigationMode" />
      </Parameters>
      <Docs>
        <param name="navigationService">一种 <see cref="T:System.Windows.Navigation.NavigationService" />，为对要将此 <see cref="T:System.Windows.Navigation.CustomContentState" /> 应用到其中的内容负责的导航器所拥有。</param>
        <param name="mode">一种 <see cref="T:System.Windows.Navigation.NavigationMode" />，指定如何导航到要对其应用 <see cref="T:System.Windows.Navigation.CustomContentState" /> 的内容。</param>
        <summary>在发生导航时调用，以对内容片段重新应用状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 导航历史记录中包含关联的 <xref:System.Windows.Navigation.CustomContentState> 对象的项导航到时，将调用 <xref:System.Windows.Navigation.CustomContentState.Replay%2A>。  
  
 从抽象 <xref:System.Windows.Navigation.CustomContentState> 类派生时，必须重写 <xref:System.Windows.Navigation.CustomContentState.Replay%2A>，不过重写实现仅需调用基 <xref:System.Windows.Navigation.CustomContentState.Replay%2A> 方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
        <altmember cref="T:System.Windows.Navigation.IProvideCustomContentState" />
      </Docs>
    </Member>
  </Members>
</Type>
