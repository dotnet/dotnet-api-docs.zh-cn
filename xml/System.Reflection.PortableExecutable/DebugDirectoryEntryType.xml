<Type Name="DebugDirectoryEntryType" FullName="System.Reflection.PortableExecutable.DebugDirectoryEntryType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb4836fb9660be51fd274adef0133d3a1c615563" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89850827" /></Metadata><TypeSignature Language="C#" Value="public enum DebugDirectoryEntryType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DebugDirectoryEntryType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.PortableExecutable.DebugDirectoryEntryType" />
  <TypeSignature Language="VB.NET" Value="Public Enum DebugDirectoryEntryType" />
  <TypeSignature Language="C++ CLI" Value="public enum class DebugDirectoryEntryType" />
  <TypeSignature Language="F#" Value="type DebugDirectoryEntryType = " />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="399ad-101">一个枚举，它描述了 <see cref="T:System.Reflection.PortableExecutable.DebugDirectoryEntry" /> 的调用信息的格式。</span><span class="sxs-lookup"><span data-stu-id="399ad-101">An enumeration that describes the format of the debugging information of a <see cref="T:System.Reflection.PortableExecutable.DebugDirectoryEntry" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="399ad-102">有关与各个枚举成员相关的规范，请参阅以下内容：</span><span class="sxs-lookup"><span data-stu-id="399ad-102">See the following for the specifications related to individual enumeration members:</span></span>

|<span data-ttu-id="399ad-103">成员</span><span class="sxs-lookup"><span data-stu-id="399ad-103">Member</span></span>|<span data-ttu-id="399ad-104">规范</span><span class="sxs-lookup"><span data-stu-id="399ad-104">Specification</span></span>|
|---|---|
|`CodeView`|[<span data-ttu-id="399ad-105">CodeView 调试目录条目 (类型 2) </span><span class="sxs-lookup"><span data-stu-id="399ad-105">CodeView Debug Directory Entry (type 2)</span></span>](https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#codeview-debug-directory-entry-type-2)|
|`EmbeddedPortablePdb`|[<span data-ttu-id="399ad-106">Embedded Portale PDB 调试目录条目 (类型 17) </span><span class="sxs-lookup"><span data-stu-id="399ad-106">Embedded Portale PDB Debu Directory Entry (type 17)</span></span>](https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#embedded-portable-pdb-debug-directory-entry-type-17)|
|`PdbChecksum`|[<span data-ttu-id="399ad-107">PDB 校验和调试目录条目 (类型 19) </span><span class="sxs-lookup"><span data-stu-id="399ad-107">PDB Checksum Debug Directory Entry (type 19)</span></span>](https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#pdb-checksum-debug-directory-entry-type-19)|
|`Reproducible`|<span data-ttu-id="399ad-108">请参阅 [确定性调试目录条目 (类型 16) ](https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#deterministic-debug-directory-entry-type-16)</span><span class="sxs-lookup"><span data-stu-id="399ad-108">See [Deterministic Debug Directory Entry (type 16)](https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#deterministic-debug-directory-entry-type-16)</span></span>|

### <a name="debugdirectoryentrytypereproducible"></a><span data-ttu-id="399ad-109">DebugDirectoryEntryType</span><span class="sxs-lookup"><span data-stu-id="399ad-109">DebugDirectoryEntryType.Reproducible</span></span> 

<span data-ttu-id="399ad-110">生成确定性 PE/COFF 文件的工具可保证该文件的整个内容仅基于提供给该工具的记录输入 (例如源文件、资源文件、编译器选项等 ) 而不是环境环境变量 (如当前时间、操作系统、运行该工具的进程的位数 ) 等。</span><span class="sxs-lookup"><span data-stu-id="399ad-110">The tool that produced the deterministic PE/COFF file guarantees that the entire content of the file is based solely on documented inputs given to the tool (such as source files, resource files, compiler options, etc.) rather than ambient environment variables (such as the current time, the operating system, the bitness of the process running the tool, etc.).</span></span>

<span data-ttu-id="399ad-111">`TimeDateStamp`具有确定性的 PE/COFF 文件的 COFF 文件头中的字段值并不表示该文件的生成日期和时间，不应以这种方式进行解释。</span><span class="sxs-lookup"><span data-stu-id="399ad-111">The value of the `TimeDateStamp` field in the COFF File Header of a deterministic PE/COFF file does not indicate the date and time when the file was produced and should not be interpreted that way.</span></span> <span data-ttu-id="399ad-112">相反，字段的值派生自文件内容的哈希。</span><span class="sxs-lookup"><span data-stu-id="399ad-112">Instead, the value of the field is derived from a hash of the file content.</span></span> <span data-ttu-id="399ad-113">用于计算此值的算法是生成文件的工具的实现细节。</span><span class="sxs-lookup"><span data-stu-id="399ad-113">The algorithm to calculate this value is an implementation detail of the tool that produced the file.</span></span>

<span data-ttu-id="399ad-114">类型的调试目录项 <xref:System.Reflection.PortableExecutable.DebugDirectoryEntryType.Reproducible> 必须包含除零以外的所有字段 <xref:System.Reflection.PortableExecutable.DebugDirectoryEntry.Type?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="399ad-114">The debug directory entry of type <xref:System.Reflection.PortableExecutable.DebugDirectoryEntryType.Reproducible> must have all fields except for <xref:System.Reflection.PortableExecutable.DebugDirectoryEntry.Type?displayProperty=nameWithType> zeroed.</span></span>

         ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CodeView">
      <MemberSignature Language="C#" Value="CodeView" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.PortableExecutable.DebugDirectoryEntryType CodeView = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.PortableExecutable.DebugDirectoryEntryType.CodeView" />
      <MemberSignature Language="VB.NET" Value="CodeView" />
      <MemberSignature Language="C++ CLI" Value="CodeView" />
      <MemberSignature Language="F#" Value="CodeView = 2" Usage="System.Reflection.PortableExecutable.DebugDirectoryEntryType.CodeView" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.DebugDirectoryEntryType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="399ad-115">关联的 PDB 文件说明。</span><span class="sxs-lookup"><span data-stu-id="399ad-115">Associated PDB file description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="399ad-116">有关规范，请参阅 https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#codeview-debug-directory-entry-type-2 。</span><span class="sxs-lookup"><span data-stu-id="399ad-116">See https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#codeview-debug-directory-entry-type-2 for specification.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Coff">
      <MemberSignature Language="C#" Value="Coff" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.PortableExecutable.DebugDirectoryEntryType Coff = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.PortableExecutable.DebugDirectoryEntryType.Coff" />
      <MemberSignature Language="VB.NET" Value="Coff" />
      <MemberSignature Language="C++ CLI" Value="Coff" />
      <MemberSignature Language="F#" Value="Coff = 1" Usage="System.Reflection.PortableExecutable.DebugDirectoryEntryType.Coff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.DebugDirectoryEntryType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="399ad-117">COFF 调试信息（行号、符号表和字符串表）。</span><span class="sxs-lookup"><span data-stu-id="399ad-117">The COFF debug information (line numbers, symbol table, and string table).</span></span> <span data-ttu-id="399ad-118">此类调试信息也由文件标头中的字段指向。</span><span class="sxs-lookup"><span data-stu-id="399ad-118">This type of debug information is also pointed to by fields in the file headers.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmbeddedPortablePdb">
      <MemberSignature Language="C#" Value="EmbeddedPortablePdb" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.PortableExecutable.DebugDirectoryEntryType EmbeddedPortablePdb = int32(17)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.PortableExecutable.DebugDirectoryEntryType.EmbeddedPortablePdb" />
      <MemberSignature Language="VB.NET" Value="EmbeddedPortablePdb" />
      <MemberSignature Language="C++ CLI" Value="EmbeddedPortablePdb" />
      <MemberSignature Language="F#" Value="EmbeddedPortablePdb = 17" Usage="System.Reflection.PortableExecutable.DebugDirectoryEntryType.EmbeddedPortablePdb" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.DebugDirectoryEntryType</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary><para><span data-ttu-id="399ad-119">该项指向包含嵌入式可移植 PDB 的 blob。</span><span class="sxs-lookup"><span data-stu-id="399ad-119">The entry points to a blob containing Embedded Portable PDB.</span></span> <span data-ttu-id="399ad-120">嵌入式可移植 PDB blob 具有以下格式：</span><span class="sxs-lookup"><span data-stu-id="399ad-120">The Embedded Portable PDB blob has the following format:</span></span></para>
          <para><span data-ttu-id="399ad-121">- blob ::= uncompressed-size data</span><span class="sxs-lookup"><span data-stu-id="399ad-121">- blob ::= uncompressed-size data</span></span></para>
          <para><span data-ttu-id="399ad-122">- 数据跨越 blob 的其余部分并包含 Deflate 压缩的可移植 PDB。</span><span class="sxs-lookup"><span data-stu-id="399ad-122">- Data spans the remainder of the blob and contains a Deflate-compressed Portable PDB.</span></span></para></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="399ad-123">嵌入式可移植 PDB blob 具有以下格式：</span><span class="sxs-lookup"><span data-stu-id="399ad-123">The Embedded Portable PDB blob has the following format:</span></span>
 
 <span data-ttu-id="399ad-124">blob：： = 未压缩大小的数据数据跨越 blob 的其余部分，并且包含 Deflate 压缩的可移植 PDB。</span><span class="sxs-lookup"><span data-stu-id="399ad-124">blob ::= uncompressed-size data Data spans the remainder of the blob and contains a Deflate-compressed Portable PDB.</span></span>
 
 <span data-ttu-id="399ad-125">有关规范，请参阅 https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#embedded-portable-pdb-debug-directory-entry-type-17 。</span><span class="sxs-lookup"><span data-stu-id="399ad-125">See https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#embedded-portable-pdb-debug-directory-entry-type-17 for specification.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PdbChecksum">
      <MemberSignature Language="C#" Value="PdbChecksum" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.PortableExecutable.DebugDirectoryEntryType PdbChecksum = int32(19)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.PortableExecutable.DebugDirectoryEntryType.PdbChecksum" />
      <MemberSignature Language="VB.NET" Value="PdbChecksum" />
      <MemberSignature Language="C++ CLI" Value="PdbChecksum" />
      <MemberSignature Language="F#" Value="PdbChecksum = 19" Usage="System.Reflection.PortableExecutable.DebugDirectoryEntryType.PdbChecksum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.DebugDirectoryEntryType</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary><span data-ttu-id="399ad-126">该项存储生成 PE/COFF 文件所使用的符号文件的内容的加密哈希。</span><span class="sxs-lookup"><span data-stu-id="399ad-126">The entry stores a crypto hash of the content of the symbol file the PE/COFF file was built with.</span></span> <span data-ttu-id="399ad-127">哈希可用于验证给定的 PDB 文件是否是使用 PE/COFF 文件生成的，且不能以任何方式更改。</span><span class="sxs-lookup"><span data-stu-id="399ad-127">The hash can be used to validate that a given PDB file was built with the PE/COFF file and not altered in any way.</span></span> <span data-ttu-id="399ad-128">如果在生成 PE/COFF 文件的过程中生成了多个 PDB，则可能会出现多项（例如，专用和公共符号）。</span><span class="sxs-lookup"><span data-stu-id="399ad-128">More than one entry can be present if multiple PDBs were produced during the build of the PE/COFF file (e.g. private and public symbols).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="399ad-129">哈希可用于验证给定的 PDB 文件是否是使用 PE/COFF 文件生成的，且不能以任何方式更改。</span><span class="sxs-lookup"><span data-stu-id="399ad-129">The hash can be used to validate that a given PDB file was built with the PE/COFF file and not altered in any way.</span></span>
<span data-ttu-id="399ad-130">可能存在多个项，如果在生成 PE/COFF 文件期间生成了多个 Pdb (例如，private 和 public 符号) 。</span><span class="sxs-lookup"><span data-stu-id="399ad-130">More than one entry can be present, in case multiple PDBs were produced during the build of the PE/COFF file (e.g. private and public symbols).</span></span>
 
 <span data-ttu-id="399ad-131">有关规范，请参阅 https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#pdb-checksum-debug-directory-entry-type-19 。</span><span class="sxs-lookup"><span data-stu-id="399ad-131">See https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#pdb-checksum-debug-directory-entry-type-19 for specification.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reproducible">
      <MemberSignature Language="C#" Value="Reproducible" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.PortableExecutable.DebugDirectoryEntryType Reproducible = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.PortableExecutable.DebugDirectoryEntryType.Reproducible" />
      <MemberSignature Language="VB.NET" Value="Reproducible" />
      <MemberSignature Language="C++ CLI" Value="Reproducible" />
      <MemberSignature Language="F#" Value="Reproducible = 16" Usage="System.Reflection.PortableExecutable.DebugDirectoryEntryType.Reproducible" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.DebugDirectoryEntryType</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="399ad-132">如果出现此项，则表示存在确定的 PE/COFF 文件。</span><span class="sxs-lookup"><span data-stu-id="399ad-132">The presence of this entry indicates a deterministic PE/COFF file.</span></span> <span data-ttu-id="399ad-133">有关详细信息，请参阅备注部分。</span><span class="sxs-lookup"><span data-stu-id="399ad-133">See the Remarks section for more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="399ad-134">生成确定性 PE/COFF 文件的工具可保证该文件的整个内容仅基于提供给该工具的记录输入 (例如源文件、资源文件、编译器选项等 ) 而不是环境环境变量 (如当前时间、操作系统、运行该工具的进程的位数 ) 等。</span><span class="sxs-lookup"><span data-stu-id="399ad-134">The tool that produced the deterministic PE/COFF file guarantees that the entire content of the file is based solely on documented inputs given to the tool (such as source files, resource files, compiler options, etc.) rather than ambient environment variables (such as the current time, the operating system, the bitness of the process running the tool, etc.).</span></span>
<span data-ttu-id="399ad-135">确定性 PE/COFF 文件的 COFF 文件头中的字段 TimeDateStamp 值不指示生成该文件的日期和时间，也不应以这种方式进行解释。</span><span class="sxs-lookup"><span data-stu-id="399ad-135">The value of field TimeDateStamp in COFF File Header of a deterministic PE/COFF file does not indicate the date and time when the file was produced and should not be interpreted that way.</span></span>
<span data-ttu-id="399ad-136">相反，字段的值派生自文件内容的哈希。</span><span class="sxs-lookup"><span data-stu-id="399ad-136">Instead the value of the field is derived from a hash of the file content.</span></span> <span data-ttu-id="399ad-137">用于计算此值的算法是生成文件的工具的实现细节。</span><span class="sxs-lookup"><span data-stu-id="399ad-137">The algorithm to calculate this value is an implementation detail of the tool that produced the file.</span></span>
<span data-ttu-id="399ad-138">类型的调试目录项 <xref:System.Reflection.PortableExecutable.DebugDirectoryEntryType.Reproducible> 必须包含除类型为零之外的所有字段。</span><span class="sxs-lookup"><span data-stu-id="399ad-138">The debug directory entry of type <xref:System.Reflection.PortableExecutable.DebugDirectoryEntryType.Reproducible> must have all fields, except for Type zeroed.</span></span>
<span data-ttu-id="399ad-139">有关规范，请参阅 https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#deterministic-debug-directory-entry-type-16 。</span><span class="sxs-lookup"><span data-stu-id="399ad-139">See https://github.com/dotnet/runtime/blob/master/docs/design/specs/PE-COFF.md#deterministic-debug-directory-entry-type-16 for specification.</span></span>
 

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.PortableExecutable.DebugDirectoryEntryType Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.PortableExecutable.DebugDirectoryEntryType.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="System.Reflection.PortableExecutable.DebugDirectoryEntryType.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PortableExecutable.DebugDirectoryEntryType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="399ad-140">未知值，所有工具都应忽略。</span><span class="sxs-lookup"><span data-stu-id="399ad-140">An unknown value that should be ignored by all tools.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
