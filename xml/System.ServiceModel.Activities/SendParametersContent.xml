<Type Name="SendParametersContent" FullName="System.ServiceModel.Activities.SendParametersContent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a20e0143918bc00fb7174fc24baa07631518624a" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89892059" /></Metadata><TypeSignature Language="C#" Value="public sealed class SendParametersContent : System.ServiceModel.Activities.SendContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendParametersContent extends System.ServiceModel.Activities.SendContent" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.SendParametersContent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SendParametersContent&#xA;Inherits SendContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendParametersContent sealed : System::ServiceModel::Activities::SendContent" />
  <TypeSignature Language="F#" Value="type SendParametersContent = class&#xA;    inherit SendContent" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activities.SendContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.ContentProperty("Parameters")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.ContentProperty("Parameters")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7b004-101">允许以参数形式向工作流服务发送数据或从工作流服务发送数据。</span><span class="sxs-lookup"><span data-stu-id="7b004-101">Enables sending data to or from a workflow service in the form of parameters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b004-102"><xref:System.ServiceModel.Activities.SendParametersContent> 可与常规 WCF 客户端和服务进行互操作。</span><span class="sxs-lookup"><span data-stu-id="7b004-102"><xref:System.ServiceModel.Activities.SendParametersContent> is interoperable with regular WCF clients and services.</span></span> <span data-ttu-id="7b004-103"><xref:System.ServiceModel.Activities.SendParametersContent>集合类似于 c # 方法签名中的参数声明。</span><span class="sxs-lookup"><span data-stu-id="7b004-103">The <xref:System.ServiceModel.Activities.SendParametersContent> collection is similar to the argument declaration on a C# method signature.</span></span> <span data-ttu-id="7b004-104"><xref:System.ServiceModel.Activities.SendParametersContent>集合不能包含消息协定或类型为的参数 <xref:System.ServiceModel.Channels.Message> 。</span><span class="sxs-lookup"><span data-stu-id="7b004-104">The <xref:System.ServiceModel.Activities.SendParametersContent> collection cannot contain an argument that is a message contract or of type <xref:System.ServiceModel.Channels.Message>.</span></span> <span data-ttu-id="7b004-105">请为这些类型的数据使用 <xref:System.ServiceModel.Activities.SendMessageContent>。</span><span class="sxs-lookup"><span data-stu-id="7b004-105">Use <xref:System.ServiceModel.Activities.SendMessageContent> for these types of data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b004-106">下面的示例演示如何使用 <xref:System.ServiceModel.Activities.SendParametersContent> 类。</span><span class="sxs-lookup"><span data-stu-id="7b004-106">The following example shows how to use the <xref:System.ServiceModel.Activities.SendParametersContent> class.</span></span>  
  
 [!code-csharp[SendReceiveParameters#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendreceiveparameters/cs/echoworkflowservice/program.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b004-107">初始化 <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7b004-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendParametersContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendParametersContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendParametersContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b004-108">初始化 <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7b004-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendParametersContent (System.Collections.Generic.IDictionary&lt;string,System.Activities.InArgument&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, class System.Activities.InArgument&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendParametersContent.#ctor(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As IDictionary(Of String, InArgument))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendParametersContent(System::Collections::Generic::IDictionary&lt;System::String ^, System::Activities::InArgument ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Activities.SendParametersContent : System.Collections.Generic.IDictionary&lt;string, System.Activities.InArgument&gt; -&gt; System.ServiceModel.Activities.SendParametersContent" Usage="new System.ServiceModel.Activities.SendParametersContent parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Activities.InArgument&gt;" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="7b004-109">键值对的集合，其中键包含参数名称，值包含自变量。</span><span class="sxs-lookup"><span data-stu-id="7b004-109">A collection of key-value pairs with the keys containing the parameter names and the values containing the arguments.</span></span></param>
        <summary><span data-ttu-id="7b004-110">使用指定的参数初始化 <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7b004-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> class with the specified parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b004-111">下面的示例演示如何使用此 <xref:System.ServiceModel.Activities.SendParametersContent> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="7b004-111">The following example shows how to use this <xref:System.ServiceModel.Activities.SendParametersContent> constructor.</span></span>  
  
 [!code-csharp[SendReceiveParameters#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendreceiveparameters/cs/echoworkflowservice/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Activities.InArgument&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Activities.InArgument&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.SendParametersContent.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDictionary(Of String, InArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Activities::InArgument ^&gt; ^ Parameters { System::Collections::Generic::IDictionary&lt;System::String ^, System::Activities::InArgument ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IDictionary&lt;string, System.Activities.InArgument&gt;" Usage="System.ServiceModel.Activities.SendParametersContent.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Activities.InArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b004-112">获取或设置工作流服务操作参数。</span><span class="sxs-lookup"><span data-stu-id="7b004-112">Gets or sets the workflow service operation parameters.</span></span></summary>
        <value><span data-ttu-id="7b004-113">键值对的有序集合，其中键包含参数名称，值包含参数。</span><span class="sxs-lookup"><span data-stu-id="7b004-113">An ordered collection of key-value pairs with the keys containing the parameter names and the values containing the arguments.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b004-114">下面的示例演示如何设置 <xref:System.ServiceModel.Activities.SendParametersContent.Parameters%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="7b004-114">The following example shows how to set the <xref:System.ServiceModel.Activities.SendParametersContent.Parameters%2A> property.</span></span>  
  
 [!code-csharp[SendReceiveParameters#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendreceiveparameters/cs/echoworkflowservice/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
