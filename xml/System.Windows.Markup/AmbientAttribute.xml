<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53ecb99daff41f33c7d6bc9ebab3175fc119c07e" /><Meta Name="ms.sourcegitcommit" Value="4adcc144a575f0b27871c22eeb7c5db11c37f05d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/14/2020" /><Meta Name="ms.locfileid" Value="90066626" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.Xaml" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.Xaml" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bf724-101">指定应将某个属性或类型视为环境。</span><span class="sxs-lookup"><span data-stu-id="bf724-101">Specifies that a property or type should be treated as ambient.</span></span> <span data-ttu-id="bf724-102">环境概念涉及 XAML 处理器如何确定成员的类型所有者。</span><span class="sxs-lookup"><span data-stu-id="bf724-102">The ambient concept relates to how XAML processors determine type owners of members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf724-103">环境属性是一个属性，当创建对象图时，此值应在分析器上下文中可用，但在此情况下，由于正在创建的直接 XAML 节点的目的，典型的类型成员查找将被挂起。</span><span class="sxs-lookup"><span data-stu-id="bf724-103">An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</span></span> <span data-ttu-id="bf724-104">环境概念有两个主要方案：</span><span class="sxs-lookup"><span data-stu-id="bf724-104">There are two main scenarios for the ambient concept:</span></span>  
  
-   <span data-ttu-id="bf724-105">同一对象的某些其他属性会影响和限定对象属性查找的工作方式。</span><span class="sxs-lookup"><span data-stu-id="bf724-105">Some other property of the same object influences and qualifies how that object-property lookup should work.</span></span>  
  
-   <span data-ttu-id="bf724-106">属性表示更大的延迟机制，查找成员值的环境功能会扩展到当前对象中包含的所有对象。</span><span class="sxs-lookup"><span data-stu-id="bf724-106">The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</span></span>  
  
 <span data-ttu-id="bf724-107">此特性可应用于具有启用环境属性查找行为的预期容器的特定属性，或可应用于类，以在属性的所有情况下启用环境属性行为。</span><span class="sxs-lookup"><span data-stu-id="bf724-107">This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</span></span>  
  
 <span data-ttu-id="bf724-108"><xref:System.Windows.Markup.AmbientAttribute> 还可以应用于 CLR 方法，以支持将 XAML 可附加属性特性化为环境。</span><span class="sxs-lookup"><span data-stu-id="bf724-108"><xref:System.Windows.Markup.AmbientAttribute> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</span></span> <span data-ttu-id="bf724-109">这可能是必需的，因为在 CLR 实现中，XAML 附加属性是使用和方法作为访问器模式实现/表示为反射的 `get` `set` 。</span><span class="sxs-lookup"><span data-stu-id="bf724-109">This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with `get` and `set` methods.</span></span> <span data-ttu-id="bf724-110">不存在到属性的实际 CLR 属性，因此将的使用限制为 <xref:System.AttributeTargets> `Property` 不会启用将可附加成员指定为环境。</span><span class="sxs-lookup"><span data-stu-id="bf724-110">No actual CLR property to attribute exists, so restricting usage for <xref:System.AttributeTargets> to `Property` would not have enabled specifying an attachable member as ambient.</span></span> <span data-ttu-id="bf724-111">对于想要报告为环境的可附加成员，请为 `get` 访问器提供属性。</span><span class="sxs-lookup"><span data-stu-id="bf724-111">For an attachable member that you want to report as ambient, attribute the `get` accessor.</span></span> <span data-ttu-id="bf724-112">不应尝试将不是专门支持可附加成员的方法的属性方法。</span><span class="sxs-lookup"><span data-stu-id="bf724-112">You should not attempt to attribute methods that are not specifically support methods of attachable members.</span></span>  
  
 <span data-ttu-id="bf724-113">在 .NET Framework 的以前版本中，此类存在于 WPF 特定的程序集 WindowsBase 中。</span><span class="sxs-lookup"><span data-stu-id="bf724-113">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="bf724-114">在中 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ， <xref:System.Windows.Markup.AmbientAttribute> 为 system.exception 程序集。</span><span class="sxs-lookup"><span data-stu-id="bf724-114">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="bf724-115">有关详细信息，请参阅 [Types Migrated from WPF to System.Xaml](/dotnet/framework/xaml-services/types-migrated-from-wpf-to-system-xaml)。</span><span class="sxs-lookup"><span data-stu-id="bf724-115">For more information, see [Types Migrated from WPF to System.Xaml](/dotnet/framework/xaml-services/types-migrated-from-wpf-to-system-xaml).</span></span>  
  
 <span data-ttu-id="bf724-116">在类型级别应用的环境类型 (类型 <xref:System.Windows.Markup.AmbientAttribute>) 可用于某些 XAML 处理情况，其中属性的类型需要按顺序解析。</span><span class="sxs-lookup"><span data-stu-id="bf724-116">Ambient types (types where <xref:System.Windows.Markup.AmbientAttribute> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</span></span>  
  
## <a name="object-writer-scenarios"></a><span data-ttu-id="bf724-117">对象编写器方案</span><span class="sxs-lookup"><span data-stu-id="bf724-117">Object Writer Scenarios</span></span>  
 <span data-ttu-id="bf724-118">如果要定义 XAML 对象编写器，并且遇到应用的属性、方法或类型 <xref:System.Windows.Markup.AmbientAttribute> ，通常必须访问服务以确定写出对象所需的环境属性查找行为。</span><span class="sxs-lookup"><span data-stu-id="bf724-118">If you are defining a XAML object writer, and you encounter a property, method or type where <xref:System.Windows.Markup.AmbientAttribute> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</span></span> <span data-ttu-id="bf724-119">有关详细信息，请参阅 <xref:System.Xaml.IAmbientProvider>。</span><span class="sxs-lookup"><span data-stu-id="bf724-119">For more information, see <xref:System.Xaml.IAmbientProvider>.</span></span>  
  
## <a name="value-converters"></a><span data-ttu-id="bf724-120">值转换器</span><span class="sxs-lookup"><span data-stu-id="bf724-120">Value Converters</span></span>  
 <span data-ttu-id="bf724-121">类型转换器或标记扩展可能需要了解环境信息才能处理表示间接类型映射的属性，例如通过或不限定的字符串名称指定成员或类型的属性。</span><span class="sxs-lookup"><span data-stu-id="bf724-121">Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</span></span> <span data-ttu-id="bf724-122">在这种情况下， <xref:System.Windows.Markup.AmbientAttribute> 不应直接用于值转换器代码逻辑。</span><span class="sxs-lookup"><span data-stu-id="bf724-122">In this scenario, <xref:System.Windows.Markup.AmbientAttribute> is not intended to be used directly for value converter code logic.</span></span> <span data-ttu-id="bf724-123">相反，值转换器应依赖于 XAML 编写器处理行为，当调用时，它会将 <xref:System.Xaml.IAmbientProvider> 其服务上下文传入到值转换器方法。</span><span class="sxs-lookup"><span data-stu-id="bf724-123">Rather, the value converter should rely on the XAML writer processing behavior, which will pass <xref:System.Xaml.IAmbientProvider> in its service contexts to your value converter methods when called.</span></span>  
  
## <a name="wpf-scenarios-for-ambientattribute"></a><span data-ttu-id="bf724-124">AmbientAttribute 的 WPF 方案</span><span class="sxs-lookup"><span data-stu-id="bf724-124">WPF Scenarios for AmbientAttribute</span></span>  
  
-   <span data-ttu-id="bf724-125"> () 的属性 <xref:System.Windows.Style> <xref:System.Windows.Style.TargetType%2A> 可以限定查找值中属性名称的支持引用所需的必要属性名称查找 <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="bf724-125">A property of a <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values.</span></span>  
  
-   <span data-ttu-id="bf724-126">属性中的所有内容 `Resources` () 的项 <xref:System.Windows.ResourceDictionary> 以及模板内容，应能够访问其他对等方作为值。</span><span class="sxs-lookup"><span data-stu-id="bf724-126">All content within a `Resources` property (items of a <xref:System.Windows.ResourceDictionary>) as well as template content, should be able to access other peers as values.</span></span> <span data-ttu-id="bf724-127">将整个 `Resources` 属性声明为环境将调用在 WPF XAML 分析器中启用此功能的逻辑。</span><span class="sxs-lookup"><span data-stu-id="bf724-127">Declaring the entire `Resources` property as ambient invokes logic that enables this in the WPF XAML parser.</span></span>  
  
 <span data-ttu-id="bf724-128"><xref:System.Windows.ResourceDictionary>有关在类型级别设置的方案的示例，请参阅 <xref:System.Windows.Markup.AmbientAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="bf724-128">See <xref:System.Windows.ResourceDictionary> for an example of a scenario for setting <xref:System.Windows.Markup.AmbientAttribute> at type level.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/clr-attributes-with-custom-types-and-libraries"><span data-ttu-id="bf724-129">自定义类型和库的 XAML 相关 CLR 特性</span><span class="sxs-lookup"><span data-stu-id="bf724-129">XAML-related CLR attributes for custom types and libraries</span></span></related>
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/define-custom-types"><span data-ttu-id="bf724-130">定义与 .NET XAML 服务一起使用的自定义类型</span><span class="sxs-lookup"><span data-stu-id="bf724-130">Define custom types for use with .NET XAML Services</span></span></related>
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/"><span data-ttu-id="bf724-131">XAML 服务</span><span class="sxs-lookup"><span data-stu-id="bf724-131">XAML Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf724-132">初始化 <see cref="T:System.Windows.Markup.AmbientAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bf724-132">Initializes a new instance of the <see cref="T:System.Windows.Markup.AmbientAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>