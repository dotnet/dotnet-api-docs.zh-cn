<Type Name="IReceiveMarkupExtension" FullName="System.Windows.Markup.IReceiveMarkupExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da0e708ab6301c20849924051eed36713f473df0" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89672267" /></Metadata><TypeSignature Language="C#" Value="public interface IReceiveMarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReceiveMarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IReceiveMarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReceiveMarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReceiveMarkupExtension" />
  <TypeSignature Language="F#" Value="type IReceiveMarkupExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("IReceiveMarkupExtension has been deprecated. This interface is no longer in use.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("IReceiveMarkupExtension has been deprecated. This interface is no longer in use.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供一种机制，通过该机制，类型可以声明它们可从标记扩展接收表达式（或另一个类），其中的输出是一个与目标属性不同的属性类型。 请不要用于 .NET Framework 4 实现。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在中 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] ， <xref:System.Windows.Markup.IReceiveMarkupExtension> 是一种特定于 WPF 的技术，用于允许类型在 xaml 分析期间设置为标记扩展的任何 XAML 可访问成员时输入不同的 codepath 添加等。 在中 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] ，此接口已过时，并将替换为 .NET FRAMEWORK XAML 服务实现，以便标记扩展可以接收服务或类型可以调用特定于标记扩展的资源库逻辑。  
  
 对于 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 实现，如果类型在通过标记扩展而不是通过其他方式设置属性时要执行特殊处理，则应使用应用的特性定义类型 <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> 。 特性指定一个回调，该回调通常定义为类型的私有成员。  
  
 在 WPF 类的基础结构实现中，应用的大多数情况 <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> 都引用 `ReceiveMarkupExtension` 先前实现此接口的方法，但现在改为通过回调使用上下文。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
    <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">XAML 的类型转换器或标记扩展</related>
  </Docs>
  <Members>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public void ReceiveMarkupExtension (string property, System.Windows.Markup.MarkupExtension markupExtension, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveMarkupExtension(string property, class System.Windows.Markup.MarkupExtension markupExtension, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReceiveMarkupExtension (property As String, markupExtension As MarkupExtension, serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveMarkupExtension(System::String ^ property, System::Windows::Markup::MarkupExtension ^ markupExtension, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMarkupExtension : string * System.Windows.Markup.MarkupExtension * IServiceProvider -&gt; unit" Usage="iReceiveMarkupExtension.ReceiveMarkupExtension (property, markupExtension, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="markupExtension" Type="System.Windows.Markup.MarkupExtension" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="property">目标属性的名称。</param>
        <param name="markupExtension">传入数据的标记扩展实例。</param>
        <param name="serviceProvider">可以提供附加服务，在为属性值处理标记扩展数据时，应执行这些服务。</param>
        <summary>对提供属性值的标记扩展提供处理。 请不要用于 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 实现；请参阅 <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
