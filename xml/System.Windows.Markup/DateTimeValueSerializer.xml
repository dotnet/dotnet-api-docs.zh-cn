<Type Name="DateTimeValueSerializer" FullName="System.Windows.Markup.DateTimeValueSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69b12636fe85a0c850e03afca185a2f3094f1425" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83968855" /></Metadata><TypeSignature Language="C#" Value="public class DateTimeValueSerializer : System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DateTimeValueSerializer extends System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.DateTimeValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class DateTimeValueSerializer&#xA;Inherits ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeValueSerializer : System::Windows::Markup::ValueSerializer" />
  <TypeSignature Language="F#" Value="type DateTimeValueSerializer = class&#xA;    inherit ValueSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.Xaml" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.Xaml" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Windows.Markup.ValueSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1d3f8-101">将 <see cref="T:System.String" /> 的实例与 <see cref="T:System.DateTime" /> 的实例进行来回转换。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-101">Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.DateTime" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d3f8-102">在类型转换需要附加状态的情况下，将使用 <xref:System.Windows.Markup.ValueSerializer> 而不是 <xref:System.ComponentModel.TypeConverter>。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-102"><xref:System.Windows.Markup.ValueSerializer> is used rather than <xref:System.ComponentModel.TypeConverter> for cases where type conversion requires additional state.</span></span> <span data-ttu-id="1d3f8-103"><xref:System.Windows.Markup.DateTimeValueSerializer> 未使用 <xref:System.Windows.Markup.ValueSerializerAttribute>的类型。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-103"><xref:System.Windows.Markup.DateTimeValueSerializer> is not attributed to a type with <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="1d3f8-104">这是因为 <xref:System.DateTime> 在 mscorlib.dll 中，而 mscorlib 不能依赖于它不会自行定义的属性类。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-104">This is because <xref:System.DateTime> is in mscorlib, and mscorlib cannot take dependencies on attribute classes that it does not define itself.</span></span> <span data-ttu-id="1d3f8-105">相反，<xref:System.Windows.Markup.DateTimeValueSerializer> 的用法在 xaml 处理 .NET Framework XAML 服务行为中采用特殊大小写方式。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-105">Instead, usage of <xref:System.Windows.Markup.DateTimeValueSerializer> is special-cased into XAML processor behavior in .NET Framework XAML Services behavior.</span></span>  
  
 <span data-ttu-id="1d3f8-106">在 .NET Framework 的以前版本中，此类存在于 WPF 特定的程序集 WindowsBase 中。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-106">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="1d3f8-107">在 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]中，<xref:System.Windows.Markup.DateTimeValueSerializer> 在 system.exception 程序集中。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-107">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="1d3f8-108">请参阅[从 WPF 迁移到](/dotnet/framework/xaml-services/types-migrated-from-wpf-to-system-xaml)System.exception 的类型。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-108">See [Types Migrated from WPF to System.Xaml](/dotnet/framework/xaml-services/types-migrated-from-wpf-to-system-xaml).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.Primitives.MarkupWriter" />
    <altmember cref="T:System.DateTime" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d3f8-109">初始化 <see cref="T:System.Windows.Markup.DateTimeValueSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-109">Initializes a new instance of the <see cref="T:System.Windows.Markup.DateTimeValueSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public override bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="dateTimeValueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1d3f8-110">要计算以进行转换的字符串。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-110">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="1d3f8-111">用于转换的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-111">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="1d3f8-112">确定指定的 <see cref="T:System.String" /> 是否可以转换为 <see cref="T:System.DateTime" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-112">Determines if the specified <see cref="T:System.String" /> can be convert to an instance of <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="1d3f8-113">如果该值可以转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-113"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d3f8-114">此实现始终返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-114">This implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public override bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="dateTimeValueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1d3f8-115">要进行计算以供转换的对象。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-115">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="1d3f8-116">用于转换的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-116">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="1d3f8-117">确定能否将指定的对象转换为 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-117">Determines if the specified object can be converted to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="1d3f8-118">如果可将 <paramref name="value" /> 转换为 <see cref="T:System.String" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-118"><see langword="true" /> if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d3f8-119">仅当传递的 `value` 为类型 <xref:System.DateTime>时，此实现才返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-119">This implementation returns `true` only if the passed `value` is of type <xref:System.DateTime>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public override object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="dateTimeValueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1d3f8-120">要转换为 <see cref="T:System.DateTime" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-120">The string to convert into a <see cref="T:System.DateTime" />.</span></span></param>
        <param name="context"><span data-ttu-id="1d3f8-121">用于转换的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-121">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="1d3f8-122">将 <see cref="T:System.String" /> 转换为 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-122">Converts a <see cref="T:System.String" /> into a <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="1d3f8-123">基于所提供的 <paramref name="value" /> 的 <see cref="T:System.DateTime" /> 新实例。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-123">A new instance of <see cref="T:System.DateTime" /> based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d3f8-124">空字符串返回 <xref:System.DateTime.MinValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-124">An empty string returns <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1d3f8-125">当前实现在内部使用 <xref:System.DateTime.Parse%2A>，并使用以下 <xref:System.Globalization.DateTimeStyles>： `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-125">The current implementation uses <xref:System.DateTime.Parse%2A> internally, and also uses the following <xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1d3f8-126"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-126"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public override string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="dateTimeValueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1d3f8-127">要转换为字符串的对象。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-127">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="1d3f8-128">用于转换的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-128">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="1d3f8-129">将 <see cref="T:System.DateTime" /> 的实例转换为 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-129">Converts an instance of <see cref="T:System.DateTime" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="1d3f8-130">指定的 <see cref="T:System.DateTime" /> 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-130">A string representation of the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d3f8-131">此实现不使用 `context`。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-131">`context` is not used by this implementation.</span></span>  
  
 <span data-ttu-id="1d3f8-132">XAML 值处理中找到的日期的字符串表示形式基于 `en-US` 区域性。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-132">String representations for dates as found in XAML value processing are based on the `en-US` culture.</span></span> <span data-ttu-id="1d3f8-133">这是因为在概念上，用于区分区域性的信息在编译时和运行时阶段之间是拆分的，必须在整个过程中使用已知的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-133">This is because XAML processing for culture-sensitive information is split conceptually between compile-time and run-time phases and must use a known string representation throughout.</span></span> <span data-ttu-id="1d3f8-134">有关详细信息，请参阅[WPF 全球化和本地化概述](/dotnet/framework/wpf/advanced/wpf-globalization-and-localization-overview)。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-134">For more information, see [WPF Globalization and Localization Overview](/dotnet/framework/wpf/advanced/wpf-globalization-and-localization-overview).</span></span>  
  
 <span data-ttu-id="1d3f8-135">当前实现使用根据所提供 <xref:System.DateTime> 的方面是否具有值而调整的格式字符串。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-135">The current implementation uses a format string that is adjusted depending on whether aspects of the supplied <xref:System.DateTime> have values.</span></span> <span data-ttu-id="1d3f8-136">例如，如果 <xref:System.TimeSpan.TotalSeconds%2A>中没有任何值，格式字符串将采用 `yyyy-MM-dd` 形式，而不是写出时间部分的完整详细级别零值。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-136">For example, if there is no value in <xref:System.TimeSpan.TotalSeconds%2A>, the format string is in the form `yyyy-MM-dd` rather than writing out full-verbosity zero values for the time component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1d3f8-137"><paramref name="value" /> 不是 <see cref="T:System.DateTime" /> 或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1d3f8-137"><paramref name="value" /> is not a <see cref="T:System.DateTime" /> or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
