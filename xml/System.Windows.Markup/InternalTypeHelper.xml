<Type Name="InternalTypeHelper" FullName="System.Windows.Markup.InternalTypeHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9a5b6708c613bc3b65cc339645d0b126f787a63f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89671983" /></Metadata><TypeSignature Language="C#" Value="public abstract class InternalTypeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InternalTypeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.InternalTypeHelper" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InternalTypeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalTypeHelper abstract" />
  <TypeSignature Language="F#" Value="type InternalTypeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="99420-101">由 WPF XAML 编译器在内部使用的抽象类，用于支持使用内部类型。</span><span class="sxs-lookup"><span data-stu-id="99420-101">Abstract class used internally by the WPF XAML compiler to support the use of internal types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99420-102"><xref:System.Windows.Markup.InternalTypeHelper>类不应由 WPF XAML 标记编译器之外的任何对象使用。</span><span class="sxs-lookup"><span data-stu-id="99420-102">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 <span data-ttu-id="99420-103">编译 XAML 文件时，可以使用公共类型，但也可以使用受限于对内部类型进行代码访问时存在的相同限制的内部类型。</span><span class="sxs-lookup"><span data-stu-id="99420-103">When compiling a XAML file, you can use public types, but you can also use internal types subject to the same limitations that exist on code access to internal types.</span></span> <span data-ttu-id="99420-104"><xref:System.Windows.Markup.InternalTypeHelper> 支持对标记的内部访问级别类型的支持。</span><span class="sxs-lookup"><span data-stu-id="99420-104"><xref:System.Windows.Markup.InternalTypeHelper> enables support of internal access level types for markup.</span></span> <span data-ttu-id="99420-105">这涉及到编译器创建派生自的生成类 <xref:System.Windows.Markup.InternalTypeHelper> 并实现其成员。</span><span class="sxs-lookup"><span data-stu-id="99420-105">This involves the compiler creating a generated class that derives from <xref:System.Windows.Markup.InternalTypeHelper> and implements its members.</span></span> <span data-ttu-id="99420-106">生成的类存在于安全和访问上下文中，这样，仅为共享内部访问专门特性化的同一个程序集或其他程序集可以引用生成的类，因此还可以引用内部类型。</span><span class="sxs-lookup"><span data-stu-id="99420-106">The generated class exists in a security and access context such that only the same assembly or other assemblies specifically attributed for shared internal access can reference the generated class and thus the internal types.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/544296d4-f38e-4498-af49-c9f4dad28964"><span data-ttu-id="99420-107">XAML 安全注意事项</span><span class="sxs-lookup"><span data-stu-id="99420-107">XAML Security Considerations</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InternalTypeHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InternalTypeHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99420-108">初始化 <see cref="T:System.Windows.Markup.InternalTypeHelper" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="99420-108">Initializes a new instance of the <see cref="T:System.Windows.Markup.InternalTypeHelper" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="protected internal abstract void AddEventHandler (System.Reflection.EventInfo eventInfo, object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddEventHandler(class System.Reflection.EventInfo eventInfo, object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub AddEventHandler (eventInfo As EventInfo, target As Object, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void AddEventHandler(System::Reflection::EventInfo ^ eventInfo, System::Object ^ target, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddEventHandler : System.Reflection.EventInfo * obj * Delegate -&gt; unit" Usage="internalTypeHelper.AddEventHandler (eventInfo, target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="99420-109">事件的事件信息（CLR 反射信息）。</span><span class="sxs-lookup"><span data-stu-id="99420-109">The event information for the event (CLR reflection information).</span></span></param>
        <param name="target"><span data-ttu-id="99420-110">附加处理程序的目标。</span><span class="sxs-lookup"><span data-stu-id="99420-110">The target where the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="99420-111">事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="99420-111">The event handler.</span></span></param>
        <summary><span data-ttu-id="99420-112">在派生（生成）类中重写时，会将事件处理程序委托附加到内部事件。</span><span class="sxs-lookup"><span data-stu-id="99420-112">When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99420-113"><xref:System.Windows.Markup.InternalTypeHelper>类不应由 WPF XAML 标记编译器之外的任何对象使用。</span><span class="sxs-lookup"><span data-stu-id="99420-113">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="protected internal abstract Delegate CreateDelegate (Type delegateType, object target, string handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Delegate CreateDelegate(class System.Type delegateType, object target, string handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function CreateDelegate (delegateType As Type, target As Object, handler As String) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract Delegate ^ CreateDelegate(Type ^ delegateType, System::Object ^ target, System::String ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member CreateDelegate : Type * obj * string -&gt; Delegate" Usage="internalTypeHelper.CreateDelegate (delegateType, target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="99420-114">委托的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="99420-114">The <see cref="T:System.Type" /> of the delegate.</span></span></param>
        <param name="target"><span data-ttu-id="99420-115">附加处理程序的目标。</span><span class="sxs-lookup"><span data-stu-id="99420-115">The target where the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="99420-116">处理程序实现的名称。</span><span class="sxs-lookup"><span data-stu-id="99420-116">The name of the handler implementation.</span></span></param>
        <summary><span data-ttu-id="99420-117">在派生（生成）类中重写时，会创建一个引用非公共处理程序方法的事件委托。</span><span class="sxs-lookup"><span data-stu-id="99420-117">When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.</span></span></summary>
        <returns><span data-ttu-id="99420-118">委托引用。</span><span class="sxs-lookup"><span data-stu-id="99420-118">The delegate reference.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99420-119"><xref:System.Windows.Markup.InternalTypeHelper>类不应由 WPF XAML 标记编译器之外的任何对象使用。</span><span class="sxs-lookup"><span data-stu-id="99420-119">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal abstract object CreateInstance (Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function CreateInstance (type As Type, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ CreateInstance(Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Globalization.CultureInfo -&gt; obj" Usage="internalTypeHelper.CreateInstance (type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="99420-120">要创建的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="99420-120">The <see cref="T:System.Type" /> to create.</span></span></param>
        <param name="culture"><span data-ttu-id="99420-121">特定于区域性的信息。</span><span class="sxs-lookup"><span data-stu-id="99420-121">Culture specific information.</span></span></param>
        <summary><span data-ttu-id="99420-122">在派生（生成）类中重写时，创建内部类型的实例。</span><span class="sxs-lookup"><span data-stu-id="99420-122">When overridden in a derived (generated) class, creates an instance of an internal type.</span></span></summary>
        <returns><span data-ttu-id="99420-123">已创建的实例。</span><span class="sxs-lookup"><span data-stu-id="99420-123">The created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99420-124"><xref:System.Windows.Markup.InternalTypeHelper>类不应由 WPF XAML 标记编译器之外的任何对象使用。</span><span class="sxs-lookup"><span data-stu-id="99420-124">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract object GetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetPropertyValue (propertyInfo As PropertyInfo, target As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ GetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValue : System.Reflection.PropertyInfo * obj * System.Globalization.CultureInfo -&gt; obj" Usage="internalTypeHelper.GetPropertyValue (propertyInfo, target, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="99420-125">要获取的属性的属性信息。</span><span class="sxs-lookup"><span data-stu-id="99420-125">Property information for the property to get.</span></span></param>
        <param name="target"><span data-ttu-id="99420-126">容纳所需属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="99420-126">The object that holds the desired property value.</span></span></param>
        <param name="culture"><span data-ttu-id="99420-127">特定于区域性的信息。</span><span class="sxs-lookup"><span data-stu-id="99420-127">Culture specific information.</span></span></param>
        <summary><span data-ttu-id="99420-128">在派生（生成）类中重写时，获取目标对象的内部属性值。</span><span class="sxs-lookup"><span data-stu-id="99420-128">When overridden in a derived (generated) class, gets the value of an internal property on the target object.</span></span></summary>
        <returns><span data-ttu-id="99420-129">该属性的值。</span><span class="sxs-lookup"><span data-stu-id="99420-129">The value of the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99420-130"><xref:System.Windows.Markup.InternalTypeHelper>类不应由 WPF XAML 标记编译器之外的任何对象使用。</span><span class="sxs-lookup"><span data-stu-id="99420-130">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract void SetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub SetPropertyValue (propertyInfo As PropertyInfo, target As Object, value As Object, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValue : System.Reflection.PropertyInfo * obj * obj * System.Globalization.CultureInfo -&gt; unit" Usage="internalTypeHelper.SetPropertyValue (propertyInfo, target, value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="99420-131">要设置的属性的属性信息。</span><span class="sxs-lookup"><span data-stu-id="99420-131">Property information for the property to set.</span></span></param>
        <param name="target"><span data-ttu-id="99420-132">容纳所需属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="99420-132">The object that holds the desired property value.</span></span></param>
        <param name="value"><span data-ttu-id="99420-133">要设置的值。</span><span class="sxs-lookup"><span data-stu-id="99420-133">The value to set.</span></span></param>
        <param name="culture"><span data-ttu-id="99420-134">特定于区域性的信息。</span><span class="sxs-lookup"><span data-stu-id="99420-134">Culture specific information.</span></span></param>
        <summary><span data-ttu-id="99420-135">在派生（生成）类中重写时，设置目标对象的内部属性的值。</span><span class="sxs-lookup"><span data-stu-id="99420-135">When overridden in a derived (generated) class, sets the value on an internal property on the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99420-136"><xref:System.Windows.Markup.InternalTypeHelper>类不应由 WPF XAML 标记编译器之外的任何对象使用。</span><span class="sxs-lookup"><span data-stu-id="99420-136">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
