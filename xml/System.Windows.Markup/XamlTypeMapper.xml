<Type Name="XamlTypeMapper" FullName="System.Windows.Markup.XamlTypeMapper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9246fd893155fec68701b3802bcb73e15f586dee" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83921863" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeMapper" />
  <TypeSignature Language="F#" Value="type XamlTypeMapper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7de59-101">将 XAML 元素名称映射到程序集中适当的 CLR <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="7de59-101">Maps a XAML element name to the appropriate CLR <see cref="T:System.Type" /> in assemblies.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7de59-102"><xref:System.Windows.Markup.XamlTypeMapper>是为和提供备用上下文的高级 WPF 方案的一部分 <xref:System.Windows.Markup.XamlReader> <xref:System.Windows.Markup.XamlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="7de59-102"><xref:System.Windows.Markup.XamlTypeMapper> is part of an advanced WPF scenario that supplies alternate context for <xref:System.Windows.Markup.XamlReader> and <xref:System.Windows.Markup.XamlWriter>.</span></span> <span data-ttu-id="7de59-103">对于 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF 应用程序，应考虑 <xref:System.Xaml.XamlSchemaContext> 对此方案进行重写，而不是尝试使用 <xref:System.Windows.Markup.XamlTypeMapper> 。</span><span class="sxs-lookup"><span data-stu-id="7de59-103">For [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF applications, you should consider overriding <xref:System.Xaml.XamlSchemaContext> for this scenario, rather than attempting to use <xref:System.Windows.Markup.XamlTypeMapper>.</span></span>  
  
 <span data-ttu-id="7de59-104"><xref:System.Windows.Markup.XamlTypeMapper>可用于向 XAML 分析器提供自定义映射信息，而不是应用程序 <xref:System.Windows.Markup.XmlnsDefinitionAttribute> 集代码中值的应用程序。</span><span class="sxs-lookup"><span data-stu-id="7de59-104"><xref:System.Windows.Markup.XamlTypeMapper> can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of <xref:System.Windows.Markup.XmlnsDefinitionAttribute> values on the assembly code.</span></span> <span data-ttu-id="7de59-105">这对于合并程序集中的所有 CLR 命名空间或引用现有程序集中已准备好 XAML 的类型很有用，无需重新编译它即可添加 <xref:System.Windows.Markup.XmlnsDefinitionAttribute> 特性化。</span><span class="sxs-lookup"><span data-stu-id="7de59-105">This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add <xref:System.Windows.Markup.XmlnsDefinitionAttribute> attributing.</span></span>  
  
 <span data-ttu-id="7de59-106">通常会创建一个 <xref:System.Windows.Markup.XamlTypeMapper> 实例，以便为指定 <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> 属性值 <xref:System.Windows.Markup.ParserContext> 。</span><span class="sxs-lookup"><span data-stu-id="7de59-106">You typically create a <xref:System.Windows.Markup.XamlTypeMapper> instance in order to specify the <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> property value for a <xref:System.Windows.Markup.ParserContext>.</span></span> <span data-ttu-id="7de59-107"><xref:System.Windows.Markup.ParserContext>反过来可用作调用的上下文 <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="7de59-107">The <xref:System.Windows.Markup.ParserContext> in turn can be used as the context for a <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> call.</span></span>  
  
## <a name="default-mapper"></a><span data-ttu-id="7de59-108">默认映射器</span><span class="sxs-lookup"><span data-stu-id="7de59-108">Default Mapper</span></span>  
 <span data-ttu-id="7de59-109">可以使用静态属性获取默认映射器 <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7de59-109">You can obtain a default mapper using the <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> static property.</span></span> <span data-ttu-id="7de59-110">默认映射器仅适用于默认程序集列表。</span><span class="sxs-lookup"><span data-stu-id="7de59-110">The default mapper only works on a default assembly list.</span></span> <span data-ttu-id="7de59-111">不使用有关程序集的特定信息（在 <xref:System.Windows.Markup.XamlTypeMapper> 构造函数中指定）。</span><span class="sxs-lookup"><span data-stu-id="7de59-111">No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.NamespaceMapEntry" />
    <altmember cref="T:System.Windows.Markup.ParserContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7de59-112">初始化 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7de59-112">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper assemblyNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames"><span data-ttu-id="7de59-113"><see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应该使用的程序集名称的数组。</span><span class="sxs-lookup"><span data-stu-id="7de59-113">The array of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span></span></param>
        <summary><span data-ttu-id="7de59-114">通过指定 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应该使用的程序集名称的数组，初始化 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7de59-114">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class by specifying an array of assembly names that the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7de59-115"><paramref name="assemblyNames" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7de59-115"><paramref name="assemblyNames" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, class System.Windows.Markup.NamespaceMapEntry[] namespaceMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), namespaceMaps As NamespaceMapEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames, cli::array &lt;System::Windows::Markup::NamespaceMapEntry ^&gt; ^ namespaceMaps);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] * System.Windows.Markup.NamespaceMapEntry[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper (assemblyNames, namespaceMaps)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="namespaceMaps" Type="System.Windows.Markup.NamespaceMapEntry[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames"><span data-ttu-id="7de59-116"><see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应该使用的程序集名称的数组。</span><span class="sxs-lookup"><span data-stu-id="7de59-116">The array of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span></span></param>
        <param name="namespaceMaps"><span data-ttu-id="7de59-117"><see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应该使用的命名空间映射的数组。</span><span class="sxs-lookup"><span data-stu-id="7de59-117">The array of namespace maps the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span></span></param>
        <summary><span data-ttu-id="7de59-118">使用指定的程序集名称数组和指定的命名空间映射，初始化 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7de59-118">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class, using the specified array of assembly names and the specified namespace maps.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7de59-119"><paramref name="assemblyNames" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7de59-119"><paramref name="assemblyNames" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMappingProcessingInstruction">
      <MemberSignature Language="C#" Value="public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingProcessingInstruction(string xmlNamespace, string clrNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingProcessingInstruction (xmlNamespace As String, clrNamespace As String, assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingProcessingInstruction(System::String ^ xmlNamespace, System::String ^ clrNamespace, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingProcessingInstruction : string * string * string -&gt; unit" Usage="xamlTypeMapper.AddMappingProcessingInstruction (xmlNamespace, clrNamespace, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="clrNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace"><span data-ttu-id="7de59-120">XML 命名空间的前缀。</span><span class="sxs-lookup"><span data-stu-id="7de59-120">The prefix for the XML namespace.</span></span></param>
        <param name="clrNamespace"><span data-ttu-id="7de59-121">包含要映射的类型的 CLR 命名空间。</span><span class="sxs-lookup"><span data-stu-id="7de59-121">The CLR  namespace that contains the types to map.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="7de59-122">包含 CLR 命名空间的程序集。</span><span class="sxs-lookup"><span data-stu-id="7de59-122">The assembly that contains the CLR  namespace.</span></span></param>
        <summary><span data-ttu-id="7de59-123">定义 XML 命名空间与程序集中 CLR 命名空间之间的映射，并将这些映射添加到 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 信息中。</span><span class="sxs-lookup"><span data-stu-id="7de59-123">Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7de59-124"><xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>是添加映射的编程方法。</span><span class="sxs-lookup"><span data-stu-id="7de59-124"><xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> is a programmatic way to add a mapping.</span></span>  <span data-ttu-id="7de59-125">例如，以下 XAML 映射指令的不同部分与的参数相对应 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> ：</span><span class="sxs-lookup"><span data-stu-id="7de59-125">For example, the different parts of the following XAML mapping instruction correspond to the parameters of the <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:</span></span>  
  
```  
<Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples">  
...  
```  
  
 <span data-ttu-id="7de59-126">`xmlNamespace`为 `SDK` ，为 `clrNamespace` `Samples` ，而 `assemblyName` 为 `SDKSamples` 。</span><span class="sxs-lookup"><span data-stu-id="7de59-126">The `xmlNamespace` is `SDK`, the `clrNamespace` is `Samples`, and the `assemblyName` is `SDKSamples`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7de59-127"><paramref name="xmlNamespace" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="7de59-127"><paramref name="xmlNamespace" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="7de59-128">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7de59-128">-or-</span></span> 
 <span data-ttu-id="7de59-129"><paramref name="clrNamespace" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="7de59-129"><paramref name="clrNamespace" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="7de59-130">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7de59-130">-or-</span></span> 
 <span data-ttu-id="7de59-131"><paramref name="assemblyName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7de59-131"><paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowInternalType">
      <MemberSignature Language="C#" Value="protected virtual bool AllowInternalType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowInternalType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AllowInternalType (type As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowInternalType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AllowInternalType : Type -&gt; bool&#xA;override this.AllowInternalType : Type -&gt; bool" Usage="xamlTypeMapper.AllowInternalType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="7de59-132">要访问的类型。</span><span class="sxs-lookup"><span data-stu-id="7de59-132">The type to access.</span></span></param>
        <summary><span data-ttu-id="7de59-133">请求允许在完全信任的情况下调用的 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 派生类型访问特定的内部类型。</span><span class="sxs-lookup"><span data-stu-id="7de59-133">Requests permission for a <see cref="T:System.Windows.Markup.XamlTypeMapper" /> derived type that is called under full trust to access a specific internal type.</span></span></summary>
        <returns><span data-ttu-id="7de59-134">如果可以访问内部类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7de59-134"><see langword="true" /> if the internal type can be accessed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7de59-135">如果未被子类重写，则 <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> 总是返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="7de59-135">If not overridden by a subclass, <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> always returns `false`.</span></span>  
  
 <span data-ttu-id="7de59-136">当由子类重写时， <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> `true` 如果可以访问内部类型，则行为应返回，否则应返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="7de59-136">When overridden by a subclass, the behavior should be that <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> should return `true` if the internal type can be accessed; otherwise, `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMapper">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XamlTypeMapper DefaultMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XamlTypeMapper ^ DefaultMapper { System::Windows::Markup::XamlTypeMapper ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMapper : System.Windows.Markup.XamlTypeMapper" Usage="System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7de59-137">获取要使用的 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 的实例（如果尚未指定）。</span><span class="sxs-lookup"><span data-stu-id="7de59-137">Gets an instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> to use if one has not been specified.</span></span></summary>
        <value><span data-ttu-id="7de59-138">默认类型映射器。</span><span class="sxs-lookup"><span data-stu-id="7de59-138">The default type mapper.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7de59-139">默认映射器仅适用于默认程序集列表。</span><span class="sxs-lookup"><span data-stu-id="7de59-139">The default mapper only works on a default assembly list.</span></span> <span data-ttu-id="7de59-140">不使用有关程序集的特定信息（在 <xref:System.Windows.Markup.XamlTypeMapper> 构造函数中指定）。</span><span class="sxs-lookup"><span data-stu-id="7de59-140">No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used.</span></span> <span data-ttu-id="7de59-141">在当前实现中，默认程序集列表为： `WindowsBase` 、 `PresentationCore` 、 `PresentationFramework` 。</span><span class="sxs-lookup"><span data-stu-id="7de59-141">In the current implementation the default assembly list is: `WindowsBase`, `PresentationCore`, `PresentationFramework`.</span></span>  
  
 <span data-ttu-id="7de59-142">使用默认映射器并不意味着不能在 XAML 中使用自定义程序集/类型。</span><span class="sxs-lookup"><span data-stu-id="7de59-142">Using the default mapper does not mean that you cannot use custom assemblies/types in XAML at all.</span></span> <span data-ttu-id="7de59-143">这只意味着，如果您使用自定义类型/程序集，则必须在 `xmlns` 引用类型/程序集的每个 XAML 页中使用传统 xaml 方法创建映射，而不是类型映射器 API。</span><span class="sxs-lookup"><span data-stu-id="7de59-143">It only means that if you do use custom types/assemblies, you must then use the conventional XAML technique of creating the mappings as `xmlns` attributes in each XAML page where the types/assemblies are referenced, as opposed to a type mapper API.</span></span> <span data-ttu-id="7de59-144">有关详细信息，请参阅[WPF xaml 的 XAML 命名空间和命名空间映射](/dotnet/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml)。</span><span class="sxs-lookup"><span data-stu-id="7de59-144">For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](/dotnet/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string xmlNamespace, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType(string xmlNamespace, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (xmlNamespace As String, localName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ xmlNamespace, System::String ^ localName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="xamlTypeMapper.GetType (xmlNamespace, localName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace"><span data-ttu-id="7de59-145">指定的 XML 命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="7de59-145">The specified XML namespace prefix.</span></span></param>
        <param name="localName"><span data-ttu-id="7de59-146">要获取其映射 <see cref="T:System.Type" /> 的 XAML 元素的“本地”名称。</span><span class="sxs-lookup"><span data-stu-id="7de59-146">The "local" name of the XAML element to obtain the mapped <see cref="T:System.Type" /> for.</span></span> <span data-ttu-id="7de59-147">这种情况下“本地”意味着映射而非提供的 <paramref name="xmlNamespace" />。</span><span class="sxs-lookup"><span data-stu-id="7de59-147">Local in this context means as mapped versus the provided <paramref name="xmlNamespace" />.</span></span></param>
        <summary><span data-ttu-id="7de59-148">使用指定的 XML 命名空间前缀和元素名称，获取给定 XAML 元素所映射到的 CLR <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="7de59-148">Gets the CLR <see cref="T:System.Type" /> that a given XAML element is mapped to, using the specified XML namespace prefix and element name.</span></span></summary>
        <returns><span data-ttu-id="7de59-149">对象的 <see cref="T:System.Type" />；如果无法解析任何映射，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7de59-149">The <see cref="T:System.Type" /> for the object, or <see langword="null" /> if no mapping could be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7de59-150">如果找不到映射到提供的信息的类型， `null` 则返回。</span><span class="sxs-lookup"><span data-stu-id="7de59-150">If a type cannot be found that maps to the provided information, `null` is returned.</span></span>  
  
 <span data-ttu-id="7de59-151">不要将前缀包括为的一部分 `localName` 。</span><span class="sxs-lookup"><span data-stu-id="7de59-151">Do not include the prefix as part of `localName`.</span></span> <span data-ttu-id="7de59-152">对于任何前缀的 XAML 元素信息，请将其 `xmlNamespace` 与 `localName` 此 API 调用的和组件分开。</span><span class="sxs-lookup"><span data-stu-id="7de59-152">For any prefixed XAML element information, separate it into `xmlNamespace` and `localName` components for this API call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7de59-153"><paramref name="xmlNamespace" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="7de59-153"><paramref name="xmlNamespace" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="7de59-154">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7de59-154">-or-</span></span> 
 <span data-ttu-id="7de59-155"><paramref name="localName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7de59-155"><paramref name="localName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="SetAssemblyPath">
      <MemberSignature Language="C#" Value="public void SetAssemblyPath (string assemblyName, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssemblyPath(string assemblyName, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAssemblyPath (assemblyName As String, assemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAssemblyPath(System::String ^ assemblyName, System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.SetAssemblyPath : string * string -&gt; unit" Usage="xamlTypeMapper.SetAssemblyPath (assemblyName, assemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="7de59-156">未指定扩展名或路径的程序集的简称（等效于 <see cref="P:System.Reflection.AssemblyName.Name" />）。</span><span class="sxs-lookup"><span data-stu-id="7de59-156">The short name of the assembly without an extension or path specified (equivalent to <see cref="P:System.Reflection.AssemblyName.Name" />).</span></span></param>
        <param name="assemblyPath"><span data-ttu-id="7de59-157">程序集的文件路径。</span><span class="sxs-lookup"><span data-stu-id="7de59-157">The file path of the assembly.</span></span> <span data-ttu-id="7de59-158">程序集路径必须是包含文件扩展名的完整文件路径。</span><span class="sxs-lookup"><span data-stu-id="7de59-158">The assembly path must be a full file path containing a file extension.</span></span></param>
        <summary><span data-ttu-id="7de59-159">指定要在加载程序集时使用的路径。</span><span class="sxs-lookup"><span data-stu-id="7de59-159">Specifies the path to use when loading an assembly.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7de59-160"><paramref name="assemblyName" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="7de59-160"><paramref name="assemblyName" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="7de59-161">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7de59-161">-or-</span></span> 
 <span data-ttu-id="7de59-162"><paramref name="assemblyPath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7de59-162"><paramref name="assemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Windows.Markup.XamlParseException"><span data-ttu-id="7de59-163"><paramref name="assemblyName" /> 为 <see cref="F:System.String.Empty" /></span><span class="sxs-lookup"><span data-stu-id="7de59-163"><paramref name="assemblyName" /> is <see cref="F:System.String.Empty" /></span></span>  
  
<span data-ttu-id="7de59-164">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7de59-164">-or-</span></span> 
 <span data-ttu-id="7de59-165"><paramref name="assemblyPath" /> 为 <see cref="F:System.String.Empty" /></span><span class="sxs-lookup"><span data-stu-id="7de59-165"><paramref name="assemblyPath" /> is <see cref="F:System.String.Empty" /></span></span>  
  
<span data-ttu-id="7de59-166">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7de59-166">-or-</span></span> 
 <span data-ttu-id="7de59-167"><paramref name="assemblyPath" /> 不是包含文件扩展名的完整文件路径。</span><span class="sxs-lookup"><span data-stu-id="7de59-167"><paramref name="assemblyPath" /> is not a full file path containing a file extension.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
