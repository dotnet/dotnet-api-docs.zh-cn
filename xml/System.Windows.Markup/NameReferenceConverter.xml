<Type Name="NameReferenceConverter" FullName="System.Windows.Markup.NameReferenceConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b282369baf6a860fba0e28b4bb17bc49f6c870a5" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90793469" /></Metadata><TypeSignature Language="C#" Value="public class NameReferenceConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameReferenceConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.NameReferenceConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class NameReferenceConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameReferenceConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type NameReferenceConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3684d-101">提供类型转换，以将字符串名称转换成对具有该名称的对象的对象引用，或返回对象图中对象的名称。</span><span class="sxs-lookup"><span data-stu-id="3684d-101">Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3684d-102">此类提供围绕两个服务的类型转换器包装。</span><span class="sxs-lookup"><span data-stu-id="3684d-102">This class provides a type converter wrapper around two services.</span></span>  
  
 <span data-ttu-id="3684d-103"><xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A>实现使用 <xref:System.Xaml.IXamlNameResolver> 上下文中的服务在 XAML 中按名称执行对象的解析。</span><span class="sxs-lookup"><span data-stu-id="3684d-103">The <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> implementation uses <xref:System.Xaml.IXamlNameResolver> service from context to perform the resolution of an object by name in XAML.</span></span> <span data-ttu-id="3684d-104">这是适用于 xaml 读取器和 XAML 编写器实现 .NET Framework XAML 服务的一部分。</span><span class="sxs-lookup"><span data-stu-id="3684d-104">This is part of the relevant XAML reader and XAML writer implementations in .NET Framework XAML Services.</span></span> <span data-ttu-id="3684d-105">此转换器的正确功能需要服务 <xref:System.Xaml.IXamlNameResolver> 上下文中提供该服务。</span><span class="sxs-lookup"><span data-stu-id="3684d-105">Proper function of this converter requires that the <xref:System.Xaml.IXamlNameResolver> service is available from service context.</span></span>  
  
 <span data-ttu-id="3684d-106"><xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A>实现使用上下文中的 <xref:System.Xaml.IXamlNameProvider> 服务在保存/序列化过程中对对象的引用名称进行解析。</span><span class="sxs-lookup"><span data-stu-id="3684d-106">The <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> implementation uses <xref:System.Xaml.IXamlNameProvider> service from context to perform the resolution of a reference name for an object during save/serialization.</span></span> <span data-ttu-id="3684d-107">这是相关读取器和编写器实现及其上下文的一部分。</span><span class="sxs-lookup"><span data-stu-id="3684d-107">This is part of the relevant reader and writer implementations and their context.</span></span> <span data-ttu-id="3684d-108">此转换器的正确功能需要 <xref:System.Xaml.IXamlNameProvider> 提供基础服务。</span><span class="sxs-lookup"><span data-stu-id="3684d-108">Proper function of this converter requires that there be an underlying <xref:System.Xaml.IXamlNameProvider> service available.</span></span>  
  
 <span data-ttu-id="3684d-109">此类型转换器实现对于基类型是典型的， <xref:System.ComponentModel.TypeConverter> 因为它的作用域不是离散的转换类型。</span><span class="sxs-lookup"><span data-stu-id="3684d-109">This type converter implementation is atypical for the <xref:System.ComponentModel.TypeConverter> base type because it is not scoped to a discrete conversion type.</span></span> <span data-ttu-id="3684d-110">它可能会将任何对象转换为引用名称，并从引用名称转换到该对象，只要该对象可能在 XAML 中分配有名称，并且支持上下文具有返回结果所必需的服务。</span><span class="sxs-lookup"><span data-stu-id="3684d-110">It can potentially convert any object to and from a referencing name so long as that object could have a name assigned to it in XAML, and the supporting context has the necessary services to return results.</span></span>  
  
 <span data-ttu-id="3684d-111">作为常规服务支持的一部分，和的系统 Xaml 基实现 <xref:System.Xaml.XamlObjectWriter> <xref:System.Xaml.XamlXmlWriter> 提供 <xref:System.Xaml.IXamlNameProvider> 和 <xref:System.Xaml.IXamlNameResolver> 服务供使用 <xref:System.Windows.Markup.NameReferenceConverter> 。</span><span class="sxs-lookup"><span data-stu-id="3684d-111">As part of general services support, the System.Xaml base implementation of <xref:System.Xaml.XamlObjectWriter> and <xref:System.Xaml.XamlXmlWriter> provide <xref:System.Xaml.IXamlNameProvider> and <xref:System.Xaml.IXamlNameResolver> services for use by <xref:System.Windows.Markup.NameReferenceConverter>.</span></span> <span data-ttu-id="3684d-112">这些服务的名称基础使用 `x:Name` 或 <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> 特性化别名属性。</span><span class="sxs-lookup"><span data-stu-id="3684d-112">The name basis for these services uses either `x:Name` or a <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> attributed alias property.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/type-converters-and-markup-extensions"><span data-ttu-id="3684d-113">XAML 的类型转换器和标记扩展</span><span class="sxs-lookup"><span data-stu-id="3684d-113">Type Converters and Markup Extensions for XAML</span></span></related>
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/"><span data-ttu-id="3684d-114">XAML 服务</span><span class="sxs-lookup"><span data-stu-id="3684d-114">XAML Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameReferenceConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameReferenceConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3684d-115">初始化 <see cref="T:System.Windows.Markup.NameReferenceConverter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3684d-115">Initializes a new instance of the <see cref="T:System.Windows.Markup.NameReferenceConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="nameReferenceConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="3684d-116">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span><span class="sxs-lookup"><span data-stu-id="3684d-116">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="3684d-117">一个 <see cref="T:System.Type" />，表示要转换的类型。</span><span class="sxs-lookup"><span data-stu-id="3684d-117">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="3684d-118">返回该转换器是否可以将一种类型的对象转换为另一个对象。</span><span class="sxs-lookup"><span data-stu-id="3684d-118">Returns whether this converter can convert an object of one type to another object.</span></span></summary>
        <returns><span data-ttu-id="3684d-119">如果该转换器能够执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3684d-119"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3684d-120">此实现只能处理 `sourceType` 的 <xref:System.String> 。</span><span class="sxs-lookup"><span data-stu-id="3684d-120">This implementation can only process a `sourceType` of <xref:System.String>.</span></span> <span data-ttu-id="3684d-121">其他类型返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="3684d-121">Other types return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="nameReferenceConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="3684d-122">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span><span class="sxs-lookup"><span data-stu-id="3684d-122">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="3684d-123">要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="3684d-123">The type to convert to.</span></span></param>
        <summary><span data-ttu-id="3684d-124">返回一个值，该值指示转换器能否将对象转换为指定的目标类型。</span><span class="sxs-lookup"><span data-stu-id="3684d-124">Returns a value that indicates whether the converter can convert an object to the specified destination type.</span></span></summary>
        <returns><span data-ttu-id="3684d-125">如果转换器能执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3684d-125"><see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3684d-126">`destinationType`引用 <xref:System.String> 类型的返回 `true` ; 所有其他 `destinationType` 值返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="3684d-126">A `destinationType` that references the <xref:System.String> type returns `true`; all other `destinationType` values return `false`.</span></span>  
  
 <span data-ttu-id="3684d-127">如果为，则此方法返回 false `context` `null` ; 如果 <xref:System.Xaml.IXamlNameProvider> 无法从获取，则返回 `context` 。</span><span class="sxs-lookup"><span data-stu-id="3684d-127">This method returns false if `context` is `null`, or if <xref:System.Xaml.IXamlNameProvider> cannot be obtained as a service from `context`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="nameReferenceConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="3684d-128">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span><span class="sxs-lookup"><span data-stu-id="3684d-128">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="3684d-129">要用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3684d-129">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="value"><span data-ttu-id="3684d-130">要转换的引用名称字符串。</span><span class="sxs-lookup"><span data-stu-id="3684d-130">The reference name string to convert.</span></span></param>
        <summary><span data-ttu-id="3684d-131">使用指定的上下文和区域性信息将提供的对象转换为另一个对象。</span><span class="sxs-lookup"><span data-stu-id="3684d-131">Converts the provided object to another object, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="3684d-132">返回的对象，该对象可能是在相关支持程序集中进行了类型映射的任何对象，并且可在 XAML 中通过 XAML 名称引用进行声明。</span><span class="sxs-lookup"><span data-stu-id="3684d-132">The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3684d-133">只有 <xref:System.String> 输入提供了转换结果。</span><span class="sxs-lookup"><span data-stu-id="3684d-133">Only a <xref:System.String> input provides a conversion result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3684d-134"><paramref name="value" /> 为 null 字符串或空字符串。</span><span class="sxs-lookup"><span data-stu-id="3684d-134"><paramref name="value" /> is a null string or empty string.</span></span>  
  
<span data-ttu-id="3684d-135">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3684d-135">-or-</span></span> 
 <span data-ttu-id="3684d-136"><see cref="T:System.Xaml.IXamlNameResolver" /> 服务缺失或无效。</span><span class="sxs-lookup"><span data-stu-id="3684d-136"><see cref="T:System.Xaml.IXamlNameResolver" /> service is missing or invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3684d-137"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3684d-137"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="nameReferenceConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="3684d-138">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</span><span class="sxs-lookup"><span data-stu-id="3684d-138">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="3684d-139">要用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3684d-139">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="value"><span data-ttu-id="3684d-140">要检索其引用名称的对象。</span><span class="sxs-lookup"><span data-stu-id="3684d-140">The object to retrieve the reference name for.</span></span></param>
        <param name="destinationType"><span data-ttu-id="3684d-141">要返回的类型。</span><span class="sxs-lookup"><span data-stu-id="3684d-141">The type to return.</span></span> <span data-ttu-id="3684d-142">应当始终引用 <see cref="T:System.String" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="3684d-142">You should always reference the <see cref="T:System.String" /> type.</span></span></param>
        <summary><span data-ttu-id="3684d-143">将对象转换为指定类型。</span><span class="sxs-lookup"><span data-stu-id="3684d-143">Converts an object to the specified type.</span></span> <span data-ttu-id="3684d-144">这用于为对象图形中的对象返回 XAML 引用名称。</span><span class="sxs-lookup"><span data-stu-id="3684d-144">This is intended to return XAML reference names for objects in an object graph.</span></span></summary>
        <returns><span data-ttu-id="3684d-145">输入 <paramref name="value" /> 对象的引用名称。</span><span class="sxs-lookup"><span data-stu-id="3684d-145">The reference name of the input <paramref name="value" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3684d-146"><see cref="T:System.Xaml.IXamlNameProvider" /> 服务缺失或无效。</span><span class="sxs-lookup"><span data-stu-id="3684d-146"><see cref="T:System.Xaml.IXamlNameProvider" /> service is missing or invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3684d-147"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3684d-147"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
