<Type Name="NameReferenceConverter" FullName="System.Windows.Markup.NameReferenceConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f2e36902043904bd8f5d97f9ee8aa70b1b18f2a" /><Meta Name="ms.sourcegitcommit" Value="4adcc144a575f0b27871c22eeb7c5db11c37f05d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/14/2020" /><Meta Name="ms.locfileid" Value="90065846" /></Metadata><TypeSignature Language="C#" Value="public class NameReferenceConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameReferenceConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.NameReferenceConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class NameReferenceConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameReferenceConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type NameReferenceConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供类型转换，以将字符串名称转换成对具有该名称的对象的对象引用，或返回对象图中对象的名称。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类提供围绕两个服务的类型转换器包装。  
  
 <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A>实现使用 <xref:System.Xaml.IXamlNameResolver> 上下文中的服务在 XAML 中按名称执行对象的解析。 这是适用于 xaml 读取器和 XAML 编写器实现 .NET Framework XAML 服务的一部分。 此转换器的正确功能需要服务 <xref:System.Xaml.IXamlNameResolver> 上下文中提供该服务。  
  
 <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A>实现使用上下文中的 <xref:System.Xaml.IXamlNameProvider> 服务在保存/序列化过程中对对象的引用名称进行解析。 这是相关读取器和编写器实现及其上下文的一部分。 此转换器的正确功能需要 <xref:System.Xaml.IXamlNameProvider> 提供基础服务。  
  
 此类型转换器实现对于基类型是典型的， <xref:System.ComponentModel.TypeConverter> 因为它的作用域不是离散的转换类型。 它可能会将任何对象转换为引用名称，并从引用名称转换到该对象，只要该对象可能在 XAML 中分配有名称，并且支持上下文具有返回结果所必需的服务。  
  
 作为常规服务支持的一部分，和的系统 Xaml 基实现 <xref:System.Xaml.XamlObjectWriter> <xref:System.Xaml.XamlXmlWriter> 提供 <xref:System.Xaml.IXamlNameProvider> 和 <xref:System.Xaml.IXamlNameResolver> 服务供使用 <xref:System.Windows.Markup.NameReferenceConverter> 。 这些服务的名称基础使用 `x:Name` 或 <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> 特性化别名属性。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/type-converters-and-markup-extensions">XAML 的类型转换器和标记扩展</related>
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/">XAML 服务</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameReferenceConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameReferenceConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Markup.NameReferenceConverter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="nameReferenceConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <param name="sourceType">一个 <see cref="T:System.Type" />，表示要转换的类型。</param>
        <summary>返回该转换器是否可以将一种类型的对象转换为另一个对象。</summary>
        <returns>如果该转换器能够执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此实现只能处理 `sourceType` 的 <xref:System.String> 。 其他类型返回 `false` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="nameReferenceConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <param name="destinationType">要转换为的类型。</param>
        <summary>返回一个值，该值指示转换器能否将对象转换为指定的目标类型。</summary>
        <returns>如果转换器能执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `destinationType`引用 <xref:System.String> 类型的返回 `true` ; 所有其他 `destinationType` 值返回 `false` 。  
  
 如果为，则此方法返回 false `context` `null` ; 如果 <xref:System.Xaml.IXamlNameProvider> 无法从获取，则返回 `context` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="nameReferenceConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <param name="culture">要用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
        <param name="value">要转换的引用名称字符串。</param>
        <summary>使用指定的上下文和区域性信息将提供的对象转换为另一个对象。</summary>
        <returns>返回的对象，该对象可能是在相关支持程序集中进行了类型映射的任何对象，并且可在 XAML 中通过 XAML 名称引用进行声明。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只有 <xref:System.String> 输入提供了转换结果。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="value" /> 为 null 字符串或空字符串。  
  
- 或 - 
 <see cref="T:System.Xaml.IXamlNameResolver" /> 服务缺失或无效。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="nameReferenceConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <param name="culture">要用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
        <param name="value">要检索其引用名称的对象。</param>
        <param name="destinationType">要返回的类型。 应当始终引用 <see cref="T:System.String" /> 类型。</param>
        <summary>将对象转换为指定类型。 这用于为对象图形中的对象返回 XAML 引用名称。</summary>
        <returns>输入 <paramref name="value" /> 对象的引用名称。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xaml.IXamlNameProvider" /> 服务缺失或无效。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>