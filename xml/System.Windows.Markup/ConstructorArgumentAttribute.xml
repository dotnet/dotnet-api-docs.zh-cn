<Type Name="ConstructorArgumentAttribute" FullName="System.Windows.Markup.ConstructorArgumentAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2734bb60b758325c60245d58f96718d75be780a9" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86991453" /></Metadata><TypeSignature Language="C#" Value="public sealed class ConstructorArgumentAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConstructorArgumentAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ConstructorArgumentAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConstructorArgumentAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstructorArgumentAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ConstructorArgumentAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.Xaml" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9d88e-101">指定可以使用非无参数构造函数语法来初始化对象，而且由指定名称的属性提供构造信息。</span><span class="sxs-lookup"><span data-stu-id="9d88e-101">Specifies that an object can be initialized by using a non-parameterless constructor syntax, and that a property of the specified name supplies construction information.</span></span>  <span data-ttu-id="9d88e-102">此信息主要用于 XAML 序列化。</span><span class="sxs-lookup"><span data-stu-id="9d88e-102">This information is primarily for XAML serialization.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d88e-103">此特性指定关联的属性可由构造函数参数进行初始化，并且如果构造函数用于构造实例，则 XAML 序列化应忽略该属性。</span><span class="sxs-lookup"><span data-stu-id="9d88e-103">This attribute specifies that the associated property can be initialized by a constructor parameter and should be ignored for XAML serialization if the constructor is used to construct the instance.</span></span> <span data-ttu-id="9d88e-104">这为参数化构造函数语法提供更好的往返表示形式，而不是无参数构造函数实例化和特定属性。</span><span class="sxs-lookup"><span data-stu-id="9d88e-104">This provides better round trip representations for parameterized constructor syntax rather than parameterless constructor instantiation plus specific attributes.</span></span>  
  
 <span data-ttu-id="9d88e-105">框架可能支持保留标记扩展用法并重组它们，而不是依赖于 `ProvideValue` 对象树中用于序列化的输出。</span><span class="sxs-lookup"><span data-stu-id="9d88e-105">A framework can potentially support preserving markup extension usages and reconstituting them rather than relying on `ProvideValue` output in the object tree for serialization.</span></span> <span data-ttu-id="9d88e-106">在这种情况下，在 <xref:System.Windows.Markup.ConstructorArgumentAttribute> 序列化过程中，这些信息非常有用，用于生成典型的标记扩展用法的准确表示形式。</span><span class="sxs-lookup"><span data-stu-id="9d88e-106">In this case, the <xref:System.Windows.Markup.ConstructorArgumentAttribute> information is useful during serialization for producing an accurate representation of the typical markup extension usage.</span></span> <span data-ttu-id="9d88e-107">有关标记扩展的详细信息，请参阅 [Markup Extensions for XAML Overview](/dotnet/framework/xaml-services/markup-extensions-for-xaml-overview)。</span><span class="sxs-lookup"><span data-stu-id="9d88e-107">For more information about markup extensions, see [Markup Extensions for XAML Overview](/dotnet/framework/xaml-services/markup-extensions-for-xaml-overview).</span></span>  
  
 <span data-ttu-id="9d88e-108">为了对某个 <xref:System.Windows.Markup.ConstructorArgumentAttribute> 归属有效，类型的公共非参数构造函数必须仅支持一个参数。</span><span class="sxs-lookup"><span data-stu-id="9d88e-108">In order to be valid for a <xref:System.Windows.Markup.ConstructorArgumentAttribute> attribution, a type's public non-parameterless constructor must support exactly one parameter.</span></span> <span data-ttu-id="9d88e-109">参数的名称必须与读/写属性相对应。</span><span class="sxs-lookup"><span data-stu-id="9d88e-109">The name of the parameter must correspond to a read/write property.</span></span> <span data-ttu-id="9d88e-110">该属性必须是可序列化的。</span><span class="sxs-lookup"><span data-stu-id="9d88e-110">The property must be otherwise serializable.</span></span> <span data-ttu-id="9d88e-111">使用此属性可以在构造函数中的参数名称与属性之间创建对应关系。</span><span class="sxs-lookup"><span data-stu-id="9d88e-111">You use this attribute to create the correspondence between the name of the parameter in the constructor, and the property.</span></span> <span data-ttu-id="9d88e-112">具体而言，将此特性应用于连接读/写属性的属性级定义。</span><span class="sxs-lookup"><span data-stu-id="9d88e-112">Specifically, you apply this attribute to the property-level definition of the connecting read/write property.</span></span>  
  
 <span data-ttu-id="9d88e-113">如果未 <xref:System.Windows.Markup.ConstructorArgumentAttribute> <xref:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName%2A> 解析为类型支持，或应用于没有合适的构造参数和 arity 的类型，则可能会引发的使用者。</span><span class="sxs-lookup"><span data-stu-id="9d88e-113">Consumers of <xref:System.Windows.Markup.ConstructorArgumentAttribute> may throw in cases where <xref:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName%2A> does not resolve to type backing, or when applied to a type that does not have the appropriate construction arguments and arity.</span></span>  
  
 <span data-ttu-id="9d88e-114">在 .NET Framework 的以前版本中，此类存在于 WPF 特定的程序集 WindowsBase 中。</span><span class="sxs-lookup"><span data-stu-id="9d88e-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="9d88e-115">在中 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ， <xref:System.Windows.Markup.ConstructorArgumentAttribute> 为 system.exception 程序集。</span><span class="sxs-lookup"><span data-stu-id="9d88e-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ConstructorArgumentAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="9d88e-116">有关详细信息，请参阅 [Types Migrated from WPF to System.Xaml](/dotnet/framework/xaml-services/types-migrated-from-wpf-to-system-xaml)。</span><span class="sxs-lookup"><span data-stu-id="9d88e-116">For more information, see [Types Migrated from WPF to System.Xaml](/dotnet/framework/xaml-services/types-migrated-from-wpf-to-system-xaml).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="9d88e-117">WPF 用法说明</span><span class="sxs-lookup"><span data-stu-id="9d88e-117">WPF Usage Notes</span></span>  
 <span data-ttu-id="9d88e-118">有关标记扩展和 WPF 的详细信息，请参阅 [标记扩展和 WPF XAML](/dotnet/framework/wpf/advanced/markup-extensions-and-wpf-xaml)。</span><span class="sxs-lookup"><span data-stu-id="9d88e-118">For more information about markup extensions and WPF, see [Markup Extensions and WPF XAML](/dotnet/framework/wpf/advanced/markup-extensions-and-wpf-xaml).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1"><span data-ttu-id="9d88e-119">自定义类型和库的 XAML 相关 CLR 特性</span><span class="sxs-lookup"><span data-stu-id="9d88e-119">XAML-Related CLR Attributes For Custom Types and Libraries</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4"><span data-ttu-id="9d88e-120">定义与 .NET Framework XAML 服务一起使用的自定义类型</span><span class="sxs-lookup"><span data-stu-id="9d88e-120">Defining Custom Types for Use with .NET Framework XAML Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211"><span data-ttu-id="9d88e-121">NET XAML 服务概念文档</span><span class="sxs-lookup"><span data-stu-id="9d88e-121">NET XAML Services Conceptual Documentation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="9d88e-122">XAML 的类型转换器或标记扩展</span><span class="sxs-lookup"><span data-stu-id="9d88e-122">Type Converters or Markup Extensions for XAML</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConstructorArgumentAttribute (string argumentName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string argumentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (argumentName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConstructorArgumentAttribute(System::String ^ argumentName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.ConstructorArgumentAttribute : string -&gt; System.Windows.Markup.ConstructorArgumentAttribute" Usage="new System.Windows.Markup.ConstructorArgumentAttribute argumentName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="argumentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argumentName"><span data-ttu-id="9d88e-123">将初始化关联属性的构造函数的名称。</span><span class="sxs-lookup"><span data-stu-id="9d88e-123">The name of the constructor that will initialize the associated property.</span></span></param>
        <summary><span data-ttu-id="9d88e-124">初始化 <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9d88e-124">Initializes a new instance of the <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgumentName">
      <MemberSignature Language="C#" Value="public string ArgumentName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ArgumentName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ArgumentName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentName : string" Usage="System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d88e-125">获取将初始化关联的属性的构造函数的 name 参数。</span><span class="sxs-lookup"><span data-stu-id="9d88e-125">Gets the name parameter of the constructor that will initialize the associated property.</span></span></summary>
        <value><span data-ttu-id="9d88e-126">构造函数的名称。</span><span class="sxs-lookup"><span data-stu-id="9d88e-126">The name of the constructor.</span></span> <span data-ttu-id="9d88e-127">假定具有 CLR 支持，这对应于相关的构造函数参数的 <see cref="P:System.Reflection.ParameterInfo.Name" />。</span><span class="sxs-lookup"><span data-stu-id="9d88e-127">Assuming CLR backing, this corresponds to the <see cref="P:System.Reflection.ParameterInfo.Name" /> of the relevant constructor parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
