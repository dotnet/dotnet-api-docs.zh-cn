<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78732f2b7abbe05d954732b1cec29dd42e3a312f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89672205" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="20cc9-101">查询是否应将指定的属性视为当前范围中的环境属性。</span><span class="sxs-lookup"><span data-stu-id="20cc9-101">Queries for whether a specified property should be treated as ambient in the current scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cc9-102">环境属性机制的用途是通过通知 XAML 对象编写器避免实例化某些对象，从而提高分析时间，这是因为已知这些对象适用于暂时的值，而对典型的运行时应用程序并不有用。</span><span class="sxs-lookup"><span data-stu-id="20cc9-102">The purpose of an ambient property mechanism is to improve parsing time by informing a XAML object writer to avoid instantiating certain objects, in cases where it is known that the objects are for values that are temporary and not useful for a typical run time application.</span></span> <span data-ttu-id="20cc9-103">通常，属性 get 访问器的 XAML 查找或 XAML 处理需要实例化此类对象，以使用随时可用的值填充对象图表示形式。</span><span class="sxs-lookup"><span data-stu-id="20cc9-103">Normally, XAML lookups or XAML processing of a property get accessor would need to instantiate such objects to fill the object graph representation with ready-to-use values.</span></span>  
  
 <span data-ttu-id="20cc9-104"><xref:System.Windows.Markup.IQueryAmbient> 有一个成员： <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A> 。</span><span class="sxs-lookup"><span data-stu-id="20cc9-104"><xref:System.Windows.Markup.IQueryAmbient> has one member: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.</span></span>  
  
 <span data-ttu-id="20cc9-105"><xref:System.Windows.Markup.IQueryAmbient> 是的并行机制 <xref:System.Windows.Markup.AmbientAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="20cc9-105"><xref:System.Windows.Markup.IQueryAmbient> is a parallel mechanism to <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="20cc9-106"><xref:System.Windows.Markup.IQueryAmbient> 是一种专用机制，可避免使用反射来确定信息，还可以将 situationally (给定的对象可以选择报告 `true` 或 `false` <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>) ，而该属性本质上是静态分析) 。</span><span class="sxs-lookup"><span data-stu-id="20cc9-106"><xref:System.Windows.Markup.IQueryAmbient> is the specialized mechanism that avoids using reflection to determine information, and can also act situationally (a given object could choose to report `true` or `false` for <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), whereas the attribute is essentially static analysis).</span></span> <span data-ttu-id="20cc9-107"><xref:System.Windows.Markup.AmbientAttribute> 是 XAML 对象编写器可以使用的常规机制，通常与专用 XAML 类型系统属性 <xref:System.Xaml.XamlMember.IsAmbient%2A> 和关联 <xref:System.Xaml.XamlType.IsAmbient%2A> 。</span><span class="sxs-lookup"><span data-stu-id="20cc9-107"><xref:System.Windows.Markup.AmbientAttribute> is the general mechanism that can be used by XAML object writers and that typically correlates to the dedicated XAML type system properties <xref:System.Xaml.XamlMember.IsAmbient%2A> and <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
## <a name="wpf-implementations-of-iqueryambient"></a><span data-ttu-id="20cc9-108">IQueryAmbient 的 WPF 实现</span><span class="sxs-lookup"><span data-stu-id="20cc9-108">WPF Implementations of IQueryAmbient</span></span>  
 <span data-ttu-id="20cc9-109">在 WPF 中， <xref:System.Windows.Markup.IQueryAmbient> 用于资源字典查找过程。</span><span class="sxs-lookup"><span data-stu-id="20cc9-109">In WPF, <xref:System.Windows.Markup.IQueryAmbient> is used for the resource dictionary lookup process.</span></span> <span data-ttu-id="20cc9-110">查找进程获取 `Resources` 整个 WPF 逻辑树中的连续值，一直到资源范围的根，直到找到一个键或确定该键不在作用域内。</span><span class="sxs-lookup"><span data-stu-id="20cc9-110">The lookup process gets successive `Resources` values throughout the WPF logical tree, working towards the root of the resource scope until either a key is found or the key is determined to not exist in scope.</span></span> <span data-ttu-id="20cc9-111">通常情况下，需要每次实例化一 <xref:System.Windows.ResourceDictionary> 次来接收结果。</span><span class="sxs-lookup"><span data-stu-id="20cc9-111">Normally, doing so would require instantiating a <xref:System.Windows.ResourceDictionary> each time to receive the results.</span></span> <span data-ttu-id="20cc9-112">将的内容声明 `Resources` 为环境，只要存在，就会 `Resources` 优化此查找过程。</span><span class="sxs-lookup"><span data-stu-id="20cc9-112">Declaring the contents of `Resources` as ambient so long as `Resources` exists optimizes this lookup process.</span></span> <span data-ttu-id="20cc9-113">在 WPF 中，此接口在以下情况下实现：</span><span class="sxs-lookup"><span data-stu-id="20cc9-113">In WPF, this interface is implemented in the following cases:</span></span>  
  
-   <span data-ttu-id="20cc9-114"><xref:System.Windows.FrameworkElement> 实现 <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> 以返回 `true` 所有属性名称（如果它包含的现有 <xref:System.Windows.ResourceDictionary> <xref:System.Windows.FrameworkElement.Resources%2A> ），只要查询不是针对 <xref:System.Windows.FrameworkElement.Resources%2A> 属性本身。</span><span class="sxs-lookup"><span data-stu-id="20cc9-114"><xref:System.Windows.FrameworkElement> implements <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> to return `true` for all property names if it contains an existing <xref:System.Windows.ResourceDictionary> for <xref:System.Windows.FrameworkElement.Resources%2A>, and so long as the query is not for the <xref:System.Windows.FrameworkElement.Resources%2A> property itself.</span></span>  
  
-   <span data-ttu-id="20cc9-115"><xref:System.Windows.Style> 为其实现同一模式 <xref:System.Windows.Style.Resources%2A> 。</span><span class="sxs-lookup"><span data-stu-id="20cc9-115"><xref:System.Windows.Style> implements the same pattern for its <xref:System.Windows.Style.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="20cc9-116"><xref:System.Windows.Application> 为其实现同一模式 <xref:System.Windows.Application.Resources%2A> 。</span><span class="sxs-lookup"><span data-stu-id="20cc9-116"><xref:System.Windows.Application> implements the same pattern for its <xref:System.Windows.Application.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="20cc9-117"><xref:System.Windows.FrameworkContentElement> 为其实现同一模式 <xref:System.Windows.FrameworkContentElement.Resources%2A> 。</span><span class="sxs-lookup"><span data-stu-id="20cc9-117"><xref:System.Windows.FrameworkContentElement> implements the same pattern for its <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="20cc9-118"><xref:System.Windows.FrameworkTemplate> 为其实现同一模式 <xref:System.Windows.FrameworkTemplate.Resources%2A> 。</span><span class="sxs-lookup"><span data-stu-id="20cc9-118"><xref:System.Windows.FrameworkTemplate> implements the same pattern for its <xref:System.Windows.FrameworkTemplate.Resources%2A>.</span></span> <span data-ttu-id="20cc9-119">它还将 <xref:System.Windows.FrameworkTemplate.Template%2A> 内容报告为环境， `false` 但在查询 <xref:System.Windows.FrameworkTemplate.Template%2A> 自身时返回。</span><span class="sxs-lookup"><span data-stu-id="20cc9-119">It also reports <xref:System.Windows.FrameworkTemplate.Template%2A> content as ambient but returns `false` if querying for <xref:System.Windows.FrameworkTemplate.Template%2A> itself.</span></span>  
  
-   <span data-ttu-id="20cc9-120">在上述每种情况下，相关 `Resources` 属性 (和 <xref:System.Windows.FrameworkTemplate.Template%2A>) 的属性为 <xref:System.Windows.Markup.AmbientAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="20cc9-120">In each of these cases, the relevant `Resources` property (and <xref:System.Windows.FrameworkTemplate.Template%2A>) are attributed as <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="20cc9-121">典型的用法是查询属性，这些属性不是 <xref:System.Windows.Markup.AmbientAttribute> 定义接口的对象的特性化属性。</span><span class="sxs-lookup"><span data-stu-id="20cc9-121">The typical usage is to query for the properties that are NOT the <xref:System.Windows.Markup.AmbientAttribute> attributed properties of the object that defines the interface.</span></span> <span data-ttu-id="20cc9-122">换句话说，只要存在资源字典以便在创建对象图时提供潜在的运行时间值，则除资源字典的属性容器之外的任何其他属性都可以被视为环境。</span><span class="sxs-lookup"><span data-stu-id="20cc9-122">In other words, so long as a resource dictionary exists in order to provide the potential run time value when the object graph is created, any other property besides the resource dictionary's property container can be treated as ambient.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="20cc9-123">要检查其环境状态的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="20cc9-123">The name of the property to check for ambience state.</span></span></param>
        <summary><span data-ttu-id="20cc9-124">查询可否将指定的命名属性视为当前范围中的环境属性。</span><span class="sxs-lookup"><span data-stu-id="20cc9-124">Queries for whether a specified named property can be considered ambient in the current scope.</span></span></summary>
        <returns><span data-ttu-id="20cc9-125">如果所请求的属性可视为环境属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="20cc9-125"><see langword="true" /> if the requested property can be considered ambient; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
