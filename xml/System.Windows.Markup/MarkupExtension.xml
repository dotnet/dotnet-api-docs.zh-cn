<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="637703de09d451add592a28117a51cbe7e526175" /><Meta Name="ms.sourcegitcommit" Value="5484acfd78fc29edb48fc1ca6925046c4672954a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/16/2020" /><Meta Name="ms.locfileid" Value="90695596" /></Metadata><TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.Xaml" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.Xaml" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ddd4b-101">为可以由 .NET Framework XAML 服务及其他 XAML 读取器和 XAML 编写器支持的 XAML 标记扩展实现提供基类。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-101">Provides a base class for XAML markup extension implementations that can be supported by .NET Framework XAML Services and other XAML readers and XAML writers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd4b-102">标记扩展基于 XAML 中字符串属性值或标记元素的输入将对象返回给调用方。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-102">Markup extensions return objects to callers, based on the input of string attribute values or markup elements in XAML.</span></span> <span data-ttu-id="ddd4b-103">标记扩展以更复杂的方式返回对象，而不是单独的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-103">Markup extensions return objects in a more sophisticated way than type converters alone can accomplish.</span></span> <span data-ttu-id="ddd4b-104">XAML 对象编写器调用类型转换器，因为类型或成员具有与之关联的类型转换器实现。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-104">A XAML object writer invokes a type converter because a type or member has a type converter implementation associated with it.</span></span> <span data-ttu-id="ddd4b-105">从引用的 CLR 框架，这意味着类型或成员是 <xref:System.ComponentModel.TypeConverterAttribute> 特性化的。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-105">From the CLR frame of reference, this means that a type or member is <xref:System.ComponentModel.TypeConverterAttribute> attributed.</span></span> <span data-ttu-id="ddd4b-106">从 XAML 类型系统角度来看，这意味着 XAML 类型或 XAML 成员具有其属性的值 `TypeConverter` 。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-106">From the XAML type system perspective, this means that a XAML type or a XAML member has a value for its `TypeConverter` property.</span></span> <span data-ttu-id="ddd4b-107">类型转换器的调用绑定到类型或属性定义，并始终在这些情况下由 XAML 处理调用。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-107">The invocation of a type converter is tied to the type or property definition, and is always invoked by XAML processing for these cases.</span></span> <span data-ttu-id="ddd4b-108">与此相反，标记扩展在控制用户代码和用户生成的标记时更多，可以在应用程序方案要求它时应用。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-108">In contrast, a markup extension is more under the control of user code and user-produced markup, and can be applied whenever an application scenario demands it.</span></span> <span data-ttu-id="ddd4b-109">可以调用标记扩展并将其用于设置不同的类型成员值，前提是标记扩展的返回类型可赋给该值。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-109">A markup extension can be invoked and can be used for setting different type-member values, so long as the markup extension's return type is assignable to that value.</span></span>  
  
 <span data-ttu-id="ddd4b-110">有关创建自定义标记扩展的信息，请参阅 <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-110">For information on creating a custom markup extension, see <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>.</span></span> <span data-ttu-id="ddd4b-111">有关常规标记扩展的详细信息，请参阅 [XAML 的标记扩展概述](/dotnet/framework/xaml-services/markup-extensions-for-xaml-overview)。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-111">For more information on markup extensions in general, see [Markup Extensions for XAML Overview](/dotnet/framework/xaml-services/markup-extensions-for-xaml-overview).</span></span> <span data-ttu-id="ddd4b-112">如果是在 WPF 上生成并使用或创建 XAML 的标记扩展，则可以在主题 [标记扩展和 WPF XAML](/dotnet/framework/wpf/advanced/markup-extensions-and-wpf-xaml)中找到其他相关信息。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-112">If you are building on WPF and using or creating markup extensions for XAML, other relevant information can be found in the topic [Markup Extensions and WPF XAML](/dotnet/framework/wpf/advanced/markup-extensions-and-wpf-xaml).</span></span>  
  
 <span data-ttu-id="ddd4b-113"><xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>每个标记扩展实现的方法可以 <xref:System.IServiceProvider> 在运行时使用来提供上下文。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-113">The <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of each markup extension implementation can use an <xref:System.IServiceProvider> at run time that can provide context.</span></span> <span data-ttu-id="ddd4b-114"><xref:System.IServiceProvider>然后，针对传递信息的特定服务（如或）查询此信息 <xref:System.Windows.Markup.IProvideValueTarget> <xref:System.Windows.Markup.IXamlTypeResolver> 。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-114">This  <xref:System.IServiceProvider> is then queried for specific services that pass information, such as <xref:System.Windows.Markup.IProvideValueTarget> or <xref:System.Windows.Markup.IXamlTypeResolver>.</span></span> <span data-ttu-id="ddd4b-115">有关标记扩展的服务上下文的详细信息，请参阅 [可供类型转换器和标记扩展使用的服务上下文](/dotnet/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions)。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-115">For more information on service contexts for a markup extension, see [Service Contexts Available to Type Converters and Markup Extensions](/dotnet/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions).</span></span>  
  
 <span data-ttu-id="ddd4b-116">派生类应使用进行特性化， <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> 以便向使用者通知标记扩展的实现中可用的最特定返回类型 <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-116">Derived classes should be attributed with <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> to inform consumers of the most specific return type available from the markup extension's <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/type-converters-and-markup-extensions"><span data-ttu-id="ddd4b-117">XAML 的类型转换器和标记扩展</span><span class="sxs-lookup"><span data-stu-id="ddd4b-117">Type Converters and Markup Extensions for XAML</span></span></related>
    <related type="Article" href="/dotnet/desktop-wpf/xaml-services/markup-extensions-overview"><span data-ttu-id="ddd4b-118">XAML 的标记扩展概述</span><span class="sxs-lookup"><span data-stu-id="ddd4b-118">Overview of markup extensions for XAML</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ddd4b-119">初始化从 <see cref="T:System.Windows.Markup.MarkupExtension" /> 派生的类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-119">Initializes a new instance of a class derived from <see cref="T:System.Windows.Markup.MarkupExtension" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd4b-120"><xref:System.Windows.Markup.MarkupExtension>抽象类不包含任何需要初始化的私有值。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-120">The <xref:System.Windows.Markup.MarkupExtension> abstract class does not hold any private values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ddd4b-121">功能标记扩展应定义自己的公共无参数构造函数。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-121">A functional markup extension should define its own public parameterless constructor.</span></span> <span data-ttu-id="ddd4b-122">此外，标记扩展应实现适用于扩展的预期功能和标记用法的构造函数。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-122">Additionally, the markup extension should implement constructors that are appropriate for the extension's intended capabilities and markup usage.</span></span> <span data-ttu-id="ddd4b-123">有关详细信息，请参阅 [XAML 的标记扩展概述](/dotnet/framework/xaml-services/markup-extensions-for-xaml-overview)。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-123">For more information, see [Markup Extensions for XAML Overview](/dotnet/framework/xaml-services/markup-extensions-for-xaml-overview).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="ddd4b-124">可为标记扩展提供服务的服务提供程序帮助程序。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-124">A service provider helper that can provide services for the markup extension.</span></span></param>
        <summary><span data-ttu-id="ddd4b-125">当在派生类中实现时，返回用作此标记扩展的目标属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-125">When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.</span></span></summary>
        <returns><span data-ttu-id="ddd4b-126">要在应用了扩展的属性上设置的对象值。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-126">The object value to set on the property where the extension is applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd4b-127">当 XAML 处理器处理作为标记扩展的类型节点和成员值时，它将调用 <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> 该标记扩展的方法并将结果写入对象图或序列化流。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-127">When a XAML processor processes a type node and member value that is a markup extension, it invokes the <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of that markup extension and writes the result into the object graph or serialization stream.</span></span> <span data-ttu-id="ddd4b-128">XAML 对象编写器通过参数将服务上下文传递给每个此类实现 `serviceProvider` 。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-128">The XAML object writer passes service context to each such implementation through the `serviceProvider` parameter.</span></span>  
  
 <span data-ttu-id="ddd4b-129">有关如何 <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> 在自定义标记扩展中实现的详细信息，请参阅 "对实现者的说明" 部分。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-129">See "Notes to Implementers" section for more information on how to implement <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> in a custom markup extension.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="ddd4b-130">WPF 用法说明</span><span class="sxs-lookup"><span data-stu-id="ddd4b-130">WPF Usage Notes</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ddd4b-131">与标记集操作具有特定交互的 WPF 类不应依赖于 <xref:System.Windows.Markup.IReceiveMarkupExtension> [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 实现。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-131">WPF classes that have specific interactions with markup set operations should not rely on <xref:System.Windows.Markup.IReceiveMarkupExtension> for a [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementation.</span></span> <span data-ttu-id="ddd4b-132"><xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>改用特性化回调。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-132">Use <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-attributed callbacks instead.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ddd4b-133">通常可用于自定义或现有实现的默认服务提供程序返回的常见服务 <see cref="T:System.Windows.Markup.MarkupExtension" /> 包括以下主要服务。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-133">Common services returned by the default service provider that is typically available to a custom or existing <see cref="T:System.Windows.Markup.MarkupExtension" /> implementation include the following primary services.</span></span>  
  <span data-ttu-id="ddd4b-134">
-   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> 从使用标记扩展的上下文中报告对象引用和属性标识符</span><span class="sxs-lookup"><span data-stu-id="ddd4b-134">
-   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> reports the object reference and a property identifier from the context where the markup extension is used</span></span> <span data-ttu-id="ddd4b-135">
-   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> 公开一种服务，该服务与可以 <see cref="T:System.Type" /> 基于 XAML 类型名称提供的一般 xaml 对象写入行为等效。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-135">
-   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> exposes a service that parallels the general XAML object writing behavior that can provide a <see cref="T:System.Type" /> based on a XAML type name.</span></span> <span data-ttu-id="ddd4b-136">该名称可以有选择性地包含映射的 XAML 命名空间的前缀。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-136">The name can optionally include a prefix for a mapped XAML namespace.</span></span>  
  <span data-ttu-id="ddd4b-137">
-   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> 直接公开活动 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-137">
-   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> exposes the active XAML schema context directly.</span></span> <span data-ttu-id="ddd4b-138">从报告的中 <see cref="T:System.Xaml.XamlSchemaContext" /> ，你可以获取 XAML 架构上下文信息，如如何为类型支持映射程序集、程序集中的首选前缀、程序集中的每个前缀， <see cref="T:System.Xaml.XamlType" /> 等等。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-138">From the reported <see cref="T:System.Xaml.XamlSchemaContext" />, you can obtain XAML schema context information such as how assemblies are mapped for type support, preferred prefix in assemblies, lists of each <see cref="T:System.Xaml.XamlType" /> in an assembly, and so on.</span></span>  
  
<span data-ttu-id="ddd4b-139">-可用于更专业标记扩展方案的其他服务包括：</span><span class="sxs-lookup"><span data-stu-id="ddd4b-139">-   Other services available for more specialized markup extension scenarios include:</span></span> 
    -   <see cref="T:System.Windows.Markup.IUriContext" />  
  
    -   <see cref="T:System.Xaml.IAmbientProvider" />  
  
    -   <see cref="T:System.Xaml.IDestinationTypeProvider" />  
  
    -   <see cref="T:System.Xaml.IRootObjectProvider" />  
  
    -   <see cref="T:System.Xaml.IXamlNameResolver" />  
  
    -   <see cref="T:System.Xaml.IXamlNamespaceResolver" />  
  
<span data-ttu-id="ddd4b-140">的实现可能 <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> 会忽略 <paramref name="serviceProvider" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-140">Potentially, implementations of <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> can ignore the <paramref name="serviceProvider" /> parameter.</span></span> <span data-ttu-id="ddd4b-141">这适用于一些基本方案，在这些方案中，不需要任何上下文来返回值。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-141">This is viable for some basic scenarios, where no context at all is required for returning a value.</span></span>  
  
<span data-ttu-id="ddd4b-142">在典型用法中，.NET Framework XAML 服务和实现的 XAML 对象编写器将为在 XAML 处理过程中调用的所有值转换器方法提供服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-142">In typical usage, the .NET Framework XAML Services and the implemented XAML object writers will provide a service provider to all value converter methods that are invoked during XAML processing.</span></span> <span data-ttu-id="ddd4b-143">然而，为确保可靠性，应为服务提供商本身和任何请求的服务提供空值的代码路径。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-143">However, for robustness, you should provide code paths for null values both for the service provider itself and for any requested service.</span></span> <span data-ttu-id="ddd4b-144">如果标记扩展适用于 XAML 处理器基础结构提供的典型服务支持不可用的情况，则可能会出现 Null 值。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-144">Null values might occur if your markup extension is applied in a circumstance where the typical service support provided by a XAML processor infrastructure is not available.</span></span>  
  
<span data-ttu-id="ddd4b-145">有关 XAML 服务提供程序上下文中可用服务的详细信息以及如何使用它们的详细信息，请参阅 [xaml 的类型转换器和标记扩展](/dotnet/framework/xaml-services/type-converters-and-markup-extensions-for-xaml)。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-145">For more information on available services from the XAML service provider context and how to use them, see [Type Converters and Markup Extensions for XAML](/dotnet/framework/xaml-services/type-converters-and-markup-extensions-for-xaml).</span></span>  
  
<span data-ttu-id="ddd4b-146">需要特定服务才能生成有用结果的实现 <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> 应在该服务不可用时引发异常。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-146">Implementations that require a certain service to be available in order to produce a useful <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> result are expected to throw exceptions if that service is not available.</span></span> <span data-ttu-id="ddd4b-147">建议引发的异常为 <see cref="T:System.InvalidOperationException" /> 。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-147">The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="ddd4b-148">如果自定义标记扩展需要提供值的某个参数为 null、对于其数据类型无效，或者不包含标记扩展能够处理的值，则实现也可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-148">The implementation may also throw exceptions if one of the arguments that the custom markup extension needs in order to provide a value is null, is invalid for its data type, or does not contain a value that the markup extension is capable of processing.</span></span> <span data-ttu-id="ddd4b-149">建议引发的异常为 <see cref="T:System.InvalidOperationException" /> 。</span><span class="sxs-lookup"><span data-stu-id="ddd4b-149">The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.</span></span></para></block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
        <related type="Article" href="/dotnet/desktop-wpf/xaml-services/type-converters-and-markup-extensions"><span data-ttu-id="ddd4b-150">XAML 的类型转换器和标记扩展</span><span class="sxs-lookup"><span data-stu-id="ddd4b-150">Type Converters and Markup Extensions for XAML</span></span></related>
        <related type="Article" href="/dotnet/desktop-wpf/xaml-services/markup-extensions-overview"><span data-ttu-id="ddd4b-151">XAML 的标记扩展概述</span><span class="sxs-lookup"><span data-stu-id="ddd4b-151">Overview of markup extensions for XAML</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
