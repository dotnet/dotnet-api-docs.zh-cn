<Type Name="IComponentConnector" FullName="System.Windows.Markup.IComponentConnector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f2385b48718c525aca175c59c517eb46ec2cc51" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83952848" /></Metadata><TypeSignature Language="C#" Value="public interface IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentConnector" />
  <TypeSignature Language="F#" Value="type IComponentConnector = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.Xaml" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.Xaml" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为命名 XAML 元素提供标记编译和工具支持，以及将事件处理程序附加到这些元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此接口由 <xref:System.Windows.Baml2006.Baml2006Reader>在内部使用。  
  
 <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> 的实现被广泛视为框架或技术所提供的基础结构的一部分，这些框架或技术将 XAML 与应用程序和编程模型结合使用。 例如，无论何时查看 WPF 页和应用程序中的 XAML 根元素的生成类，都将看到输出中定义 <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A>。 此方法也存在于已编译的程序集中，并在 WPF 应用程序模型中扮演 XAML 分析时加载 XAML UI 内容的角色。 有关 `InitializeComponent` 概念的 WPF 集成的详细信息，请参阅[应用程序管理概述](/dotnet/framework/wpf/app-development/application-management-overview)或[Wpf 中的代码隐藏和 XAML](/dotnet/framework/wpf/advanced/code-behind-and-xaml-in-wpf)。  
  
 在 .NET Framework 的以前版本中，此接口存在于 WPF 特定的程序集 WindowsBase 中。 在 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]中，<xref:System.Windows.Markup.IComponentConnector> 在 system.exception 程序集中。 . 有关详细信息，请参阅 [Types Migrated from WPF to System.Xaml](/dotnet/framework/xaml-services/types-migrated-from-wpf-to-system-xaml)。  
  
> [!TIP]
>  在尝试生成期间未能解析 <xref:System.Windows.Markup.IComponentConnector> 通常表明你尚未正确更新 WPF 项目。 具体而言，项目不会引用面向 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]的项目的 system.exception 程序集。 尝试为项目运行 `devenv /upgrade` 选项，或调整项目程序集引用，使 system.exception 位于引用列表中。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (connectionId As Integer, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int connectionId, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Connect : int * obj -&gt; unit" Usage="iComponentConnector.Connect (connectionId, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId">用于区分调用的标识符标记。</param>
        <param name="target">事件和名称所连接到的目标。</param>
        <summary>将事件和名称附加到已编译的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> 由 <xref:System.Windows.Baml2006.Baml2006Reader>在内部使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit" Usage="iComponentConnector.InitializeComponent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>加载组件的已编译页面。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> 由 <xref:System.Windows.Baml2006.Baml2006Reader>在内部使用。  
  
 <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> 的实现被广泛视为框架或技术所提供的基础结构的一部分，这些框架或技术将 XAML 与应用程序和编程模型结合使用。 例如，无论何时查看 WPF 页和应用程序中的 XAML 根元素的生成类，都将看到输出中定义 <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A>。 此方法也存在于已编译的程序集中，并在 WPF 应用程序模型中扮演 XAML 分析时加载 XAML UI 内容的角色。 有关 `InitializeComponent` 概念的 WPF 集成的详细信息，请参阅[应用程序管理概述](/dotnet/framework/wpf/app-development/application-management-overview)或[Wpf 中的代码隐藏和 XAML](/dotnet/framework/wpf/advanced/code-behind-and-xaml-in-wpf)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
