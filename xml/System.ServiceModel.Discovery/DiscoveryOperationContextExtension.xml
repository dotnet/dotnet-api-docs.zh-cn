<Type Name="DiscoveryOperationContextExtension" FullName="System.ServiceModel.Discovery.DiscoveryOperationContextExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="afd094ecda65365e7929fc21ece04fddd8784a31" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89937105" /></Metadata><TypeSignature Language="C#" Value="public class DiscoveryOperationContextExtension : System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DiscoveryOperationContextExtension extends System.Object implements class System.ServiceModel.IExtension`1&lt;class System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Discovery.DiscoveryOperationContextExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class DiscoveryOperationContextExtension&#xA;Implements IExtension(Of OperationContext)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DiscoveryOperationContextExtension : System::ServiceModel::IExtension&lt;System::ServiceModel::OperationContext ^&gt;" />
  <TypeSignature Language="F#" Value="type DiscoveryOperationContextExtension = class&#xA;    interface IExtension&lt;OperationContext&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>操作上下文扩展，用于提供各种适用于发现运行时的配置项。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DiscoveryMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Discovery.ServiceDiscoveryMode DiscoveryMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Discovery.ServiceDiscoveryMode DiscoveryMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DiscoveryMode As ServiceDiscoveryMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Discovery::ServiceDiscoveryMode DiscoveryMode { System::ServiceModel::Discovery::ServiceDiscoveryMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DiscoveryMode : System.ServiceModel.Discovery.ServiceDiscoveryMode" Usage="System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Discovery.ServiceDiscoveryMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" />。</summary>
        <value><see cref="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" /> 枚举值之一。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoveryVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Discovery.DiscoveryVersion DiscoveryVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Discovery.DiscoveryVersion DiscoveryVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DiscoveryVersion As DiscoveryVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Discovery::DiscoveryVersion ^ DiscoveryVersion { System::ServiceModel::Discovery::DiscoveryVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DiscoveryVersion : System.ServiceModel.Discovery.DiscoveryVersion" Usage="System.ServiceModel.Discovery.DiscoveryOperationContextExtension.DiscoveryVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Discovery.DiscoveryVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" />。</summary>
        <value>发现版本。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseDelay">
      <MemberSignature Language="C#" Value="public TimeSpan MaxResponseDelay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxResponseDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.MaxResponseDelay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxResponseDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxResponseDelay { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseDelay : TimeSpan" Usage="System.ServiceModel.Discovery.DiscoveryOperationContextExtension.MaxResponseDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可指定最大响应延迟的 <see cref="T:System.TimeSpan" />。</summary>
        <value>最大响应延迟。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在操作的临时模式中，发现客户端将会多播查找或解析请求。 根据请求中指定的条件，多个服务可能会对客户端做出响应。 为了防止所有响应同时到达并使客户端不堪重负，发现服务运行时会延迟发送对请求的响应，延迟时间是一个介于 0 和 <xref:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.MaxResponseDelay%2A> 之间的随机时段。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Attach">
      <MemberSignature Language="C#" Value="void IExtension&lt;OperationContext&gt;.Attach (System.ServiceModel.OperationContext owner);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Attach(class System.ServiceModel.OperationContext owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.System#ServiceModel#IExtension&lt;System#ServiceModel#OperationContext&gt;#Attach(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (owner As OperationContext) Implements IExtension(Of OperationContext).Attach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Attach(System::ServiceModel::OperationContext ^ owner) = System::ServiceModel::IExtension&lt;System::ServiceModel::OperationContext ^&gt;::Attach;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Attach : System.ServiceModel.OperationContext -&gt; unit&#xA;override this.System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Attach : System.ServiceModel.OperationContext -&gt; unit" Usage="discoveryOperationContextExtension.System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Attach owner" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.IExtension`1.Attach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="owner">要将扩展附加到的操作上下文。</param>
        <summary><see cref="M:System.ServiceModel.IExtension`1.Attach(`0)" /> 方法的实现。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Detach">
      <MemberSignature Language="C#" Value="void IExtension&lt;OperationContext&gt;.Detach (System.ServiceModel.OperationContext owner);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Detach(class System.ServiceModel.OperationContext owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.System#ServiceModel#IExtension&lt;System#ServiceModel#OperationContext&gt;#Detach(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Sub Detach (owner As OperationContext) Implements IExtension(Of OperationContext).Detach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Detach(System::ServiceModel::OperationContext ^ owner) = System::ServiceModel::IExtension&lt;System::ServiceModel::OperationContext ^&gt;::Detach;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Detach : System.ServiceModel.OperationContext -&gt; unit&#xA;override this.System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Detach : System.ServiceModel.OperationContext -&gt; unit" Usage="discoveryOperationContextExtension.System.ServiceModel.IExtension&lt;System.ServiceModel.OperationContext&gt;.Detach owner" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.IExtension`1.Detach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="owner">要将扩展附加到的操作上下文。</param>
        <summary><see cref="M:System.ServiceModel.Discovery.DiscoveryOperationContextExtension.System#ServiceModel#IExtension{System#ServiceModel#OperationContext}#Detach(System.ServiceModel.OperationContext)" /> 方法的实现。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
