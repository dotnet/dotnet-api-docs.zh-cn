<Type Name="ClientRoleProvider" FullName="System.Web.ClientServices.Providers.ClientRoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0c90148c4c4e283aa2c5a0c1707d52b9fa0b77fe" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102060153" /></Metadata><TypeSignature Language="C#" Value="public class ClientRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.Providers.ClientRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type ClientRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>从 Microsoft Ajax 角色服务中获取基于 Windows 的应用程序的角色信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过将应用程序配置为使用类，可以使用客户端应用程序服务从现有角色服务中检索角色信息 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 。 配置后，可以通过调用 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 属性返回的的方法来确定经过身份验证的用户是否属于特定角色 <xref:System.Security.Principal.IPrincipal> `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 。 对于配置为使用客户端应用程序服务的应用程序，此属性会返回 <xref:System.Web.ClientServices.ClientRolePrincipal>。 因为此类实现 <xref:System.Security.Principal.IPrincipal> 接口，所以无需显式引用它。 <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType>方法在内部调用 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=nameWithType> 方法。  
  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider>类是一个只读角色成员资格提供程序，它从属性指示的角色服务中检索经过身份验证的用户的角色信息 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> 。 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>通常，从应用程序配置文件和其他配置值检索属性的值。 有关详细信息，请参阅[如何：配置客户端应用程序服务](/dotnet/framework/common-client-technologies/how-to-configure-client-application-services)。  
  
 您可以 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 通过属性检索当前实例 `static` <xref:System.Web.Security.Roles.Provider%2A?displayProperty=nameWithType> 。  
  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider>类仅支持 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> 抽象类的和方法 <xref:System.Web.Security.RoleProvider> 。 为特定用户调用这些方法之一时，服务提供程序将首先检查本地数据缓存中的角色信息。 如果缓存不包含任何角色信息或缓存已过期，则服务提供程序将从角色服务中检索角色信息，并将其添加到缓存中。  
  
 在配置客户端应用程序服务时，可以为角色缓存指定超时期限。 若要强制 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 方法从服务而不是本地缓存中检索角色数据，请先调用 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> 方法。  
  
 不能使用 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 类创建或删除角色，或修改用户的角色成员身份。 若要创建或修改角色信息，必须更改服务器上的角色服务配置。  
  
   
  
## Examples  
 下面的示例代码演示如何使用此属性以编程方式设置角色服务位置。  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Web.ClientServices.ClientRolePrincipal" />
    <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
    <altmember cref="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">如何：配置客户端应用程序服务</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="clientRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">未使用。</param>
        <param name="roleNames">未使用。</param>
        <summary>此类未使用此方法。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">始终引发。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此类未使用此属性。</summary>
        <value>提供程序的应用程序的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性不起作用。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="clientRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">未使用。</param>
        <summary>此类未使用此方法。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">始终引发。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="clientRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">未使用。</param>
        <param name="throwOnPopulatedRole">未使用。</param>
        <summary>此类未使用此方法。</summary>
        <returns>不适用。 此方法总是引发异常。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">始终引发。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="clientRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">未使用。</param>
        <param name="usernameToMatch">未使用。</param>
        <summary>此类未使用此方法。</summary>
        <returns>不适用。 此方法总是引发异常。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">始终引发。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="clientRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>此类未使用此方法。</summary>
        <returns>不适用。 此方法总是引发异常。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">始终引发。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="clientRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要检索其角色的用户的名称。</param>
        <summary>获取指定用户所属的角色的名称。</summary>
        <returns><paramref name="username" /> 所属的角色名称；如果用户未通过身份验证，则为一个空数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>方法检索当前经过身份验证的用户的角色信息，必须在参数中指定该信息 `username` 。 可以通过属性获取用户名称 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> ，如下所示： `Thread.CurrentPrincipal.Identity.Name` 。  
  
 服务提供程序会缓存有关本地文件系统的角色信息，以避免不必要的服务调用。 有关详细信息，请参阅 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 类概述。  
  
   
  
## Examples  
 下面的示例代码演示如何使用此方法在测试角色成员资格之前确定用户登录名是否已过期。 此代码假定所有有效用户都与一个或多个角色关联。 在这种情况下，该 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 方法将不会为其登录名已过期的以前经过身份验证的用户返回任何角色。 如果用户登录名已过期，则此代码将显示登录对话框。 否则，它会调用 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> 方法来确定用户是否为 "经理" 角色。 受限代码位于 `PerformManagerTask` 方法中，但未提供此方法。  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 是 <see cref="F:System.String.Empty" /> 或 <see langword="null" />。  
  
- 或 - 
 <paramref name="username" /> 不是当前通过身份验证的用户的用户名。</exception>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">如何：配置客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="clientRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">未使用。</param>
        <summary>此类未使用此方法。</summary>
        <returns>不适用。 此方法总是引发异常。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">始终引发。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="clientRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">提供程序的友好名称。</param>
        <param name="config">名称/值对的集合，表示在配置中为该提供程序指定的、特定于提供程序的特性。</param>
        <summary>初始化提供程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 扩展性模型调用 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize%2A> 方法以 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 使用应用程序配置文件中的信息初始化。 此方法可识别以下角色服务配置特性：  
  
-   `name`  
  
-   `description`  
  
-   `cacheTimeout`  
  
-   `connectionStringName`  
  
-   `serviceUri`  
  
-   `honorCookieExpiry`  
  
 有关这些属性的详细信息，请参阅 [如何：配置客户端应用程序服务](/dotnet/framework/common-client-technologies/how-to-configure-client-application-services)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="config" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 为空。  
  
- 或 - 
 <paramref name="config" /> 包含无法识别的值。</exception>
        <exception cref="T:System.InvalidOperationException">此 <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> 已初始化。</exception>
        <exception cref="T:System.FormatException"><paramref name="config" /> 包含的 <c>cacheTimeout</c> 值格式不正确，无法转换为 <see cref="T:System.Int32" /> 值。</exception>
        <exception cref="T:System.OverflowException"><paramref name="config" /> 包含的 <c>cacheTimeout</c> 值用于表示小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">如何：配置客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="clientRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">用户的名称。</param>
        <param name="roleName">角色的名称。</param>
        <summary>获取一个指示指定用户是否属于指定角色的值。</summary>
        <returns>如果指定用户处于指定的角色，则为 <see langword="true" />；如果指定用户未通过身份验证或者不处于指定的角色，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以通过调用 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 属性返回的的方法来确定经过身份验证的用户是否属于特定角色 <xref:System.Security.Principal.IPrincipal> `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 。 对于配置为使用客户端应用程序服务的应用程序，此属性会返回 <xref:System.Web.ClientServices.ClientRolePrincipal>。 因为此类实现 <xref:System.Security.Principal.IPrincipal> 接口，所以无需显式引用它。 <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType>方法在内部调用 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> 方法。 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>方法使用 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 方法来确定由指示的用户是否在由 `username` 指示的角色中 `roleName` 。  
  
 服务提供程序会缓存有关本地文件系统的角色信息，以避免不必要的服务调用。 有关详细信息，请参阅 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 类概述。  
  
   
  
## Examples  
 下面的示例代码演示如何直接访问此方法，以确定用户是否属于特定角色。 此代码首先测试用户登录名是否已过期。 需要显式 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 引用才能调用 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 方法，因此使用相同的引用来调用 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> 方法。 如果用户为 "经理" 角色，则此代码将调用 `PerformManagerTask` 未提供的方法。  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 是 <see cref="F:System.String.Empty" /> 或 <see langword="null" />。  
  
- 或 - 
 <paramref name="username" /> 不是当前通过身份验证的用户的用户名。</exception>
        <exception cref="T:System.Net.WebException">用户不再是通过身份验证的用户。  
  
 - 或 -  
  
 角色服务不可用。</exception>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Web.ClientServices.ClientRolePrincipal" />
        <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="clientRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">未使用。</param>
        <param name="roleNames">未使用。</param>
        <summary>此类未使用此方法。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">始终引发。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="ResetCache">
      <MemberSignature Language="C#" Value="public void ResetCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCache();" />
      <MemberSignature Language="F#" Value="member this.ResetCache : unit -&gt; unit" Usage="clientRoleProvider.ResetCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除缓存的角色信息并重置缓存的超时期限。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A>方法从本地缓存中移除所有角色信息，并导致缓存过期。 调用此方法后，下一次调用 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 或 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> 方法将从配置的角色服务而不是本地缓存中检索角色信息。  
  
 您可以使用此方法来使用户能够在角色发生更改但缓存尚未过期时刷新角色缓存。 有关如何设置角色缓存超时间隔的信息，请参阅 [如何：配置客户端应用程序服务](/dotnet/framework/common-client-technologies/how-to-configure-client-application-services)。  
  
   
  
## Examples  
 下面的示例代码演示如何使用此方法重置本地角色缓存。  
  
 [!code-csharp[ClientApplicationServices#314](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#314)]
 [!code-vb[ClientApplicationServices#314](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#314)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">如何：配置客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="clientRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">未使用。</param>
        <summary>此类未使用此方法。</summary>
        <returns>不适用。 此方法总是引发异常。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">始终引发。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
      </Docs>
    </Member>
    <Member MemberName="ServiceUri">
      <MemberSignature Language="C#" Value="public string ServiceUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceUri" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceUri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceUri : string with get, set" Usage="System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置角色服务的 URI。</summary>
        <value>角色服务 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> 在应用程序代码中设置属性，但通常会在应用程序配置文件中设置该值。 这样，便可以在不重新编译代码的情况下更改服务位置。 有关详细信息，请参阅[如何：配置客户端应用程序服务](/dotnet/framework/common-client-technologies/how-to-configure-client-application-services)。  
  
 以编程方式设置服务位置时，必须指定完整的服务 URI，该 URI 将始终以 "Role_JSON_AppService axd" 结尾。  
  
   
  
## Examples  
 下面的示例代码演示如何使用此属性以编程方式设置角色服务位置。  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">获取此属性时，未在应用程序配置文件中发现任何服务 URI，并且以前未设置过此属性。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">客户端应用程序服务</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">如何：配置客户端应用程序服务</related>
      </Docs>
    </Member>
  </Members>
</Type>
