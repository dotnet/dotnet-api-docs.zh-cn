<Type Name="VirtualFileBase" FullName="System.Web.Hosting.VirtualFileBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="96948c61a432f15d720e8bafe23ea8a235bc6363" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89899765" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualFileBase : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualFileBase extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualFileBase&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualFileBase abstract : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type VirtualFileBase = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5c2e2-101">提供 <see cref="T:System.Web.Hosting.VirtualFile" /> 和 <see cref="T:System.Web.Hosting.VirtualDirectory" /> 对象的核心实现。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-101">Provides the core implementation for the <see cref="T:System.Web.Hosting.VirtualFile" /> and <see cref="T:System.Web.Hosting.VirtualDirectory" /> objects.</span></span> <span data-ttu-id="5c2e2-102">一个抽象类，无法实例化。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-102">An abstract class, it cannot be instantiated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2e2-103"><xref:System.Web.Hosting.VirtualFileBase>抽象类提供和对象之间共享的公共方法和属性 <xref:System.Web.Hosting.VirtualFile> <xref:System.Web.Hosting.VirtualDirectory> 。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-103">The <xref:System.Web.Hosting.VirtualFileBase> abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects.</span></span> <span data-ttu-id="5c2e2-104">这些类的实现为 ASP.NET 运行时提供了对文件和用于编译的路径的访问。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-104">Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation.</span></span> <span data-ttu-id="5c2e2-105">有关使用虚拟文件和路径的详细信息，请参阅 <xref:System.Web.Hosting.VirtualPathProvider> 类。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-105">For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="5c2e2-106">从类继承时 <see cref="T:System.Web.Hosting.VirtualFileBase" /> ，必须重写 <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> 属性，以指示派生对象是虚拟目录还是虚拟文件。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-106">When you inherit from the <see cref="T:System.Web.Hosting.VirtualFileBase" /> class, you must override the <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> property to indicate whether the derived object is a virtual directory or a virtual file.</span></span> <span data-ttu-id="5c2e2-107">如果是从 <see cref="T:System.Web.Hosting.VirtualFile" /> 或类派生的 <see cref="T:System.Web.Hosting.VirtualDirectory" /> ，则 <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> 已设置该属性。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-107">If you derive from either the <see cref="T:System.Web.Hosting.VirtualFile" /> or the <see cref="T:System.Web.Hosting.VirtualDirectory" /> class, the <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> property is already set.</span></span></para></block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
    <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualFileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualFileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c2e2-108">初始化该类供继承的类实例使用。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-108">Initializes the class for use by an inherited class instance.</span></span> <span data-ttu-id="5c2e2-109">此构造函数只能由继承的类调用。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-109">This constructor can be called only by an inherited class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2e2-110">尽管不能直接构造类的实例 <xref:System.Web.Hosting.VirtualFileBase> ，但可以从继承类的构造函数调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-110">Although you cannot directly construct an instance of the <xref:System.Web.Hosting.VirtualFileBase> class, you can call this constructor from the constructor of an inheriting class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="virtualFileBase.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c2e2-111">通过禁止创建租约来给予 <see cref="T:System.Web.Hosting.VirtualFileBase" /> 实例无限的生存期。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-111">Gives a <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="5c2e2-112">总是为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-112">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2e2-113">此方法会重写 <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> 其基类上的方法。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-113">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method on its base class.</span></span> <span data-ttu-id="5c2e2-114">它始终返回 `null` ，从而阻止创建租约，这会限制虚拟文件或目录的生存期。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-114">It always returns `null` and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public abstract bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualFileBase.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c2e2-115">在派生类中重写时，获取指示 <see cref="T:System.Web.Hosting.VirtualFileBase" /> 实例表示的是虚拟文件还是虚拟目录的值。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-115">When overridden in a derived class, gets a value indicating whether the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance represents a virtual file or a virtual directory.</span></span></summary>
        <value><span data-ttu-id="5c2e2-116">如果 <see cref="T:System.Web.Hosting.VirtualFileBase" /> 实例是虚拟目录，则为 <see langword="true" />；如果 <see cref="T:System.Web.Hosting.VirtualFileBase" /> 实例是虚拟文件，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-116"><see langword="true" /> if the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance is a virtual directory; otherwise, <see langword="false" /> if the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance is a virtual file.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.Hosting.VirtualFileBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c2e2-117">获取虚拟资源的显示名称。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-117">Gets the display name of the virtual resource.</span></span></summary>
        <value><span data-ttu-id="5c2e2-118">虚拟文件的显示名称。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-118">The display name of the virtual file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2e2-119"><xref:System.Web.Hosting.VirtualFileBase.Name%2A>尽管虚拟资源可能使用任意名称，但属性通常是与资源关联的文件名和扩展名。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-119">The <xref:System.Web.Hosting.VirtualFileBase.Name%2A> property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5c2e2-120"><see cref="P:System.Web.Hosting.VirtualFileBase.Name" />属性应为虚拟路径提供程序返回虚拟资源的正确大小写。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-120">The <see cref="P:System.Web.Hosting.VirtualFileBase.Name" /> property should return the correct casing of the virtual resource for the virtual path provider.</span></span> <span data-ttu-id="5c2e2-121">正确的大小写可能不同于原始路径中的大小写。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-121">The correct casing may be different from the casing in the original path.</span></span></para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Hosting.VirtualFileBase.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c2e2-122">获取虚拟文件路径。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-122">Gets the virtual file path.</span></span></summary>
        <value><span data-ttu-id="5c2e2-123">虚拟文件的路径。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-123">The path to the virtual file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c2e2-124"><xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A>属性返回由此对象表示的文件或目录的路径。</span><span class="sxs-lookup"><span data-stu-id="5c2e2-124">The <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> property returns the path to the file or directory represented by this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
  </Members>
</Type>
