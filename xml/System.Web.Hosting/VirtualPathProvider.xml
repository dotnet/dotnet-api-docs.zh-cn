<Type Name="VirtualPathProvider" FullName="System.Web.Hosting.VirtualPathProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f93e75c030c0c052794e0ca463ee17ed16756327" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89816886" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualPathProvider : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualPathProvider extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualPathProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualPathProvider&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathProvider abstract : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type VirtualPathProvider = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b2d59-101">提供了一组方法，使 Web 应用程序可以从虚拟文件系统中检索资源。</span><span class="sxs-lookup"><span data-stu-id="b2d59-101">Provides a set of methods that enable a Web application to retrieve resources from a virtual file system.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-102"><xref:System.Web.Hosting.VirtualPathProvider>类提供一组方法，用于实现 Web 应用程序的虚拟文件系统。</span><span class="sxs-lookup"><span data-stu-id="b2d59-102">The <xref:System.Web.Hosting.VirtualPathProvider> class provides a set of methods for implementing a virtual file system for a Web application.</span></span> <span data-ttu-id="b2d59-103">在虚拟文件系统中，文件和目录由服务器操作系统所提供的文件系统以外的数据存储管理。</span><span class="sxs-lookup"><span data-stu-id="b2d59-103">In a virtual file system, the files and directories are managed by a data store other than the file system provided by the server's operating system.</span></span> <span data-ttu-id="b2d59-104">例如，可以使用虚拟文件系统将内容存储在 SQL Server 数据库中。</span><span class="sxs-lookup"><span data-stu-id="b2d59-104">For example, you can use a virtual file system to store content in a SQL Server database.</span></span>  
  
 <span data-ttu-id="b2d59-105">可以存储在虚拟文件系统中按请求处理的任何文件。</span><span class="sxs-lookup"><span data-stu-id="b2d59-105">You can store any file that is processed on request in a virtual file system.</span></span> <span data-ttu-id="b2d59-106">这包括：</span><span class="sxs-lookup"><span data-stu-id="b2d59-106">This includes:</span></span>  
  
-   <span data-ttu-id="b2d59-107">ASP.NET 页、母版页、用户控件和其他对象。</span><span class="sxs-lookup"><span data-stu-id="b2d59-107">ASP.NET pages, master pages, user controls, and other objects.</span></span>  
  
-   <span data-ttu-id="b2d59-108">扩展名为 .htm 和 .jpg 的标准网页。</span><span class="sxs-lookup"><span data-stu-id="b2d59-108">Standard Web pages with extensions such as .htm and .jpg.</span></span>  
  
-   <span data-ttu-id="b2d59-109">映射到实例的任何自定义扩展 <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-109">Any custom extension mapped to a <xref:System.Web.Compilation.BuildProvider> instance.</span></span>  
  
-   <span data-ttu-id="b2d59-110">文件夹中的任何命名主题 `App_Theme` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-110">Any named theme in the `App_Theme` folder.</span></span>  
  
 <span data-ttu-id="b2d59-111">不能将 ASP.NET 应用程序文件夹或文件存储在虚拟文件系统中。</span><span class="sxs-lookup"><span data-stu-id="b2d59-111">You cannot store ASP.NET application folders or files that generate application-level assemblies in a virtual file system.</span></span> <span data-ttu-id="b2d59-112">这包括：</span><span class="sxs-lookup"><span data-stu-id="b2d59-112">This includes:</span></span>  
  
-   <span data-ttu-id="b2d59-113">Global.asax 文件。</span><span class="sxs-lookup"><span data-stu-id="b2d59-113">The Global.asax file.</span></span>  
  
-   <span data-ttu-id="b2d59-114">Web.config 文件。</span><span class="sxs-lookup"><span data-stu-id="b2d59-114">Web.config files.</span></span>  
  
-   <span data-ttu-id="b2d59-115">使用的站点地图数据文件 <xref:System.Web.XmlSiteMapProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-115">Site map data files used by the <xref:System.Web.XmlSiteMapProvider>.</span></span>  
  
-   <span data-ttu-id="b2d59-116">包含应用程序程序集或生成应用程序程序集的目录： `Bin` 、 `App_Code` 、 `App_GlobalResources` 、any `App_LocalResources` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-116">Directories that contain application assemblies or that generate application assemblies: `Bin`, `App_Code`, `App_GlobalResources`, any `App_LocalResources`.</span></span>  
  
-   <span data-ttu-id="b2d59-117">应用程序数据文件夹 `App_Data` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-117">The application data folder, `App_Data`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b2d59-118">如果为部署预编译了某个网站， <xref:System.Web.Hosting.VirtualPathProvider> 则不会编译实例提供的内容，并且 <xref:System.Web.Hosting.VirtualPathProvider> 预编译的站点不使用任何实例。</span><span class="sxs-lookup"><span data-stu-id="b2d59-118">If a Web site is precompiled for deployment, content provided by a <xref:System.Web.Hosting.VirtualPathProvider> instance is not compiled, and no <xref:System.Web.Hosting.VirtualPathProvider> instances are used by the precompiled site.</span></span>  
  
## <a name="registering-a-virtualpathprovider"></a><span data-ttu-id="b2d59-119">注册 VirtualPathProvider</span><span class="sxs-lookup"><span data-stu-id="b2d59-119">Registering a VirtualPathProvider</span></span>  
 <span data-ttu-id="b2d59-120">自定义 <xref:System.Web.Hosting.VirtualPathProvider> 实例应通过使用 <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=nameWithType> 方法在 Web 应用程序执行任何页面分析或编译之前，使用方法在 ASP.NET 编译系统中进行注册。</span><span class="sxs-lookup"><span data-stu-id="b2d59-120">A custom <xref:System.Web.Hosting.VirtualPathProvider> instance should be registered with the ASP.NET compilation system by using the <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=nameWithType> method before any page parsing or compilation is performed by the Web application.</span></span>  
  
 <span data-ttu-id="b2d59-121">通常情况下， <xref:System.Web.Hosting.VirtualPathProvider> 会在目录中 `AppInitialize` 定义的方法中 `App_Code` 或在文件中的事件过程中注册实例 `Application_Start` `Global.asax` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-121">Typically, a <xref:System.Web.Hosting.VirtualPathProvider> instance is registered in an `AppInitialize` method defined in the `App_Code` directory, or during the `Application_Start` event in the `Global.asax` file.</span></span> <span data-ttu-id="b2d59-122">有关 <xref:System.Web.Hosting.VirtualPathProvider> 在方法中注册实例的示例 `AppInitialize` ，请参见 "示例" 部分。</span><span class="sxs-lookup"><span data-stu-id="b2d59-122">For an example of registering a <xref:System.Web.Hosting.VirtualPathProvider> instance in an `AppInitialize` method, see the Example section.</span></span>  
  
 <span data-ttu-id="b2d59-123">你可以 <xref:System.Web.Hosting.VirtualPathProvider> 在其他事件期间注册实例，但在注册实例之前编译和缓存的页 <xref:System.Web.Hosting.VirtualPathProvider> 将不会失效，即使新的 <xref:System.Web.Hosting.VirtualPathProvider> 实例现在将为先前编译的页提供源也是如此。</span><span class="sxs-lookup"><span data-stu-id="b2d59-123">You can register a <xref:System.Web.Hosting.VirtualPathProvider> instance during other events, but pages compiled and cached before the <xref:System.Web.Hosting.VirtualPathProvider> instance is registered will not be invalidated, even if the new <xref:System.Web.Hosting.VirtualPathProvider> instance would now provide the source for the previously compiled page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2d59-124">下面的代码示例是一个 <xref:System.Web.Hosting.VirtualPathProvider> 类实现，它使用存储在对象中的信息创建虚拟文件系统 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-124">The following code example is a <xref:System.Web.Hosting.VirtualPathProvider> class implementation that creates a virtual file system using information stored in a <xref:System.Data.DataSet> object.</span></span> <span data-ttu-id="b2d59-125">此代码示例使用和类的代码示例， <xref:System.Web.Hosting.VirtualFile> <xref:System.Web.Hosting.VirtualDirectory> 以从加载到对象的数据存储区中提供虚拟资源 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-125">The code example works with the code examples for the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> classes to provide virtual resources from a data store that is loaded into a <xref:System.Data.DataSet> object.</span></span>  
  
 <span data-ttu-id="b2d59-126">此示例包含四个部分： <xref:System.Web.Hosting.VirtualPathProvider> 类实现、用于填充对象的 XML 数据文件 <xref:System.Data.DataSet> 、 `AppStart` 包含 `AppInitialize` 用于向编译系统注册该类的方法的对象， <xref:System.Web.Hosting.VirtualPathProvider> 以及提供指向虚拟文件的链接的 ASP.NET 页。</span><span class="sxs-lookup"><span data-stu-id="b2d59-126">This example has four parts: the <xref:System.Web.Hosting.VirtualPathProvider> class implementation, an XML data file used to populate the <xref:System.Data.DataSet> object, an `AppStart` object that contains an `AppInitialize` method used to register the <xref:System.Web.Hosting.VirtualPathProvider> class with the compilation system, and an ASP.NET page that provides links to the virtual files.</span></span>  
  
 <span data-ttu-id="b2d59-127">若要在应用程序中使用此示例代码，请执行以下步骤。</span><span class="sxs-lookup"><span data-stu-id="b2d59-127">To use this sample code in an application, follow these steps.</span></span>  
  
1.  <span data-ttu-id="b2d59-128">在 Web 服务器上创建一个示例应用程序。</span><span class="sxs-lookup"><span data-stu-id="b2d59-128">Create a sample application on your Web server.</span></span>  
  
2.  <span data-ttu-id="b2d59-129">复制自定义对象的源代码 <xref:System.Web.Hosting.VirtualPathProvider> (参阅下面) 到应用程序目录中的文件 `App_Code` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-129">Copy the source code for the custom <xref:System.Web.Hosting.VirtualPathProvider> object (see below) into a file in the application's `App_Code` directory.</span></span>  
  
3.  <span data-ttu-id="b2d59-130">复制自定义对象的源代码 <xref:System.Web.Hosting.VirtualDirectory> (参阅类概述主题中的 "示例" 部分 <xref:System.Web.Hosting.VirtualDirectory>) 到应用程序目录中的文件 `App_Code` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-130">Copy the source code for the custom <xref:System.Web.Hosting.VirtualDirectory> object (see the Example section in the <xref:System.Web.Hosting.VirtualDirectory> class overview topic) into a file in the application's `App_Code` directory.</span></span>  
  
4.  <span data-ttu-id="b2d59-131">复制自定义对象的源代码 <xref:System.Web.Hosting.VirtualFile> (参阅类概述主题中的 "示例" 部分 <xref:System.Web.Hosting.VirtualFile>) 到应用程序目录中的文件 `App_Code` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-131">Copy the source code for the custom <xref:System.Web.Hosting.VirtualFile> object (see the Example section in the <xref:System.Web.Hosting.VirtualFile> class overview topic) into a file in the application's `App_Code` directory.</span></span>  
  
5.  <span data-ttu-id="b2d59-132">复制对象的源代码 `AppStart` (参阅下面) 到应用程序目录中的文件 `App_Code` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-132">Copy the source code for the `AppStart` object (see below) into a file in the application's `App_Code` directory.</span></span>  
  
6.  <span data-ttu-id="b2d59-133">将 XML 数据 (如下) 中的文件复制到 `XMLData.xml` 应用程序目录中的文件 `App_Data` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-133">Copy the XML data (see below) into a file named `XMLData.xml` into a file in the application's `App_Data` directory.</span></span>  
  
7.  <span data-ttu-id="b2d59-134">将 `default.aspx` 下面)  (的文件复制到示例应用程序的根目录中。</span><span class="sxs-lookup"><span data-stu-id="b2d59-134">Copy the `default.aspx` file (see below) into the root directory of the sample application.</span></span> <span data-ttu-id="b2d59-135">使用 Web 浏览器打开 `default.aspx` 文件，然后单击页面上的链接以查看虚拟文件的内容。</span><span class="sxs-lookup"><span data-stu-id="b2d59-135">Use a Web browser to open the `default.aspx` file, and then click the links on the page to see the contents of the virtual files.</span></span>  
  
 <span data-ttu-id="b2d59-136">第一个示例是自定义 <xref:System.Web.Hosting.VirtualPathProvider> 类。</span><span class="sxs-lookup"><span data-stu-id="b2d59-136">The first example is a custom <xref:System.Web.Hosting.VirtualPathProvider> class.</span></span> <span data-ttu-id="b2d59-137"><xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> 重写和方法，以指示请求的目录是否存在于虚拟文件系统中。</span><span class="sxs-lookup"><span data-stu-id="b2d59-137">The <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> and <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> methods are overridden to indicate whether a requested directory is present in the virtual file system.</span></span> <span data-ttu-id="b2d59-138"><xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> 重写和方法，以返回 <xref:System.Web.Hosting.VirtualDirectory> <xref:System.Web.Hosting.VirtualFile> 包含虚拟文件系统中的信息的自定义和实例。</span><span class="sxs-lookup"><span data-stu-id="b2d59-138">The <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> and <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> methods are overridden to return custom <xref:System.Web.Hosting.VirtualDirectory> and <xref:System.Web.Hosting.VirtualFile> instances containing information from the virtual file system.</span></span>  
  
 <span data-ttu-id="b2d59-139">类还提供了 `GetVirtualData` <xref:System.Web.Hosting.VirtualDirectory> 和 <xref:System.Web.Hosting.VirtualFile> 类用于访问 <xref:System.Data.DataSet> 包含虚拟文件系统数据的对象的方法。</span><span class="sxs-lookup"><span data-stu-id="b2d59-139">The class also provides a `GetVirtualData` method used by the <xref:System.Web.Hosting.VirtualDirectory> and <xref:System.Web.Hosting.VirtualFile> classes to access the <xref:System.Data.DataSet> object containing the virtual file system data.</span></span> <span data-ttu-id="b2d59-140">在生产实现中，通常会在负责与数据存储区交互的业务对象中实现此方法。</span><span class="sxs-lookup"><span data-stu-id="b2d59-140">In a production implementation, this method would typically be implemented in a business object responsible for interacting with the data store.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#20)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#20)]  
  
 <span data-ttu-id="b2d59-141">第二个示例是用于填充 <xref:System.Data.DataSet> 自定义对象返回的对象的 XML 数据文件 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-141">The second example is the XML data file used to populate the <xref:System.Data.DataSet> object returned by the custom <xref:System.Web.Hosting.VirtualPathProvider> object.</span></span> <span data-ttu-id="b2d59-142">此 XML 数据用于演示 <xref:System.Web.Hosting.VirtualPathProvider> 如何使用、 <xref:System.Web.Hosting.VirtualDirectory> 和 <xref:System.Web.Hosting.VirtualFile> 对象从外部数据中检索数据，而不用于表示生产质量的数据存储区。</span><span class="sxs-lookup"><span data-stu-id="b2d59-142">This XML data is used to demonstrate using the <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualDirectory>, and <xref:System.Web.Hosting.VirtualFile> objects to retrieve data from external data and is not intended to represent a production-quality data store.</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
    path="/vrDir/Level2DirB"   
    parentPath="/vrDir"   
    content="">  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 <span data-ttu-id="b2d59-143">第三个示例提供一个 `AppStart` 包含方法的对象 `AppInitialize` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-143">The third example provides an `AppStart` object that contains an `AppInitialize` method.</span></span> <span data-ttu-id="b2d59-144">此方法在 ASP.NET 应用程序的初始化过程中调用，以执行所需的任何自定义初始化。</span><span class="sxs-lookup"><span data-stu-id="b2d59-144">This method is called during the initialization of an ASP.NET application to perform any custom initialization required.</span></span> <span data-ttu-id="b2d59-145">在这种情况下，它会 <xref:System.Web.Hosting.VirtualPathProvider> 向 ASP.NET 生成系统注册自定义对象。</span><span class="sxs-lookup"><span data-stu-id="b2d59-145">In this case, it registers the custom <xref:System.Web.Hosting.VirtualPathProvider> object with the ASP.NET build system.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#10)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#10)]  
  
 <span data-ttu-id="b2d59-146">最后一个示例是一个 ASP.NET 页面，其中包含指向虚拟文件系统中包含的虚拟文件的链接。</span><span class="sxs-lookup"><span data-stu-id="b2d59-146">The last example is an ASP.NET page that contains links to the virtual files contained in the virtual file system.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="b2d59-147">当从继承时 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> ，必须重写以下成员：</span><span class="sxs-lookup"><span data-stu-id="b2d59-147">When you inherit from <see cref="T:System.Web.Hosting.VirtualPathProvider" />, you must override the following members:</span></span> 
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />  
  
<span data-ttu-id="b2d59-148">如果自定义 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 类支持虚拟文件系统中的目录，则必须重写以下成员。</span><span class="sxs-lookup"><span data-stu-id="b2d59-148">If your custom <see cref="T:System.Web.Hosting.VirtualPathProvider" /> class supports directories in the virtual file system, you must override the following members.</span></span>  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" /><block subset="none" type="note"><para>  
      <span data-ttu-id="b2d59-149">如果虚拟文件系统将包含网站 (通过创建虚拟 <c>App_Themes</c> 目录) 的主题，则您的自定义 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 类必须支持目录。</span><span class="sxs-lookup"><span data-stu-id="b2d59-149">If your virtual file system will contain themes for the Web site (by creating a virtual <c>App_Themes</c> directory), your custom <see cref="T:System.Web.Hosting.VirtualPathProvider" /> class must support directories.</span></span>
    </para></block>  
  
    <span data-ttu-id="b2d59-150">自定义 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 类适用于从和类派生的类 <see cref="T:System.Web.Hosting.VirtualFile" /> <see cref="T:System.Web.Hosting.VirtualDirectory" /> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-150">A custom <see cref="T:System.Web.Hosting.VirtualPathProvider" /> class works with classes derived from the <see cref="T:System.Web.Hosting.VirtualFile" /> and <see cref="T:System.Web.Hosting.VirtualDirectory" /> classes.</span></span> <span data-ttu-id="b2d59-151">你应从这些类型实现派生类，以提供虚拟文件系统中的文件和目录信息。</span><span class="sxs-lookup"><span data-stu-id="b2d59-151">You should implement derived classes from these types to provide file and directory information from your virtual file system.</span></span> <span data-ttu-id="b2d59-152">有关自定义实现的示例 <see cref="T:System.Web.Hosting.VirtualFile" /> ，请参阅类概述主题的 "示例" 部分 <see cref="T:System.Web.Hosting.VirtualFile" /> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-152">For an example of a custom <see cref="T:System.Web.Hosting.VirtualFile" /> implementation, see the Example section of the <see cref="T:System.Web.Hosting.VirtualFile" /> class overview topic.</span></span> <span data-ttu-id="b2d59-153">有关自定义实现的示例 <see cref="T:System.Web.Hosting.VirtualDirectory" /> ，请参阅类概述主题的 "示例" 部分 <see cref="T:System.Web.Hosting.VirtualDirectory" /> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-153">For an example of a custom <see cref="T:System.Web.Hosting.VirtualDirectory" /> implementation, see the Example section of the <see cref="T:System.Web.Hosting.VirtualDirectory" /> class overview topic.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualPathProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualPathProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2d59-154">初始化该类供继承的类实例使用。</span><span class="sxs-lookup"><span data-stu-id="b2d59-154">Initializes the class for use by an inherited class instance.</span></span> <span data-ttu-id="b2d59-155">此构造函数只能由继承的类调用。</span><span class="sxs-lookup"><span data-stu-id="b2d59-155">This constructor can be called only by an inherited class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-156">当重写 <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> 构造函数时，延迟在将 <xref:System.Web.Hosting.VirtualPathProvider> 对象注册到方法之后必须发生的任何初始化 <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-156">When overriding the <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> constructor, defer any initialization that must occur after the <xref:System.Web.Hosting.VirtualPathProvider> object is registered to the <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2d59-157">下面的代码示例是 <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> 初始化自定义类的构造函数的实现 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-157">The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> constructor that initializes a custom <xref:System.Web.Hosting.VirtualPathProvider> class.</span></span> <span data-ttu-id="b2d59-158">有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-158">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#25)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineVirtualPaths">
      <MemberSignature Language="C#" Value="public virtual string CombineVirtualPaths (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CombineVirtualPaths(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CombineVirtualPaths (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CombineVirtualPaths(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="abstract member CombineVirtualPaths : string * string -&gt; string&#xA;override this.CombineVirtualPaths : string * string -&gt; string" Usage="virtualPathProvider.CombineVirtualPaths (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath"><span data-ttu-id="b2d59-159">应用程序的基路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-159">The base path for the application.</span></span></param>
        <param name="relativePath"><span data-ttu-id="b2d59-160">虚拟资源相对于基路径的路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-160">The path to the virtual resource, relative to the base path.</span></span></param>
        <summary><span data-ttu-id="b2d59-161">将基路径与相对路径组合，以返回某虚拟资源的完整路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-161">Combines a base path with a relative path to return a complete path to a virtual resource.</span></span></summary>
        <returns><span data-ttu-id="b2d59-162">虚拟资源的完整路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-162">The complete path to a virtual resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-163">使用 <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> 方法检查虚拟资源的相对路径的内容，并执行所需的任何修改。</span><span class="sxs-lookup"><span data-stu-id="b2d59-163">Use the <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> method to inspect the contents of a relative path to a virtual resource and perform any modifications required.</span></span>  
  
 <span data-ttu-id="b2d59-164">默认实现 `basePath` `relativePath` 根据标准 ASP.NET 路径处理组合和参数。</span><span class="sxs-lookup"><span data-stu-id="b2d59-164">The default implementation combines the `basePath` and `relativePath` parameters according to standard ASP.NET path processing.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b2d59-165">如果重写方法的默认实现 <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> ，则需要将具有参数的任何特殊语法转换 <paramref name="relativePath" /> 为有效的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-165">If you override the default implementation of the <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> method, you are required to convert any special syntax with the <paramref name="relativePath" /> parameter to a valid virtual path.</span></span> <span data-ttu-id="b2d59-166">你需要负责语法检查、路径验证和处理格式不正确的输入，以及适用于格式正确输入的边缘事例。</span><span class="sxs-lookup"><span data-stu-id="b2d59-166">You are responsible for syntax checking, path validation, and handling malformed input, as well as edge cases for well-formed input.</span></span>  
  
<span data-ttu-id="b2d59-167">在大多数情况下，不需要重写默认 <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="b2d59-167">In most cases it will not be necessary to override the default <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> method.</span></span> <span data-ttu-id="b2d59-168">但是，如果确实需要修改路径，建议限制 <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> 实现，以在参数中修改特定于虚拟路径提供程序的标记 <paramref name="relativeUrl" /> ，然后调用基实现以执行正常的 ASP.NET 路径处理</span><span class="sxs-lookup"><span data-stu-id="b2d59-168">However, if you do need to modify the path, we recommend that you limit your <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> implementation to modifying tokens specific to your virtual path provider in the <paramref name="relativeUrl" /> parameter, and that you then call the base implementation to perform normal ASP.NET path processing</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public virtual bool DirectoryExists (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DirectoryExists(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DirectoryExists (virtualDir As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DirectoryExists(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member DirectoryExists : string -&gt; bool&#xA;override this.DirectoryExists : string -&gt; bool" Usage="virtualPathProvider.DirectoryExists virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir"><span data-ttu-id="b2d59-169">虚拟目录的路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-169">The path to the virtual directory.</span></span></param>
        <summary><span data-ttu-id="b2d59-170">获取一个值，该值指示目录是否存在于虚拟文件系统中。</span><span class="sxs-lookup"><span data-stu-id="b2d59-170">Gets a value that indicates whether a directory exists in the virtual file system.</span></span></summary>
        <returns><span data-ttu-id="b2d59-171">如果该目录存在于虚拟文件系统中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b2d59-171"><see langword="true" /> if the directory exists in the virtual file system; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-172">重写 <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> 方法，以向编译系统指示所表示的资源 `virtualDir` 存在于此实例提供的虚拟文件系统中 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-172">Override the <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> method to indicate to the compilation system that the resource represented by `virtualDir` exists in the virtual file system provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance.</span></span>  
  
 <span data-ttu-id="b2d59-173">如果自定义 <xref:System.Web.Hosting.VirtualPathProvider> 类不支持目录，则该 <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> 方法应返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-173">If your custom <xref:System.Web.Hosting.VirtualPathProvider> class does not support directories, the <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> method should return `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b2d59-174">如果虚拟文件系统将包含网站 (通过创建虚拟目录) 的主题，则 `App_Themes` 您的自定义 <xref:System.Web.Hosting.VirtualPathProvider> 类必须支持目录。</span><span class="sxs-lookup"><span data-stu-id="b2d59-174">If your virtual file system will contain themes for the Web site (by creating a virtual `App_Themes` directory), your custom <xref:System.Web.Hosting.VirtualPathProvider> class must support directories.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2d59-175">下面的代码示例是 <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> 自定义类中方法的实现 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-175">The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class.</span></span> <span data-ttu-id="b2d59-176">有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-176">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#22)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public virtual bool FileExists (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FileExists(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FileExists (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool FileExists(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member FileExists : string -&gt; bool&#xA;override this.FileExists : string -&gt; bool" Usage="virtualPathProvider.FileExists virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="b2d59-177">虚拟文件的路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-177">The path to the virtual file.</span></span></param>
        <summary><span data-ttu-id="b2d59-178">获取一个值，该值指示文件是否存在于虚拟文件系统中。</span><span class="sxs-lookup"><span data-stu-id="b2d59-178">Gets a value that indicates whether a file exists in the virtual file system.</span></span></summary>
        <returns><span data-ttu-id="b2d59-179">如果该文件存在于虚拟文件系统中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b2d59-179"><see langword="true" /> if the file exists in the virtual file system; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-180">重写 <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> 方法，以向编译系统指示所表示的资源 `virtualPath` 存在于此实例提供的虚拟文件系统中 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-180">Override the <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> method to indicate to the compilation system that the resource represented by `virtualPath` exists in the virtual file system provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2d59-181">下面的代码示例是 <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> 自定义类中方法的实现 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-181">The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class.</span></span> <span data-ttu-id="b2d59-182">有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-182">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#21)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheDependency">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Caching.CacheDependency GetCacheDependency(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies, valuetype System.DateTime utcStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheDependency (virtualPath As String, virtualPathDependencies As IEnumerable, utcStart As DateTime) As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Caching::CacheDependency ^ GetCacheDependency(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency&#xA;override this.GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="virtualPathProvider.GetCacheDependency (virtualPath, virtualPathDependencies, utcStart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
        <Parameter Name="utcStart" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="b2d59-183">主虚拟资源的路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-183">The path to the primary virtual resource.</span></span></param>
        <param name="virtualPathDependencies"><span data-ttu-id="b2d59-184">一个路径数组，路径指向主要虚拟资源需要的其他资源。</span><span class="sxs-lookup"><span data-stu-id="b2d59-184">An array of paths to other resources required by the primary virtual resource.</span></span></param>
        <param name="utcStart"><span data-ttu-id="b2d59-185">虚拟资源被读取的 UTC 时间。</span><span class="sxs-lookup"><span data-stu-id="b2d59-185">The UTC time at which the virtual resources were read.</span></span></param>
        <summary><span data-ttu-id="b2d59-186">基于指定的虚拟路径创建一个缓存依赖项。</span><span class="sxs-lookup"><span data-stu-id="b2d59-186">Creates a cache dependency based on the specified virtual paths.</span></span></summary>
        <returns><span data-ttu-id="b2d59-187">指定虚拟资源的 <see cref="T:System.Web.Caching.CacheDependency" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b2d59-187">A <see cref="T:System.Web.Caching.CacheDependency" /> object for the specified virtual resources.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-188">方法的默认实现 <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> 返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-188">The default implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method returns `null`.</span></span> <span data-ttu-id="b2d59-189">若要缓存虚拟资源以供以后使用，必须重写 <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> 方法或 <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b2d59-189">To cache virtual resources for later use you must override either the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method or the <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2d59-190">下面的代码示例实现 <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> 自定义类的方法 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-190">The following code example implements the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method for a custom <xref:System.Web.Hosting.VirtualPathProvider> class.</span></span> <span data-ttu-id="b2d59-191">有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-191">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#28)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheKey">
      <MemberSignature Language="C#" Value="public virtual string GetCacheKey (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCacheKey(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheKey (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCacheKey(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheKey : string -&gt; string&#xA;override this.GetCacheKey : string -&gt; string" Usage="virtualPathProvider.GetCacheKey virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="b2d59-192">虚拟资源的路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-192">The path to the virtual resource.</span></span></param>
        <summary><span data-ttu-id="b2d59-193">返回一个用于指定虚拟路径的缓存键。</span><span class="sxs-lookup"><span data-stu-id="b2d59-193">Returns a cache key to use for the specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="b2d59-194">所指定虚拟资源的缓存键。</span><span class="sxs-lookup"><span data-stu-id="b2d59-194">A cache key for the specified virtual resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-195">使用 <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> 方法为虚拟资源提供自定义缓存键。</span><span class="sxs-lookup"><span data-stu-id="b2d59-195">Use the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method to provide a custom cache key for virtual resources.</span></span> <span data-ttu-id="b2d59-196">如果不重写 <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> 方法，则将虚拟路径用于缓存键。</span><span class="sxs-lookup"><span data-stu-id="b2d59-196">If you do not override the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method, the virtual path is used for the cache key.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b2d59-197"><see cref="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />如果基于虚拟路径创建缓存密钥，则仅重写默认方法对于应用程序不起作用。</span><span class="sxs-lookup"><span data-stu-id="b2d59-197">Only override the default <see cref="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" /> method if creating a cache key based on the virtual path will not work for your application.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualDirectory GetDirectory(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectory (virtualDir As String) As VirtualDirectory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualDirectory ^ GetDirectory(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory&#xA;override this.GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="virtualPathProvider.GetDirectory virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualDirectory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir"><span data-ttu-id="b2d59-198">虚拟目录的路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-198">The path to the virtual directory.</span></span></param>
        <summary><span data-ttu-id="b2d59-199">从虚拟文件系统中获取一个虚拟目录。</span><span class="sxs-lookup"><span data-stu-id="b2d59-199">Gets a virtual directory from the virtual file system.</span></span></summary>
        <returns><span data-ttu-id="b2d59-200"><see cref="T:System.Web.Hosting.VirtualDirectory" /> 类的子代，表示虚拟文件系统中的一个目录。</span><span class="sxs-lookup"><span data-stu-id="b2d59-200">A descendent of the <see cref="T:System.Web.Hosting.VirtualDirectory" /> class that represents a directory in the virtual file system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-201"><xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A>方法返回 <xref:System.Web.Hosting.VirtualDirectory> 类的子代，该类包含参数中指定的目录中包含的文件和目录 `virtualDir` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-201">The <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> method returns a descendent of the <xref:System.Web.Hosting.VirtualDirectory> class that contains the file and directories contained in the directory specified in the `virtualDir` parameter.</span></span>  
  
 <span data-ttu-id="b2d59-202">如果自定义 <xref:System.Web.Hosting.VirtualPathProvider> 类不支持目录，则该 <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> 方法应返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-202">If your custom <xref:System.Web.Hosting.VirtualPathProvider> class does not support directories, the <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> method should return `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b2d59-203">如果虚拟文件系统将包含网站 (通过创建虚拟目录) 的主题，则 `App_Themes` 您的自定义 <xref:System.Web.Hosting.VirtualPathProvider> 类必须支持目录。</span><span class="sxs-lookup"><span data-stu-id="b2d59-203">If your virtual file system will contain themes for the Web site (by creating a virtual `App_Themes` directory), your custom <xref:System.Web.Hosting.VirtualPathProvider> class must support directories.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2d59-204">下面的代码示例是 <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> 自定义类中方法的实现 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-204">The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class.</span></span> <span data-ttu-id="b2d59-205">有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-205">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#24)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualFile GetFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (virtualPath As String) As VirtualFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualFile ^ GetFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.Web.Hosting.VirtualFile&#xA;override this.GetFile : string -&gt; System.Web.Hosting.VirtualFile" Usage="virtualPathProvider.GetFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="b2d59-206">虚拟文件的路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-206">The path to the virtual file.</span></span></param>
        <summary><span data-ttu-id="b2d59-207">从虚拟文件系统中获取一个虚拟文件。</span><span class="sxs-lookup"><span data-stu-id="b2d59-207">Gets a virtual file from the virtual file system.</span></span></summary>
        <returns><span data-ttu-id="b2d59-208"><see cref="T:System.Web.Hosting.VirtualFile" /> 类的子代，该子代表示虚拟文件系统中的一个文件。</span><span class="sxs-lookup"><span data-stu-id="b2d59-208">A descendent of the <see cref="T:System.Web.Hosting.VirtualFile" /> class that represents a file in the virtual file system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-209"><xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A>方法返回 <xref:System.Web.Hosting.VirtualFile> 类的子代，该类表示参数指定的文件 `virtualPath` 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-209">The <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> method returns a descendent of the <xref:System.Web.Hosting.VirtualFile> class that represents the file specified by the `virtualPath` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2d59-210">下面的代码示例是 <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> 自定义类中方法的实现 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-210">The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class.</span></span> <span data-ttu-id="b2d59-211">有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-211">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileHash">
      <MemberSignature Language="C#" Value="public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFileHash(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileHash (virtualPath As String, virtualPathDependencies As IEnumerable) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFileHash(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies);" />
      <MemberSignature Language="F#" Value="abstract member GetFileHash : string * System.Collections.IEnumerable -&gt; string&#xA;override this.GetFileHash : string * System.Collections.IEnumerable -&gt; string" Usage="virtualPathProvider.GetFileHash (virtualPath, virtualPathDependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="b2d59-212">主虚拟资源的路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-212">The path to the primary virtual resource.</span></span></param>
        <param name="virtualPathDependencies"><span data-ttu-id="b2d59-213">一个路径数组，所包含的路径指向主要虚拟资源需要的其他虚拟资源。</span><span class="sxs-lookup"><span data-stu-id="b2d59-213">An array of paths to other virtual resources required by the primary virtual resource.</span></span></param>
        <summary><span data-ttu-id="b2d59-214">返回指定虚拟路径的哈希值。</span><span class="sxs-lookup"><span data-stu-id="b2d59-214">Returns a hash of the specified virtual paths.</span></span></summary>
        <returns><span data-ttu-id="b2d59-215">指定虚拟路径的哈希值。</span><span class="sxs-lookup"><span data-stu-id="b2d59-215">A hash of the specified virtual paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-216">使用 <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> 方法可提供虚拟文件系统资源的依赖项哈希。</span><span class="sxs-lookup"><span data-stu-id="b2d59-216">Use the <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> method to provide a hash of the dependencies for a virtual-file-system resource.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="virtualPathProvider.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2d59-217">初始化 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b2d59-217">Initializes the <see cref="T:System.Web.Hosting.VirtualPathProvider" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-218"><xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A>向 ASP.NET 编译系统注册提供程序后，将调用方法。</span><span class="sxs-lookup"><span data-stu-id="b2d59-218">The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is called after the provider is registered with the ASP.NET compilation system.</span></span> <span data-ttu-id="b2d59-219"><xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A>方法用于提供将 <xref:System.Web.Hosting.VirtualPathProvider> 实例置于应用程序所占用的环境中后所需的任何初始化。</span><span class="sxs-lookup"><span data-stu-id="b2d59-219">The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is used to provide any initialization required after the <xref:System.Web.Hosting.VirtualPathProvider> instance is placed into the environment the application occupies.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2d59-220">下面的代码示例是 <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> 从应用程序的实例设置数据文件路径的方法的实现 <xref:System.Web.Hosting.HostingEnvironment> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-220">The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method that sets the path to a data file from the application's <xref:System.Web.Hosting.HostingEnvironment> instance.</span></span> <span data-ttu-id="b2d59-221">有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-221">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#26)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="virtualPathProvider.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2d59-222">通过阻止创建租约给予 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 对象无限的生存期。</span><span class="sxs-lookup"><span data-stu-id="b2d59-222">Gives the <see cref="T:System.Web.Hosting.VirtualPathProvider" /> object an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="b2d59-223">总是为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b2d59-223">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-224">此方法会重写 <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> 其基类中的方法。</span><span class="sxs-lookup"><span data-stu-id="b2d59-224">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="b2d59-225">它始终返回 `null` ，从而防止创建将限制 <xref:System.Web.Hosting.VirtualPathProvider> 对象生存期的租约。</span><span class="sxs-lookup"><span data-stu-id="b2d59-225">It always returns `null` and thereby prevents a lease from being created that would limit the <xref:System.Web.Hosting.VirtualPathProvider> object's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenFile (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member OpenFile : string -&gt; System.IO.Stream" Usage="System.Web.Hosting.VirtualPathProvider.OpenFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="b2d59-226">虚拟文件的路径。</span><span class="sxs-lookup"><span data-stu-id="b2d59-226">The path to the virtual file.</span></span></param>
        <summary><span data-ttu-id="b2d59-227">从虚拟文件返回一个流。</span><span class="sxs-lookup"><span data-stu-id="b2d59-227">Returns a stream from a virtual file.</span></span></summary>
        <returns><span data-ttu-id="b2d59-228">所指定虚拟文件或资源的只读 <see cref="T:System.IO.Stream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b2d59-228">A read-only <see cref="T:System.IO.Stream" /> object for the specified virtual file or resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-229">此 <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> 方法是一种便捷方法，使你可以从虚拟文件获取流，而无需创建 <xref:System.Web.Hosting.VirtualPathProvider> 实例。</span><span class="sxs-lookup"><span data-stu-id="b2d59-229">The <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> method is a convenience method that enables you to get a stream from a virtual file without creating a <xref:System.Web.Hosting.VirtualPathProvider> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="protected internal System.Web.Hosting.VirtualPathProvider Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Hosting.VirtualPathProvider Previous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Previous As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::Hosting::VirtualPathProvider ^ Previous { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Previous : System.Web.Hosting.VirtualPathProvider" Usage="System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2d59-230">获取对编译系统中以前注册的 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 对象的引用。</span><span class="sxs-lookup"><span data-stu-id="b2d59-230">Gets a reference to a previously registered <see cref="T:System.Web.Hosting.VirtualPathProvider" /> object in the compilation system.</span></span></summary>
        <value><span data-ttu-id="b2d59-231">编译系统中的下一个 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b2d59-231">The next <see cref="T:System.Web.Hosting.VirtualPathProvider" /> object in the compilation system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2d59-232"><xref:System.Web.Hosting.VirtualPathProvider>向 ASP.NET 编译系统注册对象时，会将该对象添加到提供程序链中。</span><span class="sxs-lookup"><span data-stu-id="b2d59-232">When a <xref:System.Web.Hosting.VirtualPathProvider> object is registered with the ASP.NET compilation system, it is added to a chain of providers.</span></span> <span data-ttu-id="b2d59-233"><xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> <xref:System.Web.Hosting.VirtualPathProvider> 如果此实例未提供请求的路径，请使用属性将处理方式移交给链中的上一个对象 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-233">Use the <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> property to hand processing off to the previous <xref:System.Web.Hosting.VirtualPathProvider> object in the chain if the requested path is not provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance.</span></span>  
  
 <span data-ttu-id="b2d59-234">路径提供程序链始终以默认的 ASP.NET 提供程序结尾，该提供程序可提供文件系统中的文件。</span><span class="sxs-lookup"><span data-stu-id="b2d59-234">The chain of path providers always ends with the default ASP.NET provider, which serves files from the file system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2d59-235">下面的代码示例是方法的实现 <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-235">The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> method.</span></span> <span data-ttu-id="b2d59-236">如果请求的虚拟目录不以字符串开头 `"/vrdir"` ，则方法将使用 <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> 属性将请求传递给链中的下一个 <xref:System.Web.Hosting.VirtualPathProvider> 对象。</span><span class="sxs-lookup"><span data-stu-id="b2d59-236">If the requested virtual directory does not begin with the string `"/vrdir"`, the method uses the <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> property to pass the request to the next <xref:System.Web.Hosting.VirtualPathProvider> object in the chain.</span></span> <span data-ttu-id="b2d59-237">有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.Hosting.VirtualPathProvider> 。</span><span class="sxs-lookup"><span data-stu-id="b2d59-237">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
