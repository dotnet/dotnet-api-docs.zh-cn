<Type Name="IProcessHostIdleAndHealthCheck" FullName="System.Web.Hosting.IProcessHostIdleAndHealthCheck">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a64165b2436c21059f89fca42a0d77da891c7979" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86845341" /></Metadata><TypeSignature Language="C#" Value="public interface IProcessHostIdleAndHealthCheck" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessHostIdleAndHealthCheck" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.IProcessHostIdleAndHealthCheck" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessHostIdleAndHealthCheck" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessHostIdleAndHealthCheck" />
  <TypeSignature Language="F#" Value="type IProcessHostIdleAndHealthCheck = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("9d98b251-453e-44f6-9cec-8b5aed970129")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("9d98b251-453e-44f6-9cec-8b5aed970129")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供检查进程状态的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.IProcessHostIdleAndHealthCheck> 在中引入 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 。 有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberSignature Language="F#" Value="abstract member IsIdle : unit -&gt; bool" Usage="iProcessHostIdleAndHealthCheck.IsIdle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取应用程序域的状态。</summary>
        <returns>如果应用程序域空闲，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.IProcessHostIdleAndHealthCheck.IsIdle%2A> 在中引入 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 。 有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public void Ping (System.Web.Hosting.IProcessPingCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Ping(class System.Web.Hosting.IProcessPingCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.Ping(System.Web.Hosting.IProcessPingCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ping (callback As IProcessPingCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ping(System::Web::Hosting::IProcessPingCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Ping : System.Web.Hosting.IProcessPingCallback -&gt; unit" Usage="iProcessHostIdleAndHealthCheck.Ping callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Hosting.IProcessPingCallback" />
      </Parameters>
      <Docs>
        <param name="callback">处理 ping 响应的回调。</param>
        <summary>对进程执行 Ping 操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.IProcessHostIdleAndHealthCheck.Ping%2A> 在中引入 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 。 有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
