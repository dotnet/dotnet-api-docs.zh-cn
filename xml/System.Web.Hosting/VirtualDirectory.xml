<Type Name="VirtualDirectory" FullName="System.Web.Hosting.VirtualDirectory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1002583061ed87b4df852e7c333294866e2ee7c0" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70498323" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualDirectory : System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualDirectory extends System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualDirectory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualDirectory&#xA;Inherits VirtualFileBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualDirectory abstract : System::Web::Hosting::VirtualFileBase" />
  <TypeSignature Language="F#" Value="type VirtualDirectory = class&#xA;    inherit VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Hosting.VirtualFileBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示虚拟文件或资源空间中的一个目录对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory>类是表示虚拟文件系统中的目录的对象的基类。 通常，将 <xref:System.Web.Hosting.VirtualDirectory> 为 <xref:System.Web.Hosting.VirtualPathProvider> Web 应用程序中的每个类子代实现类的子代。  
  
   
  
## Examples  
 下面的代码示例是一个 <xref:System.Web.Hosting.VirtualDirectory> 返回存储在对象中的虚拟目录信息的类实现 <xref:System.Data.DataSet> 。 此代码适用于和类的代码示例 <xref:System.Web.Hosting.VirtualPathProvider> ， <xref:System.Web.Hosting.VirtualFile> 以从加载到对象的数据存储区中提供虚拟资源 <xref:System.Data.DataSet> 。 有关编译和运行该示例的完整说明，请参阅类概述的 "示例" 部分 <xref:System.Web.Hosting.VirtualPathProvider> 。  
  
 此示例包含两个部分： <xref:System.Web.Hosting.VirtualDirectory> 类实现和用于填充对象的 XML 数据文件 <xref:System.Data.DataSet> 。  
  
 第一个代码示例是类的实现 <xref:System.Web.Hosting.VirtualDirectory> 。 在构造函数中，它对自定义对象使用方法 <xref:System.Web.Hosting.VirtualPathProvider> 以返回 <xref:System.Data.DataSet> 对象。 然后，它搜索 <xref:System.Data.DataSet> 对象以检索与提供的虚拟路径相关联的目录信息。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#30)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#30)]  
  
 第二个示例是用于填充 <xref:System.Data.DataSet> 自定义对象返回的对象的 XML 数据文件 <xref:System.Web.Hosting.VirtualPathProvider> 。 此 XML 数据用于演示如何使用 <xref:System.Web.Hosting.VirtualPathProvider> 、 <xref:System.Web.Hosting.VirtualFile> 和 <xref:System.Web.Hosting.VirtualDirectory> 类从外部数据中检索数据，而不用于表示生产质量的数据存储区。  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA." >  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileA.vrf"   
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileA." >  
        </resource>  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileB.vrf"  
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileB.">  
        </resource>  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirB"   
      parentPath="/vrDir"   
      content="">  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileA.vrf"   
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileA." >  
      </resource>  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileB.vrf"  
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileB.">  
       </resource>  
    </resource>  
  </resource>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>从类继承时 <see cref="T:System.Web.Hosting.VirtualDirectory" /> ，必须重写 <see cref="P:System.Web.Hosting.VirtualDirectory.Children" /> 、 <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" /> 和 <see cref="P:System.Web.Hosting.VirtualDirectory.Files" /> 属性才能返回实现接口的对象 <see cref="T:System.Collections.IEnumerable" /> 。  
  
如果你的虚拟目录结构包含适度到大量的虚拟资源，则应注意通过调用 <see cref="P:System.Web.Hosting.VirtualDirectory.Children" /> 、或属性来最大程度地减少枚举虚拟目录时使用的系统资源 <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" /> <see cref="P:System.Web.Hosting.VirtualDirectory.Files" /> 。</para></block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualDirectory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Hosting.VirtualDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="new System.Web.Hosting.VirtualDirectory virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">此实例所表示资源的虚拟路径。</param>
        <summary>初始化 <see cref="T:System.Web.Hosting.VirtualDirectory" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例是一个 <xref:System.Web.Hosting.VirtualDirectory.%23ctor%2A> 构造函数的实现，它从 <xref:System.Data.DataSet> 自定义对象提供的对象中检索虚拟文件信息 <xref:System.Web.Hosting.VirtualPathProvider> 。 它包含 `GetData` 用于填充实例的方法 <xref:System.Web.Hosting.VirtualDirectory> 。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.Hosting.VirtualDirectory> 。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#31)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Children" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Children" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Children As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Children { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此虚拟目录中包含的文件和子目录的列表。</summary>
        <value>实现包含 <see cref="T:System.Collections.IEnumerable" /> 和 <see cref="T:System.Web.Hosting.VirtualFile" /> 对象的 <see cref="T:System.Web.Hosting.VirtualDirectory" /> 接口的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Children%2A>属性同时包含 <xref:System.Web.Hosting.VirtualFile> 和 <xref:System.Web.Hosting.VirtualDirectory> 对象，这些对象表示此虚拟目录中包含的文件和目录。 若要仅返回 <xref:System.Web.Hosting.VirtualFile> 对象，请使用 <xref:System.Web.Hosting.VirtualDirectory.Files%2A> 属性。 若要仅返回 <xref:System.Web.Hosting.VirtualDirectory> 对象，请使用 <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> 属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果你的虚拟目录结构包含适度到大量的虚拟资源，则应注意通过枚举虚拟目录来最大程度地减少使用的系统资源。</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Directories">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Directories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Directories" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Directories As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Directories { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directories : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此目录中包含的所有子目录的列表。</summary>
        <value>实现 <see cref="T:System.Collections.IEnumerable" /> 接口的对象，此对象包含 <see cref="T:System.Web.Hosting.VirtualDirectory" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Directories%2A>属性包含 <xref:System.Web.Hosting.VirtualDirectory> 表示此虚拟目录中包含的目录的对象。 若要返回 <xref:System.Web.Hosting.VirtualFile> 对象，请使用 <xref:System.Web.Hosting.VirtualDirectory.Files%2A> 属性。 若要同时返回 <xref:System.Web.Hosting.VirtualFile> 和 <xref:System.Web.Hosting.VirtualDirectory> 对象，请使用 <xref:System.Web.Hosting.VirtualDirectory.Children%2A> 属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果你的虚拟目录结构包含适度到大量的虚拟资源，则应注意通过枚举虚拟目录来最大程度地减少使用的系统资源。</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Files" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Files As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Files { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此目录中包含的所有文件的列表。</summary>
        <value>实现 <see cref="T:System.Collections.IEnumerable" /> 接口的对象，此对象包含 <see cref="T:System.Web.Hosting.VirtualFile" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Files%2A>属性包含 <xref:System.Web.Hosting.VirtualFile> 对象，这些对象表示此虚拟目录中包含的文件。 若要返回 <xref:System.Web.Hosting.VirtualDirectory> 对象，请使用 <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> 属性。 若要同时返回 <xref:System.Web.Hosting.VirtualFile> 和 <xref:System.Web.Hosting.VirtualDirectory> 对象，请使用 <xref:System.Web.Hosting.VirtualDirectory.Children%2A> 属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果虚拟目录结构包含适度到大量的虚拟资源，则应注意通过枚举虚拟目录来最大程度地减少使用的系统资源。</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public override bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值表明这是应作为目录处理的虚拟资源。</summary>
        <value>总是为 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
  </Members>
</Type>
