<Type Name="ProcessHost" FullName="System.Web.Hosting.ProcessHost">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dda6b41201b118f478561d1a0c46933e05930dc5" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83963138" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProcessHost : MarshalByRefObject, System.Web.Hosting.IAdphManager, System.Web.Hosting.IPphManager, System.Web.Hosting.IProcessHost, System.Web.Hosting.IProcessHostIdleAndHealthCheck" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProcessHost extends System.MarshalByRefObject implements class System.Web.Hosting.IAdphManager, class System.Web.Hosting.IPphManager, class System.Web.Hosting.IProcessHost, class System.Web.Hosting.IProcessHostIdleAndHealthCheck" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ProcessHost" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProcessHost&#xA;Inherits MarshalByRefObject&#xA;Implements IAdphManager, IPphManager, IProcessHost, IProcessHostIdleAndHealthCheck" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessHost sealed : MarshalByRefObject, System::Web::Hosting::IAdphManager, System::Web::Hosting::IPphManager, System::Web::Hosting::IProcessHost, System::Web::Hosting::IProcessHostIdleAndHealthCheck" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="F#" Value="type ProcessHost = class&#xA;    inherit MarshalByRefObject&#xA;    interface IProcessHost&#xA;    interface IAdphManager&#xA;    interface IPphManager&#xA;    interface IProcessHostIdleAndHealthCheck" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C#" Value="public sealed class ProcessHost : MarshalByRefObject, System.Web.Hosting.IAdphManager, System.Web.Hosting.IApplicationPreloadManager, System.Web.Hosting.IPphManager, System.Web.Hosting.IProcessHost, System.Web.Hosting.IProcessHostIdleAndHealthCheck" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProcessHost extends System.MarshalByRefObject implements class System.Web.Hosting.IAdphManager, class System.Web.Hosting.IApplicationPreloadManager, class System.Web.Hosting.IPphManager, class System.Web.Hosting.IProcessHost, class System.Web.Hosting.IProcessHostIdleAndHealthCheck" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProcessHost&#xA;Inherits MarshalByRefObject&#xA;Implements IAdphManager, IApplicationPreloadManager, IPphManager, IProcessHost, IProcessHostIdleAndHealthCheck" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessHost sealed : MarshalByRefObject, System::Web::Hosting::IAdphManager, System::Web::Hosting::IApplicationPreloadManager, System::Web::Hosting::IPphManager, System::Web::Hosting::IProcessHost, System::Web::Hosting::IProcessHostIdleAndHealthCheck" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type ProcessHost = class&#xA;    inherit MarshalByRefObject&#xA;    interface IProcessHost&#xA;    interface IAdphManager&#xA;    interface IPphManager&#xA;    interface IProcessHostIdleAndHealthCheck&#xA;    interface IApplicationPreloadManager" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Hosting.IAdphManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IApplicationPreloadManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IPphManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IProcessHost</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IProcessHostIdleAndHealthCheck</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e1ff5-101">表示一个进程宿主。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-101">Represents a process host.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ff5-102"><xref:System.Web.Hosting.ProcessHost> 在 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]中引入。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-102"><xref:System.Web.Hosting.ProcessHost> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="e1ff5-103">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-103">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="EnumerateAppDomains">
      <MemberSignature Language="C#" Value="public void EnumerateAppDomains (out System.Web.Hosting.IAppDomainInfoEnum appDomainInfoEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumerateAppDomains([out] class System.Web.Hosting.IAppDomainInfoEnum&amp; appDomainInfoEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnumerateAppDomains (ByRef appDomainInfoEnum As IAppDomainInfoEnum)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnumerateAppDomains([Runtime::InteropServices::Out] System::Web::Hosting::IAppDomainInfoEnum ^ % appDomainInfoEnum);" />
      <MemberSignature Language="F#" Value="abstract member EnumerateAppDomains : IAppDomainInfoEnum -&gt; unit&#xA;override this.EnumerateAppDomains : IAppDomainInfoEnum -&gt; unit" Usage="processHost.EnumerateAppDomains appDomainInfoEnum" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfoEnum" Type="System.Web.Hosting.IAppDomainInfoEnum" RefType="out" />
      </Parameters>
      <Docs>
        <param name="appDomainInfoEnum"><span data-ttu-id="e1ff5-104">有关应用程序域的信息。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-104">Information about the application domains.</span></span></param>
        <summary><span data-ttu-id="e1ff5-105">提供对可枚举的应用程序域集合的访问。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-105">Provides access to an enumerable set of application domains.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="processHost.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1ff5-106">通过阻止创建租约来给予进程宿主无限生存期。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-106">Gives the process host an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="e1ff5-107">返回 <see langword="null" /> 值以指示租约永不过期。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-107">Returns a <see langword="null" /> value to indicate that the lease never expires.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ff5-108"><xref:System.Web.Hosting.ProcessHost.InitializeLifetimeService%2A> 在 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]中引入。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-108"><xref:System.Web.Hosting.ProcessHost.InitializeLifetimeService%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="e1ff5-109">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-109">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsIdle();" />
      <MemberSignature Language="F#" Value="abstract member IsIdle : unit -&gt; bool&#xA;override this.IsIdle : unit -&gt; bool" Usage="processHost.IsIdle " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.IsIdle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1ff5-110">获取进程的状态。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-110">Gets the state of a process.</span></span></summary>
        <returns><span data-ttu-id="e1ff5-111">如果进程宿主空闲，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-111"><see langword="true" /> if the process host is idle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ff5-112"><xref:System.Web.Hosting.ProcessHost.IsIdle%2A> 在 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]中引入。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-112"><xref:System.Web.Hosting.ProcessHost.IsIdle%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="e1ff5-113">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-113">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public void Ping (System.Web.Hosting.IProcessPingCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Ping(class System.Web.Hosting.IProcessPingCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.Ping(System.Web.Hosting.IProcessPingCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ping (callback As IProcessPingCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Ping(System::Web::Hosting::IProcessPingCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Ping : System.Web.Hosting.IProcessPingCallback -&gt; unit&#xA;override this.Ping : System.Web.Hosting.IProcessPingCallback -&gt; unit" Usage="processHost.Ping callback" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.Ping(System.Web.Hosting.IProcessPingCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Hosting.IProcessPingCallback" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="e1ff5-114">处理 ping 响应的回调。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-114">The callback to handle the ping response.</span></span></param>
        <summary><span data-ttu-id="e1ff5-115">对进程执行 Ping 操作。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-115">Pings a process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ff5-116"><xref:System.Web.Hosting.ProcessHost.Ping%2A> 在 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]中引入。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-116"><xref:System.Web.Hosting.ProcessHost.Ping%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="e1ff5-117">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-117">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetApplicationPreloadState">
      <MemberSignature Language="C#" Value="public void SetApplicationPreloadState (string context, string appId, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationPreloadState(string context, string appId, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadState(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetApplicationPreloadState (context As String, appId As String, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetApplicationPreloadState(System::String ^ context, System::String ^ appId, bool enabled);" />
      <MemberSignature Language="F#" Value="abstract member SetApplicationPreloadState : string * string * bool -&gt; unit&#xA;override this.SetApplicationPreloadState : string * string * bool -&gt; unit" Usage="processHost.SetApplicationPreloadState (context, appId, enabled)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState(System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="appId" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="enabled" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e1ff5-118">应用程序上下文。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-118">The application context.</span></span></param>
        <param name="appId"><span data-ttu-id="e1ff5-119">应用程序的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-119">The unique ID of the application.</span></span></param>
        <param name="enabled"><span data-ttu-id="e1ff5-120">如果指示应预加载应用程序，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-120"><see langword="true" /> to indicate the application should be preloaded; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e1ff5-121">通知 ASP.NET 正在 [!INCLUDE[iisver](~/includes/iisver-md.md)] 上运行的某个特定应用程序配置为预加载。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-121">Notifies ASP.NET that a particular application that is running on [!INCLUDE[iisver](~/includes/iisver-md.md)] is configured to be preloaded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ff5-122">此方法实现 <xref:System.Web.Hosting.IApplicationPreloadManager> 接口的 <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-122">This method implements the <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A> method of the <xref:System.Web.Hosting.IApplicationPreloadManager> interface.</span></span> [!INCLUDE[iisver](~/includes/iisver-md.md)] <span data-ttu-id="e1ff5-123">调用 <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A> 方法，通知 ASP.NET 加载的应用程序是否支持预加载。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-123">calls the <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A> method to notify ASP.NET whether the application that is being loaded supports preloading.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e1ff5-124">此方法仅适用于在 [!INCLUDE[iisver](~/includes/iisver-md.md)]上运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-124">This method applies only to applications that run on [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1ff5-125">包含预加载应用程序的信息的 <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> 实例为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-125">The <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> instance that contains information for preloading the application is <see langword="null" /> or empty.</span></span>

<span data-ttu-id="e1ff5-126">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e1ff5-126">-or-</span></span>

<span data-ttu-id="e1ff5-127"><paramref name="appId" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-127"><paramref name="appId" /> is <see langword="null" /> or empty.</span></span>

<span data-ttu-id="e1ff5-128">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e1ff5-128">-or-</span></span>

<span data-ttu-id="e1ff5-129"><paramref name="enabled" /> 设置为 <see langword="true" />，并且进程宿主以前未将 <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> 接口传递至其 <see cref="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)" /> 方法</span><span class="sxs-lookup"><span data-stu-id="e1ff5-129"><paramref name="enabled" /> is set to <see langword="true" /> and the process host was not previously passed an <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> interface to its <see cref="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)" /> method</span></span></exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetApplicationPreloadUtil">
      <MemberSignature Language="C#" Value="public void SetApplicationPreloadUtil (System.Web.Hosting.IApplicationPreloadUtil applicationPreloadUtil);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationPreloadUtil(class System.Web.Hosting.IApplicationPreloadUtil applicationPreloadUtil) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetApplicationPreloadUtil (applicationPreloadUtil As IApplicationPreloadUtil)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetApplicationPreloadUtil(System::Web::Hosting::IApplicationPreloadUtil ^ applicationPreloadUtil);" />
      <MemberSignature Language="F#" Value="abstract member SetApplicationPreloadUtil : System.Web.Hosting.IApplicationPreloadUtil -&gt; unit&#xA;override this.SetApplicationPreloadUtil : System.Web.Hosting.IApplicationPreloadUtil -&gt; unit" Usage="processHost.SetApplicationPreloadUtil applicationPreloadUtil" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationPreloadUtil" Type="System.Web.Hosting.IApplicationPreloadUtil" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="applicationPreloadUtil"><span data-ttu-id="e1ff5-130">[!INCLUDE[iisver](~/includes/iisver-md.md)] 中供 ASP.NET 调用以获取信息的非托管接口的句柄。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-130">The handle to an unmanaged interface in [!INCLUDE[iisver](~/includes/iisver-md.md)] that ASP.NET calls to get information.</span></span></param>
        <summary><span data-ttu-id="e1ff5-131">创建一个类型，该类型调用 [!INCLUDE[iisver](~/includes/iisver-md.md)] 以获取预加载应用程序所需的信息。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-131">Creates a type that calls [!INCLUDE[iisver](~/includes/iisver-md.md)] to get information that is required in order to preload an application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ff5-132">此方法实现 <xref:System.Web.Hosting.IApplicationPreloadManager> 接口的 <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-132">This method implements the <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil%2A> method of the <xref:System.Web.Hosting.IApplicationPreloadManager> interface.</span></span> <span data-ttu-id="e1ff5-133">方法创建 <xref:System.Web.Hosting.IApplicationPreloadUtil> 类型的实例，该实例调用到 [!INCLUDE[iisver](~/includes/iisver-md.md)] 以获取预加载信息。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-133">The method creates an instance of the <xref:System.Web.Hosting.IApplicationPreloadUtil> type, which calls into [!INCLUDE[iisver](~/includes/iisver-md.md)] to get preloading information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e1ff5-134">此方法仅适用于在 [!INCLUDE[iisver](~/includes/iisver-md.md)]上运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-134">This method applies only to applications that run on [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1ff5-135">包含预加载应用程序的信息的 <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> 实例不是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-135">The <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> instance that contains information for preloading the application is not <see langword="null" />.</span></span></exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="processHost.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHost.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1ff5-136">卸载进程宿主。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-136">Unloads the process host.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShutdownApplication(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="abstract member ShutdownApplication : string -&gt; unit&#xA;override this.ShutdownApplication : string -&gt; unit" Usage="processHost.ShutdownApplication appId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHost.ShutdownApplication(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="e1ff5-137">要关闭的应用程序的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-137">The unique identifier of the application to shut down.</span></span></param>
        <summary><span data-ttu-id="e1ff5-138">关闭指定的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-138">Shuts down the specified application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ff5-139"><xref:System.Web.Hosting.ProcessHost.ShutdownApplication%2A> 在 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]中引入。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-139"><xref:System.Web.Hosting.ProcessHost.ShutdownApplication%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="e1ff5-140">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-140">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StartAppDomainProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StartAppDomainProtocolListenerChannel (string appId, string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAppDomainProtocolListenerChannel(string appId, string protocolId, class System.Web.Hosting.IListenerChannelCallback listenerChannelCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartAppDomainProtocolListenerChannel (appId As String, protocolId As String, listenerChannelCallback As IListenerChannelCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartAppDomainProtocolListenerChannel(System::String ^ appId, System::String ^ protocolId, System::Web::Hosting::IListenerChannelCallback ^ listenerChannelCallback);" />
      <MemberSignature Language="F#" Value="abstract member StartAppDomainProtocolListenerChannel : string * string * System.Web.Hosting.IListenerChannelCallback -&gt; unit&#xA;override this.StartAppDomainProtocolListenerChannel : string * string * System.Web.Hosting.IListenerChannelCallback -&gt; unit" Usage="processHost.StartAppDomainProtocolListenerChannel (appId, protocolId, listenerChannelCallback)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IAdphManager.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelCallback" Type="System.Web.Hosting.IListenerChannelCallback" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="e1ff5-141">应用程序 ID。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-141">The application ID.</span></span></param>
        <param name="protocolId"><span data-ttu-id="e1ff5-142">协议 ID。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-142">The protocol ID.</span></span></param>
        <param name="listenerChannelCallback"><span data-ttu-id="e1ff5-143">协议侦听器通道回调。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-143">The protocol listener channel callback.</span></span></param>
        <summary><span data-ttu-id="e1ff5-144">启动应用程序域协议侦听器通道。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-144">Starts an application domain protocol listener channel.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StartApplication">
      <MemberSignature Language="C#" Value="public void StartApplication (string appId, string appPath, out object runtimeInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartApplication(string appId, string appPath, [out] object&amp; runtimeInterface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StartApplication(System.String,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartApplication (appId As String, appPath As String, ByRef runtimeInterface As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartApplication(System::String ^ appId, System::String ^ appPath, [Runtime::InteropServices::Out] System::Object ^ % runtimeInterface);" />
      <MemberSignature Language="F#" Value="abstract member StartApplication : string * string * obj -&gt; unit&#xA;override this.StartApplication : string * string * obj -&gt; unit" Usage="processHost.StartApplication (appId, appPath, runtimeInterface)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHost.StartApplication(System.String,System.String,System.Object@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="appPath" Type="System.String" />
        <Parameter Name="runtimeInterface" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="e1ff5-145">应用程序 ID。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-145">The application ID.</span></span></param>
        <param name="appPath"><span data-ttu-id="e1ff5-146">应用程序的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-146">The virtual path to the application.</span></span></param>
        <param name="runtimeInterface"><span data-ttu-id="e1ff5-147">运行时管理器接口。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-147">A runtime manager interface.</span></span></param>
        <summary><span data-ttu-id="e1ff5-148">启动指定的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-148">Starts the specified application.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StartProcessProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StartProcessProtocolListenerChannel (string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartProcessProtocolListenerChannel(string protocolId, class System.Web.Hosting.IListenerChannelCallback listenerChannelCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartProcessProtocolListenerChannel (protocolId As String, listenerChannelCallback As IListenerChannelCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartProcessProtocolListenerChannel(System::String ^ protocolId, System::Web::Hosting::IListenerChannelCallback ^ listenerChannelCallback);" />
      <MemberSignature Language="F#" Value="abstract member StartProcessProtocolListenerChannel : string * System.Web.Hosting.IListenerChannelCallback -&gt; unit&#xA;override this.StartProcessProtocolListenerChannel : string * System.Web.Hosting.IListenerChannelCallback -&gt; unit" Usage="processHost.StartProcessProtocolListenerChannel (protocolId, listenerChannelCallback)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IPphManager.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelCallback" Type="System.Web.Hosting.IListenerChannelCallback" />
      </Parameters>
      <Docs>
        <param name="protocolId"><span data-ttu-id="e1ff5-149">协议 ID。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-149">The protocol ID.</span></span></param>
        <param name="listenerChannelCallback"><span data-ttu-id="e1ff5-150">协议侦听器通道回调。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-150">The protocol listener channel callback.</span></span></param>
        <summary><span data-ttu-id="e1ff5-151">启动协议侦听器通道。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-151">Starts a process protocol listener channel.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StopAppDomainProtocol">
      <MemberSignature Language="C#" Value="public void StopAppDomainProtocol (string appId, string protocolId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopAppDomainProtocol(string appId, string protocolId, bool immediate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocol(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopAppDomainProtocol (appId As String, protocolId As String, immediate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopAppDomainProtocol(System::String ^ appId, System::String ^ protocolId, bool immediate);" />
      <MemberSignature Language="F#" Value="abstract member StopAppDomainProtocol : string * string * bool -&gt; unit&#xA;override this.StopAppDomainProtocol : string * string * bool -&gt; unit" Usage="processHost.StopAppDomainProtocol (appId, protocolId, immediate)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IAdphManager.StopAppDomainProtocol(System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="e1ff5-152">应用程序 ID。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-152">The application ID.</span></span></param>
        <param name="protocolId"><span data-ttu-id="e1ff5-153">协议 ID。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-153">The protocol ID.</span></span></param>
        <param name="immediate"><span data-ttu-id="e1ff5-154">是否立即停止协议。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-154">Whether to stop the protocol immediately.</span></span></param>
        <summary><span data-ttu-id="e1ff5-155">停止应用程序域协议侦听器通道。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-155">Stops an application domain protocol listener channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ff5-156"><xref:System.Web.Hosting.ProcessHost.StopAppDomainProtocol%2A> 在 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]中引入。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-156"><xref:System.Web.Hosting.ProcessHost.StopAppDomainProtocol%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="e1ff5-157">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-157">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StopAppDomainProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StopAppDomainProtocolListenerChannel (string appId, string protocolId, int listenerChannelId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopAppDomainProtocolListenerChannel(string appId, string protocolId, int32 listenerChannelId, bool immediate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopAppDomainProtocolListenerChannel (appId As String, protocolId As String, listenerChannelId As Integer, immediate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopAppDomainProtocolListenerChannel(System::String ^ appId, System::String ^ protocolId, int listenerChannelId, bool immediate);" />
      <MemberSignature Language="F#" Value="abstract member StopAppDomainProtocolListenerChannel : string * string * int * bool -&gt; unit&#xA;override this.StopAppDomainProtocolListenerChannel : string * string * int * bool -&gt; unit" Usage="processHost.StopAppDomainProtocolListenerChannel (appId, protocolId, listenerChannelId, immediate)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IAdphManager.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelId" Type="System.Int32" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="e1ff5-158">应用程序 ID</span><span class="sxs-lookup"><span data-stu-id="e1ff5-158">The application ID</span></span></param>
        <param name="protocolId"><span data-ttu-id="e1ff5-159">协议 ID。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-159">The protocol ID.</span></span></param>
        <param name="listenerChannelId"><span data-ttu-id="e1ff5-160">协议侦听器通道 ID。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-160">The protocol listener channel ID.</span></span></param>
        <param name="immediate"><span data-ttu-id="e1ff5-161">是否立即停止协议侦听器通道。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-161">Whether to stop the protocol listener channel immediately.</span></span></param>
        <summary><span data-ttu-id="e1ff5-162">停止应用程序域协议侦听器通道。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-162">Stops an application domain protocol listener channel.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StopProcessProtocol">
      <MemberSignature Language="C#" Value="public void StopProcessProtocol (string protocolId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessProtocol(string protocolId, bool immediate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StopProcessProtocol(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopProcessProtocol (protocolId As String, immediate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopProcessProtocol(System::String ^ protocolId, bool immediate);" />
      <MemberSignature Language="F#" Value="abstract member StopProcessProtocol : string * bool -&gt; unit&#xA;override this.StopProcessProtocol : string * bool -&gt; unit" Usage="processHost.StopProcessProtocol (protocolId, immediate)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IPphManager.StopProcessProtocol(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protocolId"><span data-ttu-id="e1ff5-163">协议 ID。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-163">The protocol ID.</span></span></param>
        <param name="immediate"><span data-ttu-id="e1ff5-164">是否立即停止协议。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-164">Whether to stop the protocol immediately.</span></span></param>
        <summary><span data-ttu-id="e1ff5-165">停止进程协议。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-165">Stops a process protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ff5-166"><xref:System.Web.Hosting.ProcessHost.StopProcessProtocol%2A> 在 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]中引入。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-166"><xref:System.Web.Hosting.ProcessHost.StopProcessProtocol%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="e1ff5-167">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-167">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StopProcessProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StopProcessProtocolListenerChannel (string protocolId, int listenerChannelId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessProtocolListenerChannel(string protocolId, int32 listenerChannelId, bool immediate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopProcessProtocolListenerChannel (protocolId As String, listenerChannelId As Integer, immediate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopProcessProtocolListenerChannel(System::String ^ protocolId, int listenerChannelId, bool immediate);" />
      <MemberSignature Language="F#" Value="abstract member StopProcessProtocolListenerChannel : string * int * bool -&gt; unit&#xA;override this.StopProcessProtocolListenerChannel : string * int * bool -&gt; unit" Usage="processHost.StopProcessProtocolListenerChannel (protocolId, listenerChannelId, immediate)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IPphManager.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelId" Type="System.Int32" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protocolId"><span data-ttu-id="e1ff5-168">协议 ID。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-168">The protocol ID.</span></span></param>
        <param name="listenerChannelId"><span data-ttu-id="e1ff5-169">协议侦听器通道回调。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-169">The protocol listener channel callback.</span></span></param>
        <param name="immediate"><span data-ttu-id="e1ff5-170">是否立即停止协议侦听器通道。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-170">Whether to stop the protocol listener channel immediately.</span></span></param>
        <summary><span data-ttu-id="e1ff5-171">停止协议侦听器通道。</span><span class="sxs-lookup"><span data-stu-id="e1ff5-171">Stops a protocol listener channel.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
