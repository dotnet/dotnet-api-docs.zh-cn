<Type Name="WriteCodeFragment" FullName="Microsoft.Build.Tasks.WriteCodeFragment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b345ae89008cefb6c86fc58564fdaf13392e413e" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89716819" /></Metadata><TypeSignature Language="C#" Value="public class WriteCodeFragment : Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WriteCodeFragment extends Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.WriteCodeFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class WriteCodeFragment&#xA;Inherits TaskExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class WriteCodeFragment : Microsoft::Build::Tasks::TaskExtension" />
  <TypeSignature Language="F#" Value="type WriteCodeFragment = class&#xA;    inherit TaskExtension" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.TaskExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fd7f6-101">生成一个临时代码文件，其中包含指定的生成代码片段。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-101">Generates a temporary code file with the specified generated code fragment.</span></span>
<span data-ttu-id="fd7f6-102">不会删除该文件。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-102">Does not delete the file.</span></span></summary>
    <remarks>To be added.</remarks>
    <comment><span data-ttu-id="fd7f6-103">目前仅支持写入 .NET 特性。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-103">Currently only supports writing .NET attributes.</span></span></comment>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WriteCodeFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.WriteCodeFragment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WriteCodeFragment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7f6-104">创建一个临时代码文件，其中包含指定的生成代码片段。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-104">Creates a temporary code file with the specified generated code fragment.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyAttributes">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] AssemblyAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] AssemblyAttributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyAttributes As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ AssemblyAttributes { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyAttributes : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd7f6-105">要编写的属性的说明。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-105">Description of attributes to write.</span></span>
<span data-ttu-id="fd7f6-106">Item include 是属性的完整类型名称，</span><span class="sxs-lookup"><span data-stu-id="fd7f6-106">Item include is the full type name of the attribute.</span></span>
<span data-ttu-id="fd7f6-107">例如“System.AssemblyVersionAttribute”。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-107">For example, "System.AssemblyVersionAttribute".</span></span>
<span data-ttu-id="fd7f6-108">每个元数据都是参数的名称/值对，其类型必须是 System.String。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-108">Each piece of metadata is the name-value pair of a parameter, which must be of type System.String.</span></span>
<span data-ttu-id="fd7f6-109">某些属性只允许使用位置构造函数参数，或者用户可能更偏向于使用这类参数。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-109">Some attributes only allow positional constructor arguments, or the user may just prefer them.</span></span>
<span data-ttu-id="fd7f6-110">若要设置它们，请使用“_Parameter1”和“_Parameter2”等元数据名称。如果已跳过参数索引，则会出错。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-110">To set those, use metadata names like "_Parameter1", "_Parameter2" etc. If a parameter index is skipped, it's an error.</span></span></summary>
        <value><span data-ttu-id="fd7f6-111">一个项，其值为属性的完整类型名称。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-111">An item whose value is the full type name of the attribute.</span></span> <span data-ttu-id="fd7f6-112">例如“System.AssemblyVersionAttribute”。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-112">For example, "System.AssemblyVersionAttribute".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7f6-113">每个元数据都是参数的名称/值对，其类型必须是 System.String。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-113">Each piece of metadata is the name-value pair of a parameter, which must be of type System.String.</span></span>  
  
 <span data-ttu-id="fd7f6-114">某些属性只允许使用位置构造函数参数，或者用户可能更偏向于使用这类参数。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-114">Some attributes only allow positional constructor arguments, or the user may just prefer them.</span></span>  <span data-ttu-id="fd7f6-115">若要设置它们，请使用“_Parameter1”和“_Parameter2”等元数据名称。如果已跳过参数索引，则会出错。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-115">To set those, use metadata names like "_Parameter1", "_Parameter2" etc. If a parameter index is skipped, it's an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.WriteCodeFragment.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberSignature Language="F#" Value="override this.Execute : unit -&gt; bool" Usage="writeCodeFragment.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd7f6-116">主入口点。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-116">Main entry point.</span></span></summary>
        <returns><span data-ttu-id="fd7f6-117">如果已写入代码片段，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-117"><see langword="true" /> if the code fragment was written; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : string with get, set" Usage="Microsoft.Build.Tasks.WriteCodeFragment.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Build.Framework.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Build.Framework.Required&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd7f6-118">要生成的代码的语言。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-118">Language of code to generate.</span></span>
<span data-ttu-id="fd7f6-119">语言名称可以是任何可用于 CodeDom 提供程序的语言，</span><span class="sxs-lookup"><span data-stu-id="fd7f6-119">Language name can be any language for which a CodeDom provider is available.</span></span> <span data-ttu-id="fd7f6-120">例如“C#”或“VisualBasic”。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-120">For example, "C#", "VisualBasic".</span></span>
<span data-ttu-id="fd7f6-121">发出的文件将具有该语言的默认扩展名。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-121">Emitted file will have the default extension for that language.</span></span></summary>
        <value><span data-ttu-id="fd7f6-122">要生成的代码的语言。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-122">The language of code to generate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7f6-123">语言名称可以是任何可用于 CodeDom 提供程序的语言，</span><span class="sxs-lookup"><span data-stu-id="fd7f6-123">Language name can be any language for which a CodeDom provider is available.</span></span> <span data-ttu-id="fd7f6-124">例如“C#”或“VisualBasic”。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-124">For example, "C#", "VisualBasic".</span></span> <span data-ttu-id="fd7f6-125">向发出的文件提供该语言的默认扩展名。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-125">The file emitted is given the default extension for that language.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputDirectory">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem OutputDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem OutputDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputDirectory As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ OutputDirectory { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputDirectory : Microsoft.Build.Framework.ITaskItem with get, set" Usage="Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd7f6-126">所生成代码的目标文件夹。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-126">Destination folder for the generated code.</span></span>
<span data-ttu-id="fd7f6-127">通常为中间文件夹。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-127">Typically the intermediate folder.</span></span></summary>
        <value><span data-ttu-id="fd7f6-128">所生成代码的目标文件夹。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-128">The destination folder for the generated code.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFile">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem OutputFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem OutputFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputFile" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputFile As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ OutputFile { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputFile : Microsoft.Build.Framework.ITaskItem with get, set" Usage="Microsoft.Build.Tasks.WriteCodeFragment.OutputFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Build.Framework.Output]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Build.Framework.Output&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd7f6-129">已生成的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-129">The path to the file that was generated.</span></span>
<span data-ttu-id="fd7f6-130">如果设置此项和文件名称，则将预置目标文件夹。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-130">If this is set, and a file name, the destination folder will be prepended.</span></span>
<span data-ttu-id="fd7f6-131">如果设置此项且它为根目录，则忽略目标文件夹。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-131">If this is set, and is rooted, the destination folder will be ignored.</span></span>
<span data-ttu-id="fd7f6-132">如果未设置此项，则将使用目标文件夹和任意文件夹，且选择语言的默认扩展名。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-132">If this is not set, the destination folder will be used, an arbitrary file name will be used, and the default extension for the language selected.</span></span></summary>
        <value><span data-ttu-id="fd7f6-133">已生成的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-133">The path to the file that was generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd7f6-134">如果将此属性设置为文件名，则会在其中预置目标文件夹。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-134">If setting this property with a file name, the destination folder will be prepended.</span></span>  
  
 <span data-ttu-id="fd7f6-135">如果使用根值设置此属性，则将忽略目标文件夹。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-135">If setting this property with a rooted value, the destination folder will be ignored.</span></span>  
  
 <span data-ttu-id="fd7f6-136">如果未设置此属性，WriteCodeFragment 将使用目标文件夹、任意文件名以及所选语言的默认扩展名。</span><span class="sxs-lookup"><span data-stu-id="fd7f6-136">If this property is not set, WriteCodeFragment uses the destination folder, an arbitrary file name, and the default extension for the language selected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
