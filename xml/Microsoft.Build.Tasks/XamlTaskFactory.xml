<Type Name="XamlTaskFactory" FullName="Microsoft.Build.Tasks.XamlTaskFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c86b19ba83c8a96f581c6758c4fc42343db7b63b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86625389" /></Metadata><TypeSignature Language="C#" Value="public class XamlTaskFactory : Microsoft.Build.Framework.ITaskFactory" FrameworkAlternate="msbuild-15;msbuild-16;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTaskFactory extends System.Object implements class Microsoft.Build.Framework.ITaskFactory" FrameworkAlternate="msbuild-15;msbuild-16;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.XamlTaskFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTaskFactory&#xA;Implements ITaskFactory" FrameworkAlternate="msbuild-15;msbuild-16;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTaskFactory : Microsoft::Build::Framework::ITaskFactory" FrameworkAlternate="msbuild-15;msbuild-16;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type XamlTaskFactory = class&#xA;    interface ITaskFactory" />
  <TypeSignature Language="C#" Value="public sealed class XamlTaskFactory : Microsoft.Build.Framework.ITaskFactory" FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XamlTaskFactory extends System.Object implements class Microsoft.Build.Framework.ITaskFactory" FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XamlTaskFactory&#xA;Implements ITaskFactory" FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTaskFactory sealed : Microsoft::Build::Framework::ITaskFactory" FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore">
      <AttributeName Language="C#">[System.Obsolete("The XamlTaskFactory is not supported on .NET Core.  This class is included so that users receive run-time errors and should not be used for any other purpose.", true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The XamlTaskFactory is not supported on .NET Core.  This class is included so that users receive run-time errors and should not be used for any other purpose.", true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>XAML 任务的任务工厂提供程序。</summary>
    <remarks>.NET Core 上不支持 Xaml，因此，此任务工厂只记录一个不受支持的错误。
如果不编译此类，则用户将收到一条错误消息，指出类不存在，这是一种不好的体验。</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>为 XAML 任务创建任务工厂。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupTask">
      <MemberSignature Language="C#" Value="public void CleanupTask (Microsoft.Build.Framework.ITask task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanupTask(class Microsoft.Build.Framework.ITask task) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanupTask (task As ITask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanupTask(Microsoft::Build::Framework::ITask ^ task);" />
      <MemberSignature Language="F#" Value="abstract member CleanupTask : Microsoft.Build.Framework.ITask -&gt; unit&#xA;override this.CleanupTask : Microsoft.Build.Framework.ITask -&gt; unit" Usage="xamlTaskFactory.CleanupTask task" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="Microsoft.Build.Framework.ITask" />
      </Parameters>
      <Docs>
        <param name="task">要清理的任务。</param>
        <summary>清理给定任务可能已积累的任何上下文或状态。</summary>
        <remarks>对于很多工厂，此方法是一个无操作方法。  但有些工厂可能已在单个任务实例中内置了 AppDomain，这就是关闭 AppDomain 的机会。</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberSignature Language="F#" Value="abstract member CreateTask : Microsoft.Build.Framework.IBuildEngine -&gt; Microsoft.Build.Framework.ITask&#xA;override this.CreateTask : Microsoft.Build.Framework.IBuildEngine -&gt; Microsoft.Build.Framework.ITask" Usage="xamlTaskFactory.CreateTask taskFactoryLoggingHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost">任务工厂的日志记录主机将记录任务上下文中的消息。</param>
        <summary>创建要使用的任务实例。</summary>
        <returns>新的任务工厂。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FactoryName">
      <MemberSignature Language="C#" Value="public string FactoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FactoryName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.FactoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FactoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FactoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FactoryName : string" Usage="Microsoft.Build.Tasks.XamlTaskFactory.FactoryName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ITaskFactory.FactoryName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此工厂的名称。 此工厂名称将在错误消息中使用。 例如任务“Mytask”未能从“FactoryName”加载。</summary>
        <value>此任务工厂的名称</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskParameters">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTaskParameters () As TaskPropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ GetTaskParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetTaskParameters : unit -&gt; Microsoft.Build.Framework.TaskPropertyInfo[]&#xA;override this.GetTaskParameters : unit -&gt; Microsoft.Build.Framework.TaskPropertyInfo[]" Usage="xamlTaskFactory.GetTaskParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.GetTaskParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.TaskPropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取任务的参数列表。</summary>
        <returns>类型信息。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; taskParameters, string taskElementContents, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" FrameworkAlternate="msbuild-15;msbuild-16;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; taskParameters, string taskElementContents, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" FrameworkAlternate="msbuild-15;msbuild-16;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, taskParameters As IDictionary(Of String, TaskPropertyInfo), taskElementContents As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" FrameworkAlternate="msbuild-15;msbuild-16;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ taskParameters, System::String ^ taskElementContents, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" FrameworkAlternate="msbuild-15;msbuild-16;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool&#xA;override this.Initialize : string * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool" Usage="xamlTaskFactory.Initialize (taskName, taskParameters, taskElementContents, taskFactoryLoggingHost)" FrameworkAlternate="msbuild-15;msbuild-16;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, parameterGroup As IDictionary(Of String, TaskPropertyInfo), taskBody As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ parameterGroup, System::String ^ taskBody, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool&#xA;override this.Initialize : string * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool" Usage="xamlTaskFactory.Initialize (taskName, parameterGroup, taskBody, taskFactoryLoggingHost)" FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" Index="0" />
        <Parameter Name="taskParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" Index="1" FrameworkAlternate="msbuild-15;msbuild-16;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameterGroup" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" Index="1" FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore" />
        <Parameter Name="taskElementContents" Type="System.String" Index="2" FrameworkAlternate="msbuild-15;msbuild-16;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="taskBody" Type="System.String" Index="2" FrameworkAlternate="msbuild-15-netcore;msbuild-16-netcore" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" Index="3" />
      </Parameters>
      <Docs>
        <param name="taskName">任务的名称。</param>
        <param name="taskParameters">要传递给该任务的参数。</param>
        <param name="parameterGroup">To be added.</param>
        <param name="taskElementContents">元素的内容。</param>
        <param name="taskBody">To be added.</param>
        <param name="taskFactoryLoggingHost">记录任务上下文中的消息的任务工厂日志记录主机。</param>
        <summary>MSBuild 引擎将调用此方法来初始化工厂。 此方法应足以初始化工厂，以便可以询问工厂是否可以由工厂创建任务名称。</summary>
        <returns>返回 <see cref="T:System.Boolean" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskElementContents">
      <MemberSignature Language="C#" Value="public string TaskElementContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskElementContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskElementContents As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TaskElementContents { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TaskElementContents : string" Usage="Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>UsingTask 正文的内容。</summary>
        <value>UsingTask 正文的内容。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskName">
      <MemberSignature Language="C#" Value="public string TaskName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TaskName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TaskName : string" Usage="Microsoft.Build.Tasks.XamlTaskFactory.TaskName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从 XAML 中提取的任务的名称。</summary>
        <value>任务的名称。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskNamespace">
      <MemberSignature Language="C#" Value="public string TaskNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TaskNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TaskNamespace : string" Usage="Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从 XAML 中提取的任务的命名空间。</summary>
        <value>任务的命名空间。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskType">
      <MemberSignature Language="C#" Value="public Type TaskType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TaskType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TaskType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TaskType : Type" Usage="Microsoft.Build.Tasks.XamlTaskFactory.TaskType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ITaskFactory.TaskType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>任务类型对象。</summary>
        <value>任务类型。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
