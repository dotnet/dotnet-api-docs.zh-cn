<Type Name="JsonConverterAttribute" FullName="System.Text.Json.Serialization.JsonConverterAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28f9ea7cf140a91ae0cdb691e9d716cf1624c2d6" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83945891" /></Metadata><TypeSignature Language="C#" Value="public class JsonConverterAttribute : System.Text.Json.Serialization.JsonAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonConverterAttribute extends System.Text.Json.Serialization.JsonAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Serialization.JsonConverterAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonConverterAttribute&#xA;Inherits JsonAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonConverterAttribute : System::Text::Json::Serialization::JsonAttribute" />
  <TypeSignature Language="F#" Value="type JsonConverterAttribute = class&#xA;    inherit JsonAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Json.Serialization.JsonAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>当放置在某一属性或类型上时，指定要使用的转换器类型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

指定的转换器类型必须派生自 <xref:System.Text.Json.Serialization.JsonConverter>。

当放置在属性上时，将始终使用指定的转换器。

当放置在某个类型上时，除非将兼容的转换器添加到 <xref:System.Text.Json.JsonSerializerOptions.Converters?displayProperty=nameWithType> 集合，或者同一类型的属性上有另一个 <xref:System.Text.Json.Serialization.JsonConverterAttribute>，否则将使用指定的转换器。

有关详细信息，请参阅[如何编写用于 JSON 序列化的自定义转换器](/dotnet/standard/serialization/system-text-json-converters-how-to#register-a-custom-converter)。 
        
          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JsonConverterAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.JsonConverterAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JsonConverterAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Text.Json.Serialization.JsonConverterAttribute" /> 的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonConverterAttribute (Type converterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonConverterAttribute(Type ^ converterType);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Serialization.JsonConverterAttribute : Type -&gt; System.Text.Json.Serialization.JsonConverterAttribute" Usage="new System.Text.Json.Serialization.JsonConverterAttribute converterType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="converterType">转换器的类型。</param>
        <summary>使用指定的转换器类型初始化 <see cref="T:System.Text.Json.Serialization.JsonConverterAttribute" /> 的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterType">
      <MemberSignature Language="C#" Value="public Type ConverterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ConverterType" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Serialization.JsonConverterAttribute.ConverterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ConverterType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConverterType : Type" Usage="System.Text.Json.Serialization.JsonConverterAttribute.ConverterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Text.Json.Serialization.JsonConverterAttribute" /> 的类型；如果它是在没有类型的情况下创建的，则为 <see langword="null" />。</summary>
        <value><see cref="T:System.Text.Json.Serialization.JsonConverterAttribute" />的类型，或者，如果在不使用类型的情况下创建 <see langword="null" />，则为。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConverter">
      <MemberSignature Language="C#" Value="public virtual System.Text.Json.Serialization.JsonConverter CreateConverter (Type typeToConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Json.Serialization.JsonConverter CreateConverter(class System.Type typeToConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.JsonConverterAttribute.CreateConverter(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateConverter (typeToConvert As Type) As JsonConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Json::Serialization::JsonConverter ^ CreateConverter(Type ^ typeToConvert);" />
      <MemberSignature Language="F#" Value="abstract member CreateConverter : Type -&gt; System.Text.Json.Serialization.JsonConverter&#xA;override this.CreateConverter : Type -&gt; System.Text.Json.Serialization.JsonConverter" Usage="jsonConverterAttribute.CreateConverter typeToConvert" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.JsonConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeToConvert" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeToConvert">转换器的类型。</param>
        <summary>在派生类中重写且 <see cref="P:System.Text.Json.Serialization.JsonConverterAttribute.ConverterType" /> 为 <see langword="null" /> 时，允许派生类创建 <see cref="T:System.Text.Json.Serialization.JsonConverter" /> 以传递附加状态。</summary>
        <returns>自定义转换器。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
