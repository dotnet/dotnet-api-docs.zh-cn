<Type Name="Forest" FullName="System.DirectoryServices.ActiveDirectory.Forest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77337c8581f53117ec010f210a47d620eb6c879a" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102068720" /></Metadata><TypeSignature Language="C#" Value="public class Forest : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Forest extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.Forest" />
  <TypeSignature Language="VB.NET" Value="Public Class Forest&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Forest : IDisposable" />
  <TypeSignature Language="F#" Value="type Forest = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 类表示一个 Active Directory 域服务目录林。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationPartitions">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPartitions As ApplicationPartitionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ApplicationPartitionCollection ^ ApplicationPartitions { System::DirectoryServices::ActiveDirectory::ApplicationPartitionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPartitions : System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取林中所有应用程序分区的集合。</summary>
        <value>包含此林中所有应用程序分区的 <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" /> 对象。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateLocalSideOfTrustRelationship(string targetForestName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateLocalSideOfTrustRelationship (targetForestName As String, direction As TrustDirection, trustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::DirectoryServices::ActiveDirectory::TrustDirection direction, System::String ^ trustPassword);" />
      <MemberSignature Language="F#" Value="member this.CreateLocalSideOfTrustRelationship : string * System.DirectoryServices.ActiveDirectory.TrustDirection * string -&gt; unit" Usage="forest.CreateLocalSideOfTrustRelationship (targetForestName, direction, trustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="trustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">与信任一起创建的目录林的 DNS 名称。</param>
        <param name="direction">其中一个 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 成员，该成员确定相对于此林的信任方向。</param>
        <param name="trustPassword">信任的密码。</param>
        <summary>使用指定的林创建信任关系的本地方。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法创建信任关系的一方。 只有在创建信任的双方后，才会建立信任。  
  
 `trustPassword`参数将密码与创建的信任相关联。 当创建信任的另一方时，将提供相同的密码，然后将两个本地信任相互绑定。  
  
 若要以编程方式在单个方法调用中创建信任关系的双方，请使用 <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=nameWithType> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">信任关系已存在。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForest" /> 名称或 <paramref name="trustPassword" /> 字符串为空。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> 或 <paramref name="trustPassword" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">使用信任</related>
      </Docs>
    </Member>
    <Member MemberName="CreateTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateTrustRelationship (targetForest As Forest, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberSignature Language="F#" Value="member this.CreateTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.CreateTrustRelationship (targetForest, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest"><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象，它表示要用来创建信任的林。</param>
        <param name="direction">其中一个 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 成员，该成员确定相对于此林的信任方向。</param>
        <summary>使用指定的林创建信任关系的双方。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使用单个方法调用创建信任关系的双方。 <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=nameWithType>方法用于仅创建信任的一方。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">信任关系已存在。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">使用信任</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteLocalSideOfTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLocalSideOfTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLocalSideOfTrustRelationship (targetForestName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLocalSideOfTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.DeleteLocalSideOfTrustRelationship : string -&gt; unit" Usage="forest.DeleteLocalSideOfTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">与其存在信任关系的林的 DNS 名称。</param>
        <summary>删除信任关系的本地方。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 删除信任关系的一方后，将不再建立此信任关系。  
  
 若要通过一个方法调用删除信任关系的双方，请使用 <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=nameWithType> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForestName" /> 参数指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 没有信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteTrustRelationship (targetForest As Forest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest);" />
      <MemberSignature Language="F#" Value="member this.DeleteTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest -&gt; unit" Usage="forest.DeleteTrustRelationship targetForest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
      </Parameters>
      <Docs>
        <param name="targetForest">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象，它表示与其存在信任关系的目录林。</param>
        <summary>删除信任关系的双方。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要仅删除信任关系的一方，请使用 <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 没有信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>释放由该对象占用的资源。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="forest.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由该对象占用的所有托管资源和非托管资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="member this.Dispose : bool -&gt; unit" Usage="forest.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">一个 <see cref="T:System.Boolean" /> 值，该值确定是否应释放托管资源。 如果应释放托管资源，则为 <see langword="true" />；如果仅应释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放由该对象使用的托管资源，并可选择释放非托管资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Domains">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainCollection Domains { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainCollection Domains" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Domains" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Domains As DomainCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainCollection ^ Domains { System::DirectoryServices::ActiveDirectory::DomainCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Domains : System.DirectoryServices.ActiveDirectory.DomainCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.Domains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此目录林中所有域的集合。</summary>
        <value>当前 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 中包含 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 域的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" /> 集合。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Domain" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllDiscoverableGlobalCatalogs">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在此目录林中查找所有可发现的全局目录。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllDiscoverableGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableGlobalCatalogs () As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllDiscoverableGlobalCatalogs();" />
      <MemberSignature Language="F#" Value="member this.FindAllDiscoverableGlobalCatalogs : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllDiscoverableGlobalCatalogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在此目录林中查找所有可发现的全局目录。</summary>
        <returns>一个 <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />，它包含找到的全局目录的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以通过查询 DNS SRV 记录找到可发现的域控制器。  此方法只返回注册一般的非特定于站点的 GC SRV 记录的全局编录。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllDiscoverableGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableGlobalCatalogs (siteName As String) As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllDiscoverableGlobalCatalogs(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindAllDiscoverableGlobalCatalogs : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllDiscoverableGlobalCatalogs siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">要搜索的站点的名称。</param>
        <summary>在此目录林中查找指定站点的所有可发现的全局目录。</summary>
        <returns>一个 <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />，它包含找到的全局目录的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以通过查询 DNS SRV 记录找到可发现的全局编录。  如果全局编录未为指定站点注册 GC SRV 记录，则此方法不会返回该记录，即使全局编录位于该站点中。  
  
 此方法将返回注册指定站点的 GC SRV 记录的所有全局目录，即使这些目录可能不是位于该站点中的物理目录。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllGlobalCatalogs">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在此目录林中查找所有全局目录。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllGlobalCatalogs () As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllGlobalCatalogs();" />
      <MemberSignature Language="F#" Value="member this.FindAllGlobalCatalogs : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllGlobalCatalogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在此目录林中查找所有全局目录。</summary>
        <returns>一个 <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />，它包含找到的全局目录的集合。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllGlobalCatalogs (siteName As String) As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllGlobalCatalogs(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindAllGlobalCatalogs : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllGlobalCatalogs siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">要搜索的站点的名称。</param>
        <summary>在此目录林中查找给定站点的所有全局目录。</summary>
        <returns>一个 <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> 对象，它包含找到的全局目录的集合。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindGlobalCatalog">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在此目录林中查找单个全局目录。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog () As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog();" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在此目录林中查找任何全局目录。</summary>
        <returns>此 <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> 的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">找不到全局目录。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (flag As LocatorOptions) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : System.DirectoryServices.ActiveDirectory.LocatorOptions -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="flag">指定位置条件的 <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> 值。</param>
        <summary>在此目录林中查找满足所指定位置条件的一个全局目录。</summary>
        <returns>满足所指定位置条件的 <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">找不到全局目录。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (siteName As String) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">要搜索的站点的名称。</param>
        <summary>在此目录林中查找指定站点的全局目录。</summary>
        <returns>指定站点的 <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">找不到全局目录。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(string siteName, valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (siteName As String, flag As LocatorOptions) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::String ^ siteName, System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : string * System.DirectoryServices.ActiveDirectory.LocatorOptions -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog (siteName, flag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="siteName">要搜索的站点的名称。</param>
        <param name="flag">指定位置条件的 <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> 值。</param>
        <summary>在此目录林中查找满足指定站点和位置条件的全局目录。</summary>
        <returns>满足指定站点和位置条件的 <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">找不到全局目录。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="ForestMode">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ForestMode ForestMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ActiveDirectory.ForestMode ForestMode" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForestMode As ForestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ForestMode ForestMode { System::DirectoryServices::ActiveDirectory::ForestMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ForestMode : System.DirectoryServices.ActiveDirectory.ForestMode" Usage="System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ForestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此目录林的操作模式。</summary>
        <value>表示此 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 的当前林模式的 <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> 值。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Docs>
    </Member>
    <Member MemberName="ForestModeLevel">
      <MemberSignature Language="C#" Value="public int ForestModeLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ForestModeLevel" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForestModeLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ForestModeLevel { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ForestModeLevel : int" Usage="System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取林的运行模式级别。</summary>
        <value>林的运行模式级别。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllTrustRelationships">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllTrustRelationships () As TrustRelationshipInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::TrustRelationshipInformationCollection ^ GetAllTrustRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetAllTrustRelationships : unit -&gt; System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" Usage="forest.GetAllTrustRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取当前林的信任关系的集合。</summary>
        <returns>包含 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /> 对象的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> 集合，这些对象表示当前 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 的信任关系。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentForest">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentForest () As Forest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Forest ^ GetCurrentForest();" />
      <MemberSignature Language="F#" Value="static member GetCurrentForest : unit -&gt; System.DirectoryServices.ActiveDirectory.Forest" Usage="System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取当前用户上下文的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象。</summary>
        <returns>一个表示当前目录林的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetForest">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Forest GetForest (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Forest GetForest(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetForest (context As DirectoryContext) As Forest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Forest ^ GetForest(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetForest : System.DirectoryServices.ActiveDirectory.DirectoryContext -&gt; System.DirectoryServices.ActiveDirectory.Forest" Usage="System.DirectoryServices.ActiveDirectory.Forest.GetForest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> 对象，它包含用于检索对象的目标和凭据。</param>
        <summary>获取指定上下文的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象。</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象，它表示通过此方法检索到的林。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">无法与 <paramref name="context" /> 中指定的目标建立连接。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="context" /> 无效。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public bool GetSelectiveAuthenticationStatus (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSelectiveAuthenticationStatus(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectiveAuthenticationStatus (targetForestName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSelectiveAuthenticationStatus(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetSelectiveAuthenticationStatus : string -&gt; bool" Usage="forest.GetSelectiveAuthenticationStatus targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">与其存在入站信任关系的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 的 DNS 名称。</param>
        <summary>获取一个布尔值，该值指示是否对与指定林的入站信任关系启动选择性身份验证。  如果启用了选择性身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</summary>
        <returns>如果启用了选择性身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于林信任，如果选择 "选择性身份验证"，则必须在希望其他林中的用户可以访问的每个域和资源上手动启用权限。  
  
 如果用户在启用了选择性身份验证的信任中进行身份验证，则会向用户的授权数据中添加一个 (SID) 的其他组织安全 ID。 此 SID 将提示对资源域进行检查，以确保用户能够对特定服务进行身份验证。 对用户进行身份验证后，如果另一个组织 SID 尚不存在，则对用户进行身份验证的服务器将添加此组织 SID。 在进行了身份验证的用户的上下文中，只能存在一个这样的特殊 SID。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForestName" /> 指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 没有信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">对 <c>LsaQueryTrustedDomainInfoByName</c> 的调用失败。 有关详细信息，请参阅 <see href="/windows/win32/api/ntsecapi/nf-ntsecapi-lsaquerytrusteddomaininfobyname">LsaQueryTrustedDomainInfoByName</see>。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">当前对象已被释放。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">使用信任</related>
      </Docs>
    </Member>
    <Member MemberName="GetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public bool GetSidFilteringStatus (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSidFilteringStatus(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSidFilteringStatus (targetForestName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSidFilteringStatus(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetSidFilteringStatus : string -&gt; bool" Usage="forest.GetSidFilteringStatus targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">与其存在信任关系的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象的 DNS 名称。</param>
        <summary>获取某个信任的 SID 筛选状态。</summary>
        <returns>如果启用 SID 筛选，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForestName" /> 指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象没有信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">当前对象已被释放。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">使用信任</related>
      </Docs>
    </Member>
    <Member MemberName="GetTrustRelationship">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrustRelationship (targetForestName As String) As ForestTrustRelationshipInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ForestTrustRelationshipInformation ^ GetTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetTrustRelationship : string -&gt; System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" Usage="forest.GetTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">要为其获得信任关系信息的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象的名称。</param>
        <summary>获取此目录林与指定目录林之间的信任关系。</summary>
        <returns>一个 <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> 对象，它表示此目录林与指定目录林之间的信任关系。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForestName" /> 指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 没有信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">当前对象已被释放。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      </Docs>
    </Member>
    <Member MemberName="GlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalCatalogs As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ GlobalCatalogs { System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalCatalogs : System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此目录林中所有全局目录的集合。</summary>
        <value>包含当前 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 中 <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> 全局目录的 <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> 集合。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.DirectoryServices.ActiveDirectory.Forest.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此目录林的名称。</summary>
        <value>此 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 的名称。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
      </Docs>
    </Member>
    <Member MemberName="NamingRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamingRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ NamingRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamingRoleOwner : System.DirectoryServices.ActiveDirectory.DomainController" Usage="System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取拥有此目录林的 FSMO 命名主机角色的域控制器。</summary>
        <value>表示域控制器的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 对象，该控制器是此 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 的 FSMO 命名主机。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="RaiseForestFunctionality">
      <MemberSignature Language="C#" Value="public void RaiseForestFunctionality (System.DirectoryServices.ActiveDirectory.ForestMode forestMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseForestFunctionality(valuetype System.DirectoryServices.ActiveDirectory.ForestMode forestMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseForestFunctionality (forestMode As ForestMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseForestFunctionality(System::DirectoryServices::ActiveDirectory::ForestMode forestMode);" />
      <MemberSignature Language="F#" Value="member this.RaiseForestFunctionality : System.DirectoryServices.ActiveDirectory.ForestMode -&gt; unit" Usage="forest.RaiseForestFunctionality forestMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forestMode" Type="System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Parameters>
      <Docs>
        <param name="forestMode">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> 枚举值，用于为目录林指定新的操作级别。</param>
        <summary>为林提升操作模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.ActiveDirectory.ForestMode>值可以引发但不会降低。 这意味着，提升林的功能级别是不可逆的，并且应谨慎做出此操作的决策。  
  
 有关林操作模式的详细信息，请参阅 [域和林功能](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd894353(v%3dws.11))。
  
 下表根据 `forestMode` 林的当前操作模式定义的有效值。  
  
|当前模式|模式可提升到|  
|------------------|---------------------------|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|无|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException">根据该目录林的当前操作模式，为 <paramref name="forestMode" /> 指定的值无效。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="forestMode" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> 枚举值。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Docs>
    </Member>
    <Member MemberName="RaiseForestFunctionalityLevel">
      <MemberSignature Language="C#" Value="public void RaiseForestFunctionalityLevel (int forestMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseForestFunctionalityLevel(int32 forestMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseForestFunctionalityLevel (forestMode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseForestFunctionalityLevel(int forestMode);" />
      <MemberSignature Language="F#" Value="member this.RaiseForestFunctionalityLevel : int -&gt; unit" Usage="forest.RaiseForestFunctionalityLevel forestMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forestMode" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="forestMode">提升到此级别。</param>
        <summary>将林功能级别提升到给定设置。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepairTrustRelationship">
      <MemberSignature Language="C#" Value="public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RepairTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RepairTrustRelationship (targetForest As Forest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RepairTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest);" />
      <MemberSignature Language="F#" Value="member this.RepairTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest -&gt; unit" Usage="forest.RepairTrustRelationship targetForest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
      </Parameters>
      <Docs>
        <param name="targetForest">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象，表示与其存在信任关系的目录林对象。</param>
        <summary>修复信任关系。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForest" /> 指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象没有信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
      </Docs>
    </Member>
    <Member MemberName="RootDomain">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Domain RootDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Domain RootDomain" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootDomain As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::Domain ^ RootDomain { System::DirectoryServices::ActiveDirectory::Domain ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootDomain : System.DirectoryServices.ActiveDirectory.Domain" Usage="System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取目录林中创建的第一个域。</summary>
        <value><see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象，该对象表示此 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 中创建的第一个域。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Domain" />
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As ActiveDirectorySchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ActiveDirectorySchema ^ Schema { System::DirectoryServices::ActiveDirectory::ActiveDirectorySchema ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" Usage="System.DirectoryServices.ActiveDirectory.Forest.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此目录林的架构。</summary>
        <value><see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> 对象，该对象表示当前 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 的架构。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ SchemaRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaRoleOwner : System.DirectoryServices.ActiveDirectory.DomainController" Usage="System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取拥有此目录林的 FSMO 架构主机角色的域控制器。</summary>
        <value>表示域控制器的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 对象，该控制器是此 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 的 FSMO 架构主机。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="SetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public void SetSelectiveAuthenticationStatus (string targetForestName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectiveAuthenticationStatus(string targetForestName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectiveAuthenticationStatus (targetForestName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectiveAuthenticationStatus(System::String ^ targetForestName, bool enable);" />
      <MemberSignature Language="F#" Value="member this.SetSelectiveAuthenticationStatus : string * bool -&gt; unit" Usage="forest.SetSelectiveAuthenticationStatus (targetForestName, enable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetForestName">与其存在入站信任关系的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象的 DNS 名称。</param>
        <param name="enable">如果启用选择性身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>启用或禁用入站信任的选择性身份验证。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForestName" /> 指定的目录林没有信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">当前对象已被释放。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">使用信任</related>
      </Docs>
    </Member>
    <Member MemberName="SetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public void SetSidFilteringStatus (string targetForestName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSidFilteringStatus(string targetForestName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSidFilteringStatus (targetForestName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSidFilteringStatus(System::String ^ targetForestName, bool enable);" />
      <MemberSignature Language="F#" Value="member this.SetSidFilteringStatus : string * bool -&gt; unit" Usage="forest.SetSidFilteringStatus (targetForestName, enable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetForestName">与其存在信任关系的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象的 DNS 名称。</param>
        <param name="enable">如果要启用 SID 筛选，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>对指定林设置 SID 筛选状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，Windows Server 2003 中的新的外部和林信任 Active Directory 域服务强制执行 SID 筛选。  SID 筛选用于防止恶意用户攻击，这些用户可能会尝试将提升的用户权限授予其他用户帐户。  在林信任上强制执行 SID 筛选不会阻止迁移到同一个林中的域使用 SID 历史记录，也不会影响通用组访问控制策略。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForestName" /> 指定的目录林没有信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">当前对象已被释放。</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">使用信任</related>
      </Docs>
    </Member>
    <Member MemberName="Sites">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Sites" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sites As ReadOnlySiteCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ReadOnlySiteCollection ^ Sites { System::DirectoryServices::ActiveDirectory::ReadOnlySiteCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sites : System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.Sites" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此目录林中包含的站点的集合。</summary>
        <value>一个 <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />，它包含当前的 <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> 中的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 站点。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="forest.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前目录林的字符串表示形式。</summary>
        <returns>一个 <see cref="T:System.String" />，表示 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象的 DNS 名称。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateLocalSideOfTrustRelationship">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>更新信任关系本地方的密码。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetForestName, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetForestName, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetForestName As String, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::String ^ newTrustPassword);" />
      <MemberSignature Language="F#" Value="member this.UpdateLocalSideOfTrustRelationship : string * string -&gt; unit" Usage="forest.UpdateLocalSideOfTrustRelationship (targetForestName, newTrustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName"><see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象的名称，要更改该对象的本地信任密码。</param>
        <param name="newTrustPassword">该信任关系的新密码。</param>
        <summary>更新信任关系本地方的密码。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForestName" /> 指定的目录林没有信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> 或 <paramref name="newTrustPassword" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> 或 <paramref name="newTrustPassword" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">使用信任</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetForestName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetForestName As String, newTrustDirection As TrustDirection, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection, System::String ^ newTrustPassword);" />
      <MemberSignature Language="F#" Value="member this.UpdateLocalSideOfTrustRelationship : string * System.DirectoryServices.ActiveDirectory.TrustDirection * string -&gt; unit" Usage="forest.UpdateLocalSideOfTrustRelationship (targetForestName, newTrustDirection, newTrustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">必须为其更改本地信任方向和密码的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象的名称。</param>
        <param name="newTrustDirection">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值，表示该信任关系的新的信任方向。</param>
        <param name="newTrustPassword">该信任关系的新密码。</param>
        <summary>更新信任关系本地方的密码和信任方向。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForestName" /> 指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象没有信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> 或 <paramref name="newTrustPassword" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> 或 <paramref name="newTrustPassword" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="newTrustDirection" /> 参数不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateTrustRelationship (targetForest As Forest, newTrustDirection As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection);" />
      <MemberSignature Language="F#" Value="member this.UpdateTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.UpdateTrustRelationship (targetForest, newTrustDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象，必须更改该对象的信任方向。</param>
        <param name="newTrustDirection">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值，该值为信任关系指定新的信任方向。</param>
        <summary>更新信任关系的信任方向。 对信任的双方更新信任方向。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForest" /> 指定的目录林没有信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="newTrustDirection" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">使用信任</related>
      </Docs>
    </Member>
    <Member MemberName="VerifyOutboundTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyOutboundTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyOutboundTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyOutboundTrustRelationship (targetForestName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyOutboundTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.VerifyOutboundTrustRelationship : string -&gt; unit" Usage="forest.VerifyOutboundTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">与其存在信任的域的 DNS 名称。</param>
        <summary>确认以前建立的与指定目录林的出站信任是有效的。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForestName" /> 指定的目录林没有出站信任关系。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Forest" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">使用信任</related>
      </Docs>
    </Member>
    <Member MemberName="VerifyTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyTrustRelationship (targetForest As Forest, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberSignature Language="F#" Value="member this.VerifyTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.VerifyTrustRelationship (targetForest, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest">要确认其信任关系的 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象。</param>
        <param name="direction">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值，该值指定相对于此目录林的信任方向。</param>
        <summary>确认以前建立的与指定林的信任是有效的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法验证是否已完全建立了信任关系。 只有在创建信任的双方后，才会建立信任。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">与 <paramref name="targetForest" /> 指定的林没有信任关系，或者目标林没有 <paramref name="direction" /> 指定的信任方向。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">调用基础目录服务导致错误。</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">目标服务器忙或不可用。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction" /> 参数不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定的帐户没有权限执行此操作。</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">使用信任</related>
      </Docs>
    </Member>
  </Members>
</Type>
