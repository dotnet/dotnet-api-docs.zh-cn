<Type Name="LocalConstantHandleCollection" FullName="System.Reflection.Metadata.LocalConstantHandleCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f2a298d1b745ea658d5ffccd0030d85b4b4e060" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86792183" /></Metadata><TypeSignature Language="C#" Value="public struct LocalConstantHandleCollection : System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.LocalConstantHandle&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Reflection.Metadata.LocalConstantHandle&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalConstantHandleCollection extends System.ValueType implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Reflection.Metadata.LocalConstantHandle&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Reflection.Metadata.LocalConstantHandle&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.LocalConstantHandleCollection" />
  <TypeSignature Language="VB.NET" Value="Public Structure LocalConstantHandleCollection&#xA;Implements IEnumerable(Of LocalConstantHandle), IReadOnlyCollection(Of LocalConstantHandle)" />
  <TypeSignature Language="C++ CLI" Value="public value class LocalConstantHandleCollection : System::Collections::Generic::IEnumerable&lt;System::Reflection::Metadata::LocalConstantHandle&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Reflection::Metadata::LocalConstantHandle&gt;" />
  <TypeSignature Language="F#" Value="type LocalConstantHandleCollection = struct&#xA;    interface seq&lt;LocalConstantHandle&gt;&#xA;    interface IEnumerable&#xA;    interface IReadOnlyCollection&lt;LocalConstantHandle&gt;" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type LocalConstantHandleCollection = struct&#xA;    interface IReadOnlyCollection&lt;LocalConstantHandle&gt;&#xA;    interface seq&lt;LocalConstantHandle&gt;&#xA;    interface IEnumerable" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.LocalConstantHandle&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Reflection.Metadata.LocalConstantHandle&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.LocalConstantHandleCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Reflection.Metadata.LocalConstantHandleCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36270-101">获取集合中的元素数。</span><span class="sxs-lookup"><span data-stu-id="36270-101">Gets the number of elements in the collection.</span></span></summary>
        <value><span data-ttu-id="36270-102">集合中的元素数。</span><span class="sxs-lookup"><span data-stu-id="36270-102">The number of elements in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.LocalConstantHandleCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.LocalConstantHandleCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.LocalConstantHandleCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As LocalConstantHandleCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::LocalConstantHandleCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Reflection.Metadata.LocalConstantHandleCollection.Enumerator" Usage="localConstantHandleCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.LocalConstantHandleCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.LocalConstantHandle&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Reflection.Metadata.LocalConstantHandle&gt; IEnumerable&lt;LocalConstantHandle&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Reflection.Metadata.LocalConstantHandle&gt; System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.LocalConstantHandle&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.LocalConstantHandleCollection.System#Collections#Generic#IEnumerable&lt;System#Reflection#Metadata#LocalConstantHandle&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of LocalConstantHandle) Implements IEnumerable(Of LocalConstantHandle).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Reflection::Metadata::LocalConstantHandle&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.LocalConstantHandle&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Reflection::Metadata::LocalConstantHandle&gt;::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.LocalConstantHandle&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Reflection.Metadata.LocalConstantHandle&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.LocalConstantHandle&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Reflection.Metadata.LocalConstantHandle&gt;" Usage="localConstantHandleCollection.System.Collections.Generic.IEnumerable&lt;System.Reflection.Metadata.LocalConstantHandle&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Reflection.Metadata.LocalConstantHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36270-103">返回一个循环访问集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="36270-103">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="36270-104">用于循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="36270-104">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.LocalConstantHandleCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="localConstantHandleCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36270-105">返回循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="36270-105">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="36270-106">一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36270-106">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="36270-107">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="36270-107">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36270-108">它只能在 <xref:System.Reflection.Metadata.LocalConstantHandleCollection> 实例被强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="36270-108">It can be used only when the <xref:System.Reflection.Metadata.LocalConstantHandleCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
