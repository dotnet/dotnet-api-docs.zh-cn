<Type Name="MetadataStringDecoder" FullName="System.Reflection.Metadata.MetadataStringDecoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="729c111714a62d4b3f879140e0f11be76007c595" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89769953" /></Metadata><TypeSignature Language="C#" Value="public class MetadataStringDecoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetadataStringDecoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.MetadataStringDecoder" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataStringDecoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataStringDecoder" />
  <TypeSignature Language="F#" Value="type MetadataStringDecoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="T:System.Reflection.Metadata.MetadataReader" /> 提供一种自定义机制，用于解码表示文本的元数据中的字节序列。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

此类型可用于如下所示：
 
1. 自定义无效输入的处理。 如果未提供解码器，将 <xref:System.Reflection.Metadata.MetadataReader> 使用默认的回退替换 `\uFFFD` 。

2. 为每个解码操作重复使用现有的字符串，而不是分配新的字符串。

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataStringDecoder (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataStringDecoder.#ctor(System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataStringDecoder(System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Metadata.MetadataStringDecoder : System.Text.Encoding -&gt; System.Reflection.Metadata.MetadataStringDecoder" Usage="new System.Reflection.Metadata.MetadataStringDecoder encoding" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding">要使用的编码。</param>
        <summary>使用给定的编码初始化 <see cref="T:System.Reflection.Metadata.MetadataStringDecoder" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

若要缓存并重复使用现有字符串，请创建一个派生类，然后重写 <xref:System.Reflection.Metadata.MetadataStringDecoder.GetString(System.Byte*,System.Int32)> 。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultUTF8">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataStringDecoder DefaultUTF8 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Reflection.Metadata.MetadataStringDecoder DefaultUTF8" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.MetadataStringDecoder.DefaultUTF8" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultUTF8 As MetadataStringDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Reflection::Metadata::MetadataStringDecoder ^ DefaultUTF8 { System::Reflection::Metadata::MetadataStringDecoder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultUTF8 : System.Reflection.Metadata.MetadataStringDecoder" Usage="System.Reflection.Metadata.MetadataStringDecoder.DefaultUTF8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataStringDecoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在未向构造函数提供解码器时，获取 <see cref="T:System.Reflection.Metadata.MetadataReader" /> 解码 UTF-8 所使用的默认解码器。</summary>
        <value>用于解码 UTF-8 的默认解码器 <see cref="T:System.Reflection.Metadata.MetadataReader" /> 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.MetadataStringDecoder.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Reflection.Metadata.MetadataStringDecoder.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此实例使用的编码。</summary>
        <value>此实例使用的编码。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte* bytes, int byteCount);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataStringDecoder.GetString(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="abstract member GetString : nativeptr&lt;byte&gt; * int -&gt; string&#xA;override this.GetString : nativeptr&lt;byte&gt; * int -&gt; string" Usage="metadataStringDecoder.GetString (bytes, byteCount)" />
      <MemberSignature Language="C#" Value="public virtual string? GetString (byte* bytes, int byteCount);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">指向要解码的字节的指针。</param>
        <param name="byteCount">要解码的字节数。</param>
        <summary>获取元数据中字节序列的字符串。 如果需要，请替代此项以缓存字符串。 否则，它会通过直接转到 <see cref="P:System.Reflection.Metadata.MetadataStringDecoder.Encoding" /> 来实现，并且每次调用都将分配一个新字符串。</summary>
        <returns>已解码的字符串。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
