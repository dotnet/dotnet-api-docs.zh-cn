<Type Name="ContentUser" FullName="System.Security.RightsManagement.ContentUser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fc13752183af0b396f0292cefeb6a1b02a07014" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86577822" /></Metadata><TypeSignature Language="C#" Value="public class ContentUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentUser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.ContentUser" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentUser" />
  <TypeSignature Language="F#" Value="type ContentUser = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e69fa-101">表示要为其授予权限管理内容访问权限的用户或用户组。</span><span class="sxs-lookup"><span data-stu-id="e69fa-101">Represents a user or user-group for granting access to rights managed content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e69fa-102">与其他 <xref:System.Security.RightsManagement> 类型一样， <xref:System.Security.RightsManagement.ContentUser> 只能在完全信任的应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="e69fa-102">As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.ContentUser> is only usable in full trust applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e69fa-103">下面的示例演示如何使用 <xref:System.Security.RightsManagement.UnsignedPublishLicense.Owner%2A> 属性来分配此类型的变量。</span><span class="sxs-lookup"><span data-stu-id="e69fa-103">The following example shows how to use <xref:System.Security.RightsManagement.UnsignedPublishLicense.Owner%2A> property to assign a variable of this type.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubunpublic)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubunpublic)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentUser (string name, System.Security.RightsManagement.AuthenticationType authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Security.RightsManagement.AuthenticationType authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, authenticationType As AuthenticationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentUser(System::String ^ name, System::Security::RightsManagement::AuthenticationType authenticationType);" />
      <MemberSignature Language="F#" Value="new System.Security.RightsManagement.ContentUser : string * System.Security.RightsManagement.AuthenticationType -&gt; System.Security.RightsManagement.ContentUser" Usage="new System.Security.RightsManagement.ContentUser (name, authenticationType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="authenticationType" Type="System.Security.RightsManagement.AuthenticationType" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e69fa-104">用户或用户组名称。</span><span class="sxs-lookup"><span data-stu-id="e69fa-104">The user or group name.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="e69fa-105">身份验证的方法。</span><span class="sxs-lookup"><span data-stu-id="e69fa-105">The method for authentication.</span></span></param>
        <summary><span data-ttu-id="e69fa-106">初始化 <see cref="T:System.Security.RightsManagement.ContentUser" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e69fa-106">Initializes a new instance of the <see cref="T:System.Security.RightsManagement.ContentUser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e69fa-107">用户或组的 `name` 格式通常为单独的电子邮件地址 (例如 johndoe@contoso.com) 或电子邮件通讯组列表 (例如 marketing@contoso.com) 。</span><span class="sxs-lookup"><span data-stu-id="e69fa-107">The user or group `name` is often in the form of an individual email address (such as johndoe@contoso.com) or an email distribution list (such as marketing@contoso.com).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e69fa-108">下面的示例演示如何使用此构造函数创建安全环境。</span><span class="sxs-lookup"><span data-stu-id="e69fa-108">The following example shows how to use this constructor to create a secure environment.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnyoneUser">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.ContentUser AnyoneUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.RightsManagement.ContentUser AnyoneUser" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.AnyoneUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AnyoneUser As ContentUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::RightsManagement::ContentUser ^ AnyoneUser { System::Security::RightsManagement::ContentUser ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnyoneUser : System.Security.RightsManagement.ContentUser" Usage="System.Security.RightsManagement.ContentUser.AnyoneUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.ContentUser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e69fa-109">获取“Anyone”<see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的实例。</span><span class="sxs-lookup"><span data-stu-id="e69fa-109">Gets an instance of the "Anyone" <see cref="T:System.Security.RightsManagement.ContentUser" /> persona.</span></span></summary>
        <value><span data-ttu-id="e69fa-110">“Anyone”<see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的一个实例。</span><span class="sxs-lookup"><span data-stu-id="e69fa-110">An instance of the "Anyone" <see cref="T:System.Security.RightsManagement.ContentUser" /> persona.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e69fa-111"><xref:System.Security.RightsManagement.ContentUser.AnyoneUser%2A> 具有 <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> "内部" 和 <xref:System.Security.RightsManagement.ContentUser.Name%2A> "任何人"。</span><span class="sxs-lookup"><span data-stu-id="e69fa-111"><xref:System.Security.RightsManagement.ContentUser.AnyoneUser%2A> has <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> "Internal" and <xref:System.Security.RightsManagement.ContentUser.Name%2A> "Anyone".</span></span>  
  
 <span data-ttu-id="e69fa-112">如果在 <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> <xref:System.Security.RightsManagement.ContentUser.Name%2A> 发布过程中为 "内部" 授予 "任何人" 权限，则身份验证服务器将 <xref:System.Security.RightsManagement.UseLicense> 向任何请求发出，并将许可证附加到请求用户。</span><span class="sxs-lookup"><span data-stu-id="e69fa-112">If <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> "Internal" with <xref:System.Security.RightsManagement.ContentUser.Name%2A> "Anyone" is granted rights during publishing, the authentication server will issue a <xref:System.Security.RightsManagement.UseLicense> to any request and will attach the license to the requesting user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.ContentUser.OwnerUser" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.AuthenticationType AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.RightsManagement.AuthenticationType AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As AuthenticationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::RightsManagement::AuthenticationType AuthenticationType { System::Security::RightsManagement::AuthenticationType get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : System.Security.RightsManagement.AuthenticationType" Usage="System.Security.RightsManagement.ContentUser.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.AuthenticationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e69fa-113">获取为 <see cref="T:System.Security.RightsManagement.AuthenticationType" /> 构造函数指定的 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />。</span><span class="sxs-lookup"><span data-stu-id="e69fa-113">Gets the <see cref="T:System.Security.RightsManagement.AuthenticationType" /> specified to the <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> constructor.</span></span></summary>
        <value><span data-ttu-id="e69fa-114">为 <see cref="T:System.Security.RightsManagement.AuthenticationType" /> 构造函数指定的 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />。</span><span class="sxs-lookup"><span data-stu-id="e69fa-114">The <see cref="T:System.Security.RightsManagement.AuthenticationType" /> specified to the <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> constructor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="contentUser.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e69fa-115">要比较是否等效的用户实例。</span><span class="sxs-lookup"><span data-stu-id="e69fa-115">The user instance to compare for equality.</span></span></param>
        <summary><span data-ttu-id="e69fa-116">返回一个值，该值指示此 <see cref="T:System.Security.RightsManagement.ContentUser" /> 是否与另一个给定实例等效。</span><span class="sxs-lookup"><span data-stu-id="e69fa-116">Returns a value that indicates whether this <see cref="T:System.Security.RightsManagement.ContentUser" /> is equivalent to another given instance.</span></span></summary>
        <returns><span data-ttu-id="e69fa-117">如果 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 和 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> 对于此用户和给定用户是相同的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e69fa-117"><see langword="true" /> if <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> and <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> are the same for both this user and the given user; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="contentUser.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e69fa-118">返回基于用户 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 和 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> 计算出的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e69fa-118">Returns a computed hash code based on the user <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> and <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</span></span></summary>
        <returns><span data-ttu-id="e69fa-119">基于用户 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 和 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> 计算出的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e69fa-119">A hash code computed from the user <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> and <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuthenticated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAuthenticated () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAuthenticated();" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : unit -&gt; bool" Usage="contentUser.IsAuthenticated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e69fa-120">返回一个值，该值指示当前是否已验证用户的身份。</span><span class="sxs-lookup"><span data-stu-id="e69fa-120">Returns a value that indicates whether the user is currently authenticated.</span></span></summary>
        <returns><span data-ttu-id="e69fa-121">如果当前已验证用户的身份，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e69fa-121"><see langword="true" /> if the user is currently authenticated; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="e69fa-122">在进行身份验证之前，默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e69fa-122">The default is <see langword="false" /> until authenticated.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e69fa-123">给定用户 <xref:System.Security.RightsManagement.ContentUser.Name%2A> 根据给定的进行身份验证 <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e69fa-123">The given user <xref:System.Security.RightsManagement.ContentUser.Name%2A> is authenticated based on the given <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>.</span></span>  
  
 <span data-ttu-id="e69fa-124">用户经过身份验证后，在 <xref:System.Security.RightsManagement.ContentUser.IsAuthenticated%2A> `true` 创建时，将不再显示用户对话框和提示确认身份验证 <xref:System.Security.RightsManagement.SecureEnvironment> 。</span><span class="sxs-lookup"><span data-stu-id="e69fa-124">After a user has been authenticated and <xref:System.Security.RightsManagement.ContentUser.IsAuthenticated%2A> is `true`, the user dialog and prompt to confirm authentication is no longer displayed when creating a <xref:System.Security.RightsManagement.SecureEnvironment>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Security.RightsManagement.ContentUser.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e69fa-125">获取为 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> 构造函数指定的用户或用户组名称。</span><span class="sxs-lookup"><span data-stu-id="e69fa-125">Gets the user or group name specified to the <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> constructor.</span></span></summary>
        <value><span data-ttu-id="e69fa-126">为 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> 构造函数指定的用户或用户组名称。</span><span class="sxs-lookup"><span data-stu-id="e69fa-126">The user or group name specified to the <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> constructor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerUser">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.ContentUser OwnerUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.RightsManagement.ContentUser OwnerUser" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.OwnerUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OwnerUser As ContentUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::RightsManagement::ContentUser ^ OwnerUser { System::Security::RightsManagement::ContentUser ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerUser : System.Security.RightsManagement.ContentUser" Usage="System.Security.RightsManagement.ContentUser.OwnerUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.ContentUser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e69fa-127">获取“Owner”<see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的实例。</span><span class="sxs-lookup"><span data-stu-id="e69fa-127">Gets an instance of the "Owner" <see cref="T:System.Security.RightsManagement.ContentUser" /> persona.</span></span></summary>
        <value><span data-ttu-id="e69fa-128">“Owner”<see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的一个实例。</span><span class="sxs-lookup"><span data-stu-id="e69fa-128">An instance of the "Owner" <see cref="T:System.Security.RightsManagement.ContentUser" /> persona.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e69fa-129"><xref:System.Security.RightsManagement.ContentUser.OwnerUser%2A> 具有 <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> "内部" 和 <xref:System.Security.RightsManagement.ContentUser.Name%2A> "所有者"。</span><span class="sxs-lookup"><span data-stu-id="e69fa-129"><xref:System.Security.RightsManagement.ContentUser.OwnerUser%2A> has <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> "Internal" and <xref:System.Security.RightsManagement.ContentUser.Name%2A> "Owner".</span></span>  
  
 <span data-ttu-id="e69fa-130"><xref:System.Security.RightsManagement.ContentUser.OwnerUser%2A> 当创建受保护的文档时，服务器端模板使用来给予内容作者或发布者的特殊权限。</span><span class="sxs-lookup"><span data-stu-id="e69fa-130"><xref:System.Security.RightsManagement.ContentUser.OwnerUser%2A> is used by the server-side templates to give special rights to the content author or publisher when the protected document is created.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.ContentUser.AnyoneUser" />
      </Docs>
    </Member>
  </Members>
</Type>
