<Type Name="SecurityTokenSerializer" FullName="System.IdentityModel.Selectors.SecurityTokenSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f35996077f6483851fbe776cbdb2f400f4e5ed56" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82502489" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenSerializer abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fdd9a-101">表示一个类，它可以读写密钥标识符、密钥标识符子句和安全令牌。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-101">Represents a class that can read and write key identifiers, key identifier clauses, and security tokens.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-102">使用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类将 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> 和 <xref:System.IdentityModel.Tokens.SecurityToken> 类作为 XML 进行读写。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-102">Use the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class to read and write <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>, <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>, and <xref:System.IdentityModel.Tokens.SecurityToken> classes as XML.</span></span> <span data-ttu-id="fdd9a-103"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类具有确定此类是否可读写这些实体以及实际读写它们的方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-103">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class has methods to determine whether this class can read and write these entities and to actually read and write them.</span></span> <span data-ttu-id="fdd9a-104">对于安全令牌，这些方法为 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%2A>、<xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%2A>、<xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%2A>。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-104">For security tokens, these methods are <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%2A>, and <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdd9a-105">初始化 <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-105">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifier">
      <MemberSignature Language="C#" Value="public bool CanReadKeyIdentifier (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadKeyIdentifier(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadKeyIdentifier (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadKeyIdentifier(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadKeyIdentifier : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifier reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-106">读取密钥标识符的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-106">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="fdd9a-107">确定此序列化程序是否可读取由指定的 XML 读取器引用的<see langword="&lt;KeyIdentifier&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-107">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-108">如果可以读取指定的 <see langword="true" /> XML 元素，则为 <see langword="&lt;KeyIdentifier&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-108"><see langword="true" /> when the specified <see langword="&lt;KeyIdentifier&gt;" /> XML element can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-109">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-109">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="fdd9a-110"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-110">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-111"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-111"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-112">读取密钥标识符子句的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-112">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="fdd9a-113">确定此序列化程序是否可读取由指定的 XML 读取器引用的<see langword="&lt;KeyIdentifier&gt;" /> 元素中的子句。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-113">Determines whether this serializer can read a clause in a <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-114">如果可以读取指定的密钥标识符子句，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-114"><see langword="true" /> when the specified key identifier clause can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-115">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-115">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="fdd9a-116"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-116">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-117"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-117"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadKeyIdentifierClauseCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadKeyIdentifierClauseCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadKeyIdentifierClauseCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierClauseCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierClauseCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-118">读取密钥标识符子句的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-118">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="fdd9a-119">确定此序列化程序是否可读取由指定的 XML 读取器引用的<see langword="&lt;KeyIdentifier&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-119">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span></span> <span data-ttu-id="fdd9a-120">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-120">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-121">如果可以读取指定的 <see langword="true" /> 元素，则为 <see langword="&lt;KeyIdentifier&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-121"><see langword="true" /> when the specified <see langword="&lt;KeyIdentifier&gt;" /> element can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-122">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-122">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="fdd9a-123"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-123">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-124"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-124"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadKeyIdentifierCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadKeyIdentifierCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadKeyIdentifierCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadKeyIdentifierCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-125">读取密钥标识符的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-125">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="fdd9a-126">确定此序列化程序是否可读取由指定的 XML 读取器引用的<see langword="&lt;KeyIdentifier&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-126">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span></span> <span data-ttu-id="fdd9a-127">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-127">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-128">如果可以读取指定的密钥标识符子句，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-128"><see langword="true" /> when the specified key identifier clause can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-129">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-129">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="fdd9a-130"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-130">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-131"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-131"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-132">读取安全令牌的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-132">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span></span></param>
        <summary><span data-ttu-id="fdd9a-133">确定此序列化程序是否可读取由指定的 XML 读取器指向的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-133">Determines whether this serializer can read the security token pointed at by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-134">如果可以读取安全令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-134"><see langword="true" /> when the security token can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-135">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-135">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="fdd9a-136"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-136">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-137"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-137"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadTokenCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadTokenCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadTokenCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadTokenCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadTokenCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadTokenCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-138">读取安全令牌的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-138">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span></span></param>
        <summary><span data-ttu-id="fdd9a-139">确定此序列化程序是否可读取由指定的 XML 读取器指向的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-139">Determines whether this serializer can read the security token pointed at by the specified XML reader.</span></span> <span data-ttu-id="fdd9a-140">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-140">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-141">如果可以读取安全令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-141"><see langword="true" /> when the security token can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-142">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-142">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="fdd9a-143"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-143">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-144"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-144"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifier">
      <MemberSignature Language="C#" Value="public bool CanWriteKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteKeyIdentifier(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteKeyIdentifier (keyIdentifier As SecurityKeyIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteKeyIdentifier(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.CanWriteKeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifier keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="fdd9a-145">表示要编写的密钥标识符的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-145">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span></span></param>
        <summary><span data-ttu-id="fdd9a-146">确定此序列化程序是否可以编写指定的密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-146">Determines whether this serializer can write the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-147">如果此序列化程序可以编写指定的密钥标识符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-147"><see langword="true" /> when this serializer can write the specified key identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-148">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-148">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="fdd9a-149"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-149">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-150"><paramref name="keyIdentifier" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-150"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierClause keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="fdd9a-151">表示要编写的密钥标识符子句的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-151">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span></span></param>
        <summary><span data-ttu-id="fdd9a-152">确定此序列化程序是否可以编写指定的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-152">Determines whether this serializer can write the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-153">如果此序列化程序可以编写指定的密钥标识符子句，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-153"><see langword="true" /> when this serializer can write the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-154">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-154">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="fdd9a-155"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-155">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-156"><paramref name="keyIdentifierClause" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-156"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteKeyIdentifierClauseCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteKeyIdentifierClauseCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteKeyIdentifierClauseCore (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteKeyIdentifierClauseCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierClauseCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierClauseCore keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="fdd9a-157">表示要编写的密钥标识符子句的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-157">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span></span></param>
        <summary><span data-ttu-id="fdd9a-158">确定此序列化程序是否可以编写指定的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-158">Determines whether this serializer can write the specified key identifier clause.</span></span> <span data-ttu-id="fdd9a-159">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-159">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-160">如果此序列化程序可以编写指定的密钥标识符子句，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-160"><see langword="true" /> when this serializer can write the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-161">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-161">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="fdd9a-162"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-162">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-163"><paramref name="keyIdentifierClause" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-163"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteKeyIdentifierCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteKeyIdentifierCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteKeyIdentifierCore (keyIdentifier As SecurityKeyIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteKeyIdentifierCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierCore : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierCore keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="fdd9a-164">表示要编写的密钥标识符的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-164">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span></span></param>
        <summary><span data-ttu-id="fdd9a-165">确定此序列化程序是否可以编写指定的密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-165">Determines whether this serializer can write the specified key identifier.</span></span> <span data-ttu-id="fdd9a-166">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-166">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-167">如果此序列化程序可以编写指定的密钥标识符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-167"><see langword="true" /> when this serializer can write the specified key identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-168">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-168">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="fdd9a-169"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-169">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-170"><paramref name="keyIdentifier" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-170"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public bool CanWriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteToken (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenSerializer.CanWriteToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="fdd9a-171">要转换为 XML 的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-171">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</span></span></param>
        <summary><span data-ttu-id="fdd9a-172">确定此序列化程序是否可以将指定的安全令牌编写为 XML。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-172">Determines whether this serializer can write the specified security token to XML.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-173">如果可以编写安全令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-173"><see langword="true" /> when the security token can be written; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-174">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-174">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="fdd9a-175"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-175">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-176"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-176"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenSerializer.CanWriteTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="fdd9a-177">要转换为 XML 的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-177">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</span></span></param>
        <summary><span data-ttu-id="fdd9a-178">确定此序列化程序是否可以将指定的安全令牌编写为 XML。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-178">Determines whether this serializer can write the specified security token to XML.</span></span> <span data-ttu-id="fdd9a-179">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-179">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-180">如果可以编写安全令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-180"><see langword="true" /> when the security token can be written; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-181">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-181">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="fdd9a-182"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-182">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-183"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-183"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifier (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifier(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadKeyIdentifier (reader As XmlReader) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadKeyIdentifier(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadKeyIdentifier : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="securityTokenSerializer.ReadKeyIdentifier reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-184">读取密钥标识符的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-184">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="fdd9a-185">使用指定的 XML 读取器读取密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-185">Reads the key identifier using specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-186">表示所读取的密钥标识符的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-186">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-187">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-187">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="fdd9a-188"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-188">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-189"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-189"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenSerializer.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-190">读取密钥标识符的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-190">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="fdd9a-191">使用指定的 XML 读取器读取密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-191">Reads the key identifier clause using specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-192">表示所读取的密钥标识符的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-192">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-193">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-193">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="fdd9a-194"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-194">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-195"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-195"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadKeyIdentifierClauseCore (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClauseCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierClauseCore : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenSerializer.ReadKeyIdentifierClauseCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-196">读取密钥标识符的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-196">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="fdd9a-197">使用指定的 XML 读取器读取密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-197">Reads the key identifier clause using specified XML reader.</span></span> <span data-ttu-id="fdd9a-198">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-198">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-199">表示所读取的密钥标识符的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-199">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-200">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-200">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="fdd9a-201"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-201">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-202"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-202"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifierCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifierCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadKeyIdentifierCore (reader As XmlReader) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadKeyIdentifierCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierCore : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="securityTokenSerializer.ReadKeyIdentifierCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-203">读取密钥标识符的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-203">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="fdd9a-204">使用指定的 XML 读取器读取密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-204">Reads the key identifier clause using specified XML reader.</span></span> <span data-ttu-id="fdd9a-205">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-205">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-206">表示所读取的密钥标识符的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-206">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-207">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-207">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="fdd9a-208"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-208">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-209"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-209"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="member this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenSerializer.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-210">读取安全令牌的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-210">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="fdd9a-211">确定安全令牌类型的 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-211">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</span></span></param>
        <summary><span data-ttu-id="fdd9a-212">读取由指定的 XML 读取器指向的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-212">Reads the security token pointed at by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-213">表示所读取的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-213">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-214">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-214">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span> <span data-ttu-id="fdd9a-215"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-215">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-216"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-216"><paramref name="reader" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fdd9a-217">- 或 -</span><span class="sxs-lookup"><span data-stu-id="fdd9a-217">-or-</span></span> 
 <span data-ttu-id="fdd9a-218"><paramref name="tokenResolver" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-218"><paramref name="tokenResolver" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityToken ReadTokenCore (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadTokenCore(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadTokenCore (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityToken ^ ReadTokenCore(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadTokenCore : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenSerializer.ReadTokenCore (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="fdd9a-219">读取安全令牌的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-219">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="fdd9a-220">确定安全令牌类型的 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-220">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</span></span></param>
        <summary><span data-ttu-id="fdd9a-221">读取由指定的 XML 读取器指向的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-221">Reads the security token pointed at by the specified XML reader.</span></span> <span data-ttu-id="fdd9a-222">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-222">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="fdd9a-223">表示所读取的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-223">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-224">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-224">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span> <span data-ttu-id="fdd9a-225"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-225">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-226"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-226"><paramref name="reader" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fdd9a-227">- 或 -</span><span class="sxs-lookup"><span data-stu-id="fdd9a-227">-or-</span></span> 
 <span data-ttu-id="fdd9a-228"><paramref name="tokenResolver" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-228"><paramref name="tokenResolver" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifier">
      <MemberSignature Language="C#" Value="public void WriteKeyIdentifier (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteKeyIdentifier(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteKeyIdentifier (writer As XmlWriter, keyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteKeyIdentifier(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.WriteKeyIdentifier : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifier (writer, keyIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fdd9a-229">编写密钥标识符的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-229">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier.</span></span></param>
        <param name="keyIdentifier"><span data-ttu-id="fdd9a-230">表示要编写的密钥标识符的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-230">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span></span></param>
        <summary><span data-ttu-id="fdd9a-231">使用指定的 XML 编写器编写指定的密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-231">Writes the specified key identifier using the specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-232">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-232">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="fdd9a-233"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-233">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-234"><paramref name="keyIdentifier" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-234"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fdd9a-235">- 或 -</span><span class="sxs-lookup"><span data-stu-id="fdd9a-235">-or-</span></span> 
 <span data-ttu-id="fdd9a-236"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-236"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteKeyIdentifierClause (writer As XmlWriter, keyIdentifierClause As SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierClause (writer, keyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fdd9a-237">编写密钥标识符子句的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-237">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier clause.</span></span></param>
        <param name="keyIdentifierClause"><span data-ttu-id="fdd9a-238">表示要编写的密钥标识符子句的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-238">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span></span></param>
        <summary><span data-ttu-id="fdd9a-239">使用指定的 XML 编写器编写指定的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-239">Writes the specified key identifier clause using the specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-240">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-240">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="fdd9a-241"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-241">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-242"><paramref name="keyIdentifierClause" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-242"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fdd9a-243">- 或 -</span><span class="sxs-lookup"><span data-stu-id="fdd9a-243">-or-</span></span> 
 <span data-ttu-id="fdd9a-244"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-244"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteKeyIdentifierClauseCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteKeyIdentifierClauseCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteKeyIdentifierClauseCore (writer As XmlWriter, keyIdentifierClause As SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteKeyIdentifierClauseCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierClauseCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierClauseCore (writer, keyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fdd9a-245">编写密钥标识符子句的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-245">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier clause.</span></span></param>
        <param name="keyIdentifierClause"><span data-ttu-id="fdd9a-246">表示要编写的密钥标识符子句的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-246">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span></span></param>
        <summary><span data-ttu-id="fdd9a-247">使用指定的 XML 编写器编写指定的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-247">Writes the specified key identifier clause using the specified XML writer.</span></span> <span data-ttu-id="fdd9a-248">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-248">Called by the base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-249">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-249">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="fdd9a-250"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-250">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-251"><paramref name="keyIdentifierClause" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-251"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fdd9a-252">- 或 -</span><span class="sxs-lookup"><span data-stu-id="fdd9a-252">-or-</span></span> 
 <span data-ttu-id="fdd9a-253"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-253"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteKeyIdentifierCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteKeyIdentifierCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteKeyIdentifierCore (writer As XmlWriter, keyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteKeyIdentifierCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierCore (writer, keyIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fdd9a-254">编写密钥标识符的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-254">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier.</span></span></param>
        <param name="keyIdentifier"><span data-ttu-id="fdd9a-255">表示要编写的密钥标识符的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-255">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span></span></param>
        <summary><span data-ttu-id="fdd9a-256">使用指定的 XML 编写器编写指定的密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-256">Writes the specified key identifier using the specified XML writer.</span></span> <span data-ttu-id="fdd9a-257">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-257">Called by the base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-258">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-258">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="fdd9a-259"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-259">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-260"><paramref name="keyIdentifier" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-260"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fdd9a-261">- 或 -</span><span class="sxs-lookup"><span data-stu-id="fdd9a-261">-or-</span></span> 
 <span data-ttu-id="fdd9a-262"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-262"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenSerializer.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fdd9a-263">编写安全令牌的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-263">A <see cref="T:System.Xml.XmlWriter" /> to write the security token.</span></span></param>
        <param name="token"><span data-ttu-id="fdd9a-264">表示要编写的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-264">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to write.</span></span></param>
        <summary><span data-ttu-id="fdd9a-265">使用指定的 XML 编写器编写指定的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-265">Writes the specified security token using the specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-266">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-266">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="fdd9a-267"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-267">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-268"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-268"><paramref name="token" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fdd9a-269">- 或 -</span><span class="sxs-lookup"><span data-stu-id="fdd9a-269">-or-</span></span> 
 <span data-ttu-id="fdd9a-270"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-270"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTokenCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteTokenCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTokenCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteTokenCore (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteTokenCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteTokenCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenSerializer.WriteTokenCore (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fdd9a-271">编写安全令牌的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-271">A <see cref="T:System.Xml.XmlWriter" /> to write the security token.</span></span></param>
        <param name="token"><span data-ttu-id="fdd9a-272">表示要编写的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-272">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to write.</span></span></param>
        <summary><span data-ttu-id="fdd9a-273">使用指定的 XML 编写器编写指定的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-273">Writes the specified security token using the specified XML writer.</span></span> <span data-ttu-id="fdd9a-274">供基类调用。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-274">Called by the base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdd9a-275">从 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类派生的类必须重写 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-275">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="fdd9a-276"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-276">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdd9a-277"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-277"><paramref name="token" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fdd9a-278">- 或 -</span><span class="sxs-lookup"><span data-stu-id="fdd9a-278">-or-</span></span> 
 <span data-ttu-id="fdd9a-279"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fdd9a-279"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
