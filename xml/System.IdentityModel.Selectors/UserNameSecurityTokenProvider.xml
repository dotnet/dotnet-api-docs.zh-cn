<Type Name="UserNameSecurityTokenProvider" FullName="System.IdentityModel.Selectors.UserNameSecurityTokenProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="226ac872fa4cf099222023806346706f4a5971dd" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86804937" /></Metadata><TypeSignature Language="C#" Value="public class UserNameSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UserNameSecurityTokenProvider extends System.IdentityModel.Selectors.SecurityTokenProvider" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.UserNameSecurityTokenProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class UserNameSecurityTokenProvider&#xA;Inherits SecurityTokenProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserNameSecurityTokenProvider : System::IdentityModel::Selectors::SecurityTokenProvider" />
  <TypeSignature Language="F#" Value="type UserNameSecurityTokenProvider = class&#xA;    inherit SecurityTokenProvider" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示为 SOAP 消息发送方提供 <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> 安全令牌的安全令牌提供程序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 多数情况下无需直接调用 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider> 类，因为它在客户端发送需要 <xref:System.IdentityModel.Tokens.UserNameSecurityToken> 安全令牌的 SOAP 消息时调用。 具体来说，客户端使用 <xref:System.ServiceModel.Description.ClientCredentials> 类指定所需的安全令牌的类型，然后 <xref:System.ServiceModel.Description.ClientCredentials> 类调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法来获取安全令牌。 如果所需的安全令牌为 <xref:System.IdentityModel.Tokens.UserNameSecurityToken> 安全令牌，则 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore%2A> 方法。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
    <related type="Article" href="/dotnet/framework/wcf/extending/how-to-create-a-custom-token">如何：创建自定义令牌</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserNameSecurityTokenProvider (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UserNameSecurityTokenProvider(System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.UserNameSecurityTokenProvider : string * string -&gt; System.IdentityModel.Selectors.UserNameSecurityTokenProvider" Usage="new System.IdentityModel.Selectors.UserNameSecurityTokenProvider (userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">要为其获取 <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> 安全令牌的用户的用户名。</param>
        <param name="password">要为其获取 <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> 安全令牌的用户的密码。</param>
        <summary>使用指定的用户名和密码初始化 <see cref="T:System.IdentityModel.Selectors.UserNameSecurityTokenProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore%2A> 方法根据指定的用户名和密码获取令牌。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCore">
      <MemberSignature Language="C#" Value="protected override System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken GetTokenCore(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTokenCore (timeout As TimeSpan) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ GetTokenCore(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.GetTokenCore : TimeSpan -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="userNameSecurityTokenProvider.GetTokenCore timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</param>
        <summary>根据构造函数中指定的用户名和密码获取安全令牌。</summary>
        <returns>表示要获取的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当客户端发送 SOAP 消息并且需要 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore%2A> 安全令牌时，<xref:System.ServiceModel.Description.ClientCredentials> 类会调用 <xref:System.IdentityModel.Tokens.UserNameSecurityToken> 方法。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
