<Type Name="X509SecurityTokenProvider" FullName="System.IdentityModel.Selectors.X509SecurityTokenProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2d46fbbecba705ea57af9e1d731ccfd140f8d94a" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89875076" /></Metadata><TypeSignature Language="C#" Value="public class X509SecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenProvider, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SecurityTokenProvider extends System.IdentityModel.Selectors.SecurityTokenProvider implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class X509SecurityTokenProvider&#xA;Inherits SecurityTokenProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SecurityTokenProvider : System::IdentityModel::Selectors::SecurityTokenProvider, IDisposable" />
  <TypeSignature Language="F#" Value="type X509SecurityTokenProvider = class&#xA;    inherit SecurityTokenProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示为 SOAP 消息发送方提供 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 安全令牌的安全令牌提供程序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 多数情况下，无需直接调用 <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider> 类，因为它在客户端发送需要 <xref:System.IdentityModel.Tokens.X509SecurityToken> 安全令牌的 SOAP 消息时调用。 具体来说，客户端使用 <xref:System.ServiceModel.Description.ClientCredentials> 类指定所需的安全令牌的类型，然后 <xref:System.ServiceModel.Description.ClientCredentials> 类调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法来获取安全令牌。 如果所需的安全令牌为 <xref:System.IdentityModel.Tokens.X509SecurityToken> 安全令牌，则 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A> 方法。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
    <related type="Article" href="/dotnet/framework/wcf/extending/how-to-create-a-custom-token">如何：创建自定义令牌</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenProvider (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenProvider(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.X509SecurityTokenProvider : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.IdentityModel.Selectors.X509SecurityTokenProvider" Usage="new System.IdentityModel.Selectors.X509SecurityTokenProvider certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">要为其获取安全令牌的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />。</param>
        <summary>使用指定的 X.509 证书初始化 <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A> 方法根据 `certificate` 参数中指定的证书获取安全令牌。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenProvider (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeLocation As StoreLocation, storeName As StoreName, findType As X509FindType, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenProvider(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.X509SecurityTokenProvider : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; System.IdentityModel.Selectors.X509SecurityTokenProvider" Usage="new System.IdentityModel.Selectors.X509SecurityTokenProvider (storeLocation, storeName, findType, findValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation"><see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> 值之一，该值指定了证书存储位置。</param>
        <param name="storeName"><see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> 值之一，该值指定了证书存储名称。</param>
        <param name="findType"><see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> 值之一，该值指定了如何搜索证书存储。</param>
        <param name="findValue">用于在证书存储区中查找 X.509 证书的值。</param>
        <summary>通过从指定的证书存储条件中获取 X.509 证书来初始化 <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A> 方法根据与指定的证书存储条件匹配的证书获取安全令牌。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="findValue" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">没有与指定的条件匹配的证书。  
  
 - 或 -  
  
 有多个证书与指定的条件匹配。</exception>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 安全令牌相关联的 X.509 证书。</summary>
        <value>获取用于表示安全令牌的 X.509 证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A> 方法根据 <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate%2A> 属性表示的证书获取安全令牌。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="x509SecurityTokenProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由 <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" /> 使用的所有资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCore">
      <MemberSignature Language="C#" Value="protected override System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken GetTokenCore(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTokenCore (timeout As TimeSpan) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ GetTokenCore(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.GetTokenCore : TimeSpan -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="x509SecurityTokenProvider.GetTokenCore timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</param>
        <summary>使用构造函数中指定的 X.509 证书获取安全令牌。</summary>
        <returns>表示要获取的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当客户端发送 SOAP 消息并需要 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 安全令牌时，<xref:System.ServiceModel.Description.ClientCredentials> 类会调用 <xref:System.IdentityModel.Tokens.X509SecurityToken> 方法。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
