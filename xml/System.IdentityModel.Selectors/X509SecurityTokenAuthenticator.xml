<Type Name="X509SecurityTokenAuthenticator" FullName="System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e55485ad8ed0f89f56199a9e28747955356940a2" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69283647" /></Metadata><TypeSignature Language="C#" Value="public class X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SecurityTokenAuthenticator extends System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />
  <TypeSignature Language="VB.NET" Value="Public Class X509SecurityTokenAuthenticator&#xA;Inherits SecurityTokenAuthenticator" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SecurityTokenAuthenticator : System::IdentityModel::Selectors::SecurityTokenAuthenticator" />
  <TypeSignature Language="F#" Value="type X509SecurityTokenAuthenticator = class&#xA;    inherit SecurityTokenAuthenticator" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenAuthenticator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2c08d-101">对 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="2c08d-101">Authenticates an <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c08d-102">使用 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> 类对 <xref:System.IdentityModel.Tokens.X509SecurityToken> 安全令牌进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="2c08d-102">Use the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class to authenticate <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2c08d-103">初始化 <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2c08d-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c08d-104">初始化 <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2c08d-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c08d-105">如果调用 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法对令牌进行身份验证，则不会将 X.509 证书映射到 Windows 标识，也不会使用证书链来验证证书。</span><span class="sxs-lookup"><span data-stu-id="2c08d-105">When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called to authenticate the token, the X.509 certificate is not mapped to a Windows identity and the certificate is validated using a certificate chain.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.X509CertificateValidator -&gt; System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" Usage="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator validator" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
      </Parameters>
      <Docs>
        <param name="validator"><span data-ttu-id="2c08d-106">一个 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />，用于验证证书是否有效。</span><span class="sxs-lookup"><span data-stu-id="2c08d-106">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies that the certificate is valid.</span></span></param>
        <summary><span data-ttu-id="2c08d-107">使用指定的证书验证程序初始化 <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2c08d-107">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class using the specified certificate validator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c08d-108"><xref:System.IdentityModel.Selectors.X509CertificateValidator> 类提供了一组预定义的证书验证模型，如 <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="2c08d-108">The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class provides a set of pre-defined certificate validation models, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property.</span></span> <span data-ttu-id="2c08d-109">可以将这些验证模型传递给 `validator` 参数。</span><span class="sxs-lookup"><span data-stu-id="2c08d-109">These validation models can be passed to the `validator` parameter.</span></span> <span data-ttu-id="2c08d-110">当应用程序要求使用自定义验证方法时，请从 <xref:System.IdentityModel.Selectors.X509CertificateValidator> 中派生一个类，并重写 <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="2c08d-110">When an application requires a custom validation method, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method.</span></span> <span data-ttu-id="2c08d-111"><xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> 方法由 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="2c08d-111">The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.</span></span>  
  
 <span data-ttu-id="2c08d-112">默认情况下，<xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> 不会将 X.509 证书映射到 Windows 标识。</span><span class="sxs-lookup"><span data-stu-id="2c08d-112">By default, the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> does not map the X.509 certificate to a Windows identity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator, mapToWindows As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator, bool mapToWindows);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.X509CertificateValidator * bool -&gt; System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" Usage="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator (validator, mapToWindows)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
        <Parameter Name="mapToWindows" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validator"><span data-ttu-id="2c08d-113">一个 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />，用于验证证书是否有效。</span><span class="sxs-lookup"><span data-stu-id="2c08d-113">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies that the certificate is valid.</span></span></param>
        <param name="mapToWindows"><span data-ttu-id="2c08d-114">若要将证书标识映射到 Windows 标识，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c08d-114"><see langword="true" /> to map the identity of the certificate to a Windows identity; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2c08d-115">使用指定的证书验证方法初始化 <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> 类的新实例，并指示是否将证书标识映射到 Windows 标识。</span><span class="sxs-lookup"><span data-stu-id="2c08d-115">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c08d-116"><xref:System.IdentityModel.Selectors.X509CertificateValidator> 类提供了一组预定义的证书验证模型，如 <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="2c08d-116">The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class provides a set of pre-defined certificate validation models, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property.</span></span> <span data-ttu-id="2c08d-117">可以将这些验证模型传递给 `validator` 参数。</span><span class="sxs-lookup"><span data-stu-id="2c08d-117">These validation models can be passed to the `validator` parameter.</span></span> <span data-ttu-id="2c08d-118">当应用程序要求使用自定义验证方法时，请从 <xref:System.IdentityModel.Selectors.X509CertificateValidator> 中派生一个类，并重写 <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="2c08d-118">When an application requires a custom validation method, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method.</span></span> <span data-ttu-id="2c08d-119"><xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> 方法由 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="2c08d-119">The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.</span></span>  
  
 <span data-ttu-id="2c08d-120">如果调用 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法对令牌进行身份验证并且 `mapToWindows` 为 `true`，则会将 X.509 证书映射到 Windows 帐户，并将声明添加到用户所属的 Windows 组所在的 <xref:System.IdentityModel.Policy.EvaluationContext> 中。</span><span class="sxs-lookup"><span data-stu-id="2c08d-120">When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called to authenticate the token and `mapToWindows` is `true`, the X.509 certificate is mapped to a Windows account and claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext> with the Windows groups that the user belongs to.</span></span> <span data-ttu-id="2c08d-121">将 X.509 证书映射到 Windows 帐户的方式取决于安全令牌类型：</span><span class="sxs-lookup"><span data-stu-id="2c08d-121">How the X.509 certificate is mapped to a Windows account depends upon the security token type:</span></span>  
  
-   <span data-ttu-id="2c08d-122">如果安全令牌类型为 <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>，则使用 <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> 属性映射 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="2c08d-122">When the security token is of type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, the X.509 certificate is mapped using the <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> property.</span></span>  
  
-   <span data-ttu-id="2c08d-123">如果安全令牌类型为 `X509SecurityToken`，则使用 Windows 帐户的用户主要名称 (UPN) 将 X.509 证书映射到该帐户。</span><span class="sxs-lookup"><span data-stu-id="2c08d-123">When the security token is of type `X509SecurityToken`, the X.509 certificate is mapped to a Windows account using its user principal name (UPN).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator, mapToWindows As Boolean, includeWindowsGroups As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator, bool mapToWindows, bool includeWindowsGroups);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.X509CertificateValidator * bool * bool -&gt; System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" Usage="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator (validator, mapToWindows, includeWindowsGroups)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
        <Parameter Name="mapToWindows" Type="System.Boolean" />
        <Parameter Name="includeWindowsGroups" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validator"><span data-ttu-id="2c08d-124">一个 <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />，用于验证证书是否有效。</span><span class="sxs-lookup"><span data-stu-id="2c08d-124">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies that the certificate is valid.</span></span></param>
        <param name="mapToWindows"><span data-ttu-id="2c08d-125">若要将证书标识映射到 Windows 标识，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c08d-125"><see langword="true" /> to map the identity of the certificate to a Windows identity; otherwise, <see langword="false" />.</span></span></param>
        <param name="includeWindowsGroups"><span data-ttu-id="2c08d-126">若要在整个身份验证过程中将 Windows 用户所属的组包括在构造的 <see langword="true" /> 属性中，则为 <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c08d-126"><see langword="true" /> to include the groups the Windows user belongs to in the <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /> property that is constructed throughout the authentication process; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2c08d-127">使用指定的证书验证方法初始化 <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> 类的新实例，并指示是否将证书标识映射到 Windows 标识以及用户所属的 Windows 组。</span><span class="sxs-lookup"><span data-stu-id="2c08d-127">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity and the Windows groups the user belongs to.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c08d-128">如果不需要 Windows 组信息，请将 `false` 传递给 `includeWindowsGroups` 参数以提高性能。</span><span class="sxs-lookup"><span data-stu-id="2c08d-128">Pass `false` to the `includeWindowsGroups` parameter when the Windows group information is not required to improve performance.</span></span>  
  
 <span data-ttu-id="2c08d-129"><xref:System.IdentityModel.Selectors.X509CertificateValidator> 类有几个可传递给 <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> 参数的静态属性，如 `validator` 属性。</span><span class="sxs-lookup"><span data-stu-id="2c08d-129">The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class has several static properties, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property that can be passed to the `validator` parameter.</span></span> <span data-ttu-id="2c08d-130">这些属性为 X.509 证书提供了常用验证方法。</span><span class="sxs-lookup"><span data-stu-id="2c08d-130">These properties provide common validation methods for X.509 certificates.</span></span> <span data-ttu-id="2c08d-131">当要求使用自定义验证方法时，请从 <xref:System.IdentityModel.Selectors.X509CertificateValidator> 中派生一个类，并重写 <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="2c08d-131">When a custom validation method is required, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method.</span></span> <span data-ttu-id="2c08d-132"><xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> 方法由 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="2c08d-132">The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.</span></span>  
  
 <span data-ttu-id="2c08d-133">如果将 `true` 传递给 `mapToWindows` 参数，则会将 X.509 证书映射到 Windows 帐户，并将相关声明添加到 <xref:System.IdentityModel.Policy.EvaluationContext> 中，如用户所属的 Windows 组。</span><span class="sxs-lookup"><span data-stu-id="2c08d-133">When `true` is passed into the `mapToWindows` parameter, the X.509 certificate is mapped to a Windows account and relevant claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext>, such as the Windows groups that the user belongs to.</span></span> <span data-ttu-id="2c08d-134">如果安全令牌类型为 <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>，则 <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> 属性使用在令牌中指定的标识；否则，将 X.509 证书映射到使用 Kerberos S4U 登录的 Windows 标识（基于 X.509 证书的用户主要名称 SubjectAltNames 扩展）。</span><span class="sxs-lookup"><span data-stu-id="2c08d-134">When the security token is of type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, the <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> property is using the identity that is specified in the token; otherwise, the X.509 certificate is mapped to a Windows identity using a Kerberos S4U logon based on the user principal name SubjectAltNames extension of the X.509 certificate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool CanValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CanValidateTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool CanValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.CanValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="x509SecurityTokenAuthenticator.CanValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="2c08d-135">要验证的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2c08d-135">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span></span></param>
        <summary><span data-ttu-id="2c08d-136">获取一个值，指示此安全令牌身份验证器是否可以验证指定的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="2c08d-136">Gets a value that indicates whether the specified security token can be validated by this security token authenticator.</span></span></summary>
        <returns><span data-ttu-id="2c08d-137">如果 <see langword="true" /> 是 <paramref name="token" /> 安全令牌或从 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 中派生的类，则为 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c08d-137"><see langword="true" /> when <paramref name="token" /> is a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security token or a class that derives from <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c08d-138"><xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A> 方法不对安全令牌进行身份验证；该操作由 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法执行。</span><span class="sxs-lookup"><span data-stu-id="2c08d-138">The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A> method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapCertificateToWindowsAccount">
      <MemberSignature Language="C#" Value="public bool MapCertificateToWindowsAccount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapCertificateToWindowsAccount" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MapCertificateToWindowsAccount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapCertificateToWindowsAccount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MapCertificateToWindowsAccount : bool" Usage="System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c08d-139">获取一个值，指示是否将 X.509 证书映射到 Windows 帐户。</span><span class="sxs-lookup"><span data-stu-id="2c08d-139">Gets a value that indicates whether to map the X.509 certificate to a Windows account.</span></span></summary>
        <value><span data-ttu-id="2c08d-140">若要将 X.509 证书映射到 Windows 帐户，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c08d-140"><see langword="true" /> to map the X.509 certificate to a Windows account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c08d-141">只能在构造函数中设置 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="2c08d-141">The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A> property can only be set in a constructor.</span></span>  
  
 <span data-ttu-id="2c08d-142">如果使用传输级 SSL 或 HTTPS 安全性，并且基础安全通道或 Internet 信息服务 (IIS) 已提供了映射，则应用该映射而不进行链验证。</span><span class="sxs-lookup"><span data-stu-id="2c08d-142">If transport-level SSL or HTTPS security is being used and mapping is already provided by the underlying security channel or by Internet Information Services (IIS), then that mapping is applied with no chain-validation.</span></span> <span data-ttu-id="2c08d-143">否则，在进行映射之前，应使用证书链验证证书，并且证书必须链接到 NT_AUTHORITY 标识。</span><span class="sxs-lookup"><span data-stu-id="2c08d-143">Otherwise, prior to doing the mapping, the certificate is validated using a certificate chain, and the certificate must chain to an NT_AUTHORITY identity.</span></span> <span data-ttu-id="2c08d-144">所使用的链结构与函数中定义的 CERT_CHAIN_POLICY_NT_AUTH 相对应 `CertVerifyCertificateChainPolicy` （请参阅加密 SDK 中的[CertVerifyCertificateChainPolicy](https://go.microsoft.com/fwlink/?LinkId=83570)函数）。</span><span class="sxs-lookup"><span data-stu-id="2c08d-144">The chain structure used corresponds to the CERT_CHAIN_POLICY_NT_AUTH as defined in the `CertVerifyCertificateChainPolicy` function (see the [CertVerifyCertificateChainPolicy](https://go.microsoft.com/fwlink/?LinkId=83570) function in the Cryptography SDK).</span></span> <span data-ttu-id="2c08d-145">只有在将证书映射到 Windows 帐户时，才会发生此行为。</span><span class="sxs-lookup"><span data-stu-id="2c08d-145">This behavior only occurs when mapping a certificate to a Windows account.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ValidateTokenCore (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="x509SecurityTokenAuthenticator.ValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="2c08d-146">要验证的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="2c08d-146">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span></span></param>
        <summary><span data-ttu-id="2c08d-147">对指定的安全令牌进行身份验证，并返回该安全令牌的授权策略集。</span><span class="sxs-lookup"><span data-stu-id="2c08d-147">Authenticates the specified security token and returns the set of authorization policies for the security token.</span></span></summary>
        <returns><span data-ttu-id="2c08d-148">一个类型为 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />，它包含对此应用程序生效的授权策略集。</span><span class="sxs-lookup"><span data-stu-id="2c08d-148">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c08d-149">重写 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法时，请遵循下列准则：</span><span class="sxs-lookup"><span data-stu-id="2c08d-149">When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is overridden, follow these guidelines:</span></span>  
  
-   <span data-ttu-id="2c08d-150">当无法验证传递给 `token` 参数的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> 异常。</span><span class="sxs-lookup"><span data-stu-id="2c08d-150">When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.</span></span>  
  
-   <span data-ttu-id="2c08d-151">当不存在对此应用程序生效的授权策略时，返回 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 类型的空 <xref:System.IdentityModel.Policy.IAuthorizationPolicy>。</span><span class="sxs-lookup"><span data-stu-id="2c08d-151">When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</span></span>  
  
 <span data-ttu-id="2c08d-152">此方法返回时 `null` ，Windows Communication Foundation 引发 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> 异常。</span><span class="sxs-lookup"><span data-stu-id="2c08d-152">When this method returns `null`, Windows Communication Foundation throws a <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.</span></span>  
  
 <span data-ttu-id="2c08d-153"><xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法调用在构造函数中指定的验证方法的 <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> 方法，以便对 `token` 参数进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="2c08d-153">The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method calls the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method of the validation method specified in the constructor to authenticate the `token` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
