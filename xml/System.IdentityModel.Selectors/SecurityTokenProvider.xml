<Type Name="SecurityTokenProvider" FullName="System.IdentityModel.Selectors.SecurityTokenProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ee123c94f33568ad4080301d36c48732318a4cd" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83979463" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenProvider abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示为 SOAP 消息发送方处理安全令牌的安全令牌提供程序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当需要自定义安全令牌时，使用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类。 安全令牌提供程序的任务是：当客户端发送 SOAP 消息，并且使用安全令牌对客户端进行身份验证或保护 SOAP 消息时，获取安全令牌。 具体来说，就是调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法来获取安全令牌。 也可以调用安全令牌提供程序，使用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> 方法来取消和续订安全令牌。  
  
 从 <xref:System.IdentityModel.Selectors.SecurityTokenManager> 类派生的类实现 <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> 方法可以确定对于给定的安全令牌，需要哪个安全令牌提供程序。  
  
 <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> 和 <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> 类提供了内置安全令牌类型的默认实现。 对于自定义安全令牌方案，必须从 <xref:System.IdentityModel.Selectors.SecurityTokenManager>、<xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> 或 <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> 类之一派生一个类，并提供为自定义安全令牌创建安全令牌提供程序、安全令牌身份验证器和安全令牌序列化程序的功能。 有关创建自定义令牌的详细信息，请参阅[如何：创建自定义令牌](/dotnet/framework/wcf/extending/how-to-create-a-custom-token)。  
  
   
  
## Examples  
 [!code-csharp[SecurityTokenProvider#0](~/samples/snippets/csharp/VS_Snippets_CFX/securitytokenprovider/cs/samlsecuritytokenprovider.cs#0)]
 [!code-vb[SecurityTokenProvider#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/securitytokenprovider/vb/samlsecuritytokenprovider.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
    <related type="Article" href="https://msdn.microsoft.com/library/6d892973-1558-4115-a9e1-696777776125">如何：创建自定义令牌</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancelToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancelToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancelToken (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancelToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginCancelToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginCancelToken (timeout, token, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</param>
        <param name="token">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <param name="callback">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</param>
        <param name="state">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</param>
        <summary>开始异步操作以取消安全令牌。</summary>
        <returns>引用异步取消操作的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法由 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法调用。  
  
在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginCancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginCancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginCancelTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginCancelTokenCore (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginCancelTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginCancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginCancelTokenCore (timeout, token, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</param>
        <param name="token">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <param name="callback">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</param>
        <param name="state">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</param>
        <summary>开始异步操作以取消安全令牌。</summary>
        <returns>引用异步取消操作的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在从 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 类继承时，无需重写异步方法，因为 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步支持。 因此，无需重写 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法，除非需要提供您自己的异步实现。  
  
<see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法由 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法调用。  
  
在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginGetToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetToken (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetToken(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetToken (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetToken(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetToken : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginGetToken (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</param>
        <param name="callback">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</param>
        <param name="state">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</param>
        <summary>开始异步操作以获取安全令牌。</summary>
        <returns>引用异步关闭操作的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginGetTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetTokenCore (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetTokenCore(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginGetTokenCore (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetTokenCore(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetTokenCore : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetTokenCore : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginGetTokenCore (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</param>
        <param name="callback">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</param>
        <param name="state">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</param>
        <summary>开始异步操作以获取安全令牌。</summary>
        <returns>引用异步操作的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在从 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类继承时，无需重写异步方法，因为 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 基类提供了基于同步方法的异步支持。 因此，无需重写 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> 方法，除非必须提供您自己的异步实现。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginRenewToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRenewToken (timeout As TimeSpan, tokenToBeRenewed As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.BeginRenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewToken (timeout, tokenToBeRenewed, callback, state)" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRenewToken (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginRenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewToken (timeout, token, callback, state)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" />
        <Parameter Name="state" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</param>
        <param name="tokenToBeRenewed">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <param name="token">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <param name="callback">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</param>
        <param name="state">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</param>
        <summary>开始异步操作以续订安全令牌。</summary>
        <returns>引用异步操作的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginRenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginRenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginRenewTokenCore (timeout As TimeSpan, tokenToBeRenewed As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginRenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewTokenCore (timeout, tokenToBeRenewed, callback, state)" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginRenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginRenewTokenCore (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginRenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewTokenCore (timeout, token, callback, state)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" />
        <Parameter Name="state" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</param>
        <param name="tokenToBeRenewed">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <param name="token">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <param name="callback">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</param>
        <param name="state">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</param>
        <summary>开始异步操作以续订安全令牌。</summary>
        <returns>引用异步操作的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在从 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类继承时，无需重写异步方法，因为 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 基类提供了基于同步方法的异步支持。 因此，无需重写 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> 方法，除非必须提供您自己的异步实现。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelToken">
      <MemberSignature Language="C#" Value="public void CancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelToken (timeout As TimeSpan, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CancelToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenProvider.CancelToken (timeout, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</param>
        <param name="token">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <summary>取消安全令牌。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTokenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CancelTokenAsync (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CancelTokenAsync(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenAsync(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CancelTokenAsync (timeout As TimeSpan, token As SecurityToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CancelTokenAsync(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CancelTokenAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task" Usage="securityTokenProvider.CancelTokenAsync (timeout, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</param>
        <param name="token">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <summary>取消安全令牌。</summary>
        <returns>表示异步标记取消操作的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCoreAsync%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual void CancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CancelTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CancelTokenCore (timeout As TimeSpan, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CancelTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; unit&#xA;override this.CancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenProvider.CancelTokenCore (timeout, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</param>
        <param name="token">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <summary>取消安全令牌。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> 方法。  
  
 当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> 方法被重写且无法取消传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTokenCoreAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task CancelTokenCoreAsync (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task CancelTokenCoreAsync(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCoreAsync(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CancelTokenCoreAsync (timeout As TimeSpan, token As SecurityToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task ^ CancelTokenCoreAsync(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CancelTokenCoreAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task&#xA;override this.CancelTokenCoreAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task" Usage="securityTokenProvider.CancelTokenCoreAsync (timeout, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</param>
        <param name="token">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <summary>取消安全令牌。</summary>
        <returns>表示异步标记取消操作的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCoreAsync%2A> 方法。  
  
 当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCoreAsync%2A> 方法被重写且无法取消传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancelToken">
      <MemberSignature Language="C#" Value="public void EndCancelToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancelToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancelToken (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancelToken(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndCancelToken : IAsyncResult -&gt; unit" Usage="securityTokenProvider.EndCancelToken result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法的调用返回。</param>
        <summary>完成异步操作以取消安全令牌。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndCancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual void EndCancelTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndCancelTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndCancelTokenCore (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndCancelTokenCore(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCancelTokenCore : IAsyncResult -&gt; unit&#xA;override this.EndCancelTokenCore : IAsyncResult -&gt; unit" Usage="securityTokenProvider.EndCancelTokenCore result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法的调用返回。</param>
        <summary>完成异步操作以取消安全令牌。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。  
  
 在从 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类继承时，无需重写异步方法，因为 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 基类提供了基于同步方法的异步支持。 因此，无需重写 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> 方法，除非必须提供您自己的异步实现。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken EndGetToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken EndGetToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetToken (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ EndGetToken(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndGetToken : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndGetToken result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法的调用返回。</param>
        <summary>完成异步操作以获取安全令牌。</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示安全令牌。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken EndGetTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken EndGetTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetTokenCore (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ EndGetTokenCore(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGetTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.EndGetTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndGetTokenCore result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法的调用返回。</param>
        <summary>完成异步操作以获取安全令牌。</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示安全令牌。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在从 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类继承时，无需重写异步方法，因为 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 基类提供了基于同步方法的异步支持。 因此，无需重写 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> 方法，除非必须提供您自己的异步实现。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenewToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken EndRenewToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken EndRenewToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndRenewToken (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ EndRenewToken(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndRenewToken : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndRenewToken result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法的调用返回。</param>
        <summary>完成异步操作以续订安全令牌。</summary>
        <returns>表示所续订的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndRenewTokenCore (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ EndRenewTokenCore(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRenewTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.EndRenewTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndRenewTokenCore result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法的调用返回。</param>
        <summary>完成异步操作以续订安全令牌。</summary>
        <returns>表示所续订的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在从 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类继承时，无需重写异步方法，因为 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 基类提供了基于同步方法的异步支持。 因此，无需重写 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> 方法，除非必须提供您自己的异步实现。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken GetToken (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken GetToken(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetToken (timeout As TimeSpan) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ GetToken(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.GetToken : TimeSpan -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.GetToken timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</param>
        <summary>获取安全令牌。</summary>
        <returns>表示要获取的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当客户端发送 SOAP 消息并且需要安全令牌时，<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 类会调用 <xref:System.ServiceModel.Description.ClientCredentials> 方法。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> 方法。  
  
 在大多数情况下，`timeout` 的派生类（如 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>）不使用 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider> 参数。 但有时检索安全令牌会涉及分布式消息。 联合服务中使用的 <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> 就是一个例子。 在这类情况下，`timeout` 参数用于避免因网络故障、消息丢失或其他错误情况引起的异常。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt; GetTokenAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; GetTokenAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenAsync (timeout As TimeSpan) As Task(Of SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ GetTokenAsync(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.GetTokenAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;" Usage="securityTokenProvider.GetTokenAsync timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</param>
        <summary>获取安全令牌。</summary>
        <returns>一个 <see cref="T:System.Threading.Tasks.Task" />，它表示异步读取操作，并包装表示要获取的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当客户端发送 SOAP 消息并且需要安全令牌时，<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> 类会调用 <xref:System.ServiceModel.Description.ClientCredentials> 方法。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCoreAsync%2A> 方法。  
  
 在大多数情况下，`timeout` 的派生类（如 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>）不使用 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider> 参数。 但有时检索安全令牌会涉及分布式消息。 联合服务中使用的 <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> 就是一个例子。 在这类情况下，`timeout` 参数用于避免因网络故障、消息丢失或其他错误情况引起的异常。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetTokenCore(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetTokenCore (timeout As TimeSpan) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityToken ^ GetTokenCore(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member GetTokenCore : TimeSpan -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.GetTokenCore timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</param>
        <summary>获取安全令牌。</summary>
        <returns>表示要获取的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> 方法被重写且无法获取传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。  
  
 当客户端发送 SOAP 消息并且需要安全令牌时，<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 类会调用 <xref:System.ServiceModel.Description.ClientCredentials> 方法。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> 方法。  
  
   
  
## Examples  
 [!code-csharp[SecurityTokenProvider#1](~/samples/snippets/csharp/VS_Snippets_CFX/securitytokenprovider/cs/samlsecuritytokenprovider.cs#1)]
 [!code-vb[SecurityTokenProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/securitytokenprovider/vb/samlsecuritytokenprovider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCoreAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt; GetTokenCoreAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; GetTokenCoreAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCoreAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTokenCoreAsync (timeout As TimeSpan) As Task(Of SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ GetTokenCoreAsync(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member GetTokenCoreAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;&#xA;override this.GetTokenCoreAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;" Usage="securityTokenProvider.GetTokenCoreAsync timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</param>
        <summary>获取安全令牌。</summary>
        <returns>一个 <see cref="T:System.Threading.Tasks.Task" />，它表示异步读取操作，并包装表示要获取的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCoreAsync%2A> 方法被重写且无法获取传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。  
  
 当客户端发送 SOAP 消息并且需要安全令牌时，<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> 类会调用 <xref:System.ServiceModel.Description.ClientCredentials> 方法。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCoreAsync%2A> 方法。    
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken RenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed) cil managed" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RenewToken (timeout As TimeSpan, tokenToBeRenewed As SecurityToken) As SecurityToken" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ RenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.RenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewToken (timeout, tokenToBeRenewed)" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken RenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function RenewToken (timeout As TimeSpan, token As SecurityToken) As SecurityToken" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ RenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.RenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewToken (timeout, token)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</param>
        <param name="tokenToBeRenewed">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <param name="token">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <summary>续订安全令牌。</summary>
        <returns>表示所续订的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以续订的颁发安全令牌允许客户端在安全令牌即将到期或已经到期时续订该安全令牌。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTokenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt; RenewTokenAsync (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; RenewTokenAsync(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenAsync(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RenewTokenAsync (timeout As TimeSpan, tokenToBeRenewed As SecurityToken) As Task(Of SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ RenewTokenAsync(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed);" />
      <MemberSignature Language="F#" Value="member this.RenewTokenAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;" Usage="securityTokenProvider.RenewTokenAsync (timeout, tokenToBeRenewed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</param>
        <param name="tokenToBeRenewed">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <summary>续订安全令牌。</summary>
        <returns>一个 <see cref="T:System.Threading.Tasks.Task" />，它表示异步读取操作，并包装表示已续订的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以续订的颁发安全令牌允许客户端在安全令牌即将到期或已经到期时续订该安全令牌。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCoreAsync%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken RenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed) cil managed" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenewTokenCore (timeout As TimeSpan, tokenToBeRenewed As SecurityToken) As SecurityToken" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ RenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewTokenCore (timeout, tokenToBeRenewed)" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken RenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenewTokenCore (timeout As TimeSpan, token As SecurityToken) As SecurityToken" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ RenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewTokenCore (timeout, token)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</param>
        <param name="tokenToBeRenewed">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <param name="token">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <summary>续订安全令牌。</summary>
        <returns>表示所续订的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以续订的颁发安全令牌允许客户端在安全令牌即将到期或已经到期时续订该安全令牌。  
  
 当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> 方法被重写且无法续订传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTokenCoreAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt; RenewTokenCoreAsync (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; RenewTokenCoreAsync(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCoreAsync(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenewTokenCoreAsync (timeout As TimeSpan, tokenToBeRenewed As SecurityToken) As Task(Of SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ RenewTokenCoreAsync(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed);" />
      <MemberSignature Language="F#" Value="abstract member RenewTokenCoreAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;&#xA;override this.RenewTokenCoreAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;" Usage="securityTokenProvider.RenewTokenCoreAsync (timeout, tokenToBeRenewed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</param>
        <param name="tokenToBeRenewed">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <summary>续订安全令牌。</summary>
        <returns>一个 <see cref="T:System.Threading.Tasks.Task" />，它表示异步读取操作，并包装表示已续订的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以续订的颁发安全令牌允许客户端在安全令牌即将到期或已经到期时续订该安全令牌。  
  
 当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCoreAsync%2A> 方法被重写且无法续订传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCoreAsync%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsTokenCancellation">
      <MemberSignature Language="C#" Value="public virtual bool SupportsTokenCancellation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsTokenCancellation" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsTokenCancellation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsTokenCancellation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsTokenCancellation : bool" Usage="System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否可以取消安全令牌。</summary>
        <value>如果可以取消安全令牌，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsTokenRenewal">
      <MemberSignature Language="C#" Value="public virtual bool SupportsTokenRenewal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsTokenRenewal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsTokenRenewal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsTokenRenewal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsTokenRenewal : bool" Usage="System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否可以续订安全令牌。</summary>
        <value>如果可以续订安全令牌，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以续订的颁发安全令牌允许客户端在安全令牌即将到期或已经到期时续订该安全令牌。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
