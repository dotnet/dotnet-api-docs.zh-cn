<Type Name="SecurityTokenProvider" FullName="System.IdentityModel.Selectors.SecurityTokenProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ee829dfa1931dbf06223f33b7e64493bff1be21" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89943405" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenProvider abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1d8d6-101">表示为 SOAP 消息发送方处理安全令牌的安全令牌提供程序。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-101">Represents a security token provider that handles security tokens for a SOAP message sender.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-102">当需要自定义安全令牌时，使用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-102">Use the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class when custom security tokens are required.</span></span> <span data-ttu-id="1d8d6-103">安全令牌提供程序的任务是：当客户端发送 SOAP 消息，并且使用安全令牌对客户端进行身份验证或保护 SOAP 消息时，获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-103">The role of a security token provider is to get a security token when a SOAP message is sent by a client and a security token is used to authenticate the client or to protect the SOAP message.</span></span> <span data-ttu-id="1d8d6-104">具体来说，就是调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法来获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-104">Specifically, the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method is called to get a security token.</span></span> <span data-ttu-id="1d8d6-105">也可以调用安全令牌提供程序，使用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> 方法来取消和续订安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-105">The security token provider can also be called to cancel and renew a security using the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> methods.</span></span>  
  
 <span data-ttu-id="1d8d6-106">从 <xref:System.IdentityModel.Selectors.SecurityTokenManager> 类派生的类实现 <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> 方法可以确定对于给定的安全令牌，需要哪个安全令牌提供程序。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-106">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenManager> class implement the <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> method to determine which security token provider is required for a given security token.</span></span>  
  
 <span data-ttu-id="1d8d6-107"><xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> 和 <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> 类提供了内置安全令牌类型的默认实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-107">The <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> and <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> classes provide the default implementations for built-in security token types.</span></span> <span data-ttu-id="1d8d6-108">对于自定义安全令牌方案，必须从 <xref:System.IdentityModel.Selectors.SecurityTokenManager>、<xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> 或 <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> 类之一派生一个类，并提供为自定义安全令牌创建安全令牌提供程序、安全令牌身份验证器和安全令牌序列化程序的功能。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-108">For custom security token scenarios, you must derive a class from one of the <xref:System.IdentityModel.Selectors.SecurityTokenManager>, <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>, or <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> classes and provide the functionality to create the security token provider, security token authenticator, and security token serializer for the custom security token.</span></span> <span data-ttu-id="1d8d6-109">有关创建自定义令牌的详细信息，请参阅 [如何：创建自定义令牌](/dotnet/framework/wcf/extending/how-to-create-a-custom-token)。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-109">For more information about creating a custom token, see [How to: Create a Custom Token](/dotnet/framework/wcf/extending/how-to-create-a-custom-token).</span></span>  
  
   
  
## Examples  
 [!code-csharp[SecurityTokenProvider#0](~/samples/snippets/csharp/VS_Snippets_CFX/securitytokenprovider/cs/samlsecuritytokenprovider.cs#0)]
 [!code-vb[SecurityTokenProvider#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/securitytokenprovider/vb/samlsecuritytokenprovider.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
    <related type="Article" href="/dotnet/framework/wcf/extending/how-to-create-a-custom-token"><span data-ttu-id="1d8d6-110">如何：创建自定义令牌</span><span class="sxs-lookup"><span data-stu-id="1d8d6-110">How To: Create a Custom Token</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d8d6-111">初始化 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancelToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancelToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancelToken (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancelToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginCancelToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginCancelToken (timeout, token, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-112">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-112">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that cancels the security token.</span></span></param>
        <param name="token"><span data-ttu-id="1d8d6-113">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-113">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to cancel.</span></span></param>
        <param name="callback"><span data-ttu-id="1d8d6-114">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-114">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="1d8d6-115">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-115">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="1d8d6-116">开始异步操作以取消安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-116">Begins an asynchronous operation to cancel a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-117">引用异步取消操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-117">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-118">可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-118">A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d8d6-119"><see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法由 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-119">The <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method is called by the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span>  
  
<span data-ttu-id="1d8d6-120">在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-120">The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes.</span></span> <span data-ttu-id="1d8d6-121"><see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-121">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginCancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginCancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginCancelTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginCancelTokenCore (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginCancelTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginCancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginCancelTokenCore (timeout, token, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-122">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-122">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that cancels the security token.</span></span></param>
        <param name="token"><span data-ttu-id="1d8d6-123">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-123">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to cancel.</span></span></param>
        <param name="callback"><span data-ttu-id="1d8d6-124">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-124">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="1d8d6-125">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-125">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="1d8d6-126">开始异步操作以取消安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-126">Begins an asynchronous operation to cancel a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-127">引用异步取消操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-127">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-128">可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-128">A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d8d6-129">在从 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 类继承时，无需重写异步方法，因为 <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步支持。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-129">When you inherit from the <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> class you are not required to override the asynchronous methods, as the <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides asynchronous support based upon the synchronous methods.</span></span> <span data-ttu-id="1d8d6-130">因此，无需重写 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法，除非需要提供您自己的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-130">Therefore, you are not required to override the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method, unless you need to provide your own asynchronous implementation.</span></span>  
  
<span data-ttu-id="1d8d6-131"><see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法由 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-131">The <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method is called by the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span>  
  
<span data-ttu-id="1d8d6-132">在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-132">The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes.</span></span> <span data-ttu-id="1d8d6-133"><see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-133">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginGetToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetToken (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetToken(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetToken (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetToken(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetToken : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginGetToken (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-134">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-134">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</span></span></param>
        <param name="callback"><span data-ttu-id="1d8d6-135">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-135">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="1d8d6-136">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-136">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="1d8d6-137">开始异步操作以获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-137">Begins an asynchronous operation to get a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-138">引用异步关闭操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-138">The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-139"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-139">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d8d6-140">在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-140">The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes.</span></span> <span data-ttu-id="1d8d6-141"><see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-141">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginGetTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetTokenCore (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetTokenCore(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginGetTokenCore (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetTokenCore(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetTokenCore : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetTokenCore : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginGetTokenCore (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-142">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-142">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</span></span></param>
        <param name="callback"><span data-ttu-id="1d8d6-143">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-143">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="1d8d6-144">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-144">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="1d8d6-145">开始异步操作以获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-145">Begins an asynchronous operation to get a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-146">引用异步操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-146">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-147">在从 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类继承时，无需重写异步方法，因为 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 基类提供了基于同步方法的异步支持。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-147">When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods.</span></span> <span data-ttu-id="1d8d6-148">因此，无需重写 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> 方法，除非必须提供您自己的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-148">Therefore, you are not required to override the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> method, unless you must provide your own asynchronous implementation.</span></span>  
  
 <span data-ttu-id="1d8d6-149"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-149">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d8d6-150">在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-150">The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes.</span></span> <span data-ttu-id="1d8d6-151"><see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-151">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginRenewToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRenewToken (timeout As TimeSpan, tokenToBeRenewed As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.BeginRenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewToken (timeout, tokenToBeRenewed, callback, state)" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRenewToken (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginRenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewToken (timeout, token, callback, state)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" />
        <Parameter Name="state" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-152">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-152">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that renews the security token.</span></span></param>
        <param name="tokenToBeRenewed"><span data-ttu-id="1d8d6-153">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-153">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to renew.</span></span></param>
        <param name="token"><span data-ttu-id="1d8d6-154">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-154">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to renew.</span></span></param>
        <param name="callback"><span data-ttu-id="1d8d6-155">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-155">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="1d8d6-156">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-156">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="1d8d6-157">开始异步操作以续订安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-157">Begins an asynchronous operation that renews a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-158">引用异步操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-158">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-159"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-159">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d8d6-160">在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-160">The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes.</span></span> <span data-ttu-id="1d8d6-161"><see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-161">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginRenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginRenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginRenewTokenCore (timeout As TimeSpan, tokenToBeRenewed As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginRenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewTokenCore (timeout, tokenToBeRenewed, callback, state)" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginRenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginRenewTokenCore (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginRenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewTokenCore (timeout, token, callback, state)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" />
        <Parameter Name="state" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-162">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-162">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that renews the security token.</span></span></param>
        <param name="tokenToBeRenewed"><span data-ttu-id="1d8d6-163">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-163">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to renew.</span></span></param>
        <param name="token"><span data-ttu-id="1d8d6-164">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-164">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to renew.</span></span></param>
        <param name="callback"><span data-ttu-id="1d8d6-165">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-165">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="1d8d6-166">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-166">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="1d8d6-167">开始异步操作以续订安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-167">Begins an asynchronous operation that renews a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-168">引用异步操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-168">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-169">在从 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类继承时，无需重写异步方法，因为 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 基类提供了基于同步方法的异步支持。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-169">When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods.</span></span> <span data-ttu-id="1d8d6-170">因此，无需重写 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> 方法，除非必须提供您自己的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-170">Therefore, you are not required to override the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> method, unless you must provide your own asynchronous implementation.</span></span>  
  
 <span data-ttu-id="1d8d6-171"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-171">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelToken">
      <MemberSignature Language="C#" Value="public void CancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelToken (timeout As TimeSpan, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CancelToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenProvider.CancelToken (timeout, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-172">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-172">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that cancels the security token.</span></span></param>
        <param name="token"><span data-ttu-id="1d8d6-173">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-173">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to cancel.</span></span></param>
        <summary><span data-ttu-id="1d8d6-174">取消安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-174">Cancels a security token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-175">可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-175">A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</span></span>  
  
 <span data-ttu-id="1d8d6-176"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-176">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTokenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CancelTokenAsync (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CancelTokenAsync(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenAsync(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CancelTokenAsync (timeout As TimeSpan, token As SecurityToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CancelTokenAsync(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CancelTokenAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task" Usage="securityTokenProvider.CancelTokenAsync (timeout, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-177">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-177">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that cancels the security token.</span></span></param>
        <param name="token"><span data-ttu-id="1d8d6-178">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-178">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to cancel.</span></span></param>
        <summary><span data-ttu-id="1d8d6-179">取消安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-179">Cancels a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-180"><see cref="T:System.Threading.Tasks.Task" />表示异步标记取消操作的。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-180">The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous token cancellation operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-181">可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-181">A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</span></span>  
  
 <span data-ttu-id="1d8d6-182"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCoreAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-182">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenAsync%2A> method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCoreAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual void CancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CancelTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CancelTokenCore (timeout As TimeSpan, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CancelTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; unit&#xA;override this.CancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenProvider.CancelTokenCore (timeout, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-183">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-183">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that cancels the security token.</span></span></param>
        <param name="token"><span data-ttu-id="1d8d6-184">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-184">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to cancel.</span></span></param>
        <summary><span data-ttu-id="1d8d6-185">取消安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-185">Cancels a security token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-186">可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-186">A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</span></span>  
  
 <span data-ttu-id="1d8d6-187"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-187">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> method.</span></span>  
  
 <span data-ttu-id="1d8d6-188">当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> 方法被重写且无法取消传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-188">When the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> method is overridden and the security token passed into the token parameter cannot be canceled, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTokenCoreAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task CancelTokenCoreAsync (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task CancelTokenCoreAsync(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCoreAsync(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CancelTokenCoreAsync (timeout As TimeSpan, token As SecurityToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task ^ CancelTokenCoreAsync(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CancelTokenCoreAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task&#xA;override this.CancelTokenCoreAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task" Usage="securityTokenProvider.CancelTokenCoreAsync (timeout, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-189">一个 <see cref="T:System.TimeSpan" />，它为取消安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-189">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that cancels the security token.</span></span></param>
        <param name="token"><span data-ttu-id="1d8d6-190">要取消的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-190">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to cancel.</span></span></param>
        <summary><span data-ttu-id="1d8d6-191">取消安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-191">Cancels a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-192"><see cref="T:System.Threading.Tasks.Task" />表示异步标记取消操作的。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-192">The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous token cancellation operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-193">可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-193">A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</span></span>  
  
 <span data-ttu-id="1d8d6-194"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCoreAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-194">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenAsync%2A> method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCoreAsync%2A> method.</span></span>  
  
 <span data-ttu-id="1d8d6-195">当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCoreAsync%2A> 方法被重写且无法取消传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-195">When the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCoreAsync%2A> method is overridden and the security token passed into the token parameter cannot be canceled, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancelToken">
      <MemberSignature Language="C#" Value="public void EndCancelToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancelToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancelToken (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancelToken(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndCancelToken : IAsyncResult -&gt; unit" Usage="securityTokenProvider.EndCancelToken result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1d8d6-196"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法的调用返回。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-196">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="1d8d6-197">完成异步操作以取消安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-197">Completes an asynchronous operation to cancel a security token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-198">可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-198">A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</span></span>  
  
 <span data-ttu-id="1d8d6-199"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-199">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d8d6-200">在派生类中，不需要重写异步方法（这些方法具有前缀 Begin 和 End）。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-200">The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes.</span></span> <span data-ttu-id="1d8d6-201"><see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> 基类提供了基于同步方法的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-201">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndCancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual void EndCancelTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndCancelTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndCancelTokenCore (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndCancelTokenCore(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCancelTokenCore : IAsyncResult -&gt; unit&#xA;override this.EndCancelTokenCore : IAsyncResult -&gt; unit" Usage="securityTokenProvider.EndCancelTokenCore result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1d8d6-202"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法的调用返回。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-202">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="1d8d6-203">完成异步操作以取消安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-203">Completes an asynchronous operation to cancel a security token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-204">可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-204">A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</span></span>  
  
 <span data-ttu-id="1d8d6-205">在从 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类继承时，无需重写异步方法，因为 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 基类提供了基于同步方法的异步支持。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-205">When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods.</span></span> <span data-ttu-id="1d8d6-206">因此，无需重写 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> 方法，除非必须提供您自己的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-206">Therefore, you are not required to override the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> method, unless you must provide your own asynchronous implementation.</span></span>  
  
 <span data-ttu-id="1d8d6-207"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-207">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken EndGetToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken EndGetToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetToken (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ EndGetToken(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndGetToken : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndGetToken result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1d8d6-208"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法的调用返回。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-208">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="1d8d6-209">完成异步操作以获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-209">Completes an asynchronous operation to get a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-210"><see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-210">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-211"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-211">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken EndGetTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken EndGetTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetTokenCore (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ EndGetTokenCore(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGetTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.EndGetTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndGetTokenCore result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1d8d6-212"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法的调用返回。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-212">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="1d8d6-213">完成异步操作以获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-213">Completes an asynchronous operation to get a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-214"><see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-214">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-215">在从 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类继承时，无需重写异步方法，因为 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 基类提供了基于同步方法的异步支持。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-215">When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods.</span></span> <span data-ttu-id="1d8d6-216">因此，无需重写 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> 方法，除非必须提供您自己的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-216">Therefore, you are not required to override the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> method, unless you must provide your own asynchronous implementation.</span></span>  
  
 <span data-ttu-id="1d8d6-217"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-217">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenewToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken EndRenewToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken EndRenewToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndRenewToken (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ EndRenewToken(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndRenewToken : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndRenewToken result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1d8d6-218"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法的调用返回。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-218">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="1d8d6-219">完成异步操作以续订安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-219">Completes an asynchronous operation to renew a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-220">表示所续订的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-220">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is renewed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-221"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-221">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndRenewTokenCore (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ EndRenewTokenCore(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRenewTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.EndRenewTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndRenewTokenCore result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1d8d6-222"><see cref="T:System.IAsyncResult" />，由对 <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> 方法的调用返回。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-222">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="1d8d6-223">完成异步操作以续订安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-223">Completes an asynchronous operation to renew the security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-224">表示所续订的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-224">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is renewed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-225">在从 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类继承时，无需重写异步方法，因为 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> 基类提供了基于同步方法的异步支持。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-225">When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods.</span></span> <span data-ttu-id="1d8d6-226">因此，无需重写 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> 方法，除非必须提供您自己的异步实现。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-226">Therefore, you are not required to override the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> method, unless you must provide your own asynchronous implementation.</span></span>  
  
 <span data-ttu-id="1d8d6-227"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-227">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken GetToken (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken GetToken(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetToken (timeout As TimeSpan) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ GetToken(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.GetToken : TimeSpan -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.GetToken timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-228">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-228">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</span></span></param>
        <summary><span data-ttu-id="1d8d6-229">获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-229">Gets a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-230">表示要获取的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-230">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to get.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-231">当客户端发送 SOAP 消息并且需要安全令牌时，<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 类会调用 <xref:System.ServiceModel.Description.ClientCredentials> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-231">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method is called by the <xref:System.ServiceModel.Description.ClientCredentials> class when a client sends a SOAP message and a security token is required.</span></span>  
  
 <span data-ttu-id="1d8d6-232"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-232">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> method.</span></span>  
  
 <span data-ttu-id="1d8d6-233">在大多数情况下，`timeout` 的派生类（如 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>）不使用 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider> 参数。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-233">In most cases the `timeout` parameter is not used by derived classes of <xref:System.IdentityModel.Selectors.SecurityTokenProvider> such as <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>.</span></span> <span data-ttu-id="1d8d6-234">但有时检索安全令牌会涉及分布式消息。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-234">However, sometimes retrieving a security token involves distributed messaging.</span></span> <span data-ttu-id="1d8d6-235">联合服务中使用的 <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> 就是一个例子。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-235">An example is <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> used in a federated service.</span></span> <span data-ttu-id="1d8d6-236">在这类情况下，`timeout` 参数用于避免因网络故障、消息丢失或其他错误情况引起的异常。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-236">In these cases the `timeout` parameter is used to avoid exceptions caused by network failures, message loss, and other error conditions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt; GetTokenAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; GetTokenAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenAsync (timeout As TimeSpan) As Task(Of SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ GetTokenAsync(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.GetTokenAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;" Usage="securityTokenProvider.GetTokenAsync timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-237">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-237">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</span></span></param>
        <summary><span data-ttu-id="1d8d6-238">获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-238">Gets a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-239"><see cref="T:System.Threading.Tasks.Task" />表示异步读取操作并包装 <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 表示要获取的安全令牌的。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-239">The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous read operation and wraps the <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to get.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-240">当客户端发送 SOAP 消息并且需要安全令牌时，<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> 类会调用 <xref:System.ServiceModel.Description.ClientCredentials> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-240">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> method is called by the <xref:System.ServiceModel.Description.ClientCredentials> class when a client sends a SOAP message and a security token is required.</span></span>  
  
 <span data-ttu-id="1d8d6-241"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCoreAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-241">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCoreAsync%2A> method.</span></span>  
  
 <span data-ttu-id="1d8d6-242">在大多数情况下，`timeout` 的派生类（如 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>）不使用 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider> 参数。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-242">In most cases the `timeout` parameter is not used by derived classes of <xref:System.IdentityModel.Selectors.SecurityTokenProvider> such as <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>.</span></span> <span data-ttu-id="1d8d6-243">但有时检索安全令牌会涉及分布式消息。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-243">However, sometimes retrieving a security token involves distributed messaging.</span></span> <span data-ttu-id="1d8d6-244">联合服务中使用的 <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> 就是一个例子。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-244">An example is <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> used in a federated service.</span></span> <span data-ttu-id="1d8d6-245">在这类情况下，`timeout` 参数用于避免因网络故障、消息丢失或其他错误情况引起的异常。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-245">In these cases the `timeout` parameter is used to avoid exceptions caused by network failures, message loss, and other error conditions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetTokenCore(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetTokenCore (timeout As TimeSpan) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityToken ^ GetTokenCore(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member GetTokenCore : TimeSpan -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.GetTokenCore timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-246">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-246">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</span></span></param>
        <summary><span data-ttu-id="1d8d6-247">获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-247">Gets a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-248">表示要获取的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-248">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to get.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-249">当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> 方法被重写且无法获取传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-249">When the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> method is overridden and the security token passed into the token parameter cannot be obtained, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.</span></span>  
  
 <span data-ttu-id="1d8d6-250">当客户端发送 SOAP 消息并且需要安全令牌时，<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 类会调用 <xref:System.ServiceModel.Description.ClientCredentials> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-250">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method is called by the <xref:System.ServiceModel.Description.ClientCredentials> class when a client sends a SOAP message and a security token is required.</span></span>  
  
 <span data-ttu-id="1d8d6-251"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-251">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> method.</span></span>  
  
   
  
## Examples  
 [!code-csharp[SecurityTokenProvider#1](~/samples/snippets/csharp/VS_Snippets_CFX/securitytokenprovider/cs/samlsecuritytokenprovider.cs#1)]
 [!code-vb[SecurityTokenProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/securitytokenprovider/vb/samlsecuritytokenprovider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCoreAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt; GetTokenCoreAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; GetTokenCoreAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCoreAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTokenCoreAsync (timeout As TimeSpan) As Task(Of SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ GetTokenCoreAsync(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member GetTokenCoreAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;&#xA;override this.GetTokenCoreAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;" Usage="securityTokenProvider.GetTokenCoreAsync timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-252">一个 <see cref="T:System.TimeSpan" />，它为获取安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-252">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</span></span></param>
        <summary><span data-ttu-id="1d8d6-253">获取安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-253">Gets a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-254"><see cref="T:System.Threading.Tasks.Task" />表示异步读取操作并包装 <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 表示要获取的安全令牌的。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-254">The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous read operation and wraps the <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to get.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-255">当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCoreAsync%2A> 方法被重写且无法获取传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-255">When the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCoreAsync%2A> method is overridden and the security token passed into the token parameter cannot be obtained, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.</span></span>  
  
 <span data-ttu-id="1d8d6-256">当客户端发送 SOAP 消息并且需要安全令牌时，<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> 类会调用 <xref:System.ServiceModel.Description.ClientCredentials> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-256">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> method is called by the <xref:System.ServiceModel.Description.ClientCredentials> class when a client sends a SOAP message and a security token is required.</span></span>  
  
 <span data-ttu-id="1d8d6-257"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCoreAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-257">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenAsync%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCoreAsync%2A> method.</span></span>    
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken RenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed) cil managed" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RenewToken (timeout As TimeSpan, tokenToBeRenewed As SecurityToken) As SecurityToken" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ RenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.RenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewToken (timeout, tokenToBeRenewed)" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken RenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function RenewToken (timeout As TimeSpan, token As SecurityToken) As SecurityToken" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ RenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.RenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewToken (timeout, token)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-258">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-258">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that renews the security token.</span></span></param>
        <param name="tokenToBeRenewed"><span data-ttu-id="1d8d6-259">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-259">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to renew.</span></span></param>
        <param name="token"><span data-ttu-id="1d8d6-260">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-260">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to renew.</span></span></param>
        <summary><span data-ttu-id="1d8d6-261">续订安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-261">Renews a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-262">表示所续订的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-262">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is renewed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-263">可以续订的颁发安全令牌允许客户端在安全令牌即将到期或已经到期时续订该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-263">An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.</span></span>  
  
 <span data-ttu-id="1d8d6-264"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-264">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTokenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt; RenewTokenAsync (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; RenewTokenAsync(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenAsync(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RenewTokenAsync (timeout As TimeSpan, tokenToBeRenewed As SecurityToken) As Task(Of SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ RenewTokenAsync(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed);" />
      <MemberSignature Language="F#" Value="member this.RenewTokenAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;" Usage="securityTokenProvider.RenewTokenAsync (timeout, tokenToBeRenewed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-265">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-265">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that renews the security token.</span></span></param>
        <param name="tokenToBeRenewed"><span data-ttu-id="1d8d6-266">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-266">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to renew.</span></span></param>
        <summary><span data-ttu-id="1d8d6-267">续订安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-267">Renews a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-268"><see cref="T:System.Threading.Tasks.Task" />表示异步读取操作并包装 <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 表示已续订安全令牌的。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-268">The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous read operation and wraps the <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is renewed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-269">可以续订的颁发安全令牌允许客户端在安全令牌即将到期或已经到期时续订该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-269">An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.</span></span>  
  
 <span data-ttu-id="1d8d6-270"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCoreAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-270">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenAsync%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCoreAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken RenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed) cil managed" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenewTokenCore (timeout As TimeSpan, tokenToBeRenewed As SecurityToken) As SecurityToken" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ RenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed);" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewTokenCore (timeout, tokenToBeRenewed)" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken RenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenewTokenCore (timeout As TimeSpan, token As SecurityToken) As SecurityToken" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ RenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewTokenCore (timeout, token)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-271">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-271">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that renews the security token.</span></span></param>
        <param name="tokenToBeRenewed"><span data-ttu-id="1d8d6-272">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-272">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to renew.</span></span></param>
        <param name="token"><span data-ttu-id="1d8d6-273">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-273">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to renew.</span></span></param>
        <summary><span data-ttu-id="1d8d6-274">续订安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-274">Renews a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-275">表示所续订的安全令牌的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-275">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is renewed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-276">可以续订的颁发安全令牌允许客户端在安全令牌即将到期或已经到期时续订该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-276">An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.</span></span>  
  
 <span data-ttu-id="1d8d6-277">当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> 方法被重写且无法续订传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-277">When the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> method is overridden and the security token passed into the token parameter cannot be renewed, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.</span></span>  
  
 <span data-ttu-id="1d8d6-278"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-278">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTokenCoreAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt; RenewTokenCoreAsync (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; RenewTokenCoreAsync(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCoreAsync(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenewTokenCoreAsync (timeout As TimeSpan, tokenToBeRenewed As SecurityToken) As Task(Of SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ RenewTokenCoreAsync(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed);" />
      <MemberSignature Language="F#" Value="abstract member RenewTokenCoreAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;&#xA;override this.RenewTokenCoreAsync : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;" Usage="securityTokenProvider.RenewTokenCoreAsync (timeout, tokenToBeRenewed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IdentityModel.Tokens.SecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="1d8d6-279">一个 <see cref="T:System.TimeSpan" />，它为续订安全令牌的消息指定超时值。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-279">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that renews the security token.</span></span></param>
        <param name="tokenToBeRenewed"><span data-ttu-id="1d8d6-280">要续订的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-280">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to renew.</span></span></param>
        <summary><span data-ttu-id="1d8d6-281">续订安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-281">Renews a security token.</span></span></summary>
        <returns><span data-ttu-id="1d8d6-282"><see cref="T:System.Threading.Tasks.Task" />表示异步读取操作并包装 <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 表示已续订安全令牌的。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-282">The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous read operation and wraps the <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is renewed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-283">可以续订的颁发安全令牌允许客户端在安全令牌即将到期或已经到期时续订该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-283">An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.</span></span>  
  
 <span data-ttu-id="1d8d6-284">当 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCoreAsync%2A> 方法被重写且无法续订传递到令牌参数中的安全令牌时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenException> 异常。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-284">When the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCoreAsync%2A> method is overridden and the security token passed into the token parameter cannot be renewed, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.</span></span>  
  
 <span data-ttu-id="1d8d6-285"><xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenAsync%2A> 方法调用 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCoreAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-285">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenAsync%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCoreAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsTokenCancellation">
      <MemberSignature Language="C#" Value="public virtual bool SupportsTokenCancellation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsTokenCancellation" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsTokenCancellation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsTokenCancellation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsTokenCancellation : bool" Usage="System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d8d6-286">获取一个值，该值指示是否可以取消安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-286">Gets a value that indicates whether the security token can be cancelled.</span></span></summary>
        <value><span data-ttu-id="1d8d6-287">如果可以取消安全令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-287"><see langword="true" /> if the security token can be cancelled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1d8d6-288">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-288">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-289">可以取消的安全令牌（例如颁发的安全令牌）允许请求安全令牌的客户端在使用完毕后取消该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-289">A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsTokenRenewal">
      <MemberSignature Language="C#" Value="public virtual bool SupportsTokenRenewal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsTokenRenewal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsTokenRenewal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsTokenRenewal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsTokenRenewal : bool" Usage="System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d8d6-290">获取一个值，该值指示是否可以续订安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-290">Gets a value that indicates whether the security token is renewable.</span></span></summary>
        <value><span data-ttu-id="1d8d6-291">如果可以续订安全令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-291"><see langword="true" /> if the security token can be renewed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1d8d6-292">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-292">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d8d6-293">可以续订的颁发安全令牌允许客户端在安全令牌即将到期或已经到期时续订该安全令牌。</span><span class="sxs-lookup"><span data-stu-id="1d8d6-293">An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
