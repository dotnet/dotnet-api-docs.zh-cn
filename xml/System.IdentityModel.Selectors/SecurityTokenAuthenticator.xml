<Type Name="SecurityTokenAuthenticator" FullName="System.IdentityModel.Selectors.SecurityTokenAuthenticator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8aa37f078af77607052045287f750bb41245d2d5" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82494130" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenAuthenticator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenAuthenticator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenAuthenticator" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenAuthenticator abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenAuthenticator = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="33578-101">对安全令牌进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="33578-101">Authenticates a security token.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33578-102"><xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> 类以及从中派生的类对安全令牌进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="33578-102">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> class and the classes that derive from it authenticate security tokens.</span></span> <span data-ttu-id="33578-103">通常，只有在创建自定义安全令牌时，才应从 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> 中直接派生类。</span><span class="sxs-lookup"><span data-stu-id="33578-103">Typically, you would only derive a class directly from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> when you create a custom security token.</span></span> <span data-ttu-id="33578-104">如果要重写内置安全令牌的默认身份验证或授权行为，请从派生自 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> 的某个类（如 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>）中进行派生。</span><span class="sxs-lookup"><span data-stu-id="33578-104">If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, such as <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.</span></span>  
  
 <span data-ttu-id="33578-105">从 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> 中派生类时，应重写下面的两个方法：<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="33578-105">When you derive a class from <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, override the following two methods: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>.</span></span> <span data-ttu-id="33578-106"><xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> 方法确定此安全令牌身份验证器是否可以对特定安全令牌进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="33578-106">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method determines whether this security token authenticator can authenticate a specific security token.</span></span> <span data-ttu-id="33578-107"><xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法对安全令牌进行身份验证，并建立一组授权策略以进行授权。</span><span class="sxs-lookup"><span data-stu-id="33578-107">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method authenticates the security token and establishes a set of authorization policies for authorization.</span></span> <span data-ttu-id="33578-108">授权策略将位于安全令牌中的声明映射到应用程序所需的声明。</span><span class="sxs-lookup"><span data-stu-id="33578-108">The authorization policies map the claims found in the security token to claims required by the application.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenAuthenticator ();" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenAuthenticator();" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33578-109">初始化 <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="33578-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public bool CanValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanValidateToken (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenAuthenticator.CanValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="33578-110">要验证的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="33578-110">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span></span></param>
        <summary><span data-ttu-id="33578-111">获取一个值，该值指示指定的安全令牌是否可由该安全令牌身份验证器进行验证。</span><span class="sxs-lookup"><span data-stu-id="33578-111">Gets a value indicating whether the specified security token can be validated by this security token authenticator.</span></span></summary>
        <returns><span data-ttu-id="33578-112">如果可以验证令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="33578-112"><see langword="true" /> when token can be validated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33578-113"><xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> 方法检查令牌参数是否为 `null`，然后调用 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> 方法以确定此安全令牌身份验证器是否可以对 `token` 的安全令牌类型进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="33578-113">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method checks whether the token parameter is `null` and then calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33578-114"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33578-114"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="CanValidateTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanValidateTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CanValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenAuthenticator.CanValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="33578-115">要验证的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="33578-115">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span></span></param>
        <summary><span data-ttu-id="33578-116">在派生类中重写时，获取一个值，指示此安全令牌身份验证器是否可以验证指定的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="33578-116">When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.</span></span></summary>
        <returns><span data-ttu-id="33578-117">如果可以验证 <see langword="true" />，则为 <paramref name="token" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="33578-117"><see langword="true" /> when <paramref name="token" /> can be validated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33578-118"><xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> 方法由 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> 方法调用，用于确定此安全令牌身份验证器是否可以对 `token` 的安全令牌类型进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="33578-118">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine whether this security token authenticator can authenticate the security token type for `token`.</span></span> <span data-ttu-id="33578-119">该方法不对安全令牌进行身份验证；该操作由 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> 方法执行。</span><span class="sxs-lookup"><span data-stu-id="33578-119">This does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="securityTokenAuthenticator.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="33578-120">要验证的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="33578-120">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span></span></param>
        <summary><span data-ttu-id="33578-121">对指定的安全令牌进行身份验证，并返回该安全令牌的授权策略集。</span><span class="sxs-lookup"><span data-stu-id="33578-121">Authenticates the specified security token and returns the set of authorization policies for the security token.</span></span></summary>
        <returns><span data-ttu-id="33578-122">一个类型为 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />，它包含对此应用程序生效的授权策略集。</span><span class="sxs-lookup"><span data-stu-id="33578-122">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33578-123"><xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> 方法检查 `token` 参数是否为 `null`，然后调用 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> 方法以确定此安全令牌身份验证器是否可以对此安全令牌进行身份验证；如果可以，则随后调用 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="33578-123">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method checks whether the `token` parameter is `null`, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33578-124"><paramref name="token" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33578-124"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException"><span data-ttu-id="33578-125">此安全令牌身份验证器无法对 <paramref name="token" /> 进行身份验证</span><span class="sxs-lookup"><span data-stu-id="33578-125"><paramref name="token" /> cannot be authenticated by this security token authenticator</span></span> 
<span data-ttu-id="33578-126">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33578-126">-or-</span></span> 
 <span data-ttu-id="33578-127"><paramref name="token" /> 未通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="33578-127"><paramref name="token" /> is not authenticated.</span></span></exception>
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ValidateTokenCore (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member ValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="securityTokenAuthenticator.ValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="33578-128">要验证的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="33578-128">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span></span></param>
        <summary><span data-ttu-id="33578-129">在派生类中重写时，对指定的安全令牌进行身份验证，并返回该安全令牌的授权策略集。</span><span class="sxs-lookup"><span data-stu-id="33578-129">When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.</span></span></summary>
        <returns><span data-ttu-id="33578-130">一个类型为 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />，它包含对此应用程序生效的授权策略集。</span><span class="sxs-lookup"><span data-stu-id="33578-130">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33578-131">重写 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法，以便对特定安全令牌类型进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="33578-131">Override the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method to authenticate a specific security token type.</span></span>  
  
 <span data-ttu-id="33578-132">重写 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法时，请遵循下列准则：</span><span class="sxs-lookup"><span data-stu-id="33578-132">When the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is overridden, follow these guidelines:</span></span>  
  
-   <span data-ttu-id="33578-133">当传入参数的安全令牌 `token` 无法验证时，将引发 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> 异常。</span><span class="sxs-lookup"><span data-stu-id="33578-133">When the security token passed into the `token` parameter cannot be validated, throw a <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.</span></span>  
  
-   <span data-ttu-id="33578-134">当不存在对此应用程序生效的授权策略时，返回 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 类型的空 <xref:System.IdentityModel.Policy.IAuthorizationPolicy>。</span><span class="sxs-lookup"><span data-stu-id="33578-134">When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</span></span>  
  
 <span data-ttu-id="33578-135">此方法返回时 `null` ，Windows Communication Foundation 引发 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> 异常。</span><span class="sxs-lookup"><span data-stu-id="33578-135">When this method returns `null`, Windows Communication Foundation throws a <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.</span></span>  
  
 <span data-ttu-id="33578-136"><xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 方法由 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="33578-136">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
