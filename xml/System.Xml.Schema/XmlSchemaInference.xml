<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e8c0d7e86748d1fb69f5988b77b0f0a46f9e91f0" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86691533" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaInference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cc995-101">从 XML 文档中推理出 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-101">Infers an XML Schema Definition Language (XSD) schema from an XML document.</span></span> <span data-ttu-id="cc995-102">不能继承 <see cref="T:System.Xml.Schema.XmlSchemaInference" /> 类。</span><span class="sxs-lookup"><span data-stu-id="cc995-102">The <see cref="T:System.Xml.Schema.XmlSchemaInference" /> class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   <span data-ttu-id="cc995-103">不要使用来自未知或不受信任的源或位置的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-103">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="cc995-104">这样做会破坏代码的安全性。</span><span class="sxs-lookup"><span data-stu-id="cc995-104">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="cc995-105">XML 架构 (包括内联架构) 在本质上容易受到拒绝服务攻击;不要在不受信任的情况下接受它们。</span><span class="sxs-lookup"><span data-stu-id="cc995-105">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="cc995-106">架构验证错误消息和异常可能会向架构文件公开有关内容模型或 URI 路径的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="cc995-106">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="cc995-107">请注意不要向不受信任的调用方公开此信息。</span><span class="sxs-lookup"><span data-stu-id="cc995-107">Be careful not to expose this information to untrusted callers.</span></span>  
  
 <span data-ttu-id="cc995-108"><xref:System.Xml.Schema.XmlSchemaInference>命名空间中的类可 <xref:System.Xml.Schema?displayProperty=nameWithType> 用于从 xml 文档的结构推断 Xml 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-108">The <xref:System.Xml.Schema.XmlSchemaInference> class in the <xref:System.Xml.Schema?displayProperty=nameWithType> namespace allows you to infer an XML Schema Definition Language (XSD) schema from the structure of an XML document.</span></span> <span data-ttu-id="cc995-109"><xref:System.Xml.Schema.XmlSchemaInference> 类输出的 XML 架构可以验证 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="cc995-109">The <xref:System.Xml.Schema.XmlSchemaInference> class outputs an XML schema that can validate the XML document.</span></span>  
  
 <span data-ttu-id="cc995-110"><xref:System.Xml.Schema.XmlSchemaInference>类支持 W3C XML 和 Xml 架构标准。</span><span class="sxs-lookup"><span data-stu-id="cc995-110">The <xref:System.Xml.Schema.XmlSchemaInference> class supports the W3C XML and XML Schemas standards.</span></span> <span data-ttu-id="cc995-111">它可用于推断新架构或优化现有架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-111">It can be used to infer a new schema or to refine an existing schema.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc995-112">此示例使用 XML 文件作为输入，并生成一个可验证示例 XML 的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-112">This example takes an XML file as input, and generates a schema that can validate the example XML.</span></span>  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 <span data-ttu-id="cc995-113">下面是输入 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="cc995-113">The following is the input XML file.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 <span data-ttu-id="cc995-114">下面是从 XML 文档推断的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-114">The following is the schema inferred from the XML document.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc995-115">初始化 <see cref="T:System.Xml.Schema.XmlSchemaInference" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cc995-115">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaInference" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc995-116">从指定的 XML 文档推理出 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-116">Infers an XML Schema Definition Language (XSD) schema from the XML document specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema instanceDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument"><span data-ttu-id="cc995-117"><see cref="T:System.Xml.XmlReader" /> 对象，该对象包含要从其推理出架构的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="cc995-117">An <see cref="T:System.Xml.XmlReader" /> object containing the XML document to infer a schema from.</span></span></param>
        <summary><span data-ttu-id="cc995-118">从指定的 <see cref="T:System.Xml.XmlReader" /> 对象包含的 XML 文档推理出 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-118">Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the <see cref="T:System.Xml.XmlReader" /> object specified.</span></span></summary>
        <returns><span data-ttu-id="cc995-119"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象，该对象包含推理出的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-119">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing the inferred schemas.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc995-120"><xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法从指定的对象中包含的 XML 实例文档中推断出一个或多个 W3C XML 架构定义语言 (XSD) 架构 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="cc995-120">The <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method infers one or more W3C XML Schema Definition Language (XSD) schemas from the XML instance document contained in the <xref:System.Xml.XmlReader> object specified.</span></span> <span data-ttu-id="cc995-121">如果 XML 文档包含多个命名空间中的元素和属性，则会生成多个架构：一个用于文档中使用的每个命名空间。</span><span class="sxs-lookup"><span data-stu-id="cc995-121">If the XML document contains elements and attributes from multiple namespaces, then multiple schemas are generated: one for each namespace used in the document.</span></span> <span data-ttu-id="cc995-122">主架构是可以验证整个 XML 文档的架构，其目标命名空间与 XML 文档的文档元素的命名空间相同。</span><span class="sxs-lookup"><span data-stu-id="cc995-122">The primary schema is the schema that can validate the entire XML document, and its target namespace is the same as the namespace of the document element of the XML document.</span></span>  
  
 <span data-ttu-id="cc995-123">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cc995-123">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method.</span></span>  
  
-   <span data-ttu-id="cc995-124"><xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法忽略 `xsi:type` XML 文档中的任何、 `xsi:schemaLocation` 或 `xsi:noNamespaceSchemaLocation` 特性。</span><span class="sxs-lookup"><span data-stu-id="cc995-124">The <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method ignores any `xsi:type`, `xsi:schemaLocation`, or `xsi:noNamespaceSchemaLocation` attributes in the XML document.</span></span>  
  
-   <span data-ttu-id="cc995-125">如果该 <xref:System.Xml.XmlReader> 对象是类型化的，则将忽略其包含的类型信息。</span><span class="sxs-lookup"><span data-stu-id="cc995-125">If the <xref:System.Xml.XmlReader> object is typed, the type information it contains is ignored.</span></span>  
  
-   <span data-ttu-id="cc995-126">如果对象所在的 <xref:System.Xml.XmlReader> 元素不是 XML 文档的根元素，则只为该元素推断架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-126">If the <xref:System.Xml.XmlReader> object is positioned on an element that is not the root element of the XML document, a schema is inferred for only that element.</span></span> <span data-ttu-id="cc995-127">如果 <xref:System.Xml.XmlReader> 对象未定位在元素上，则将 <xref:System.Xml.XmlReader.Read%2A> 在参数上调用方法， <xref:System.Xml.XmlReader> 直到遇到元素 (例如 <xref:System.Xml.XmlReader.NodeType%2A>) 时 <xref:System.Xml.XmlNodeType.Element> 。</span><span class="sxs-lookup"><span data-stu-id="cc995-127">If the <xref:System.Xml.XmlReader> object is not positioned on an element, the <xref:System.Xml.XmlReader.Read%2A> method is called on the <xref:System.Xml.XmlReader> parameter until an element is encountered (for example, when <xref:System.Xml.XmlReader.NodeType%2A> is <xref:System.Xml.XmlNodeType.Element>).</span></span> <span data-ttu-id="cc995-128">此时，推理过程从该元素开始。</span><span class="sxs-lookup"><span data-stu-id="cc995-128">At this point, the inference process starts from that element.</span></span> <span data-ttu-id="cc995-129">如果在文档末尾之前没有遇到元素， <xref:System.ArgumentException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="cc995-129">If no element is encountered until the end of the document, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc995-130">此示例使用 XML 文件作为输入，并生成一个可验证示例 XML 的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-130">This example takes an XML file as input, and generates a schema that can validate the example XML.</span></span>  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 <span data-ttu-id="cc995-131">下面是输入 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="cc995-131">The following is the input XML file.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 <span data-ttu-id="cc995-132">下面是从 XML 文档推断的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-132">The following is the schema inferred from the XML document.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="cc995-133">XML 文档不是格式良好的文档。</span><span class="sxs-lookup"><span data-stu-id="cc995-133">The XML document is not well-formed.</span></span></exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException"><span data-ttu-id="cc995-134"><see cref="T:System.Xml.XmlReader" /> 对象不位于根节点或元素上。</span><span class="sxs-lookup"><span data-stu-id="cc995-134">The <see cref="T:System.Xml.XmlReader" /> object is not positioned on the root node or on an element.</span></span> <span data-ttu-id="cc995-135">架构推理过程中出现错误。</span><span class="sxs-lookup"><span data-stu-id="cc995-135">An error occurs during the schema inference process.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader * System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema (instanceDocument, schemas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument"><span data-ttu-id="cc995-136"><see cref="T:System.Xml.XmlReader" /> 对象，该对象包含要从其推理出架构的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="cc995-136">An <see cref="T:System.Xml.XmlReader" /> object containing the XML document to infer a schema from.</span></span></param>
        <param name="schemas"><span data-ttu-id="cc995-137"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象，包含用于精炼推理出的架构的现有架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-137">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing an existing schema used to refine the inferred schema.</span></span></param>
        <summary><span data-ttu-id="cc995-138">从指定的 <see cref="T:System.Xml.XmlReader" /> 对象包含的 XML 文档推理出 XML 架构定义语言 (XSD) 架构，并通过用相同目标命名空间指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象中的现有架构精炼已推理出的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-138">Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the <see cref="T:System.Xml.XmlReader" /> object specified, and refines the inferred schema using an existing schema in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object specified with the same target namespace.</span></span></summary>
        <returns><span data-ttu-id="cc995-139"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象，该对象包含推理出的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-139">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing the inferred schemas.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc995-140"><xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法从指定的对象中包含的 XML 实例文档中推断出一个或多个 W3C XML 架构定义语言 (XSD) 架构 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="cc995-140">The <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method infers one or more W3C XML Schema Definition Language (XSD) schemas from the XML instance document contained in the <xref:System.Xml.XmlReader> object specified.</span></span> <span data-ttu-id="cc995-141">如果 XML 文档包含多个命名空间中的元素和属性，则会生成多个架构：一个用于文档中使用的每个命名空间。</span><span class="sxs-lookup"><span data-stu-id="cc995-141">If the XML document contains elements and attributes from multiple namespaces, multiple schemas are generated: one for each namespace used in the document.</span></span> <span data-ttu-id="cc995-142">主架构是可以验证整个 XML 文档的架构，其目标命名空间与 XML 文档的文档元素的命名空间相同。</span><span class="sxs-lookup"><span data-stu-id="cc995-142">The primary schema is the schema that can validate the entire XML document, and its target namespace is the same as the namespace of the document element of the XML document.</span></span>  
  
 <span data-ttu-id="cc995-143">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cc995-143">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method.</span></span>  
  
-   <span data-ttu-id="cc995-144"><xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法忽略 `xsi:type` XML 文档中的任何、 `xsi:schemaLocation` 或 `xsi:noNamespaceSchemaLocation` 特性。</span><span class="sxs-lookup"><span data-stu-id="cc995-144">The <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method ignores any `xsi:type`, `xsi:schemaLocation`, or `xsi:noNamespaceSchemaLocation` attributes in the XML document.</span></span>  
  
-   <span data-ttu-id="cc995-145">如果该 <xref:System.Xml.XmlReader> 对象是类型化的，则将忽略其包含的类型信息。</span><span class="sxs-lookup"><span data-stu-id="cc995-145">If the <xref:System.Xml.XmlReader> object is typed, the type information it contains is ignored.</span></span>  
  
-   <span data-ttu-id="cc995-146">如果对象所在的 <xref:System.Xml.XmlReader> 元素不是 XML 文档的根元素，则只为该元素推断架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-146">If the <xref:System.Xml.XmlReader> object is positioned on an element that is not the root element of the XML document, a schema is inferred for only that element.</span></span> <span data-ttu-id="cc995-147">如果 <xref:System.Xml.XmlReader> 对象未定位在元素上，则将 <xref:System.Xml.XmlReader.Read%2A> 在参数上调用方法， <xref:System.Xml.XmlReader> 直到遇到元素 (例如 <xref:System.Xml.XmlReader.NodeType%2A>) 时 <xref:System.Xml.XmlNodeType.Element> 。</span><span class="sxs-lookup"><span data-stu-id="cc995-147">If the <xref:System.Xml.XmlReader> object is not positioned on an element, the <xref:System.Xml.XmlReader.Read%2A> method is called on the <xref:System.Xml.XmlReader> parameter until an element is encountered (for example, when <xref:System.Xml.XmlReader.NodeType%2A> is <xref:System.Xml.XmlNodeType.Element>).</span></span> <span data-ttu-id="cc995-148">此时，推理过程从该元素开始。</span><span class="sxs-lookup"><span data-stu-id="cc995-148">At this point, the inference process starts from that element.</span></span> <span data-ttu-id="cc995-149">如果在文档末尾之前没有遇到元素， <xref:System.ArgumentException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="cc995-149">If no element is encountered until the end of the document, an <xref:System.ArgumentException> is thrown.</span></span>  
  
-   <span data-ttu-id="cc995-150">如果 <xref:System.Xml.Schema.XmlSchemaSet> 对象作为参数传递，并且该对象所定位到的元素 <xref:System.Xml.XmlReader> 是在的某个架构中定义的，则将 <xref:System.Xml.Schema.XmlSchemaSet> 使用推断的架构来优化 <xref:System.Xml.Schema.XmlSchemaSet> 具有相同目标命名空间的参数中的现有架构; 否则，将为该命名空间推断新的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-150">If an <xref:System.Xml.Schema.XmlSchemaSet> object is passed as a parameter and the element upon which the <xref:System.Xml.XmlReader> object is positioned is defined in one of the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>, the inferred schema is used to refine an existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> parameter with the same target namespace; otherwise, a new schema is inferred for the namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc995-151">下面的示例代码将 XML 文档1作为输入，并生成一个可验证 XML 文档1的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-151">The following example code takes XML document 1 as an input and generates a schema that can validate XML document 1.</span></span> <span data-ttu-id="cc995-152">然后，该示例代码将使用 XML 文档2，并根据 XML 文档2中找到的更改优化从 XML 文档1生成的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-152">The example code then takes XML document 2 and refines the schema generated from XML document 1, based on the changes found in XML document 2.</span></span>  
  
 <span data-ttu-id="cc995-153">下面是 XML 文档1。</span><span class="sxs-lookup"><span data-stu-id="cc995-153">The following is XML document 1.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 <span data-ttu-id="cc995-154">下面是 XML document 2。</span><span class="sxs-lookup"><span data-stu-id="cc995-154">The following is XML document 2.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 <span data-ttu-id="cc995-155">下面的示例代码从中包含的第一个 XML 文档推断架构 `reader` ，然后使用中包含的第二个 xml 文档中所包含的更改来精炼推理出的架构 `reader1` 。</span><span class="sxs-lookup"><span data-stu-id="cc995-155">The following example code infers a schema from the first XML document contained in `reader`, and then refines the inferred schema with the changes found in the second XML document contained in `reader1`.</span></span> <span data-ttu-id="cc995-156">示例代码使用第一个重载 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> 方法来推断架构，并使用第二个重载 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> 方法来优化对象中的现有架构 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="cc995-156">The example code uses the first overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to infer the schema, and the second overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to refine the existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span>  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 <span data-ttu-id="cc995-157">以下架构是从 XML 文档1推断的架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-157">The following schema is the schema inferred from XML document 1.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 <span data-ttu-id="cc995-158">以下架构是基于 XML 文档2的上述架构的优化版本。</span><span class="sxs-lookup"><span data-stu-id="cc995-158">The following schema is the refined version of the schema above, based on XML document 2.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="cc995-159">XML 文档不是格式良好的文档。</span><span class="sxs-lookup"><span data-stu-id="cc995-159">The XML document is not well-formed.</span></span></exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException"><span data-ttu-id="cc995-160"><see cref="T:System.Xml.XmlReader" /> 对象不位于根节点或元素上。</span><span class="sxs-lookup"><span data-stu-id="cc995-160">The <see cref="T:System.Xml.XmlReader" /> object is not positioned on the root node or on an element.</span></span> <span data-ttu-id="cc995-161">架构推理过程中出现错误。</span><span class="sxs-lookup"><span data-stu-id="cc995-161">An error occurs during the schema inference process.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.Occurrence : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc995-162">获取或设置 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 值，该值影响从 XML 文档推理出的架构匹配项声明。</span><span class="sxs-lookup"><span data-stu-id="cc995-162">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> value that affects schema occurrence declarations inferred from the XML document.</span></span></summary>
        <value><span data-ttu-id="cc995-163">一个 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cc995-163">An <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc995-164">如果将 <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> 属性设置为 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> ，则在 XML 文档中第一次遇到元素时，架构声明将推断为 `minOccurs="1"` 。</span><span class="sxs-lookup"><span data-stu-id="cc995-164">If the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property is set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, the first time elements are encountered in the XML document, the schema declaration is inferred as `minOccurs="1"`.</span></span> <span data-ttu-id="cc995-165">如果遇到属性，架构声明将推断为 `use="required"` 。</span><span class="sxs-lookup"><span data-stu-id="cc995-165">When attributes are encountered, the schema declaration is inferred as `use="required"`.</span></span>  
  
 <span data-ttu-id="cc995-166">如果将 <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> 属性设置为，则将 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed> 元素架构声明推断为 `minOccurs="0"` ，并将属性架构声明推断为 `use="optional"` 。</span><span class="sxs-lookup"><span data-stu-id="cc995-166">If the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property is set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, element schema declarations are inferred as `minOccurs="0"`, and attribute schema declarations are inferred as `use="optional"`.</span></span>  
  
 <span data-ttu-id="cc995-167">属性的默认值 <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> 为 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> 。</span><span class="sxs-lookup"><span data-stu-id="cc995-167">The default value of the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property is <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc995-168">此示例演示事件如何受到属性的影响 <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cc995-168">This example illustrates how occurrence is affected by the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property.</span></span> <span data-ttu-id="cc995-169">示例代码以两种不同的方式从 XML 文件推断出现：宽松和限制。</span><span class="sxs-lookup"><span data-stu-id="cc995-169">The example code infers occurrence from an XML file in two different ways: relaxed and restricted.</span></span> <span data-ttu-id="cc995-170">下面是示例 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="cc995-170">The following is the example XML file.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 <span data-ttu-id="cc995-171">下面的示例代码指示 <xref:System.Xml.Schema.XmlSchemaInference> 类以宽松方式推断元素和属性的出现。</span><span class="sxs-lookup"><span data-stu-id="cc995-171">The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer occurrence of elements and attributes in a relaxed way.</span></span>  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 <span data-ttu-id="cc995-172">由于 <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> 属性设置为，因此 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed> 生成了以下架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-172">Because the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, the following schema was generated.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 <span data-ttu-id="cc995-173">在上面的示例代码中，如果 <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> 属性未设置为 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed> ，则 <xref:System.Xml.Schema.XmlSchemaInference> 类将默认为， <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> 并生成以下架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-173">In the example code above, if the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> and generated the following schema.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInference : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc995-174">获取或设置影响从 XML 文档推理出的类型的 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc995-174">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> value that affects types inferred from the XML document.</span></span></summary>
        <value><span data-ttu-id="cc995-175">一个 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cc995-175">An <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc995-176">如果将 <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> 属性设置为 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed> ，则始终会出现带有简单内容的 XML 文档中推断出的元素类型和属性 `xs:string` 。</span><span class="sxs-lookup"><span data-stu-id="cc995-176">If the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property is set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, the inferred type of elements and attributes in the XML document with simple content is always `xs:string`.</span></span> <span data-ttu-id="cc995-177">如果将 <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> 属性设置为 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> ，则会推断出更具体的类型，例如 `xs:date` 、、 `xs:decimal` `xs:unsignedByte` 等。</span><span class="sxs-lookup"><span data-stu-id="cc995-177">If the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property is set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, more specific types are inferred, such as `xs:date`, `xs:decimal`, `xs:unsignedByte`, and so on.</span></span>  
  
 <span data-ttu-id="cc995-178">属性的默认值 <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> 为 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> 。</span><span class="sxs-lookup"><span data-stu-id="cc995-178">The default value of the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property is <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc995-179">此示例说明类型推理如何受 <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> 属性影响。</span><span class="sxs-lookup"><span data-stu-id="cc995-179">This example illustrates how type inference is affected by the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property.</span></span> <span data-ttu-id="cc995-180">示例代码以两种不同的方式从 XML 文件推断类型：宽松和受限。</span><span class="sxs-lookup"><span data-stu-id="cc995-180">The example code infers types from an XML file in two different ways: relaxed and restricted.</span></span> <span data-ttu-id="cc995-181">下面是示例 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="cc995-181">The following is the example XML file.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 <span data-ttu-id="cc995-182">下面的示例代码指示 <xref:System.Xml.Schema.XmlSchemaInference> 类推断 `xs:string` 具有简单内容的元素和属性。</span><span class="sxs-lookup"><span data-stu-id="cc995-182">The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer `xs:string` for elements and attributes with simple content.</span></span>  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 <span data-ttu-id="cc995-183">由于 <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> 属性设置为，因此 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed> 生成了以下架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-183">Because the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, the following schema was generated.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 <span data-ttu-id="cc995-184">在上面的示例代码中，如果 <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> 属性未设置为 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed> ，则 <xref:System.Xml.Schema.XmlSchemaInference> 类将默认为， <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> 并生成以下架构。</span><span class="sxs-lookup"><span data-stu-id="cc995-184">In the example code above, if the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> and generated the following schema.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
