<Type Name="XmlSchemaDatatype" FullName="System.Xml.Schema.XmlSchemaDatatype">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95691ed9d256fa5ae8bed0edd564f22c2d7a575f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86605824" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlSchemaDatatype" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlSchemaDatatype extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaDatatype" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlSchemaDatatype" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaDatatype abstract" />
  <TypeSignature Language="F#" Value="type XmlSchemaDatatype = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e7b59-101"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 类是将 XML 架构定义语言 (XSD) 类型映射为公共语言运行时 (CLR) 类型的抽象类。</span><span class="sxs-lookup"><span data-stu-id="e7b59-101">The <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> class is an abstract class for mapping XML Schema definition language (XSD) types to Common Language Runtime (CLR) types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e7b59-102">下面的示例演示如何使用 <xref:System.Xml.Schema.XmlSchemaDatatype> 类。</span><span class="sxs-lookup"><span data-stu-id="e7b59-102">The following example shows use of the <xref:System.Xml.Schema.XmlSchemaDatatype> class.</span></span>  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 <span data-ttu-id="e7b59-103">下面的 XML 文件用于前面的代码示例。</span><span class="sxs-lookup"><span data-stu-id="e7b59-103">The following XML file is used for the preceding code example.</span></span>  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSchemaDatatype ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.#ctor" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSchemaDatatype();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7b59-104">初始化 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e7b59-104">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b59-105">此构造函数由派生类构造函数调用以初始化此类型中的状态。</span><span class="sxs-lookup"><span data-stu-id="e7b59-105">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7b59-106">将指定值转换为相同值的另一有效 CLR 表示形式，该指定值的类型为由 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的 XML 架构类型的一种有效公共语言运行时 (CLR) 表示形式。</span><span class="sxs-lookup"><span data-stu-id="e7b59-106">Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, to another valid CLR representation of the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type -&gt; obj&#xA;override this.ChangeType : obj * Type -&gt; obj" Usage="xmlSchemaDatatype.ChangeType (value, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e7b59-107">要转换为指定类型的输入值。</span><span class="sxs-lookup"><span data-stu-id="e7b59-107">The input value to convert to the specified type.</span></span></param>
        <param name="targetType"><span data-ttu-id="e7b59-108">输入值要转换成的目标类型。</span><span class="sxs-lookup"><span data-stu-id="e7b59-108">The target type to convert the input value to.</span></span></param>
        <summary><span data-ttu-id="e7b59-109">将指定值转换为指定的 CLR 类型，该指定值的类型为由 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的 XML 架构类型的一种有效公共语言运行时 (CLR) 表示形式。</span><span class="sxs-lookup"><span data-stu-id="e7b59-109">Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, to the CLR type specified.</span></span></summary>
        <returns><span data-ttu-id="e7b59-110">转换后的输入值。</span><span class="sxs-lookup"><span data-stu-id="e7b59-110">The converted input value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b59-111">有关 XML 数据类型的类和转换中的类型支持的详细信息 <xref:System.Xml?displayProperty=nameWithType> ，请参阅 [System.Xml 类主题中的类型支持](/dotnet/standard/data/xml/type-support-in-the-system-xml-classes) 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-111">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> classes and conversion of XML data types, see the [Type Support in the System.Xml Classes](/dotnet/standard/data/xml/type-support-in-the-system-xml-classes) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7b59-112"><see cref="T:System.Object" /> 或 <see cref="T:System.Type" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e7b59-112">The <see cref="T:System.Object" /> or <see cref="T:System.Type" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e7b59-113">由 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的类型不支持从指定值的类型转换为指定类型。</span><span class="sxs-lookup"><span data-stu-id="e7b59-113">The type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> does not support a conversion from type of the value specified to the type specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.ChangeType : obj * Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlSchemaDatatype.ChangeType (value, targetType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e7b59-114">要转换为指定类型的输入值。</span><span class="sxs-lookup"><span data-stu-id="e7b59-114">The input value to convert to the specified type.</span></span></param>
        <param name="targetType"><span data-ttu-id="e7b59-115">输入值要转换成的目标类型。</span><span class="sxs-lookup"><span data-stu-id="e7b59-115">The target type to convert the input value to.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="e7b59-116">用于解析命名空间前缀的 <see cref="T:System.Xml.IXmlNamespaceResolver" />。</span><span class="sxs-lookup"><span data-stu-id="e7b59-116">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> used for resolving namespace prefixes.</span></span> <span data-ttu-id="e7b59-117">只有 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示 xs:QName 类型或从该类型派生的类型时，这才有用。</span><span class="sxs-lookup"><span data-stu-id="e7b59-117">This is only of use if the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> represents the xs:QName type or a type derived from it.</span></span></param>
        <summary><span data-ttu-id="e7b59-118">如果 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示 xs:QName 类型或从中派生的类型，将指定值转换为用 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 指定的 CLR 类型，该指定值的类型为用 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的 XML 架构类型的一种有效公共语言运行时 (CLR) 表示形式。</span><span class="sxs-lookup"><span data-stu-id="e7b59-118">Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, to the CLR type specified using the <see cref="T:System.Xml.IXmlNamespaceResolver" /> if the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> represents the xs:QName type or a type derived from it.</span></span></summary>
        <returns><span data-ttu-id="e7b59-119">转换后的输入值。</span><span class="sxs-lookup"><span data-stu-id="e7b59-119">The converted input value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b59-120">有关 XML 数据类型的类和转换中的类型支持的详细信息 <xref:System.Xml?displayProperty=nameWithType> ，请参阅 [System.Xml 类主题中的类型支持](/dotnet/standard/data/xml/type-support-in-the-system-xml-classes) 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-120">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> classes and conversion of XML data types, see the [Type Support in the System.Xml Classes](/dotnet/standard/data/xml/type-support-in-the-system-xml-classes) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7b59-121"><see cref="T:System.Object" /> 或 <see cref="T:System.Type" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e7b59-121">The <see cref="T:System.Object" /> or <see cref="T:System.Type" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e7b59-122">由 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的类型不支持从指定值的类型转换为指定类型。</span><span class="sxs-lookup"><span data-stu-id="e7b59-122">The type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> does not support a conversion from type of the value specified to the type specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDerivedFrom">
      <MemberSignature Language="C#" Value="public virtual bool IsDerivedFrom (System.Xml.Schema.XmlSchemaDatatype datatype);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDerivedFrom(class System.Xml.Schema.XmlSchemaDatatype datatype) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDerivedFrom (datatype As XmlSchemaDatatype) As Boolean" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDerivedFrom(System::Xml::Schema::XmlSchemaDatatype ^ datatype);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member IsDerivedFrom : System.Xml.Schema.XmlSchemaDatatype -&gt; bool&#xA;override this.IsDerivedFrom : System.Xml.Schema.XmlSchemaDatatype -&gt; bool" Usage="xmlSchemaDatatype.IsDerivedFrom datatype" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datatype" Type="System.Xml.Schema.XmlSchemaDatatype" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="datatype"><span data-ttu-id="e7b59-123"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" />。</span><span class="sxs-lookup"><span data-stu-id="e7b59-123">The <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</span></span></param>
        <summary><span data-ttu-id="e7b59-124"><see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> 方法始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e7b59-124">The <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> method always returns <see langword="false" />.</span></span></summary>
        <returns><span data-ttu-id="e7b59-125">始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e7b59-125">Always returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.IXmlNamespaceResolver nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::IXmlNamespaceResolver ^ nsmgr);" />
      <MemberSignature Language="F#" Value="abstract member ParseValue : string * System.Xml.XmlNameTable * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlSchemaDatatype.ParseValue (s, nameTable, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="nsmgr" Type="System.Xml.IXmlNamespaceResolver" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e7b59-126">要根据简单类型验证的 <see langword="string" />。</span><span class="sxs-lookup"><span data-stu-id="e7b59-126">The <see langword="string" /> to validate against the simple type.</span></span></param>
        <param name="nameTable"><span data-ttu-id="e7b59-127">如果 <see cref="T:System.Xml.XmlNameTable" /> 对象表示 xs:NCName 类型，在分析 <see langword="string" /> 时用于原子化的 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />。</span><span class="sxs-lookup"><span data-stu-id="e7b59-127">The <see cref="T:System.Xml.XmlNameTable" /> to use for atomization while parsing the <see langword="string" /> if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:NCName type.</span></span></param>
        <param name="nsmgr"><span data-ttu-id="e7b59-128">如果 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象表示 xs:QName 类型，在分析 <see langword="string" /> 时使用的 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e7b59-128">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object to use while parsing the <see langword="string" /> if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:QName type.</span></span></param>
        <summary><span data-ttu-id="e7b59-129">当在派生类中重写时，根据内置或用户定义的简单类型验证指定的 <see langword="string" />。</span><span class="sxs-lookup"><span data-stu-id="e7b59-129">When overridden in a derived class, validates the <see langword="string" /> specified against a built-in or user-defined simple type.</span></span></summary>
        <returns><span data-ttu-id="e7b59-130"><see cref="T:System.Object" />，它可以被安全地强制转换为由 <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /> 属性返回的类型。</span><span class="sxs-lookup"><span data-stu-id="e7b59-130">An <see cref="T:System.Object" /> that can be cast safely to the type returned by the <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b59-131"><xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A>方法 `string` 根据内置或用户定义的简单类型验证指定的。</span><span class="sxs-lookup"><span data-stu-id="e7b59-131">The <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> method validates the `string` specified against a built-in or user-defined simple type.</span></span> <span data-ttu-id="e7b59-132">例如，如果此 <xref:System.Xml.Schema.XmlSchemaDatatype> 表示类型 xs： date，则返回的实例 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-132">For example, if this <xref:System.Xml.Schema.XmlSchemaDatatype> represents the type xs:date, then an instance of <xref:System.DateTime> is returned.</span></span>  
  
 <span data-ttu-id="e7b59-133">下面是在 <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> 方法的验证过程中执行的步骤。</span><span class="sxs-lookup"><span data-stu-id="e7b59-133">The following are the steps performed during the <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> method's validation process.</span></span>  
  
1.  <span data-ttu-id="e7b59-134"> (CLR) 类型，将指定的值转换为 `string` 其相应的公共语言运行时。</span><span class="sxs-lookup"><span data-stu-id="e7b59-134">Convert the value specified as a `string` to its corresponding Common Language Runtime (CLR) type.</span></span>  
  
2.  <span data-ttu-id="e7b59-135">请确保该值不违反为简单类型定义的任何方面。</span><span class="sxs-lookup"><span data-stu-id="e7b59-135">Verify that the value does not violate any facets defined for the simple type.</span></span>  
  
 <span data-ttu-id="e7b59-136">转换后的值将作为返回 <xref:System.Object> ，可以安全地强制转换为属性返回的类型 <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-136">The converted value is then returned as an <xref:System.Object> and can be cast safely to the type returned by the <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> property.</span></span>  
  
 <span data-ttu-id="e7b59-137">当 <xref:System.Xml.Schema.XmlSchemaDatatype> 对象表示列表类型时，输入 `string` 值将转换为一个或多个对象的列表。</span><span class="sxs-lookup"><span data-stu-id="e7b59-137">When the <xref:System.Xml.Schema.XmlSchemaDatatype> object represents a list type, the input `string` value is converted to a list of one or more objects.</span></span> <span data-ttu-id="e7b59-138">当 <xref:System.Xml.Schema.XmlSchemaDatatype> 对象表示列表类型时，将尝试将输入值作为联合的成员类型进行分析。</span><span class="sxs-lookup"><span data-stu-id="e7b59-138">When the <xref:System.Xml.Schema.XmlSchemaDatatype> object represents a list type, an attempt is made to parse the input value as a member type of the union.</span></span> <span data-ttu-id="e7b59-139">如果分析尝试失败，则将尝试对联合的下一个成员进行转换，直到分析成功或没有其他成员类型要分析。</span><span class="sxs-lookup"><span data-stu-id="e7b59-139">If the parse attempt fails, then the conversion is attempted with the next member of the union until the parse is successful or there are no other member types to parse.</span></span> <span data-ttu-id="e7b59-140">如果分析失败，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="e7b59-140">If the parse is unsuccessful, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b59-141">下面的示例 `LotteryNumber` 从示例 .xsd 文件中检索简单类型作为 <xref:System.Xml.Schema.XmlSchemaSimpleType> ，然后 `string` 使用方法验证的值 `5` <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-141">The following example retrieves the `LotteryNumber` simple type from the example.xsd file as an <xref:System.Xml.Schema.XmlSchemaSimpleType> and then validates the `string` value of `5` using the <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> method.</span></span>  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 <span data-ttu-id="e7b59-142">下面的 XML 文件用于前面的代码示例。</span><span class="sxs-lookup"><span data-stu-id="e7b59-142">The following XML file is used for the preceding code example.</span></span>  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="e7b59-143">输入值不是该 W3C XML 架构类型的有效实例。</span><span class="sxs-lookup"><span data-stu-id="e7b59-143">The input value is not a valid instance of this W3C XML Schema type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7b59-144">要分析的值不可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e7b59-144">The value to parse cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As XmlNamespaceManager) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="abstract member ParseValue : string * System.Xml.XmlNameTable * System.Xml.XmlNamespaceManager -&gt; obj" Usage="xmlSchemaDatatype.ParseValue (s, nameTable, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" Index="2" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e7b59-145">要根据简单类型验证的字符串。</span><span class="sxs-lookup"><span data-stu-id="e7b59-145">The string to validate against the simple type.</span></span></param>
        <param name="nameTable"><span data-ttu-id="e7b59-146">分析字符串时用于原子化的 <see cref="T:System.Xml.XmlNameTable" />（如果 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 对象表示 xs:NCName 类型）。</span><span class="sxs-lookup"><span data-stu-id="e7b59-146">The <see cref="T:System.Xml.XmlNameTable" /> to use for atomization while parsing the string if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:NCName type.</span></span></param>
        <param name="nsmgr"><span data-ttu-id="e7b59-147">如果 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 对象表示 xs:QName 类型，在分析字符串时使用 <see cref="T:System.Xml.XmlNamespaceManager" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e7b59-147">The <see cref="T:System.Xml.XmlNamespaceManager" /> object to use while parsing the string if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:QName type.</span></span></param>
        <summary><span data-ttu-id="e7b59-148">在派生类中重写时，根据内置或用户定义的简单类型验证指定的字符串。</span><span class="sxs-lookup"><span data-stu-id="e7b59-148">When overridden in a derived class, validates the specified string against a built-in or user-defined simple type.</span></span></summary>
        <returns><span data-ttu-id="e7b59-149"><see cref="T:System.Object" />，它可以安全地强制转换为由 <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /> 属性返回的类型。</span><span class="sxs-lookup"><span data-stu-id="e7b59-149">An <see cref="T:System.Object" /> that can be safely cast to the type that is returned by the <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="e7b59-150"><xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A>方法根据内置或用户定义的简单类型验证指定的字符串。</span><span class="sxs-lookup"><span data-stu-id="e7b59-150">The <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> method validates the specified string against a built-in or user-defined simple type.</span></span> <span data-ttu-id="e7b59-151">例如，如果此 <xref:System.Xml.Schema.XmlSchemaDatatype> 表示类型 xs： date，则返回的实例 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-151">For example, if this <xref:System.Xml.Schema.XmlSchemaDatatype> represents the type xs:date, then an instance of <xref:System.DateTime> is returned.</span></span>

<span data-ttu-id="e7b59-152">下面是在 <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> 方法的验证过程中执行的步骤。</span><span class="sxs-lookup"><span data-stu-id="e7b59-152">The following are the steps performed during the <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> method's validation process.</span></span>

1. <span data-ttu-id="e7b59-153"> (CLR) 类型将指定的字符串转换为其相应的公共语言运行时。</span><span class="sxs-lookup"><span data-stu-id="e7b59-153">Convert the specified string to its corresponding Common Language Runtime (CLR) type.</span></span>

2. <span data-ttu-id="e7b59-154">验证该值不违反为简单类型定义的任何方面。</span><span class="sxs-lookup"><span data-stu-id="e7b59-154">Verify that the value does not violate any facets that are defined for the simple type.</span></span>

<span data-ttu-id="e7b59-155">转换后的值将作为返回 <xref:System.Object> ，可以安全地强制转换为由属性返回的类型 <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType> 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-155">The converted value is then returned as an <xref:System.Object> and can be cast safely to the type that is returned by the <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType> property.</span></span>

<span data-ttu-id="e7b59-156">当 <xref:System.Xml.Schema.XmlSchemaDatatype> 对象表示列表类型时，输入字符串值将转换为一个或多个对象的列表。</span><span class="sxs-lookup"><span data-stu-id="e7b59-156">When the <xref:System.Xml.Schema.XmlSchemaDatatype> object represents a list type, the input string value is converted to a list of one or more objects.</span></span> <span data-ttu-id="e7b59-157">当 <xref:System.Xml.Schema.XmlSchemaDatatype> 对象表示列表类型时，将尝试将输入值作为联合的成员类型进行分析。</span><span class="sxs-lookup"><span data-stu-id="e7b59-157">When the <xref:System.Xml.Schema.XmlSchemaDatatype> object represents a list type, an attempt is made to parse the input value as a member type of the union.</span></span> <span data-ttu-id="e7b59-158">如果分析尝试失败，则将尝试对联合的下一个成员进行转换，直到分析成功或没有其他成员类型要分析。</span><span class="sxs-lookup"><span data-stu-id="e7b59-158">If the parse attempt fails, then the conversion is attempted with the next member of the union until the parse is successful or there are no other member types to parse.</span></span> <span data-ttu-id="e7b59-159">如果分析失败，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="e7b59-159">If the parse is unsuccessful, an exception is thrown.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="e7b59-160">输入值不是该 W3C XML 架构类型的有效实例。</span><span class="sxs-lookup"><span data-stu-id="e7b59-160">The input value is not a valid instance of this W3C XML Schema type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7b59-161">要分析的值不能为 NULL（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="e7b59-161">The value to parse cannot be null (Nothing in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TokenizedType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlTokenizedType TokenizedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlTokenizedType TokenizedType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenizedType As XmlTokenizedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlTokenizedType TokenizedType { System::Xml::XmlTokenizedType get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenizedType : System.Xml.XmlTokenizedType" Usage="System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlTokenizedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7b59-162">当在派生类中重写时，获取在 WWW 联合会 (W3C) XML 1.0 规范中指定的 <see langword="string" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="e7b59-162">When overridden in a derived class, gets the type for the <see langword="string" /> as specified in the World Wide Web Consortium (W3C) XML 1.0 specification.</span></span></summary>
        <value><span data-ttu-id="e7b59-163">用于 <see langword="string" /> 的 <see cref="T:System.Xml.XmlTokenizedType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e7b59-163">An <see cref="T:System.Xml.XmlTokenizedType" /> value for the <see langword="string" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b59-164">允许将 `string` 作为特定 XML 类型（例如，CDATA 节类型）进行读取。</span><span class="sxs-lookup"><span data-stu-id="e7b59-164">Allows the `string` to be read as a particular XML type, for example, a CDATA section type.</span></span>  
  
 <span data-ttu-id="e7b59-165">下表显示了标记类型。</span><span class="sxs-lookup"><span data-stu-id="e7b59-165">The following table shows the token types.</span></span>  
  
|<span data-ttu-id="e7b59-166">XmlTokenizedType</span><span class="sxs-lookup"><span data-stu-id="e7b59-166">XmlTokenizedType</span></span>|<span data-ttu-id="e7b59-167">描述</span><span class="sxs-lookup"><span data-stu-id="e7b59-167">Description</span></span>|  
|----------------------|-----------------|  
|`CDATA`|<span data-ttu-id="e7b59-168">CDATA 类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-168">CDATA type</span></span>|  
|`ID`|<span data-ttu-id="e7b59-169">ID 类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-169">ID type</span></span>|  
|`IDREF`|<span data-ttu-id="e7b59-170">IDREF 类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-170">IDREF type</span></span>|  
|`IDREFS`|<span data-ttu-id="e7b59-171">IDREFS 类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-171">IDREFS type</span></span>|  
|`ENTITY`|<span data-ttu-id="e7b59-172">实体类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-172">ENTITY type</span></span>|  
|`ENTITIES`|<span data-ttu-id="e7b59-173">实体类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-173">ENTITIES type</span></span>|  
|`NMTOKEN`|<span data-ttu-id="e7b59-174">NMTOKEN 类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-174">NMTOKEN type</span></span>|  
|`NMTOKENS`|<span data-ttu-id="e7b59-175">NMTOKENS 类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-175">NMTOKENS type</span></span>|  
|`NOTATION`|<span data-ttu-id="e7b59-176">NOTATION 类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-176">NOTATION type</span></span>|  
|`ENUMERATION`|<span data-ttu-id="e7b59-177">枚举类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-177">ENUMERATION type</span></span>|  
|`QName`|<span data-ttu-id="e7b59-178">QName 类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-178">QName type</span></span>|  
|`NCName`|<span data-ttu-id="e7b59-179">NCName 类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-179">NCName type</span></span>|  
|`None`|<span data-ttu-id="e7b59-180">无类型</span><span class="sxs-lookup"><span data-stu-id="e7b59-180">No type</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlTypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlTypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeCode As XmlTypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlTypeCode TypeCode { System::Xml::Schema::XmlTypeCode get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeCode : System.Xml.Schema.XmlTypeCode" Usage="System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlTypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7b59-181">获取简单类型的 <see cref="T:System.Xml.Schema.XmlTypeCode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e7b59-181">Gets the <see cref="T:System.Xml.Schema.XmlTypeCode" /> value for the simple type.</span></span></summary>
        <value><span data-ttu-id="e7b59-182">简单类型的 <see cref="T:System.Xml.Schema.XmlTypeCode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e7b59-182">The <see cref="T:System.Xml.Schema.XmlTypeCode" /> value for the simple type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b59-183">W3C XML 架构列表类型（如 xs：实体、xs： NMTOKENS 和 xs： IDREFS）不由枚举表示 <xref:System.Xml.Schema.XmlTypeCode> 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-183">W3C XML Schema list types such as xs:ENTITIES, xs:NMTOKENS and xs:IDREFS are not represented by the <xref:System.Xml.Schema.XmlTypeCode> enumeration.</span></span> <span data-ttu-id="e7b59-184">相反，它们由 <xref:System.Xml.Schema.XmlTypeCode> xs： ENTITY、xs： NMTOKEN 和 xs： IDREF 类型的值表示，其的 <xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> 属性 <xref:System.Xml.Schema.XmlSchemaDatatype> 设置为 <xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List> 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-184">Instead they are represented by the <xref:System.Xml.Schema.XmlTypeCode> values for the xs:ENTITY, xs:NMTOKEN and xs:IDREF types with the <xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> property of the <xref:System.Xml.Schema.XmlSchemaDatatype> object set to <xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e7b59-185">Xs： anySimpleType 和 xs： anyType 类型均不由 <xref:System.Xml.Schema.XmlTypeCode> 枚举表示。</span><span class="sxs-lookup"><span data-stu-id="e7b59-185">Both the xs:anySimpleType and xs:anyType types are not represented by <xref:System.Xml.Schema.XmlTypeCode> enumeration.</span></span> <span data-ttu-id="e7b59-186">它们在对象中表示 <xref:System.Xml.Schema.XmlSchemaDatatype> ， <xref:System.Xml.Schema.XmlTypeCode> 其值为 <xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic> xs： anySimpleType 或 <xref:System.Xml.Schema.XmlTypeCode.Item> xs： anyType。</span><span class="sxs-lookup"><span data-stu-id="e7b59-186">These are represented in an <xref:System.Xml.Schema.XmlSchemaDatatype> object with an <xref:System.Xml.Schema.XmlTypeCode> whose value is <xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic> for xs:anySimpleType or <xref:System.Xml.Schema.XmlTypeCode.Item> for xs:anyType.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b59-187">有关属性的示例 <xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A> ，请参见 <xref:System.Xml.Schema.XmlSchemaDatatype> 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-187">For an example of the <xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A> property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public abstract Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7b59-188">在派生类中重写时，获取项的公共语言运行时 (CLR) 类型。</span><span class="sxs-lookup"><span data-stu-id="e7b59-188">When overridden in a derived class, gets the Common Language Runtime (CLR) type of the item.</span></span></summary>
        <value><span data-ttu-id="e7b59-189">项的公共语言运行时 (CLR) 类型。</span><span class="sxs-lookup"><span data-stu-id="e7b59-189">The Common Language Runtime (CLR) type of the item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7b59-190"><xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>属性获取项的 CLR 类型。</span><span class="sxs-lookup"><span data-stu-id="e7b59-190">The <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> property gets the CLR type of the item.</span></span> <span data-ttu-id="e7b59-191">例如，类型为 `xs:int` <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> 的元素默认具有的 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-191">For example, an element of type `xs:int` would have a <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> of <xref:System.Int32> by default.</span></span> <span data-ttu-id="e7b59-192">但是， <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> 可以是可以映射到的有效类型之一 `xs:int` ，例如 <xref:System.Int16> 或 <xref:System.Double> 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-192">However, the <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> could be any one of the valid types that can be mapped to `xs:int`, such as <xref:System.Int16> or <xref:System.Double>.</span></span>  
  
 <span data-ttu-id="e7b59-193">有关命名空间中的类型支持的详细信息 <xref:System.Xml?displayProperty=nameWithType> ，请参阅 [System.Xml 类中的类型支持](/dotnet/standard/data/xml/type-support-in-the-system-xml-classes)。</span><span class="sxs-lookup"><span data-stu-id="e7b59-193">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](/dotnet/standard/data/xml/type-support-in-the-system-xml-classes).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7b59-194">有关属性的示例 <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> ，请参见 <xref:System.Xml.Schema.XmlSchemaDatatype> 。</span><span class="sxs-lookup"><span data-stu-id="e7b59-194">For an example of the <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Variety">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDatatypeVariety Variety" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Variety As XmlSchemaDatatypeVariety" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlSchemaDatatypeVariety Variety { System::Xml::Schema::XmlSchemaDatatypeVariety get(); };" />
      <MemberSignature Language="F#" Value="member this.Variety : System.Xml.Schema.XmlSchemaDatatypeVariety" Usage="System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDatatypeVariety</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7b59-195">获取简单类型的 <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e7b59-195">Gets the <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> value for the simple type.</span></span></summary>
        <value><span data-ttu-id="e7b59-196">简单类型的 <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e7b59-196">The <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> value for the simple type.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" />
      </Docs>
    </Member>
  </Members>
</Type>
