<Type Name="XmlSchemaSet" FullName="System.Xml.Schema.XmlSchemaSet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e66474fc878fa5aae4b7ce279ff714aa465548c" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90793389" /></Metadata><TypeSignature Language="C#" Value="public class XmlSchemaSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaSet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaSet" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchemaSet" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaSet" />
  <TypeSignature Language="F#" Value="type XmlSchemaSet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="55633-101">包含 XML 架构定义语言 (XSD) 架构的缓存。</span><span class="sxs-lookup"><span data-stu-id="55633-101">Contains a cache of XML Schema definition language (XSD) schemas.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   <span data-ttu-id="55633-102">不要使用来自未知或不受信任的源或位置的架构。</span><span class="sxs-lookup"><span data-stu-id="55633-102">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="55633-103">这样做会破坏代码的安全性。</span><span class="sxs-lookup"><span data-stu-id="55633-103">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="55633-104">XML 架构 (包括内联架构) 在本质上容易受到拒绝服务攻击;不要在不受信任的情况下接受它们。</span><span class="sxs-lookup"><span data-stu-id="55633-104">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="55633-105">架构验证错误消息和异常可能会向架构文件公开有关内容模型或 URI 路径的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="55633-105">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="55633-106">请注意不要向不受信任的调用方公开此信息。</span><span class="sxs-lookup"><span data-stu-id="55633-106">Be careful not to expose this information to untrusted callers.</span></span>  
> -   <span data-ttu-id="55633-107">"安全注意事项" 部分中介绍了其他安全注意事项。</span><span class="sxs-lookup"><span data-stu-id="55633-107">Additional security considerations are covered in the "Security Considerations" section.</span></span>  
  
 <span data-ttu-id="55633-108"><xref:System.Xml.Schema.XmlSchemaSet> 是一个缓存或库，您可以在其中存储 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="55633-108"><xref:System.Xml.Schema.XmlSchemaSet> is a cache or library where you can store XML Schema definition language (XSD) schemas.</span></span> <span data-ttu-id="55633-109"><xref:System.Xml.Schema.XmlSchemaSet> 通过将架构缓存在内存中，而不是从文件或 URL 访问架构，从而提高性能。</span><span class="sxs-lookup"><span data-stu-id="55633-109"><xref:System.Xml.Schema.XmlSchemaSet> improves performance by caching schemas in memory instead of accessing them from a file or a URL.</span></span> <span data-ttu-id="55633-110">每个架构都由命名空间 URI 和架构被添加到该集时指定的位置标识。</span><span class="sxs-lookup"><span data-stu-id="55633-110">Each schema is identified by the namespace URI and location that was specified when the schema was added to the set.</span></span> <span data-ttu-id="55633-111">使用 <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType> 属性可分配 <xref:System.Xml.Schema.XmlSchemaSet> XML 读取器用于数据验证的对象。</span><span class="sxs-lookup"><span data-stu-id="55633-111">You use the <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType> property to assign the <xref:System.Xml.Schema.XmlSchemaSet> object an XML reader should use for data validation.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="55633-112">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="55633-112">Security Considerations</span></span>  
  
-   <span data-ttu-id="55633-113">不要使用来自未知或不受信任的源的架构。</span><span class="sxs-lookup"><span data-stu-id="55633-113">Do not use schemas from unknown or untrusted sources.</span></span> <span data-ttu-id="55633-114">这样做会破坏代码的安全性。</span><span class="sxs-lookup"><span data-stu-id="55633-114">Doing so will compromise the security of your code.</span></span> <span data-ttu-id="55633-115">在架构的包含、导入和重新定义元素中引用的外部命名空间或位置是根据包含或导入这些元素的架构的基本 URI 解析的。</span><span class="sxs-lookup"><span data-stu-id="55633-115">External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</span></span> <span data-ttu-id="55633-116">例如，如果包含或导入架构的基本 URI 为空或 `null` ，则相对于当前目录解析外部位置。</span><span class="sxs-lookup"><span data-stu-id="55633-116">For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory.</span></span> <span data-ttu-id="55633-117"><xref:System.Xml.XmlUrlResolver>默认情况下，类用于解析外部架构。</span><span class="sxs-lookup"><span data-stu-id="55633-117">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="55633-118">若要对架构的 include、import 和 redefine 元素禁用解析，请将 <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> 属性设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="55633-118">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="55633-119"><xref:System.Xml.Schema.XmlSchemaSet>类使用 <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> 类在 XML 架构中分析和匹配正则表达式。</span><span class="sxs-lookup"><span data-stu-id="55633-119">The <xref:System.Xml.Schema.XmlSchemaSet> class uses the <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> class to parse and match regular expressions in an XML schema.</span></span> <span data-ttu-id="55633-120">在 XML 架构中使用正则表达式验证模式方面可能会涉及到增加的 CPU 使用率，并且应避免在高可用性方案中使用。</span><span class="sxs-lookup"><span data-stu-id="55633-120">Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.</span></span>  
  
-   <span data-ttu-id="55633-121">由于使用类而引发的异常 <xref:System.Xml.Schema.XmlSchemaSet> ，例如 <xref:System.Xml.Schema.XmlSchemaException> 类可能包含不应在不受信任的方案中公开的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="55633-121">Exceptions raised as a result of using the <xref:System.Xml.Schema.XmlSchemaSet> class, such as the <xref:System.Xml.Schema.XmlSchemaException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="55633-122">例如，的 <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> 属性将 <xref:System.Xml.Schema.XmlSchemaException> 返回引发异常的架构文件的 URI 路径。</span><span class="sxs-lookup"><span data-stu-id="55633-122">For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="55633-123"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>不应在不受信任的方案中公开属性。</span><span class="sxs-lookup"><span data-stu-id="55633-123">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="55633-124">应正确处理异常，以便不受信任的情况下不公开此敏感信息。</span><span class="sxs-lookup"><span data-stu-id="55633-124">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55633-125">以下示例使用 <xref:System.Xml.Schema.XmlSchemaSet> 中存储的架构验证 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="55633-125">The following example validates an XML file using schemas stored in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-126">XML 文件 `urn:bookstore-schema` 中的命名空间标识 <xref:System.Xml.Schema.XmlSchemaSet> 中要用于验证的架构。</span><span class="sxs-lookup"><span data-stu-id="55633-126">The namespace in the XML file, `urn:bookstore-schema`, identifies which schema in the <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span> <span data-ttu-id="55633-127">该示例的输出显示 XML 文件有两个架构冲突：</span><span class="sxs-lookup"><span data-stu-id="55633-127">Output from the example shows that the XML file has two schema violations:</span></span>

 - <span data-ttu-id="55633-128">第一个 \<book> 元素包含 \<author> 元素，但不包含 \<title> 或 \<price> 元素。</span><span class="sxs-lookup"><span data-stu-id="55633-128">The first \<book> element contains an \<author> element but no \<title> or \<price> element.</span></span>

 - <span data-ttu-id="55633-129">\<author>最后一个元素中的元素 \<book> 缺少 \<first-name> and \<last-name> 元素，而具有无效的 \<name> 元素。</span><span class="sxs-lookup"><span data-stu-id="55633-129">The \<author> element in the last \<book> element is missing a \<first-name> and \<last-name> element and instead has an invalid \<name> element.</span></span>   
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="55633-130">输入</span><span class="sxs-lookup"><span data-stu-id="55633-130">Input</span></span>  
 <span data-ttu-id="55633-131">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="55633-131">The sample uses the following two input files.</span></span>  
  
 <span data-ttu-id="55633-132">**booksSchemaFail.xml：**</span><span class="sxs-lookup"><span data-stu-id="55633-132">**booksSchemaFail.xml:**</span></span>  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 <span data-ttu-id="55633-133">**书籍 .xsd：**</span><span class="sxs-lookup"><span data-stu-id="55633-133">**books.xsd:**</span></span>  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55633-134">初始化 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55633-134">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55633-135">初始化 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55633-135">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSet (System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaSet(System::Xml::XmlNameTable ^ nameTable);" />
      <MemberSignature Language="F#" Value="new System.Xml.Schema.XmlSchemaSet : System.Xml.XmlNameTable -&gt; System.Xml.Schema.XmlSchemaSet" Usage="new System.Xml.Schema.XmlSchemaSet nameTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nameTable"><span data-ttu-id="55633-136">要使用的 <see cref="T:System.Xml.XmlNameTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-136">The <see cref="T:System.Xml.XmlNameTable" /> object to use.</span></span></param>
        <summary><span data-ttu-id="55633-137">使用指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 初始化 <see cref="T:System.Xml.XmlNameTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55633-137">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55633-138">作为参数传递的 <see cref="T:System.Xml.XmlNameTable" /> 对象为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55633-138">The <see cref="T:System.Xml.XmlNameTable" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55633-139">将给定的 XML 架构定义语言 (XSD) 架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="55633-139">Adds the given XML Schema definition language (XSD) schema to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema? Add (System.Xml.Schema.XmlSchema schema);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Xml.Schema.XmlSchema -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Add schema" />
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="55633-140">添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-140">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to add to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="55633-141">将指定的 <see cref="T:System.Xml.Schema.XmlSchema" /> 添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="55633-141">Adds the given <see cref="T:System.Xml.Schema.XmlSchema" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="55633-142">如果架构有效，则为 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-142">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="55633-143">如果架构无效且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，则将返回 <see langword="null" /> 并引发适当的验证事件。</span><span class="sxs-lookup"><span data-stu-id="55633-143">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="55633-144">否则会引发 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="55633-144">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-145">如果 <xref:System.Xml.Schema.XmlSchema> 中已存在对象 <xref:System.Xml.Schema.XmlSchemaSet> ，则此 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="55633-145">If the <xref:System.Xml.Schema.XmlSchema> object already exists in the <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method does nothing.</span></span>  
  
 <span data-ttu-id="55633-146">此方法的功能与方法的功能相同 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-146">The functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="55633-147">该架构无效。</span><span class="sxs-lookup"><span data-stu-id="55633-147">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55633-148">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55633-148">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Xml.Schema.XmlSchemaSet -&gt; unit" Usage="xmlSchemaSet.Add schemas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="55633-149"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-149">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span></span></param>
        <summary><span data-ttu-id="55633-150">将给定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的所有 XML 架构定义语言 (XSD) 架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="55633-150">Adds all the XML Schema definition language (XSD) schemas in the given <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-151">在将架构添加到之前，必须 <xref:System.Xml.Schema.XmlSchemaSet> 对其进行成功的预处理。</span><span class="sxs-lookup"><span data-stu-id="55633-151">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="55633-152">预处理执行以下基本任务。</span><span class="sxs-lookup"><span data-stu-id="55633-152">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="55633-153">根据 W3C XML 架构的规则检查架构的结构有效性，但架构未完全验证。</span><span class="sxs-lookup"><span data-stu-id="55633-153">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="55633-154">解析对内部和外部架构组件的引用。</span><span class="sxs-lookup"><span data-stu-id="55633-154">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="55633-155">已成功检索的任何导入或包含的架构也会添加到中 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-155">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-156">导入的架构被添加为单独 <xref:System.Xml.Schema.XmlSchema> 的对象，并且包含的架构构成包括在内的部分 <xref:System.Xml.Schema.XmlSchema> 。</span><span class="sxs-lookup"><span data-stu-id="55633-156">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="55633-157">如果 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 要添加的的属性 <xref:System.Xml.Schema.XmlSchemaSet> 为，则将 `true` 添加中的所有架构添加 <xref:System.Xml.Schema.XmlSchemaSet> 到中 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-157">If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `true`, all schemas in the <xref:System.Xml.Schema.XmlSchemaSet> to add are added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-158">如果 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 要添加的属性 <xref:System.Xml.Schema.XmlSchemaSet> 为，则添加的 `false` 每个架构都将进行预处理。</span><span class="sxs-lookup"><span data-stu-id="55633-158">If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `false`, each schema added is preprocessed before being added.</span></span> <span data-ttu-id="55633-159">如果新添加的任何架构无法进行 <xref:System.Xml.Schema.XmlSchemaSet> 预处理，则不会添加任何架构; 相反， <xref:System.Xml.Schema.XmlSchemaException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="55633-159">If any of the schemas in the newly added <xref:System.Xml.Schema.XmlSchemaSet> fails to be preprocessed, no schemas are added; instead, an <xref:System.Xml.Schema.XmlSchemaException> is thrown.</span></span> <span data-ttu-id="55633-160">因此，下面两个代码示例是不等效的。</span><span class="sxs-lookup"><span data-stu-id="55633-160">As a result, the following two code example are not equivalent.</span></span>  
  
```vb  
' First example  
schemaSet.Add(schemaSet1)  
  
' Second example  
Dim schema As XmlSchema  
  
For Each schema in schemaSet.Schemas()  
  
    schemaSet.Add(schema)  
  
Next  
```  
  
```csharp  
// First example  
schemaSet.Add(schemaSet1);  
  
// Second example  
foreach(XmlSchema schema in schemaSet.Schemas())  
{  
    schemaSet.Add(schema);  
}  
```  
  
 <span data-ttu-id="55633-161">前面的两个代码示例并不是等效的。</span><span class="sxs-lookup"><span data-stu-id="55633-161">The previous two code examples are not equivalent.</span></span> <span data-ttu-id="55633-162">在第一个示例中，如果中存在无效的架构， `schemaSet1` 并且其 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 属性设置为 `false` ，则不会将任何架构添加到中 `schemaSet` 。</span><span class="sxs-lookup"><span data-stu-id="55633-162">In the first example, if an invalid schema exists in `schemaSet1` and its <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`, no schemas are added to `schemaSet`.</span></span> <span data-ttu-id="55633-163">在第二个示例中，可能会在遇到无效的架构之前添加多个架构， `schemaSet` 并引发异常。</span><span class="sxs-lookup"><span data-stu-id="55633-163">In the second example, a number of schemas can be added to `schemaSet` before an invalid schema is encountered and an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55633-164">下面的代码示例演示如何将架构添加到 <xref:System.Xml.Schema.XmlSchemaSet> ，然后 <xref:System.Xml.Schema.XmlSchemaSet> 使用方法将添加到新的中 <xref:System.Xml.Schema.XmlSchemaSet> <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-164">The following code example illustrates adding schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then adding the <xref:System.Xml.Schema.XmlSchemaSet> to a new <xref:System.Xml.Schema.XmlSchemaSet> using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
```vb  
Dim schemaSet1 As XmlSchemaSet = New XmlSchemaSet  
schemaSet1.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet1.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet1.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schemaSet2 As XmlSchemaSet = New XmlSchemaSet  
schemaSet2.Add(schemaSet1)  
```  
  
```csharp  
XmlSchemaSet schemaSet1 = new XmlSchemaSet();  
schemaSet1.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet1.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet1.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
XmlSchemaSet schemaSet2 = new XmlSchemaSet();  
schemaSet2.Add(schemaSet1);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="55633-165"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的架构无效。</span><span class="sxs-lookup"><span data-stu-id="55633-165">A schema in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55633-166">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55633-166">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, string? schemaUri);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string targetNamespace, string schemaUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (targetNamespace As String, schemaUri As String) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ targetNamespace, System::String ^ schemaUri);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Add (targetNamespace, schemaUri)" />
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, string schemaUri);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="schemaUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="55633-167">架构的 <paramref name="targetNamespace" /> 属性或 <see langword="null" /> 以使用架构中指定的 <paramref name="targetNamespace" />。</span><span class="sxs-lookup"><span data-stu-id="55633-167">The schema <paramref name="targetNamespace" /> property, or <see langword="null" /> to use the <paramref name="targetNamespace" /> specified in the schema.</span></span></param>
        <param name="schemaUri"><span data-ttu-id="55633-168">指定要加载的架构的 URL。</span><span class="sxs-lookup"><span data-stu-id="55633-168">The URL that specifies the schema to load.</span></span></param>
        <summary><span data-ttu-id="55633-169">将位于指定 URL 的 XML 架构定义语言 (XSD) 架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="55633-169">Adds the XML Schema definition language (XSD) schema at the URL specified to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="55633-170">如果架构有效，则为 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-170">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="55633-171">如果架构无效且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，则将返回 <see langword="null" /> 并引发适当的验证事件。</span><span class="sxs-lookup"><span data-stu-id="55633-171">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="55633-172">否则会引发 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="55633-172">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-173">在将架构添加到之前，必须 <xref:System.Xml.Schema.XmlSchemaSet> 对其进行成功的预处理。</span><span class="sxs-lookup"><span data-stu-id="55633-173">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="55633-174">预处理执行以下基本任务。</span><span class="sxs-lookup"><span data-stu-id="55633-174">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="55633-175">根据 W3C XML 架构的规则检查架构的结构有效性，但架构未完全验证。</span><span class="sxs-lookup"><span data-stu-id="55633-175">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="55633-176">解析对内部和外部架构组件的引用。</span><span class="sxs-lookup"><span data-stu-id="55633-176">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="55633-177">已成功检索的任何导入或包含的架构也会添加到中 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-177">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-178">导入的架构被添加为单独 <xref:System.Xml.Schema.XmlSchema> 的对象，并且包含的架构构成包括在内的部分 <xref:System.Xml.Schema.XmlSchema> 。</span><span class="sxs-lookup"><span data-stu-id="55633-178">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="55633-179">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-179">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="55633-180">如果将架构添加到 <xref:System.Xml.Schema.XmlSchemaSet> 具有相同目标命名空间和架构位置的 URL，则 <xref:System.Xml.Schema.XmlSchemaSet> 将返回原始架构对象。</span><span class="sxs-lookup"><span data-stu-id="55633-180">Adding a schema to the <xref:System.Xml.Schema.XmlSchemaSet> with the same target namespace and schema location URL as a schema already contained within the <xref:System.Xml.Schema.XmlSchemaSet> will return the original schema object.</span></span>  
  
-   <span data-ttu-id="55633-181">将新架构成功添加到后 <xref:System.Xml.Schema.XmlSchemaSet> ， <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 的属性将 <xref:System.Xml.Schema.XmlSchemaSet> 设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="55633-181">When a new schema is successfully added to an <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> is set to `false`.</span></span>  
  
-   <span data-ttu-id="55633-182">调用方法时，将解析 XML 架构中遇到的任何 include 或 import 元素 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-182">Any include or import elements encountered in an XML schema are resolved when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="55633-183">如果无法解析 include 和 import 元素，则会导致架构验证警告，如果未 <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> 为 <xref:System.Xml.Schema.XmlSchemaSet> 对象指定，则不会报告这些警告。</span><span class="sxs-lookup"><span data-stu-id="55633-183">Failure to resolve include and import elements results in a schema validation warning and if no <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> has been specified for the <xref:System.Xml.Schema.XmlSchemaSet> object, these warning will not be reported.</span></span>  
  
-   <span data-ttu-id="55633-184">如果将具有与中已存在的架构相同的目标命名空间的架构 <xref:System.Xml.Schema.XmlSchemaSet> 添加到，则 <xref:System.Xml.Schema.XmlSchemaSet> 这两个架构都将添加。</span><span class="sxs-lookup"><span data-stu-id="55633-184">If a schema with the same target namespace as a schema that already exists in the <xref:System.Xml.Schema.XmlSchemaSet> is added to the <xref:System.Xml.Schema.XmlSchemaSet>, both schemas are added.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="55633-185">此行为与过时的 <xref:System.Xml.Schema.XmlSchemaCollection> 对象不同。</span><span class="sxs-lookup"><span data-stu-id="55633-185">This behavior differs from the obsolete <xref:System.Xml.Schema.XmlSchemaCollection> object.</span></span>  
  
-   <span data-ttu-id="55633-186">的 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 方法 <xref:System.Xml.Schema.XmlSchemaSet> 能够使用架构中定义的目标命名空间，而不需要在调用方法时将目标命名空间指定为参数 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-186">The <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="55633-187">`null`在方法的参数中指定将 `targetNamespace` <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 指示 <xref:System.Xml.Schema.XmlSchemaSet> 使用架构中定义的目标命名空间，如以下代码示例中所示。</span><span class="sxs-lookup"><span data-stu-id="55633-187">Specifying `null` in the `targetNamespace` parameter of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema, as illustrated in the following code example.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add(Nothing, "books.xsd")  
  
Dim schema As XmlSchema  
For Each schema In schemaSet.Schemas("http://www.contoso.com/books")  
    schema.Write(Console.Out)  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "books.xsd");  
  
foreach(XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))  
{  
    schema.Write(Console.Out);  
}  
```  
  
 <span data-ttu-id="55633-188">在上面的代码示例中， `null` 将指定为 `targetNamespace` 方法的参数 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-188">In the code example above, `null` is specified as the `targetNamespace` parameter to the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span> <span data-ttu-id="55633-189">因此，将 `targetNamespace` 使用 books.xml 文件中定义的。</span><span class="sxs-lookup"><span data-stu-id="55633-189">As a result, the `targetNamespace` defined in the books.xml file is used.</span></span> <span data-ttu-id="55633-190">在这种情况下， <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 如果 `http://www.contoso.com/books` 已将指定为参数，则调用方法的结果将相同 `targetNamespace` 。</span><span class="sxs-lookup"><span data-stu-id="55633-190">In this case, the result of calling the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method would be identical if `http://www.contoso.com/books` had been specified as the `targetNamespace` parameter.</span></span>  
  
-   <span data-ttu-id="55633-191">W3C XML 架构允许在定义了目标命名空间的架构中包含无目标命名空间的架构。</span><span class="sxs-lookup"><span data-stu-id="55633-191">W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined.</span></span> <span data-ttu-id="55633-192">在这种情况下，未定义目标命名空间的架构被强制转换为包含架构的目标命名空间。</span><span class="sxs-lookup"><span data-stu-id="55633-192">In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema.</span></span> <span data-ttu-id="55633-193">包含的架构被视为已定义该目标命名空间。</span><span class="sxs-lookup"><span data-stu-id="55633-193">The included schema is treated as if it had that target namespace defined.</span></span> <span data-ttu-id="55633-194">同样，没有目标命名空间的架构可以添加到 <xref:System.Xml.Schema.XmlSchemaSet> 并强制转换为方法指定的目标命名空间 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> ，如以下示例中所示。</span><span class="sxs-lookup"><span data-stu-id="55633-194">Similarly, schemas without a target namespace can be added to the <xref:System.Xml.Schema.XmlSchemaSet> and coerced into the target namespace specified by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method, as illustrated in the following example.</span></span>  
  
```  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">  
    <xs:element name="A" type="xs:string" />  
</xs:schema>  
```  
  
 <span data-ttu-id="55633-195">如果上面的架构添加到 <xref:System.Xml.Schema.XmlSchemaSet> 具有目标命名空间的， `http://www.contoso.com/new/targetnamespace` (如下面的代码所示) ，则将其视为在架构中声明的目标命名空间为 `http://www.contoso.com/new/targetnamespace` 。</span><span class="sxs-lookup"><span data-stu-id="55633-195">If the schema above is added to the <xref:System.Xml.Schema.XmlSchemaSet> with the target namespace `http://www.contoso.com/new/targetnamespace` (as shown in the code below), it is treated as if the target namespace declared in the schema was `http://www.contoso.com/new/targetnamespace`.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema in schemaSet.Schemas()  
  
    Console.WriteLine(schema.TargetNamespace)     
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd");  
foreach(XmlSchema schema in schemaSet.Schemas())  
{  
    Console.WriteLine(schema.TargetNamespace);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="55633-196">下面的代码示例将 `http://www.contoso.com/books.xsd` 具有目标命名空间的架构添加 `http://www.contoso.com/books` 到 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-196">The following code example adds the `http://www.contoso.com/books.xsd` schema with a target namespace of `http://www.contoso.com/books` to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
```  
  
 <span data-ttu-id="55633-197">示例使用 `books.xsd` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="55633-197">The example uses the `books.xsd` file as input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="55633-198">该架构无效。</span><span class="sxs-lookup"><span data-stu-id="55633-198">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55633-199">作为参数传递的 URL 为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="55633-199">The URL passed as a parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader? schemaDocument);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string targetNamespace, class System.Xml.XmlReader schemaDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (targetNamespace As String, schemaDocument As XmlReader) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ targetNamespace, System::Xml::XmlReader ^ schemaDocument);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Add (targetNamespace, schemaDocument)" />
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader schemaDocument);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="schemaDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="55633-200">架构的 <paramref name="targetNamespace" /> 属性或 <see langword="null" /> 以使用架构中指定的 <paramref name="targetNamespace" />。</span><span class="sxs-lookup"><span data-stu-id="55633-200">The schema <paramref name="targetNamespace" /> property, or <see langword="null" /> to use the <paramref name="targetNamespace" /> specified in the schema.</span></span></param>
        <param name="schemaDocument"><span data-ttu-id="55633-201"><see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-201">The <see cref="T:System.Xml.XmlReader" /> object.</span></span></param>
        <summary><span data-ttu-id="55633-202">将 <see cref="T:System.Xml.XmlReader" /> 中包含的 XML 架构定义语言 (XSD) 架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="55633-202">Adds the XML Schema definition language (XSD) schema contained in the <see cref="T:System.Xml.XmlReader" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="55633-203">如果架构有效，则为 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-203">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="55633-204">如果架构无效且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，则将返回 <see langword="null" /> 并引发适当的验证事件。</span><span class="sxs-lookup"><span data-stu-id="55633-204">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="55633-205">否则会引发 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="55633-205">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-206">在将架构添加到之前，必须 <xref:System.Xml.Schema.XmlSchemaSet> 对其进行成功的预处理。</span><span class="sxs-lookup"><span data-stu-id="55633-206">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="55633-207">预处理执行以下基本任务。</span><span class="sxs-lookup"><span data-stu-id="55633-207">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="55633-208">根据 W3C XML 架构的规则检查架构的结构有效性，但架构未完全验证。</span><span class="sxs-lookup"><span data-stu-id="55633-208">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="55633-209">解析对内部和外部架构组件的引用。</span><span class="sxs-lookup"><span data-stu-id="55633-209">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="55633-210">已成功检索的任何导入或包含的架构也会添加到中 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-210">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-211">导入的架构被添加为单独 <xref:System.Xml.Schema.XmlSchema> 的对象，并且包含的架构构成包括在内的部分 <xref:System.Xml.Schema.XmlSchema> 。</span><span class="sxs-lookup"><span data-stu-id="55633-211">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="55633-212">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-212">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="55633-213">如果成功检索到中包含的架构导入或包含的架构， <xref:System.Xml.XmlReader> 还会将添加到中 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-213">Successfully retrieved schemas imported or included by the schemas contained in the <xref:System.Xml.XmlReader> are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
-   <span data-ttu-id="55633-214">如果 <xref:System.Xml.XmlReader> 未定位在根元素上， <xref:System.Xml.Schema.XmlSchemaException> 则会引发，除非当前项是一个元素。</span><span class="sxs-lookup"><span data-stu-id="55633-214">If the <xref:System.Xml.XmlReader> is not positioned on the root element, an <xref:System.Xml.Schema.XmlSchemaException> is thrown unless the current item is an element.</span></span> <span data-ttu-id="55633-215">如果当前项是一个 `xs:schema` 元素，则将架构文档读入 <xref:System.Xml.Schema.XmlSchemaSet> ; 否则， <xref:System.Xml.Schema.XmlSchemaException> 将引发，因为该架构无效。</span><span class="sxs-lookup"><span data-stu-id="55633-215">If the current item is an `xs:schema` element, the schema document is read into the <xref:System.Xml.Schema.XmlSchemaSet>; otherwise, an <xref:System.Xml.Schema.XmlSchemaException> is thrown because the schema is not valid.</span></span>  
  
-   <span data-ttu-id="55633-216">如果位于 <xref:System.Xml.XmlReader> XML 节点序列上，则只添加序列中的第一个节点。</span><span class="sxs-lookup"><span data-stu-id="55633-216">If the <xref:System.Xml.XmlReader> is positioned over a sequence of XML nodes, only the first node in the sequence is added.</span></span>  
  
-   <span data-ttu-id="55633-217">如果架构是通过 <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> 方法调用创建的，则忽略属性的值 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> ，因为不会对 W3C XML 架构文档应用内联架构处理。</span><span class="sxs-lookup"><span data-stu-id="55633-217">If the schema was created from a <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method call, the value of the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> property is ignored, because inline schema processing is not applied for W3C XML Schema documents.</span></span>  
  
-   <span data-ttu-id="55633-218"><xref:System.Xml.XmlResolver>的属性 <xref:System.Xml.XmlReader> 不用于解析对 include 和 import 元素中的命名空间或架构位置的引用。</span><span class="sxs-lookup"><span data-stu-id="55633-218">The <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.XmlReader> is not used to resolve references to namespaces or schema locations in include and import elements.</span></span> <span data-ttu-id="55633-219">相反， <xref:System.Xml.XmlResolver> 使用的属性 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-219">Instead, the <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.Schema.XmlSchemaSet> is used.</span></span>  
  
-   <span data-ttu-id="55633-220">的 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 方法 <xref:System.Xml.Schema.XmlSchemaSet> 能够使用架构中定义的目标命名空间，而不需要在调用方法时将目标命名空间指定为参数 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-220">The <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="55633-221">如果将 `null` 或指定 <xref:System.String.Empty?displayProperty=nameWithType> 为方法，将 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 指示 <xref:System.Xml.Schema.XmlSchemaSet> 使用架构中定义的目标命名空间。</span><span class="sxs-lookup"><span data-stu-id="55633-221">Specifying `null` or <xref:System.String.Empty?displayProperty=nameWithType> to the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema.</span></span> <span data-ttu-id="55633-222">有关此行为的示例，请参见 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="55633-222">For an example of this behavior, see the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
 <span data-ttu-id="55633-223">此方法的其余功能与方法的功能相同 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-223">The remaining functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55633-224">下面的代码示例将包含在中的、包含的目标命名空间的 books.xml 架构添加 <xref:System.Xml.XmlTextReader> `http://www.contoso.com/books` 到中 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-224">The following code example adds the books.xsd schema contained in the <xref:System.Xml.XmlTextReader> with a target namespace of `http://www.contoso.com/books` to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", New XmlTextReader("books.xsd")  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", new XmlTextReader("books.xsd");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="55633-225">该架构无效。</span><span class="sxs-lookup"><span data-stu-id="55633-225">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55633-226">作为参数传递的 <see cref="T:System.Xml.XmlReader" /> 对象为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55633-226">The <see cref="T:System.Xml.XmlReader" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompilationSettings">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilationSettings As XmlSchemaCompilationSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaCompilationSettings ^ CompilationSettings { System::Xml::Schema::XmlSchemaCompilationSettings ^ get(); void set(System::Xml::Schema::XmlSchemaCompilationSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompilationSettings : System.Xml.Schema.XmlSchemaCompilationSettings with get, set" Usage="System.Xml.Schema.XmlSchemaSet.CompilationSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCompilationSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55633-227">获取或设置 <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="55633-227">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> for the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="55633-228"><see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="55633-228">The <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> for the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span> <span data-ttu-id="55633-229">默认为 <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 属性设置为 <see langword="true" /> 的 <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="55633-229">The default is an <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> instance with the <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> property set to <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-230"><xref:System.Xml.Schema.XmlSchemaCompilationSettings>类为指定了唯一粒子归属 (UPA) 验证选项 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-230">The <xref:System.Xml.Schema.XmlSchemaCompilationSettings> class specifies Unique Particle Attribution (UPA) validation options for the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-231">有关启用 UPA 验证检查的详细信息，请参阅 <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="55633-231">For more information about enabling UPA validation checks, see the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public void Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Sub Compile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Compile();" />
      <MemberSignature Language="F#" Value="member this.Compile : unit -&gt; unit" Usage="xmlSchemaSet.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55633-232">将添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD) 架构编译成一个逻辑架构。</span><span class="sxs-lookup"><span data-stu-id="55633-232">Compiles the XML Schema definition language (XSD) schemas added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into one logical schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-233">当需要验证并且 <xref:System.Xml.Schema.XmlSchemaSet> 以前未编译时（例如，当 <xref:System.Xml.Schema.XmlSchemaSet> 用作 <xref:System.Xml.XmlReader> 在对象的属性中创建对象的输入时），将自动调用此方法 <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> <xref:System.Xml.XmlReaderSettings> 。</span><span class="sxs-lookup"><span data-stu-id="55633-233">This method is called automatically when validation is needed and the <xref:System.Xml.Schema.XmlSchemaSet> has not been previously compiled - for example, when an <xref:System.Xml.Schema.XmlSchemaSet> is used as an input to create an <xref:System.Xml.XmlReader> object in the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property of an <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="55633-234">如果已 <xref:System.Xml.Schema.XmlSchemaSet> 处于已编译状态，此方法将不会重新编译架构。</span><span class="sxs-lookup"><span data-stu-id="55633-234">If the <xref:System.Xml.Schema.XmlSchemaSet> is already in the compiled state, this method will not recompile the schemas.</span></span> <span data-ttu-id="55633-235">如果此方法成功执行，则将 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 属性设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="55633-235">If this method executes successfully, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="55633-236">之前由编译的架构 <xref:System.Xml.Schema.XmlSchemaSet> 不会重新编译。</span><span class="sxs-lookup"><span data-stu-id="55633-236">Schemas that have been previously compiled by an <xref:System.Xml.Schema.XmlSchemaSet> are not recompiled.</span></span> <span data-ttu-id="55633-237">但是，使用的方法编译的架构 <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> <xref:System.Xml.Schema.XmlSchema> 将被重新编译。</span><span class="sxs-lookup"><span data-stu-id="55633-237">However, schemas that were compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method of the <xref:System.Xml.Schema.XmlSchema> will be recompiled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55633-238"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>如果在将架构添加到之后更改了架构 (或它的其中一个包含/导入) ，则需要调用方法 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-238">You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-239"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>根据 W3C XML 架构的规则，方法将检查架构的结构有效性。</span><span class="sxs-lookup"><span data-stu-id="55633-239">The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema.</span></span> <span data-ttu-id="55633-240">但是，它不会执行完全验证检查。</span><span class="sxs-lookup"><span data-stu-id="55633-240">However, it will not perform a full validation check.</span></span> <span data-ttu-id="55633-241">它还将解析对内部和外部架构组件的引用。</span><span class="sxs-lookup"><span data-stu-id="55633-241">It will also resolve references to internal and external schema components.</span></span> <span data-ttu-id="55633-242">已成功检索的任何导入或包含的架构也会添加到中 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-242">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-243">导入的架构将作为单独的对象添加， <xref:System.Xml.Schema.XmlSchema> 同时包含的架构将成为包括在内的部分 <xref:System.Xml.Schema.XmlSchema> 。</span><span class="sxs-lookup"><span data-stu-id="55633-243">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span> <span data-ttu-id="55633-244">如果对重新处理的调用成功，则将 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 属性设置为 false。</span><span class="sxs-lookup"><span data-stu-id="55633-244">If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.</span></span>  
  
   
  
## Examples  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Compile()  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Compile();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="55633-245">当验证和编译 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的架构时发生错误。</span><span class="sxs-lookup"><span data-stu-id="55633-245">An error occurred when validating and compiling the schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55633-246">指示 XML 架构定义语言 (XSD) 架构是否位于 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="55633-246">Indicates whether an XML Schema definition language (XSD) schema is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string targetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (targetNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ targetNamespace);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="xmlSchemaSet.Contains targetNamespace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="55633-247">架构 <paramref name="targetNamespace" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="55633-247">The schema <paramref name="targetNamespace" /> property.</span></span></param>
        <summary><span data-ttu-id="55633-248">指示具有指定目标命名空间 URI 的 XML 架构定义语言 (XSD) 架构是否位于 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="55633-248">Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="55633-249">如果具有指定目标命名空间 URI 的架构位于 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55633-249"><see langword="true" /> if a schema with the specified target namespace URI is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-250">间接添加到中的架构 <xref:System.Xml.Schema.XmlSchemaSet> 由方法检测到 <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> ，例如导入的架构。</span><span class="sxs-lookup"><span data-stu-id="55633-250">Schemas that are indirectly added to the <xref:System.Xml.Schema.XmlSchemaSet> are detected by the <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> method; for example, imported schemas.</span></span> <span data-ttu-id="55633-251">因此，如果命名空间的架构 `http://www.contoso.com/retail` `http://www.contoso.com/books` 已添加到，则会将命名空间的架构添加到 <xref:System.Xml.Schema.XmlSchemaSet> ，并将 <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> `http://www.contoso.com/books` 作为参数调用，它将返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="55633-251">As a result, if a schema for the `http://www.contoso.com/retail` namespace which imports a schema for the `http://www.contoso.com/books` namespace is added to the <xref:System.Xml.Schema.XmlSchemaSet>, calling <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> with `http://www.contoso.com/books` as a parameter, it returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (schema As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Xml.Schema.XmlSchema -&gt; bool" Usage="xmlSchemaSet.Contains schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="55633-252"><see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-252">The <see cref="T:System.Xml.Schema.XmlSchema" /> object.</span></span></param>
        <summary><span data-ttu-id="55633-253">指示指定的 XML 架构定义语言 (XSD) <see cref="T:System.Xml.Schema.XmlSchema" /> 对象是否位于 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="55633-253">Indicates whether the specified XML Schema definition language (XSD) <see cref="T:System.Xml.Schema.XmlSchema" /> object is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="55633-254">如果 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象在 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55633-254"><see langword="true" /> if the <see cref="T:System.Xml.Schema.XmlSchema" /> object is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55633-255">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55633-255">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.Schema.XmlSchema[] schemas, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.Schema.XmlSchema[] schemas, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (schemas As XmlSchema(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::Schema::XmlSchema ^&gt; ^ schemas, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Xml.Schema.XmlSchema[] * int -&gt; unit" Usage="xmlSchemaSet.CopyTo (schemas, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchema[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="55633-256">要向其复制对象的数组。</span><span class="sxs-lookup"><span data-stu-id="55633-256">The array to copy the objects to.</span></span></param>
        <param name="index"><span data-ttu-id="55633-257">数组中开始复制处的索引。</span><span class="sxs-lookup"><span data-stu-id="55633-257">The index in the array where copying will begin.</span></span></param>
        <summary><span data-ttu-id="55633-258">将 <see cref="T:System.Xml.Schema.XmlSchema" /> 中的所有 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象复制到起始位置为给定索引的给定数组中。</span><span class="sxs-lookup"><span data-stu-id="55633-258">Copies all the <see cref="T:System.Xml.Schema.XmlSchema" /> objects from the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to the given array, starting at the given index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="55633-259">下面的示例将 <xref:System.Xml.Schema.XmlSchema> 中的所有对象复制 <xref:System.Xml.Schema.XmlSchemaSet> 到对象的数组中 <xref:System.Xml.Schema.XmlSchema> 。</span><span class="sxs-lookup"><span data-stu-id="55633-259">The following example copies all the <xref:System.Xml.Schema.XmlSchema> objects in the <xref:System.Xml.Schema.XmlSchemaSet> to an array of <xref:System.Xml.Schema.XmlSchema> objects.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schemas(schemaSet.Count) As XmlSchema  
schemaSet.CopyTo(schemas, 0)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
XmlSchema[] schemas = new XmlSchema[schemaSet.Count];  
schemaSet.CopyTo(schemas, 0);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Xml.Schema.XmlSchemaSet.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55633-260">获取 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中逻辑 XML 架构定义语言 (XSD) 架构的数量。</span><span class="sxs-lookup"><span data-stu-id="55633-260">Gets the number of logical XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="55633-261"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的逻辑架构数。</span><span class="sxs-lookup"><span data-stu-id="55633-261">The number of logical schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-262">如果中有两个命名空间的架构 `http://www.contoso.com` <xref:System.Xml.Schema.XmlSchemaSet> ，则 <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> 属性将返回1，因为架构被视为用于验证目的的单个逻辑架构。</span><span class="sxs-lookup"><span data-stu-id="55633-262">If there are two schemas for the namespace `http://www.contoso.com` in the <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> property would return 1 because the schemas are treated as a single logical schema for validation purposes.</span></span> <span data-ttu-id="55633-263">但是，如果命名空间的架构 `http://www.contoso.com/retail` 导入了 `http://www.contoso.com/books` 命名空间的架构，则该属性的值将 <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> 为2。</span><span class="sxs-lookup"><span data-stu-id="55633-263">However, if a schema for the namespace `http://www.contoso.com/retail` imported a schema for the `http://www.contoso.com/books` namespace, the value of the <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> property would be 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalAttributes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalAttributes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAttributes : System.Xml.Schema.XmlSchemaObjectTable" Usage="System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55633-264">获取 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 架构定义语言 (XSD) 架构的所有全局特性。</span><span class="sxs-lookup"><span data-stu-id="55633-264">Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="55633-265">属性特性的集合。</span><span class="sxs-lookup"><span data-stu-id="55633-265">The collection of global attributes.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="GlobalElements">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalElements As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalElements { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalElements : System.Xml.Schema.XmlSchemaObjectTable" Usage="System.Xml.Schema.XmlSchemaSet.GlobalElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55633-266">获取 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 架构定义语言 (XSD) 架构的所有全局元素。</span><span class="sxs-lookup"><span data-stu-id="55633-266">Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="55633-267">全局元素的集合。</span><span class="sxs-lookup"><span data-stu-id="55633-267">The collection of global elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="GlobalTypes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalTypes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalTypes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalTypes : System.Xml.Schema.XmlSchemaObjectTable" Usage="System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55633-268">获取 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 架构定义语言 (XSD) 架构的所有全局简单和复杂类型。</span><span class="sxs-lookup"><span data-stu-id="55633-268">Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="55633-269">全局简单和复杂类型的集合。</span><span class="sxs-lookup"><span data-stu-id="55633-269">The collection of global simple and complex types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-270"><xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A>属性始终返回表示 `xs:anyType` 复杂类型的类型。</span><span class="sxs-lookup"><span data-stu-id="55633-270">The <xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A> property always returns a type that represents the `xs:anyType` complex type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="IsCompiled">
      <MemberSignature Language="C#" Value="public bool IsCompiled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompiled" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.IsCompiled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompiled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompiled : bool" Usage="System.Xml.Schema.XmlSchemaSet.IsCompiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55633-271">获取一个值指示 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的 XML 架构定义语言 (XSD) 架构是否已编译的值。</span><span class="sxs-lookup"><span data-stu-id="55633-271">Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> have been compiled.</span></span></summary>
        <value><span data-ttu-id="55633-272">如果 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的架构自上次在 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中添加或移除以来已被编译，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55633-272"><see langword="true" /> if the schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> have been compiled since the last time a schema was added or removed from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-273">如果架构在 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 中编辑，<xref:System.Xml.Schema.XmlSchemaSet> 属性不受影响。</span><span class="sxs-lookup"><span data-stu-id="55633-273">The <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is not affected if schemas are edited while in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-274">不跟踪对 <xref:System.Xml.Schema.XmlSchemaSet> 中各个架构的更新。</span><span class="sxs-lookup"><span data-stu-id="55633-274">Updates of the individual schemas in the <xref:System.Xml.Schema.XmlSchemaSet> are not tracked.</span></span> <span data-ttu-id="55633-275">因此，只要 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 中没有添加或移除任何架构，即使 `true` 中包含的一个架构已更改，<xref:System.Xml.Schema.XmlSchemaSet> 属性也可以为 <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="55633-275">As a result, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property can be `true` even though one of the schemas contained in the <xref:System.Xml.Schema.XmlSchemaSet> has been altered, as long as no schemas were added or removed from the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55633-276">有关属性的示例 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> ，请参见 <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="55633-276">For an example of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property, see the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Schema.XmlSchemaSet.Compile" />
        <altmember cref="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.Schema.XmlSchemaSet.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55633-277">获取加载新的 XML 架构定义语言 (XSD) 架构时 <see cref="T:System.Xml.XmlNameTable" /> 使用的默认 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="55633-277">Gets the default <see cref="T:System.Xml.XmlNameTable" /> used by the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> when loading new XML Schema definition language (XSD) schemas.</span></span></summary>
        <value><span data-ttu-id="55633-278">原子化字符串对象表。</span><span class="sxs-lookup"><span data-stu-id="55633-278">A table of atomized string objects.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema? Remove (System.Xml.Schema.XmlSchema schema);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Remove(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Remove(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Xml.Schema.XmlSchema -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Remove schema" />
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Remove (System.Xml.Schema.XmlSchema schema);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="55633-279">要从 <see cref="T:System.Xml.Schema.XmlSchema" /> 中移除的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-279">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to remove from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="55633-280">从 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 移除指定的 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="55633-280">Removes the specified XML Schema definition language (XSD) schema from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="55633-281">从 <see cref="T:System.Xml.Schema.XmlSchema" /> 中移除的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象，或如果在 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中未找到该架构，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55633-281">The <see cref="T:System.Xml.Schema.XmlSchema" /> object removed from the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> or <see langword="null" /> if the schema was not found in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-282">从中移除架构会 <xref:System.Xml.Schema.XmlSchemaSet> 将 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 属性设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="55633-282">Removing a schema from the <xref:System.Xml.Schema.XmlSchemaSet> sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55633-283">下面的示例演示如何将多个架构添加到 <xref:System.Xml.Schema.XmlSchemaSet> ，然后使用方法删除其中一个架构 <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-283">The following example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas using the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    If schema.TargetNamespace = "http://www.contoso.com/music" Then  
        schemaSet.Remove(schema)  
    End If  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    if (schema.TargetNamespace == "http://www.contoso.com/music")  
    {  
        schemaSet.Remove(schema);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="55633-284">此架构不是有效的架构。</span><span class="sxs-lookup"><span data-stu-id="55633-284">The schema is not a valid schema.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55633-285">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchema" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55633-285">The <see cref="T:System.Xml.Schema.XmlSchema" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRecursive">
      <MemberSignature Language="C#" Value="public bool RemoveRecursive (System.Xml.Schema.XmlSchema schemaToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveRecursive(class System.Xml.Schema.XmlSchema schemaToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRecursive (schemaToRemove As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveRecursive(System::Xml::Schema::XmlSchema ^ schemaToRemove);" />
      <MemberSignature Language="F#" Value="member this.RemoveRecursive : System.Xml.Schema.XmlSchema -&gt; bool" Usage="xmlSchemaSet.RemoveRecursive schemaToRemove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaToRemove" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schemaToRemove"><span data-ttu-id="55633-286">要从 <see cref="T:System.Xml.Schema.XmlSchema" /> 中移除的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-286">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to remove from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="55633-287">从 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中移除指定的 XML 架构定义语言 (XSD) 架构和它导入的所有架构。</span><span class="sxs-lookup"><span data-stu-id="55633-287">Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="55633-288">如果已成功移除 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象和其导入的所有内容，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="55633-288"><see langword="true" /> if the <see cref="T:System.Xml.Schema.XmlSchema" /> object and all its imports were successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-289">此 <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> 方法从中删除指定的架构及其导入的所有架构 <xref:System.Xml.Schema.XmlSchemaSet> ，前提是架构或其导入的架构没有依赖项。</span><span class="sxs-lookup"><span data-stu-id="55633-289">The <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method removes the specified schema and all the schemas it imports from the <xref:System.Xml.Schema.XmlSchemaSet>, as long as there are no dependencies on the schema or its imported schemas.</span></span> <span data-ttu-id="55633-290">如果架构中存在依赖项或在中导入的架构 <xref:System.Xml.Schema.XmlSchemaSet> ，则不会删除任何内容，并 <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="55633-290">If there are dependencies on the schema or its imported schemas in the <xref:System.Xml.Schema.XmlSchemaSet>, nothing is removed and <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> returns `false`.</span></span> <span data-ttu-id="55633-291">如果 `false` 返回了并定义了，则会将 <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> 警告发送到描述依赖项的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="55633-291">If `false` is returned and a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> is defined, a warning is sent to the event handler describing the dependencies.</span></span>  
  
 <span data-ttu-id="55633-292">如果指定的架构导入了其他架构，并且以前通过方法移除了指定的架构 <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> ，则该 <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> 方法将不会删除导入的架构并且将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="55633-292">If the specified schema imports other schemas and the specified schema was previously removed with the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method, the <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method will not remove the imported schemas and will return `false`.</span></span> <span data-ttu-id="55633-293">例如，如果 `parentSchema` imports `childSchema1` 和 `childSchema2` 以下代码将仅删除 `parentSchema` ，而不会删除导入的 `childSchema1` 和 `childSchema2` 架构：</span><span class="sxs-lookup"><span data-stu-id="55633-293">For example, if `parentSchema` imports `childSchema1` and `childSchema2` the following code will only remove `parentSchema`, but not the imported `childSchema1` and `childSchema2` schemas:</span></span>  
  
```  
XmlSchemaSet ss = new XmlSchemaSet();  
XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);  
ss.Add(xs);  
ss.Compile();  
ss.Remove(xs);  
ss.Compile();  
ss.RemoveRecursive(xs);  
ss.Compile();  
```  
  
 <span data-ttu-id="55633-294">下面的代码将删除 `parentSchema` 和导入的架构：</span><span class="sxs-lookup"><span data-stu-id="55633-294">The following code will remove the `parentSchema` and the imported schemas:</span></span>  
  
```  
XmlSchemaSet ss = new XmlSchemaSet();  
XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);  
ss.Add(xs);  
ss.Compile();  
ss.RemoveRecursive(xs);  
ss.Compile();  
```  
  
 <span data-ttu-id="55633-295">此 <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> 方法对属性的状态没有影响 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-295">The <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method has no effect on the state of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55633-296">下面的代码示例演示如何将多个架构添加到 <xref:System.Xml.Schema.XmlSchemaSet> ，然后使用方法删除其中一个架构及其导入的所有架构 <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-296">The following code example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas and all the schemas it imports using the <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    If schema.TargetNamespace = "http://www.contoso.com/music" Then  
        schemaSet.RemoveRecursive(schema)  
    End If  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    if (schema.TargetNamespace == "http://www.contoso.com/music")  
    {  
        schemaSet.RemoveRecursive(schema);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55633-297">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchema" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55633-297">The <see cref="T:System.Xml.Schema.XmlSchema" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reprocess">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Reprocess (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Reprocess(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Reprocess (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Reprocess(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Reprocess : System.Xml.Schema.XmlSchema -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Reprocess schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="55633-298">要重新处理的架构。</span><span class="sxs-lookup"><span data-stu-id="55633-298">The schema to reprocess.</span></span></param>
        <summary><span data-ttu-id="55633-299">重新处理已经存在于 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="55633-299">Reprocesses an XML Schema definition language (XSD) schema that already exists in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="55633-300">如果架构有效，则为 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-300">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is a valid schema.</span></span> <span data-ttu-id="55633-301">如果架构无效且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，则将返回 <see langword="null" /> 并引发适当的验证事件。</span><span class="sxs-lookup"><span data-stu-id="55633-301">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="55633-302">否则会引发 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="55633-302">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-303">重新处理架构将在调用方法时执行对架构执行的所有预处理步骤 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-303">Reprocessing a schema performs all the preprocessing steps performed on a schema when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="55633-304">如果对的调用 <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 成功，则将 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 属性设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="55633-304">If the call to <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="55633-305">重新处理方法应在已修改中的架构之后 <xref:System.Xml.Schema.XmlSchemaSet> 、 <xref:System.Xml.Schema.XmlSchemaSet> 执行编译后使用。</span><span class="sxs-lookup"><span data-stu-id="55633-305">The Reprocess method should be used after a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified, after the <xref:System.Xml.Schema.XmlSchemaSet> has performed compilation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55633-306"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>如果在将架构添加到之后更改了架构 (或它的其中一个包含/导入) ，则需要调用方法 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-306">You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-307"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>根据 W3C XML 架构的规则，方法将检查架构的结构有效性。</span><span class="sxs-lookup"><span data-stu-id="55633-307">The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema.</span></span> <span data-ttu-id="55633-308">但是，它不会执行完全验证检查。</span><span class="sxs-lookup"><span data-stu-id="55633-308">However, it will not perform a full validation check.</span></span> <span data-ttu-id="55633-309">它还将解析对内部和外部架构组件的引用。</span><span class="sxs-lookup"><span data-stu-id="55633-309">It will also resolve references to internal and external schema components.</span></span> <span data-ttu-id="55633-310">已成功检索的任何导入或包含的架构也会添加到中 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-310">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-311">导入的架构将作为单独的对象添加， <xref:System.Xml.Schema.XmlSchema> 同时包含的架构将成为包括在内的部分 <xref:System.Xml.Schema.XmlSchema> 。</span><span class="sxs-lookup"><span data-stu-id="55633-311">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span> <span data-ttu-id="55633-312">如果对重新处理的调用成功，则将 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 属性设置为 false。</span><span class="sxs-lookup"><span data-stu-id="55633-312">If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55633-313">下面的示例演示如何重新处理添加到中的架构 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-313">The following example illustrates reprocessing a schema added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="55633-314"><xref:System.Xml.Schema.XmlSchemaSet>使用 <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> 方法编译并修改添加到的架构后 <xref:System.Xml.Schema.XmlSchemaSet> ， <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 即使中的架构已修改，属性也将设置为 `true` <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-314">After the <xref:System.Xml.Schema.XmlSchemaSet> is compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method, and the schema added to the <xref:System.Xml.Schema.XmlSchemaSet> is modified, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property will be set to `true`, even though a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified.</span></span> <span data-ttu-id="55633-315">调用 <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 方法将执行方法执行的所有预处理 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> ，并将属性设置 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="55633-315">Calling the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method performs all the preprocessing performed by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method and sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
Dim schema As XmlSchema = schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Compile()  
  
Dim element As XmlSchemaElement = New XmlSchemaElement()  
schema.Items.Add(element)  
element.Name = "book"  
element.SchemaTypeName = New XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema")  
  
schemaSet.Reprocess(schema)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
XmlSchema schema = schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Compile();  
  
XmlSchemaElement element = new XmlSchemaElement();  
schema.Items.Add(element);  
element.Name = "book";  
element.SchemaTypeName = new XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema");  
  
schemaSet.Reprocess(schema);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="55633-316">该架构无效。</span><span class="sxs-lookup"><span data-stu-id="55633-316">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55633-317">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55633-317">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="55633-318">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象并不存在于 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中。</span><span class="sxs-lookup"><span data-stu-id="55633-318">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter does not already exist in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schemas">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55633-319">返回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中 XML 架构定义语言 (XSD) 架构的集合。</span><span class="sxs-lookup"><span data-stu-id="55633-319">Returns a collection of XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Schemas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection Schemas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Function Schemas () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ Schemas();" />
      <MemberSignature Language="F#" Value="member this.Schemas : unit -&gt; System.Collections.ICollection" Usage="xmlSchemaSet.Schemas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55633-320">返回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 架构定义语言 (XSD) 架构的集合。</span><span class="sxs-lookup"><span data-stu-id="55633-320">Returns a collection of all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="55633-321"><see cref="T:System.Collections.ICollection" /> 对象，它包含已添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的所有架构。</span><span class="sxs-lookup"><span data-stu-id="55633-321">An <see cref="T:System.Collections.ICollection" /> object containing all the schemas that have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span> <span data-ttu-id="55633-322">如果没有架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，则返回空的 <see cref="T:System.Collections.ICollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-322">If no schemas have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />, an empty <see cref="T:System.Collections.ICollection" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-323">此方法返回间接添加到中的架构， <xref:System.Xml.Schema.XmlSchemaSet> 因为它们已被导入。</span><span class="sxs-lookup"><span data-stu-id="55633-323">This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55633-324"><xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>方法等效于已 <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A> 过时的方法 <xref:System.Xml.Schema.XmlSchemaCollection> 。</span><span class="sxs-lookup"><span data-stu-id="55633-324">The <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55633-325">下面的示例演示如何循环访问中的所有架构 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-325">The following example illustrates how to iterate over all the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    schema.Write(Console.Out)  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    schema.Write(Console.Out);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Schemas (string? targetNamespace);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection Schemas(string targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Schemas (targetNamespace As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ Schemas(System::String ^ targetNamespace);" />
      <MemberSignature Language="F#" Value="member this.Schemas : string -&gt; System.Collections.ICollection" Usage="xmlSchemaSet.Schemas targetNamespace" />
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Schemas (string targetNamespace);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="55633-326">架构 <paramref name="targetNamespace" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="55633-326">The schema <paramref name="targetNamespace" /> property.</span></span></param>
        <summary><span data-ttu-id="55633-327">返回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中属于给定命名空间的所有 XML 架构定义语言 (XSD) 架构的集合。</span><span class="sxs-lookup"><span data-stu-id="55633-327">Returns a collection of all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that belong to the given namespace.</span></span></summary>
        <returns><span data-ttu-id="55633-328"><see cref="T:System.Collections.ICollection" /> 对象，它包含已添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的中的属于给定命名空间的所有架构。</span><span class="sxs-lookup"><span data-stu-id="55633-328">An <see cref="T:System.Collections.ICollection" /> object containing all the schemas that have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that belong to the given namespace.</span></span> <span data-ttu-id="55633-329">如果没有架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，则返回空的 <see cref="T:System.Collections.ICollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55633-329">If no schemas have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />, an empty <see cref="T:System.Collections.ICollection" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-330">如果 `targetNamespace` 参数为 `null` 或 <xref:System.String.Empty> ，则返回不含命名空间的所有架构。</span><span class="sxs-lookup"><span data-stu-id="55633-330">If the `targetNamespace` parameter is `null` or <xref:System.String.Empty>, then all schemas without a namespace are returned.</span></span>  
  
 <span data-ttu-id="55633-331">此方法返回间接添加到中的架构， <xref:System.Xml.Schema.XmlSchemaSet> 因为它们已被导入。</span><span class="sxs-lookup"><span data-stu-id="55633-331">This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55633-332"><xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>方法等效于已 <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A> 过时的方法 <xref:System.Xml.Schema.XmlSchemaCollection> 。</span><span class="sxs-lookup"><span data-stu-id="55633-332">The <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55633-333">下面的示例演示如何循环访问 `http://www.contoso.com/books` 中命名空间中的所有架构 <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-333">The following example illustrates how to iterate over all the schemas in the `http://www.contoso.com/books` namespace in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas("http://www.contoso.com/books")  
  
    schema.Write(Console.Out)  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))  
{  
    schema.Write(Console.Out);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55633-334">指定一个事件处理程序，用于接收有关 XML 架构定义语言 (XSD) 架构验证错误的信息。</span><span class="sxs-lookup"><span data-stu-id="55633-334">Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-335">设置一个事件处理程序，用于在调用的或方法时接收有关架构验证错误的信息 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> <xref:System.Xml.Schema.XmlSchemaSet> 。</span><span class="sxs-lookup"><span data-stu-id="55633-335">Sets an event handler for receiving information about schema validation errors when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> methods of the <xref:System.Xml.Schema.XmlSchemaSet> are called.</span></span>  
  
 <span data-ttu-id="55633-336">如果未定义事件处理程序，则会 <xref:System.Xml.Schema.XmlSchemaException> 在为的任何验证错误上引发 <xref:System.Xml.Schema.XmlSeverityType> <xref:System.Xml.Schema.XmlSeverityType.Error> 。</span><span class="sxs-lookup"><span data-stu-id="55633-336">If an event handler is not defined, an <xref:System.Xml.Schema.XmlSchemaException> is thrown on any validation errors where the <xref:System.Xml.Schema.XmlSeverityType> is <xref:System.Xml.Schema.XmlSeverityType.Error>.</span></span> <span data-ttu-id="55633-337">对于具有的的验证错误，不会引发异常 <xref:System.Xml.Schema.XmlSeverityType> <xref:System.Xml.Schema.XmlSeverityType.Warning> 。</span><span class="sxs-lookup"><span data-stu-id="55633-337">Exceptions are not thrown for validation errors with an <xref:System.Xml.Schema.XmlSeverityType> of <xref:System.Xml.Schema.XmlSeverityType.Warning>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55633-338">下面的代码示例演示如何添加 <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> 以便在针对架构验证 XML 文档时捕获错误和警告。</span><span class="sxs-lookup"><span data-stu-id="55633-338">The following code example illustrates adding a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> to capture errors and warnings when validating an XML document against a schema.</span></span>  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 <span data-ttu-id="55633-339">该示例使用 books.xml 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="55633-339">The example uses the books.xml file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 <span data-ttu-id="55633-340">该示例使用 books.xml 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="55633-340">The example uses the books.xsd file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver? XmlResolver { set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Schema.XmlSchemaSet.XmlResolver" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55633-341">设置用于解析在架构的包含和导入元素中引用的命名空间或位置的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="55633-341">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve namespaces or locations referenced in include and import elements of a schema.</span></span></summary>
        <value><span data-ttu-id="55633-342"><see cref="T:System.Xml.XmlResolver" />，用于解析在架构的包含和导入元素中引用的命名空间或位置。</span><span class="sxs-lookup"><span data-stu-id="55633-342">The <see cref="T:System.Xml.XmlResolver" /> used to resolve namespaces or locations referenced in include and import elements of a schema.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55633-343">当 <xref:System.Xml.XmlResolver> <xref:System.Xml.Schema.XmlSchemaSet> 使用或方法添加架构时，将用于解析在架构的包含和导入元素中引用的命名空间或位置 <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> 。</span><span class="sxs-lookup"><span data-stu-id="55633-343">The <xref:System.Xml.XmlResolver> of an <xref:System.Xml.Schema.XmlSchemaSet> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="55633-344">在架构的包含、导入和重新定义元素中引用的外部命名空间或位置是根据包含或导入这些元素的架构的基本 URI 解析的。</span><span class="sxs-lookup"><span data-stu-id="55633-344">External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</span></span> <span data-ttu-id="55633-345">例如，如果包含或导入架构的基本 URI 为空或 `null` ，则相对于当前目录解析外部位置。</span><span class="sxs-lookup"><span data-stu-id="55633-345">For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory.</span></span> <span data-ttu-id="55633-346"><xref:System.Xml.XmlUrlResolver>默认情况下，类用于解析外部架构。</span><span class="sxs-lookup"><span data-stu-id="55633-346">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="55633-347">若要对架构的 include、import 和 redefine 元素禁用解析，请将 <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A> 属性设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="55633-347">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlResolver" />
      </Docs>
    </Member>
  </Members>
</Type>
