<Type Name="XmlSchemaValidator" FullName="System.Xml.Schema.XmlSchemaValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dda2683be8467139128523fcf684c1d3f1fa33c4" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86605213" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlSchemaValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaValidator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaValidator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaValidator sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaValidator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f99f0-101">表示一个 XML 架构定义语言 (XSD) 架构验证引擎。</span><span class="sxs-lookup"><span data-stu-id="f99f0-101">Represents an XML Schema Definition Language (XSD) Schema validation engine.</span></span> <span data-ttu-id="f99f0-102">不能继承 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 类。</span><span class="sxs-lookup"><span data-stu-id="f99f0-102">The <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> - <span data-ttu-id="f99f0-103">不要使用来自未知或不受信任的源或位置的架构。</span><span class="sxs-lookup"><span data-stu-id="f99f0-103">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="f99f0-104">这样做会破坏代码的安全性。</span><span class="sxs-lookup"><span data-stu-id="f99f0-104">Doing so will compromise the security of your code.</span></span>
> - <span data-ttu-id="f99f0-105">XML 架构 (包括内联架构) 在本质上容易受到拒绝服务攻击;不要在不受信任的情况下接受它们。</span><span class="sxs-lookup"><span data-stu-id="f99f0-105">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>
> - <span data-ttu-id="f99f0-106">架构验证错误消息和异常可能会向架构文件公开有关内容模型或 URI 路径的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="f99f0-106">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="f99f0-107">请注意不要向不受信任的调用方公开此信息。</span><span class="sxs-lookup"><span data-stu-id="f99f0-107">Be careful not to expose this information to untrusted callers.</span></span>
  
 <span data-ttu-id="f99f0-108"><xref:System.Xml.Schema.XmlSchemaValidator> 类提供了一种高效、高性能的机制，通过基于推送的方式针对 XML 架构验证 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="f99f0-108">The <xref:System.Xml.Schema.XmlSchemaValidator> class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner.</span></span> <span data-ttu-id="f99f0-109">例如，使用 <xref:System.Xml.Schema.XmlSchemaValidator> 类可以就地验证 XML 信息集，而不必将其序列化为 XML 文档，然后使用验证 XML 读取器重新分析该文档。</span><span class="sxs-lookup"><span data-stu-id="f99f0-109">For example, the <xref:System.Xml.Schema.XmlSchemaValidator> class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader.</span></span> <span data-ttu-id="f99f0-110"><xref:System.Xml.Schema.XmlSchemaValidator>类还可用于通过自定义 XML 数据源生成验证引擎，或者用于生成验证 XML 编写器的方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-110">The <xref:System.Xml.Schema.XmlSchemaValidator> class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.</span></span>  
  
 <span data-ttu-id="f99f0-111">有关类的详细信息 <xref:System.Xml.Schema.XmlSchemaValidator> ，请参阅 [XmlSchemaValidator 推送验证](/dotnet/standard/data/xml/xmlschemavalidator-push-based-validation) 主题。</span><span class="sxs-lookup"><span data-stu-id="f99f0-111">For more information about the <xref:System.Xml.Schema.XmlSchemaValidator> class, see the [XmlSchemaValidator Push-Based Validation](/dotnet/standard/data/xml/xmlschemavalidator-push-based-validation) topic.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="f99f0-112"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>对象的和 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 验证标志 <xref:System.Xml.Schema.XmlSchemaValidator> 未设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-112">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default.</span></span> <span data-ttu-id="f99f0-113">此外， <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> 默认情况下，对象的属性 <xref:System.Xml.Schema.XmlSchemaValidator> 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-113">Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default.</span></span> <span data-ttu-id="f99f0-114">因此，默认情况下，在包含、导入或重新定义元素中引用的外部架构不会得到解析。</span><span class="sxs-lookup"><span data-stu-id="f99f0-114">As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</span></span>   
  
## Examples  
 <span data-ttu-id="f99f0-115">下面的示例 `contosoBooks.xml` 根据架构对文件进行验证 `contosoBooks.xsd` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-115">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="f99f0-116">该示例使用 <xref:System.Xml.Serialization.XmlSerializer> 类反序列化 `contosoBooks.xml` 文件，并将节点的值传递给 <xref:System.Xml.Schema.XmlSchemaValidator> 类的方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-116">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="f99f0-117">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-117">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="f99f0-118">该示例还使用 `contosoBooks.xsd` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-118">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="https://msdn.microsoft.com/library/911d4460-dd91-4958-85b2-2ca3299f9ec6"><span data-ttu-id="f99f0-119">XmlSchemaValidator 基于推送的验证</span><span class="sxs-lookup"><span data-stu-id="f99f0-119">XmlSchemaValidator Push-Based Validation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable, class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.IXmlNamespaceResolver namespaceResolver, valuetype System.Xml.Schema.XmlSchemaValidationFlags validationFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable, schemas As XmlSchemaSet, namespaceResolver As IXmlNamespaceResolver, validationFlags As XmlSchemaValidationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaValidator(System::Xml::XmlNameTable ^ nameTable, System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::IXmlNamespaceResolver ^ namespaceResolver, System::Xml::Schema::XmlSchemaValidationFlags validationFlags);" />
      <MemberSignature Language="F#" Value="new System.Xml.Schema.XmlSchemaValidator : System.Xml.XmlNameTable * System.Xml.Schema.XmlSchemaSet * System.Xml.IXmlNamespaceResolver * System.Xml.Schema.XmlSchemaValidationFlags -&gt; System.Xml.Schema.XmlSchemaValidator" Usage="new System.Xml.Schema.XmlSchemaValidator (nameTable, schemas, namespaceResolver, validationFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
        <Parameter Name="validationFlags" Type="System.Xml.Schema.XmlSchemaValidationFlags" />
      </Parameters>
      <Docs>
        <param name="nameTable"><span data-ttu-id="f99f0-120">一个 <see cref="T:System.Xml.XmlNameTable" /> 对象，其中包含作为原子化字符串的元素名和特性名。</span><span class="sxs-lookup"><span data-stu-id="f99f0-120">An <see cref="T:System.Xml.XmlNameTable" /> object containing element and attribute names as atomized strings.</span></span></param>
        <param name="schemas"><span data-ttu-id="f99f0-121">一个 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象，包含用于验证的 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="f99f0-121">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing the XML Schema Definition Language (XSD) schemas used for validation.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="f99f0-122">一个 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，用于解析在验证过程中遇到的命名空间。</span><span class="sxs-lookup"><span data-stu-id="f99f0-122">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used for resolving namespaces encountered during validation.</span></span></param>
        <param name="validationFlags"><span data-ttu-id="f99f0-123">一个 <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> 值，指定架构验证选项。</span><span class="sxs-lookup"><span data-stu-id="f99f0-123">An <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> value specifying schema validation options.</span></span></param>
        <summary><span data-ttu-id="f99f0-124">初始化 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f99f0-124">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-125">下面是使用构造函数时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-125">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructor.</span></span>  
  
-   <span data-ttu-id="f99f0-126"><xref:System.Xml.Schema.XmlSchemaSet> <xref:System.Xml.Schema.XmlSchemaSet> <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 设置或验证选项时，将参数的内容复制到内部对象 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-126">The contents of the <xref:System.Xml.Schema.XmlSchemaSet> parameter are copied into an internal <xref:System.Xml.Schema.XmlSchemaSet> object when the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> or the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation options are set.</span></span> <span data-ttu-id="f99f0-127">因此， <xref:System.Xml.Schema.XmlSchemaSet> 在验证过程中对输入对象的更改不会影响验证的结果。</span><span class="sxs-lookup"><span data-stu-id="f99f0-127">As a result, changes to the input <xref:System.Xml.Schema.XmlSchemaSet> object during validation do not affect the outcome of validation.</span></span>  
  
-   <span data-ttu-id="f99f0-128">如果 <xref:System.Xml.Schema.XmlSchemaSet> 指定的参数未编译， <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> 则调用其方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-128">If the <xref:System.Xml.Schema.XmlSchemaSet> parameter specified is not compiled, its <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method is called.</span></span>  
  
-   <span data-ttu-id="f99f0-129"><xref:System.Xml.IXmlNamespaceResolver>参数对于验证类型尤其重要 `xs:QName` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-129">The <xref:System.Xml.IXmlNamespaceResolver> parameter is especially important for validating `xs:QName` types.</span></span> <span data-ttu-id="f99f0-130"><xref:System.Xml.Schema.XmlSchemaValidator>类不从对象复制范围内的命名空间， <xref:System.Xml.IXmlNamespaceResolver> 而是保存对它的引用。</span><span class="sxs-lookup"><span data-stu-id="f99f0-130">The <xref:System.Xml.Schema.XmlSchemaValidator> class does not copy the in-scope namespaces from the <xref:System.Xml.IXmlNamespaceResolver> object but instead holds a reference to it.</span></span> <span data-ttu-id="f99f0-131">这允许在验证过程中将新的命名空间添加到 <xref:System.Xml.IXmlNamespaceResolver> 对象。</span><span class="sxs-lookup"><span data-stu-id="f99f0-131">This allows new namespaces to be added to the <xref:System.Xml.IXmlNamespaceResolver> object during the validation process.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f99f0-132"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>对象的和 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 验证标志 <xref:System.Xml.Schema.XmlSchemaValidator> 未设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-132">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default.</span></span> <span data-ttu-id="f99f0-133">此外， <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> 默认情况下，对象的属性 <xref:System.Xml.Schema.XmlSchemaValidator> 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-133">Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default.</span></span> <span data-ttu-id="f99f0-134">因此，默认情况下，在包含、导入或重新定义元素中引用的外部架构不会得到解析。</span><span class="sxs-lookup"><span data-stu-id="f99f0-134">As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99f0-135">有关构造函数的示例 <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> ，请参阅 <xref:System.Xml.Schema.XmlSchemaValidator> 类参考主题。</span><span class="sxs-lookup"><span data-stu-id="f99f0-135">For an example of the <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructor, see the <xref:System.Xml.Schema.XmlSchemaValidator> class reference topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f99f0-136">指定的一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-136">One or more of the parameters specified are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="f99f0-137">在 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 参数中编译架构时发生的错误。</span><span class="sxs-lookup"><span data-stu-id="f99f0-137">An error occurred while compiling schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> parameter.</span></span></exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaSet" />
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="AddSchema">
      <MemberSignature Language="C#" Value="public void AddSchema (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSchema(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSchema (schema As XmlSchema)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSchema(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.AddSchema : System.Xml.Schema.XmlSchema -&gt; unit" Usage="xmlSchemaValidator.AddSchema schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="f99f0-138">一个 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象，要将其添加到用于验证的架构集。</span><span class="sxs-lookup"><span data-stu-id="f99f0-138">An <see cref="T:System.Xml.Schema.XmlSchema" /> object to add to the set of schemas used for validation.</span></span></param>
        <summary><span data-ttu-id="f99f0-139">将一个 XML 架构定义语言 (XSD) 架构添加到用于验证的架构集。</span><span class="sxs-lookup"><span data-stu-id="f99f0-139">Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-140">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-140">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-141"><xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A>方法可用于模拟在要验证的 xml 文档中遇到内联 xml 架构的效果。</span><span class="sxs-lookup"><span data-stu-id="f99f0-141">The <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.</span></span>  
  
-   <span data-ttu-id="f99f0-142"><xref:System.Xml.Schema.XmlSchema> 参数的目标命名空间无法与 <xref:System.Xml.Schema.XmlSchemaValidator> 对象已遇到的任何元素或属性的目标命名空间匹配。</span><span class="sxs-lookup"><span data-stu-id="f99f0-142">The target namespace of the <xref:System.Xml.Schema.XmlSchema> parameter cannot match that of any element or attribute already encountered by the <xref:System.Xml.Schema.XmlSchemaValidator> object.</span></span>  
  
-   <span data-ttu-id="f99f0-143">如果 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 未设置验证选项，则 <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> 方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="f99f0-143">If the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> validation option is not set, the <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f99f0-144">指定的 <see cref="T:System.Xml.Schema.XmlSchema" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-144">The <see cref="T:System.Xml.Schema.XmlSchema" /> parameter specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-145"><see cref="T:System.Xml.Schema.XmlSchema" /> 参数的目标命名空间与 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 对象已经遇到的任何元素或特性的目标命名空间匹配。</span><span class="sxs-lookup"><span data-stu-id="f99f0-145">The target namespace of the <see cref="T:System.Xml.Schema.XmlSchema" /> parameter matches that of any element or attribute already encountered by the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object.</span></span></exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="f99f0-146"><see cref="T:System.Xml.Schema.XmlSchema" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="f99f0-146">The <see cref="T:System.Xml.Schema.XmlSchema" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
        <altmember cref="T:System.Xml.Schema.XmlSchema" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="EndValidation">
      <MemberSignature Language="C#" Value="public void EndValidation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndValidation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndValidation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndValidation();" />
      <MemberSignature Language="F#" Value="member this.EndValidation : unit -&gt; unit" Usage="xmlSchemaValidator.EndValidation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f99f0-147">结束验证，并检查整个 XML 文档的标识约束。</span><span class="sxs-lookup"><span data-stu-id="f99f0-147">Ends validation and checks identity constraints for the entire XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-148"><xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>如果设置了验证选项，则方法将结束验证，并检查整个 XML 文档的标识约束 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-148">The <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A> method ends validation and checks identity constraints for the entire XML document if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> validation option is set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-149">在 XML 文档中发现一个标识约束错误。</span><span class="sxs-lookup"><span data-stu-id="f99f0-149">An identity constraint error was found in the XML document.</span></span></exception>
        <altmember cref="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetExpectedAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpectedAttributes () As XmlSchemaAttribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Xml::Schema::XmlSchemaAttribute ^&gt; ^ GetExpectedAttributes();" />
      <MemberSignature Language="F#" Value="member this.GetExpectedAttributes : unit -&gt; System.Xml.Schema.XmlSchemaAttribute[]" Usage="xmlSchemaValidator.GetExpectedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaAttribute[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f99f0-150">返回当前元素上下文的期望属性。</span><span class="sxs-lookup"><span data-stu-id="f99f0-150">Returns the expected attributes for the current element context.</span></span></summary>
        <returns><span data-ttu-id="f99f0-151">如果没有期望特性，则为一个 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 对象数组或一个空数组。</span><span class="sxs-lookup"><span data-stu-id="f99f0-151">An array of <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> objects or an empty array if there are no expected attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-152">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-152">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-153">如果在 <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> 方法之后立即调用方法，则会 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> 返回 XML 文档中可能出现的所有属性。</span><span class="sxs-lookup"><span data-stu-id="f99f0-153">If the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> method is called immediately after the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> method, all the attributes that could appear in the XML document are returned.</span></span>  
  
-   <span data-ttu-id="f99f0-154">如果在 <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> 一次或多次调用方法之后调用方法 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> ，则返回当前元素尚未验证的特性。</span><span class="sxs-lookup"><span data-stu-id="f99f0-154">If the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> method is called after one or more calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method, the attributes that haven't yet been validated for the current element are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpectedParticles">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpectedParticles () As XmlSchemaParticle()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Xml::Schema::XmlSchemaParticle ^&gt; ^ GetExpectedParticles();" />
      <MemberSignature Language="F#" Value="member this.GetExpectedParticles : unit -&gt; System.Xml.Schema.XmlSchemaParticle[]" Usage="xmlSchemaValidator.GetExpectedParticles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaParticle[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f99f0-155">返回当前元素上下文中的期望微粒。</span><span class="sxs-lookup"><span data-stu-id="f99f0-155">Returns the expected particles in the current element context.</span></span></summary>
        <returns><span data-ttu-id="f99f0-156">如果没有期望粒子，则为一个 <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> 对象数组或一个空数组。</span><span class="sxs-lookup"><span data-stu-id="f99f0-156">An array of <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> objects or an empty array if there are no expected particles.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-157"><xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> 方法可以返回的有效粒子是 <xref:System.Xml.Schema.XmlSchemaElement> 和 <xref:System.Xml.Schema.XmlSchemaAny> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="f99f0-157">The valid particles that can be returned by the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> method are instances of the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaAny> classes.</span></span>  
  
 <span data-ttu-id="f99f0-158">如果内容模型的复合器是 `xs:sequence`，则只返回序列中的下一个粒子。</span><span class="sxs-lookup"><span data-stu-id="f99f0-158">When the compositor for the content model is an `xs:sequence`, only the next particle in the sequence is returned.</span></span> <span data-ttu-id="f99f0-159">如果内容模型的复合器是 `xs:all` 或 `xs:choice`，则返回当前元素上下文中可能出现的所有有效粒子。</span><span class="sxs-lookup"><span data-stu-id="f99f0-159">If the compositor for the content model is an `xs:all` or an `xs:choice`, then all valid particles that could follow in the current element context are returned.</span></span>  
  
 <span data-ttu-id="f99f0-160">例如，在下面的 XML 架构定义语言 (XSD) 架构和 XML 文档中，在验证 `book` 元素之后，`book` 元素是当前的元素上下文。</span><span class="sxs-lookup"><span data-stu-id="f99f0-160">For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the `book` element, the `book` element is the current element context.</span></span> <span data-ttu-id="f99f0-161"><xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> 方法返回一个数组，包含表示 <xref:System.Xml.Schema.XmlSchemaElement> 元素的单个 `title` 对象。</span><span class="sxs-lookup"><span data-stu-id="f99f0-161">The <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> method returns an array containing a single <xref:System.Xml.Schema.XmlSchemaElement> object representing the `title` element.</span></span> <span data-ttu-id="f99f0-162">如果验证上下文是 `title` 元素，<xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> 方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="f99f0-162">When the validation context is the `title` element, the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> method returns an empty array.</span></span> <span data-ttu-id="f99f0-163">如果 <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> 方法在验证了 `title` 元素之后但是在验证 `description` 元素之前调用，将返回一个数组，包含表示 <xref:System.Xml.Schema.XmlSchemaElement> 元素的单个 `description` 对象。</span><span class="sxs-lookup"><span data-stu-id="f99f0-163">If the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> method is called after the `title` element has been validated but before the `description` element has been validated, it returns an array containing a single <xref:System.Xml.Schema.XmlSchemaElement> object representing the `description` element.</span></span> <span data-ttu-id="f99f0-164">如果 <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> 方法在验证了 `description` 元素之后调用，将返回一个数组，包含表示通配符的单个 <xref:System.Xml.Schema.XmlSchemaAny> 对象。</span><span class="sxs-lookup"><span data-stu-id="f99f0-164">If the <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> method is called after the `description` element has been validated then it returns an array containing a single <xref:System.Xml.Schema.XmlSchemaAny> object representing the wildcard.</span></span>  
  
```vb  
Dim reader As XmlReader =  XmlReader.Create("input.xml")   
  
Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()   
schemaSet.Add(Nothing, "schema.xsd")  
Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)   
  
Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)  
validator.Initialize()  
  
validator.ValidateElement("book", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
  
validator.ValidateElement("title", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
validator.ValidateEndElement(Nothing)  
  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
  
validator.ValidateElement("description", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateEndElement(Nothing)  
  
For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()  
    Console.WriteLine(particle.GetType())  
Next  
  
validator.ValidateElement("namespace", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateEndElement(Nothing)  
  
validator.ValidateEndElement(Nothing)  
```  
  
```csharp  
XmlReader reader = XmlReader.Create("input.xml");  
  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "schema.xsd");  
XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);  
  
XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  
validator.Initialize();  
  
validator.ValidateElement("book", "", null);  
  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
  
validator.ValidateElement("title", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
validator.ValidateEndElement(null);  
  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
  
validator.ValidateElement("description", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateEndElement(null);  
  
foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())  
{  
    Console.WriteLine(particle.GetType());  
}  
  
validator.ValidateElement("namespace", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateEndElement(null);  
  
validator.ValidateEndElement(null);  
```  
  
 <span data-ttu-id="f99f0-165">该示例使用以下 XML 作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-165">The example takes the following XML as input.</span></span>  
  
 `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">`  
  
 `<xs:element name="book">`  
  
 `<xs:complexType>`  
  
 `<xs:sequence>`  
  
 `<xs:element name="title" type="xs:string" />`  
  
 `<xs:element name="description" type="xs:string" />`  
  
 `<xs:any processContents ="lax"/>`  
  
 `</xs:sequence>`  
  
 `</xs:complexType>`  
  
 `</xs:element>`  
  
 `</xs:schema>`  
  
 <span data-ttu-id="f99f0-166">该示例使用以下 XSD 架构作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-166">The example takes the following XSD schema as input.</span></span>  
  
 `<book>`  
  
 `<title>My Book</title>`  
  
 `<description>My Book's Description</description>`  
  
 `<namespace>System.Xml.Schema</namespace>`  
  
 `</book>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaParticle" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaElement" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAny" />
      </Docs>
    </Member>
    <Member MemberName="GetUnspecifiedDefaultAttributes">
      <MemberSignature Language="C#" Value="public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetUnspecifiedDefaultAttributes(class System.Collections.ArrayList defaultAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetUnspecifiedDefaultAttributes (defaultAttributes As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetUnspecifiedDefaultAttributes(System::Collections::ArrayList ^ defaultAttributes);" />
      <MemberSignature Language="F#" Value="member this.GetUnspecifiedDefaultAttributes : System.Collections.ArrayList -&gt; unit" Usage="xmlSchemaValidator.GetUnspecifiedDefaultAttributes defaultAttributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultAttributes" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="defaultAttributes"><span data-ttu-id="f99f0-167">一个 <see cref="T:System.Collections.ArrayList" />，要使用以下任何特性的 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 对象对其进行填充，这些特性在元素上下文的验证过程中尚未遇到。</span><span class="sxs-lookup"><span data-stu-id="f99f0-167">An <see cref="T:System.Collections.ArrayList" /> to populate with <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> objects for any attributes not yet encountered during validation in the element context.</span></span></param>
        <summary><span data-ttu-id="f99f0-168">验证默认特性的标识约束，并使用以下任何特性的 <see cref="T:System.Collections.ArrayList" /> 对象填充指定的 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />，这些特性的默认值以前在元素上下文中从未使用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 方法进行过验证。</span><span class="sxs-lookup"><span data-stu-id="f99f0-168">Validates identity constraints on the default attributes and populates the <see cref="T:System.Collections.ArrayList" /> specified with <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> objects for any attributes with default values that have not been previously validated using the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> method in the element context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-169">在 <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> 验证当前元素的所有属性和方法后，必须调用方法 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-169">The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.</span></span> <span data-ttu-id="f99f0-170"><xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> 方法应用于确定要插入正在验证的 XML 文档的默认属性。</span><span class="sxs-lookup"><span data-stu-id="f99f0-170">The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method should be used to determine what default attributes are to be inserted into the XML document being validated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f99f0-171">初始化 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 对象的状态。</span><span class="sxs-lookup"><span data-stu-id="f99f0-171">Initializes the state of the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberSignature Language="F#" Value="member this.Initialize : unit -&gt; unit" Usage="xmlSchemaValidator.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f99f0-172">初始化 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 对象的状态。</span><span class="sxs-lookup"><span data-stu-id="f99f0-172">Initializes the state of the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-173"><xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>仅当在构造 <xref:System.Xml.Schema.XmlSchemaValidator> 对象之后或调用之后立即调用，此方法才有效 <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-173">The <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method is only valid if called immediately after the construction of an <xref:System.Xml.Schema.XmlSchemaValidator> object or after a call to <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99f0-174">下面的示例 `contosoBooks.xml` 根据架构对文件进行验证 `contosoBooks.xsd` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-174">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="f99f0-175">该示例使用 <xref:System.Xml.Serialization.XmlSerializer> 类反序列化 `contosoBooks.xml` 文件，并将节点的值传递给 <xref:System.Xml.Schema.XmlSchemaValidator> 类的方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-175">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="f99f0-176">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-176">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="f99f0-177">该示例还使用 `contosoBooks.xsd` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-177">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-178">在构造一个 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> 对象之后或在仅调用 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 之后马上就调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> 方法是有效的。</span><span class="sxs-lookup"><span data-stu-id="f99f0-178">Calling the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> method is valid immediately after the construction of an <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object or after a call to <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> only.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(class System.Xml.Schema.XmlSchemaObject partialValidationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (partialValidationType As XmlSchemaObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Xml::Schema::XmlSchemaObject ^ partialValidationType);" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.Xml.Schema.XmlSchemaObject -&gt; unit" Usage="xmlSchemaValidator.Initialize partialValidationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialValidationType" Type="System.Xml.Schema.XmlSchemaObject" />
      </Parameters>
      <Docs>
        <param name="partialValidationType"><span data-ttu-id="f99f0-179">一个 <see cref="T:System.Xml.Schema.XmlSchemaElement" />、<see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 或 <see cref="T:System.Xml.Schema.XmlSchemaType" /> 对象，用于初始化进行部分验证的 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 对象的验证上下文。</span><span class="sxs-lookup"><span data-stu-id="f99f0-179">An <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, or <see cref="T:System.Xml.Schema.XmlSchemaType" /> object used to initialize the validation context of the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object for partial validation.</span></span></param>
        <summary><span data-ttu-id="f99f0-180">使用为部分验证指定的 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 初始化 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 对象的状态。</span><span class="sxs-lookup"><span data-stu-id="f99f0-180">Initializes the state of the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object using the <see cref="T:System.Xml.Schema.XmlSchemaObject" /> specified for partial validation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-181">使用 <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> 作为参数的 <xref:System.Xml.Schema.XmlSchemaObject> 方法将 <xref:System.Xml.Schema.XmlSchemaValidator> 对象初始化为起始状态，以进行部分验证。</span><span class="sxs-lookup"><span data-stu-id="f99f0-181">The <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method that takes an <xref:System.Xml.Schema.XmlSchemaObject> as a parameter initializes an <xref:System.Xml.Schema.XmlSchemaValidator> object to its starting state for partial validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99f0-182">在以下示例中，使用 <xref:System.Xml.Schema.XmlSchemaObject> 方法对 <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> 进行初始化，以进行部分验证。</span><span class="sxs-lookup"><span data-stu-id="f99f0-182">In the following example, an <xref:System.Xml.Schema.XmlSchemaObject> is initialized for partial validation using the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method.</span></span> <span data-ttu-id="f99f0-183">在 `orderNumber` 对象的 <xref:System.Xml.XmlQualifiedName> 属性返回的 <xref:System.Xml.Schema.XmlSchemaObjectTable> 集合中，通过其中的 <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> 选择架构元素，来传递 <xref:System.Xml.Schema.XmlSchemaSet> 架构元素。</span><span class="sxs-lookup"><span data-stu-id="f99f0-183">The `orderNumber` schema element is passed by selecting the schema element by <xref:System.Xml.XmlQualifiedName> in the <xref:System.Xml.Schema.XmlSchemaObjectTable> collection returned by the <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span> <span data-ttu-id="f99f0-184">然后，<xref:System.Xml.Schema.XmlSchemaValidator> 对象验证这个特定的元素。</span><span class="sxs-lookup"><span data-stu-id="f99f0-184">The <xref:System.Xml.Schema.XmlSchemaValidator> object then validates this specific element.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add(Nothing, "schema.xsd")  
schemaSet.Compile()  
Dim nameTable As NameTable = New NameTable()  
Dim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
  
Dim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  
validator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName("orderNumber")))  
  
validator.ValidateElement("orderNumber", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateText("123")  
validator.ValidateEndElement(Nothing)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "schema.xsd");  
schemaSet.Compile();  
NameTable nameTable = new NameTable();  
XmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  
  
XmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  
validator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName("orderNumber")]);  
  
validator.ValidateElement("orderNumber", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateText("123");  
validator.ValidateEndElement(null);  
```  
  
 <span data-ttu-id="f99f0-185">该示例使用以下 XML 架构作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-185">The example takes the following XML schema as input.</span></span>  
  
 `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">`  
  
 `<xs:element name="orderNumber" type="xs:int" />`  
  
 `</xs:schema>`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-186">在构造一个 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> 对象之后或在仅调用 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 之后马上就调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> 方法是有效的。</span><span class="sxs-lookup"><span data-stu-id="f99f0-186">Calling the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> method is valid immediately after the construction of an <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object or after a call to <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> only.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f99f0-187"><see cref="T:System.Xml.Schema.XmlSchemaObject" /> 参数不是一个 <see cref="T:System.Xml.Schema.XmlSchemaElement" />、<see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 或 <see cref="T:System.Xml.Schema.XmlSchemaType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f99f0-187">The <see cref="T:System.Xml.Schema.XmlSchemaObject" /> parameter is not an <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, or <see cref="T:System.Xml.Schema.XmlSchemaType" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f99f0-188"><see cref="T:System.Xml.Schema.XmlSchemaObject" /> 参数不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-188">The <see cref="T:System.Xml.Schema.XmlSchemaObject" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaObject" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaElement" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaType" />
      </Docs>
    </Member>
    <Member MemberName="LineInfoProvider">
      <MemberSignature Language="C#" Value="public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.IXmlLineInfo LineInfoProvider" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property LineInfoProvider As IXmlLineInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::IXmlLineInfo ^ LineInfoProvider { System::Xml::IXmlLineInfo ^ get(); void set(System::Xml::IXmlLineInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LineInfoProvider : System.Xml.IXmlLineInfo with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.LineInfoProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.IXmlLineInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f99f0-189">获取或设置所验证的 XML 节点的行号信息。</span><span class="sxs-lookup"><span data-stu-id="f99f0-189">Gets or sets the line number information for the XML node being validated.</span></span></summary>
        <value><span data-ttu-id="f99f0-190">一个 <see cref="T:System.Xml.IXmlLineInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f99f0-190">An <see cref="T:System.Xml.IXmlLineInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="f99f0-191">在验证过程中引发的任何异常都将报告行信息 <xref:System.Xml.Schema.XmlSchemaValidationException> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-191">Line information is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process.</span></span>  
  
-   <span data-ttu-id="f99f0-192"><xref:System.Xml.IXmlLineInfo>属性返回的默认对象 <xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A> 为 <xref:System.Xml.IXmlLineInfo.LineNumber%2A> 和属性返回 0 <xref:System.Xml.IXmlLineInfo.LinePosition%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-192">The default <xref:System.Xml.IXmlLineInfo> object returned by the <xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A> property returns 0 for the <xref:System.Xml.IXmlLineInfo.LineNumber%2A> and <xref:System.Xml.IXmlLineInfo.LinePosition%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.IXmlLineInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <Member MemberName="SkipToEndElement">
      <MemberSignature Language="C#" Value="public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToEndElement (schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.SkipToEndElement : System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.SkipToEndElement schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo"><span data-ttu-id="f99f0-193">一个 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 对象，其属性在成功跳过当前元素内容时设置。</span><span class="sxs-lookup"><span data-stu-id="f99f0-193">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set if the current element content is successfully skipped.</span></span> <span data-ttu-id="f99f0-194">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-194">This parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f99f0-195">跳过当前元素内容的验证并准备 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 对象以验证父元素的上下文中的内容。</span><span class="sxs-lookup"><span data-stu-id="f99f0-195">Skips validation of the current element content and prepares the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object to validate content in the parent element's context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-196">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-196">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-197"><xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A>方法跳过当前元素内容的验证并准备 <xref:System.Xml.Schema.XmlSchemaValidator> 对象以验证父元素上下文中的内容; 它等效于跳过当前元素的所有子级的验证，然后调用 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-197">The <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> method skips validation of the current element content and prepares the <xref:System.Xml.Schema.XmlSchemaValidator> object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-198">如果成功跳过当前元素内容，则 <xref:System.Xml.Schema.XmlSchemaInfo> 对象的 (（如果指定) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 属性设置为） <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-198">If the current element content is successfully skipped, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f99f0-199">不会在跳过的内容上报告验证错误。</span><span class="sxs-lookup"><span data-stu-id="f99f0-199">No validation errors are reported on skipped content.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-200">未按正确的顺序调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-200">The <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> method was not called in the correct sequence.</span></span> <span data-ttu-id="f99f0-201">例如，调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> 之后又调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-201">For example, calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceUri : Uri with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.SourceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f99f0-202">获取或设置所验证 XML 节点的源 URI。</span><span class="sxs-lookup"><span data-stu-id="f99f0-202">Gets or sets the source URI for the XML node being validated.</span></span></summary>
        <value><span data-ttu-id="f99f0-203">一个 <see cref="T:System.Uri" /> 对象，表示所验证 XML 节点的源 URI；默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-203">A <see cref="T:System.Uri" /> object representing the source URI for the XML node being validated; the default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="f99f0-204">在验证过程中引发的任何异常都将报告源 URI <xref:System.Xml.Schema.XmlSchemaValidationException> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-204">The source URI is reported by any <xref:System.Xml.Schema.XmlSchemaValidationException> thrown during the validation process.</span></span>  
  
-   <span data-ttu-id="f99f0-205">如果 <xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A> 未设置该属性，则 XML 文档的文件名 <xref:System.String.Empty> 在验证错误消息中。</span><span class="sxs-lookup"><span data-stu-id="f99f0-205">If the <xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A> property is not set, the file name for the XML document is <xref:System.String.Empty> in validation error messages.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f99f0-206">验证当前元素上下文中的属性。</span><span class="sxs-lookup"><span data-stu-id="f99f0-206">Validates the attribute in the current element context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateAttribute">
      <MemberSignature Language="C#" Value="public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateAttribute(string localName, string namespaceUri, string attributeValue, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAttribute (localName As String, namespaceUri As String, attributeValue As String, schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateAttribute(System::String ^ localName, System::String ^ namespaceUri, System::String ^ attributeValue, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateAttribute : string * string * string * System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateAttribute (localName, namespaceUri, attributeValue, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f99f0-207">要验证的属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="f99f0-207">The local name of the attribute to validate.</span></span></param>
        <param name="namespaceUri"><span data-ttu-id="f99f0-208">要验证的属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="f99f0-208">The namespace URI of the attribute to validate.</span></span></param>
        <param name="attributeValue"><span data-ttu-id="f99f0-209">要验证的属性的值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-209">The value of the attribute to validate.</span></span></param>
        <param name="schemaInfo"><span data-ttu-id="f99f0-210">一个 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 对象，其属性是在成功验证特性之后设置的。</span><span class="sxs-lookup"><span data-stu-id="f99f0-210">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the attribute.</span></span> <span data-ttu-id="f99f0-211">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-211">This parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f99f0-212">验证当前元素上下文中的属性名称、命名空间 URI 和值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-212">Validates the attribute name, namespace URI, and value in the current element context.</span></span></summary>
        <returns><span data-ttu-id="f99f0-213">验证的属性的值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-213">The validated attribute's value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-214">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-214">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-215">在 <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> 验证当前元素的所有属性和方法后，必须调用方法 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-215">The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-216">如果 <xref:System.Xml.Schema.XmlSchemaAttribute> 对象已传递给 <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> 方法，则方法会 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 根据对象验证该特性 <xref:System.Xml.Schema.XmlSchemaAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-216">If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object.</span></span>  
  
-   <span data-ttu-id="f99f0-217">如果已成功验证当前元素上下文中的属性，则该 <xref:System.Xml.Schema.XmlSchemaInfo> 对象的 (（如果指定 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A> ）) 、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> 、 <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> 和 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 属性都设置为验证的结果。</span><span class="sxs-lookup"><span data-stu-id="f99f0-217">If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99f0-218">下面的示例 `contosoBooks.xml` 根据架构对文件进行验证 `contosoBooks.xsd` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-218">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="f99f0-219">该示例使用 <xref:System.Xml.Serialization.XmlSerializer> 类反序列化 `contosoBooks.xml` 文件，并将节点的值传递给 <xref:System.Xml.Schema.XmlSchemaValidator> 类的方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-219">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="f99f0-220">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-220">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="f99f0-221">该示例还使用 `contosoBooks.xsd` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-221">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-222">此特性在当前元素上下文中无效。</span><span class="sxs-lookup"><span data-stu-id="f99f0-222">The attribute is not valid in the current element context.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-223">未按正确的顺序调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-223">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> method was not called in the correct sequence.</span></span> <span data-ttu-id="f99f0-224">例如，调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 之后又调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-224">For example, calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f99f0-225">指定的一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-225">One or more of the parameters specified are <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateAttribute">
      <MemberSignature Language="C#" Value="public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateAttribute(string localName, string namespaceUri, class System.Xml.Schema.XmlValueGetter attributeValue, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAttribute (localName As String, namespaceUri As String, attributeValue As XmlValueGetter, schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateAttribute(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlValueGetter ^ attributeValue, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateAttribute : string * string * System.Xml.Schema.XmlValueGetter * System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateAttribute (localName, namespaceUri, attributeValue, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.Xml.Schema.XmlValueGetter" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f99f0-226">要验证的属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="f99f0-226">The local name of the attribute to validate.</span></span></param>
        <param name="namespaceUri"><span data-ttu-id="f99f0-227">要验证的属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="f99f0-227">The namespace URI of the attribute to validate.</span></span></param>
        <param name="attributeValue"><span data-ttu-id="f99f0-228">一个 <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />，用于将属性的值作为与该属性的 XML 架构定义语言 (XSD) 类型兼容的公共语言运行时 (CLR) 类型进行传递。</span><span class="sxs-lookup"><span data-stu-id="f99f0-228">An <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" /> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</span></span></param>
        <param name="schemaInfo"><span data-ttu-id="f99f0-229">一个 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 对象，其属性是在成功验证特性之后设置的。</span><span class="sxs-lookup"><span data-stu-id="f99f0-229">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the attribute.</span></span> <span data-ttu-id="f99f0-230">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-230">This parameter and can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f99f0-231">验证当前元素上下文中的属性名称、命名空间 URI 和值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-231">Validates the attribute name, namespace URI, and value in the current element context.</span></span></summary>
        <returns><span data-ttu-id="f99f0-232">验证的属性的值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-232">The validated attribute's value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-233">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-233">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-234">在 <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> 验证当前元素的所有属性和方法后，必须调用方法 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-234">The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method must be called after validating all the attributes for the current element with the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-235">如果 <xref:System.Xml.Schema.XmlSchemaAttribute> 对象已传递给 <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> 方法，则方法会 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 根据对象验证该特性 <xref:System.Xml.Schema.XmlSchemaAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-235">If an <xref:System.Xml.Schema.XmlSchemaAttribute> object was passed to the <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> method, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> method validates the attribute against the <xref:System.Xml.Schema.XmlSchemaAttribute> object.</span></span>  
  
-   <span data-ttu-id="f99f0-236">如果已成功验证当前元素上下文中的属性，则该 <xref:System.Xml.Schema.XmlSchemaInfo> 对象的 (（如果指定 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A> ）) 、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> 、 <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> 和 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 属性都设置为验证的结果。</span><span class="sxs-lookup"><span data-stu-id="f99f0-236">If the attribute is successfully validated in the current element context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99f0-237">下面的示例 `contosoBooks.xml` 根据架构对文件进行验证 `contosoBooks.xsd` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-237">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="f99f0-238">该示例使用 <xref:System.Xml.Serialization.XmlSerializer> 类反序列化 `contosoBooks.xml` 文件，并将节点的值传递给 <xref:System.Xml.Schema.XmlSchemaValidator> 类的方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-238">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="f99f0-239">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-239">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="f99f0-240">该示例还使用 `contosoBooks.xsd` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-240">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-241">此特性在当前元素上下文中无效。</span><span class="sxs-lookup"><span data-stu-id="f99f0-241">The attribute is not valid in the current element context.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-242">未按正确的顺序调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-242">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> method was not called in the correct sequence.</span></span> <span data-ttu-id="f99f0-243">例如，调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 之后又调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-243">For example, calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f99f0-244">指定的一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-244">One or more of the parameters specified are <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f99f0-245">验证当前上下文中的元素。</span><span class="sxs-lookup"><span data-stu-id="f99f0-245">Validates the element in the current context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateElement">
      <MemberSignature Language="C#" Value="public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateElement(string localName, string namespaceUri, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateElement (localName As String, namespaceUri As String, schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateElement(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateElement : string * string * System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.ValidateElement (localName, namespaceUri, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f99f0-246">要验证的元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="f99f0-246">The local name of the element to validate.</span></span></param>
        <param name="namespaceUri"><span data-ttu-id="f99f0-247">要验证的元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="f99f0-247">The namespace URI of the element to validate.</span></span></param>
        <param name="schemaInfo"><span data-ttu-id="f99f0-248"><see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 对象，它的属性在成功验证元素的名称时设置。</span><span class="sxs-lookup"><span data-stu-id="f99f0-248">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the element's name.</span></span> <span data-ttu-id="f99f0-249">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-249">This parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f99f0-250">验证当前上下文中的元素。</span><span class="sxs-lookup"><span data-stu-id="f99f0-250">Validates the element in the current context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-251">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-251">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-252">如果元素名称在当前上下文中已成功验证，则该 <xref:System.Xml.Schema.XmlSchemaInfo> 对象的 (（如果指定）) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A> 、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> 、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A> 和 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 属性都设置为验证的结果。</span><span class="sxs-lookup"><span data-stu-id="f99f0-252">If the element name is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
-   <span data-ttu-id="f99f0-253">如果元素名称或其任何特性对于当前上下文无效，则将 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 属性设置为 <xref:System.Xml.Schema.XmlSchemaValidity.Invalid> ; 否则， <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 属性设置为 <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-253">If the element name or any of its attributes are invalid the current context, the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>; otherwise the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99f0-254">下面的示例 `contosoBooks.xml` 根据架构对文件进行验证 `contosoBooks.xsd` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-254">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="f99f0-255">该示例使用 <xref:System.Xml.Serialization.XmlSerializer> 类反序列化 `contosoBooks.xml` 文件，并将节点的值传递给 <xref:System.Xml.Schema.XmlSchemaValidator> 类的方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-255">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="f99f0-256">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-256">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="f99f0-257">该示例还使用 `contosoBooks.xsd` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-257">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-258">此元素的名称在当前上下文中无效。</span><span class="sxs-lookup"><span data-stu-id="f99f0-258">The element's name is not valid in the current context.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-259">未按正确的顺序调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-259">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> method was not called in the correct sequence.</span></span> <span data-ttu-id="f99f0-260">例如，在调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> 之后调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-260">For example, the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <Member MemberName="ValidateElement">
      <MemberSignature Language="C#" Value="public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateElement(string localName, string namespaceUri, class System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateElement (localName As String, namespaceUri As String, schemaInfo As XmlSchemaInfo, xsiType As String, xsiNil As String, xsiSchemaLocation As String, xsiNoNamespaceSchemaLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateElement(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo, System::String ^ xsiType, System::String ^ xsiNil, System::String ^ xsiSchemaLocation, System::String ^ xsiNoNamespaceSchemaLocation);" />
      <MemberSignature Language="F#" Value="member this.ValidateElement : string * string * System.Xml.Schema.XmlSchemaInfo * string * string * string * string -&gt; unit" Usage="xmlSchemaValidator.ValidateElement (localName, namespaceUri, schemaInfo, xsiType, xsiNil, xsiSchemaLocation, xsiNoNamespaceSchemaLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
        <Parameter Name="xsiType" Type="System.String" />
        <Parameter Name="xsiNil" Type="System.String" />
        <Parameter Name="xsiSchemaLocation" Type="System.String" />
        <Parameter Name="xsiNoNamespaceSchemaLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f99f0-261">要验证的元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="f99f0-261">The local name of the element to validate.</span></span></param>
        <param name="namespaceUri"><span data-ttu-id="f99f0-262">要验证的元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="f99f0-262">The namespace URI of the element to validate.</span></span></param>
        <param name="schemaInfo"><span data-ttu-id="f99f0-263"><see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 对象，它的属性在成功验证元素的名称时设置。</span><span class="sxs-lookup"><span data-stu-id="f99f0-263">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the element's name.</span></span> <span data-ttu-id="f99f0-264">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-264">This parameter can be <see langword="null" />.</span></span></param>
        <param name="xsiType"><span data-ttu-id="f99f0-265">元素的 <c>xsi:Type</c> 属性值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-265">The <c>xsi:Type</c> attribute value of the element.</span></span> <span data-ttu-id="f99f0-266">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-266">This parameter can be <see langword="null" />.</span></span></param>
        <param name="xsiNil"><span data-ttu-id="f99f0-267">元素的 <c>xsi:Nil</c> 属性值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-267">The <c>xsi:Nil</c> attribute value of the element.</span></span> <span data-ttu-id="f99f0-268">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-268">This parameter can be <see langword="null" />.</span></span></param>
        <param name="xsiSchemaLocation"><span data-ttu-id="f99f0-269">元素的 <c>xsi:SchemaLocation</c> 属性值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-269">The <c>xsi:SchemaLocation</c> attribute value of the element.</span></span> <span data-ttu-id="f99f0-270">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-270">This parameter can be <see langword="null" />.</span></span></param>
        <param name="xsiNoNamespaceSchemaLocation"><span data-ttu-id="f99f0-271">元素的 <c>xsi:NoNamespaceSchemaLocation</c> 属性值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-271">The <c>xsi:NoNamespaceSchemaLocation</c> attribute value of the element.</span></span> <span data-ttu-id="f99f0-272">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-272">This parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f99f0-273">验证当前上下文中指定了具有 <c>xsi:Type</c>、<c>xsi:Nil</c>、<c>xsi:SchemaLocation</c> 和 <c>xsi:NoNamespaceSchemaLocation</c> 属性值的元素。</span><span class="sxs-lookup"><span data-stu-id="f99f0-273">Validates the element in the current context with the <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c>, and <c>xsi:NoNamespaceSchemaLocation</c> attribute values specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-274">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-274">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-275">如果元素名称在当前上下文中已成功验证，则该 <xref:System.Xml.Schema.XmlSchemaInfo> 对象的 (（如果指定）) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A> 、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> 、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A> 和 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 属性都设置为验证的结果。</span><span class="sxs-lookup"><span data-stu-id="f99f0-275">If the element name is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
-   <span data-ttu-id="f99f0-276">如果元素名称或它的任何属性在当前上下文中无效，则将 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 属性设置为 <xref:System.Xml.Schema.XmlSchemaValidity.Invalid> ; 否则， <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 属性设置为 <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-276">If the element name or any of its attributes are invalid in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>; otherwise the <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.</span></span>  
  
-   <span data-ttu-id="f99f0-277">如果 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 值未作为参数传递给 <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> 构造函数，则 `xsi:SchemaLocation` `xsi:NoNamespaceSchemaLocation` 忽略特性值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-277">If the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> value was not passed as a parameter to the <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructor, `xsi:SchemaLocation` and `xsi:NoNamespaceSchemaLocation` attribute values are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-278">此元素的名称在当前上下文中无效。</span><span class="sxs-lookup"><span data-stu-id="f99f0-278">The element's name is not valid in the current context.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-279">未按正确的顺序调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-279">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> method was not called in the correct sequence.</span></span> <span data-ttu-id="f99f0-280">例如，在调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> 之后调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-280">For example, the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEndElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f99f0-281">对于具有简单内容的元素，根据其数据类型验证元素的文本内容是否有效；对于具有复杂内容的元素，验证当前元素的内容是否完整。</span><span class="sxs-lookup"><span data-stu-id="f99f0-281">Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEndElement">
      <MemberSignature Language="C#" Value="public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateEndElement (schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndElement : System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateEndElement schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo"><span data-ttu-id="f99f0-282">一个 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 对象，其属性是在成功验证元素之后设置的。</span><span class="sxs-lookup"><span data-stu-id="f99f0-282">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the element.</span></span> <span data-ttu-id="f99f0-283">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-283">This parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f99f0-284">对于具有简单内容的元素，根据其数据类型验证元素的文本内容是否有效；对于具有复杂内容的元素，验证当前元素的内容是否完整。</span><span class="sxs-lookup"><span data-stu-id="f99f0-284">Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</span></span></summary>
        <returns><span data-ttu-id="f99f0-285">如果元素具有简单内容，则为该元素已分析的类型化文本值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-285">The parsed, typed text value of the element if the element has simple content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-286">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-286">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-287">对于具有简单内容的元素， <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 方法根据其数据类型验证元素的文本内容是否有效，并返回已分析的类型化值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-287">For elements with simple content, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</span></span> <span data-ttu-id="f99f0-288">元素的文本内容是从上一次调用的结果中获取的 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-288">The text content of the element is obtained from the results of previous calls to <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.</span></span>  
  
-   <span data-ttu-id="f99f0-289">对于包含复杂内容的元素， <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 方法验证当前元素的内容是否完整。</span><span class="sxs-lookup"><span data-stu-id="f99f0-289">For elements with complex content, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method verifies if the content of the current element is complete.</span></span>  
  
-   <span data-ttu-id="f99f0-290">如果元素具有默认值，则从方法返回的值 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 为元素的默认值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-290">If the element has a default value, the value returned from the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is the default value for the element.</span></span>  
  
-   <span data-ttu-id="f99f0-291">如果 <xref:System.Xml.Schema.XmlSchemaValidator> 对象是以 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 值作为参数构造的，则该 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 方法将检查标识约束规则 (如果应用于该元素的任何) 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-291">If the <xref:System.Xml.Schema.XmlSchemaValidator> object was constructed with the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> value as a parameter, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method checks the identity constraint rules (if any) that apply to the element.</span></span>  
  
-   <span data-ttu-id="f99f0-292">如果在当前上下文中成功验证了该元素，则该 <xref:System.Xml.Schema.XmlSchemaInfo> 对象的 (（如果指定的) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A> 、 <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> 和属性）将 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 设置为验证的结果。</span><span class="sxs-lookup"><span data-stu-id="f99f0-292">If the element is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-293">元素的内容无效。</span><span class="sxs-lookup"><span data-stu-id="f99f0-293">The element's content is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-294">未按正确的顺序调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-294">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> method was not called in the correct sequence.</span></span> <span data-ttu-id="f99f0-295">例如，在调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> 之后调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-295">For example, if the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> method is called after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEndElement">
      <MemberSignature Language="C#" Value="public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateEndElement (schemaInfo As XmlSchemaInfo, typedValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo, System::Object ^ typedValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndElement : System.Xml.Schema.XmlSchemaInfo * obj -&gt; obj" Usage="xmlSchemaValidator.ValidateEndElement (schemaInfo, typedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
        <Parameter Name="typedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="schemaInfo"><span data-ttu-id="f99f0-296">一个 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 对象，其属性是在成功验证元素的文本内容之后设置的。</span><span class="sxs-lookup"><span data-stu-id="f99f0-296">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful validation of the text content of the element.</span></span> <span data-ttu-id="f99f0-297">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-297">This parameter can be <see langword="null" />.</span></span></param>
        <param name="typedValue"><span data-ttu-id="f99f0-298">元素中的类型化文本内容。</span><span class="sxs-lookup"><span data-stu-id="f99f0-298">The typed text content of the element.</span></span></param>
        <summary><span data-ttu-id="f99f0-299">根据指定元素的数据类型验证该元素的文本内容是否有效。</span><span class="sxs-lookup"><span data-stu-id="f99f0-299">Verifies if the text content of the element specified is valid according to its data type.</span></span></summary>
        <returns><span data-ttu-id="f99f0-300">元素的已分析的类型化简单内容。</span><span class="sxs-lookup"><span data-stu-id="f99f0-300">The parsed, typed simple content of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f99f0-301">如果要根据 `xs:key` 、 `xs:keyref` 或标识约束进行验证，请不要 `xs:unique` 使用 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="f99f0-301">If you are validating against the `xs:key`, `xs:keyref`, or `xs:unique` identity constraints, do not use the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method overload.</span></span> <span data-ttu-id="f99f0-302">改为调用 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 方法并向其传递元素的值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-302">Instead, call the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method and pass it the value of the element.</span></span> <span data-ttu-id="f99f0-303">然后调用  <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 作为参数的方法重载， <xref:System.Xml.Schema.XmlSchemaInfo> 以验证元素的文本内容根据其数据类型是否有效。</span><span class="sxs-lookup"><span data-stu-id="f99f0-303">Then call the  <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method overload, which takes <xref:System.Xml.Schema.XmlSchemaInfo> as an argument, to verify that the text content of the element is valid according to its data type.</span></span>  
  
 <span data-ttu-id="f99f0-304">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-304">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-305">对于具有简单内容的元素， <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType> 方法根据其数据类型验证元素的文本内容是否有效，并返回已分析的类型化值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-305">For elements with simple content, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</span></span> <span data-ttu-id="f99f0-306">元素的文本内容是从作为参数传递的类型化内容获取的。</span><span class="sxs-lookup"><span data-stu-id="f99f0-306">The text content of the element is obtained from the typed content passed as a parameter.</span></span>  
  
-   <span data-ttu-id="f99f0-307">如果 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 以前对方法进行了调用，则 <xref:System.InvalidOperationException> 会引发。</span><span class="sxs-lookup"><span data-stu-id="f99f0-307">If calls to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method have been previously made, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
-   <span data-ttu-id="f99f0-308">如果元素具有复杂内容，则 <xref:System.InvalidOperationException> 会引发。</span><span class="sxs-lookup"><span data-stu-id="f99f0-308">If the element has complex content an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
-   <span data-ttu-id="f99f0-309">如果 <xref:System.Xml.Schema.XmlSchemaValidator> 对象是以 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 值作为参数构造的，则该 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 方法将检查标识约束规则 (如果应用于该元素的任何) 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-309">If the <xref:System.Xml.Schema.XmlSchemaValidator> object was constructed with the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> value as a parameter, the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method checks the identity constraint rules (if any) that apply to the element.</span></span>  
  
-   <span data-ttu-id="f99f0-310">如果在当前上下文中成功验证了该元素，则该 <xref:System.Xml.Schema.XmlSchemaInfo> 对象的 (（如果指定的) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A> 、 <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> 和属性）将 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 设置为验证的结果。</span><span class="sxs-lookup"><span data-stu-id="f99f0-310">If the element is successfully validated in the current context, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, and <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> properties are set with the results of the validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99f0-311">下面的示例 `contosoBooks.xml` 根据架构对文件进行验证 `contosoBooks.xsd` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-311">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="f99f0-312">该示例使用 <xref:System.Xml.Serialization.XmlSerializer> 类反序列化 `contosoBooks.xml` 文件，并将节点的值传递给 <xref:System.Xml.Schema.XmlSchemaValidator> 类的方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-312">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="f99f0-313">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-313">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="f99f0-314">该示例还使用 `contosoBooks.xsd` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-314">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-315">元素的文本内容无效。</span><span class="sxs-lookup"><span data-stu-id="f99f0-315">The element's text content is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-316">未按正确顺序调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> 方法（例如，在调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> 之后调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> 方法），以前已经调用了 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> 方法，或者元素具有复杂内容。</span><span class="sxs-lookup"><span data-stu-id="f99f0-316">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> method was not called in the correct sequence (for example, if the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> method is called after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), calls to the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> method have been previously made, or the element has complex content.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f99f0-317">类型化文本内容参数不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-317">The typed text content parameter cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEndOfAttributes">
      <MemberSignature Language="C#" Value="public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEndOfAttributes(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEndOfAttributes (schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEndOfAttributes(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndOfAttributes : System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.ValidateEndOfAttributes schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo"><span data-ttu-id="f99f0-318">一个 <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> 对象，其属性是在成功验证元素上下文中存在所有必需特性之后设置的。</span><span class="sxs-lookup"><span data-stu-id="f99f0-318">An <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> object whose properties are set on successful verification that all the required attributes in the element context are present.</span></span> <span data-ttu-id="f99f0-319">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-319">This parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f99f0-320">验证元素上下文中所有必需的属性是否已存在，并且 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 对象是否已准备好验证元素的子内容。</span><span class="sxs-lookup"><span data-stu-id="f99f0-320">Verifies whether all the required attributes in the element context are present and prepares the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object to validate the child content of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-321">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-321">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-322"><xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>应始终在之前调用方法 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-322">The <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> method should always be called before <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A>.</span></span>  
  
-   <span data-ttu-id="f99f0-323">在 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> 继续验证元素的内容之前，必须先调用方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-323">The <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> method must be called before proceeding with validation of an element's content.</span></span>  
  
-   <span data-ttu-id="f99f0-324">如果元素上下文中存在所有必需的属性，则 <xref:System.Xml.Schema.XmlSchemaInfo> 对象的 (如果指定) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 属性设置为 <xref:System.Xml.Schema.XmlSchemaValidity.Valid> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-324">If all the required attributes in the element context are present, the <xref:System.Xml.Schema.XmlSchemaInfo> object's (if specified) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> property is set to <xref:System.Xml.Schema.XmlSchemaValidity.Valid>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99f0-325">下面的示例 `contosoBooks.xml` 根据架构对文件进行验证 `contosoBooks.xsd` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-325">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="f99f0-326">该示例使用 <xref:System.Xml.Serialization.XmlSerializer> 类反序列化 `contosoBooks.xml` 文件，并将节点的值传递给 <xref:System.Xml.Schema.XmlSchemaValidator> 类的方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-326">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="f99f0-327">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-327">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="f99f0-328">该示例还使用 `contosoBooks.xsd` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-328">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-329">找不到当前元素上下文中的一个或多个必需特性。</span><span class="sxs-lookup"><span data-stu-id="f99f0-329">One or more of the required attributes in the current element context were not found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-330">未按正确的顺序调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-330">The <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> method was not called in the correct sequence.</span></span> <span data-ttu-id="f99f0-331">例如，调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> 之后又调用 <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-331">For example, calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> after calling <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f99f0-332">指定的一个或多个参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-332">One or more of the parameters specified are <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateText">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f99f0-333">验证当前元素上下文中是否允许包含文本，并累积文本，以验证当前元素是否包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="f99f0-333">Validates whether text is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public void ValidateText (string elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateText(string elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateText (elementValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateText(System::String ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateText : string -&gt; unit" Usage="xmlSchemaValidator.ValidateText elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementValue"><span data-ttu-id="f99f0-334">一个文本 <see langword="string" />，要在当前元素上下文中对其进行验证。</span><span class="sxs-lookup"><span data-stu-id="f99f0-334">A text <see langword="string" /> to validate in the current element context.</span></span></param>
        <summary><span data-ttu-id="f99f0-335">验证当前元素上下文中是否允许指定的文本 <see langword="string" />，如果当前元素具有简单内容，则累积文本以进行验证。</span><span class="sxs-lookup"><span data-stu-id="f99f0-335">Validates whether the text <see langword="string" /> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-336">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-336">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-337">如果元素具有简单内容，则在调用方法之前，将 `string` 在每次调用方法时串联指定的文本 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-337">If the element has simple content, the text `string` specified is concatenated on each call to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method until the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called.</span></span> <span data-ttu-id="f99f0-338"><xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>调用方法时，将验证所有文本。</span><span class="sxs-lookup"><span data-stu-id="f99f0-338">When the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called, all the text is validated.</span></span>  
  
-   <span data-ttu-id="f99f0-339">如果元素具有复杂内容，则不会发生文本串联。</span><span class="sxs-lookup"><span data-stu-id="f99f0-339">If the element has complex content, no text concatenation occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-340">当前元素上下文中不允许指定的文本 <see langword="string" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-340">The text <see langword="string" /> specified is not allowed in the current element context.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-341">未按正确的顺序调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-341">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> method was not called in the correct sequence.</span></span> <span data-ttu-id="f99f0-342">例如，在调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> 之后调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-342">For example, the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f99f0-343">文本 <see langword="string" /> 参数不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-343">The text <see langword="string" /> parameter cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateText(class System.Xml.Schema.XmlValueGetter elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateText (elementValue As XmlValueGetter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateText(System::Xml::Schema::XmlValueGetter ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateText : System.Xml.Schema.XmlValueGetter -&gt; unit" Usage="xmlSchemaValidator.ValidateText elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.Xml.Schema.XmlValueGetter" />
      </Parameters>
      <Docs>
        <param name="elementValue"><span data-ttu-id="f99f0-344">一个 <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />，用于将文本值作为与该属性的 XML 架构定义语言 (XSD) 类型兼容的公共语言运行时 (CLR) 类型进行传递。</span><span class="sxs-lookup"><span data-stu-id="f99f0-344">An <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" /> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</span></span></param>
        <summary><span data-ttu-id="f99f0-345">验证当前元素上下文中是否允许指定的 <see cref="T:System.Xml.Schema.XmlValueGetter" /> 对象返回的文本，如果当前元素具有简单内容，则累积文本以进行验证。</span><span class="sxs-lookup"><span data-stu-id="f99f0-345">Validates whether the text returned by the <see cref="T:System.Xml.Schema.XmlValueGetter" /> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-346">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-346">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method.</span></span>  
  
-   <span data-ttu-id="f99f0-347">如果元素具有简单内容，则在调用方法之前，将 `string` 在每次调用方法时串联指定的文本 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-347">If the element has simple content, the text `string` specified is concatenated on each call to the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> method until the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called.</span></span> <span data-ttu-id="f99f0-348"><xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>调用方法时，将验证所有文本。</span><span class="sxs-lookup"><span data-stu-id="f99f0-348">When the <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> method is called, all the text is validated.</span></span>  
  
-   <span data-ttu-id="f99f0-349">如果元素具有复杂内容，则不会发生文本串联。</span><span class="sxs-lookup"><span data-stu-id="f99f0-349">If the element has complex content, no text concatenation occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-350">当前元素上下文中不允许指定的文本 <see langword="string" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-350">The text <see langword="string" /> specified is not allowed in the current element context.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-351">未按正确的顺序调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-351">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> method was not called in the correct sequence.</span></span> <span data-ttu-id="f99f0-352">例如，在调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> 之后调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-352">For example, the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f99f0-353">文本 <see langword="string" /> 参数不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f99f0-353">The text <see langword="string" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateWhitespace">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f99f0-354">验证当前元素上下文中是否允许空白，如果当前元素具有简单内容，则累积空白以进行验证。</span><span class="sxs-lookup"><span data-stu-id="f99f0-354">Validates whether white space is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateWhitespace">
      <MemberSignature Language="C#" Value="public void ValidateWhitespace (string elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateWhitespace(string elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateWhitespace (elementValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateWhitespace(System::String ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateWhitespace : string -&gt; unit" Usage="xmlSchemaValidator.ValidateWhitespace elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementValue"><span data-ttu-id="f99f0-355">一个空白 <see langword="string" />，要在当前元素上下文中对其进行验证。</span><span class="sxs-lookup"><span data-stu-id="f99f0-355">A white space <see langword="string" /> to validate in the current element context.</span></span></param>
        <summary><span data-ttu-id="f99f0-356">验证当前元素上下文中是否允许指定的 <see langword="string" /> 中的空白，如果当前元素具有简单内容，则累积空白以进行验证。</span><span class="sxs-lookup"><span data-stu-id="f99f0-356">Validates whether the white space in the <see langword="string" /> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-357">当前元素上下文中不允许空白。</span><span class="sxs-lookup"><span data-stu-id="f99f0-357">White space is not allowed in the current element context.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-358">未按正确的顺序调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-358">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> method was not called in the correct sequence.</span></span> <span data-ttu-id="f99f0-359">例如，在调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> 之后调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-359">For example, if the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateWhitespace">
      <MemberSignature Language="C#" Value="public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateWhitespace(class System.Xml.Schema.XmlValueGetter elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateWhitespace (elementValue As XmlValueGetter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateWhitespace(System::Xml::Schema::XmlValueGetter ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateWhitespace : System.Xml.Schema.XmlValueGetter -&gt; unit" Usage="xmlSchemaValidator.ValidateWhitespace elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.Xml.Schema.XmlValueGetter" />
      </Parameters>
      <Docs>
        <param name="elementValue"><span data-ttu-id="f99f0-360">一个 <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" />，用于将空白值作为与该属性的 XML 架构定义语言 (XSD) 类型兼容的公共语言运行时 (CLR) 类型进行传递。</span><span class="sxs-lookup"><span data-stu-id="f99f0-360">An <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" /> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</span></span></param>
        <summary><span data-ttu-id="f99f0-361">验证当前元素上下文中是否允许指定的 <see cref="T:System.Xml.Schema.XmlValueGetter" /> 对象返回的空白，如果当前元素具有简单内容，则累积空白以进行验证。</span><span class="sxs-lookup"><span data-stu-id="f99f0-361">Validates whether the white space returned by the <see cref="T:System.Xml.Schema.XmlValueGetter" /> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="f99f0-362">当前元素上下文中不允许空白。</span><span class="sxs-lookup"><span data-stu-id="f99f0-362">White space is not allowed in the current element context.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f99f0-363">未按正确的顺序调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-363">The <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> method was not called in the correct sequence.</span></span> <span data-ttu-id="f99f0-364">例如，在调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> 之后调用 <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-364">For example, if the <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> method is called after calling <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f99f0-365"><see cref="T:System.Xml.Schema.ValidationEventHandler" /> 接收架构验证过程中遇到的架构验证警告和错误。</span><span class="sxs-lookup"><span data-stu-id="f99f0-365">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> that receives schema validation warnings and errors encountered during schema validation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99f0-366">如果未 <xref:System.Xml.Schema.ValidationEventHandler> 指定， <xref:System.Xml.Schema.XmlSchemaValidationException> 则会为值为的所有架构验证错误引发 <xref:System.Xml.Schema.XmlSeverityType> <xref:System.Xml.Schema.XmlSeverityType.Error> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-366">If no <xref:System.Xml.Schema.ValidationEventHandler> is specified, an <xref:System.Xml.Schema.XmlSchemaValidationException> is thrown for all schema validation errors with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType.Error>.</span></span> <span data-ttu-id="f99f0-367">如果 <xref:System.Xml.Schema.XmlSchemaValidationException> 验证警告的值为，则不会引发 <xref:System.Xml.Schema.XmlSeverityType> <xref:System.Xml.Schema.XmlSeverityType.Warning> 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-367">An <xref:System.Xml.Schema.XmlSchemaValidationException> is not thrown for validation warnings with an <xref:System.Xml.Schema.XmlSeverityType> value of <xref:System.Xml.Schema.XmlSeverityType.Warning>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99f0-368">下面的示例 `contosoBooks.xml` 根据架构对文件进行验证 `contosoBooks.xsd` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-368">The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema.</span></span> <span data-ttu-id="f99f0-369">该示例使用 <xref:System.Xml.Serialization.XmlSerializer> 类反序列化 `contosoBooks.xml` 文件，并将节点的值传递给 <xref:System.Xml.Schema.XmlSchemaValidator> 类的方法。</span><span class="sxs-lookup"><span data-stu-id="f99f0-369">The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 <span data-ttu-id="f99f0-370">该示例使用 `contosoBooks.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-370">The example takes the `contosoBooks.xml` file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 <span data-ttu-id="f99f0-371">该示例还使用 `contosoBooks.xsd` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="f99f0-371">The example also takes the `contosoBooks.xsd` as an input.</span></span>  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventSender">
      <MemberSignature Language="C#" Value="public object ValidationEventSender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ValidationEventSender" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationEventSender As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ValidationEventSender { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationEventSender : obj with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.ValidationEventSender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f99f0-372">获取或设置作为验证事件的发件人对象所发送的对象。</span><span class="sxs-lookup"><span data-stu-id="f99f0-372">Gets or sets the object sent as the sender object of a validation event.</span></span></summary>
        <value><span data-ttu-id="f99f0-373">一个 <see cref="T:System.Object" />；默认值为此 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f99f0-373">An <see cref="T:System.Object" />; the default is this <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f99f0-374">有关验证事件的示例，请参阅 <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> 事件。</span><span class="sxs-lookup"><span data-stu-id="f99f0-374">For an example of a validation event, see the <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Schema.XmlSchemaValidator.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f99f0-375">设置用于解析 <c>xs:import</c> 和 <c>xs:include</c> 元素，以及 <c>xsi:schemaLocation</c> 和 <c>xsi:noNamespaceSchemaLocation</c> 属性的 <see cref="T:System.Xml.XmlResolver" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f99f0-375">Sets the <see cref="T:System.Xml.XmlResolver" /> object used to resolve <c>xs:import</c> and <c>xs:include</c> elements as well as <c>xsi:schemaLocation</c> and <c>xsi:noNamespaceSchemaLocation</c> attributes.</span></span></summary>
        <value><span data-ttu-id="f99f0-376">一个 <see cref="T:System.Xml.XmlResolver" /> 对象；默认值为 <see cref="T:System.Xml.XmlUrlResolver" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f99f0-376">An <see cref="T:System.Xml.XmlResolver" /> object; the default is an <see cref="T:System.Xml.XmlUrlResolver" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f99f0-377"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>对象的和 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 验证标志 <xref:System.Xml.Schema.XmlSchemaValidator> 未设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="f99f0-377">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default.</span></span> <span data-ttu-id="f99f0-378">此外， <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> 默认情况下，对象的属性 <xref:System.Xml.Schema.XmlSchemaValidator> 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="f99f0-378">Additionally, the <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default.</span></span> <span data-ttu-id="f99f0-379">因此，默认情况下，在包含、导入或重新定义元素中引用的外部架构不会得到解析。</span><span class="sxs-lookup"><span data-stu-id="f99f0-379">As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlResolver" />
      </Docs>
    </Member>
  </Members>
</Type>
