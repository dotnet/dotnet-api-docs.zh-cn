<Type Name="IEnumConnections" FullName="Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7ee6d942f736170e85fec7d6290d3b19007350f" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102085906" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumConnections" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumConnections" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumConnections" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnumConnections" />
  <TypeSignature Language="F#" Value="type IEnumConnections = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("B196B287-BAB4-101A-B69C-00AA00341D07")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("B196B287-BAB4-101A-B69C-00AA00341D07")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>管理 <see langword="IEnumConnections" /> 接口的定义。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于新的开发，请使用 <xref:System.Runtime.InteropServices.ComTypes.IEnumConnections> 。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。 多数情况下，这些函数和对象可再现 .NET Framework 中其他命名空间的功能。 只有当 Visual Basic 6.0 代码模型与 .NET Framework 实现有显著区别时，才必须使用这些函数和对象。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public void Clone (out Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections ec);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Clone([out] class Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections&amp; ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clone (ByRef ec As IEnumConnections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clone([Runtime::InteropServices::Out] Microsoft::VisualBasic::Compatibility::VB6::IEnumConnections ^ % ec);" />
      <MemberSignature Language="F#" Value="abstract member Clone : IEnumConnections -&gt; unit" Usage="iEnumConnections.Clone ec" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ec">此方法返回时，包含对该新创建的枚举数的引用。 此参数未经初始化即被传递。</param>
        <summary>创建与当前枚举数包含相同枚举状态的一个新枚举数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。 多数情况下，这些函数和对象可再现 .NET Framework 中其他命名空间的功能。 只有当 Visual Basic 6.0 代码模型与 .NET Framework 实现有显著区别时，才必须使用这些函数和对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public void Next (int cConnections, out Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[] cd, out int cFetched);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Next([in]int32 cConnections, [out] valuetype Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[]&amp; cd, [out] int32&amp; cFetched) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[]@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Next (cConnections As Integer, ByRef cd As CONNECTDATA(), ByRef cFetched As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Next(int cConnections, [Runtime::InteropServices::Out] cli::array &lt;Microsoft::VisualBasic::Compatibility::VB6::CONNECTDATA&gt; ^ % cd, [Runtime::InteropServices::Out] int % cFetched);" />
      <MemberSignature Language="F#" Value="abstract member Next : int * CONNECTDATA[] * int -&gt; unit" Usage="iEnumConnections.Next (cConnections, cd, cFetched)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cConnections" Type="System.Int32" />
        <Parameter Name="cd" Type="Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[]" RefType="out" />
        <Parameter Name="cFetched" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="cConnections">要在 <paramref name="cd" /> 中返回的 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA" /> 结构的数目。</param>
        <param name="cd">此方法返回时，包含对枚举连接的引用。 此参数未经初始化即被传递。</param>
        <param name="cFetched">此方法返回时，包含对 <paramref name="cd" /> 中枚举的连接的实际数目的引用。</param>
        <summary>检索枚举序列中指定数目的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。 多数情况下，这些函数和对象可再现 .NET Framework 中其他命名空间的功能。 只有当 Visual Basic 6.0 代码模型与 .NET Framework 实现有显著区别时，才必须使用这些函数和对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumConnections.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将枚举序列重置到开始处。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。 多数情况下，这些函数和对象可再现 .NET Framework 中其他命名空间的功能。 只有当 Visual Basic 6.0 代码模型与 .NET Framework 实现有显著区别时，才必须使用这些函数和对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public void Skip (int cConnections);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Skip([in]int32 cConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Skip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Skip (cConnections As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Skip(int cConnections);" />
      <MemberSignature Language="F#" Value="abstract member Skip : int -&gt; unit" Usage="iEnumConnections.Skip cConnections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cConnections" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cConnections">枚举中要跳过的元素数目。</param>
        <summary>跳过枚举序列中指定数目的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。 多数情况下，这些函数和对象可再现 .NET Framework 中其他命名空间的功能。 只有当 Visual Basic 6.0 代码模型与 .NET Framework 实现有显著区别时，才必须使用这些函数和对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
