<Type Name="BindingCollectionEnumerator" FullName="Microsoft.VisualBasic.Compatibility.VB6.BindingCollectionEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="924343798d07e72707abd79eba48e7ecfe5df3e1" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102086413" /></Metadata><TypeSignature Language="C#" Value="public class BindingCollectionEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi BindingCollectionEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.BindingCollectionEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingCollectionEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingCollectionEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type BindingCollectionEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="00cf6-101">支持在从 Visual Basic 6.0 升级的应用程序中对绑定集合进行简单迭代。</span><span class="sxs-lookup"><span data-stu-id="00cf6-101">Supports a simple iteration over a binding collection in an application upgraded from Visual Basic 6.0.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00cf6-102">当应用程序升级到 Visual Basic 时， `BindingCollectionEnumerator` 将创建一个以启用 `ADO` 相关的代码。</span><span class="sxs-lookup"><span data-stu-id="00cf6-102">When an application is upgraded to Visual Basic, a `BindingCollectionEnumerator` is created to enable the `ADO`-related code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00cf6-103"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="00cf6-103">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="00cf6-104">多数情况下，这些函数和对象可再现 .NET Framework 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="00cf6-104">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the .NET Framework.</span></span> <span data-ttu-id="00cf6-105">只有当 Visual Basic 6.0 代码模型与 .NET Framework 实现有显著区别时，才必须使用这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="00cf6-105">They are necessary only when the Visual Basic 6.0 code model differs significantly from the .NET Framework implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.BindingCollectionEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00cf6-106">获取绑定集合中的当前元素。</span><span class="sxs-lookup"><span data-stu-id="00cf6-106">Gets the current element in the binding collection.</span></span></summary>
        <value><span data-ttu-id="00cf6-107">集合中的当前元素。</span><span class="sxs-lookup"><span data-stu-id="00cf6-107">The current element in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00cf6-108">当应用程序升级到 Visual Basic 时， `BindingCollectionEnumerator` 将创建一个以启用 `ADO` 相关的代码。</span><span class="sxs-lookup"><span data-stu-id="00cf6-108">When an application is upgraded to Visual Basic, a `BindingCollectionEnumerator` is created to enable the `ADO`-related code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00cf6-109"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="00cf6-109">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="00cf6-110">多数情况下，这些函数和对象可再现 .NET Framework 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="00cf6-110">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the .NET Framework.</span></span> <span data-ttu-id="00cf6-111">只有当 Visual Basic 6.0 代码模型与 .NET Framework 实现有显著区别时，才必须使用这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="00cf6-111">They are necessary only when the Visual Basic 6.0 code model differs significantly from the .NET Framework implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BindingCollectionEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext() = System::Collections::IEnumerator::MoveNext;" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="bindingCollectionEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00cf6-112">将枚举数推进到集合的下一个元素。</span><span class="sxs-lookup"><span data-stu-id="00cf6-112">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="00cf6-113">如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00cf6-113"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00cf6-114">当应用程序升级到 Visual Basic 时， `BindingCollectionEnumerator` 将创建一个以启用 `ADO` 相关的代码。</span><span class="sxs-lookup"><span data-stu-id="00cf6-114">When an application is upgraded to Visual Basic, a `BindingCollectionEnumerator` is created to enable the `ADO`-related code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00cf6-115"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="00cf6-115">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="00cf6-116">多数情况下，这些函数和对象可再现 .NET Framework 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="00cf6-116">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the .NET Framework.</span></span> <span data-ttu-id="00cf6-117">只有当 Visual Basic 6.0 代码模型与 .NET Framework 实现有显著区别时，才必须使用这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="00cf6-117">They are necessary only when the Visual Basic 6.0 code model differs significantly from the .NET Framework implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BindingCollectionEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="bindingCollectionEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00cf6-118">将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</span><span class="sxs-lookup"><span data-stu-id="00cf6-118">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00cf6-119">当应用程序升级到 Visual Basic 时， `BindingCollectionEnumerator` 将创建一个以启用 `ADO` 相关的代码。</span><span class="sxs-lookup"><span data-stu-id="00cf6-119">When an application is upgraded to Visual Basic, a `BindingCollectionEnumerator` is created to enable the `ADO`-related code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00cf6-120"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="00cf6-120">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="00cf6-121">多数情况下，这些函数和对象可再现 .NET Framework 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="00cf6-121">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the .NET Framework.</span></span> <span data-ttu-id="00cf6-122">只有当 Visual Basic 6.0 代码模型与 .NET Framework 实现有显著区别时，才必须使用这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="00cf6-122">They are necessary only when the Visual Basic 6.0 code model differs significantly from the .NET Framework implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>
