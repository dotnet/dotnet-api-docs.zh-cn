<Type Name="ListBoxItem" FullName="Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0864ef849123c71da2273a9f3106bd73225c67eb" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86622955" /></Metadata><TypeSignature Language="C#" Value="public class ListBoxItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ListBoxItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBoxItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBoxItem" />
  <TypeSignature Language="F#" Value="type ListBoxItem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示从 Visual Basic 6.0 升级的应用程序内 <see cref="T:System.Windows.Forms.ListBox" /> 或 <see cref="T:System.Windows.Forms.ComboBox" /> 控件中的一项。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 Visual Basic 6.0 中， `ListBox` 和 `ComboBox` 控件使用 `List` 属性来存储列表项，并使用属性 `ItemData` 存储 `Integer` 与每个列表项关联的（可选）。 在 Visual Basic 中， <xref:System.Windows.Forms.ListBox> 和 <xref:System.Windows.Forms.ComboBox> 控件使用 <xref:System.Windows.Forms.ListBox.Items%2A> 属性来存储列表项，并且 `ItemData` 不再支持该属性。  
  
 将 Visual Basic 6.0 应用程序升级到 Visual Basic 时，升级工具会 `ListBoxItem` 为或控件中的每一项创建一个类 <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ComboBox> 。 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A>然后， <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> 可以使用和函数来启用任何引用属性的代码 `ItemData` 。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> 类的实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBoxItem (string ItemString);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string ItemString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ItemString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListBoxItem(System::String ^ ItemString);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem : string -&gt; Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" Usage="new Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem ItemString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="ItemString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ItemString">一个包含列表项的 <see cref="T:System.String" />。</param>
        <summary>初始化 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> 类的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 Visual Basic 6.0 应用程序升级到 Visual Basic 时，升级工具会 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem> 为或控件中的每一项创建一个类 <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ComboBox> 。 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A>然后， <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> 可以使用和函数来启用任何引用属性的代码 `ItemData` 。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBoxItem (string ItemString, int ItemData);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string ItemString, int32 ItemData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ItemString As String, ItemData As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListBoxItem(System::String ^ ItemString, int ItemData);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem : string * int -&gt; Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" Usage="new Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem (ItemString, ItemData)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="ItemString" Type="System.String" />
        <Parameter Name="ItemData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ItemString">一个包含列表项的 <see cref="T:System.String" />。</param>
        <param name="ItemData">一个 <see langword="Integer" />，表示 Visual Basic 6.0 的 <see langword="ItemData" /> 值。</param>
        <summary>初始化 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> 类的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 Visual Basic 6.0 应用程序升级到 Visual Basic 时，升级工具会 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem> 为或控件中的每一项创建一个类 <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ComboBox> 。 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A>然后， <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> 可以使用和函数来启用任何引用属性的代码 `ItemData` 。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemData">
      <MemberSignature Language="C#" Value="public int ItemData;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ItemData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" />
      <MemberSignature Language="VB.NET" Value="Public ItemData As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int ItemData;" />
      <MemberSignature Language="F#" Value="val mutable ItemData : int" Usage="Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>为从 Visual Basic 6.0 升级的应用程序内 <see cref="T:System.Windows.Forms.ListBox" /> 或 <see cref="T:System.Windows.Forms.ComboBox" /> 控件中的项存储 <see langword="ItemData" /> 值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 Visual Basic 6.0 应用程序升级到 Visual Basic 时，升级工具会 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem> 为或控件中的每一项创建一个类 <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ComboBox> 。 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A>然后， <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> 可以使用和函数来启用任何引用属性的代码 `ItemData` 。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemString">
      <MemberSignature Language="C#" Value="public string ItemString;" />
      <MemberSignature Language="ILAsm" Value=".field public string ItemString" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" />
      <MemberSignature Language="VB.NET" Value="Public ItemString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ItemString;" />
      <MemberSignature Language="F#" Value="val mutable ItemString : string" Usage="Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>为从 Visual Basic 6.0 升级的应用程序内 <see cref="T:System.Windows.Forms.ListBox" /> 或 <see cref="T:System.Windows.Forms.ComboBox" /> 控件中的项存储 <see langword="List" /> 值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 Visual Basic 6.0 应用程序升级到 Visual Basic 时，升级工具会 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem> 为或控件中的每一项创建一个类 <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ComboBox> 。 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A>然后， <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> 可以使用和函数来启用任何引用属性的代码 `ItemData` 。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance string ToString() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="listBoxItem.ToString " />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> 转换为 <see cref="T:System.String" />。</summary>
        <returns>一个包含 <see cref="T:System.String" /> 的值的 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem>不能转换为 <xref:System.String> ; 必须调用 `ToString` 方法才能转换类型。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
