<Type Name="Base64" FullName="System.Buffers.Text.Base64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ff686784e1a16febed67089909e65797fd07273" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89962828" /></Metadata><TypeSignature Language="C#" Value="public static class Base64" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Base64 extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Base64" />
  <TypeSignature Language="VB.NET" Value="Public Class Base64" />
  <TypeSignature Language="C++ CLI" Value="public ref class Base64 abstract sealed" />
  <TypeSignature Language="F#" Value="type Base64 = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Memory" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fd9e5-101">在二进制数据和以 base 64 表示的 UTF-8 编码的文本之间转换。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-101">Converts between binary data and UTF-8 encoded text that is represented in base 64.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; utf8, Span&lt;byte&gt; bytes, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (utf8 As ReadOnlySpan(Of Byte), bytes As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int * int * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8 (utf8, bytes, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="utf8"><span data-ttu-id="fd9e5-102">包含需要解码的以 base 64 表示的 UTF-8 编码文本的输入范围。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-102">The input span that contains UTF-8 encoded text in base 64 that needs to be decoded.</span></span></param>
        <param name="bytes"><span data-ttu-id="fd9e5-103">包含操作结果（即解码的二进制数据）的输出范围。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-103">The output span that contains the result of the operation, that is, the decoded binary data.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="fd9e5-104">在操作期间使用的输入字节数。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-104">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="fd9e5-105">如有必要，这可用于划分输入以供后续调用。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-105">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="fd9e5-106">写入输出范围的字节数。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-106">The number of bytes written into the output span.</span></span> <span data-ttu-id="fd9e5-107">如有必要，这可用于划分输出以供后续调用。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-107">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="fd9e5-108">如果输入范围包含要解码的整个数据，则为 <see langword="true" />（默认值）。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-108"><see langword="true" /> (default) if the input span contains the entire data to decode.</span></span> <span data-ttu-id="fd9e5-109">如果输入范围包含部分数据且将输入更多数据，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-109"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="fd9e5-110">将表示为 base 64 的 UTF-8 编码的文本范围解码为二进制数据。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-110">Decodes the span of UTF-8 encoded text represented as base 64 into binary data.</span></span> <span data-ttu-id="fd9e5-111">如果输入不是 4 的倍数，则它将尽可能多地解码，直到最接近 4 的倍数。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-111">If the input is not a multiple of 4, it will decode as much as it can, to the closest multiple of 4.</span></span></summary>
        <returns><span data-ttu-id="fd9e5-112">用于指示解码操作状态的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-112">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="fd9e5-113">返回值可以为，如下所示：</span><span class="sxs-lookup"><span data-stu-id="fd9e5-113">The return value can be as follows:</span></span>

- <span data-ttu-id="fd9e5-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>：整个输入跨距的处理成功。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="fd9e5-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>：输出跨度中的空间不足，无法写入已解码的输入。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There is not enough space in the output span to write the decoded input.</span></span>
- <span data-ttu-id="fd9e5-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>： `isFinalBlock` 为 `false` ，输入不是4的倍数。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false` and the input is not a multiple of 4.</span></span> <span data-ttu-id="fd9e5-117">否则，会考虑部分输入 <xref:System.Buffers.OperationStatus.InvalidData> 。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-117">Otherwise, the partial input is considered <xref:System.Buffers.OperationStatus.InvalidData>.</span></span>
- <span data-ttu-id="fd9e5-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>：输入包含所需的基64范围之外的字节、包含无效或超过两个填充字符，或者不完整 (，而不是4的倍数) 并且 `isFinalBlock` 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4) and `isFinalBlock` is `true`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8InPlace (Span&lt;byte&gt; buffer, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8InPlace(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8InPlace (buffer As Span(Of Byte), ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8InPlace(Span&lt;System::Byte&gt; buffer, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8InPlace : Span&lt;byte&gt; * int -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8InPlace (buffer, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="fd9e5-119">包含需要解码的 base-64 文本数据的输入范围。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-119">The input span that contains the base-64 text data that needs to be decoded.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="fd9e5-120">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-120">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="fd9e5-121">将以 base 64（就地）表示的 UTF-8 编码的文本范围解码为二进制数据。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-121">Decodes the span of UTF-8 encoded text in base 64 (in-place) into binary data.</span></span> <span data-ttu-id="fd9e5-122">解码的二进制输出小于包含在输入中的文本数据（操作会压缩数据）。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-122">The decoded binary output is smaller than the text data contained in the input (the operation deflates the data).</span></span> <span data-ttu-id="fd9e5-123">如果输入不是 4 的倍数，该方法将无法解码任何数据。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-123">If the input is not a multiple of 4, the method will not decode any data.</span></span></summary>
        <returns><span data-ttu-id="fd9e5-124">用于指示解码操作状态的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-124">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="fd9e5-125">返回值可以为，如下所示：</span><span class="sxs-lookup"><span data-stu-id="fd9e5-125">The return value can be as follows:</span></span>

- <span data-ttu-id="fd9e5-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>：整个输入跨距的处理成功。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="fd9e5-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>：输入包含所需的基64范围之外的字节、包含无效或超过两个填充字符，或者不完整 (（不是 4) 的倍数）。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4).</span></span>

<span data-ttu-id="fd9e5-128">此方法不能返回 <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> 和 <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> 值。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-128">This method cannot return the <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> values.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8 (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;byte&gt; utf8, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;unsigned int8&gt; utf8, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8 (bytes As ReadOnlySpan(Of Byte), utf8 As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int * int * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8 (bytes, utf8, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="utf8" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="fd9e5-129">包含需要编码的二进制数据的输入范围。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-129">The input span that contains binary data that needs to be encoded.</span></span></param>
        <param name="utf8"><span data-ttu-id="fd9e5-130">包含操作结果（即以 base 64 表示的 UTF-8 编码的文本）的输出范围。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-130">The output span that contains the result of the operation, that is, the UTF-8 encoded text in base 64.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="fd9e5-131">在操作期间使用的输入字节数。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-131">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="fd9e5-132">如有必要，这可用于划分输入以供后续调用。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-132">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="fd9e5-133">写入输出范围的字节数。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-133">The number of bytes written into the output span.</span></span> <span data-ttu-id="fd9e5-134">如有必要，这可用于划分输出以供后续调用。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-134">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="fd9e5-135">如果输入范围包含要编码的整个数据，则为 <see langword="true" />（默认值）。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-135"><see langword="true" /> (the default) if the input span contains the entire data to encode.</span></span> <span data-ttu-id="fd9e5-136">如果输入范围包含部分数据且将输入更多数据，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-136"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="fd9e5-137">将二进制数据的范围编码为以 base 64 表示的 UTF-8 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-137">Encodes the span of binary data into UTF-8 encoded text represented as base 64.</span></span></summary>
        <returns><span data-ttu-id="fd9e5-138">用于指示编码操作状态的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-138">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="fd9e5-139">返回值可以为，如下所示：</span><span class="sxs-lookup"><span data-stu-id="fd9e5-139">The return value can be as follows:</span></span>

- <span data-ttu-id="fd9e5-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>：整个输入跨距的处理成功。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="fd9e5-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>：输出跨度中的空间不足，无法适应编码的输入。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the output span to fit the encoded input.</span></span>
- <span data-ttu-id="fd9e5-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>： `isFinalBlock` 为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false`.</span></span> <span data-ttu-id="fd9e5-143">否则，如果 `isFinalBlock` 为 `true` ，则在输入不是3的倍数时，输出将被填充。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-143">Otherwise, if `isFinalBlock` is `true`, the output is padded if the input is not a multiple of 3.</span></span>

<span data-ttu-id="fd9e5-144">此方法无法返回 <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> ，因为不能用于64编码。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-144">This method cannot return <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> since that is not possible for base-64 encoding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8InPlace (Span&lt;byte&gt; buffer, int dataLength, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, int32 dataLength, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8InPlace(System.Span{System.Byte},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8InPlace (buffer As Span(Of Byte), dataLength As Integer, ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus EncodeToUtf8InPlace(Span&lt;System::Byte&gt; buffer, int dataLength, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8InPlace : Span&lt;byte&gt; * int * int -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8InPlace (buffer, dataLength, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="dataLength" Type="System.Int32" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="fd9e5-145">包含需要编码的二进制数据的输入范围。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-145">The input span that contains binary data that needs to be encoded.</span></span> <span data-ttu-id="fd9e5-146">由于此方法执行就地转换，因此它需要具有足够大小来存储操作结果。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-146">Because the method performs an in-place conversion, it needs to be large enough to store the result of the operation.</span></span></param>
        <param name="dataLength"><span data-ttu-id="fd9e5-147">包含在需要编码的缓冲区内的二进制数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-147">The number of bytes of binary data contained within the buffer that needs to be encoded.</span></span> <span data-ttu-id="fd9e5-148">此值必须小于缓冲区长度。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-148">This value must be smaller than the buffer length.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="fd9e5-149">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-149">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="fd9e5-150">将二进制数据（就地）的范围编码为以 base 64 表示的 UTF-8 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-150">Encodes the span of binary data (in-place) into UTF-8 encoded text represented as base 64.</span></span> <span data-ttu-id="fd9e5-151">编码的文本输出大于包含在输入中的二进制数据（操作会扩大数据）。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-151">The encoded text output is larger than the binary data contained in the input (the operation inflates the data).</span></span></summary>
        <returns><span data-ttu-id="fd9e5-152">用于指示编码操作状态的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-152">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="fd9e5-153">返回值可以为，如下所示：</span><span class="sxs-lookup"><span data-stu-id="fd9e5-153">The return value can be as follows:</span></span>

- <span data-ttu-id="fd9e5-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>：整个缓冲区的处理成功。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire buffer succeeded.</span></span>
- <span data-ttu-id="fd9e5-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>：缓冲区中的空间不足 `dataLength` ，无法满足输入编码的结果。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the buffer beyond `dataLength` to fit the result of encoding the input.</span></span>

<span data-ttu-id="fd9e5-156">此方法不能返回 <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> 和 <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-156">This method cannot return <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxDecodedFromUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxDecodedFromUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxDecodedFromUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxDecodedFromUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxDecodedFromUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxDecodedFromUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="fd9e5-157">字节跨度的大小。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-157">The size of the byte span.</span></span></param>
        <summary><span data-ttu-id="fd9e5-158">如果要解码具有指定长度的字节跨度中的 base-64 编码的文本，则返回结果的最大长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-158">Returns the maximum length (in bytes) of the result if you were to decode base-64 encoded text within a byte span with the specified length.</span></span></summary>
        <returns><span data-ttu-id="fd9e5-159">结果的最大长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-159">The maximum length (in bytes) of the result.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fd9e5-160"><paramref name="length" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-160"><paramref name="length" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaxEncodedToUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxEncodedToUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxEncodedToUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxEncodedToUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxEncodedToUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxEncodedToUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="fd9e5-161">字节跨度的大小。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-161">The size of the byte span.</span></span></param>
        <summary><span data-ttu-id="fd9e5-162">如果要解码具有指定长度的字节跨度中的二进制文本，则返回结果的最大长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-162">Returns the maximum length (in bytes) of the result if you were to encode binary data within a byte span with the specified length.</span></span></summary>
        <returns><span data-ttu-id="fd9e5-163">结果的最大长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-163">The maximum length (in bytes) of the result.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fd9e5-164"><paramref name="length" /> 小于 0 或大于 1610612733（因为编码将数据扩大了 4/3）。</span><span class="sxs-lookup"><span data-stu-id="fd9e5-164"><paramref name="length" /> is less than 0 or larger than 1610612733 (since encode inflates the data by 4/3).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
