<Type Name="Utf8Parser" FullName="System.Buffers.Text.Utf8Parser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="631402208e34b902d0ede4c234b22b37b8275d1a" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100286173" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Parser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Parser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Parser" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Parser" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Parser abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Parser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Memory" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d6228-101">提供用于将 Utf8 字符串分析为常见数据类型的静态方法。</span><span class="sxs-lookup"><span data-stu-id="d6228-101">Provides static methods to parse Utf8 strings to common data types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out bool value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] bool&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Boolean@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Boolean, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * bool * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-102">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-102">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-103">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-103">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-104">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-104">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-105">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-105">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-106">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-106">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-107">分析 Utf8 字符串开头的 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-107">Parses a <see cref="T:System.Boolean" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-108">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-108"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-109">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-109">Formats supported:</span></span> 

|<span data-ttu-id="d6228-110">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-110">Format string</span></span>|<span data-ttu-id="d6228-111">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-111">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d6228-112">G (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-112">G (default)</span></span>|<span data-ttu-id="d6228-113">True/False</span><span class="sxs-lookup"><span data-stu-id="d6228-113">True/False</span></span>|
|<span data-ttu-id="d6228-114">l</span><span class="sxs-lookup"><span data-stu-id="d6228-114">l</span></span>|<span data-ttu-id="d6228-115">true/false</span><span class="sxs-lookup"><span data-stu-id="d6228-115">true/false</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out byte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Byte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Byte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * byte * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Byte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-116">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-116">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-117">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-117">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-118">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-118">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-119">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-119">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-120">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-120">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-121">分析 Utf8 字符串开头的 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-121">Parses a <see cref="T:System.Byte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-122">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-122"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-123">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-123">Formats supported:</span></span> 

|<span data-ttu-id="d6228-124">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-124">Format string</span></span>|<span data-ttu-id="d6228-125">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-125">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d6228-126">G/g (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-126">G/g (default)</span></span>| |
|<span data-ttu-id="d6228-127">D/d</span><span class="sxs-lookup"><span data-stu-id="d6228-127">D/d</span></span>|<span data-ttu-id="d6228-128">122</span><span class="sxs-lookup"><span data-stu-id="d6228-128">122</span></span>|
|<span data-ttu-id="d6228-129">N/n</span><span class="sxs-lookup"><span data-stu-id="d6228-129">N/n</span></span>|<span data-ttu-id="d6228-130">122</span><span class="sxs-lookup"><span data-stu-id="d6228-130">122</span></span>|       
|<span data-ttu-id="d6228-131">X/x</span><span class="sxs-lookup"><span data-stu-id="d6228-131">X/x</span></span>|<span data-ttu-id="d6228-132">7a</span><span class="sxs-lookup"><span data-stu-id="d6228-132">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTime value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTime&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTime@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTime, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * DateTime * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-133">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-133">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-134">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-134">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-135">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-135">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-136">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-136">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-137">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-137">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-138">分析 Utf8 字符串开头的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-138">Parses a <see cref="T:System.DateTime" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-139">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-139"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-140">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-140">Formats supported:</span></span>

|<span data-ttu-id="d6228-141">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-141">Format string</span></span>|<span data-ttu-id="d6228-142">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-142">Example expected format</span></span>|<span data-ttu-id="d6228-143">注释</span><span class="sxs-lookup"><span data-stu-id="d6228-143">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d6228-144">G (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-144">G  (default)</span></span>|<span data-ttu-id="d6228-145">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="d6228-145">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="d6228-146">R</span><span class="sxs-lookup"><span data-stu-id="d6228-146">R</span></span>|<span data-ttu-id="d6228-147">周二，03月 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="d6228-147">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="d6228-148"> (RFC 1123) </span><span class="sxs-lookup"><span data-stu-id="d6228-148">(RFC 1123)</span></span>|
|<span data-ttu-id="d6228-149">l</span><span class="sxs-lookup"><span data-stu-id="d6228-149">l</span></span>|<span data-ttu-id="d6228-150">周二，03月 2017 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="d6228-150">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="d6228-151"> (小写 RFC 1123) </span><span class="sxs-lookup"><span data-stu-id="d6228-151">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="d6228-152">O</span><span class="sxs-lookup"><span data-stu-id="d6228-152">O</span></span>|<span data-ttu-id="d6228-153">2017-06-12T05：30： 45.7680000-07：00</span><span class="sxs-lookup"><span data-stu-id="d6228-153">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="d6228-154"> (往返) </span><span class="sxs-lookup"><span data-stu-id="d6228-154">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTimeOffset value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTimeOffset&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTimeOffset@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTimeOffset, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * DateTimeOffset * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-155">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-155">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-156">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-156">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-157">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-157">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-158">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-158">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-159">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-159">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-160">分析 Utf8 字符串开头的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-160">Parses a <see cref="T:System.DateTimeOffset" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-161">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-161"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-162">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-162">Formats supported:</span></span>

|<span data-ttu-id="d6228-163">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-163">Format string</span></span>|<span data-ttu-id="d6228-164">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-164">Example expected format</span></span>|<span data-ttu-id="d6228-165">注释</span><span class="sxs-lookup"><span data-stu-id="d6228-165">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d6228-166">G (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-166">G  (default)</span></span>|<span data-ttu-id="d6228-167">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="d6228-167">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="d6228-168">R</span><span class="sxs-lookup"><span data-stu-id="d6228-168">R</span></span>|<span data-ttu-id="d6228-169">周二，03月 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="d6228-169">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="d6228-170"> (RFC 1123) </span><span class="sxs-lookup"><span data-stu-id="d6228-170">(RFC 1123)</span></span>|
|<span data-ttu-id="d6228-171">l</span><span class="sxs-lookup"><span data-stu-id="d6228-171">l</span></span>|<span data-ttu-id="d6228-172">周二，03月 2017 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="d6228-172">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="d6228-173"> (小写 RFC 1123) </span><span class="sxs-lookup"><span data-stu-id="d6228-173">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="d6228-174">O</span><span class="sxs-lookup"><span data-stu-id="d6228-174">O</span></span>|<span data-ttu-id="d6228-175">2017-06-12T05：30： 45.7680000-07：00</span><span class="sxs-lookup"><span data-stu-id="d6228-175">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="d6228-176"> (往返) </span><span class="sxs-lookup"><span data-stu-id="d6228-176">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out decimal value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Decimal&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Decimal@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Decimal, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * decimal * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-177">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-177">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-178">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-178">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-179">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-179">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-180">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-180">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-181">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-181">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-182">分析 Utf8 字符串开头的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-182">Parses a <see cref="T:System.Decimal" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-183">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-183"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-184">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-184">Formats supported:</span></span>

|<span data-ttu-id="d6228-185">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-185">Format string</span></span>|<span data-ttu-id="d6228-186">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-186">Example expected format</span></span>|<span data-ttu-id="d6228-187">注释</span><span class="sxs-lookup"><span data-stu-id="d6228-187">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d6228-188">G/g (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-188">G/g  (default)</span></span>| |  
|<span data-ttu-id="d6228-189">F/f</span><span class="sxs-lookup"><span data-stu-id="d6228-189">F/f</span></span>|<span data-ttu-id="d6228-190">12.45</span><span class="sxs-lookup"><span data-stu-id="d6228-190">12.45</span></span>|<span data-ttu-id="d6228-191">固定点</span><span class="sxs-lookup"><span data-stu-id="d6228-191">Fixed point</span></span>|
|<span data-ttu-id="d6228-192">E/e</span><span class="sxs-lookup"><span data-stu-id="d6228-192">E/e</span></span>|<span data-ttu-id="d6228-193">1.245000 e1</span><span class="sxs-lookup"><span data-stu-id="d6228-193">1.245000e1</span></span>|<span data-ttu-id="d6228-194">指数</span><span class="sxs-lookup"><span data-stu-id="d6228-194">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out double value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Double@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Double, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * double * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-195">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-195">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-196">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-196">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-197">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-197">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-198">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-198">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-199">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-199">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-200">分析 Utf8 字符串开头的 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-200">Parses a <see cref="T:System.Double" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-201">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-201"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-202">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-202">Formats supported:</span></span>

|<span data-ttu-id="d6228-203">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-203">Format string</span></span>|<span data-ttu-id="d6228-204">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-204">Example expected format</span></span>|<span data-ttu-id="d6228-205">注释</span><span class="sxs-lookup"><span data-stu-id="d6228-205">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d6228-206">G/g (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-206">G/g  (default)</span></span>| |  
|<span data-ttu-id="d6228-207">F/f</span><span class="sxs-lookup"><span data-stu-id="d6228-207">F/f</span></span>|<span data-ttu-id="d6228-208">12.45</span><span class="sxs-lookup"><span data-stu-id="d6228-208">12.45</span></span>|<span data-ttu-id="d6228-209">固定点</span><span class="sxs-lookup"><span data-stu-id="d6228-209">Fixed point</span></span>|
|<span data-ttu-id="d6228-210">E/e</span><span class="sxs-lookup"><span data-stu-id="d6228-210">E/e</span></span>|<span data-ttu-id="d6228-211">1.245000 e1</span><span class="sxs-lookup"><span data-stu-id="d6228-211">1.245000e1</span></span>|<span data-ttu-id="d6228-212">指数</span><span class="sxs-lookup"><span data-stu-id="d6228-212">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out Guid value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Guid&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Guid@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Guid, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * Guid * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-213">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-213">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-214">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-214">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-215">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-215">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-216">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-216">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-217">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-217">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-218">分析 Utf8 字符串开头的 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-218">Parses a <see cref="T:System.Guid" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-219">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-219"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-220">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-220">Formats supported:</span></span>

|<span data-ttu-id="d6228-221">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-221">Format string</span></span>|<span data-ttu-id="d6228-222">预期格式</span><span class="sxs-lookup"><span data-stu-id="d6228-222">Expected format</span></span>|
|--|--|
|<span data-ttu-id="d6228-223">D (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-223">D (default)</span></span>|<span data-ttu-id="d6228-224">nnnnnnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="d6228-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="d6228-225">B</span><span class="sxs-lookup"><span data-stu-id="d6228-225">B</span></span>|<span data-ttu-id="d6228-226">{nnnnnnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="d6228-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="d6228-227">P</span><span class="sxs-lookup"><span data-stu-id="d6228-227">P</span></span>|<span data-ttu-id="d6228-228"> (nnnnnnnn-nnnn nnnnnnnnnnnn) </span><span class="sxs-lookup"><span data-stu-id="d6228-228">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="d6228-229">N</span><span class="sxs-lookup"><span data-stu-id="d6228-229">N</span></span>|<span data-ttu-id="d6228-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="d6228-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out short value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Short, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int16 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-231">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-231">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-232">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-232">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-233">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-233">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-234">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-234">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-235">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-235">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-236">分析 Utf8 字符串开头的 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-236">Parses an <see cref="T:System.Int16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-237">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-237"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-238">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-238">Formats supported:</span></span>

|<span data-ttu-id="d6228-239">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-239">Format string</span></span>|<span data-ttu-id="d6228-240">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-240">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d6228-241">G/g (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-241">G/g (default)</span></span>| |
|<span data-ttu-id="d6228-242">D/d</span><span class="sxs-lookup"><span data-stu-id="d6228-242">D/d</span></span>|<span data-ttu-id="d6228-243">32767</span><span class="sxs-lookup"><span data-stu-id="d6228-243">32767</span></span>|
|<span data-ttu-id="d6228-244">N/n</span><span class="sxs-lookup"><span data-stu-id="d6228-244">N/n</span></span>|<span data-ttu-id="d6228-245">32,767</span><span class="sxs-lookup"><span data-stu-id="d6228-245">32,767</span></span>|       
|<span data-ttu-id="d6228-246">X/x</span><span class="sxs-lookup"><span data-stu-id="d6228-246">X/x</span></span>|<span data-ttu-id="d6228-247">7fff</span><span class="sxs-lookup"><span data-stu-id="d6228-247">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out int value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Integer, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-248">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-248">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-249">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-249">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-250">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-250">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-251">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-251">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-252">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-252">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-253">分析 Utf8 字符串开头的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-253">Parses an <see cref="T:System.Int32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-254">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-254"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-255">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-255">Formats supported:</span></span>

|<span data-ttu-id="d6228-256">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-256">Format string</span></span>|<span data-ttu-id="d6228-257">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-257">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d6228-258">G/g (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-258">G/g (default)</span></span>| |
|<span data-ttu-id="d6228-259">D/d</span><span class="sxs-lookup"><span data-stu-id="d6228-259">D/d</span></span>|<span data-ttu-id="d6228-260">32767</span><span class="sxs-lookup"><span data-stu-id="d6228-260">32767</span></span>|
|<span data-ttu-id="d6228-261">N/n</span><span class="sxs-lookup"><span data-stu-id="d6228-261">N/n</span></span>|<span data-ttu-id="d6228-262">32,767</span><span class="sxs-lookup"><span data-stu-id="d6228-262">32,767</span></span>|       
|<span data-ttu-id="d6228-263">X/x</span><span class="sxs-lookup"><span data-stu-id="d6228-263">X/x</span></span>|<span data-ttu-id="d6228-264">7fff</span><span class="sxs-lookup"><span data-stu-id="d6228-264">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out long value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Long, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int64 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-265">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-265">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-266">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-266">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-267">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-267">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-268">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-268">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-269">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-269">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-270">分析 Utf8 字符串开头的 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-270">Parses an <see cref="T:System.Int64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-271">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-271"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-272">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-272">Formats supported:</span></span>

|<span data-ttu-id="d6228-273">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-273">Format string</span></span>|<span data-ttu-id="d6228-274">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-274">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d6228-275">G/g (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-275">G/g (default)</span></span>| |
|<span data-ttu-id="d6228-276">D/d</span><span class="sxs-lookup"><span data-stu-id="d6228-276">D/d</span></span>|<span data-ttu-id="d6228-277">32767</span><span class="sxs-lookup"><span data-stu-id="d6228-277">32767</span></span>|
|<span data-ttu-id="d6228-278">N/n</span><span class="sxs-lookup"><span data-stu-id="d6228-278">N/n</span></span>|<span data-ttu-id="d6228-279">32,767</span><span class="sxs-lookup"><span data-stu-id="d6228-279">32,767</span></span>|       
|<span data-ttu-id="d6228-280">X/x</span><span class="sxs-lookup"><span data-stu-id="d6228-280">X/x</span></span>|<span data-ttu-id="d6228-281">7fff</span><span class="sxs-lookup"><span data-stu-id="d6228-281">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out sbyte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.SByte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As SByte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * sbyte * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.SByte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-282">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-282">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-283">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-283">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-284">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-284">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-285">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-285">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-286">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-286">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-287">分析 Utf8 字符串开头的 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-287">Parses an <see cref="T:System.SByte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-288">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-288"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-289">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-289">Formats supported:</span></span> 

|<span data-ttu-id="d6228-290">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-290">Format string</span></span>|<span data-ttu-id="d6228-291">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-291">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d6228-292">G/g (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-292">G/g (default)</span></span>| |
|<span data-ttu-id="d6228-293">D/d</span><span class="sxs-lookup"><span data-stu-id="d6228-293">D/d</span></span>|<span data-ttu-id="d6228-294">122</span><span class="sxs-lookup"><span data-stu-id="d6228-294">122</span></span>|
|<span data-ttu-id="d6228-295">N/n</span><span class="sxs-lookup"><span data-stu-id="d6228-295">N/n</span></span>|<span data-ttu-id="d6228-296">122</span><span class="sxs-lookup"><span data-stu-id="d6228-296">122</span></span>|       
|<span data-ttu-id="d6228-297">X/x</span><span class="sxs-lookup"><span data-stu-id="d6228-297">X/x</span></span>|<span data-ttu-id="d6228-298">7a</span><span class="sxs-lookup"><span data-stu-id="d6228-298">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out float value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Single@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Single, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * single * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-299">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-299">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-300">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-300">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-301">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-301">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-302">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-302">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-303">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-303">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-304">分析 Utf8 字符串开头的 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-304">Parses a <see cref="T:System.Single" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-305">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-305"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-306">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-306">Formats supported:</span></span> 

<span data-ttu-id="d6228-307">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-307">Format string</span></span>|<span data-ttu-id="d6228-308">示例应为 fornmat</span><span class="sxs-lookup"><span data-stu-id="d6228-308">Example expected fornmat</span></span>|<span data-ttu-id="d6228-309">注释</span><span class="sxs-lookup"><span data-stu-id="d6228-309">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d6228-310">G/g (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-310">G/g  (default)</span></span>| |  
|<span data-ttu-id="d6228-311">F/f</span><span class="sxs-lookup"><span data-stu-id="d6228-311">F/f</span></span>|<span data-ttu-id="d6228-312">12.45</span><span class="sxs-lookup"><span data-stu-id="d6228-312">12.45</span></span>|<span data-ttu-id="d6228-313">固定点</span><span class="sxs-lookup"><span data-stu-id="d6228-313">Fixed point</span></span>|
|<span data-ttu-id="d6228-314">E/e</span><span class="sxs-lookup"><span data-stu-id="d6228-314">E/e</span></span>|<span data-ttu-id="d6228-315">1.245000 e1</span><span class="sxs-lookup"><span data-stu-id="d6228-315">1.245000e1</span></span>|<span data-ttu-id="d6228-316">指数</span><span class="sxs-lookup"><span data-stu-id="d6228-316">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out TimeSpan value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.TimeSpan&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.TimeSpan@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As TimeSpan, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * TimeSpan * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-317">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-317">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-318">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-318">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-319">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-319">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-320">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-320">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-321">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-321">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-322">分析 Utf8 字符串开头的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-322">Parses a <see cref="T:System.TimeSpan" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-323">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-323"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-324">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-324">Formats supported:</span></span> 

|<span data-ttu-id="d6228-325">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-325">Format string</span></span>|<span data-ttu-id="d6228-326">预期格式</span><span class="sxs-lookup"><span data-stu-id="d6228-326">Expected format</span></span>|<span data-ttu-id="d6228-327">注释</span><span class="sxs-lookup"><span data-stu-id="d6228-327">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d6228-328">默认) 为 c/t/T (</span><span class="sxs-lookup"><span data-stu-id="d6228-328">c/t/T (default)</span></span>|<span data-ttu-id="d6228-329">[-][d.]hh:mm:ss[.fffffff]</span><span class="sxs-lookup"><span data-stu-id="d6228-329">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="d6228-330"> (常量格式) </span><span class="sxs-lookup"><span data-stu-id="d6228-330">(constant format)</span></span>|
|<span data-ttu-id="d6228-331">G</span><span class="sxs-lookup"><span data-stu-id="d6228-331">G</span></span>|<span data-ttu-id="d6228-332">[-]d:hh:mm:ss.fffffff</span><span class="sxs-lookup"><span data-stu-id="d6228-332">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="d6228-333"> (常规长) </span><span class="sxs-lookup"><span data-stu-id="d6228-333">(general long)</span></span>|
|<span data-ttu-id="d6228-334">g</span><span class="sxs-lookup"><span data-stu-id="d6228-334">g</span></span>|<span data-ttu-id="d6228-335">[-][d：][h] h:mm： ss [. f [f [f [f [f [f [f]]]]]]</span><span class="sxs-lookup"><span data-stu-id="d6228-335">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="d6228-336"> (常规简短) </span><span class="sxs-lookup"><span data-stu-id="d6228-336">(general short)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ushort value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UShort, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint16 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-337">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-337">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-338">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-338">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-339">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-339">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-340">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-340">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-341">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-341">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-342">分析 Utf8 字符串开头的 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-342">Parses a <see cref="T:System.UInt16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-343">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-343"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-344">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-344">Formats supported:</span></span>

|<span data-ttu-id="d6228-345">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-345">Format string</span></span>|<span data-ttu-id="d6228-346">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-346">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d6228-347">G/g (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-347">G/g (default)</span></span>| |
|<span data-ttu-id="d6228-348">D/d</span><span class="sxs-lookup"><span data-stu-id="d6228-348">D/d</span></span>|<span data-ttu-id="d6228-349">32767</span><span class="sxs-lookup"><span data-stu-id="d6228-349">32767</span></span>|
|<span data-ttu-id="d6228-350">N/n</span><span class="sxs-lookup"><span data-stu-id="d6228-350">N/n</span></span>|<span data-ttu-id="d6228-351">32,767</span><span class="sxs-lookup"><span data-stu-id="d6228-351">32,767</span></span>|       
|<span data-ttu-id="d6228-352">X/x</span><span class="sxs-lookup"><span data-stu-id="d6228-352">X/x</span></span>|<span data-ttu-id="d6228-353">7fff</span><span class="sxs-lookup"><span data-stu-id="d6228-353">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out uint value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UInteger, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint32 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-354">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-354">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-355">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-355">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-356">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-356">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-357">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-357">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-358">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-358">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-359">分析 Utf8 字符串开头的 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-359">Parses a <see cref="T:System.UInt32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-360">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-360"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-361">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-361">Formats supported:</span></span>

|<span data-ttu-id="d6228-362">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-362">Format string</span></span>|<span data-ttu-id="d6228-363">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-363">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d6228-364">G/g (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-364">G/g (default)</span></span>| |
|<span data-ttu-id="d6228-365">D/d</span><span class="sxs-lookup"><span data-stu-id="d6228-365">D/d</span></span>|<span data-ttu-id="d6228-366">32767</span><span class="sxs-lookup"><span data-stu-id="d6228-366">32767</span></span>|
|<span data-ttu-id="d6228-367">N/n</span><span class="sxs-lookup"><span data-stu-id="d6228-367">N/n</span></span>|<span data-ttu-id="d6228-368">32,767</span><span class="sxs-lookup"><span data-stu-id="d6228-368">32,767</span></span>|       
|<span data-ttu-id="d6228-369">X/x</span><span class="sxs-lookup"><span data-stu-id="d6228-369">X/x</span></span>|<span data-ttu-id="d6228-370">7fff</span><span class="sxs-lookup"><span data-stu-id="d6228-370">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ulong value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As ULong, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint64 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6228-371">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="d6228-371">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d6228-372">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="d6228-372">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d6228-373">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="d6228-373">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d6228-374">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="d6228-374">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d6228-375">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="d6228-375">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d6228-376">分析 Utf8 字符串开头的 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-376">Parses a <see cref="T:System.UInt64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d6228-377">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6228-377"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d6228-378">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="d6228-378">Formats supported:</span></span>

|<span data-ttu-id="d6228-379">格式字符串</span><span class="sxs-lookup"><span data-stu-id="d6228-379">Format string</span></span>|<span data-ttu-id="d6228-380">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="d6228-380">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d6228-381">G/g (默认值) </span><span class="sxs-lookup"><span data-stu-id="d6228-381">G/g (default)</span></span>| |
|<span data-ttu-id="d6228-382">D/d</span><span class="sxs-lookup"><span data-stu-id="d6228-382">D/d</span></span>|<span data-ttu-id="d6228-383">32767</span><span class="sxs-lookup"><span data-stu-id="d6228-383">32767</span></span>|
|<span data-ttu-id="d6228-384">N/n</span><span class="sxs-lookup"><span data-stu-id="d6228-384">N/n</span></span>|<span data-ttu-id="d6228-385">32,767</span><span class="sxs-lookup"><span data-stu-id="d6228-385">32,767</span></span>|       
|<span data-ttu-id="d6228-386">X/x</span><span class="sxs-lookup"><span data-stu-id="d6228-386">X/x</span></span>|<span data-ttu-id="d6228-387">7fff</span><span class="sxs-lookup"><span data-stu-id="d6228-387">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
