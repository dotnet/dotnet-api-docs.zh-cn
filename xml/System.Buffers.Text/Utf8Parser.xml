<Type Name="Utf8Parser" FullName="System.Buffers.Text.Utf8Parser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="631402208e34b902d0ede4c234b22b37b8275d1a" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100286173" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Parser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Parser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Parser" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Parser" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Parser abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Parser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Memory" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于将 Utf8 字符串分析为常见数据类型的静态方法。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out bool value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] bool&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Boolean@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Boolean, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * bool * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.Boolean" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式： 

|格式字符串|示例格式应为|
|--|--|
|G (默认值) |True/False|
|l|true/false|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out byte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Byte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Byte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * byte * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Byte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.Byte" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式： 

|格式字符串|示例格式应为|
|--|--|
|G/g (默认值) | |
|D/d|122|
|N/n|122|       
|X/x|7a|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTime value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTime&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTime@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTime, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * DateTime * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.DateTime" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式：

|格式字符串|示例格式应为|注释|
|--|--|--|
|G (默认值) |05/25/2017 10:30:15| |
|R|周二，03月 2017 08:08:05 GMT| (RFC 1123) |
|l|周二，03月 2017 08:08:05 gmt| (小写 RFC 1123) |
|O|2017-06-12T05：30： 45.7680000-07：00| (往返) |

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTimeOffset value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTimeOffset&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTimeOffset@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTimeOffset, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * DateTimeOffset * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.DateTimeOffset" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式：

|格式字符串|示例格式应为|注释|
|--|--|--|
|G (默认值) |05/25/2017 10:30:15| |
|R|周二，03月 2017 08:08:05 GMT| (RFC 1123) |
|l|周二，03月 2017 08:08:05 gmt| (小写 RFC 1123) |
|O|2017-06-12T05：30： 45.7680000-07：00| (往返) |

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out decimal value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Decimal&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Decimal@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Decimal, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * decimal * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.Decimal" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式：

|格式字符串|示例格式应为|注释|
|--|--|--|
|G/g (默认值) | |  
|F/f|12.45|固定点|
|E/e|1.245000 e1|指数|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out double value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Double@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Double, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * double * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.Double" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式：

|格式字符串|示例格式应为|注释|
|--|--|--|
|G/g (默认值) | |  
|F/f|12.45|固定点|
|E/e|1.245000 e1|指数|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out Guid value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Guid&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Guid@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Guid, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * Guid * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.Guid" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式：

|格式字符串|预期格式|
|--|--|
|D (默认值) |nnnnnnnn-nnnn-nnnnnnnnnnnn|
|B|{nnnnnnnn-nnnnnnnnnnnn}|
|P| (nnnnnnnn-nnnn nnnnnnnnnnnn) |
|N|nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out short value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Short, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int16 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.Int16" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式：

|格式字符串|示例格式应为|
|--|--|
|G/g (默认值) | |
|D/d|32767|
|N/n|32,767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out int value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Integer, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.Int32" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式：

|格式字符串|示例格式应为|
|--|--|
|G/g (默认值) | |
|D/d|32767|
|N/n|32,767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out long value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Long, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int64 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.Int64" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式：

|格式字符串|示例格式应为|
|--|--|
|G/g (默认值) | |
|D/d|32767|
|N/n|32,767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out sbyte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.SByte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As SByte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * sbyte * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.SByte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.SByte" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式： 

|格式字符串|示例格式应为|
|--|--|
|G/g (默认值) | |
|D/d|122|
|N/n|122|       
|X/x|7a|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out float value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Single@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Single, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * single * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.Single" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式： 

格式字符串|示例应为 fornmat|注释|
|--|--|--|
|G/g (默认值) | |  
|F/f|12.45|固定点|
|E/e|1.245000 e1|指数|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out TimeSpan value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.TimeSpan&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.TimeSpan@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As TimeSpan, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * TimeSpan * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.TimeSpan" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式： 

|格式字符串|预期格式|注释|
|--|--|--|
|默认) 为 c/t/T (|[-][d.]hh:mm:ss[.fffffff]| (常量格式) |
|G|[-]d:hh:mm:ss.fffffff|| (常规长) |
|g|[-][d：][h] h:mm： ss [. f [f [f [f [f [f [f]]]]]]| (常规简短) |

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ushort value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UShort, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint16 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.UInt16" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式：

|格式字符串|示例格式应为|
|--|--|
|G/g (默认值) | |
|D/d|32767|
|N/n|32,767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out uint value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UInteger, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint32 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.UInt32" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式：

|格式字符串|示例格式应为|
|--|--|
|G/g (默认值) | |
|D/d|32767|
|N/n|32,767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ulong value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As ULong, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint64 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">要分析的 Utf8 字符串。</param>
        <param name="value">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</param>
        <param name="bytesConsumed">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。 如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</param>
        <param name="standardFormat">Utf8 字符串的预期格式。</param>
        <summary>分析 Utf8 字符串开头的 <see cref="T:System.UInt64" />。</summary>
        <returns>如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

支持的格式：

|格式字符串|示例格式应为|
|--|--|
|G/g (默认值) | |
|D/d|32767|
|N/n|32,767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
