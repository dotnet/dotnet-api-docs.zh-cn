<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d71672f047f13118e9a289d313e37dbbc851cf23" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86617901" /></Metadata><TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4f25b-101">定义一组用于在 ASP.NET 生成环境中生成源代码的属性和方法。</span><span class="sxs-lookup"><span data-stu-id="4f25b-101">Defines a set of properties and methods for generating source code within the ASP.NET build environment.</span></span> <span data-ttu-id="4f25b-102">此类为抽象类。</span><span class="sxs-lookup"><span data-stu-id="4f25b-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-103">ASP.NET 生成环境使用 <xref:System.Web.Compilation.BuildProvider> 对象为应用程序中的不同文件类型生成源代码。</span><span class="sxs-lookup"><span data-stu-id="4f25b-103">The ASP.NET build environment uses <xref:System.Web.Compilation.BuildProvider> objects to generate source code for different file types within an application.</span></span> <span data-ttu-id="4f25b-104">从主要派生的类 <xref:System.Web.Compilation.BuildProvider> 提供文件、网页、资源和其他自定义项的源代码。</span><span class="sxs-lookup"><span data-stu-id="4f25b-104">Classes derived from <xref:System.Web.Compilation.BuildProvider> predominantly provide source code for files, Web pages, resources, and other custom items.</span></span>  
  
 <span data-ttu-id="4f25b-105">通常不会直接创建类的实例 <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-105">Typically, you do not create an instance of the <xref:System.Web.Compilation.BuildProvider> class directly.</span></span> <span data-ttu-id="4f25b-106">相反，您实现了一个派生自的类 <xref:System.Web.Compilation.BuildProvider> ，并配置了 <xref:System.Web.Compilation.BuildProvider> 实现以便在 ASP.NET 生成环境中使用。</span><span class="sxs-lookup"><span data-stu-id="4f25b-106">Instead, you implement a class that derives from <xref:System.Web.Compilation.BuildProvider>, and configure the <xref:System.Web.Compilation.BuildProvider> implementation for use within the ASP.NET build environment.</span></span>  
  
 <span data-ttu-id="4f25b-107">类的实例 <xref:System.Web.Compilation.BuildProvider> 与对象一起使用 <xref:System.Web.Compilation.AssemblyBuilder> ，以将一个或多个文件生成到已编译的程序集中。</span><span class="sxs-lookup"><span data-stu-id="4f25b-107">Instances of the <xref:System.Web.Compilation.BuildProvider> class are used with <xref:System.Web.Compilation.AssemblyBuilder> objects to build one or more files into a compiled assembly.</span></span> <span data-ttu-id="4f25b-108"><xref:System.Web.Compilation.BuildProvider>实例以适当的语言为各个文件生成源代码，并且 <xref:System.Web.Compilation.AssemblyBuilder> 对象将每个实例提供的源组合 <xref:System.Web.Compilation.BuildProvider> 到单个程序集中。</span><span class="sxs-lookup"><span data-stu-id="4f25b-108">A <xref:System.Web.Compilation.BuildProvider> instance generates source code in the appropriate language for individual files, and the <xref:System.Web.Compilation.AssemblyBuilder> object combines the source contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly.</span></span>  
  
 <span data-ttu-id="4f25b-109">ASP.NET 生成环境使用类的实例 <xref:System.Web.Compilation.BuildProvider> 在应用程序内生成文件。</span><span class="sxs-lookup"><span data-stu-id="4f25b-109">The ASP.NET build environment uses instances of the <xref:System.Web.Compilation.BuildProvider> class to build files within an application.</span></span> <span data-ttu-id="4f25b-110"><xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>类的属性 <xref:System.Web.Compilation.BuildProvider> 指示要生成的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="4f25b-110">The <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property of the <xref:System.Web.Compilation.BuildProvider> class indicates the path of the file to be built.</span></span> <span data-ttu-id="4f25b-111">应用程序内每个文件的文件扩展名映射到相应的生成提供程序。</span><span class="sxs-lookup"><span data-stu-id="4f25b-111">The file extension of each file within an application is mapped to a corresponding build provider.</span></span> <span data-ttu-id="4f25b-112">ASP.NET 生成环境根据 <xref:System.Web.Compilation.BuildProvider> 文件扩展名为每个文件初始化一个实例，并使用 <xref:System.Web.Compilation.BuildProvider> 方法来生成该文件的源代码。</span><span class="sxs-lookup"><span data-stu-id="4f25b-112">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> instance for each file based on the file extension, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source code for the file.</span></span> <span data-ttu-id="4f25b-113"><xref:System.Web.Compilation.AssemblyBuilder>当从一个或多个文件生成程序集时，ASP.NET 生成环境会将基于首选编译器语言和文件上下文的对象传递给 <xref:System.Web.Compilation.BuildProvider> 方法，以便 <xref:System.Web.Compilation.BuildProvider> 实例可以将其文件的源代码提供给整个程序集。</span><span class="sxs-lookup"><span data-stu-id="4f25b-113">The ASP.NET build environment passes an <xref:System.Web.Compilation.AssemblyBuilder> object based on the preferred compiler language and the context of the file to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that the <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.</span></span>  
  
 <span data-ttu-id="4f25b-114">若要为 ASP.NET 应用程序中的文件类型定义自定义生成操作，你必须从派生一个类 <xref:System.Web.Compilation.BuildProvider> ，在派生类中实现成员以生成文件类型，并为应用程序配置文件中的相应文件扩展名配置生成提供程序。</span><span class="sxs-lookup"><span data-stu-id="4f25b-114">To define custom build actions for a file type within an ASP.NET application, you must derive a class from <xref:System.Web.Compilation.BuildProvider>, implement members within the derived class for building the file type, and configure the build provider for the corresponding file extension within the application configuration file.</span></span>  
  
 <span data-ttu-id="4f25b-115">指定受支持文件的文件扩展名，以及生成提供程序是否支持代码文件、Web 文件、资源文件或所有文件。</span><span class="sxs-lookup"><span data-stu-id="4f25b-115">The  specifies the file extension for supported files, and whether the build provider supports code files, Web files, resource files or all files.</span></span> <span data-ttu-id="4f25b-116">使用 `type` 特性指定生成提供程序实现的完全限定类型名称。</span><span class="sxs-lookup"><span data-stu-id="4f25b-116">Use the `type` attribute to specify the fully qualified type name of the build provider implementation.</span></span> <span data-ttu-id="4f25b-117">使用 <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> 类来指定生成提供程序是应用于 App_Code 目录中的文件，还是应用于 Web 内容目录中的文件、全局或本地资源，还是应用于所有文件。</span><span class="sxs-lookup"><span data-stu-id="4f25b-117">Use the <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> class to specify whether the build provider applies to files in the App_Code directory, to files in a Web content directory, to global or local resources, or to all files.</span></span> <span data-ttu-id="4f25b-118">使用 `extension` 特性可指定用于标识类支持的文件的文件扩展名 <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-118">Use the `extension` attribute to specify the file extension used to identify files that the <xref:System.Web.Compilation.BuildProvider> class supports.</span></span> <span data-ttu-id="4f25b-119">使用 <xref:System.Web.Configuration.BuildProviderCollection> 类检查配置文件中的生成提供程序。</span><span class="sxs-lookup"><span data-stu-id="4f25b-119">Use the <xref:System.Web.Configuration.BuildProviderCollection> class to examine build providers in a configuration file.</span></span> <span data-ttu-id="4f25b-120">有关配置生成提供程序的详细信息，请参阅 [BuildProviders 元素 for 编译 (ASP.NET Settings Schema) ](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)。</span><span class="sxs-lookup"><span data-stu-id="4f25b-120">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 <span data-ttu-id="4f25b-121">若要实现生成提供程序，以便为自定义文件类型生成源代码，请从派生一个类， <xref:System.Web.Compilation.BuildProvider> 并重写 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 方法以为支持的文件类型生成源代码。</span><span class="sxs-lookup"><span data-stu-id="4f25b-121">To implement a build provider that generates source code for a custom file type, derive a class from <xref:System.Web.Compilation.BuildProvider>, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span> <span data-ttu-id="4f25b-122">生成的源以 <xref:System.Web.Compilation.AssemblyBuilder> CodeDOM 图的形式添加到对象中，或以表示物理源代码文件的内容的形式添加。</span><span class="sxs-lookup"><span data-stu-id="4f25b-122">The generated source is added to the <xref:System.Web.Compilation.AssemblyBuilder> object in the form of a CodeDOM graph, or as content that represents a physical source code file.</span></span> <span data-ttu-id="4f25b-123">如果生成提供程序需要特定的编程语言，则重写 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 属性以返回 <xref:System.Web.Compilation.CompilerType> 受支持的编程语言的对象。</span><span class="sxs-lookup"><span data-stu-id="4f25b-123">If the build provider requires a specific programming language, override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span> <span data-ttu-id="4f25b-124">如果生成提供程序不需要特定编程语言，则不要重写 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 属性; 使用基类实现，这表示生成提供程序可以使用任何 .NET Framework 语言，如 Visual Basic 或 c #。</span><span class="sxs-lookup"><span data-stu-id="4f25b-124">If the build provider does not require a specific programming language, do not override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property; use the base class implementation, which indicates that the build provider can use any .NET Framework language, such as Visual Basic or C#.</span></span>  
  
 <span data-ttu-id="4f25b-125">若要实现生成 Web 内容源代码的生成提供程序，请从派生一个类， <xref:System.Web.Compilation.BuildProvider> 并重写 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 方法以返回 <xref:System.Type> 由生成的类的 <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-125">To implement a build provider that generates source code for Web content, derive a class from <xref:System.Web.Compilation.BuildProvider> and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the <xref:System.Type> for the class generated by <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="4f25b-126">重写 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 方法以生成受支持文件提供的类型的源代码。</span><span class="sxs-lookup"><span data-stu-id="4f25b-126">Override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the type provided by the supported file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f25b-127">将自定义 <xref:System.Web.Compilation.BuildProvider> 类添加到 Web.config 文件在 ASP.NET 网站中运行，但不能在 ASP.NET web 应用程序项目中使用。</span><span class="sxs-lookup"><span data-stu-id="4f25b-127">Adding a customized <xref:System.Web.Compilation.BuildProvider> class to the Web.config file works in an ASP.NET Web site but does not work in an ASP.NET Web application project.</span></span> <span data-ttu-id="4f25b-128">在 Web 应用程序项目中， <xref:System.Web.Compilation.BuildProvider> 不能在应用程序中包含由类生成的代码。</span><span class="sxs-lookup"><span data-stu-id="4f25b-128">In a Web application project, the code that is generated by the <xref:System.Web.Compilation.BuildProvider> class cannot be included in the application.</span></span> <span data-ttu-id="4f25b-129">有关详细信息，请参阅 [ASP.NET Web 应用程序项目预编译概述](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887)。</span><span class="sxs-lookup"><span data-stu-id="4f25b-129">For more information, see [ASP.NET Web Application Project Precompilation Overview](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f25b-130">下面的代码示例演示了一个简单的生成提供程序实现，该实现继承自抽象 <xref:System.Web.Compilation.BuildProvider> 基类。</span><span class="sxs-lookup"><span data-stu-id="4f25b-130">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="4f25b-131">生成提供程序会重 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 写 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 基类的、和 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 成员。</span><span class="sxs-lookup"><span data-stu-id="4f25b-131">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span> <span data-ttu-id="4f25b-132">该示例不包括类的实现 `SampleClassGenerator` 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-132">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="4f25b-133">有关详细信息，请参阅 <xref:System.CodeDom.CodeCompileUnit> 类概述。</span><span class="sxs-lookup"><span data-stu-id="4f25b-133">For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f25b-134">初始化 <see cref="T:System.Web.Compilation.BuildProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4f25b-134">Initializes a new instance of the <see cref="T:System.Web.Compilation.BuildProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-135">由于 <xref:System.Web.Compilation.BuildProvider> 类是抽象类，因此不能 <xref:System.Web.Compilation.BuildProvider> 使用构造函数直接创建的实例。</span><span class="sxs-lookup"><span data-stu-id="4f25b-135">Because the <xref:System.Web.Compilation.BuildProvider> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.BuildProvider> directly using the constructor.</span></span>  
  
 <span data-ttu-id="4f25b-136">从类派生时 <xref:System.Web.Compilation.BuildProvider> ，重写构造函数以实现生成提供程序实现的自定义初始化操作。</span><span class="sxs-lookup"><span data-stu-id="4f25b-136">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, override the constructor to implement custom initialization actions for your build provider implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f25b-137">表示生成提供程序为自定义文件类型生成源代码所使用的编译器类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-137">Represents the compiler type used by a build provider to generate source code for a custom file type.</span></span></summary>
        <value><span data-ttu-id="4f25b-138">只读 <see cref="T:System.Web.Compilation.CompilerType" />，表示用于生成虚拟路径的源代码的代码生成器、代码编译器和编译器设置。</span><span class="sxs-lookup"><span data-stu-id="4f25b-138">A read-only <see cref="T:System.Web.Compilation.CompilerType" /> representing the code generator, code compiler, and compiler settings used to build source code for the virtual path.</span></span> <span data-ttu-id="4f25b-139">基类返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4f25b-139">The base class returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-140">使用 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 属性提供用于编译的实现的源代码的设置 <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-140">Use the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to provide the settings for compiling source code for an implementation of <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="4f25b-141"><xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> `null` 如果生成提供程序不需要用于生成和编译源代码的特定代码语言，则属性为。</span><span class="sxs-lookup"><span data-stu-id="4f25b-141">The <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property is `null` if the build provider does not require a specific code language for generating and compiling source code.</span></span>  
  
 <span data-ttu-id="4f25b-142">若要 <xref:System.Web.Compilation.CompilerType> 在生成提供程序实现中设置对象的值，请使用 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> 或 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f25b-142">To set the value for a <xref:System.Web.Compilation.CompilerType> object within a build provider implementation, use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> or <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method.</span></span>  
  
 <span data-ttu-id="4f25b-143"><xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A>属性指定用于为 <xref:System.CodeDom.Compiler.CodeDomProvider> 生成提供程序生成和编译源代码的实现。</span><span class="sxs-lookup"><span data-stu-id="4f25b-143">The <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> property specifies the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that is used to generate and compile source code for a build provider.</span></span> <span data-ttu-id="4f25b-144"><xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>属性定义用于将源代码编译为程序集的设置。</span><span class="sxs-lookup"><span data-stu-id="4f25b-144">The <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> property defines the settings that are used to compile the source code into an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f25b-145">下面的代码示例演示了一个简单的生成提供程序实现，该实现继承自抽象 <xref:System.Web.Compilation.BuildProvider> 基类。</span><span class="sxs-lookup"><span data-stu-id="4f25b-145">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="4f25b-146">生成提供程序会重 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 写 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 基类的、和 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 成员。</span><span class="sxs-lookup"><span data-stu-id="4f25b-146">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCode (assemblyBuilder As AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder"><span data-ttu-id="4f25b-147">引用生成提供程序所生成的源代码的程序集生成器。</span><span class="sxs-lookup"><span data-stu-id="4f25b-147">The assembly builder that references the source code generated by the build provider.</span></span></param>
        <summary><span data-ttu-id="4f25b-148">为生成提供程序的虚拟路径生成源代码，并将源代码添加到指定程序集生成器。</span><span class="sxs-lookup"><span data-stu-id="4f25b-148">Generates source code for the virtual path of the build provider, and adds the source code to a specified assembly builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-149">若要实现生成自定义文件类型的源代码的生成提供程序，请从类派生一个类 <xref:System.Web.Compilation.BuildProvider> ，并重写 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 方法以为支持的文件类型生成源代码。</span><span class="sxs-lookup"><span data-stu-id="4f25b-149">To implement a build provider that generates source code for a custom file type, derive a class from the <xref:System.Web.Compilation.BuildProvider> class, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span>  
  
 <span data-ttu-id="4f25b-150">通常，生成提供程序的 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 实现会读取 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 属性、分析内容，并将生成的源代码添加到指定的 <xref:System.Web.Compilation.AssemblyBuilder> 对象。</span><span class="sxs-lookup"><span data-stu-id="4f25b-150">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="4f25b-151">您可以以 <xref:System.IO.TextWriter> 对象或 CodeDOM 图的形式向程序集提供源代码。</span><span class="sxs-lookup"><span data-stu-id="4f25b-151">You can contribute source code to the assembly in the form of a <xref:System.IO.TextWriter> object or a CodeDOM graph.</span></span> <span data-ttu-id="4f25b-152">若要通过对象将源代码添加到程序集 <xref:System.IO.TextWriter> ，请使用 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f25b-152">To add source code to the assembly through a <xref:System.IO.TextWriter> object, use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="4f25b-153">若要将 CodeDOM 图中的源代码添加到程序集，请使用 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f25b-153">To add source code in a CodeDOM graph to the assembly, use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method.</span></span>  
  
 <span data-ttu-id="4f25b-154">如果生成提供程序以特定编程语言生成源代码，则必须重写 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 属性以返回 <xref:System.Web.Compilation.CompilerType> 受支持的编程语言的对象。</span><span class="sxs-lookup"><span data-stu-id="4f25b-154">If the build provider generates source code in a specific programming language, you must override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f25b-155">下面的代码示例演示了一个简单的生成提供程序实现，该实现继承自抽象 <xref:System.Web.Compilation.BuildProvider> 基类。</span><span class="sxs-lookup"><span data-stu-id="4f25b-155">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="4f25b-156">生成提供程序会重 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 写 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 基类的、和 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 成员。</span><span class="sxs-lookup"><span data-stu-id="4f25b-156">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation"><span data-ttu-id="4f25b-157">动态源代码生成和编译</span><span class="sxs-lookup"><span data-stu-id="4f25b-157">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit : IDictionary -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit : IDictionary -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable"><span data-ttu-id="4f25b-158">当此方法返回时，该参数将包含一个字典，该字典包含源代码中所有关联行号和行杂注。</span><span class="sxs-lookup"><span data-stu-id="4f25b-158">When this method returns, contains a dictionary that contains all associated line numbers and line pragmas of the source code.</span></span> <span data-ttu-id="4f25b-159">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="4f25b-159">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="4f25b-160">表示生成的 CodeDOM 关系图的容器。</span><span class="sxs-lookup"><span data-stu-id="4f25b-160">Represents the container for the generated CodeDOM graph.</span></span></summary>
        <returns><span data-ttu-id="4f25b-161"><see cref="T:System.Web.Compilation.BuildProvider" /> 实例生成的 CodeDOM 关系图的容器。</span><span class="sxs-lookup"><span data-stu-id="4f25b-161">The container for the CodeDOM graph that is generated by the <see cref="T:System.Web.Compilation.BuildProvider" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-162">此方法可在 <xref:System.Web.Compilation.ClientBuildManager> 类中用于语法突出显示和 Visual Studio 中的设计器支持。</span><span class="sxs-lookup"><span data-stu-id="4f25b-162">This method can be used through the <xref:System.Web.Compilation.ClientBuildManager> class for syntax highlighting and designer support in Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="4f25b-163">生成提供程序的虚拟路径的编译结果。</span><span class="sxs-lookup"><span data-stu-id="4f25b-163">The compilation results for the build provider's virtual path.</span></span></param>
        <summary><span data-ttu-id="4f25b-164">生成要在编译后的程序集中保留的字符串。</span><span class="sxs-lookup"><span data-stu-id="4f25b-164">Generates a string to be persisted in the compiled assembly.</span></span></summary>
        <returns><span data-ttu-id="4f25b-165">要保留在生成环境中的字符串；如果 <see cref="T:System.Web.Compilation.BuildProvider" /> 实例不实现 <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4f25b-165">A string to be persisted in the build environment, or <see langword="null" /> if the <see cref="T:System.Web.Compilation.BuildProvider" /> instance does not implement <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-166"><xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>对象的方法 <xref:System.Web.Compilation.BuildManager> 为输入虚拟路径创建生成提供程序的实例，并对对象调用 <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> 方法 <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-166">The <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> method of a <xref:System.Web.Compilation.BuildManager> object creates an instance of a build provider for an input virtual path, and calls the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method on the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="4f25b-167">基类 <xref:System.Web.Compilation.BuildProvider> `null` 为 <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> 方法返回，指示 <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> 未实现。</span><span class="sxs-lookup"><span data-stu-id="4f25b-167">The base <xref:System.Web.Compilation.BuildProvider> class returns `null` for the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method, indicating that <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> is not implemented.</span></span>  
  
 <span data-ttu-id="4f25b-168">某些生成提供程序实现可以实现 <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f25b-168">Certain build provider implementations can implement <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> in place of the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="4f25b-169"><xref:System.Web.Compilation.BuildProvider>对象通常使用 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 来返回 <xref:System.Type> 虚拟路径的对象。</span><span class="sxs-lookup"><span data-stu-id="4f25b-169">A <xref:System.Web.Compilation.BuildProvider> object typically uses <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> to return a <xref:System.Type> object for a virtual path.</span></span> <span data-ttu-id="4f25b-170">但是， <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> 可以使用方法来指示 <xref:System.Web.Compilation.BuildProvider> 对象可以从虚拟路径生成多个类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-170">However, the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method can be used to indicate that a <xref:System.Web.Compilation.BuildProvider> object can generate multiple types from a virtual path.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f25b-171">返回应用程序中默认语言的编译器设置。</span><span class="sxs-lookup"><span data-stu-id="4f25b-171">Returns the compiler settings for the default language in the application.</span></span></summary>
        <returns><span data-ttu-id="4f25b-172"><see cref="T:System.Web.Compilation.CompilerType" />，表示应用程序中默认语言的编译器设置。</span><span class="sxs-lookup"><span data-stu-id="4f25b-172">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the default language in the application.</span></span> <span data-ttu-id="4f25b-173">基类根据应用程序配置文件返回默认编译器。</span><span class="sxs-lookup"><span data-stu-id="4f25b-173">The base class returns the default compiler based on the application configuration file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-174">使用 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> 方法检查生成提供程序的默认编译器类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-174">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span> <span data-ttu-id="4f25b-175">使用 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> 方法检查在生成提供程序中为特定语言名称配置的编译器类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-175">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in a build provider for a specific language name.</span></span>  
  
 <span data-ttu-id="4f25b-176">基类 <xref:System.Web.Compilation.BuildProvider> 使用 `defaultLanguage` 应用程序配置文件的部分中的属性值确定默认编译器类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-176">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the `defaultLanguage` attribute value in the  section of the application configuration file.</span></span> <span data-ttu-id="4f25b-177">如果编译部分中没有默认的语言设置，则使用语言提供程序设置默认的编译器类型 <xref:Microsoft.VisualBasic.VBCodeProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-177">If there is no default language setting in the compilation section, the default compiler type is set using the <xref:Microsoft.VisualBasic.VBCodeProvider> language provider.</span></span>  
  
 <span data-ttu-id="4f25b-178">从类派生时 <xref:System.Web.Compilation.BuildProvider> ，可以使用在 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 实现中设置属性。</span><span class="sxs-lookup"><span data-stu-id="4f25b-178">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property within your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language"><span data-ttu-id="4f25b-179">代码语言名称。</span><span class="sxs-lookup"><span data-stu-id="4f25b-179">A code language name.</span></span></param>
        <summary><span data-ttu-id="4f25b-180">根据指定的语言返回生成提供程序的编译器设置。</span><span class="sxs-lookup"><span data-stu-id="4f25b-180">Returns the compiler settings for the build provider based on the specified language.</span></span></summary>
        <returns><span data-ttu-id="4f25b-181"><see cref="T:System.Web.Compilation.CompilerType" />，根据指定的语言表示生成提供程序的编译器设置。</span><span class="sxs-lookup"><span data-stu-id="4f25b-181">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the build provider based on the specified language.</span></span> <span data-ttu-id="4f25b-182">基类根据应用程序配置文件返回该语言的默认编译器设置。</span><span class="sxs-lookup"><span data-stu-id="4f25b-182">The base class returns the default compiler settings for the language based on the application configuration file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-183">使用 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> 方法检查在生成提供程序中为特定语言名称配置的编译器类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-183">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in the build provider for a specific language name.</span></span> <span data-ttu-id="4f25b-184">使用 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> 方法检查生成提供程序的默认编译器类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-184">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span>  
  
 <span data-ttu-id="4f25b-185">基类 <xref:System.Web.Compilation.BuildProvider> 使用 <xref:System.Web.Configuration.Compiler> 配置文件的对象的属性中的元素来确定默认编译器类型 <xref:System.Web.Configuration.CompilationSection.Compilers%2A> <xref:System.Web.Configuration.CompilationSection> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-185">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the <xref:System.Web.Configuration.Compiler> elements in the <xref:System.Web.Configuration.CompilationSection.Compilers%2A> property of the <xref:System.Web.Configuration.CompilationSection> object for the configuration file.</span></span> <span data-ttu-id="4f25b-186">这等效于检查和配置文件部分中的元素。</span><span class="sxs-lookup"><span data-stu-id="4f25b-186">This is equivalent to examining the  elements in the  and the  elements in the  sections of the configuration file.</span></span> <span data-ttu-id="4f25b-187">例如，对于 `language` 值 VB，基类方法返回一个 <xref:System.Web.Compilation.CompilerType> 与实例的配置设置相对应的对象 <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-187">For example, for the `language` value VB, the base class method returns a <xref:System.Web.Compilation.CompilerType> object that corresponds to the configured settings for an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4f25b-188">从类派生时 <xref:System.Web.Compilation.BuildProvider> ，可以使用 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> 为 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 实现支持的语言设置属性值。</span><span class="sxs-lookup"><span data-stu-id="4f25b-188">When you derive from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property value for the language supported by your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4f25b-189"><paramref name="language" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4f25b-189"><paramref name="language" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="4f25b-190"><paramref name="language" /> 与生成提供程序的已配置编译器不匹配。</span><span class="sxs-lookup"><span data-stu-id="4f25b-190"><paramref name="language" /> does not match a configured compiler for the build provider.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="4f25b-191">生成提供程序的虚拟路径的编译结果。</span><span class="sxs-lookup"><span data-stu-id="4f25b-191">The compilation results for the build provider's virtual path.</span></span></param>
        <summary><span data-ttu-id="4f25b-192">返回生成提供程序从虚拟路径生成的类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-192">Returns a type generated by the build provider from the virtual path.</span></span></summary>
        <returns><span data-ttu-id="4f25b-193">生成提供程序为虚拟路径生成的类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-193">The type that is generated by the build provider for the virtual path.</span></span> <span data-ttu-id="4f25b-194">基类返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4f25b-194">The base class returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-195">若要实现为 Web 内容（如 .aspx 文件）生成源代码的生成提供程序，请从类派生一个类 <xref:System.Web.Compilation.BuildProvider> ，并重写 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 方法以返回生成提供程序生成的类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-195">To implement a build provider that generates source code for Web content such as .aspx files, derive a class from the <xref:System.Web.Compilation.BuildProvider> class and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the type generated by the build provider.</span></span>  
  
 <span data-ttu-id="4f25b-196">ASP.NET 生成系统为每个生成提供程序编译文件，并生成一个 <xref:System.CodeDom.Compiler.CompilerResults> 传递给方法的对象 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-196">The ASP.NET build system compiles files for each build provider, and generates a <xref:System.CodeDom.Compiler.CompilerResults> object, which is passed to the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="4f25b-197">通常，生成提供程序的 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 实现对 <xref:System.Reflection.Assembly.GetType%2A> <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> 输入对象的属性使用方法 `results` 以返回提供的类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-197">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementation uses the <xref:System.Reflection.Assembly.GetType%2A> method on the <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> property of the input `results` object to return the provided type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="4f25b-198">生成提供程序的虚拟路径的编译结果。</span><span class="sxs-lookup"><span data-stu-id="4f25b-198">The compilation results for the build provider's virtual path.</span></span></param>
        <summary><span data-ttu-id="4f25b-199">返回指示生成虚拟路径时所需操作的值。</span><span class="sxs-lookup"><span data-stu-id="4f25b-199">Returns a value indicating actions required when a virtual path is built.</span></span></summary>
        <returns><span data-ttu-id="4f25b-200"><see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> 值，指示在 ASP.NET 生成环境中生成虚拟路径后所需的操作。</span><span class="sxs-lookup"><span data-stu-id="4f25b-200">A <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> value indicating actions required after the virtual path is built within the ASP.NET build environment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-201"><xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>当使用类的实例 <xref:System.Web.Compilation.BuildProvider> 来生成文件并加载已编译的程序集时，ASP.NET 生成环境将使用方法。</span><span class="sxs-lookup"><span data-stu-id="4f25b-201">The <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method is used by the ASP.NET build environment when using instances of the <xref:System.Web.Compilation.BuildProvider> class to build files and load the compiled assemblies.</span></span>  
  
 <span data-ttu-id="4f25b-202">基类 <xref:System.Web.Compilation.BuildProvider> 方法返回 <xref:System.Web.Compilation.BuildProviderResultFlags.Default> 字段值，指示生成虚拟路径时无需执行任何特殊操作。</span><span class="sxs-lookup"><span data-stu-id="4f25b-202">The base <xref:System.Web.Compilation.BuildProvider> class method returns the <xref:System.Web.Compilation.BuildProviderResultFlags.Default> field value, indicating that no special action is required when the virtual path is built.</span></span>  
  
 <span data-ttu-id="4f25b-203">当从类派生时 <xref:System.Web.Compilation.BuildProvider> ，可以实现方法， <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> 为 <xref:System.Web.Compilation.BuildProviderResultFlags> 自定义文件类型或虚拟路径返回不同的值。</span><span class="sxs-lookup"><span data-stu-id="4f25b-203">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can implement the <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method to return a different <xref:System.Web.Compilation.BuildProviderResultFlags> value for your custom file type or virtual path.</span></span> <span data-ttu-id="4f25b-204">例如，如果重新生成虚拟路径需要重新 <xref:System.AppDomain> 加载包含对象，则可以 <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> 从方法返回枚举值 <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-204">For example, if a rebuild of your virtual path requires the containing <xref:System.AppDomain> object to be reloaded, you can return the <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> enumeration value from your <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f25b-205">打开文本读取器以从虚拟路径读取。</span><span class="sxs-lookup"><span data-stu-id="4f25b-205">Opens a text reader for reading from a virtual path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f25b-206">打开文本读取器以从当前生成提供程序对象的虚拟路径读取。</span><span class="sxs-lookup"><span data-stu-id="4f25b-206">Opens a text reader for reading from the virtual path of the current build provider object.</span></span></summary>
        <returns><span data-ttu-id="4f25b-207">打开的 <see cref="T:System.IO.TextReader" />，可用于读取 <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" /> 的内容。</span><span class="sxs-lookup"><span data-stu-id="4f25b-207">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-208">对 <xref:System.IO.TextReader.Read%2A> 返回的对象使用方法 <xref:System.IO.TextReader> ，以读取对象的属性的内容 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-208">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property for a <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="4f25b-209">调用方法后 <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> ，必须使用 <xref:System.IO.TextReader.Close%2A> 方法关闭 <xref:System.IO.TextReader> 对象并释放关联的系统资源。</span><span class="sxs-lookup"><span data-stu-id="4f25b-209">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="4f25b-210">要读取的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="4f25b-210">The virtual path to read.</span></span></param>
        <summary><span data-ttu-id="4f25b-211">打开文本读取器以从指定的虚拟路径读取。</span><span class="sxs-lookup"><span data-stu-id="4f25b-211">Opens a text reader for reading from a specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="4f25b-212">打开的 <see cref="T:System.IO.TextReader" />，可用于读取指定的虚拟路径的内容。</span><span class="sxs-lookup"><span data-stu-id="4f25b-212">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the specified virtual path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-213">对 <xref:System.IO.TextReader.Read%2A> 返回的对象使用方法 <xref:System.IO.TextReader> ，以读取虚拟路径的内容。</span><span class="sxs-lookup"><span data-stu-id="4f25b-213">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="4f25b-214">调用方法后 <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> ，必须使用 <xref:System.IO.TextReader.Close%2A> 方法关闭 <xref:System.IO.TextReader> 对象并释放关联的系统资源。</span><span class="sxs-lookup"><span data-stu-id="4f25b-214">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f25b-215">打开流以从虚拟路径读取。</span><span class="sxs-lookup"><span data-stu-id="4f25b-215">Opens a stream for reading from a virtual path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f25b-216">打开流以读取当前生成提供程序对象的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="4f25b-216">Opens a stream for reading the virtual path of the current build provider object.</span></span></summary>
        <returns><span data-ttu-id="4f25b-217">打开的 <see cref="T:System.IO.Stream" />，可用于读取 <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" /> 的内容。</span><span class="sxs-lookup"><span data-stu-id="4f25b-217">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-218">对 <xref:System.IO.Stream.Read%2A> 返回的对象使用方法 <xref:System.IO.Stream> ，以读取对象的虚拟路径的内容 <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-218">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path for the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="4f25b-219">调用方法后 <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> ，必须使用 <xref:System.IO.Stream.Close%2A> 方法关闭 <xref:System.IO.Stream> 对象并释放关联的系统资源。</span><span class="sxs-lookup"><span data-stu-id="4f25b-219">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="4f25b-220">要读取的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="4f25b-220">The virtual path to read.</span></span></param>
        <summary><span data-ttu-id="4f25b-221">打开流以从指定的虚拟路径读取。</span><span class="sxs-lookup"><span data-stu-id="4f25b-221">Opens a stream for reading from a specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="4f25b-222">打开的 <see cref="T:System.IO.Stream" />，可用于读取指定的虚拟路径的内容。</span><span class="sxs-lookup"><span data-stu-id="4f25b-222">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the specified virtual path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-223">对 <xref:System.IO.Stream.Read%2A> 返回的对象使用方法 <xref:System.IO.Stream> ，以读取虚拟路径的内容。</span><span class="sxs-lookup"><span data-stu-id="4f25b-223">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="4f25b-224">调用方法后 <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> ，必须使用 <xref:System.IO.Stream.Close%2A> 方法关闭 <xref:System.IO.Stream> 对象并释放关联的系统资源。</span><span class="sxs-lookup"><span data-stu-id="4f25b-224">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="4f25b-225">编译器结果。</span><span class="sxs-lookup"><span data-stu-id="4f25b-225">Compiler results.</span></span></param>
        <summary><span data-ttu-id="4f25b-226">当在派生类中被重写时，能够查看编译器错误消息，以便将其修改为提供更多信息。</span><span class="sxs-lookup"><span data-stu-id="4f25b-226">When overridden in a derived class, enables you to review compiler error messages so that you can modify them to provide more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-227">通常，您可以重写此方法，以便您可以在显示编译器错误之前修改它们以使错误文本对用户更有帮助。</span><span class="sxs-lookup"><span data-stu-id="4f25b-227">You typically override this method so that you can modify compiler errors before they are displayed in order to make the error text more helpful to the user.</span></span> <span data-ttu-id="4f25b-228">如果你知道某些错误的上下文，并且可以向用户提供有关如何修复这些错误的信息，这会很有用。</span><span class="sxs-lookup"><span data-stu-id="4f25b-228">This is useful in scenarios where you know the context of certain errors and can provide information to the user about how to fix them.</span></span> <span data-ttu-id="4f25b-229">原始编译器错误消息通常特定于特定的语言构造，可能无法使真实原因或解决方案对用户明显。</span><span class="sxs-lookup"><span data-stu-id="4f25b-229">The original compiler error message is usually specific to a particular language construct and might not make the real cause or solution obvious to the user.</span></span>  
  
 <span data-ttu-id="4f25b-230">您可以通过使用传递给方法的对象来访问这些错误 <xref:System.CodeDom.Compiler.CompilerResults> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-230">You can access the errors by using the <xref:System.CodeDom.Compiler.CompilerResults> object that is passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f25b-231">表示要用生成提供程序生成的源代码进行编译的程序集。</span><span class="sxs-lookup"><span data-stu-id="4f25b-231">Represents the assemblies to compile with the source generated by the build provider.</span></span></summary>
        <value><span data-ttu-id="4f25b-232">程序集的只读集合，可由生成提供程序生成的源代码引用。</span><span class="sxs-lookup"><span data-stu-id="4f25b-232">A read-only collection of assemblies that can be referenced by the source code generated by the build provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-233">ASP.NET 生成环境初始化可供生成提供程序引用的程序集的集合。</span><span class="sxs-lookup"><span data-stu-id="4f25b-233">The ASP.NET build environment initializes the collection of assemblies that are available for reference by the build provider.</span></span> <span data-ttu-id="4f25b-234">生成提供程序生成的源代码可以使用引用的程序集中的公共类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-234">The source code generated by a build provider can use public types in the referenced assemblies.</span></span> <span data-ttu-id="4f25b-235">引用的程序集集合包含在 ASP.NET 应用程序中生成的其他程序集，以及配置文件的元素中列出的程序集。</span><span class="sxs-lookup"><span data-stu-id="4f25b-235">The referenced assembly collection consists of other assemblies built in the ASP.NET application, and assemblies listed in the  element in the configuration file.</span></span>  
  
 <span data-ttu-id="4f25b-236">如果生成提供程序生成引用其他程序集的源代码，则生成提供程序使用方法添加其他程序集 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-236">If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span> <span data-ttu-id="4f25b-237">ASP.NET 生成环境使用由生成提供程序添加的引用的程序集和可供引用的程序集的默认集合来解析程序集编译过程中的外部类型。</span><span class="sxs-lookup"><span data-stu-id="4f25b-237">The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</span></span>  
  
 <span data-ttu-id="4f25b-238"><xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A>集合不包含通过方法添加以供其他生成提供程序引用的程序集 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-238">The <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> collection does not include assemblies that are added for reference by other build providers through the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="providerType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="extension"><span data-ttu-id="4f25b-239">生成提供程序所针对的文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="4f25b-239">The file-name extension that the build provider is for.</span></span></param>
        <param name="providerType"><span data-ttu-id="4f25b-240">生成提供程序类。</span><span class="sxs-lookup"><span data-stu-id="4f25b-240">The build provider class.</span></span></param>
        <summary><span data-ttu-id="4f25b-241">注册一个生成提供程序。</span><span class="sxs-lookup"><span data-stu-id="4f25b-241">Registers a build provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-242">您可以使用此方法来注册生成提供程序，而不是在 Web.config 文件中定义它们。</span><span class="sxs-lookup"><span data-stu-id="4f25b-242">You can use this method to register build providers instead of defining them in the Web.config file.</span></span> <span data-ttu-id="4f25b-243">有关生成提供程序的详细信息，请参阅 <xref:System.Web.Compilation.BuildProvider> buildProviders 的 class And [元素 (For ASP.NET Settings Schema) ](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)。</span><span class="sxs-lookup"><span data-stu-id="4f25b-243">For more information about build providers, see the <xref:System.Web.Compilation.BuildProvider> class and [buildProviders Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f25b-244">表示要由此生成提供程序实现生成的文件。</span><span class="sxs-lookup"><span data-stu-id="4f25b-244">Represents the file to be built by this build provider implementation.</span></span></summary>
        <value><span data-ttu-id="4f25b-245">只读字符串，指定要由此生成提供程序编译的文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="4f25b-245">A read-only string that specifies the virtual path of a file to be compiled by this build provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-246">对象的虚拟路径 <xref:System.Web.Compilation.BuildProvider> 是由生成提供程序编译的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="4f25b-246">The virtual path of a <xref:System.Web.Compilation.BuildProvider> object is the path to the file that is being compiled by the build provider.</span></span> <span data-ttu-id="4f25b-247">例如，如果你已将自定义 <xref:System.Web.Compilation.BuildProvider> 类配置为使用. abc 的自定义扩展来生成网站中的所有文件，如果你的网站名为 WebSite1，并且该网站包含一个名为 abc 的文件，则该 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 属性将包含值 `/WebSite1/Example.abc` 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-247">For example, if you have configured a custom <xref:System.Web.Compilation.BuildProvider> class to build all files in the Web site with the custom extension of .abc, if your Web site is named WebSite1, and the Web site contains a file named Example.abc, the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property contains the value `/WebSite1/Example.abc`.</span></span>  
  
 <span data-ttu-id="4f25b-248">应用程序内每个文件的文件扩展名决定文件类型和文件类型对应的生成提供程序。</span><span class="sxs-lookup"><span data-stu-id="4f25b-248">The file extension of each file within the application determines the file type, and the corresponding build provider for the file type.</span></span> <span data-ttu-id="4f25b-249">ASP.NET 生成环境根据 <xref:System.Web.Compilation.BuildProvider> 文件类型为每个文件初始化一个对象，并使用 <xref:System.Web.Compilation.BuildProvider> 方法为每个文件生成源。</span><span class="sxs-lookup"><span data-stu-id="4f25b-249">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> object for each file based on the file type, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source for each file.</span></span>  
  
 <span data-ttu-id="4f25b-250">有关配置生成提供程序的详细信息，请参阅 [BuildProviders 元素 for 编译 (ASP.NET Settings Schema) ](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)。</span><span class="sxs-lookup"><span data-stu-id="4f25b-250">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f25b-251">表示在生成提供程序生成代码之前必须生成的虚拟路径的集合。</span><span class="sxs-lookup"><span data-stu-id="4f25b-251">Represents a collection of virtual paths that must be built before the build provider generates code.</span></span></summary>
        <value><span data-ttu-id="4f25b-252">字符串的只读集合，表示生成提供程序的该实例依赖的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="4f25b-252">A read-only collection of strings, representing the virtual paths that this instance of the build provider is dependent on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f25b-253"><xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A>属性是一个虚拟路径的集合，必须在实例生成源代码之前编译这些路径 <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-253">The <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> property is a collection of virtual paths that must be compiled before the <xref:System.Web.Compilation.BuildProvider> instance generates source code.</span></span> <span data-ttu-id="4f25b-254">中的虚拟路径中的程序集 <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> 将作为对实例的编译的引用添加 <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4f25b-254">The assemblies from the virtual paths in <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> are added as references to the compilation for the <xref:System.Web.Compilation.BuildProvider> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>
