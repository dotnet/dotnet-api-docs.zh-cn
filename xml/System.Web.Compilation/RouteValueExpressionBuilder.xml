<Type Name="RouteValueExpressionBuilder" FullName="System.Web.Compilation.RouteValueExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0209f9d17d31636d3f5f04aee2269195cd73bb34" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89698370" /></Metadata><TypeSignature Language="C#" Value="public class RouteValueExpressionBuilder : System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteValueExpressionBuilder extends System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.RouteValueExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteValueExpressionBuilder&#xA;Inherits ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteValueExpressionBuilder : System::Web::Compilation::ExpressionBuilder" />
  <TypeSignature Language="F#" Value="type RouteValueExpressionBuilder = class&#xA;    inherit ExpressionBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Compilation.ExpressionBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteValueExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteValueExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.Compilation.ExpressionPrefix("Routes")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.Compilation.ExpressionPrefix("Routes")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>检索与路由页中的指定 URL 参数对应的值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Compilation.RouteValueExpressionBuilder>类可以使用标记将服务器控件的属性设置为路由页中某个 URL 参数的值。



## Examples
 下面的示例演示如何使用标记显示 URL 参数的值 `searchterm` 。 路由是使用 `http://www.contoso.com/search/{searchterm}` 作为 URL 模式来定义的。

```
<asp:Label ID="Label1" runat="server"
    text="<%$ RouteValue:searchterm %>">
</asp:Label>
```

 如果通过 URL 请求页面 `http://www.contoso.com/search/Bicycles` ，则 <xref:System.Web.UI.WebControls.Label> 控件将显示 "自行车"。

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)">ASP.NET 表达式概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteValueExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteValueExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteValueExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Compilation.RouteValueExpressionBuilder" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)">ASP.NET 表达式概述</related>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteValueExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : obj * System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; obj" Usage="routeValueExpressionBuilder.EvaluateExpression (target, entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target">表达式所绑定的控件。</param>
        <param name="entry">表达式绑定到的属性。</param>
        <param name="parsedData">（此实现中不使用此参数。）</param>
        <param name="context">控件或页的属性。</param>
        <summary>检索与指定路由键对应的值。</summary>
        <returns>与为当前页指定的 URL 参数对应的值。 如果 <paramref name="target" /> 为 <see langword="null" /> 或者不是从 <see cref="T:System.Web.UI.Control" /> 派生的，则此方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 `<%$ RouteValue:urlparameter %>` 在无编译页中遇到窗体的表达式时，ASP.NET 将调用此方法。 此方法 <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> 通过调用方法来重写 <xref:System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue%2A> 方法。 它 <xref:System.Web.UI.Page> 从参数中获取对象 `context` ，并从参数获取表达式、控件类型和属性名称 `entry` 。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)">ASP.NET 表达式概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteValueExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetCodeExpression : System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; System.CodeDom.CodeExpression" Usage="routeValueExpressionBuilder.GetCodeExpression (entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry">表达式绑定到的属性。</param>
        <param name="parsedData">表示由 <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> 返回的已分析数据的对象。</param>
        <param name="context">控件或页的属性。</param>
        <summary>返回一个代码表达式，该表达式用于在生成的页类中为属性赋值。</summary>
        <returns>一个表达式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 为页或控件创建 CodeDOM 时，将调用此方法。 <xref:System.CodeDom.CodeExpression>返回的对象表示要添加到生成的页类中的属性分配的代码表达式。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)">ASP.NET 表达式概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetRouteValue">
      <MemberSignature Language="C#" Value="public static object GetRouteValue (System.Web.UI.Page page, string key, Type controlType, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetRouteValue(class System.Web.UI.Page page, string key, class System.Type controlType, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue(System.Web.UI.Page,System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRouteValue (page As Page, key As String, controlType As Type, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetRouteValue(System::Web::UI::Page ^ page, System::String ^ key, Type ^ controlType, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member GetRouteValue : System.Web.UI.Page * string * Type * string -&gt; obj" Usage="System.Web.Compilation.RouteValueExpressionBuilder.GetRouteValue (page, key, controlType, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="controlType" Type="System.Type" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">当前页。</param>
        <param name="key">URL 参数。</param>
        <param name="controlType">表达式所绑定的控件的类型。</param>
        <param name="propertyName">表达式所设置的属性的名称。</param>
        <summary>检索与指定的 URL 参数相对应的值。</summary>
        <returns>与为当前页指定的 URL 参数对应的值。 如果 <paramref name="page" /> 为 <see langword="null" />，<paramref name="page" /> 的 <see cref="P:System.Web.UI.Page.RouteData" /> 属性为 <see langword="null" />，或者 <paramref name="key" /> 为空或为 <see langword="null" />，则此方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法使用的属性检索指定值的相应值 `key` <xref:System.Web.UI.Page.RouteData%2A> `page` 。 然后，它使用 `controlType` 和 `propertyName` 值查找适当的类型转换器，以便将检索到的值转换为正确的类型。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)">ASP.NET 表达式概述</related>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public override bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.RouteValueExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEvaluate : bool" Usage="System.Web.Compilation.RouteValueExpressionBuilder.SupportsEvaluate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否可在未编译的页中计算表达式。</summary>
        <value>总是为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Compilation.RouteValueExpressionBuilder.SupportsEvaluate%2A>属性指示是否已 <xref:System.Web.Compilation.RouteValueExpressionBuilder.EvaluateExpression%2A> 在类中实现方法，以便在未编译的页中返回表达式的值。 <xref:System.Web.Compilation.RouteValueExpressionBuilder>类可以在未编译的页中计算表达式。 因此，它始终返回 `true` 。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)">ASP.NET 表达式概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
