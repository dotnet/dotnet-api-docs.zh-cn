<Type Name="AssemblyBuilder" FullName="System.Web.Compilation.AssemblyBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4dadc087c42dd9555b14f34828abfdf0c1e7baa5" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89782958" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a445e-101">提供一个容器，用以从 ASP.NET 项目内的一个或多个虚拟路径生成程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-101">Provides a container for building an assembly from one or more virtual paths within an ASP.NET project.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a445e-102">类的实例 <xref:System.Web.Compilation.AssemblyBuilder> 与 <xref:System.Web.Compilation.BuildProvider> 类方法一起使用，以将一个或多个文件生成到已编译的程序集中。</span><span class="sxs-lookup"><span data-stu-id="a445e-102">Instances of the <xref:System.Web.Compilation.AssemblyBuilder> class are used with <xref:System.Web.Compilation.BuildProvider> class methods to build one or more files into a compiled assembly.</span></span>  
  
 <span data-ttu-id="a445e-103"><xref:System.Web.Compilation.BuildProvider>类定义各个文件的生成功能， <xref:System.Web.Compilation.AssemblyBuilder> 类将每个实例提供的源代码组合 <xref:System.Web.Compilation.BuildProvider> 到单个程序集中。</span><span class="sxs-lookup"><span data-stu-id="a445e-103">The <xref:System.Web.Compilation.BuildProvider> class defines build functionality for individual files, and the <xref:System.Web.Compilation.AssemblyBuilder> class combines the source code contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly.</span></span> <span data-ttu-id="a445e-104"><xref:System.Web.Compilation.AssemblyBuilder> <xref:System.Web.Compilation.BuildProvider> 当从一个或多个文件生成程序集时，ASP.NET 生成环境会将对象传递给方法，以便每个 <xref:System.Web.Compilation.BuildProvider> 实例都可以为其文件提供整个程序集的源代码。</span><span class="sxs-lookup"><span data-stu-id="a445e-104">The ASP.NET build environment passes an <xref:System.Web.Compilation.AssemblyBuilder> object to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that each <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.</span></span>  
  
 <span data-ttu-id="a445e-105">ASP.NET 生成环境根据属性确定项目中的文件所需的语言和编译器 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-105">The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a445e-106">生成环境基于其编译器设置对文件进行分组，并基于需要相同编译器的文件生成程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-106">The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.</span></span>  
  
 <span data-ttu-id="a445e-107"><xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>属性指示 <xref:System.CodeDom.Compiler.CodeDomProvider> ASP.NET 生成环境使用的实现，该实现由每个实现提供的源代码编译程序集 <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-107">The <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.</span></span>  
  
 <span data-ttu-id="a445e-108"><xref:System.Web.Compilation.BuildProvider>对象使用方法以 CodeDOM 图的形式提供源代码 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-108">A <xref:System.Web.Compilation.BuildProvider> object contributes source code in the form of a CodeDOM graph using the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method.</span></span> <span data-ttu-id="a445e-109"><xref:System.Web.Compilation.BuildProvider>对象使用方法来提供存储在物理文件中的源代码 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-109">A <xref:System.Web.Compilation.BuildProvider> object contributes source code stored in a physical file using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span>  
  
 <span data-ttu-id="a445e-110">每个 <xref:System.Web.Compilation.BuildProvider> 对象使用适当的方法提供源代码后 <xref:System.Web.Compilation.AssemblyBuilder> ，ASP.NET 生成环境将使用 <xref:System.Web.Compilation.AssemblyBuilder> 类将收集的源代码编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-110">After each <xref:System.Web.Compilation.BuildProvider> object contributes source code using the appropriate <xref:System.Web.Compilation.AssemblyBuilder> methods, the ASP.NET build environment uses the <xref:System.Web.Compilation.AssemblyBuilder> class to compile the collected source code into an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a445e-111">下面的代码示例演示了一个简单的生成提供程序实现，该实现继承自抽象 <xref:System.Web.Compilation.BuildProvider> 基类。</span><span class="sxs-lookup"><span data-stu-id="a445e-111">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="a445e-112">生成提供程序会重 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 写 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 基类的、和 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 成员。</span><span class="sxs-lookup"><span data-stu-id="a445e-112">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 <span data-ttu-id="a445e-113">在 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 方法实现中，生成提供程序使用方法为程序集编译添加生成的代码 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-113">In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="a445e-114">该示例不包括类的实现 `SampleClassGenerator` 。</span><span class="sxs-lookup"><span data-stu-id="a445e-114">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="a445e-115">有关详细信息，请参阅 <xref:System.CodeDom.CodeCompileUnit>。</span><span class="sxs-lookup"><span data-stu-id="a445e-115">For more information, see <xref:System.CodeDom.CodeCompileUnit>.</span></span>  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
  </Docs>
  <Members>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyReference (a As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssemblyReference(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Assembly -&gt; unit" Usage="assemblyBuilder.AddAssemblyReference a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="a445e-116">包含在程序集编译中的代码编译单元或源文件所引用的程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-116">An assembly referenced by a code compile unit or source file included in the assembly compilation.</span></span></param>
        <summary><span data-ttu-id="a445e-117">添加为文件生成的源代码所引用的程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-117">Adds an assembly that is referenced by source code generated for a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a445e-118">在 <xref:System.Web.Compilation.BuildProvider> <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> 生成引用输入程序集内的类型的源代码时，实现使用方法。</span><span class="sxs-lookup"><span data-stu-id="a445e-118">A <xref:System.Web.Compilation.BuildProvider> implementation uses the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method when generating source code that references types within the input assembly.</span></span>  
  
 <span data-ttu-id="a445e-119">ASP.NET 生成环境初始化可在属性中通过生成提供程序引用的程序集的默认集合 <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-119">The ASP.NET build environment initializes the default collection of assemblies available for reference through the build provider in the <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a445e-120">如果生成提供程序生成引用其他程序集的源代码，则生成提供程序使用方法添加其他程序集 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-120">If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span> <span data-ttu-id="a445e-121">ASP.NET 生成环境使用由生成提供程序添加的引用的程序集和可供引用的程序集的默认集合来解析程序集编译过程中的外部类型。</span><span class="sxs-lookup"><span data-stu-id="a445e-121">The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</span></span>  
  
 <span data-ttu-id="a445e-122">通常， <xref:System.Web.Compilation.BuildProvider> 对象会将源代码添加到 <xref:System.Web.Compilation.AssemblyBuilder> 方法中的对象 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-122">Typically, a <xref:System.Web.Compilation.BuildProvider> object adds source code to the <xref:System.Web.Compilation.AssemblyBuilder> object in the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method.</span></span> <span data-ttu-id="a445e-123">如果生成提供程序生成使用外部类型的源代码，则生成提供程序使用方法添加该类型的程序集 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-123">If a build provider generates source code that uses an external type, the build provider adds the type's assembly using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a445e-124">使用 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> 方法可添加 <xref:System.Web.Compilation.BuildProvider> 特定文件类型的实例所生成的源代码中所需的引用程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-124">Use the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method to add a referenced assembly required in source code generated by a <xref:System.Web.Compilation.BuildProvider> instance for a specific file type.</span></span> <span data-ttu-id="a445e-125">使用 assembly [元素进行编译 (ASP.NET 设置架构) ](https://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) 配置元素，以配置程序集以在项目中跨多个文件类型进行引用。</span><span class="sxs-lookup"><span data-stu-id="a445e-125">Use the [assemblies Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) configuration element to configure an assembly for reference across multiple file types in a project.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.Web.Compilation.BuildProvider buildProvider, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCodeCompileUnit (buildProvider As BuildProvider, compileUnit As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCodeCompileUnit(System::Web::Compilation::BuildProvider ^ buildProvider, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="member this.AddCodeCompileUnit : System.Web.Compilation.BuildProvider * System.CodeDom.CodeCompileUnit -&gt; unit" Usage="assemblyBuilder.AddCodeCompileUnit (buildProvider, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="buildProvider"><span data-ttu-id="a445e-126">正在生成 <paramref name="compileUnit" /> 的版本提供程序。</span><span class="sxs-lookup"><span data-stu-id="a445e-126">The build provider generating <paramref name="compileUnit" />.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="a445e-127">要包含在程序集编译中的代码编译单元。</span><span class="sxs-lookup"><span data-stu-id="a445e-127">The code compile unit to include in the assembly compilation.</span></span></param>
        <summary><span data-ttu-id="a445e-128">以 CodeDOM 图的形式为程序集添加源代码。</span><span class="sxs-lookup"><span data-stu-id="a445e-128">Adds source code for the assembly in the form of a CodeDOM graph.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a445e-129">为 <xref:System.Web.Compilation.BuildProvider> <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> 虚拟路径生成 CodeDOM 图时，实现调用方法。</span><span class="sxs-lookup"><span data-stu-id="a445e-129">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method when generating a CodeDOM graph for a virtual path.</span></span> <span data-ttu-id="a445e-130">用添加的源代码 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> 包含在程序集编译中。</span><span class="sxs-lookup"><span data-stu-id="a445e-130">Source code added with <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> is included in the assembly compilation.</span></span>  
  
 <span data-ttu-id="a445e-131">通常，生成提供程序的 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 方法实现读取 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 属性，分析内容，然后将生成的源代码添加到指定的 <xref:System.Web.Compilation.AssemblyBuilder> 对象。</span><span class="sxs-lookup"><span data-stu-id="a445e-131">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="a445e-132">生成提供程序使用 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> 方法将源代码作为 CodeDOM 图形添加到程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-132">The build provider uses the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method to add source code as a CodeDOM graph to the assembly.</span></span> <span data-ttu-id="a445e-133">此外，生成提供程序还可以使用 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 方法将源代码作为物理文件添加到程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-133">Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method to add source code as a physical file to the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a445e-134">获取用于将源代码生成为程序集的编译器。</span><span class="sxs-lookup"><span data-stu-id="a445e-134">Gets the compiler used to build source code into an assembly.</span></span></summary>
        <value><span data-ttu-id="a445e-135">一个只读 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 实现，用于将每个版本提供程序提供的源代码编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-135">A read-only <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation used for compiling source code contributed by each build provider into an assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a445e-136"><xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>属性指示 <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> ASP.NET 生成环境使用的实现，该实现由每个实现提供的源代码编译程序集 <xref:System.Web.Compilation.BuildProvider> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-136">The <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.</span></span>  
  
 <span data-ttu-id="a445e-137">ASP.NET 生成环境根据属性确定项目中的文件所需的语言和编译器 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-137">The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a445e-138">生成环境基于其编译器设置对文件进行分组，并基于需要相同编译器的文件生成程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-138">The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
        <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeFile">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextWriter CreateCodeFile(class System.Web.Compilation.BuildProvider buildProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCodeFile (buildProvider As BuildProvider) As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextWriter ^ CreateCodeFile(System::Web::Compilation::BuildProvider ^ buildProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateCodeFile : System.Web.Compilation.BuildProvider -&gt; System.IO.TextWriter" Usage="assemblyBuilder.CreateCodeFile buildProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
      </Parameters>
      <Docs>
        <param name="buildProvider"><span data-ttu-id="a445e-139">正在生成代码源文件的版本提供程序。</span><span class="sxs-lookup"><span data-stu-id="a445e-139">The build provider generating the code source file.</span></span></param>
        <summary><span data-ttu-id="a445e-140">允许版本提供程序创建临时源文件，并在程序集编译中包含此源文件。</span><span class="sxs-lookup"><span data-stu-id="a445e-140">Allows a build provider to create a temporary source file, and include the source file in the assembly compilation.</span></span></summary>
        <returns><span data-ttu-id="a445e-141">可用于将源代码写入临时文件的开放 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a445e-141">An open <see cref="T:System.IO.TextWriter" /> that can be used to write source code to a temporary file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a445e-142"><xref:System.Web.Compilation.BuildProvider> <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 当生成虚拟路径的源文件时，实现会调用方法。</span><span class="sxs-lookup"><span data-stu-id="a445e-142">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method when generating a source file for a virtual path.</span></span> <span data-ttu-id="a445e-143">用添加的源代码 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 包含在程序集编译中。</span><span class="sxs-lookup"><span data-stu-id="a445e-143">Source code added with <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> is included in the assembly compilation.</span></span>  
  
 <span data-ttu-id="a445e-144">通常，生成提供程序 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 方法实现读取 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 属性，分析内容，然后将生成的源代码添加到指定的 <xref:System.Web.Compilation.AssemblyBuilder> 对象。</span><span class="sxs-lookup"><span data-stu-id="a445e-144">Typically, a build provider <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="a445e-145">生成提供程序使用 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 方法将源代码作为物理文件添加到程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-145">The build provider uses the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method to add source code as a physical file to the assembly.</span></span> <span data-ttu-id="a445e-146">此外，生成提供程序还可以使用 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> 方法将源代码作为 CodeDOM 图添加到程序集。</span><span class="sxs-lookup"><span data-stu-id="a445e-146">Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method to add source code as a CodeDOM graph to the assembly.</span></span>  
  
 <span data-ttu-id="a445e-147">调用后 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> ，生成提供程序使用返回的对象编写源文件内容 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-147">After calling <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>, the build provider writes the source file contents using the returned <xref:System.IO.TextWriter> object.</span></span> <span data-ttu-id="a445e-148">写入源文件后， <xref:System.Web.Compilation.BuildProvider> 对象必须使用 <xref:System.IO.TextWriter.Close%2A> 方法关闭 <xref:System.IO.TextWriter> 对象并释放关联的系统资源。</span><span class="sxs-lookup"><span data-stu-id="a445e-148">After writing the source file, the <xref:System.Web.Compilation.BuildProvider> object must use the <xref:System.IO.TextWriter.Close%2A> method to close the <xref:System.IO.TextWriter> object and free associated system resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a445e-149">下面的代码示例演示了一个简单的生成提供程序实现，该实现继承自抽象 <xref:System.Web.Compilation.BuildProvider> 基类。</span><span class="sxs-lookup"><span data-stu-id="a445e-149">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="a445e-150">生成提供程序会重 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 写 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 基类的、和 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 成员。</span><span class="sxs-lookup"><span data-stu-id="a445e-150">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 <span data-ttu-id="a445e-151">在 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 方法实现中，生成提供程序使用方法为程序集编译添加生成的代码 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-151">In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="a445e-152">该示例不包括类的实现 `SampleClassGenerator` 。</span><span class="sxs-lookup"><span data-stu-id="a445e-152">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="a445e-153">有关详细信息，请参阅 <xref:System.CodeDom.CodeCompileUnit>。</span><span class="sxs-lookup"><span data-stu-id="a445e-153">For more information, see <xref:System.CodeDom.CodeCompileUnit>.</span></span>  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmbeddedResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream CreateEmbeddedResource(class System.Web.Compilation.BuildProvider buildProvider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEmbeddedResource (buildProvider As BuildProvider, name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ CreateEmbeddedResource(System::Web::Compilation::BuildProvider ^ buildProvider, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateEmbeddedResource : System.Web.Compilation.BuildProvider * string -&gt; System.IO.Stream" Usage="assemblyBuilder.CreateEmbeddedResource (buildProvider, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildProvider"><span data-ttu-id="a445e-154">正在生成资源的版本提供程序。</span><span class="sxs-lookup"><span data-stu-id="a445e-154">The build provider generating the resource.</span></span></param>
        <param name="name"><span data-ttu-id="a445e-155">要创建的资源文件的名称。</span><span class="sxs-lookup"><span data-stu-id="a445e-155">The name of the resource file to be created.</span></span></param>
        <summary><span data-ttu-id="a445e-156">允许版本提供程序创建要包含在程序集编译中的资源文件。</span><span class="sxs-lookup"><span data-stu-id="a445e-156">Allows a build provider to create a resource file to include in the assembly compilation.</span></span></summary>
        <returns><span data-ttu-id="a445e-157">可用于写资源的开放 <see cref="T:System.IO.Stream" />，这些资源包含在程序集编译中。</span><span class="sxs-lookup"><span data-stu-id="a445e-157">An open <see cref="T:System.IO.Stream" /> that can be used to write resources, which are included in the assembly compilation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a445e-158">调用方法后 <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> ， <xref:System.Web.Compilation.BuildProvider> 对象使用返回的对象写入资源文件内容 <xref:System.IO.Stream> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-158">After calling the <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> method, a <xref:System.Web.Compilation.BuildProvider> object writes the resource file contents using the returned <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="a445e-159">例如，生成提供程序可以使用对象写入资源 <xref:System.Resources.ResourceWriter> 。</span><span class="sxs-lookup"><span data-stu-id="a445e-159">For example, the build provider can write the resources using a <xref:System.Resources.ResourceWriter> object.</span></span> <span data-ttu-id="a445e-160">写入资源文件后，生成提供程序必须使用 <xref:System.IO.Stream.Close%2A> 方法关闭 <xref:System.IO.Stream> 对象并释放关联的系统资源。</span><span class="sxs-lookup"><span data-stu-id="a445e-160">After writing the resource file, the build provider must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a445e-161"><paramref name="name" />不是有效的文件名。</span><span class="sxs-lookup"><span data-stu-id="a445e-161"><paramref name="name" /> is not a valid file name.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeFactory">
      <MemberSignature Language="C#" Value="public void GenerateTypeFactory (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateTypeFactory(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateTypeFactory (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateTypeFactory(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypeFactory : string -&gt; unit" Usage="assemblyBuilder.GenerateTypeFactory typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="a445e-162">要生成的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="a445e-162">The name of the type to generate.</span></span></param>
        <summary><span data-ttu-id="a445e-163">将类型的快速对象工厂模板插入到编译后的程序集中。</span><span class="sxs-lookup"><span data-stu-id="a445e-163">Inserts a fast object factory template for a type into the compiled assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a445e-164"><xref:System.Web.Compilation.BuildProvider>实现调用 <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> 方法以优化类型实例的频繁创建的性能。</span><span class="sxs-lookup"><span data-stu-id="a445e-164">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> method to optimize performance for frequent creations of type instances.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetTempFilePhysicalPath">
      <MemberSignature Language="C#" Value="public string GetTempFilePhysicalPath (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTempFilePhysicalPath(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTempFilePhysicalPath (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTempFilePhysicalPath(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.GetTempFilePhysicalPath : string -&gt; string" Usage="assemblyBuilder.GetTempFilePhysicalPath extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension"><span data-ttu-id="a445e-165">临时文件使用的文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="a445e-165">The file extension to use for the temporary file.</span></span></param>
        <summary><span data-ttu-id="a445e-166">生成临时文件路径。</span><span class="sxs-lookup"><span data-stu-id="a445e-166">Generates a temporary file path.</span></span></summary>
        <returns><span data-ttu-id="a445e-167">指向临时文件的路径，带有指定的文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="a445e-167">A path to a temporary file, with the specified file extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a445e-168"><xref:System.Web.Compilation.BuildProvider>实现调用 <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> 方法，以获取编译程序集后自动删除的临时文件路径。</span><span class="sxs-lookup"><span data-stu-id="a445e-168">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> method to get a temporary file path that is deleted automatically after the assembly is compiled.</span></span>  
  
 <span data-ttu-id="a445e-169"><xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A>方法生成唯一的临时文件路径，但不创建文件。</span><span class="sxs-lookup"><span data-stu-id="a445e-169">The <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> method generates a unique temporary file path, but does not create the file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
      </Docs>
    </Member>
  </Members>
</Type>
