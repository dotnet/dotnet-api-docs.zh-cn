<Type Name="IBindingRuntimePreferences" FullName="System.ServiceModel.Channels.IBindingRuntimePreferences">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcc679b1133127b4f86e81a32af13a2bf4add33b" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83933959" /></Metadata><TypeSignature Language="C#" Value="public interface IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type IBindingRuntimePreferences = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="68d94-101">定义可选的协定，绑定通过实现该协定，可以指定传入请求是由服务同步处理还是异步处理。</span><span class="sxs-lookup"><span data-stu-id="68d94-101">Defines the optional contract that a binding can implement to specify whether incoming requests are handled synchronously or asynchronously by the service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d94-102">在某些情况下，绑定使用同步 <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> 或 <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> 方法处理消息可能更加有效。</span><span class="sxs-lookup"><span data-stu-id="68d94-102">In some cases it may be more efficient for a binding to process messages with the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods.</span></span> <span data-ttu-id="68d94-103"><xref:System.ServiceModel.Channels.Binding> 类可以选择实现 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>，从而指示调用方这是优先选择。</span><span class="sxs-lookup"><span data-stu-id="68d94-103">A <xref:System.ServiceModel.Channels.Binding> class can optionally implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> to indicate to callers that this is preferred.</span></span>  
  
 <span data-ttu-id="68d94-104">如果绑定未实现 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>，则 Windows Communication Foundation （WCF）服务模型运行时层默认为使用 `Receive` 和 `Request` 方法的异步版本。</span><span class="sxs-lookup"><span data-stu-id="68d94-104">If a binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the Windows Communication Foundation (WCF) Service Model Runtime layer defaults to using the asynchronous versions of the `Receive` and `Request` methods.</span></span> <span data-ttu-id="68d94-105">如果绑定确实实现 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>，WCF 服务模型运行时层会检查 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> 的值，并使用它来确定是否调用这些方法（<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> 或 <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>）或异步版本（<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> 和 <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> 或 <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> 和 <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>的同步版本。</span><span class="sxs-lookup"><span data-stu-id="68d94-105">If a binding does implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the WCF Service Model Runtime layer checks the value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> and uses that to determine whether to call the synchronous versions of the these methods (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) or the asynchronous versions (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</span></span> <span data-ttu-id="68d94-106">如果绑定实现 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> 并从 `true` 属性返回 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>，则建议使用同步的 <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> 和 <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> 方法从通道接收消息。</span><span class="sxs-lookup"><span data-stu-id="68d94-106">If <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> is implemented by the binding and returns `true` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods to receive messages from the channel.</span></span> <span data-ttu-id="68d94-107">如果绑定不实现 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>，或从 `false` 属性返回 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>，则建议使用异步的 <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> 和 <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> 或 <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> 和 <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="68d94-107">If the binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> or returns `false` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> methods.</span></span>  
  
 <span data-ttu-id="68d94-108">无论 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> 属性返回什么值，所有绑定仍然必须为所实现的特定通道类型提供 `Receive` 方法同步版本和异步版本的有效实现。</span><span class="sxs-lookup"><span data-stu-id="68d94-108">Regardless of the value returned by the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, all bindings must still provide valid implementations of both the synchronous and asynchronous versions of the `Receive` methods for the specific channel types implemented.</span></span> <span data-ttu-id="68d94-109">有关实现自定义通道的详细信息，请参阅[开发渠道](/dotnet/framework/wcf/extending/developing-channels)。</span><span class="sxs-lookup"><span data-stu-id="68d94-109">For more information about implementing custom channels, see [Developing Channels](/dotnet/framework/wcf/extending/developing-channels).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68d94-110">下面的示例演示实现 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> 接口的绑定是如何实现的。</span><span class="sxs-lookup"><span data-stu-id="68d94-110">The following example shows the implementation of a binding that implements the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> interface.</span></span> <span data-ttu-id="68d94-111">此代码取自[块区通道](/dotnet/framework/wcf/samples/chunking-channel)示例：</span><span class="sxs-lookup"><span data-stu-id="68d94-111">This code is taken from the [Chunking Channel](/dotnet/framework/wcf/samples/chunking-channel) sample:</span></span>  
  
 [!code-csharp[S_UE_ChunkingChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68d94-112">获取一个值，该值指示传入请求是由同步处理更加有效还是异步处理更加有效。</span><span class="sxs-lookup"><span data-stu-id="68d94-112">Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="68d94-113">如果可以同步地处理请求，则 <see langword="true" />;否则 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68d94-113"><see langword="true" /> if requests can be handled more efficiently synchronously; otherwise <see langword="false" />.</span></span> <span data-ttu-id="68d94-114">默认值为 <see langword="false" />，即异步处理请求。</span><span class="sxs-lookup"><span data-stu-id="68d94-114">The default is <see langword="false" />, to handle requests asynchronously.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68d94-115">Windows Communication Foundation （WCF）提供的标准（系统提供）绑定已实现此接口，并且在某些情况下，会重写默认值以同步处理传入消息。</span><span class="sxs-lookup"><span data-stu-id="68d94-115">The standard (system-provided) bindings provided by Windows Communication Foundation (WCF) have implemented this interface and in some cases override the default value to process incoming messages synchronously.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChunkingChannel#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
