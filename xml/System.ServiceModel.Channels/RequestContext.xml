<Type Name="RequestContext" FullName="System.ServiceModel.Channels.RequestContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0309c7318aac8ab2a4ef214b78ba9cd2944097ec" /><Meta Name="ms.sourcegitcommit" Value="8d63c26d96c3714a8a31c9727613bb05c11660f2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/04/2020" /><Meta Name="ms.locfileid" Value="89467920" /></Metadata><TypeSignature Language="C#" Value="public abstract class RequestContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RequestContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.RequestContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RequestContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestContext abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type RequestContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0d810-101">提供一个与传入请求关联的答复。</span><span class="sxs-lookup"><span data-stu-id="0d810-101">Provides a reply that is correlated to an incoming request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d810-102">从 <xref:System.ServiceModel.Channels.IReplyChannel> 可获取请求上下文。</span><span class="sxs-lookup"><span data-stu-id="0d810-102">You get a request context from an <xref:System.ServiceModel.Channels.IReplyChannel>.</span></span> <span data-ttu-id="0d810-103">每个 <xref:System.ServiceModel.Channels.RequestContext> 都会包装答复请求所需的信息，因此等待每个请求消息接收答复时不需要阻止通道。</span><span class="sxs-lookup"><span data-stu-id="0d810-103">Each <xref:System.ServiceModel.Channels.RequestContext> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply.</span></span>  
  
 <span data-ttu-id="0d810-104">在请求/答复模型中， <xref:System.ServiceModel.Channels.RequestContext> 对象是传入的请求与发出的答复之间的链接。当服务器收到请求时，它将提供一个 <xref:System.ServiceModel.Channels.RequestContext> 表示通道请求的实例。</span><span class="sxs-lookup"><span data-stu-id="0d810-104">In the request/reply model, the <xref:System.ServiceModel.Channels.RequestContext> object is the link between the request that comes in and the reply that goes out. When the server receives a request, it provides a <xref:System.ServiceModel.Channels.RequestContext> instance that represents the request to the channel.</span></span> <span data-ttu-id="0d810-105">请求上下文包含其他有用属性中的原始请求消息。</span><span class="sxs-lookup"><span data-stu-id="0d810-105">The request context contains the original request message among other useful properties.</span></span> <span data-ttu-id="0d810-106">此请求上下文随后会储藏到 <xref:System.ServiceModel.OperationContext> 中，以便于你的服务对其进行检索。</span><span class="sxs-lookup"><span data-stu-id="0d810-106">This request context is then stashed inside the <xref:System.ServiceModel.OperationContext> for retrieval by your service.</span></span> <span data-ttu-id="0d810-107">通常可使用 <xref:System.ServiceModel.OperationContext.Current%2A> 属性来访问当前操作的请求。</span><span class="sxs-lookup"><span data-stu-id="0d810-107">You typically use the <xref:System.ServiceModel.OperationContext.Current%2A> property to access the request of the current operation.</span></span>  
  
 <span data-ttu-id="0d810-108"><xref:System.ServiceModel.Channels.RequestContext> 的值可以是 `null`。</span><span class="sxs-lookup"><span data-stu-id="0d810-108">The value of the <xref:System.ServiceModel.Channels.RequestContext> can be `null`.</span></span> <span data-ttu-id="0d810-109">请求上下文的角色是将请求与答复相链接，因此在没有答复时，请求上下文的存在就毫无意义，在这种情况下，此上下文设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="0d810-109">Because the role of the request context is to link requests to replies, it does not make sense to have a request context when you do not have a reply, and so in this case the context is set to `null`.</span></span> <span data-ttu-id="0d810-110">对于请求/答复模式顶部的单向操作，服务器接收请求，但并不向客户端发回响应。</span><span class="sxs-lookup"><span data-stu-id="0d810-110">For a one-way operation on top of the request/reply model, the server receives requests but does not send back a response to the client.</span></span> <span data-ttu-id="0d810-111">因此，如果意外出现 <xref:System.ServiceModel.Channels.RequestContext> 为 `null`，首先要检查操作协定是否是 IsOneWay。</span><span class="sxs-lookup"><span data-stu-id="0d810-111">So if the <xref:System.ServiceModel.Channels.RequestContext> is `null` unexpectedly, check first whether the operation contract is IsOneWay.</span></span>  
  
 <span data-ttu-id="0d810-112">针对从此类派生的托管 C++ 用户的特别说明：</span><span class="sxs-lookup"><span data-stu-id="0d810-112">Special note for Managed C++ users deriving from this class:</span></span>  
  
-   <span data-ttu-id="0d810-113">将清理代码放入 (On)(Begin)Close（和/或 OnAbort）中，而不是放入析构函数中。</span><span class="sxs-lookup"><span data-stu-id="0d810-113">Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</span></span>  
  
-   <span data-ttu-id="0d810-114">避免使用析构函数：它们会导致编译器自动生成 <xref:System.IDisposable>。</span><span class="sxs-lookup"><span data-stu-id="0d810-114">Avoid destructors: they cause the compiler to auto-generate <xref:System.IDisposable>.</span></span>  
  
-   <span data-ttu-id="0d810-115">避免使用非引用成员：它们可能会导致编译器自动生成 <xref:System.IDisposable>。</span><span class="sxs-lookup"><span data-stu-id="0d810-115">Avoid non-reference members: they can cause the compiler to auto-generate <xref:System.IDisposable>.</span></span>  
  
-   <span data-ttu-id="0d810-116">避免使用终结器；但如果包含一个终结器，则应该禁止显示生成警告并从 (On)(Begin)Close（和/或 OnAbort）调用 <xref:System.GC.SuppressFinalize%28System.Object%29> 和终结器本身，以便模拟自动生成的 <xref:System.IDisposable> 行为。</span><span class="sxs-lookup"><span data-stu-id="0d810-116">Avoid finalizers; but if you include one, you should suppress the build warning and call <xref:System.GC.SuppressFinalize%28System.Object%29> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <xref:System.IDisposable> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RequestContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RequestContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d810-117">初始化 <see cref="T:System.ServiceModel.Channels.RequestContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0d810-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.RequestContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Abort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="requestContext.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d810-118">在派生类中重写时，中止处理与上下文关联的请求。</span><span class="sxs-lookup"><span data-stu-id="0d810-118">When overridden in a derived class, aborts processing the request associated with the context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReply">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0d810-119">开始进行异步操作，以答复与当前上下文关联的请求。</span><span class="sxs-lookup"><span data-stu-id="0d810-119">Begins an asynchronous operation to reply to the request associated with the current context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d810-120">在有无显式超时的情况下，异步操作都可用。</span><span class="sxs-lookup"><span data-stu-id="0d810-120">The asynchronous operation is available with or without an explicit time-out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReply">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReply(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginReply (message As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginReply(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReply : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="requestContext.BeginReply (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0d810-121">包含请求的传入 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-121">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span></span></param>
        <param name="callback"><span data-ttu-id="0d810-122">接收异步答复操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="0d810-122">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="0d810-123">一个由应用程序指定的对象，它包含与异步答复操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="0d810-123">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</span></span></param>
        <summary><span data-ttu-id="0d810-124">在派生类中重写时，开始进行异步操作，以答复与当前上下文关联的请求。</span><span class="sxs-lookup"><span data-stu-id="0d810-124">When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.</span></span></summary>
        <returns><span data-ttu-id="0d810-125">引用异步答复操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-125">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d810-126">应用程序处理必须继续进行而不是等待时，使用异步 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0d810-126">Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method when the application processing must continue without waiting.</span></span> <span data-ttu-id="0d810-127">如果当前线程在回复请求消息时可以被阻塞，或者一直被阻塞到超出超时间隔，则使用同步 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> 方法之一。</span><span class="sxs-lookup"><span data-stu-id="0d810-127">Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.</span></span>  
  
 <span data-ttu-id="0d810-128">此方法通过回调为操作接收事件处理程序标识的通知。</span><span class="sxs-lookup"><span data-stu-id="0d810-128">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="0d810-129">直到已发送答复或发生超时时才完成操作。</span><span class="sxs-lookup"><span data-stu-id="0d810-129">The operation is not complete until either the reply is sent or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0d810-130">如果在操作完成前超出指定的 <see cref="T:System.TimeoutException" />，该操作将引发 <paramref name="timeout" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-130">The operation throws a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginReply">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReply(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginReply (message As Message, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginReply(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReply : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="requestContext.BeginReply (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0d810-131">包含请求的传入 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-131">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span></span></param>
        <param name="timeout"><span data-ttu-id="0d810-132">指定等待答复可用请求的时间间隔的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-132">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reply to an available request.</span></span></param>
        <param name="callback"><span data-ttu-id="0d810-133">接收异步答复操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="0d810-133">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="0d810-134">一个由应用程序指定的对象，它包含与异步答复操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="0d810-134">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</span></span></param>
        <summary><span data-ttu-id="0d810-135">在派生类中重写时，开始进行异步操作，以在指定时间间隔内答复与当前上下文关联的请求。</span><span class="sxs-lookup"><span data-stu-id="0d810-135">When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="0d810-136">引用异步答复操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-136">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d810-137">使用异步 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 方法，则应用程序处理将继续进行而不等待完成请求。</span><span class="sxs-lookup"><span data-stu-id="0d810-137">Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method to allow the application processing to continue without waiting for the request to complete.</span></span>  
  
 <span data-ttu-id="0d810-138">如果当前线程在回复请求消息时可以被阻塞，或者一直被阻塞到超出超时间隔，则使用同步 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> 方法之一。</span><span class="sxs-lookup"><span data-stu-id="0d810-138">Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.</span></span> <span data-ttu-id="0d810-139">此方法通过回调为操作接收事件处理程序标识的通知。</span><span class="sxs-lookup"><span data-stu-id="0d810-139">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="0d810-140">直到已发送答复或发生超时时才完成操作。</span><span class="sxs-lookup"><span data-stu-id="0d810-140">The operation is not complete until either the reply is sent or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0d810-141">如果在操作完成前超出指定的 <see cref="T:System.TimeoutException" />，该操作将引发 <paramref name="timeout" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-141">The operation throws a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0d810-142">关闭正答复与当前上下文关联的请求上下文的操作。</span><span class="sxs-lookup"><span data-stu-id="0d810-142">Closes the operation that is replying to the request context associated with the current context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Close" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="requestContext.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d810-143">在派生类中重写时，关闭正答复与当前上下文关联的请求上下文的操作。</span><span class="sxs-lookup"><span data-stu-id="0d810-143">When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Close : TimeSpan -&gt; unit" Usage="requestContext.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="0d810-144">指定时间间隔的 <see cref="T:System.TimeSpan" />，与当前上下文关联的答复操作必须在此时间间隔内关闭。</span><span class="sxs-lookup"><span data-stu-id="0d810-144">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the reply operation associated with the current context must close.</span></span></param>
        <summary><span data-ttu-id="0d810-145">在派生类中重写时，关闭在指定时间间隔内正答复与当前上下文关联的请求上下文的操作。</span><span class="sxs-lookup"><span data-stu-id="0d810-145">When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0d810-146">如果在操作完成前超出指定的 <see cref="T:System.TimeoutException" />，则此操作应引发 <paramref name="timeout" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-146">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="requestContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="0d810-147">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-147"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="0d810-148">释放与上下文关联的资源。</span><span class="sxs-lookup"><span data-stu-id="0d810-148">Releases resources associated with the context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReply">
      <MemberSignature Language="C#" Value="public abstract void EndReply (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndReply(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndReply (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndReply(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReply : IAsyncResult -&gt; unit" Usage="requestContext.EndReply result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0d810-149">通过调用 <see cref="T:System.IAsyncResult" /> 方法之一返回的 <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-149">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /> methods.</span></span></param>
        <summary><span data-ttu-id="0d810-150">在派生类中重写时，完成一个答复请求消息的异步操作。</span><span class="sxs-lookup"><span data-stu-id="0d810-150">When overridden in a derived class, completes an asynchronous operation to reply to a request message.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reply">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0d810-151">答复请求消息。</span><span class="sxs-lookup"><span data-stu-id="0d810-151">Replies to a request message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public abstract void Reply (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Reply (message As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reply(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Reply : System.ServiceModel.Channels.Message -&gt; unit" Usage="requestContext.Reply message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0d810-152">包含请求的传入 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-152">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span></span></param>
        <summary><span data-ttu-id="0d810-153">在派生类中重写时，答复请求消息。</span><span class="sxs-lookup"><span data-stu-id="0d810-153">When overridden in a derived class, replies to a request message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d810-154">如果当前线程在答复请求消息时可以被阻塞，则使用 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A>。</span><span class="sxs-lookup"><span data-stu-id="0d810-154">Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message.</span></span> <span data-ttu-id="0d810-155">该线程最多被阻塞 `timeout` 指定的时间长度。</span><span class="sxs-lookup"><span data-stu-id="0d810-155">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="0d810-156">如果应用程序处理必须继续进行而不是等待答复完成，则使用异步 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0d810-156">If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method.</span></span> <span data-ttu-id="0d810-157">此方法通过回调为操作接收事件处理程序标识的通知。</span><span class="sxs-lookup"><span data-stu-id="0d810-157">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="0d810-158">直到通道中出现消息时或发生超时时才完成操作。</span><span class="sxs-lookup"><span data-stu-id="0d810-158">The operation is not complete until either a message becomes available in the channel or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public abstract void Reply (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Reply (message As Message, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reply(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Reply : System.ServiceModel.Channels.Message * TimeSpan -&gt; unit" Usage="requestContext.Reply (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0d810-159">包含请求的传入 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-159">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span></span></param>
        <param name="timeout"><span data-ttu-id="0d810-160">指定在答复请求之前要等待的时间间隔的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-160">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reply to a request.</span></span></param>
        <summary><span data-ttu-id="0d810-161">在派生类中重写时，在指定时间间隔内答复请求消息。</span><span class="sxs-lookup"><span data-stu-id="0d810-161">When overridden in a derived class, replies to a request message within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d810-162">如果当前线程在答复请求消息时可以被阻塞，则使用 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A>。</span><span class="sxs-lookup"><span data-stu-id="0d810-162">Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message.</span></span> <span data-ttu-id="0d810-163">该线程最多被阻塞 `timeout` 指定的时间长度。</span><span class="sxs-lookup"><span data-stu-id="0d810-163">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="0d810-164">如果应用程序处理必须继续进行而不是等待答复完成，则使用异步 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0d810-164">If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method.</span></span> <span data-ttu-id="0d810-165">此方法通过回调为操作接收事件处理程序标识的通知。</span><span class="sxs-lookup"><span data-stu-id="0d810-165">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="0d810-166">直到通道中出现消息时或发生超时时才完成操作。</span><span class="sxs-lookup"><span data-stu-id="0d810-166">The operation is not complete until either a message becomes available in the channel or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message RequestMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Message RequestMessage" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.RequestContext.RequestMessage" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequestMessage As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::Message ^ RequestMessage { System::ServiceModel::Channels::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestMessage : System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.RequestContext.RequestMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d810-167">在派生类中重写时，获取包含请求的消息。</span><span class="sxs-lookup"><span data-stu-id="0d810-167">When overridden in a derived class, gets the message that contains the request.</span></span></summary>
        <value><span data-ttu-id="0d810-168">包含请求的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="0d810-168">The <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="requestContext.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d810-169">释放与上下文关联的托管资源和非托管资源。</span><span class="sxs-lookup"><span data-stu-id="0d810-169">Releases both managed and unmanaged resources associated with the context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0d810-170">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="0d810-170">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0d810-171">它只能在 <xref:System.ServiceModel.Channels.RequestContext> 实例被强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0d810-171">It can be used only when the <xref:System.ServiceModel.Channels.RequestContext> instance is cast to an <xref:System.IDisposable> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
