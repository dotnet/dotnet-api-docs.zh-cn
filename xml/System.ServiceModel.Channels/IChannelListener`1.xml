<Type Name="IChannelListener&lt;TChannel&gt;" FullName="System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="095ed25292737f7132ace5352b0add0c1f1a1e26" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69156035" /></Metadata><TypeSignature Language="C#" Value="public interface IChannelListener&lt;TChannel&gt; : System.ServiceModel.Channels.IChannelListener where TChannel : class, IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelListener`1&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt; implements class System.ServiceModel.Channels.IChannelListener, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelListener`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelListener(Of TChannel)&#xA;Implements IChannelListener" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TChannel&gt;&#xA; where TChannel : class, IChannelpublic interface class IChannelListener : System::ServiceModel::Channels::IChannelListener" />
  <TypeSignature Language="F#" Value="type IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; IChannel)&gt; = interface&#xA;    interface IChannelListener&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TChannel"><span data-ttu-id="56bd1-101">通道侦听器接受的通道类型。</span><span class="sxs-lookup"><span data-stu-id="56bd1-101">The type of channel that the channel listener accepts.</span></span></typeparam>
    <summary><span data-ttu-id="56bd1-102">定义一个接口，通道侦听器必须实现该接口才能接受类型特定的通道。</span><span class="sxs-lookup"><span data-stu-id="56bd1-102">Defines the interface that must be implemented by channel listeners to accept type-specific channels.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56bd1-103">实现 <xref:System.ServiceModel.Channels.IChannelListener> 或 <xref:System.ServiceModel.Channels.IChannelListener%601> 接口的侦听器工厂为服务提供一些机制，用于接受由客户端（这些客户端启动并启用与服务的通信）生成的通道。</span><span class="sxs-lookup"><span data-stu-id="56bd1-103">Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> or <xref:System.ServiceModel.Channels.IChannelListener%601> interfaces provide services with the mechanisms used to accept the channels produced by clients that initiate and enable communication with a service.</span></span>  
  
 <span data-ttu-id="56bd1-104">通过实现 <xref:System.ServiceModel.Channels.IChannelListener%601> 协定，用户可以接受具有某种给定类型的多个通道，而不必每次都指定通道类型。</span><span class="sxs-lookup"><span data-stu-id="56bd1-104">Implementing the <xref:System.ServiceModel.Channels.IChannelListener%601> contract allows users to accept multiple channels of a given type without having to specify the channel type each time.</span></span> <span data-ttu-id="56bd1-105">换言之，将通道类型定义为 <xref:System.ServiceModel.Channels.IChannelListener%601> 接口的泛型参数意味着无需将类型传递到 <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> 方法中。</span><span class="sxs-lookup"><span data-stu-id="56bd1-105">In other words, defining the channel type as a generic parameter for the <xref:System.ServiceModel.Channels.IChannelListener%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> methods.</span></span> <span data-ttu-id="56bd1-106">如果用户希望接受不同的通道类型，则可以为所需要的每个通道类型创建其他通道侦听器。</span><span class="sxs-lookup"><span data-stu-id="56bd1-106">If users want to accept different channel types, they can create additional channel listeners for each type of channel required.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AcceptChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56bd1-107">接受具有指定类型的通道以便与客户端进行通信。</span><span class="sxs-lookup"><span data-stu-id="56bd1-107">Accepts a channel of a specified type for communication with a client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56bd1-108">建议使用带有显式超时的 <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="56bd1-108">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> overload with the explicit timeout be used.</span></span> <span data-ttu-id="56bd1-109">为该方法指定的 `timeout` 会重写系统为服务设置的所有默认超时。</span><span class="sxs-lookup"><span data-stu-id="56bd1-109">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel AcceptChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel AcceptChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptChannel () As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel AcceptChannel();" />
      <MemberSignature Language="F#" Value="abstract member AcceptChannel : unit -&gt; 'Channel" Usage="iChannelListener.AcceptChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56bd1-110">接受具有指定类型的通道以便与客户端进行通信。</span><span class="sxs-lookup"><span data-stu-id="56bd1-110">Accepts a channel of a specified type for communication with a client.</span></span></summary>
        <returns><span data-ttu-id="56bd1-111">一个侦听器所接受的 <paramref name="TChannel" /> 类型的通道。</span><span class="sxs-lookup"><span data-stu-id="56bd1-111">A channel of type <paramref name="TChannel" /> accepted by the listener.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56bd1-112">建议使用带有显式超时的 <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="56bd1-112">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> overload with the explicit timeout be used.</span></span> <span data-ttu-id="56bd1-113">为该方法指定的 `timeout` 会重写系统为服务设置的所有默认超时。</span><span class="sxs-lookup"><span data-stu-id="56bd1-113">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel AcceptChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel AcceptChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptChannel (timeout As TimeSpan) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel AcceptChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member AcceptChannel : TimeSpan -&gt; 'Channel" Usage="iChannelListener.AcceptChannel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="56bd1-114"><see cref="T:System.TimeSpan" />，指定在超时前可用于完成等待通道操作的时间长度。</span><span class="sxs-lookup"><span data-stu-id="56bd1-114">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="56bd1-115">接受具有指定类型的通道以便在指定时间间隔内与客户端进行通信。</span><span class="sxs-lookup"><span data-stu-id="56bd1-115">Accepts a channel of a specified type for communication with a client within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="56bd1-116">一个侦听器所接受的 <paramref name="TChannel" /> 类型的通道。</span><span class="sxs-lookup"><span data-stu-id="56bd1-116">A channel of type <paramref name="TChannel" /> accepted by the listener.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56bd1-117">建议使用带有显式超时的此重载，而不是 <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>。</span><span class="sxs-lookup"><span data-stu-id="56bd1-117">It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>.</span></span> <span data-ttu-id="56bd1-118">为此方法指定的 `timeout` 会重写系统为服务设置的所有默认超时。</span><span class="sxs-lookup"><span data-stu-id="56bd1-118">The `timeout` specified for this method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAcceptChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56bd1-119">开始一个异步操作，在指定或默认时间间隔内接受通道。</span><span class="sxs-lookup"><span data-stu-id="56bd1-119">Begins an asynchronous operation to accept a channel within a specified or default interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56bd1-120">建议使用带有显式超时的 <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%2A> 重载。</span><span class="sxs-lookup"><span data-stu-id="56bd1-120">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%2A> overload with the explicit timeout be used.</span></span> <span data-ttu-id="56bd1-121">为该方法指定的 `timeout` 会重写系统为服务设置的所有默认超时。</span><span class="sxs-lookup"><span data-stu-id="56bd1-121">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAcceptChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptChannel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAcceptChannel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptChannel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptChannel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAcceptChannel : AsyncCallback * obj -&gt; IAsyncResult" Usage="iChannelListener.BeginAcceptChannel (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="56bd1-122">接收异步接受通道操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="56bd1-122">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.</span></span></param>
        <param name="state"><span data-ttu-id="56bd1-123">一个由应用程序指定的对象，它包含与异步接受通道操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="56bd1-123">An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.</span></span></param>
        <summary><span data-ttu-id="56bd1-124">开始一个接受通道的异步操作。</span><span class="sxs-lookup"><span data-stu-id="56bd1-124">Begins an asynchronous operation to accept a channel.</span></span></summary>
        <returns><span data-ttu-id="56bd1-125">引用异步接受通道操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="56bd1-125">The <see cref="T:System.IAsyncResult" /> that references the asynchronous acceptance of a channel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56bd1-126">建议使用带有显式超时的 <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="56bd1-126">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> overload with the explicit timeout be used.</span></span> <span data-ttu-id="56bd1-127">为该方法指定的 `timeout` 会重写系统为服务设置的所有默认超时。</span><span class="sxs-lookup"><span data-stu-id="56bd1-127">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAcceptChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAcceptChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iChannelListener.BeginAcceptChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="56bd1-128"><see cref="T:System.TimeSpan" />，指定在超时前可用于完成等待通道操作的时间长度。</span><span class="sxs-lookup"><span data-stu-id="56bd1-128">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="56bd1-129">接收异步接受通道操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="56bd1-129">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.</span></span></param>
        <param name="state"><span data-ttu-id="56bd1-130">一个由应用程序指定的对象，它包含与异步接受通道操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="56bd1-130">An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.</span></span></param>
        <summary><span data-ttu-id="56bd1-131">开始一个异步操作，在指定时间间隔内接受通道。</span><span class="sxs-lookup"><span data-stu-id="56bd1-131">Begins an asynchronous operation to accept a channel within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="56bd1-132">引用异步接受通道操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="56bd1-132">The <see cref="T:System.IAsyncResult" /> that references the asynchronous acceptance of a channel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56bd1-133">建议使用带有显式超时的此重载，而不是 <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>。</span><span class="sxs-lookup"><span data-stu-id="56bd1-133">It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>.</span></span> <span data-ttu-id="56bd1-134">为此方法指定的 `timeout` 会重写系统为服务设置的所有默认超时。</span><span class="sxs-lookup"><span data-stu-id="56bd1-134">The `timeout` specified for this method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel EndAcceptChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel EndAcceptChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptChannel (result As IAsyncResult) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel EndAcceptChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAcceptChannel : IAsyncResult -&gt; 'Channel" Usage="iChannelListener.EndAcceptChannel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="56bd1-135">通过调用 <see cref="T:System.IAsyncResult" /> 方法返回的 <see cref="Overload:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel" />。</span><span class="sxs-lookup"><span data-stu-id="56bd1-135">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel" /> method.</span></span></param>
        <summary><span data-ttu-id="56bd1-136">完成一个接受通道的异步操作。</span><span class="sxs-lookup"><span data-stu-id="56bd1-136">Completes an asynchronous operation to accept a channel.</span></span></summary>
        <returns><span data-ttu-id="56bd1-137">一个侦听器所接受的 <paramref name="TChannel" /> 类型的通道。</span><span class="sxs-lookup"><span data-stu-id="56bd1-137">A channel of type <paramref name="TChannel" /> accepted by the listener.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
