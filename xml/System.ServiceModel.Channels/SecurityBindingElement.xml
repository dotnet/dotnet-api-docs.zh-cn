<Type Name="SecurityBindingElement" FullName="System.ServiceModel.Channels.SecurityBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a3b03ecdcdffa68473b05b6438ce0ec3c8b8694" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86575079" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityBindingElement : System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityBindingElement extends System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SecurityBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityBindingElement&#xA;Inherits BindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityBindingElement abstract : System::ServiceModel::Channels::BindingElement" />
  <TypeSignature Language="F#" Value="type SecurityBindingElement = class&#xA;    inherit BindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Security" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Security" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Security" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Security" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>一个抽象类，在实现时表示支持通道 SOAP 消息安全的绑定元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类是 WCF 中 SOAP 消息安全绑定元素的基类。 此抽象类有三种实现：<xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>、<xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement> 和 <xref:System.ServiceModel.Channels.TransportSecurityBindingElement>。 这些实现为在 WS-Security Policy 规范中定义的绑定建模。  
  
 自定义绑定包含以特定顺序排列的绑定元素集合：首先添加表示绑定堆栈顶部的元素，其次是绑定堆栈的第二个元素，依此类推。  
  
 若要将此类添加到绑定中，请执行下列操作：  
  
1.  创建 <xref:System.ServiceModel.Channels.BindingElementCollection>。  
  
2.  在绑定堆栈中创建位于此绑定元素之上的自定义绑定元素，比如可选的 <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> 和 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>。  
  
3.  使用 <xref:System.ServiceModel.Channels.BindingElementCollection> 方法，按先前描述的顺序将这些元素添加到 <xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A>。  
  
4.  创建一个派生自 <xref:System.ServiceModel.Channels.SecurityBindingElement> 的安全绑定元素的实例，如 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement>、<xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> 或 <xref:System.ServiceModel.Channels.TransportSecurityBindingElement>。  
  
5.  将派生的安全绑定元素添加到集合中。  
  
6.  将任何其他自定义绑定元素添加到集合，比如 <xref:System.ServiceModel.Channels.TcpTransportBindingElement>。  
  
 有关使用的详细信息 <xref:System.ServiceModel.Channels.SecurityBindingElement> ，请参阅 [SecurityBindingElement Authentication 模式](/dotnet/framework/wcf/feature-details/securitybindingelement-authentication-modes) 和 [如何：使用 SecurityBindingElement 创建自定义绑定](/dotnet/framework/wcf/feature-details/how-to-create-a-custom-binding-using-the-securitybindingelement)。  
  
> [!NOTE]
>  在创建了 <xref:System.ServiceModel.Channels.SecurityBindingElement> 对象后，应将其属性视为不可变。 对某些属性调用 `set` 可能会产生不可预知的效果：绑定的行为可能就好像属性保留了其旧值一样，并出现运行时错误，该错误是问题的唯一迹象。 已知具有此行为的两个属性为 <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A> 和 <xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A>。 其他某些属性可能也是如此。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/wcf/feature-details/securitybindingelement-authentication-modes">SecurityBindingElement 身份验证模式</related>
    <related type="Article" href="/dotnet/framework/wcf/feature-details/how-to-create-a-custom-binding-using-the-securitybindingelement">如何：使用 SecurityBindingElement 创建自定义绑定</related>
  </Docs>
  <Members>
    <Member MemberName="AllowInsecureTransport">
      <MemberSignature Language="C#" Value="public bool AllowInsecureTransport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsecureTransport" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.AllowInsecureTransport" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowInsecureTransport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsecureTransport { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowInsecureTransport : bool with get, set" Usage="System.ServiceModel.Channels.SecurityBindingElement.AllowInsecureTransport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否能通过不安全传输（如 HTTP）发送混合模式安全消息。</summary>
        <value>如果能通过不安全传输发送混合模式安全消息，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="securityBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">通道工厂的类型。</typeparam>
        <param name="context"><see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
        <summary>基于 <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 设置和传入的绑定上下文创建通道工厂。 创建的通道工厂为 SOAP 消息安全通道工厂，其内部有到对应绑定上下文的通道工厂的引用（包括传输通道工厂）。</summary>
        <returns>基于 <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 设置和传入的绑定上下文通道工厂。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建的通道工厂为 SOAP 消息安全通道工厂，其内部有到对应绑定上下文的通道工厂的引用（包括传输通道工厂）。  
  
 此方法执行参数错误检查，然后调用 <xref:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore%2A>。 此方法在派生类中实现时可创建通道工厂，该通道工厂用于创建为此绑定处理传出消息的通道。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">不支持 <paramref name="TChannel" /> 类型的通道。</exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactoryCore&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="protected abstract System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactoryCore&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactoryCore&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function BuildChannelFactoryCore(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename TChannel&gt;&#xA; abstract System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactoryCore(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelFactoryCore : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="securityBindingElement.BuildChannelFactoryCore context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">通道工厂的类型。</typeparam>
        <param name="context"><see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
        <summary>实现时创建指定类型的通道工厂。</summary>
        <returns>具有指定类型的通道工厂。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory%2A>执行错误检查时，会调用此方法。 当此方法在派生类中实现时，可创建通道工厂，该通道工厂用于创建为此绑定处理传出消息的通道。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">不支持 <paramref name="TChannel" /> 类型的通道。</exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="securityBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">通道侦听器的类型。</typeparam>
        <param name="context"><see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
        <summary>基于 <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 设置和传入的绑定上下文创建通道侦听器。</summary>
        <returns>基于 <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 设置和传入的绑定上下文通道侦听器。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建的通道工厂为 SOAP 消息安全通道侦听器，其内部有到对应绑定上下文的通道侦听器的引用（包括传输通道侦听器）。  
  
 此方法执行参数错误检查，然后调用 <xref:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListenerCore%2A>。 此方法在派生类中实现时可创建通道侦听器，该通道侦听器用于创建为此绑定处理传入消息的通道。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">不支持 <paramref name="TChannel" /> 类型的通道。</exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListenerCore&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="protected abstract System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListenerCore&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListenerCore&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListenerCore``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function BuildChannelListenerCore(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel abstract System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListenerCore(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListenerCore : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="securityBindingElement.BuildChannelListenerCore context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">通道侦听器的类型。</typeparam>
        <param name="context"><see cref="T:System.ServiceModel.Channels.BindingContext" /> 对象。</param>
        <summary>实现时创建指定类型的通道侦听器。</summary>
        <returns>指定类型的通道侦听器。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListener%2A>执行错误检查时，会调用此方法。 当此方法在派生类中实现时，可创建通道侦听器，该通道侦听器用于创建为此绑定处理传出消息的通道。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">不支持 <paramref name="TChannel" /> 类型的通道。</exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="securityBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">通道工厂的类型。</typeparam>
        <param name="context"><see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
        <summary>确定是否可生成指定类型的通道工厂。</summary>
        <returns>如果可以生成指定类型的通道工厂，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在尝试创建通道工厂之前应调用此方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="securityBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">通道侦听器的类型。</typeparam>
        <param name="context"><see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
        <summary>确定是否可生成指定类型的通道侦听器。</summary>
        <returns>如果可以生成指定类型的通道侦听器，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在尝试创建通道侦听器之前应调用此方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAnonymousForCertificateBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateAnonymousForCertificateBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateAnonymousForCertificateBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateAnonymousForCertificateBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAnonymousForCertificateBindingElement () As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateAnonymousForCertificateBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateAnonymousForCertificateBindingElement : unit -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateAnonymousForCertificateBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个对称安全绑定元素，配置该元素以进行匿名客户端身份验证以及基于证书的服务器身份验证。</summary>
        <returns>容纳新绑定的 <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 客户端和服务器必须使用服务证书在带外进行配置。  
  
 创建绑定时，其 <xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A> 设置为 <xref:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11%2A>，<xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation%2A> 设置为 `true`。  
  
   
  
## Examples  
 下面的代码演示如何调用此方法。  
  
 [!code-csharp[c_CustomBindingsAuthMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_custombindingsauthmode/cs/source.cs#3)]
 [!code-vb[c_CustomBindingsAuthMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_custombindingsauthmode/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCertificateOverTransportBindingElement">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个安全绑定元素，该元素期望客户端使用 SOAP 消息安全执行基于证书的身份验证。 绑定元素期望传输提供服务器身份验证和消息保护（例如 HTTPS）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此客户端必须使用其用于身份验证的证书进行配置。  
  
> [!NOTE]
>  通过调用此方法创建了 <xref:System.ServiceModel.Channels.SecurityBindingElement> 对象后，<xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A> 属性应被视为不可变。 如果修改此值，则可能出现不一致的绑定行为。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCertificateOverTransportBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.TransportSecurityBindingElement CreateCertificateOverTransportBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.TransportSecurityBindingElement CreateCertificateOverTransportBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateOverTransportBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCertificateOverTransportBindingElement () As TransportSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::TransportSecurityBindingElement ^ CreateCertificateOverTransportBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateCertificateOverTransportBindingElement : unit -&gt; System.ServiceModel.Channels.TransportSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateOverTransportBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransportSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个安全绑定元素，该元素期望客户端使用 SOAP 消息安全执行基于证书的身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 绑定元素期望传输提供服务器身份验证和消息保护（例如 HTTPS）。  
  
 绑定元素配置为使用 <xref:System.ServiceModel.MessageSecurityVersion.Default%2A> 类的 <xref:System.ServiceModel.MessageSecurityVersion> 属性。  
  
 所创建绑定的 <xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A> 设置为 `true`。  
  
 从 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 从 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCertificateOverTransportBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.TransportSecurityBindingElement CreateCertificateOverTransportBindingElement (System.ServiceModel.MessageSecurityVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.TransportSecurityBindingElement CreateCertificateOverTransportBindingElement(class System.ServiceModel.MessageSecurityVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateOverTransportBindingElement(System.ServiceModel.MessageSecurityVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCertificateOverTransportBindingElement (version As MessageSecurityVersion) As TransportSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::TransportSecurityBindingElement ^ CreateCertificateOverTransportBindingElement(System::ServiceModel::MessageSecurityVersion ^ version);" />
      <MemberSignature Language="F#" Value="static member CreateCertificateOverTransportBindingElement : System.ServiceModel.MessageSecurityVersion -&gt; System.ServiceModel.Channels.TransportSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateOverTransportBindingElement version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransportSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.MessageSecurityVersion" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="version">该绑定的 <see cref="T:System.ServiceModel.MessageSecurityVersion" />。</param>
        <summary>创建一个安全绑定元素，该元素期望客户端使用 SOAP 消息安全执行基于证书的身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 绑定元素期望传输提供服务器身份验证和消息保护（例如 HTTPS）。 绑定元素是使用指定的 <xref:System.ServiceModel.MessageSecurityVersion> 配置的。  
  
 所创建绑定的 <xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A> 设置为 `true`。  
  
 从 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 从 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="version" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCertificateSignatureBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.AsymmetricSecurityBindingElement CreateCertificateSignatureBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.AsymmetricSecurityBindingElement CreateCertificateSignatureBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateSignatureBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCertificateSignatureBindingElement () As AsymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::AsymmetricSecurityBindingElement ^ CreateCertificateSignatureBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateCertificateSignatureBindingElement : unit -&gt; System.ServiceModel.Channels.AsymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateSignatureBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.AsymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建使用证书签名消息的绑定元素。 此绑定元素仅可用于单向消息交换，且仅能签名消息。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 此绑定元素需要客户端配置用于身份验证目的的证书。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIssuedTokenBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateIssuedTokenBindingElement (System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters issuedTokenParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateIssuedTokenBindingElement(class System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters issuedTokenParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateIssuedTokenBindingElement (issuedTokenParameters As IssuedSecurityTokenParameters) As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateIssuedTokenBindingElement(System::ServiceModel::Security::Tokens::IssuedSecurityTokenParameters ^ issuedTokenParameters);" />
      <MemberSignature Language="F#" Value="static member CreateIssuedTokenBindingElement : System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenBindingElement issuedTokenParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuedTokenParameters" Type="System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="issuedTokenParameters"><see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> 表示基于对称密钥的颁发令牌。</param>
        <summary>创建一个对称安全绑定元素，该元素配置为需要使用基于对称密钥的颁发令牌进行客户端身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已颁发的令牌参数必须具有对称的密钥类型。  
  
> [!NOTE]
>  通过调用此方法创建了 <xref:System.ServiceModel.Channels.SecurityBindingElement> 对象后，<xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A> 属性应被视为不可变。 如果修改此值，则可能出现不一致的绑定行为。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="issuedTokenParameters" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">密钥类型 <paramref name="issuedTokenParameters" /> 不对称。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIssuedTokenForCertificateBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateIssuedTokenForCertificateBindingElement (System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters issuedTokenParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateIssuedTokenForCertificateBindingElement(class System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters issuedTokenParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForCertificateBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateIssuedTokenForCertificateBindingElement (issuedTokenParameters As IssuedSecurityTokenParameters) As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateIssuedTokenForCertificateBindingElement(System::ServiceModel::Security::Tokens::IssuedSecurityTokenParameters ^ issuedTokenParameters);" />
      <MemberSignature Language="F#" Value="static member CreateIssuedTokenForCertificateBindingElement : System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForCertificateBindingElement issuedTokenParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuedTokenParameters" Type="System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="issuedTokenParameters"><see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> 表示基于对称密钥的颁发令牌。</param>
        <summary>创建一个对称安全绑定元素，该元素配置为需要基于已颁发令牌的客户端身份验证以及基于服务器证书的服务器身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已颁发的令牌可以具有对称或非对称密钥。 客户端和服务器必须使用服务器证书进行配置。  
  
 所创建绑定的 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation%2A> 设置为 `true`，并且 <xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A> 设置为 <xref:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11%2A>。  
  
> [!NOTE]
>  通过调用此方法创建了 <xref:System.ServiceModel.Channels.SecurityBindingElement> 对象后，<xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A> 属性应被视为不可变。 如果修改此值，则可能出现不一致的绑定行为。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="issuedTokenParameters" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateIssuedTokenForSslBindingElement">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个对称安全绑定元素，该元素配置为需要基于已颁发令牌的客户端身份验证以及基于服务器证书的服务器身份验证。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已颁发的令牌可以具有对称或非对称密钥。 客户端使用 SOAP 级别的 SSL 协议对服务器进行身份验证。  
  
 两个重载都使用 <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters> 参数。 其中之一包含指定是否需要取消的参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateIssuedTokenForSslBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateIssuedTokenForSslBindingElement (System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters issuedTokenParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateIssuedTokenForSslBindingElement(class System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters issuedTokenParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForSslBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateIssuedTokenForSslBindingElement (issuedTokenParameters As IssuedSecurityTokenParameters) As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateIssuedTokenForSslBindingElement(System::ServiceModel::Security::Tokens::IssuedSecurityTokenParameters ^ issuedTokenParameters);" />
      <MemberSignature Language="F#" Value="static member CreateIssuedTokenForSslBindingElement : System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForSslBindingElement issuedTokenParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuedTokenParameters" Type="System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="issuedTokenParameters"><see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />。</param>
        <summary>创建一个对称安全绑定元素，该元素配置为需要基于已颁发令牌的客户端身份验证以及基于服务器证书的服务器身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 服务器在 SSL 协议末尾颁发基于 Cookie 的安全上下文令牌。  
  
 所创建绑定的 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation%2A> 设置为 `true`，并且 <xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A> 设置为 <xref:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="issuedTokenParameters" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIssuedTokenForSslBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateIssuedTokenForSslBindingElement (System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters issuedTokenParameters, bool requireCancellation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateIssuedTokenForSslBindingElement(class System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters issuedTokenParameters, bool requireCancellation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForSslBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateIssuedTokenForSslBindingElement (issuedTokenParameters As IssuedSecurityTokenParameters, requireCancellation As Boolean) As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateIssuedTokenForSslBindingElement(System::ServiceModel::Security::Tokens::IssuedSecurityTokenParameters ^ issuedTokenParameters, bool requireCancellation);" />
      <MemberSignature Language="F#" Value="static member CreateIssuedTokenForSslBindingElement : System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters * bool -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForSslBindingElement (issuedTokenParameters, requireCancellation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuedTokenParameters" Type="System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="requireCancellation" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="issuedTokenParameters"><see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />。</param>
        <param name="requireCancellation">如果需要取消，则为 <see langword="true" />；否则为 <see langword="false" />。 通过将其设置为 <see langword="false" />，将能够启用在网络场方案中十分有用的安全上下文令牌，因为在此模式下，会话状态是在建立的安全上下文令牌内部编码的，而不是保留在服务器内存中。</param>
        <summary>创建一个对称安全绑定元素，该元素配置为需要基于已颁发令牌的客户端身份验证以及基于服务器证书的服务器身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所创建绑定的 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation%2A> 设置为 `true`，并且 <xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A> 设置为 <xref:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="issuedTokenParameters" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIssuedTokenOverTransportBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.TransportSecurityBindingElement CreateIssuedTokenOverTransportBindingElement (System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters issuedTokenParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.TransportSecurityBindingElement CreateIssuedTokenOverTransportBindingElement(class System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters issuedTokenParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenOverTransportBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateIssuedTokenOverTransportBindingElement (issuedTokenParameters As IssuedSecurityTokenParameters) As TransportSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::TransportSecurityBindingElement ^ CreateIssuedTokenOverTransportBindingElement(System::ServiceModel::Security::Tokens::IssuedSecurityTokenParameters ^ issuedTokenParameters);" />
      <MemberSignature Language="F#" Value="static member CreateIssuedTokenOverTransportBindingElement : System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters -&gt; System.ServiceModel.Channels.TransportSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenOverTransportBindingElement issuedTokenParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransportSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuedTokenParameters" Type="System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="issuedTokenParameters"><see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />。</param>
        <summary>创建一个对称安全绑定元素，该元素配置为需要使用颁发的令牌进行基于 SOAP 安全的客户端身份验证。 此绑定元素需要传输提供服务器身份验证和消息保护（例如 HTTPS）。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所创建绑定的 <xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A> 设置为 `true`。  
  
 从 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 从 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
> [!NOTE]
>  通过调用此方法创建了 <xref:System.ServiceModel.Channels.SecurityBindingElement> 对象后，<xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A> 属性应被视为不可变。 如果修改此值，则可能出现不一致的绑定行为。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="issuedTokenParameters" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateKerberosBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateKerberosBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateKerberosBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateKerberosBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateKerberosBindingElement () As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateKerberosBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateKerberosBindingElement : unit -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateKerberosBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个对称安全绑定元素，该元素配置为需要进行基于客户端的 Kerberos 令牌进行客户端身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要执行 Kerberos 身份验证，服务器必须在注册到 Active Directory 的服务主体名称的帐户中运行。 NetworkService 属于这种帐户。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKerberosOverTransportBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.TransportSecurityBindingElement CreateKerberosOverTransportBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.TransportSecurityBindingElement CreateKerberosOverTransportBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateKerberosOverTransportBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateKerberosOverTransportBindingElement () As TransportSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::TransportSecurityBindingElement ^ CreateKerberosOverTransportBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateKerberosOverTransportBindingElement : unit -&gt; System.ServiceModel.Channels.TransportSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateKerberosOverTransportBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransportSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个安全绑定元素，该元素配置为需要使用客户端 Kerberos 令牌进行基于 SOAP 安全的客户端身份验证。 此绑定元素需要传输提供服务器身份验证和消息保护（例如 HTTPS）。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要执行 Kerberos 身份验证，服务器必须在注册到 Active Directory 的服务主体名称的帐户中运行。 NetworkService 属于这种帐户。  
  
 所创建绑定的 <xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A> 设置为 `true`。 从 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 从 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMutualCertificateBindingElement">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个非对称安全绑定元素，该元素配置为需要基于证书的客户端身份验证以及基于证书的服务器身份验证。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 客户端必须使用其证书以及服务器证书进行配置。 此服务器必须使用其证书进行配置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMutualCertificateBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SecurityBindingElement CreateMutualCertificateBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SecurityBindingElement CreateMutualCertificateBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMutualCertificateBindingElement () As SecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SecurityBindingElement ^ CreateMutualCertificateBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateMutualCertificateBindingElement : unit -&gt; System.ServiceModel.Channels.SecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个非对称安全绑定元素，该元素配置为需要基于证书的客户端身份验证以及基于证书的服务器身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 配置绑定，以实现为每个客户端请求生成新的随机对称密钥（为服务器加密），该密钥用于对请求和服务器的回应进行保护。 客户端证书在请求时可用作认可支持令牌。  
  
 已实际创建 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement>。  
  
   
  
## Examples  
 下面的代码演示如何调用此方法。  
  
 [!code-csharp[c_CreateSecureSession#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_createsecuresession/cs/secureservice.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMutualCertificateBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SecurityBindingElement CreateMutualCertificateBindingElement (System.ServiceModel.MessageSecurityVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SecurityBindingElement CreateMutualCertificateBindingElement(class System.ServiceModel.MessageSecurityVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement(System.ServiceModel.MessageSecurityVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMutualCertificateBindingElement (version As MessageSecurityVersion) As SecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SecurityBindingElement ^ CreateMutualCertificateBindingElement(System::ServiceModel::MessageSecurityVersion ^ version);" />
      <MemberSignature Language="F#" Value="static member CreateMutualCertificateBindingElement : System.ServiceModel.MessageSecurityVersion -&gt; System.ServiceModel.Channels.SecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.MessageSecurityVersion" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="version">消息安全版本。</param>
        <summary>创建一个非对称安全绑定元素，该元素配置为需要基于证书的客户端身份验证以及基于证书的服务器身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果版本为 WSSecurity10，则将配置绑定元素以实现客户端请求由其证书签名并使用服务器证书加密。  
  
 如果版本为 WSSecurity11，则配置绑定元素，以实现为每个客户端请求生成新的随机对称密钥（为服务器加密），该密钥用于对请求和服务器的回应进行保护。 客户端证书在请求时可用作认可支持令牌。  
  
> [!NOTE]
>  通过调用此方法创建了 <xref:System.ServiceModel.Channels.SecurityBindingElement> 对象后，<xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A> 属性为不可变。 对它调用 `set` 不会将其改变。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="version" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMutualCertificateBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SecurityBindingElement CreateMutualCertificateBindingElement (System.ServiceModel.MessageSecurityVersion version, bool allowSerializedSigningTokenOnReply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SecurityBindingElement CreateMutualCertificateBindingElement(class System.ServiceModel.MessageSecurityVersion version, bool allowSerializedSigningTokenOnReply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement(System.ServiceModel.MessageSecurityVersion,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMutualCertificateBindingElement (version As MessageSecurityVersion, allowSerializedSigningTokenOnReply As Boolean) As SecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SecurityBindingElement ^ CreateMutualCertificateBindingElement(System::ServiceModel::MessageSecurityVersion ^ version, bool allowSerializedSigningTokenOnReply);" />
      <MemberSignature Language="F#" Value="static member CreateMutualCertificateBindingElement : System.ServiceModel.MessageSecurityVersion * bool -&gt; System.ServiceModel.Channels.SecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement (version, allowSerializedSigningTokenOnReply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.MessageSecurityVersion" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="allowSerializedSigningTokenOnReply" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="version">消息安全版本。</param>
        <param name="allowSerializedSigningTokenOnReply">在答复时允许序列化签名标记，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>创建一个非对称安全绑定元素，该元素配置为需要基于证书的客户端身份验证以及基于证书的服务器身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `allowSerializedSigningTokenOnReply` 参数为 `true` 时，将启用较旧版本 Web Services Enhancements (WSE) 的互操作性。  
  
> [!NOTE]
>  通过调用此方法创建了 <xref:System.ServiceModel.Channels.SecurityBindingElement> 对象后，<xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A> 属性应被视为不可变。 如果修改此值，则可能出现不一致的绑定行为。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="version" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMutualCertificateDuplexBindingElement">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个非对称安全绑定元素，该元素配置为需要基于证书的客户端身份验证以及基于证书的服务器身份验证。 此身份验证模式可用于保护双工消息交换模式，它需要用带外客户端证书配置服务。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMutualCertificateDuplexBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.AsymmetricSecurityBindingElement CreateMutualCertificateDuplexBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.AsymmetricSecurityBindingElement CreateMutualCertificateDuplexBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateDuplexBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMutualCertificateDuplexBindingElement () As AsymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::AsymmetricSecurityBindingElement ^ CreateMutualCertificateDuplexBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateMutualCertificateDuplexBindingElement : unit -&gt; System.ServiceModel.Channels.AsymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateDuplexBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.AsymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个非对称安全绑定元素，该元素配置为需要基于证书的客户端身份验证以及基于证书的服务器身份验证。 此身份验证模式可用于保护双工消息交换模式，它需要用带外客户端证书配置服务。</summary>
        <returns>一个 <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMutualCertificateDuplexBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.AsymmetricSecurityBindingElement CreateMutualCertificateDuplexBindingElement (System.ServiceModel.MessageSecurityVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.AsymmetricSecurityBindingElement CreateMutualCertificateDuplexBindingElement(class System.ServiceModel.MessageSecurityVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateDuplexBindingElement(System.ServiceModel.MessageSecurityVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMutualCertificateDuplexBindingElement (version As MessageSecurityVersion) As AsymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::AsymmetricSecurityBindingElement ^ CreateMutualCertificateDuplexBindingElement(System::ServiceModel::MessageSecurityVersion ^ version);" />
      <MemberSignature Language="F#" Value="static member CreateMutualCertificateDuplexBindingElement : System.ServiceModel.MessageSecurityVersion -&gt; System.ServiceModel.Channels.AsymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateDuplexBindingElement version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.AsymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.MessageSecurityVersion" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="version">消息安全版本。</param>
        <summary>创建一个非对称安全绑定元素，该元素配置为需要基于证书的客户端身份验证以及基于证书的服务器身份验证。 此身份验证模式可用于保护双工消息交换模式，它需要用带外客户端证书配置服务。</summary>
        <returns>一个 <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  通过调用此方法创建了 <xref:System.ServiceModel.Channels.SecurityBindingElement> 对象后，<xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A> 属性应被视为不可变。 如果修改此值，则可能出现不一致的绑定行为。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="version" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSecureConversationBindingElement">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个对称安全绑定元素，该元素配置为可在客户端和服务之间建立安全的对话。 在安全对话握手结束时颁发的安全上下文令牌用于保护消息的安全。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSecureConversationBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SecurityBindingElement CreateSecureConversationBindingElement (System.ServiceModel.Channels.SecurityBindingElement bootstrapSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SecurityBindingElement CreateSecureConversationBindingElement(class System.ServiceModel.Channels.SecurityBindingElement bootstrapSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSecureConversationBindingElement (bootstrapSecurity As SecurityBindingElement) As SecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SecurityBindingElement ^ CreateSecureConversationBindingElement(System::ServiceModel::Channels::SecurityBindingElement ^ bootstrapSecurity);" />
      <MemberSignature Language="F#" Value="static member CreateSecureConversationBindingElement : System.ServiceModel.Channels.SecurityBindingElement -&gt; System.ServiceModel.Channels.SecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement bootstrapSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bootstrapSecurity" Type="System.ServiceModel.Channels.SecurityBindingElement" />
      </Parameters>
      <Docs>
        <param name="bootstrapSecurity"><see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 包含如何保护安全对话握手消息的规范。</param>
        <summary>创建一个对称安全绑定元素，该元素配置为可在客户端和服务之间建立安全的对话。 在安全对话握手结束时颁发的安全上下文令牌用于保护消息的安全。 启动安全绑定元素指定如何保护安全对话握手消息。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 配置绑定元素以使用基于会话的安全上下文令牌。  
  
 `bootstrapSecurity` 用于指示安全绑定和策略，该绑定和策略用于向服务请求安全对话令牌。  
  
 如果 `bootstrapSecurity` 是 <xref:System.ServiceModel.Channels.TransportSecurityBindingElement>，则由此方法返回的绑定元素也是它，且 <xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A> 设置为 `true`；而且从 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays%2A> 属性设置为 `false`；而且从 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 否则将返回 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>，并且 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation%2A> 设置为 `false`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="bootstrapSecurity" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecureConversationBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SecurityBindingElement CreateSecureConversationBindingElement (System.ServiceModel.Channels.SecurityBindingElement bootstrapSecurity, bool requireCancellation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SecurityBindingElement CreateSecureConversationBindingElement(class System.ServiceModel.Channels.SecurityBindingElement bootstrapSecurity, bool requireCancellation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSecureConversationBindingElement (bootstrapSecurity As SecurityBindingElement, requireCancellation As Boolean) As SecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SecurityBindingElement ^ CreateSecureConversationBindingElement(System::ServiceModel::Channels::SecurityBindingElement ^ bootstrapSecurity, bool requireCancellation);" />
      <MemberSignature Language="F#" Value="static member CreateSecureConversationBindingElement : System.ServiceModel.Channels.SecurityBindingElement * bool -&gt; System.ServiceModel.Channels.SecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement (bootstrapSecurity, requireCancellation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bootstrapSecurity" Type="System.ServiceModel.Channels.SecurityBindingElement" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requireCancellation" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bootstrapSecurity"><see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 包含如何保护安全对话握手消息的规范。</param>
        <param name="requireCancellation">如果需要取消，则为 <see langword="true" />；否则为 <see langword="false" />。 将此参数设置为 <see langword="false" /> 可在网络场方案中启用有用的安全上下文令牌，因为在此模式下，会话状态是在建立的安全上下文令牌内部编码的，而不是保留在服务器内存中。</param>
        <summary>创建一个对称安全绑定元素，该元素配置为可在客户端和服务之间建立安全的对话。 在安全对话握手结束时颁发的安全上下文令牌用于保护消息的安全。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `requireCancellation` 为 `false`，则颁发基于 Cookie 的安全上下文令牌；否则，颁发基于会话的安全上下文令牌。  
  
 `bootstrapSecurity` 用于指示安全绑定和策略，该绑定和策略用于向服务请求 `SecureConversationToken`。  
  
 如果 `bootstrapSecurity` 是 <xref:System.ServiceModel.Channels.TransportSecurityBindingElement>，则由此方法返回的绑定元素也是 `TransportSecurityBindingElement`，且 <xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A> 设置为 `true`；而且从 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays%2A> 属性设置为 `false`；而且从 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 否则将返回 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>，并且 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation%2A> 设置为 `false`。  
  
> [!NOTE]
>  当需要在 [!INCLUDE[wxp](~/includes/wxp-md.md)] 上进行模拟时，请不要在安全会话中使用安全上下文令牌。 如果在模拟时使用安全上下文令牌，则会引发 <xref:System.InvalidOperationException>。 有关详细信息，请参阅 [不支持的方案](/dotnet/framework/wcf/feature-details/unsupported-scenarios)。 有关安全会话的详细信息，请参阅 [安全会话](/dotnet/framework/wcf/feature-details/secure-sessions)。  
  
   
  
## Examples  
 下面的代码演示如何调用此方法。  
  
 [!code-csharp[c_CreateSecureSession#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_createsecuresession/cs/secureservice.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="bootstrapSecurity" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecureConversationBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SecurityBindingElement CreateSecureConversationBindingElement (System.ServiceModel.Channels.SecurityBindingElement bootstrapSecurity, bool requireCancellation, System.ServiceModel.Security.ChannelProtectionRequirements bootstrapProtectionRequirements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SecurityBindingElement CreateSecureConversationBindingElement(class System.ServiceModel.Channels.SecurityBindingElement bootstrapSecurity, bool requireCancellation, class System.ServiceModel.Security.ChannelProtectionRequirements bootstrapProtectionRequirements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean,System.ServiceModel.Security.ChannelProtectionRequirements)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSecureConversationBindingElement (bootstrapSecurity As SecurityBindingElement, requireCancellation As Boolean, bootstrapProtectionRequirements As ChannelProtectionRequirements) As SecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SecurityBindingElement ^ CreateSecureConversationBindingElement(System::ServiceModel::Channels::SecurityBindingElement ^ bootstrapSecurity, bool requireCancellation, System::ServiceModel::Security::ChannelProtectionRequirements ^ bootstrapProtectionRequirements);" />
      <MemberSignature Language="F#" Value="static member CreateSecureConversationBindingElement : System.ServiceModel.Channels.SecurityBindingElement * bool * System.ServiceModel.Security.ChannelProtectionRequirements -&gt; System.ServiceModel.Channels.SecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement (bootstrapSecurity, requireCancellation, bootstrapProtectionRequirements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bootstrapSecurity" Type="System.ServiceModel.Channels.SecurityBindingElement" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requireCancellation" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bootstrapProtectionRequirements" Type="System.ServiceModel.Security.ChannelProtectionRequirements" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bootstrapSecurity"><see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 包含如何保护安全对话握手消息的规范。</param>
        <param name="requireCancellation">如果需要取消，则为 <see langword="true" />；否则为 <see langword="false" />。 将此参数设置为 <see langword="false" /> 可在网络场方案中启用有用的安全上下文令牌，因为在此模式下，会话状态是在建立的安全上下文令牌内部编码的，而不是保留在服务器内存中。</param>
        <param name="bootstrapProtectionRequirements">指定通道保护的要求的 <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> 对象。</param>
        <summary>创建一个对称安全绑定元素，该元素配置为可在客户端和服务之间建立安全的对话。 在安全对话握手结束时颁发的安全上下文令牌用于保护消息的安全。 启动安全绑定元素指定如何保护安全对话握手消息。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `bootstrapProtectionRequirements` 参数可启用自定义功能，以自定义如何保护作为保护对话握手组成部分而交换的消息。  
  
 `bootstrapSecurity` 用于指示安全绑定和策略，该绑定和策略用于向服务请求安全对话令牌。  
  
 如果 `bootstrapSecurity` 是 <xref:System.ServiceModel.Channels.TransportSecurityBindingElement>，则由此方法返回的绑定元素也是 `TransportSecurityBindingElement`，且 <xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A> 设置为 `true`；而且从 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays%2A> 属性设置为 `false`；而且从 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 否则将返回 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>，并且 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation%2A> 设置为 `false`。  
  
> [!NOTE]
>  当需要在 [!INCLUDE[wxp](~/includes/wxp-md.md)] 上进行模拟时，请不要在安全会话中使用安全上下文令牌。 如果在模拟时使用安全上下文令牌，则会引发 <xref:System.InvalidOperationException>。 有关详细信息，请参阅 [不支持的方案](/dotnet/framework/wcf/feature-details/unsupported-scenarios)。 有关安全会话的详细信息，请参阅 [安全会话](/dotnet/framework/wcf/feature-details/secure-sessions)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="bootstrapSecurity" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSslNegotiationBindingElement">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个对称安全绑定元素，该元素配置为可在客户端和服务器之间执行 SOAP 级别的 SSL 协商。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSslNegotiationBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateSslNegotiationBindingElement (bool requireClientCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateSslNegotiationBindingElement(bool requireClientCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSslNegotiationBindingElement(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSslNegotiationBindingElement (requireClientCertificate As Boolean) As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateSslNegotiationBindingElement(bool requireClientCertificate);" />
      <MemberSignature Language="F#" Value="static member CreateSslNegotiationBindingElement : bool -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateSslNegotiationBindingElement requireClientCertificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requireClientCertificate" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="requireClientCertificate">如果在 SSL 协商的过程中需要客户端证书，则为 <see langword="true" />。</param>
        <summary>创建一个对称安全绑定元素，该元素配置为可在客户端和服务器之间运行 SOAP 级别的 SSL 协商，并说明是否需要客户端证书。</summary>
        <returns>容纳新绑定的 <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 SSL 协商后颁发的安全上下文令牌是基于 Cookie 的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSslNegotiationBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateSslNegotiationBindingElement (bool requireClientCertificate, bool requireCancellation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateSslNegotiationBindingElement(bool requireClientCertificate, bool requireCancellation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSslNegotiationBindingElement(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSslNegotiationBindingElement (requireClientCertificate As Boolean, requireCancellation As Boolean) As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateSslNegotiationBindingElement(bool requireClientCertificate, bool requireCancellation);" />
      <MemberSignature Language="F#" Value="static member CreateSslNegotiationBindingElement : bool * bool -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateSslNegotiationBindingElement (requireClientCertificate, requireCancellation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requireClientCertificate" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="requireCancellation" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="requireClientCertificate">如果在 SSL 协商的过程中需要客户端证书，则为 <see langword="true" />。</param>
        <param name="requireCancellation">如果需要取消，则为 <see langword="true" />。 通过将其设置为 <see langword="false" />，将能够启用在网络场方案中十分有用的安全上下文令牌，因为在此模式下，会话状态是在建立的安全上下文令牌内部编码的，而不是保留在服务器内存中。</param>
        <summary>创建一个对称安全绑定元素，该元素执行 SOAP SSL 协商，并说明是否需要客户端证书和取消。</summary>
        <returns>容纳新绑定的 <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `requireCancellation` 为 `true`，则在 SSL 协商后颁发的安全上下文令牌是基于会话的；否则，是基于 Cookie 的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSspiNegotiationBindingElement">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个对称安全绑定元素，该元素基于协商身份验证包执行 SOAP SSPI 协商。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSspiNegotiationBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateSspiNegotiationBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateSspiNegotiationBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSspiNegotiationBindingElement () As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateSspiNegotiationBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateSspiNegotiationBindingElement : unit -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个对称安全绑定元素，该元素基于协商身份验证包执行 SOAP SSPI 协商。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 SSPI 协商末尾颁发的安全上下文令牌是基于 Cookie 的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSspiNegotiationBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateSspiNegotiationBindingElement (bool requireCancellation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateSspiNegotiationBindingElement(bool requireCancellation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationBindingElement(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSspiNegotiationBindingElement (requireCancellation As Boolean) As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateSspiNegotiationBindingElement(bool requireCancellation);" />
      <MemberSignature Language="F#" Value="static member CreateSspiNegotiationBindingElement : bool -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationBindingElement requireCancellation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requireCancellation" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="requireCancellation">指定是否需要取消。 通过将其设置为 <see langword="false" />，将能够启用在网络场方案中十分有用的安全上下文令牌，因为在此模式下，会话状态是在建立的安全上下文令牌内部编码的，而不是保留在服务器内存中。</param>
        <summary>创建一个对称安全绑定元素，该元素基于协商身份验证包执行 SOAP SSPI 协商。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `requireCancellation` 为 `false`，则在 SSPI 协议末尾颁发的安全上下文令牌是基于 Cookie 的；否则，是基于会话的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSspiNegotiationOverTransportBindingElement">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个安全绑定元素，该元素配置为使用协商身份验证包基于 SOAP SSPI 协商进行客户端身份验证。 绑定元素需要传输提供服务器身份验证和消息保护（例如 HTTPS）。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSspiNegotiationOverTransportBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.TransportSecurityBindingElement CreateSspiNegotiationOverTransportBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.TransportSecurityBindingElement CreateSspiNegotiationOverTransportBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationOverTransportBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSspiNegotiationOverTransportBindingElement () As TransportSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::TransportSecurityBindingElement ^ CreateSspiNegotiationOverTransportBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateSspiNegotiationOverTransportBindingElement : unit -&gt; System.ServiceModel.Channels.TransportSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationOverTransportBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransportSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个安全绑定元素，该元素配置为使用协商身份验证包基于 SOAP SSPI 协商进行客户端身份验证。 绑定元素需要传输提供服务器身份验证和消息保护（例如 HTTPS）。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 SSPI 协商末尾颁发的安全上下文令牌是基于 Cookie 的。  
  
 所创建绑定的 <xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A> 设置为 `true`。 从 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 从 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSspiNegotiationOverTransportBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.TransportSecurityBindingElement CreateSspiNegotiationOverTransportBindingElement (bool requireCancellation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.TransportSecurityBindingElement CreateSspiNegotiationOverTransportBindingElement(bool requireCancellation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationOverTransportBindingElement(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSspiNegotiationOverTransportBindingElement (requireCancellation As Boolean) As TransportSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::TransportSecurityBindingElement ^ CreateSspiNegotiationOverTransportBindingElement(bool requireCancellation);" />
      <MemberSignature Language="F#" Value="static member CreateSspiNegotiationOverTransportBindingElement : bool -&gt; System.ServiceModel.Channels.TransportSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationOverTransportBindingElement requireCancellation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransportSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requireCancellation" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="requireCancellation">指定是否需要取消。 通过将其设置为 <see langword="false" />，将能够启用在网络场方案中十分有用的安全上下文令牌，因为在此模式下，会话状态是在建立的安全上下文令牌内部编码的，而不是保留在服务器内存中。</param>
        <summary>创建一个安全绑定元素，该元素配置为使用协商身份验证包基于 SOAP SSPI 协商进行客户端身份验证。 绑定元素需要传输提供服务器身份验证和消息保护（例如 HTTPS）。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `requireCancellation` 为 `false`，则颁发基于 Cookie 的安全上下文令牌；否则，颁发基于会话的安全上下文令牌。  
  
 所创建绑定的 <xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A> 设置为 `true`。 从 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 从 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserNameForCertificateBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateUserNameForCertificateBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateUserNameForCertificateBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForCertificateBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUserNameForCertificateBindingElement () As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateUserNameForCertificateBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateUserNameForCertificateBindingElement : unit -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForCertificateBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个对称安全绑定元素，该元素配置为需要基于用户名和密码的客户端身份验证以及基于证书的服务器身份验证。 在使用服务打开信道之前，创建的绑定元素需要使用带外服务证书配置客户端。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 服务器证书必须对客户端进行带外配置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUserNameForSslBindingElement">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个对称安全绑定元素，该元素配置为需要基于用户名和密码的客户端身份验证以及基于证书的服务器身份验证。 客户端使用 SOAP 级别的 SSL 协议对服务器进行身份验证。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUserNameForSslBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateUserNameForSslBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateUserNameForSslBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForSslBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUserNameForSslBindingElement () As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateUserNameForSslBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateUserNameForSslBindingElement : unit -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForSslBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个对称安全绑定元素，该元素配置为需要基于用户名和密码的客户端身份验证以及基于证书的服务器身份验证。 客户端使用 SOAP 级别的 SSL 协议对服务器进行身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 SSPI 协商末尾颁发的安全上下文令牌是基于 Cookie 的。  
  
 不必使用服务器证书配置客户端，因为服务器证书将作为 SSL 协议的组成部分被客户端获取。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserNameForSslBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateUserNameForSslBindingElement (bool requireCancellation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.SymmetricSecurityBindingElement CreateUserNameForSslBindingElement(bool requireCancellation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForSslBindingElement(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUserNameForSslBindingElement (requireCancellation As Boolean) As SymmetricSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::SymmetricSecurityBindingElement ^ CreateUserNameForSslBindingElement(bool requireCancellation);" />
      <MemberSignature Language="F#" Value="static member CreateUserNameForSslBindingElement : bool -&gt; System.ServiceModel.Channels.SymmetricSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForSslBindingElement requireCancellation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SymmetricSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requireCancellation" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="requireCancellation">指定是否需要取消。 通过将其设置为 <see langword="false" />，将能够启用在网络场方案中十分有用的安全上下文令牌，因为在此模式下，会话状态是在建立的安全上下文令牌内部编码的，而不是保留在服务器内存中。</param>
        <summary>创建一个对称安全绑定元素，该元素配置为需要基于用户名和密码的客户端身份验证以及基于证书的服务器身份验证。 客户端使用 SOAP 级别的 SSL 协议对服务器进行身份验证。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `requireCancellation` 为 `false`，则颁发有状态的安全上下文令牌；否则，颁发无状态的安全上下文令牌。  
  
 不必使用服务器证书配置客户端，因为服务器证书将作为 SSL 协议的组成部分被客户端获取。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserNameOverTransportBindingElement">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.TransportSecurityBindingElement CreateUserNameOverTransportBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.TransportSecurityBindingElement CreateUserNameOverTransportBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUserNameOverTransportBindingElement () As TransportSecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::TransportSecurityBindingElement ^ CreateUserNameOverTransportBindingElement();" />
      <MemberSignature Language="F#" Value="static member CreateUserNameOverTransportBindingElement : unit -&gt; System.ServiceModel.Channels.TransportSecurityBindingElement" Usage="System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransportSecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个对称安全绑定元素，该元素配置为基于作为 SOAP 消息的组成部分发送的用户名和密码对客户端进行身份验证。 绑定元素需要传输提供服务器身份验证和消息保护（例如 HTTPS）。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所创建绑定的 <xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A> 设置为 `true`。 从 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 从 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 中返回的 <xref:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings%2A> 对象的 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> 属性设置为 `false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAlgorithmSuite">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityAlgorithmSuite DefaultAlgorithmSuite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityAlgorithmSuite DefaultAlgorithmSuite" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.DefaultAlgorithmSuite" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultAlgorithmSuite As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityAlgorithmSuite ^ DefaultAlgorithmSuite { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); void set(System::ServiceModel::Security::SecurityAlgorithmSuite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAlgorithmSuite : System.ServiceModel.Security.SecurityAlgorithmSuite with get, set" Usage="System.ServiceModel.Channels.SecurityBindingElement.DefaultAlgorithmSuite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息加密和密钥换行算法。</summary>
        <value>表示消息加密和密钥包装算法的 <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>包含多个属性的对象，这些属性指定要用于签名、加密、密钥派生和其他加密操作的安全算法。 此对象还控制用于执行上述加密操作的密钥的大小。  
  
   
  
## Examples  
 下面的代码演示如何设置此属性。  
  
 [!code-csharp[c_CustomBindingsAuthMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_custombindingsauthmode/cs/source.cs#8)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">值在 <see langword="set" /> 上为 Null。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableUnsecuredResponse">
      <MemberSignature Language="C#" Value="public bool EnableUnsecuredResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUnsecuredResponse" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.EnableUnsecuredResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUnsecuredResponse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUnsecuredResponse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableUnsecuredResponse : bool with get, set" Usage="System.ServiceModel.Channels.SecurityBindingElement.EnableUnsecuredResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 WCF 是否能发送和接收对安全请求的不安全响应。</summary>
        <value><see langword="true" /> 如果 WCF 可以发送和接收对安全请求的不安全响应，则为;否则为 <see langword="false" /> 。 默认为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointSupportingTokenParameters">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.Tokens.SupportingTokenParameters EndpointSupportingTokenParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.Tokens.SupportingTokenParameters EndpointSupportingTokenParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.EndpointSupportingTokenParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointSupportingTokenParameters As SupportingTokenParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::Tokens::SupportingTokenParameters ^ EndpointSupportingTokenParameters { System::ServiceModel::Security::Tokens::SupportingTokenParameters ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointSupportingTokenParameters : System.ServiceModel.Security.Tokens.SupportingTokenParameters" Usage="System.ServiceModel.Channels.SecurityBindingElement.EndpointSupportingTokenParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SupportingTokenParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取支持令牌参数的终结点。</summary>
        <value>表示支持令牌参数的终点的 <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 支持令牌除了提供包含在绑定的主令牌中的声明之外，还提供其他声明。 <xref:System.ServiceModel.Channels.SecurityBindingElement.EndpointSupportingTokenParameters%2A> 返回的集合包含针对由终结点定义的全部操作的其他令牌参数 (<xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>)。 主令牌参数可以在 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> 或 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement>（两者都继承了 <xref:System.ServiceModel.Channels.SecurityBindingElement> 类）中找到。 如果是 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>，则主令牌参数由 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters%2A> 属性返回。 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement> 元素上有两个参数属性，分别是 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters%2A> 和 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters%2A> 属性。  
  
> [!NOTE]
>  这些属性仅指定安全令牌的类型，而不指定实际值，因此被称为参数。  
>   
>  支持令牌的范围可确定为终结点级别，在这种情况下，从客户端发送到服务的所有安全消息都包含支持令牌。 此服务强制所有来自客户端安全消息包含此属性配置的支持令牌类型。  
>   
>  若要仅为某个操作（而非终结点上的全部操作）提供支持令牌，请使用 <xref:System.ServiceModel.Channels.SecurityBindingElement.OptionalOperationSupportingTokenParameters%2A> 属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="securityBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">要获取的属性。</typeparam>
        <param name="context"><see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
        <summary>使用指定的 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 获取指定对象。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.BindingContext" /> 中的指定对象；如果找不到该对象，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法从基类或该类的一个上级中获取指定对象。 返回的对象通常是一个属性集合，例如实现 <xref:System.ServiceModel.Channels.ISecurityCapabilities> 的对象。  
  
 如果 `SecurityBindingElement` 无法识别请求的属性类型，则会将调用委托给其下的绑定元素堆栈，并将传递绑定上下文参数。 `SecurityBindingElement` 可提供的属性类型为 <xref:System.ServiceModel.Channels.ISecurityCapabilities> 和 <xref:System.ServiceModel.Security.IdentityVerifier>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTimestamp">
      <MemberSignature Language="C#" Value="public bool IncludeTimestamp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeTimestamp" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeTimestamp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeTimestamp { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeTimestamp : bool with get, set" Usage="System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否每条消息都包含时间戳。</summary>
        <value>如果每条消息都包含时间戳，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A> 属性为， `true` 并且如果 `DetectReplays` 为 `true` ，则 WCF 将检测重播攻击。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyEntropyMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityKeyEntropyMode KeyEntropyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.SecurityKeyEntropyMode KeyEntropyMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.KeyEntropyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyEntropyMode As SecurityKeyEntropyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityKeyEntropyMode KeyEntropyMode { System::ServiceModel::Security::SecurityKeyEntropyMode get(); void set(System::ServiceModel::Security::SecurityKeyEntropyMode value); };" />
      <MemberSignature Language="F#" Value="member this.KeyEntropyMode : System.ServiceModel.Security.SecurityKeyEntropyMode with get, set" Usage="System.ServiceModel.Channels.SecurityBindingElement.KeyEntropyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityKeyEntropyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于创建密钥的熵来源。</summary>
        <value>用来创建键的 <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" />。 默认值为 <see cref="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.SecurityBindingElement.KeyEntropyMode%2A> 指定如何计算由服务颁发的令牌密钥（如 <xref:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken>）：是仅基于客户端密钥材料进行计算，还是仅基于服务密钥材料进行计算，或是同时基于两者进行计算。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalClientSettings">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.LocalClientSecuritySettings LocalClientSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.LocalClientSecuritySettings LocalClientSettings" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalClientSettings As LocalClientSecuritySettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::LocalClientSecuritySettings ^ LocalClientSettings { System::ServiceModel::Channels::LocalClientSecuritySettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalClientSettings : System.ServiceModel.Channels.LocalClientSecuritySettings" Usage="System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.LocalClientSecuritySettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由客户端使用的特定于本地安全设置的绑定属性。</summary>
        <value>表示客户端所使用的本地安全设置的绑定属性的 <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这些设置是本地的，因为它们不是派生自服务安全策略的设置。 您可以获取 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings> 对象并使用此对象设置此绑定的安全属性。  
  
   
  
## Examples  
 下面的代码演示如何访问此属性以设置其他对象的属性。  
  
 [!code-csharp[c_MaxClockSkew#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_maxclockskew/cs/source.cs#1)]
 [!code-vb[c_MaxClockSkew#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_maxclockskew/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalServiceSettings">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.LocalServiceSecuritySettings LocalServiceSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.LocalServiceSecuritySettings LocalServiceSettings" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalServiceSettings As LocalServiceSecuritySettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::LocalServiceSecuritySettings ^ LocalServiceSettings { System::ServiceModel::Channels::LocalServiceSecuritySettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalServiceSettings : System.ServiceModel.Channels.LocalServiceSecuritySettings" Usage="System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.LocalServiceSecuritySettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由客户端使用的特定于本地安全设置的绑定属性。</summary>
        <value>表示服务所使用的本地安全设置的绑定属性的 <see cref="T:System.ServiceModel.Channels.LocalServiceSecuritySettings" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这些设置并非作为安全策略的组成部分而发布，而且不影响客户端绑定，因此是本地的。  
  
 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 对象的下列属性有助于缓解拒绝服务 (DOS) 安全攻击：  
  
-   <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies%2A>：控制在执行 SPNEGO 或 SSL 协商之后服务器所缓存的有时限的 `SecurityContextToken` 的最大数量。  
  
-   <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime%2A>：控制在进行 SPNEGO 或 SSL 协商之后服务器所发布的 `SecurityContextToken` 的生命周期。 在此时间期限内，服务器将缓存 `SecurityContextToken`。  
  
-   <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions%2A>：控制在服务器上建立但尚未针为其处理任何应用程序消息的安全对话的最大数目。 此配额可防止客户端在服务上建立安全对话而导致服务维护每个客户端的状态，但是从不使用这些状态。  
  
-   <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout%2A>：控制服务使安全对话保持活动状态（但不接收服务上的应用程序消息）的最长时间。 此配额可防止客户端在服务上建立安全对话而导致服务维护每个客户端的状态，但是从不使用这些状态。  
  
 请注意，在安全对话会话中，绑定上的 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout%2A> 和 `ReceiveTimeout` 属性将影响会话超时。 两个属性中时间较短者将确定何时发生超时。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageSecurityVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.MessageSecurityVersion MessageSecurityVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.MessageSecurityVersion MessageSecurityVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageSecurityVersion As MessageSecurityVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::MessageSecurityVersion ^ MessageSecurityVersion { System::ServiceModel::MessageSecurityVersion ^ get(); void set(System::ServiceModel::MessageSecurityVersion ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageSecurityVersion : System.ServiceModel.MessageSecurityVersion with get, set" Usage="System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.MessageSecurityVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息安全版本。</summary>
        <value>表示消息安全版本的 <see cref="T:System.ServiceModel.MessageSecurityVersion" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.MessageSecurityVersion>，包含大量指定不同安全规范版本号的属性，这些安全规范用于在通道中保护交换消息。  
  
> [!NOTE]
>  在创建了 <xref:System.ServiceModel.Channels.SecurityBindingElement> 对象后，此属性为不可变。 对它调用 `set` 不会将其改变。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">带有 Null 值的 <see langword="set" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="OperationSupportingTokenParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Security.Tokens.SupportingTokenParameters&gt; OperationSupportingTokenParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Security.Tokens.SupportingTokenParameters&gt; OperationSupportingTokenParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.OperationSupportingTokenParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperationSupportingTokenParameters As IDictionary(Of String, SupportingTokenParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Security::Tokens::SupportingTokenParameters ^&gt; ^ OperationSupportingTokenParameters { System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Security::Tokens::SupportingTokenParameters ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OperationSupportingTokenParameters : System.Collections.Generic.IDictionary&lt;string, System.ServiceModel.Security.Tokens.SupportingTokenParameters&gt;" Usage="System.ServiceModel.Channels.SecurityBindingElement.OperationSupportingTokenParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Security.Tokens.SupportingTokenParameters&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取操作支持令牌参数的集合。</summary>
        <value>一个 <see cref="T:System.Collections.Generic.IDictionary`2" />，类型为 <see cref="T:System.String" />（键）和 <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" />（值）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 支持令牌除了提供包含在绑定的主令牌中的声明之外，还提供其他声明。  
  
 <xref:System.ServiceModel.Channels.SecurityBindingElement.OperationSupportingTokenParameters%2A> 属性返回的集合包含针对已定义的特定操作的其他令牌参数 (<xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>)。 主令牌参数可以在 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> 或 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement>（两者都继承了 <xref:System.ServiceModel.Channels.SecurityBindingElement> 类）中找到。 如果是 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>，则主令牌参数由 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters%2A> 属性返回。 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement> 上有两个参数属性，分别是 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters%2A> 和 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters%2A> 属性。  
  
> [!NOTE]
>  这些属性仅指定安全令牌的类型，而不指定实际值，因此被称为参数。  
  
 支持令牌的范围可以为不同于绑定的范围（此处指操作），在这种情况下，从客户端发送到具有指定操作的服务的所有安全消息中都包含支持令牌。  
  
 若要仅为某个操作（而非终结点上的全部操作）提供支持令牌，请使用 <xref:System.ServiceModel.Channels.SecurityBindingElement.OptionalOperationSupportingTokenParameters%2A> 属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionalEndpointSupportingTokenParameters">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.Tokens.SupportingTokenParameters OptionalEndpointSupportingTokenParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.Tokens.SupportingTokenParameters OptionalEndpointSupportingTokenParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.OptionalEndpointSupportingTokenParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OptionalEndpointSupportingTokenParameters As SupportingTokenParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::Tokens::SupportingTokenParameters ^ OptionalEndpointSupportingTokenParameters { System::ServiceModel::Security::Tokens::SupportingTokenParameters ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OptionalEndpointSupportingTokenParameters : System.ServiceModel.Security.Tokens.SupportingTokenParameters" Usage="System.ServiceModel.Channels.SecurityBindingElement.OptionalEndpointSupportingTokenParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SupportingTokenParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取服务终结点的可选支持令牌参数。</summary>
        <value>服务终结点的 <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 支持令牌除了提供包含在绑定的主令牌中的声明之外，还提供其他声明。 支持令牌的范围可以是不同于绑定的范围（此处指终结点）。 即便消息不包含与 <xref:System.ServiceModel.Channels.SecurityBindingElement.OptionalEndpointSupportingTokenParameters%2A> 集合中指定的令牌类型相符的令牌，服务也不会拒绝该消息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionalOperationSupportingTokenParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Security.Tokens.SupportingTokenParameters&gt; OptionalOperationSupportingTokenParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Security.Tokens.SupportingTokenParameters&gt; OptionalOperationSupportingTokenParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.OptionalOperationSupportingTokenParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OptionalOperationSupportingTokenParameters As IDictionary(Of String, SupportingTokenParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Security::Tokens::SupportingTokenParameters ^&gt; ^ OptionalOperationSupportingTokenParameters { System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Security::Tokens::SupportingTokenParameters ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OptionalOperationSupportingTokenParameters : System.Collections.Generic.IDictionary&lt;string, System.ServiceModel.Security.Tokens.SupportingTokenParameters&gt;" Usage="System.ServiceModel.Channels.SecurityBindingElement.OptionalOperationSupportingTokenParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Security.Tokens.SupportingTokenParameters&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可选操作支持令牌参数的集合。</summary>
        <value>一个 <see cref="T:System.Collections.Generic.IDictionary`2" />，类型为 <see cref="T:System.String" />（键）和 <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" />（值）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 支持令牌除了提供包含在绑定的主令牌中的声明之外，还提供其他声明。 支持令牌的范围可以是不同于绑定的范围（此处指操作）。 即便消息不包含与 <xref:System.ServiceModel.Channels.SecurityBindingElement.OptionalOperationSupportingTokenParameters%2A> 集合中指定的令牌类型相符的令牌，服务也不会拒绝该消息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectTokens">
      <MemberSignature Language="C#" Value="public bool ProtectTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.ProtectTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectTokens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectTokens { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectTokens : bool with get, set" Usage="System.ServiceModel.Channels.SecurityBindingElement.ProtectTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置安全绑定元素是否保护令牌。</summary>
        <value>如果安全绑定元素保护标记，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityHeaderLayout">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.SecurityHeaderLayout SecurityHeaderLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Channels.SecurityHeaderLayout SecurityHeaderLayout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.SecurityBindingElement.SecurityHeaderLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityHeaderLayout As SecurityHeaderLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::SecurityHeaderLayout SecurityHeaderLayout { System::ServiceModel::Channels::SecurityHeaderLayout get(); void set(System::ServiceModel::Channels::SecurityHeaderLayout value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityHeaderLayout : System.ServiceModel.Channels.SecurityHeaderLayout with get, set" Usage="System.ServiceModel.Channels.SecurityBindingElement.SecurityHeaderLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SecurityHeaderLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此绑定的安全头中的元素排序。</summary>
        <value>表示此绑定的安全头中的元素排序的 <see cref="T:System.ServiceModel.Channels.SecurityHeaderLayout" />。 默认为 <see cref="F:System.ServiceModel.Channels.SecurityHeaderLayout.Strict" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.SecurityHeaderLayout> 枚举包含下列成员：  
  
-   <xref:System.ServiceModel.Channels.SecurityHeaderLayout.Strict>：根据 "使用之前声明" 的一般原则，将项添加到安全标头中。  
  
-   <xref:System.ServiceModel.Channels.SecurityHeaderLayout.Lax>：项以任何符合 WSS: SOAP 消息安全的顺序添加到安全头中。  
  
-   <xref:System.ServiceModel.Channels.SecurityHeaderLayout.LaxTimestampFirst>：项以任何符合 WSS: SOAP 消息安全的顺序添加到安全头中，但安全头中的第一个元素必须是 `wsse:Timestamp` 元素。  
  
-   <xref:System.ServiceModel.Channels.SecurityHeaderLayout.LaxTimestampLast>：项以任何符合 WSS: SOAP 消息安全的顺序添加到安全头中，但安全头中的最后一个元素必须是 `wsse:Timestamp` 元素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">该值不是有效的 <see cref="T:System.ServiceModel.Channels.SecurityHeaderLayout" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetIssuerBindingContextIfRequired">
      <MemberSignature Language="C#" Value="protected static void SetIssuerBindingContextIfRequired (System.ServiceModel.Security.Tokens.SecurityTokenParameters parameters, System.ServiceModel.Channels.BindingContext issuerBindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void SetIssuerBindingContextIfRequired(class System.ServiceModel.Security.Tokens.SecurityTokenParameters parameters, class System.ServiceModel.Channels.BindingContext issuerBindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.SetIssuerBindingContextIfRequired(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub SetIssuerBindingContextIfRequired (parameters As SecurityTokenParameters, issuerBindingContext As BindingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void SetIssuerBindingContextIfRequired(System::ServiceModel::Security::Tokens::SecurityTokenParameters ^ parameters, System::ServiceModel::Channels::BindingContext ^ issuerBindingContext);" />
      <MemberSignature Language="F#" Value="static member SetIssuerBindingContextIfRequired : System.ServiceModel.Security.Tokens.SecurityTokenParameters * System.ServiceModel.Channels.BindingContext -&gt; unit" Usage="System.ServiceModel.Channels.SecurityBindingElement.SetIssuerBindingContextIfRequired (parameters, issuerBindingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Security.Tokens.SecurityTokenParameters" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="issuerBindingContext" Type="System.ServiceModel.Channels.BindingContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="parameters"><see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />。</param>
        <param name="issuerBindingContext">表示用于令牌要求属性（其值是用来与颁布方对话的 BindingContext ）的密钥的 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 对象。</param>
        <summary>设置令牌要求属性的密钥，其值为用于和颁发方进行对话的 BindingContext（如果要求适用于已颁发的令牌）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 预留给系统使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyDerivation">
      <MemberSignature Language="C#" Value="public virtual void SetKeyDerivation (bool requireDerivedKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKeyDerivation(bool requireDerivedKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.SetKeyDerivation(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetKeyDerivation (requireDerivedKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetKeyDerivation(bool requireDerivedKeys);" />
      <MemberSignature Language="F#" Value="abstract member SetKeyDerivation : bool -&gt; unit&#xA;override this.SetKeyDerivation : bool -&gt; unit" Usage="securityBindingElement.SetKeyDerivation requireDerivedKeys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requireDerivedKeys" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="requireDerivedKeys"><see langword="true" /> 需要派生密钥；否则为 <see langword="false" />。</param>
        <summary>设置一个值，该值指示是否需要派生密钥。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码演示如何调用此方法。  
  
 [!code-csharp[c_CreateSecureSession#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_createsecuresession/cs/secureservice.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.SecurityBindingElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityBindingElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回对此类的描述。</summary>
        <returns>对当前 <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> 实例的描述。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由 <xref:System.ServiceModel.Channels.SecurityBindingElement.ToString%2A> 返回的信息包含当前实例的 <xref:System.ServiceModel.Channels.SecurityBindingElement.DefaultAlgorithmSuite%2A>、<xref:System.ServiceModel.Channels.SecurityBindingElement.EndpointSupportingTokenParameters%2A>、<xref:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp%2A>、<xref:System.ServiceModel.Channels.SecurityBindingElement.KeyEntropyMode%2A>、<xref:System.ServiceModel.Channels.SecurityBindingElement.OptionalEndpointSupportingTokenParameters%2A>、<xref:System.ServiceModel.Channels.SecurityBindingElement.SecurityHeaderLayout%2A> 和 <xref:System.ServiceModel.Channels.SecurityBindingElement.OperationSupportingTokenParameters%2A> 值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
