<Type Name="MessageEncoderFactory" FullName="System.ServiceModel.Channels.MessageEncoderFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7d3ed91b7299df1c6db31920a6fd8bb0768e8d1f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86747992" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageEncoderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageEncoderFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.MessageEncoderFactory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageEncoderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageEncoderFactory abstract" />
  <TypeSignature Language="F#" Value="type MessageEncoderFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2bee9-101">一个抽象基类，表示用于生成消息编码器的工厂，消息编码器可从流中读取消息和将消息写入流以进行多种类型的消息编码。</span><span class="sxs-lookup"><span data-stu-id="2bee9-101">An abstract base class that represents the factory for producing message encoders that can read messages from a stream and write them to a stream for various types of message encoding.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bee9-102">编码是将消息转换为一个字节序列的过程。</span><span class="sxs-lookup"><span data-stu-id="2bee9-102">Encoding is the process of transforming a message into a sequence of bytes.</span></span> <span data-ttu-id="2bee9-103">解码是反向过程。</span><span class="sxs-lookup"><span data-stu-id="2bee9-103">Decoding is the reverse process.</span></span>  
  
 <span data-ttu-id="2bee9-104">如果希望实现自定义消息编码器，请使用此类。</span><span class="sxs-lookup"><span data-stu-id="2bee9-104">Use this class if you want to implement a custom message encoder.</span></span> <span data-ttu-id="2bee9-105">若要实现自己的自定义消息编码器，必须提供以下三个抽象基类的自定义实现：</span><span class="sxs-lookup"><span data-stu-id="2bee9-105">To implement your own custom message encoder, you must provide custom implementations of the following three abstract base classes:</span></span>  
  
-   <xref:System.ServiceModel.Channels.MessageEncodingBindingElement>  
  
-   <xref:System.ServiceModel.Channels.MessageEncoderFactory>  
  
-   <xref:System.ServiceModel.Channels.MessageEncoder>  
  
 <span data-ttu-id="2bee9-106">重写 <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> 以返回自定义 <xref:System.ServiceModel.Channels.MessageEncoder> 的实例。</span><span class="sxs-lookup"><span data-stu-id="2bee9-106">Override the <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> to return an instance of your custom <xref:System.ServiceModel.Channels.MessageEncoder>.</span></span> <span data-ttu-id="2bee9-107">然后通过重写 <xref:System.ServiceModel.Channels.MessageEncoderFactory> 方法返回此工厂的实例，将自定义 <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A> 连接到用于配置服务或客户端的绑定元素堆栈。</span><span class="sxs-lookup"><span data-stu-id="2bee9-107">Then wire up your custom <xref:System.ServiceModel.Channels.MessageEncoderFactory> to the binding element stack used to configure the service or client by overriding the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A> method to return an instance of this factory.</span></span> <span data-ttu-id="2bee9-108">有关自定义编码器的详细信息，请参阅 [数据传输和序列化](/dotnet/framework/wcf/feature-details/data-transfer-and-serialization)。</span><span class="sxs-lookup"><span data-stu-id="2bee9-108">For more information about custom encoders, see [Data Transfer and Serialization](/dotnet/framework/wcf/feature-details/data-transfer-and-serialization).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bee9-109">下面的代码演示如何编写派生自 <xref:System.ServiceModel.Channels.MessageEncoderFactory> 的类：</span><span class="sxs-lookup"><span data-stu-id="2bee9-109">The following code shows how to write a class that is derived from <xref:System.ServiceModel.Channels.MessageEncoderFactory>:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#8)]
 [!code-csharp[S_UE_CustomTextMessageEncoder#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoderfactory.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageEncoderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageEncoderFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bee9-110">初始化 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2bee9-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSessionEncoder">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.MessageEncoder CreateSessionEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.MessageEncoder CreateSessionEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionEncoder () As MessageEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::MessageEncoder ^ CreateSessionEncoder();" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionEncoder : unit -&gt; System.ServiceModel.Channels.MessageEncoder&#xA;override this.CreateSessionEncoder : unit -&gt; System.ServiceModel.Channels.MessageEncoder" Usage="messageEncoderFactory.CreateSessionEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageEncoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bee9-111">返回一个消息编码器，可用于关联基于会话的交换中的消息。</span><span class="sxs-lookup"><span data-stu-id="2bee9-111">Returns a message encoder that can be used to correlate messages in session-based exchanges.</span></span></summary>
        <returns><span data-ttu-id="2bee9-112">在基于会话的消息交换中使用的 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />。</span><span class="sxs-lookup"><span data-stu-id="2bee9-112">The <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> that is used in session-based exchanges of messages.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bee9-113">基于会话的消息编码器可以跟踪组成部分对话的各个消息，对话由参与会话的两个终结点之间交换的所有消息组成。</span><span class="sxs-lookup"><span data-stu-id="2bee9-113">A session-based message encoder can keep track the individual messages that form part of a conversation that consists of all the messages exchanged between two endpoints that are part of a session.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoder">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageEncoder Encoder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageEncoder Encoder" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Encoder As MessageEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::MessageEncoder ^ Encoder { System::ServiceModel::Channels::MessageEncoder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoder : System.ServiceModel.Channels.MessageEncoder" Usage="System.ServiceModel.Channels.MessageEncoderFactory.Encoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2bee9-114">在派生类中重写时，获取工厂生成的消息编码器。</span><span class="sxs-lookup"><span data-stu-id="2bee9-114">When overridden in a derived class, gets the message encoder that is produced by the factory.</span></span></summary>
        <value><span data-ttu-id="2bee9-115">工厂使用的 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />。</span><span class="sxs-lookup"><span data-stu-id="2bee9-115">The <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> used by the factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2bee9-116">下面的代码演示如何实现 <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="2bee9-116">The following code illustrates how to implement the <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> property:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoderfactory.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageVersion MessageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageVersion : System.ServiceModel.Channels.MessageVersion" Usage="System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2bee9-117">在派生类中重写时，获取工厂生成用于编码消息的编码器所使用的消息版本。</span><span class="sxs-lookup"><span data-stu-id="2bee9-117">When overridden in a derived class, gets the message version that is used by the encoders produced by the factory to encode messages.</span></span></summary>
        <value><span data-ttu-id="2bee9-118">工厂使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</span><span class="sxs-lookup"><span data-stu-id="2bee9-118">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by the factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bee9-119">可以使用 <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A> 属性设置消息版本。</span><span class="sxs-lookup"><span data-stu-id="2bee9-119">The message version can be set using the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A> property.</span></span> <span data-ttu-id="2bee9-120"><xref:System.ServiceModel.Channels.MessageVersion> 仅限于使用特定版本的 SOAP 和 WS-ADDRESSING，并且不可扩展。</span><span class="sxs-lookup"><span data-stu-id="2bee9-120"><xref:System.ServiceModel.Channels.MessageVersion> is limited to using certain versions of SOAP and WS-Addressing and is not extensible.</span></span> <span data-ttu-id="2bee9-121">因此如果不使用这些版本，应重写此属性以返回 <xref:System.ServiceModel.Channels.MessageVersion.None%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2bee9-121">So if these versions are not to be used, this property should be overridden to return <xref:System.ServiceModel.Channels.MessageVersion.None%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bee9-122">下面的代码演示如何实现 <xref:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="2bee9-122">The following code illustrates how to implement the <xref:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion%2A> property:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoderfactory.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
