<Type Name="StreamUpgradeInitiator" FullName="System.ServiceModel.Channels.StreamUpgradeInitiator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b308793915841eac5a328bb25b0aa31880bb3ea" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86574988" /></Metadata><TypeSignature Language="C#" Value="public abstract class StreamUpgradeInitiator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamUpgradeInitiator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamUpgradeInitiator" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamUpgradeInitiator abstract" />
  <TypeSignature Language="F#" Value="type StreamUpgradeInitiator = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>若要实现自定义升级发起方，请从此 <see langword="abstract" /> 基类继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 流升级的一个示例是直接在传输流之上生成压缩流。 此类同 <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> 和 <xref:System.ServiceModel.Channels.StreamUpgradeProvider> 一起用于实现自定义流升级。  
  
 有关升级过程的详细说明，请参见 <xref:System.ServiceModel.Channels.StreamUpgradeProvider>。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/wcf/extending/custom-stream-upgrades">自定义流升级</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StreamUpgradeInitiator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StreamUpgradeInitiator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginInitiateUpgrade (System.IO.Stream stream, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInitiateUpgrade(class System.IO.Stream stream, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginInitiateUpgrade (stream As Stream, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginInitiateUpgrade(System::IO::Stream ^ stream, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginInitiateUpgrade : System.IO.Stream * AsyncCallback * obj -&gt; IAsyncResult" Usage="streamUpgradeInitiator.BeginInitiateUpgrade (stream, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">要升级的流。</param>
        <param name="callback">在 <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" /> 完成后要调用的方法。</param>
        <param name="state">有关异步调用状态的状态信息。</param>
        <summary>可实现此 <see langword="abstract" /> 方法以进行发起升级的异步处理。</summary>
        <returns>返回要传入 <see cref="T:System.IAsyncResult" /> 方法的 <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法调用 <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A> 并返回。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream EndInitiateUpgrade (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndInitiateUpgrade(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndInitiateUpgrade (result As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ EndInitiateUpgrade(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInitiateUpgrade : IAsyncResult -&gt; System.IO.Stream" Usage="streamUpgradeInitiator.EndInitiateUpgrade result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">从 <see langword="IAsyncResult" /> 方法返回的 <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />。</param>
        <summary>此方法是在 <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> 完成后调用的异步回调方法。</summary>
        <returns>返回升级后的流。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关使用此方法的更多信息，请参见 <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A> 中的备注。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextUpgrade">
      <MemberSignature Language="C#" Value="public abstract string GetNextUpgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNextUpgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextUpgrade () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetNextUpgrade();" />
      <MemberSignature Language="F#" Value="abstract member GetNextUpgrade : unit -&gt; string" Usage="streamUpgradeInitiator.GetNextUpgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回要执行的下一个升级的内容类型。</summary>
        <returns>返回下一个升级的内容类型。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回升级提供程序所支持的一组升级内容类型，并以它们的预期执行顺序返回。 支持单个升级的升级提供程序只返回单个值。 支持多个升级的升级提供程序按顺序返回多个值（例如，压缩内容类型后面是安全内容类型）。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream InitiateUpgrade (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream InitiateUpgrade(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function InitiateUpgrade (stream As Stream) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ InitiateUpgrade(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member InitiateUpgrade : System.IO.Stream -&gt; System.IO.Stream" Usage="streamUpgradeInitiator.InitiateUpgrade stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">要升级的流。</param>
        <summary>通过请求流连接的另一端升级通道传输层，启动流的升级。</summary>
        <returns>返回升级后的流。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于升级提供程序所支持的每个升级，可多次调用此方法。 例如，支持压缩和安全性的升级提供程序将两次调用此方法：第一次升级默认传输流以进行压缩，第二次升级安全性。 对此方法的后续调用应传入来自前一个调用的升级流。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
