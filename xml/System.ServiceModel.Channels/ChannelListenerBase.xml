<Type Name="ChannelListenerBase" FullName="System.ServiceModel.Channels.ChannelListenerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="253980ff6ae36a3719b3dd7d0173758d8c6e141b" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89900945" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChannelListenerBase : System.ServiceModel.Channels.ChannelManagerBase, System.ServiceModel.Channels.IChannelListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelListenerBase extends System.ServiceModel.Channels.ChannelManagerBase implements class System.ServiceModel.Channels.IChannelListener, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.ChannelListenerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelListenerBase&#xA;Inherits ChannelManagerBase&#xA;Implements IChannelListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelListenerBase abstract : System::ServiceModel::Channels::ChannelManagerBase, System::ServiceModel::Channels::IChannelListener" />
  <TypeSignature Language="F#" Value="type ChannelListenerBase = class&#xA;    inherit ChannelManagerBase&#xA;    interface IChannelListener&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.ChannelManagerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8e087-101">提供服务上的通道侦听器的通用基实现。</span><span class="sxs-lookup"><span data-stu-id="8e087-101">Provides a common base implementation for channel listeners on the service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e087-102">服务上的通道侦听器等待然后接受客户端上的工厂创建的通道。</span><span class="sxs-lookup"><span data-stu-id="8e087-102">The channel listeners on the service wait for and then accept the channels created by factories on the client.</span></span> <span data-ttu-id="8e087-103">一旦在客户端和服务之间建立了通道连接，消息就可以进行交换，分布式应用程序就可以进行通信。</span><span class="sxs-lookup"><span data-stu-id="8e087-103">Once the channel connection is established between client and service, messages can be exchanged and distributed applications can communicate.</span></span> <span data-ttu-id="8e087-104">侦听器提供的处理功能分为一组堆积通道侦听器，以便在选择要部署的 Windows Communication Foundation (WCF) 功能时提供模块化。</span><span class="sxs-lookup"><span data-stu-id="8e087-104">The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the Windows Communication Foundation (WCF) features to deploy.</span></span> <span data-ttu-id="8e087-105">服务堆栈中的每个通道侦听器都对应于客户端堆栈中的某个通道工厂。</span><span class="sxs-lookup"><span data-stu-id="8e087-105">Each channel listener in the service stack corresponds to a channel factory in the client stack.</span></span> <span data-ttu-id="8e087-106">工厂创建的通道是真实的通道堆栈，这些通道由服务上的侦听器堆栈接受并处理。</span><span class="sxs-lookup"><span data-stu-id="8e087-106">The channel created by the factory is really a stack of channels that are accepted and processed by the stack of listeners on the service.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e087-107">初始化 <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e087-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e087-108">在交换消息时，默认的 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> 构造函数使用服务模型超时值对超时属性进行初始化。</span><span class="sxs-lookup"><span data-stu-id="8e087-108">The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor initializes timeout properties with the service model timeout values when exchanging messages.</span></span> <span data-ttu-id="8e087-109">打开、发送和关闭操作的默认值为 1 分钟，接收操作的默认值为 10 分钟。</span><span class="sxs-lookup"><span data-stu-id="8e087-109">The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation.</span></span> <span data-ttu-id="8e087-110">若要为这些操作超时指定其他值，请使用 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。</span><span class="sxs-lookup"><span data-stu-id="8e087-110">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelListenerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelListenerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e087-111">初始化 <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e087-111">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e087-112">在交换消息时，无参数的构造函数将初始化超时属性与服务模型的超时值。</span><span class="sxs-lookup"><span data-stu-id="8e087-112">The parameterless constructor initializes timeout properties with the service model timeout values when exchanging messages.</span></span> <span data-ttu-id="8e087-113">打开、发送和关闭操作的默认值为 1 分钟，接收操作的默认值为 10 分钟。</span><span class="sxs-lookup"><span data-stu-id="8e087-113">The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation.</span></span> <span data-ttu-id="8e087-114">若要为这些操作超时指定其他值，请使用 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。</span><span class="sxs-lookup"><span data-stu-id="8e087-114">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IDefaultCommunicationTimeouts timeouts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (timeouts As IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelListenerBase(System::ServiceModel::IDefaultCommunicationTimeouts ^ timeouts);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.ChannelListenerBase : System.ServiceModel.IDefaultCommunicationTimeouts -&gt; System.ServiceModel.Channels.ChannelListenerBase" Usage="new System.ServiceModel.Channels.ChannelListenerBase timeouts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeouts" Type="System.ServiceModel.IDefaultCommunicationTimeouts" />
      </Parameters>
      <Docs>
        <param name="timeouts"><span data-ttu-id="8e087-115">指定交换消息时打开、发送、接收和关闭操作的默认超时的 <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />。</span><span class="sxs-lookup"><span data-stu-id="8e087-115">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.</span></span></param>
        <summary><span data-ttu-id="8e087-116">使用指定的默认通信超时初始化 <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e087-116">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> class with specified default communication timeouts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e087-117"><xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>如果要为打开、发送、接收和关闭操作超时指定自定义值（而不是使用服务模型的默认值），请使用而不是无参数构造函数。</span><span class="sxs-lookup"><span data-stu-id="8e087-117">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the parameterless constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWaitForChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelListenerBase.BeginWaitForChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="8e087-118"><see cref="T:System.TimeSpan" />，指定在超时前可用于完成等待通道操作的时间长度。</span><span class="sxs-lookup"><span data-stu-id="8e087-118">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="8e087-119">接收异步等待通道操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="8e087-119">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.</span></span></param>
        <param name="state"><span data-ttu-id="8e087-120">一个由应用程序指定的对象，它包含与异步等待通道操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="8e087-120">An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.</span></span></param>
        <summary><span data-ttu-id="8e087-121">在派生类中实现时，开始一个等待通道到达的异步操作。</span><span class="sxs-lookup"><span data-stu-id="8e087-121">When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="8e087-122">引用异步等待通道操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="8e087-122">The <see cref="T:System.IAsyncResult" /> that references the asynchronous wait for a channel operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e087-123">通道侦听器尚未打开，因此无法使用。</span><span class="sxs-lookup"><span data-stu-id="8e087-123">The channel listener has not been opened and so cannot be used.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e087-124">获取为完成关闭操作提供的默认时间间隔。</span><span class="sxs-lookup"><span data-stu-id="8e087-124">Gets the default interval of time provided for a close operation to complete.</span></span></summary>
        <value><span data-ttu-id="8e087-125">默认的 <see cref="T:System.TimeSpan" />，指定在超时前可用于完成关闭操作的时间。</span><span class="sxs-lookup"><span data-stu-id="8e087-125">The default <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e087-126">此值在创建新的 <xref:System.ServiceModel.Channels.ChannelListenerBase> 对象时设置。</span><span class="sxs-lookup"><span data-stu-id="8e087-126">This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object.</span></span> <span data-ttu-id="8e087-127">默认 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> 构造函数将 <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A> 属性的值设置为 1 分钟。</span><span class="sxs-lookup"><span data-stu-id="8e087-127">The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A> property to a value of 1 minute.</span></span> <span data-ttu-id="8e087-128">如果要为此超时指定其他值，请使用 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。</span><span class="sxs-lookup"><span data-stu-id="8e087-128">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e087-129">获取为完成打开操作提供的默认时间间隔。</span><span class="sxs-lookup"><span data-stu-id="8e087-129">Gets the default interval of time provided for an open operation to complete.</span></span></summary>
        <value><span data-ttu-id="8e087-130">默认的 <see cref="T:System.TimeSpan" />，指定在超时前可用于完成打开操作的时间。</span><span class="sxs-lookup"><span data-stu-id="8e087-130">The default <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e087-131">此值在创建新的 <xref:System.ServiceModel.Channels.ChannelListenerBase> 对象时设置。</span><span class="sxs-lookup"><span data-stu-id="8e087-131">This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object.</span></span> <span data-ttu-id="8e087-132">默认 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> 构造函数将 <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A> 属性的值设置为 1 分钟。</span><span class="sxs-lookup"><span data-stu-id="8e087-132">The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A> property to a value of 1 minute.</span></span> <span data-ttu-id="8e087-133">如果要为此超时指定其他值，请使用 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。</span><span class="sxs-lookup"><span data-stu-id="8e087-133">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultReceiveTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultReceiveTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultReceiveTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultReceiveTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultReceiveTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e087-134">获取为完成接收操作提供的默认时间间隔。</span><span class="sxs-lookup"><span data-stu-id="8e087-134">Gets the default interval of time provided for a receive operation to complete.</span></span></summary>
        <value><span data-ttu-id="8e087-135">默认的 <see cref="T:System.TimeSpan" />，指定在超时前可用于完成接收操作的时间。</span><span class="sxs-lookup"><span data-stu-id="8e087-135">The default <see cref="T:System.TimeSpan" /> that specifies how long the receive operation has to complete before timing out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e087-136">此值在创建新的 <xref:System.ServiceModel.Channels.ChannelListenerBase> 对象时设置。</span><span class="sxs-lookup"><span data-stu-id="8e087-136">This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object.</span></span> <span data-ttu-id="8e087-137">默认 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> 构造函数将 <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A> 属性的值设置为 10 分钟。</span><span class="sxs-lookup"><span data-stu-id="8e087-137">The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A> property to a value of 10 minutes.</span></span> <span data-ttu-id="8e087-138">如果要为此超时指定其他值，请使用 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。</span><span class="sxs-lookup"><span data-stu-id="8e087-138">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSendTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultSendTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultSendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSendTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultSendTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSendTimeout : TimeSpan" Usage="System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e087-139">获取为完成发送操作提供的默认时间间隔。</span><span class="sxs-lookup"><span data-stu-id="8e087-139">Gets the default interval of time provided for a send operation to complete.</span></span></summary>
        <value><span data-ttu-id="8e087-140">默认的 <see cref="T:System.TimeSpan" />，指定在超时前可用于完成发送操作的时间。</span><span class="sxs-lookup"><span data-stu-id="8e087-140">The default <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e087-141">此值在创建新的 <xref:System.ServiceModel.Channels.ChannelListenerBase> 对象时设置。</span><span class="sxs-lookup"><span data-stu-id="8e087-141">This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object.</span></span> <span data-ttu-id="8e087-142">默认 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> 构造函数将 <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A> 属性的值设置为 1 分钟。</span><span class="sxs-lookup"><span data-stu-id="8e087-142">The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A> property to a value of 1 minute.</span></span> <span data-ttu-id="8e087-143">如果要为此超时指定其他值，请使用 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。</span><span class="sxs-lookup"><span data-stu-id="8e087-143">Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForChannel">
      <MemberSignature Language="C#" Value="public bool EndWaitForChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForChannel (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndWaitForChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWaitForChannel : IAsyncResult -&gt; bool&#xA;override this.EndWaitForChannel : IAsyncResult -&gt; bool" Usage="channelListenerBase.EndWaitForChannel result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="8e087-144">通过调用 <see cref="T:System.IAsyncResult" /> 方法返回的 <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)" />。</span><span class="sxs-lookup"><span data-stu-id="8e087-144">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)" /> method.</span></span></param>
        <summary><span data-ttu-id="8e087-145">在派生类中实现时，完成一个等待通道到达的异步操作。</span><span class="sxs-lookup"><span data-stu-id="8e087-145">When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.</span></span></summary>
        <returns><span data-ttu-id="8e087-146">如果消息已到达，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e087-146"><see langword="true" /> if a message arrived; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class virtual T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)&#xA;override this.GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="channelListenerBase.GetProperty " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.GetProperty``1</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="8e087-147">方法正在查询的类型化对象。</span><span class="sxs-lookup"><span data-stu-id="8e087-147">The typed object for which the method is querying.</span></span></typeparam>
        <summary><span data-ttu-id="8e087-148">从通道堆栈的适当层返回所请求的类型化对象（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="8e087-148">Returns a typed object requested, if present, from the appropriate layer in the channel stack.</span></span></summary>
        <returns><span data-ttu-id="8e087-149">如果存在，则为所请求的类型化对象 T，如果不存在，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e087-149">The typed object T requested if it is present or <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e087-150">使用此方法可请求从通道侦听器堆栈的适当层返回类型化对象，如用于设置属性或获取状态的接口。</span><span class="sxs-lookup"><span data-stu-id="8e087-150">Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel listener stack.</span></span> <span data-ttu-id="8e087-151">如果某个层支持返回所请求的对象，则该层会返回对象。</span><span class="sxs-lookup"><span data-stu-id="8e087-151">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="8e087-152">如果不支持，则该层仅仅将调用委托给堆栈中的下一层。</span><span class="sxs-lookup"><span data-stu-id="8e087-152">If not, it simply delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="8e087-153">如果到达堆栈底部仍然没有层支持所请求的对象，则该方法返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="8e087-153">If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginWaitForChannel">
      <MemberSignature Language="C#" Value="protected abstract IAsyncResult OnBeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginWaitForChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnBeginWaitForChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract IAsyncResult ^ OnBeginWaitForChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelListenerBase.OnBeginWaitForChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="8e087-154">默认的 <see cref="T:System.TimeSpan" />，指定在超时前可用于完成开始等待操作的时间。</span><span class="sxs-lookup"><span data-stu-id="8e087-154">The <see cref="T:System.TimeSpan" /> that specifies how long the on begin wait operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="8e087-155">接收异步开始等待操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="8e087-155">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on begin wait completion.</span></span></param>
        <param name="state"><span data-ttu-id="8e087-156">一个由应用程序指定的对象，它包含与异步开始等待操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="8e087-156">An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.</span></span></param>
        <summary><span data-ttu-id="8e087-157">在派生类中实现时，在开始等待通道到达时提供一个可扩展点。</span><span class="sxs-lookup"><span data-stu-id="8e087-157">When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="8e087-158">引用异步开始等待操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="8e087-158">The <see cref="T:System.IAsyncResult" /> that references the asynchronous on begin wait operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndWaitForChannel">
      <MemberSignature Language="C#" Value="protected abstract bool OnEndWaitForChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnEndWaitForChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnEndWaitForChannel (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnEndWaitForChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndWaitForChannel : IAsyncResult -&gt; bool" Usage="channelListenerBase.OnEndWaitForChannel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="8e087-159">通过调用 <see cref="T:System.IAsyncResult" /> 方法返回的 <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="8e087-159">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="8e087-160">在派生类中实现时，在结束等待通道到达时提供一个可扩展点。</span><span class="sxs-lookup"><span data-stu-id="8e087-160">When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="8e087-161">如果方法在 <see langword="true" /> 指定的时间间隔结束前完成，则为 <paramref name="timeout" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e087-161"><see langword="true" /> if the method completed before the interval of time specified by the <paramref name="timeout" /> expired; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWaitForChannel">
      <MemberSignature Language="C#" Value="protected abstract bool OnWaitForChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnWaitForChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnWaitForChannel (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnWaitForChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member OnWaitForChannel : TimeSpan -&gt; bool" Usage="channelListenerBase.OnWaitForChannel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="8e087-162"><see cref="T:System.TimeSpan" />，指定在超时前可用于完成等待通道操作的时间长度。</span><span class="sxs-lookup"><span data-stu-id="8e087-162">The <see cref="T:System.TimeSpan" /> that specifies how long the on wait for a channel operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="8e087-163">在派生类中重写时，在等待通道到达时提供一个可扩展点。</span><span class="sxs-lookup"><span data-stu-id="8e087-163">When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="8e087-164">如果方法在 <see langword="true" /> 指定的时间间隔结束前完成，则为 <paramref name="timeout" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e087-164"><see langword="true" /> if the method completed before the interval of time specified by the <paramref name="timeout" /> expired; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public abstract Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ChannelListenerBase.Uri" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.ServiceModel.Channels.ChannelListenerBase.Uri" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IChannelListener.Uri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e087-165">在派生类中实现时，获取通道侦听器为传入通道侦听的 URI。</span><span class="sxs-lookup"><span data-stu-id="8e087-165">When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.</span></span></summary>
        <value><span data-ttu-id="8e087-166">通道侦听器为传入通道侦听的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="8e087-166">The <see cref="T:System.Uri" /> on which the channel listener listens for incoming channels.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForChannel">
      <MemberSignature Language="C#" Value="public bool WaitForChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChannel (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitForChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitForChannel : TimeSpan -&gt; bool&#xA;override this.WaitForChannel : TimeSpan -&gt; bool" Usage="channelListenerBase.WaitForChannel timeout" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="8e087-167"><see cref="T:System.TimeSpan" />，指定在超时前可用于完成等待通道操作的时间长度。</span><span class="sxs-lookup"><span data-stu-id="8e087-167">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="8e087-168">在派生类中实现时，等待通道到达。</span><span class="sxs-lookup"><span data-stu-id="8e087-168">When implemented in a derived class, waits for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="8e087-169">如果通道在 <paramref name="timeout" /> 指定的时间间隔结束前到达，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e087-169"><see langword="true" /> if a channel arrived before the interval of time specified by the <paramref name="timeout" /> expired; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
