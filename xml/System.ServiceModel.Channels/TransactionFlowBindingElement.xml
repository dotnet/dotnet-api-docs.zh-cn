<Type Name="TransactionFlowBindingElement" FullName="System.ServiceModel.Channels.TransactionFlowBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e095f1c4d0237499b7ff2c88e35e459576ac7f26" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86747576" /></Metadata><TypeSignature Language="C#" Value="public sealed class TransactionFlowBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TransactionFlowBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransactionFlowBindingElement&#xA;Inherits BindingElement&#xA;Implements IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactionFlowBindingElement sealed : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <TypeSignature Language="F#" Value="type TransactionFlowBindingElement = class&#xA;    inherit BindingElement&#xA;    interface IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="efd3f-101">表示配置元素，该元素指定对绑定的事务流支持。</span><span class="sxs-lookup"><span data-stu-id="efd3f-101">Represents the configuration element that specifies transaction flow support for a binding.</span></span> <span data-ttu-id="efd3f-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="efd3f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd3f-103">此元素允许您在终结点的绑定设置中启用或禁用传入事务流，以及指定所需的传入事务协议格式。</span><span class="sxs-lookup"><span data-stu-id="efd3f-103">This element allows you to enable or disable incoming transaction flow in an endpoint's binding settings, as well as to specify the desired protocol format for incoming transactions.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="efd3f-104">使用 <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> 协议在终结点之间对事务进行流处理时，如果目标终结点尝试使用任何 <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> 之外的协议进行流处理，则可能丢失事务超时。</span><span class="sxs-lookup"><span data-stu-id="efd3f-104">When using the <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> protocol to flow transactions from endpoint to endpoint, the transaction timeout can be lost if the destination endpoint attempts to flow again using any protocol other than <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A>.</span></span> <span data-ttu-id="efd3f-105">这可能导致所有 <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> 跃点后面的下级节点比预期超时。</span><span class="sxs-lookup"><span data-stu-id="efd3f-105">This can cause all down-level nodes after the <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> hop to timeout later than expected.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/wcf/feature-details/enabling-transaction-flow"><span data-ttu-id="efd3f-106">启用事务流</span><span class="sxs-lookup"><span data-stu-id="efd3f-106">Enabling Transaction Flow</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="efd3f-107">初始化 <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="efd3f-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionFlowBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionFlowBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd3f-108">初始化 <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="efd3f-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionFlowBindingElement (System.ServiceModel.TransactionProtocol transactionProtocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.TransactionProtocol transactionProtocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.#ctor(System.ServiceModel.TransactionProtocol)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionProtocol As TransactionProtocol)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionFlowBindingElement(System::ServiceModel::TransactionProtocol ^ transactionProtocol);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.TransactionFlowBindingElement : System.ServiceModel.TransactionProtocol -&gt; System.ServiceModel.Channels.TransactionFlowBindingElement" Usage="new System.ServiceModel.Channels.TransactionFlowBindingElement transactionProtocol" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="transactionProtocol" Type="System.ServiceModel.TransactionProtocol" />
      </Parameters>
      <Docs>
        <param name="transactionProtocol"><span data-ttu-id="efd3f-109">一个 <see cref="T:System.ServiceModel.TransactionProtocol" /> 值，包含对事务进行流处理时使用的事务协议。</span><span class="sxs-lookup"><span data-stu-id="efd3f-109">A <see cref="T:System.ServiceModel.TransactionProtocol" /> value that contains the transaction protocol used in flowing a transaction.</span></span></param>
        <summary><span data-ttu-id="efd3f-110">使用指定用于对事务进行流处理的协议初始化 <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="efd3f-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> class with the specified protocol that is used to flow a transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd3f-111">有关选择要使用的协议的详细信息，请参阅 [启用事务流](/dotnet/framework/wcf/feature-details/enabling-transaction-flow)。</span><span class="sxs-lookup"><span data-stu-id="efd3f-111">For more information about choosing the protocol to be used, see [Enabling Transaction Flow](/dotnet/framework/wcf/feature-details/enabling-transaction-flow).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWildcardAction">
      <MemberSignature Language="C#" Value="public bool AllowWildcardAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWildcardAction" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransactionFlowBindingElement.AllowWildcardAction" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWildcardAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWildcardAction { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWildcardAction : bool with get, set" Usage="System.ServiceModel.Channels.TransactionFlowBindingElement.AllowWildcardAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd3f-112">获取或设置是否将通配符操作设置为允许在要克隆的事务流绑定元素上使用。</span><span class="sxs-lookup"><span data-stu-id="efd3f-112">Gets or sets whether wildcard action is set to be allowed on a transaction flow binding element to be cloned.</span></span></summary>
        <value><span data-ttu-id="efd3f-113">如果允许通配符操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-113"><see langword="true" /> if wildcard action is allowed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="transactionFlowBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="efd3f-114">通道类型。</span><span class="sxs-lookup"><span data-stu-id="efd3f-114">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="efd3f-115">应该用于生成通道工厂的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-115">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to build the channel factory.</span></span></param>
        <summary><span data-ttu-id="efd3f-116">初始化通道工厂，用于生成绑定上下文中指定类型的通道。</span><span class="sxs-lookup"><span data-stu-id="efd3f-116">Initializes a channel factory for producing channels of a specified type from a binding context.</span></span></summary>
        <returns><span data-ttu-id="efd3f-117"><see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 类型的 <paramref name="TChannel" />（从 <paramref name="context" /> 中初始化）。</span><span class="sxs-lookup"><span data-stu-id="efd3f-117">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd3f-118">此方法创建一个通道工厂，该通道工厂可用于创建指定类型的传出通道。</span><span class="sxs-lookup"><span data-stu-id="efd3f-118">This method creates a channel factory that can be used to make outgoing channels of the specified type.</span></span> <span data-ttu-id="efd3f-119">创建通道堆栈时，基础架构会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="efd3f-119">This method is called by the infrastructure when building the channel stack.</span></span> <span data-ttu-id="efd3f-120">只有实现自定义绑定元素时，才将它用于您的代码中。</span><span class="sxs-lookup"><span data-stu-id="efd3f-120">You should use it in your code only when you implement a custom binding element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efd3f-121"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-121"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="efd3f-122">无法生成指定通道类型的通道工厂。</span><span class="sxs-lookup"><span data-stu-id="efd3f-122">A channel factory for the specified channel type cannot be built.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="transactionFlowBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="efd3f-123">通道类型。</span><span class="sxs-lookup"><span data-stu-id="efd3f-123">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="efd3f-124">应该用于生成通道侦听器的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-124">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to build the channel listener.</span></span></param>
        <summary><span data-ttu-id="efd3f-125">初始化通道侦听器，用于接受绑定上下文中指定类型的通道。</span><span class="sxs-lookup"><span data-stu-id="efd3f-125">Initializes a channel listener for accepting channels of a specified type from the binding context.</span></span></summary>
        <returns><span data-ttu-id="efd3f-126"><see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 类型的 <paramref name="TChannel" />（从 <paramref name="context" /> 中初始化）。</span><span class="sxs-lookup"><span data-stu-id="efd3f-126">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> initialized from <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd3f-127">此方法创建一个通道侦听器来接收此绑定的消息。</span><span class="sxs-lookup"><span data-stu-id="efd3f-127">This method creates a channel listener to receive messages for this binding.</span></span>  
  
 <span data-ttu-id="efd3f-128">创建通道时，基础架构会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="efd3f-128">This method is called by the infrastructure when building the channel.</span></span> <span data-ttu-id="efd3f-129">只有实现自定义绑定元素时，才将它用于您的代码中。</span><span class="sxs-lookup"><span data-stu-id="efd3f-129">You should use it in your code only when you implement a custom binding element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efd3f-130"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-130"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="efd3f-131">无法生成指定通道类型的通道侦听器。</span><span class="sxs-lookup"><span data-stu-id="efd3f-131">A channel listener for the specified channel type cannot be built.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="transactionFlowBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="efd3f-132">通道类型。</span><span class="sxs-lookup"><span data-stu-id="efd3f-132">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="efd3f-133">应该用于确定是否可以生成通道工厂的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-133">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to determine if a channel factory can be built.</span></span></param>
        <summary><span data-ttu-id="efd3f-134">返回一个值，该值指示指定绑定上下文是否可以生成用于生成指定类型通道的通道工厂。</span><span class="sxs-lookup"><span data-stu-id="efd3f-134">Returns a value that indicates whether the specified binding context can build a channel factory for producing channels of a specified type.</span></span></summary>
        <returns><span data-ttu-id="efd3f-135">如果可以从 <see langword="true" /> 生成指定通道类型的通道工厂，则为 <paramref name="context" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-135"><see langword="true" /> if a channel factory for the specified type of channel can be built from <paramref name="context" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd3f-136">尝试实际生成工厂之前应该调用此方法来检查是否可以为指定的 `TChannel` 生成 `context` 类型通道的通道工厂。</span><span class="sxs-lookup"><span data-stu-id="efd3f-136">You should call this method to check that the channel factory for channels of type `TChannel` can be built for the specified `context`, before attempting to actually build the factory.</span></span> <span data-ttu-id="efd3f-137">请注意，如果 <xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory%2A> 无法创建指定通道类型的通道工厂，则它会引发异常。</span><span class="sxs-lookup"><span data-stu-id="efd3f-137">Note that <xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory%2A> throws an exception if it cannot build a channel factory for the specified channel type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efd3f-138"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-138"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="transactionFlowBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="efd3f-139">通道类型。</span><span class="sxs-lookup"><span data-stu-id="efd3f-139">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="efd3f-140">应该用于确定是否可以生成通道侦听器的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-140">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to determine if a channel listener can be built.</span></span></param>
        <summary><span data-ttu-id="efd3f-141">返回一个值，该值指示指定的绑定上下文是否可以生成用于接受指定类型通道的通道侦听器。</span><span class="sxs-lookup"><span data-stu-id="efd3f-141">Returns a value that indicates whether the specified binding context can build a channel listener for accepting channels of a specified type.</span></span></summary>
        <returns><span data-ttu-id="efd3f-142">如果可以从 <paramref name="context" /> 生成指定通道类型的通道侦听器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-142"><see langword="true" /> if a channel listener for the specified type of channel can be built from <paramref name="context" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd3f-143">尝试实际生成侦听器之前应该调用此方法来检查是否可以为指定的 `TChannel` 生成 `context` 类型通道的通道侦听器。</span><span class="sxs-lookup"><span data-stu-id="efd3f-143">You should call this method to check that the channel listener for channels of type of `TChannel` can be built for the specified `context`, before attempting to actually build the listener.</span></span> <span data-ttu-id="efd3f-144">请注意，如果 <xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener%2A> 无法创建指定通道类型的通道侦听器，则它会引发异常。</span><span class="sxs-lookup"><span data-stu-id="efd3f-144">Note that <xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener%2A> throws an exception if it cannot build a channel listener for the specified channel type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efd3f-145"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-145"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="transactionFlowBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd3f-146">创建此元素的一个副本。</span><span class="sxs-lookup"><span data-stu-id="efd3f-146">Creates a duplicate of this element.</span></span></summary>
        <returns><span data-ttu-id="efd3f-147">作为此元素副本的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-147">A <see cref="T:System.ServiceModel.Channels.BindingElement" /> that is a duplicate of this element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd3f-148">此方法创建此绑定元素的深层克隆。</span><span class="sxs-lookup"><span data-stu-id="efd3f-148">This method creates a deep clone of this binding element.</span></span> <span data-ttu-id="efd3f-149">对象的深层克隆创建对象的副本以及该对象直接或间接引用的所有内容的副本。</span><span class="sxs-lookup"><span data-stu-id="efd3f-149">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="efd3f-150"> (这也称为复制整个对象图。与此相反，) 对象的浅表克隆只是对象的副本。</span><span class="sxs-lookup"><span data-stu-id="efd3f-150">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="efd3f-151">如果对象包含对其他对象的引用，则浅表复制不创建所引用对象的副本，而是仅复制对原始对象的引用。</span><span class="sxs-lookup"><span data-stu-id="efd3f-151">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="transactionFlowBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="efd3f-152">方法正在查询的类型化对象。</span><span class="sxs-lookup"><span data-stu-id="efd3f-152">The typed object for which the method is querying.</span></span></typeparam>
        <param name="context"><span data-ttu-id="efd3f-153"><see cref="T:System.ServiceModel.Channels.BindingContext" /></span><span class="sxs-lookup"><span data-stu-id="efd3f-153">The <see cref="T:System.ServiceModel.Channels.BindingContext" /></span></span>  
  
<span data-ttu-id="efd3f-154">。</span><span class="sxs-lookup"><span data-stu-id="efd3f-154">that should be used to get the requested property.</span></span></param>
        <summary><span data-ttu-id="efd3f-155">从绑定堆栈的适当层获取所请求的类型化对象（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="efd3f-155">Gets the typed object requested, if present, from the appropriate layer in the binding stack.</span></span></summary>
        <returns><span data-ttu-id="efd3f-156">如果存在，则为所请求的类型化对象 <paramref name="T" />；如果不存在，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-156">The typed object <paramref name="T" /> requested if it is present; <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd3f-157">可使用此方法来检索来自绑定元素堆栈的功能、需求和参数。</span><span class="sxs-lookup"><span data-stu-id="efd3f-157">You can use this method to retrieve capabilities, requirements and parameters from the binding element stack.</span></span> <span data-ttu-id="efd3f-158">如果绑定元素支持返回所请求的对象，则会返回对象。</span><span class="sxs-lookup"><span data-stu-id="efd3f-158">If a binding element supports returning the requested object, it returns it.</span></span> <span data-ttu-id="efd3f-159">如果不支持，就会将调用委托给堆栈中的下一个绑定元素。</span><span class="sxs-lookup"><span data-stu-id="efd3f-159">If not, it delegates the call down to the next binding element in the stack.</span></span> <span data-ttu-id="efd3f-160">如果到达堆栈底部仍然没有绑定元素支持所请求的对象，该方法将返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="efd3f-160">If it gets to the bottom of the stack and no binding element supported the requested object, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efd3f-161"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-161"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionProtocol">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionProtocol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.ShouldSerializeTransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionProtocol () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionProtocol();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTransactionProtocol : unit -&gt; bool" Usage="transactionFlowBindingElement.ShouldSerializeTransactionProtocol " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd3f-162">返回用于事务流的事务处理协议是否可以进行序列化。</span><span class="sxs-lookup"><span data-stu-id="efd3f-162">Returns whether the transaction protocol used for transaction flow can be serialized.</span></span></summary>
        <returns><span data-ttu-id="efd3f-163">如果此事务处理协议可被序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-163"><see langword="true" /> if the transaction protocol can be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit&#xA;override this.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="transactionFlowBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy (exporter, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="efd3f-164">导出此绑定元素的策略时要使用的 <see cref="T:System.ServiceModel.Description.MetadataExporter" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-164">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> to be used when exporting the policy of this binding element.</span></span></param>
        <param name="context"><span data-ttu-id="efd3f-165">导出此绑定元素的策略时要使用的 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-165">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> to be used when exporting the policy of this binding element.</span></span></param>
        <summary><span data-ttu-id="efd3f-166">导出有关绑定的自定义策略断言。</span><span class="sxs-lookup"><span data-stu-id="efd3f-166">Exports a custom policy assertion about the binding.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efd3f-167"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-167"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionProtocol">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransactionProtocol TransactionProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.TransactionProtocol TransactionProtocol" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransactionFlowBindingElement.TransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionProtocol As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransactionProtocol ^ TransactionProtocol { System::ServiceModel::TransactionProtocol ^ get(); void set(System::ServiceModel::TransactionProtocol ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionProtocol : System.ServiceModel.TransactionProtocol with get, set" Usage="System.ServiceModel.Channels.TransactionFlowBindingElement.TransactionProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd3f-168">获取或设置对事务进行流处理时使用的事务协议。</span><span class="sxs-lookup"><span data-stu-id="efd3f-168">Gets or sets the transaction protocol used in flowing a transaction.</span></span></summary>
        <value><span data-ttu-id="efd3f-169">一个 <see cref="T:System.ServiceModel.TransactionProtocol" />，指定用于事务流的事务处理协议。</span><span class="sxs-lookup"><span data-stu-id="efd3f-169">A <see cref="T:System.ServiceModel.TransactionProtocol" /> that specifies the transaction protocol to be used for transaction flow.</span></span> <span data-ttu-id="efd3f-170">默认值为 <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />。</span><span class="sxs-lookup"><span data-stu-id="efd3f-170">The default is <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd3f-171">有关选择要使用的协议的详细信息，请参阅 [启用事务流](/dotnet/framework/wcf/feature-details/enabling-transaction-flow)。</span><span class="sxs-lookup"><span data-stu-id="efd3f-171">For more information about choosing the protocol to be used, see [Enabling Transaction Flow](/dotnet/framework/wcf/feature-details/enabling-transaction-flow).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
