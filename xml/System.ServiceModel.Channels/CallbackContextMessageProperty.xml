<Type Name="CallbackContextMessageProperty" FullName="System.ServiceModel.Channels.CallbackContextMessageProperty">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2c9a3b055bcc2d978e971554c706d107bc7fc016" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89884517" /></Metadata><TypeSignature Language="C#" Value="public class CallbackContextMessageProperty : System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CallbackContextMessageProperty extends System.Object implements class System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />
  <TypeSignature Language="VB.NET" Value="Public Class CallbackContextMessageProperty&#xA;Implements IMessageProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallbackContextMessageProperty : System::ServiceModel::Channels::IMessageProperty" />
  <TypeSignature Language="F#" Value="type CallbackContextMessageProperty = class&#xA;    interface IMessageProperty" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IMessageProperty</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>当使用支持上下文交换协议的通道时，表示 <see langword="wsc:CallbackContext" /> 消息头的内容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上下文交换协议允许在持久性服务之间使用双工通信。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.CallbackContextMessageProperty : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.ServiceModel.Channels.CallbackContextMessageProperty" Usage="new System.ServiceModel.Channels.CallbackContextMessageProperty context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="context">可由正在相互通信的客户端和服务实例识别的消息中的信息。</param>
        <summary>使用指定的上下文初始化 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (System.ServiceModel.EndpointAddress callbackAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress callbackAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackAddress As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::ServiceModel::EndpointAddress ^ callbackAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.CallbackContextMessageProperty : System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Channels.CallbackContextMessageProperty" Usage="new System.ServiceModel.Channels.CallbackContextMessageProperty callbackAddress" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackAddress">回调地址。</param>
        <summary>使用指定的 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此回调地址是服务用来回调到客户端的终结点地址。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (System.ServiceModel.EndpointAddress listenAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress listenAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listenAddress As EndpointAddress, context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::ServiceModel::EndpointAddress ^ listenAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.CallbackContextMessageProperty : System.ServiceModel.EndpointAddress * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.ServiceModel.Channels.CallbackContextMessageProperty" Usage="new System.ServiceModel.Channels.CallbackContextMessageProperty (listenAddress, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="listenAddress">客户端侦听的终结点地址。</param>
        <param name="context">可由正在相互通信的客户端和服务实例识别的消息中的信息。</param>
        <summary>使用指定的 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 和包含上下文信息的 <see cref="T:System.ServiceModel.EndpointAddress" /> 来初始化 <see cref="T:System.Collections.Generic.IDictionary`2" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上下文信息可能包括客户端实例和对话信息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (string listenAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string listenAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listenAddress As String, context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::String ^ listenAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.CallbackContextMessageProperty : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.ServiceModel.Channels.CallbackContextMessageProperty" Usage="new System.ServiceModel.Channels.CallbackContextMessageProperty (listenAddress, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.String" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="listenAddress">客户端侦听的终结点地址。</param>
        <param name="context">可由正在相互通信的客户端和服务实例识别的消息中的信息。</param>
        <summary>使用指定的侦听地址和上下文信息初始化 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (Uri listenAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri listenAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listenAddress As Uri, context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(Uri ^ listenAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.CallbackContextMessageProperty : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.ServiceModel.Channels.CallbackContextMessageProperty" Usage="new System.ServiceModel.Channels.CallbackContextMessageProperty (listenAddress, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.Uri" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="listenAddress">客户端侦听的终结点地址。</param>
        <param name="context">可由正在相互通信的客户端和服务实例识别的消息中的信息。</param>
        <summary>使用指定的侦听地址和上下文信息初始化 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrReplaceInMessage">
      <MemberSignature Language="C#" Value="public void AddOrReplaceInMessage (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrReplaceInMessage(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrReplaceInMessage (message As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrReplaceInMessage(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="member this.AddOrReplaceInMessage : System.ServiceModel.Channels.Message -&gt; unit" Usage="callbackContextMessageProperty.AddOrReplaceInMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">要在其中添加或替换回调上下文消息属性的消息。</param>
        <summary>在指定的消息内添加或替换当前 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrReplaceInMessageProperties">
      <MemberSignature Language="C#" Value="public void AddOrReplaceInMessageProperties (System.ServiceModel.Channels.MessageProperties properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrReplaceInMessageProperties(class System.ServiceModel.Channels.MessageProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrReplaceInMessageProperties (properties As MessageProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrReplaceInMessageProperties(System::ServiceModel::Channels::MessageProperties ^ properties);" />
      <MemberSignature Language="F#" Value="member this.AddOrReplaceInMessageProperties : System.ServiceModel.Channels.MessageProperties -&gt; unit" Usage="callbackContextMessageProperty.AddOrReplaceInMessageProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.ServiceModel.Channels.MessageProperties" />
      </Parameters>
      <Docs>
        <param name="properties">要在其中添加回调上下文消息属性的消息属性集合。</param>
        <summary>在指定的消息属性集合内添加或替换当前 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress CallbackAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress CallbackAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallbackAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ CallbackAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CallbackAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取回调地址。</summary>
        <value>一个包含回调地址的 <see cref="T:System.ServiceModel.EndpointAddress" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此回调地址是服务器用来调用客户端的终结点地址。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CallbackContextMessageProperty.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.ServiceModel.Channels.CallbackContextMessageProperty.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 关联的上下文。</summary>
        <value>上下文。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCallbackAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress CreateCallbackAddress (Uri listenAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.EndpointAddress CreateCallbackAddress(class System.Uri listenAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCallbackAddress (listenAddress As Uri) As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::EndpointAddress ^ CreateCallbackAddress(Uri ^ listenAddress);" />
      <MemberSignature Language="F#" Value="member this.CreateCallbackAddress : Uri -&gt; System.ServiceModel.EndpointAddress" Usage="callbackContextMessageProperty.CreateCallbackAddress listenAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="listenAddress">侦听 URI</param>
        <summary>将客户端的 <paramref name="listenAddress" /> 及其上下文合并为一个发送给服务的回调地址。</summary>
        <returns>一个 <see cref="T:System.ServiceModel.EndpointAddress" /> 实例。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.IMessageProperty CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IMessageProperty CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As IMessageProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::IMessageProperty ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="abstract member CreateCopy : unit -&gt; System.ServiceModel.Channels.IMessageProperty&#xA;override this.CreateCopy : unit -&gt; System.ServiceModel.Channels.IMessageProperty" Usage="callbackContextMessageProperty.CreateCopy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IMessageProperty.CreateCopy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IMessageProperty</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 实例的副本。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 实例的副本。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListenAddressAndContext">
      <MemberSignature Language="C#" Value="public void GetListenAddressAndContext (out System.ServiceModel.EndpointAddress listenAddress, out System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetListenAddressAndContext([out] class System.ServiceModel.EndpointAddress&amp; listenAddress, [out] class System.Collections.Generic.IDictionary`2&lt;string, string&gt;&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetListenAddressAndContext (ByRef listenAddress As EndpointAddress, ByRef context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetListenAddressAndContext([Runtime::InteropServices::Out] System::ServiceModel::EndpointAddress ^ % listenAddress, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ % context);" />
      <MemberSignature Language="F#" Value="member this.GetListenAddressAndContext : EndpointAddress * IDictionary -&gt; unit" Usage="callbackContextMessageProperty.GetListenAddressAndContext (listenAddress, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.ServiceModel.EndpointAddress" RefType="out" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="listenAddress">用于存储侦听地址的引用。</param>
        <param name="context">可由正在相互通信的客户端和服务实例识别的消息中的信息。</param>
        <summary>从 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 实例中获取侦听地址和上下文数据。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public static string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CallbackContextMessageProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.ServiceModel.Channels.CallbackContextMessageProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 类的属性名称。</summary>
        <value>属性名称。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGet">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>尝试获取 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Channels.CallbackContextMessageProperty contextMessageProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGet(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Channels.CallbackContextMessageProperty&amp; contextMessageProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGet (message As Message, ByRef contextMessageProperty As CallbackContextMessageProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGet(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Channels::CallbackContextMessageProperty ^ % contextMessageProperty);" />
      <MemberSignature Language="F#" Value="static member TryGet : System.ServiceModel.Channels.Message * CallbackContextMessageProperty -&gt; bool" Usage="System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet (message, contextMessageProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="contextMessageProperty" Type="System.ServiceModel.Channels.CallbackContextMessageProperty" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">要从中获取回调上下文消息属性的消息。</param>
        <param name="contextMessageProperty">用于存储回调上下文消息属性实例的引用。</param>
        <summary>尝试从指定的消息获取 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 实例。</summary>
        <returns>如果成功检索回调上下文消息属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Channels.CallbackContextMessageProperty contextMessageProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGet(class System.ServiceModel.Channels.MessageProperties properties, [out] class System.ServiceModel.Channels.CallbackContextMessageProperty&amp; contextMessageProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGet (properties As MessageProperties, ByRef contextMessageProperty As CallbackContextMessageProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGet(System::ServiceModel::Channels::MessageProperties ^ properties, [Runtime::InteropServices::Out] System::ServiceModel::Channels::CallbackContextMessageProperty ^ % contextMessageProperty);" />
      <MemberSignature Language="F#" Value="static member TryGet : System.ServiceModel.Channels.MessageProperties * CallbackContextMessageProperty -&gt; bool" Usage="System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet (properties, contextMessageProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.ServiceModel.Channels.MessageProperties" />
        <Parameter Name="contextMessageProperty" Type="System.ServiceModel.Channels.CallbackContextMessageProperty" RefType="out" />
      </Parameters>
      <Docs>
        <param name="properties">要从中获取回调上下文消息属性的消息属性集合。</param>
        <param name="contextMessageProperty">用于存储回调上下文消息属性实例的引用。</param>
        <summary>尝试从指定的消息属性获取 <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> 实例。</summary>
        <returns>如果成功检索回调上下文消息属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
