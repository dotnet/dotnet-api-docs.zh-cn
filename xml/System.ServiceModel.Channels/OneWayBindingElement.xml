<Type Name="OneWayBindingElement" FullName="System.ServiceModel.Channels.OneWayBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9dd19a4e4785a5b2c65f5cf1c9d9147050dfeb1a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86575274" /></Metadata><TypeSignature Language="C#" Value="public sealed class OneWayBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OneWayBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.OneWayBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OneWayBindingElement&#xA;Inherits BindingElement&#xA;Implements IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class OneWayBindingElement sealed : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <TypeSignature Language="F#" Value="type OneWayBindingElement = class&#xA;    inherit BindingElement&#xA;    interface IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="fc33b-101">启用数据包路由和单向方法的使用。</span><span class="sxs-lookup"><span data-stu-id="fc33b-101">Enables packet routing and the use of one-way methods.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc33b-102">若要启用数据包路由，必须使用此类提供的单向 *转换* 层。</span><span class="sxs-lookup"><span data-stu-id="fc33b-102">To enable packet routing a *one-way conversion* layer is required, which this class provides.</span></span> <span data-ttu-id="fc33b-103">此类是绑定堆栈中的一个绑定，该绑定执行称为 `OneWayBindingElement` 的消息级形状更改。</span><span class="sxs-lookup"><span data-stu-id="fc33b-103">This class is a binding in the stack of bindings that performs a message-level shape change called `OneWayBindingElement`.</span></span> <span data-ttu-id="fc33b-104">此形状更改可采用 <xref:System.ServiceModel.Channels.IDuplexSessionChannel> 或 <xref:System.ServiceModel.Channels.IRequestChannel>，将它作为 <xref:System.ServiceModel.Channels.IInputChannel> 公开，或者与此相反，采用 <xref:System.ServiceModel.Channels.IDuplexSessionChannel> 或 <xref:System.ServiceModel.Channels.IRequestChannel>，将它作为 <xref:System.ServiceModel.Channels.IOutputChannel> 公开。</span><span class="sxs-lookup"><span data-stu-id="fc33b-104">This shape change can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IInputChannel>, or conversely it can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IOutputChannel>.</span></span> <span data-ttu-id="fc33b-105">用户可以创建一个自定义绑定，将此绑定置于具有会话功能或请求/答复传输的上层，使之可进行数据包路由。</span><span class="sxs-lookup"><span data-stu-id="fc33b-105">A user can create a custom binding that layers this binding over a session-aware or request-reply transport to make it packet routable.</span></span>  
  
 <span data-ttu-id="fc33b-106">如果希望以更自然的方式公开单向方法，此类也十分有用。</span><span class="sxs-lookup"><span data-stu-id="fc33b-106">This class is also useful when you want to expose one-way methods in a more native fashion.</span></span> <span data-ttu-id="fc33b-107">在这一层上可应用更多的转换，如复合双工和可靠消息。</span><span class="sxs-lookup"><span data-stu-id="fc33b-107">More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OneWayBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OneWayBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc33b-108">初始化 <see cref="T:System.ServiceModel.Channels.OneWayBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fc33b-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.OneWayBindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="oneWayBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="fc33b-109">工厂生成的通道的类型。</span><span class="sxs-lookup"><span data-stu-id="fc33b-109">The type of channel that the factory builds.</span></span></typeparam>
        <param name="context"><span data-ttu-id="fc33b-110">为绑定元素提供上下文的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-110">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="fc33b-111">初始化通道工厂，用于生成绑定上下文中的单向通道。</span><span class="sxs-lookup"><span data-stu-id="fc33b-111">Initializes a channel factory for producing one-way channels from the binding context.</span></span></summary>
        <returns><span data-ttu-id="fc33b-112"><see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 类型的 <see cref="T:System.ServiceModel.Channels.IChannel" />（从 <paramref name="context" /> 中初始化）。</span><span class="sxs-lookup"><span data-stu-id="fc33b-112">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc33b-113">此方法可创建通道工厂，该通道工厂用于创建将为此绑定处理传出消息的通道。</span><span class="sxs-lookup"><span data-stu-id="fc33b-113">This method creates a channel factory, which is used to create a channel that processes outgoing messages for this binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc33b-114"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-114"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fc33b-115"><paramref name="TChannel" /> 类型不是 <see cref="T:System.ServiceModel.Channels.IOutputChannel" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-115">The type of <paramref name="TChannel" /> is not <see cref="T:System.ServiceModel.Channels.IOutputChannel" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fc33b-116">内部绑定元素不支持 <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> 或 <see cref="T:System.ServiceModel.Channels.IRequestChannel" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-116">The inner binding element does not support <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> or <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="oneWayBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="fc33b-117">生成侦听器以接受的通道类型。</span><span class="sxs-lookup"><span data-stu-id="fc33b-117">The type of channel that the listener is built to accept.</span></span></typeparam>
        <param name="context"><span data-ttu-id="fc33b-118">为绑定元素提供上下文的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-118">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="fc33b-119">初始化通道侦听器，用于接受单向通道。</span><span class="sxs-lookup"><span data-stu-id="fc33b-119">Initializes a channel listener for accepting one-way channels.</span></span></summary>
        <returns><span data-ttu-id="fc33b-120"><see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 类型的 <see cref="T:System.ServiceModel.Channels.IChannel" />（从 <paramref name="context" /> 中初始化）。</span><span class="sxs-lookup"><span data-stu-id="fc33b-120">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc33b-121">此方法可创建通道侦听器，该侦听器用于创建将为此绑定处理传入消息的通道。</span><span class="sxs-lookup"><span data-stu-id="fc33b-121">This method creates a channel listener, which is used to create a channel that processes incoming messages for this binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc33b-122"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-122"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fc33b-123"><paramref name="TChannel" /> 类型不是 <see cref="T:System.ServiceModel.Channels.IInputChannel" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-123">The type of <paramref name="TChannel" /> is not <see cref="T:System.ServiceModel.Channels.IInputChannel" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fc33b-124">内部绑定元素不支持 <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> 或 <see cref="T:System.ServiceModel.Channels.IRequestChannel" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-124">The inner binding element does not support <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> or <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="oneWayBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="fc33b-125">要生成的通道工厂的类型。</span><span class="sxs-lookup"><span data-stu-id="fc33b-125">The type of channel factory to build.</span></span></typeparam>
        <param name="context"><span data-ttu-id="fc33b-126">为绑定元素提供上下文的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-126">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="fc33b-127">获取一个值，该值指示是否可以生成指定类型的通道工厂。</span><span class="sxs-lookup"><span data-stu-id="fc33b-127">Gets a value that indicates whether a channel factory of the specified type can be built.</span></span></summary>
        <returns><span data-ttu-id="fc33b-128">如果可以生成指定类型的通道工厂，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-128"><see langword="true" /> if a channel factory of the specified type can be built; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fc33b-129">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-129">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc33b-130">在尝试创建通道工厂之前应调用此方法。</span><span class="sxs-lookup"><span data-stu-id="fc33b-130">You should call this method before trying to create a channel factory.</span></span>  
  
 <span data-ttu-id="fc33b-131">`true` 是 `TChannel`，并且绑定堆栈中当前绑定的下一个绑定是 <xref:System.ServiceModel.Channels.IOutputChannel> 或 <xref:System.ServiceModel.Channels.IDuplexSessionChannel> 时，此方法将返回 <xref:System.ServiceModel.Channels.IRequestChannel>。</span><span class="sxs-lookup"><span data-stu-id="fc33b-131">This method returns `true` when `TChannel` is an <xref:System.ServiceModel.Channels.IOutputChannel>, and the binding below the present one in the binding stack is an <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or <xref:System.ServiceModel.Channels.IRequestChannel>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc33b-132"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-132"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="oneWayBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="fc33b-133">要生成的通道侦听器的类型。</span><span class="sxs-lookup"><span data-stu-id="fc33b-133">The type of channel listener to build.</span></span></typeparam>
        <param name="context"><span data-ttu-id="fc33b-134">为绑定元素提供上下文的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-134">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="fc33b-135">获取一个值，该值指示是否可以生成指定类型的通道侦听器。</span><span class="sxs-lookup"><span data-stu-id="fc33b-135">Gets a value that indicates whether a channel listener of the specified type can be built.</span></span></summary>
        <returns><span data-ttu-id="fc33b-136">如果可以生成指定类型的通道侦听器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-136"><see langword="true" /> if a channel listener of the specified type can be built; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fc33b-137">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-137">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc33b-138">在尝试创建通道侦听器之前应调用此方法。</span><span class="sxs-lookup"><span data-stu-id="fc33b-138">You should call this method before trying to create a channel listener.</span></span>  
  
 <span data-ttu-id="fc33b-139">`true` 是 `TChannel`，并且绑定堆栈中当前绑定的下一个绑定是 <xref:System.ServiceModel.Channels.IInputChannel> 或 <xref:System.ServiceModel.Channels.IDuplexSessionChannel> 时，此方法将返回 <xref:System.ServiceModel.Channels.IReplyChannel>。</span><span class="sxs-lookup"><span data-stu-id="fc33b-139">This method returns `true` when `TChannel` is an <xref:System.ServiceModel.Channels.IInputChannel>, and the binding below the present one in the binding stack is an <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or <xref:System.ServiceModel.Channels.IReplyChannel>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc33b-140"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-140"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ChannelPoolSettings">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.ChannelPoolSettings ChannelPoolSettings { get; }" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.ChannelPoolSettings ChannelPoolSettings" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPoolSettings As ChannelPoolSettings" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::ChannelPoolSettings ^ ChannelPoolSettings { System::ServiceModel::Channels::ChannelPoolSettings ^ get(); };" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.ChannelPoolSettings : System.ServiceModel.Channels.ChannelPoolSettings" Usage="System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.ChannelPoolSettings ChannelPoolSettings { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelPoolSettings As ChannelPoolSettings" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::ChannelPoolSettings ^ ChannelPoolSettings { System::ServiceModel::Channels::ChannelPoolSettings ^ get(); void set(System::ServiceModel::Channels::ChannelPoolSettings ^ value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ChannelPoolSettings : System.ServiceModel.Channels.ChannelPoolSettings with get, set" Usage="System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.ChannelPoolSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc33b-141">获取通道池设置。</span><span class="sxs-lookup"><span data-stu-id="fc33b-141">Gets the channel pool settings.</span></span></summary>
        <value><span data-ttu-id="fc33b-142">一个 <see cref="T:System.ServiceModel.Channels.ChannelPoolSettings" /> 对象，包含与此绑定元素关联的通道池的属性。</span><span class="sxs-lookup"><span data-stu-id="fc33b-142">A <see cref="T:System.ServiceModel.Channels.ChannelPoolSettings" /> object that contains properties of the channel pool associated with this binding element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="oneWayBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc33b-143">克隆此类的实例。</span><span class="sxs-lookup"><span data-stu-id="fc33b-143">Clones an instance of this class.</span></span></summary>
        <returns><span data-ttu-id="fc33b-144">此类的实例的一个克隆副本。</span><span class="sxs-lookup"><span data-stu-id="fc33b-144">A cloned copy of this instance of this class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="oneWayBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="fc33b-145">属性的类型。</span><span class="sxs-lookup"><span data-stu-id="fc33b-145">Type of the property.</span></span></typeparam>
        <param name="context"><span data-ttu-id="fc33b-146">为绑定元素提供上下文的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-146">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="fc33b-147">从绑定堆栈中获取属性（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="fc33b-147">Gets properties from the binding stack, if present.</span></span></summary>
        <returns><span data-ttu-id="fc33b-148">绑定堆栈中的一个 <paramref name="T" /> 对象（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="fc33b-148">A <paramref name="T" /> object from the binding stack, if present.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc33b-149">此方法接收绑定上下文作为输入参数，该参数表示绑定元素的堆栈。</span><span class="sxs-lookup"><span data-stu-id="fc33b-149">This method receives a binding context as an input parameter, which represents the stack of binding elements.</span></span>  
  
 <span data-ttu-id="fc33b-150">堆栈中的每个绑定元素都可以独立处理查询或委托查询，或两种功能都具备。</span><span class="sxs-lookup"><span data-stu-id="fc33b-150">Each binding element in the stack can handle the inquiry itself or delegate the inquiry, or a combination of the two.</span></span> <span data-ttu-id="fc33b-151">如果委托查询，每个绑定元素都可以修改上下文。</span><span class="sxs-lookup"><span data-stu-id="fc33b-151">Each binding element can modify the context if it delegates the inquiry.</span></span> <span data-ttu-id="fc33b-152">但是，传输绑定元素独立处理查询。</span><span class="sxs-lookup"><span data-stu-id="fc33b-152">However, a transport binding element handles the inquiry itself.</span></span>  
  
 <span data-ttu-id="fc33b-153">此方法由绑定元素以及运行时对象（例如 <xref:System.ServiceModel.Channels.IChannelFactory>、<xref:System.ServiceModel.Channels.IChannelListener> 和 <xref:System.ServiceModel.Channels.IChannel>）实现。</span><span class="sxs-lookup"><span data-stu-id="fc33b-153">This method is implemented by binding elements as well as by the runtime objects, such as <xref:System.ServiceModel.Channels.IChannelFactory>, <xref:System.ServiceModel.Channels.IChannelListener>, and <xref:System.ServiceModel.Channels.IChannel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcceptedChannels">
      <MemberSignature Language="C#" Value="public int MaxAcceptedChannels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAcceptedChannels" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAcceptedChannels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAcceptedChannels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxAcceptedChannels : int with get, set" Usage="System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(10)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(10)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc33b-154">获取或设置可以接受的最大通道数。</span><span class="sxs-lookup"><span data-stu-id="fc33b-154">Gets or sets the maximum number of channels that can be accepted.</span></span></summary>
        <value><span data-ttu-id="fc33b-155">可以接受的最大通道数。</span><span class="sxs-lookup"><span data-stu-id="fc33b-155">The maximum number of channels that can be accepted.</span></span> <span data-ttu-id="fc33b-156">默认值为 10。</span><span class="sxs-lookup"><span data-stu-id="fc33b-156">The default value is 10.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketRoutable">
      <MemberSignature Language="C#" Value="public bool PacketRoutable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PacketRoutable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable" />
      <MemberSignature Language="VB.NET" Value="Public Property PacketRoutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PacketRoutable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PacketRoutable : bool with get, set" Usage="System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc33b-157">获取或设置一个值，该值指示是否启用数据包路由。</span><span class="sxs-lookup"><span data-stu-id="fc33b-157">Gets or sets a value that indicates whether packet routing is enabled.</span></span></summary>
        <value><span data-ttu-id="fc33b-158">如果启用数据包路由，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-158"><see langword="true" /> if packet routing is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fc33b-159">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-159">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc33b-160">此类可以选择使用一个消息级协议，该协议将转换 `DuplexSessionChannel` / `RequestChannel` / `ReplyChannel` 为单向通道，并允许路由来自转换后的通道的消息。</span><span class="sxs-lookup"><span data-stu-id="fc33b-160">This class can optionally use a message-level protocol that transforms a `DuplexSessionChannel`/`RequestChannel`/`ReplyChannel` to a one-way channel and allows the messages from the transformed channel to be routed.</span></span> <span data-ttu-id="fc33b-161"><xref:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable%2A> 属性会控制此协议的使用。</span><span class="sxs-lookup"><span data-stu-id="fc33b-161">Usage of this protocol is controlled by the <xref:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable%2A> property.</span></span>  
  
 <span data-ttu-id="fc33b-162">如果此属性为 `true` ，则在 `DuplexSessionChannel` 启动 (例如，) 缓存的 TCP 和命名管道）时，此类将添加消息标头 (MustUnderstand = `false` ，如果启用了安全，则为签名（如果) 启用了 "可以对此通道进行数据包路由"）。</span><span class="sxs-lookup"><span data-stu-id="fc33b-162">When this property is `true`, upon `DuplexSessionChannel` initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = `false`, signed if security is enabled) that semantically means "you can packet-route this channel".</span></span> <span data-ttu-id="fc33b-163">对于接受程序端，此属性为 `true` 时，此类将在通道上接受的第一个消息中查找该标头。</span><span class="sxs-lookup"><span data-stu-id="fc33b-163">On the acceptor side, when this property is `true`, this class looks for this header in the first message received on the channel.</span></span> <span data-ttu-id="fc33b-164">如果此标头不存在，WCF 将错误通道。</span><span class="sxs-lookup"><span data-stu-id="fc33b-164">If this header does not exist, WCF faults the channel.</span></span> <span data-ttu-id="fc33b-165">如果该标头存在，则 WCF 会将新通道漏斗图到共享输入通道。</span><span class="sxs-lookup"><span data-stu-id="fc33b-165">If the header exists, then WCF funnels the new channel into a shared input channel.</span></span>  
  
 <span data-ttu-id="fc33b-166">若要转换请求-答复通道 (例如，TCP 流式处理或 HTTP) ，当此属性为时 `true` ，此标头将添加到每个请求，以指示可以对请求进行数据包路由。</span><span class="sxs-lookup"><span data-stu-id="fc33b-166">To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is `true`, this header is added to every request to signal that the request can be packet routed.</span></span> <span data-ttu-id="fc33b-167">WCF 还会验证 `SendRequest` 是否 `null` `null` 在服务器上返回并答复。</span><span class="sxs-lookup"><span data-stu-id="fc33b-167">WCF also verifies that `SendRequest` returns `null` and replies with `null` on the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeChannelPoolSettings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeChannelPoolSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeChannelPoolSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeChannelPoolSettings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeChannelPoolSettings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeChannelPoolSettings : unit -&gt; bool" Usage="oneWayBindingElement.ShouldSerializeChannelPoolSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc33b-168">返回与此绑定元素关联的通道池的属性是否应进行序列化。</span><span class="sxs-lookup"><span data-stu-id="fc33b-168">Returns whether the properties of the channel pool that are associated with this binding element should be serialized.</span></span></summary>
        <returns><span data-ttu-id="fc33b-169">如果应序列化通道池设置，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-169"><see langword="true" /> if the channel pool settings should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit&#xA;override this.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="oneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy (exporter, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="fc33b-170">可以用来修改导出过程的 <see cref="T:System.ServiceModel.Description.MetadataExporter" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-170">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</span></span></param>
        <param name="context"><span data-ttu-id="fc33b-171">可以用来插入您的自定义策略断言的 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-171">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</span></span></param>
        <summary><span data-ttu-id="fc33b-172">导出表示单向绑定元素的自定义策略断言。</span><span class="sxs-lookup"><span data-stu-id="fc33b-172">Exports a custom policy assertion that represents the one-way binding element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc33b-173">此方法将与绑定相关的语句写入特定协定公开的 WSDL 信息，并且 WCF 将使用它来与客户端通信，以便在绑定堆栈中存在此自定义绑定元素。</span><span class="sxs-lookup"><span data-stu-id="fc33b-173">This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by WCF to communicate to clients the existence of this custom binding element in the binding stack.</span></span>  
  
 <span data-ttu-id="fc33b-174">此方法接受两个参数：<xref:System.ServiceModel.Description.MetadataExporter> 和 <xref:System.ServiceModel.Description.PolicyConversionContext> 对象。</span><span class="sxs-lookup"><span data-stu-id="fc33b-174">This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects.</span></span> <span data-ttu-id="fc33b-175">使用 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> 和 <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> 方法以获取从不同范围导出的策略断言的集合。</span><span class="sxs-lookup"><span data-stu-id="fc33b-175">Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes.</span></span> <span data-ttu-id="fc33b-176">然后，使用此方法将您自己的策略断言添加到适当的集合中。</span><span class="sxs-lookup"><span data-stu-id="fc33b-176">Then use this method to add your own policy assertions to the appropriate collection.</span></span>  
  
 <span data-ttu-id="fc33b-177"><xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> 属性可公开正在导出的终结点的 <xref:System.ServiceModel.Description.ContractDescription>。</span><span class="sxs-lookup"><span data-stu-id="fc33b-177">The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported.</span></span> <span data-ttu-id="fc33b-178">这样，此方法就可正确限定它们的导出策略断言的范围。</span><span class="sxs-lookup"><span data-stu-id="fc33b-178">This enables this method to correctly scope their exported policy assertions.</span></span> <span data-ttu-id="fc33b-179">例如，代码中的安全属性可以将行为添加到指示安全策略断言应该添加到的位置的 <xref:System.ServiceModel.Description.ContractDescription>。</span><span class="sxs-lookup"><span data-stu-id="fc33b-179">For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.</span></span>  
  
 <span data-ttu-id="fc33b-180">一旦将自定义策略断言附加到 WSDL 信息，客户端就可以通过实现 <xref:System.ServiceModel.Description.IPolicyImportExtension> 接口来检测和导入自定义绑定断言。</span><span class="sxs-lookup"><span data-stu-id="fc33b-180">Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc33b-181"><paramref name="exporter" /> 或 <paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fc33b-181"><paramref name="exporter" /> or <paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
