<Type Name="MessageBuffer" FullName="System.ServiceModel.Channels.MessageBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e66212bcb4dd424c855e6043fcdc5c80676d328b" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83960980" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageBuffer : IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-uwp-10.0;netcore-1.0;netcore-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageBuffer extends System.Object implements class System.IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-uwp-10.0;netcore-1.0;netcore-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.MessageBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageBuffer&#xA;Implements IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-uwp-10.0;netcore-1.0;netcore-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageBuffer abstract : IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-uwp-10.0;netcore-1.0;netcore-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type MessageBuffer = class&#xA;    interface IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-uwp-10.0;netcore-1.0;netcore-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public abstract class MessageBuffer : IDisposable, System.Xml.XPath.IXPathNavigable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageBuffer extends System.Object implements class System.IDisposable, class System.Xml.XPath.IXPathNavigable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageBuffer&#xA;Implements IDisposable, IXPathNavigable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageBuffer abstract : IDisposable, System::Xml::XPath::IXPathNavigable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type MessageBuffer = class&#xA;    interface IXPathNavigable&#xA;    interface IDisposable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0e613-101">表示一个内存缓冲区，该缓冲区存储了未来要使用的整个消息。</span><span class="sxs-lookup"><span data-stu-id="0e613-101">Represents a memory buffer that stores an entire message for future consumption.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e613-102"><xref:System.ServiceModel.Channels.Message> 实例的正文只可使用或写入一次。</span><span class="sxs-lookup"><span data-stu-id="0e613-102">The body of a <xref:System.ServiceModel.Channels.Message> instance can only be consumed or written once.</span></span> <span data-ttu-id="0e613-103">如果希望不止一次使用 <xref:System.ServiceModel.Channels.Message> 实例，则应该使用 <xref:System.ServiceModel.Channels.MessageBuffer> 类将整个 <xref:System.ServiceModel.Channels.Message> 实例全部存储到内存。</span><span class="sxs-lookup"><span data-stu-id="0e613-103">If you wish to consume a <xref:System.ServiceModel.Channels.Message> instance more than once, you should use the <xref:System.ServiceModel.Channels.MessageBuffer> class to completely store an entire <xref:System.ServiceModel.Channels.Message> instance into memory.</span></span>  
  
 <span data-ttu-id="0e613-104"><xref:System.ServiceModel.Channels.MessageBuffer> 实例是通过调用 <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> 实例的 <xref:System.ServiceModel.Channels.Message> 构造的。</span><span class="sxs-lookup"><span data-stu-id="0e613-104">A <xref:System.ServiceModel.Channels.MessageBuffer> instance is constructed by calling <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> of a <xref:System.ServiceModel.Channels.Message> instance.</span></span> <span data-ttu-id="0e613-105">然后会创建并返回一个新的 <xref:System.ServiceModel.Channels.MessageBuffer>，它将获得对 <xref:System.ServiceModel.Channels.Message> 的所有权，并将整个内容读取到内存。</span><span class="sxs-lookup"><span data-stu-id="0e613-105">A new <xref:System.ServiceModel.Channels.MessageBuffer> is then created and returned, which assumes ownership of the <xref:System.ServiceModel.Channels.Message> and reads the entire content into memory.</span></span>  
  
 <span data-ttu-id="0e613-106">为了从 <xref:System.ServiceModel.Channels.Message> 检索 <xref:System.ServiceModel.Channels.MessageBuffer> 的副本，必须调用 <xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A> 的 <xref:System.ServiceModel.Channels.MessageBuffer> 方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-106">In order to retrieve a copy of a <xref:System.ServiceModel.Channels.Message> from the <xref:System.ServiceModel.Channels.MessageBuffer>, you must call the <xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A> method of the <xref:System.ServiceModel.Channels.MessageBuffer>.</span></span> <span data-ttu-id="0e613-107">这会返回您所提供的原始 <xref:System.ServiceModel.Channels.Message> 实例的相同副本。</span><span class="sxs-lookup"><span data-stu-id="0e613-107">This returns an identical copy of the original <xref:System.ServiceModel.Channels.Message> instance you provided.</span></span>  
  
 <span data-ttu-id="0e613-108">可以通过将 <xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A> 设置为所需的最大字节数来控制缓冲区的最大大小。</span><span class="sxs-lookup"><span data-stu-id="0e613-108">You can control the maximum size of the buffer by setting <xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A> to the maximum number of bytes desired.</span></span> <span data-ttu-id="0e613-109">这个最大数无需包含任何与生成缓冲区相关的瞬态分配或附加到消息的属性。</span><span class="sxs-lookup"><span data-stu-id="0e613-109">This number does not necessarily cover any transient allocations related to building the buffer, or properties attached to the message.</span></span>  
  
 <span data-ttu-id="0e613-110">每次使用完 <xref:System.ServiceModel.Channels.MessageBuffer> 实例后，您都应该调用 <xref:System.ServiceModel.Channels.MessageBuffer.Close%2A> 以关闭该实例。</span><span class="sxs-lookup"><span data-stu-id="0e613-110">You should always close a <xref:System.ServiceModel.Channels.MessageBuffer> instance by calling <xref:System.ServiceModel.Channels.MessageBuffer.Close%2A> when finished working with it.</span></span> <span data-ttu-id="0e613-111">这可能会允许更快地释放系统资源。</span><span class="sxs-lookup"><span data-stu-id="0e613-111">This allows system resources to potentially be freed sooner.</span></span>  
  
 <span data-ttu-id="0e613-112">针对从此类派生的托管 C++ 用户的特别说明：</span><span class="sxs-lookup"><span data-stu-id="0e613-112">Special note for Managed C++ users deriving from this class:</span></span>  
  
-   <span data-ttu-id="0e613-113">将清理代码放入 (On)(Begin)Close（和/或 OnAbort）中，而不是放入析构函数中。</span><span class="sxs-lookup"><span data-stu-id="0e613-113">Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</span></span>  
  
-   <span data-ttu-id="0e613-114">避免使用析构函数：它们会导致编译器自动生成 <xref:System.IDisposable></span><span class="sxs-lookup"><span data-stu-id="0e613-114">Avoid destructors: they cause the compiler to auto-generate <xref:System.IDisposable></span></span>  
  
-   <span data-ttu-id="0e613-115">避免使用非引用成员：它们可能会导致编译器自动生成 <xref:System.IDisposable></span><span class="sxs-lookup"><span data-stu-id="0e613-115">Avoid non-reference members: they can cause the compiler to auto-generate <xref:System.IDisposable></span></span>  
  
-   <span data-ttu-id="0e613-116">避免使用终结器；但如果包含一个终结器，则应该禁止显示生成警告并从 (On)(Begin)Close（和/或 OnAbort）调用 <xref:System.GC.SuppressFinalize%28System.Object%29> 和终结器本身，以便模拟自动生成的 <xref:System.IDisposable> 行为。</span><span class="sxs-lookup"><span data-stu-id="0e613-116">Avoid finalizers; but if you include one, you should suppress the build warning and call <xref:System.GC.SuppressFinalize%28System.Object%29> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) in order to emulate what would have been the auto-generated <xref:System.IDisposable> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e613-117">初始化 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0e613-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public abstract int BufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageBuffer.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int BufferSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BufferSize : int" Usage="System.ServiceModel.Channels.MessageBuffer.BufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e613-118">获取此 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 使用的近似字节数。</span><span class="sxs-lookup"><span data-stu-id="0e613-118">Gets the approximate number of bytes consumed by this <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</span></span></summary>
        <value><span data-ttu-id="0e613-119">此 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 使用的近似字节数。</span><span class="sxs-lookup"><span data-stu-id="0e613-119">The approximate number of bytes consumed by this <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e613-120">可以通过将 <xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A> 设置为所需的最大字节数来控制缓冲区的最大大小。</span><span class="sxs-lookup"><span data-stu-id="0e613-120">You can control the maximum size of the buffer by setting <xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A> to the maximum number of bytes desired.</span></span> <span data-ttu-id="0e613-121">这个最大数无需包含任何与生成缓冲区相关的瞬态分配或附加到消息的属性。</span><span class="sxs-lookup"><span data-stu-id="0e613-121">This number does not necessarily cover any transient allocations related to building the buffer, or properties attached to the message.</span></span> <span data-ttu-id="0e613-122">进行序列化时，它与消息的实际大小无关。</span><span class="sxs-lookup"><span data-stu-id="0e613-122">It is not related to the actual size of the message when serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.Close" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="messageBuffer.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e613-123">缓冲区使用完毕。</span><span class="sxs-lookup"><span data-stu-id="0e613-123">Finishes working with the buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e613-124">每次使用完 <xref:System.ServiceModel.Channels.MessageBuffer> 实例后，您都应该调用 <xref:System.ServiceModel.Channels.MessageBuffer.Close%2A> 以关闭该实例。</span><span class="sxs-lookup"><span data-stu-id="0e613-124">You should always close a <xref:System.ServiceModel.Channels.MessageBuffer> instance by calling <xref:System.ServiceModel.Channels.MessageBuffer.Close%2A> when finished working with it.</span></span> <span data-ttu-id="0e613-125">这可能会允许更快地释放系统资源。</span><span class="sxs-lookup"><span data-stu-id="0e613-125">This allows system resources to potentially be freed sooner.</span></span>  
  
 <span data-ttu-id="0e613-126">当尝试用此方法关闭缓冲区时，如果已调用 <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> 创建了消息的消息缓冲区，并使用 <xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A> 检查了消息，则会收到 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="0e613-126">If you have called <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> to create a message buffer of a message, and inspected the message using <xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A>, you will get a <xref:System.InvalidOperationException> when you attempt to close the buffer using this method.</span></span> <span data-ttu-id="0e613-127">要避免出现此问题，需要在关闭缓冲区前从缓冲区重新创建消息。</span><span class="sxs-lookup"><span data-stu-id="0e613-127">To avoid this problem, you need to recreate the message from the buffer before closing.</span></span> <span data-ttu-id="0e613-128">有关以前出现的这种情况以及其解决方法的演示，请参见“示例”部分。</span><span class="sxs-lookup"><span data-stu-id="0e613-128">See the code sample in the Example section for a demonstration of the previous scenario and a way to resolve this problem.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e613-129">下面的示例演示如何正确关闭消息缓冲区。</span><span class="sxs-lookup"><span data-stu-id="0e613-129">The following example demonstrates how to properly close a message buffer.</span></span>  
  
```csharp
public void AfterReceiveReply(ref Message reply, object correlationState)  
{  
    // Create the buffer.
    MessageBuffer buffer = reply.CreateBufferedCopy(13000);  
    // Inspect the response (for example, extract the body contents).
    Message thisReply = buffer.CreateMessage();
    XmlDictionaryReader reader = thisReply.GetReaderAtBodyContents();
    var info = new StringBuilder();
    XmlWriter writer = XmlWriter.Create(info);  
    writer.WriteNode(reader, true);  
    writer.Close();  
    // Resolution:  Re-create the message from the buffer before  
    // closing.  
    reply = buffer.CreateMessage();  
    // You can close the buffer after the message has been recreated.  
    buffer.Close();
}
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message CreateMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message CreateMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateMessage () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::Message ^ CreateMessage();" />
      <MemberSignature Language="F#" Value="abstract member CreateMessage : unit -&gt; System.ServiceModel.Channels.Message" Usage="messageBuffer.CreateMessage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e613-130">返回原始消息的副本。</span><span class="sxs-lookup"><span data-stu-id="0e613-130">Returns a copy of the original message.</span></span></summary>
        <returns><span data-ttu-id="0e613-131">一个原始 <see cref="T:System.ServiceModel.Channels.Message" /> 实例的相同副本，您先前将此实例提供给 <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /> 实例的 <see cref="T:System.ServiceModel.Channels.Message" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-131">An identical copy of the original <see cref="T:System.ServiceModel.Channels.Message" /> instance you previously provided to the <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /> method of a <see cref="T:System.ServiceModel.Channels.Message" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e613-132">调用此方法将创建一个原始 <xref:System.ServiceModel.Channels.Message> 实例的相同副本，您先前将此实例提供给 <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> 实例的 <xref:System.ServiceModel.Channels.Message> 方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-132">Calling this method creates an identical copy of the original <xref:System.ServiceModel.Channels.Message> instance you previously provided to the <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> method of a <xref:System.ServiceModel.Channels.Message> instance.</span></span> <span data-ttu-id="0e613-133">然后可以将消息保存到持久存储区中。</span><span class="sxs-lookup"><span data-stu-id="0e613-133">You can then save the message to a durable storage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNavigator">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0e613-134">创建一个用于定位此对象的新 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0e613-134">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e613-135">如果只想操作消息副本的一部分，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-135">Use this method if you want to manipulate just a portion of the message copy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="abstract member CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="messageBuffer.CreateNavigator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.XPath.IXPathNavigable.CreateNavigator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e613-136">创建一个用于定位此对象的新 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0e613-136">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object.</span></span> <span data-ttu-id="0e613-137">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-137">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0e613-138">用于定位此对象的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0e613-138">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e613-139">如果只想操作消息副本的一部分，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-139">Use this method if you want to manipulate just a portion of the message copy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator CreateNavigator (int nodeQuota);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XPath.XPathNavigator CreateNavigator(int32 nodeQuota) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNavigator (nodeQuota As Integer) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XPath::XPathNavigator ^ CreateNavigator(int nodeQuota);" />
      <MemberSignature Language="F#" Value="member this.CreateNavigator : int -&gt; System.Xml.XPath.XPathNavigator" Usage="messageBuffer.CreateNavigator nodeQuota" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeQuota" Type="System.Int32" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="nodeQuota"><span data-ttu-id="0e613-140">希望导航器最初定位的位置。</span><span class="sxs-lookup"><span data-stu-id="0e613-140">The location you want the navigator to be positioned on initially.</span></span></param>
        <summary><span data-ttu-id="0e613-141">使用位于指定节点上的导航器，创建一个用于定位此对象的新 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0e613-141">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object, with the navigator positioned on the node specified.</span></span></summary>
        <returns><span data-ttu-id="0e613-142">用于定位此对象的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0e613-142">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e613-143">如果只想操作消息副本的一部分，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-143">Use this method if you want to manipulate just a portion of the message copy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XPath.XPathNavigator CreateNavigator(valuetype System.Xml.XmlSpace space) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNavigator (space As XmlSpace) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::XmlSpace space);" />
      <MemberSignature Language="F#" Value="member this.CreateNavigator : System.Xml.XmlSpace -&gt; System.Xml.XPath.XPathNavigator" Usage="messageBuffer.CreateNavigator space" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="space" Type="System.Xml.XmlSpace" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="space"><span data-ttu-id="0e613-144">一个有效的 <see cref="T:System.Xml.XmlSpace" /> 空间。</span><span class="sxs-lookup"><span data-stu-id="0e613-144">A valid <see cref="T:System.Xml.XmlSpace" /> space.</span></span></param>
        <summary><span data-ttu-id="0e613-145">在指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 范围，创建一个用于定位此对象的新 <see langword="xml:space" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0e613-145">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object, with the specified <see langword="xml:space" /> scope.</span></span></summary>
        <returns><span data-ttu-id="0e613-146">用于定位此对象的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0e613-146">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e613-147">如果只想操作消息副本的一部分，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-147">Use this method if you want to manipulate just a portion of the message copy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator CreateNavigator (int nodeQuota, System.Xml.XmlSpace space);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XPath.XPathNavigator CreateNavigator(int32 nodeQuota, valuetype System.Xml.XmlSpace space) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNavigator (nodeQuota As Integer, space As XmlSpace) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XPath::XPathNavigator ^ CreateNavigator(int nodeQuota, System::Xml::XmlSpace space);" />
      <MemberSignature Language="F#" Value="member this.CreateNavigator : int * System.Xml.XmlSpace -&gt; System.Xml.XPath.XPathNavigator" Usage="messageBuffer.CreateNavigator (nodeQuota, space)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeQuota" Type="System.Int32" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="space" Type="System.Xml.XmlSpace" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="nodeQuota"><span data-ttu-id="0e613-148">希望导航器最初定位的位置。</span><span class="sxs-lookup"><span data-stu-id="0e613-148">The location you want the navigator to be positioned on initially.</span></span></param>
        <param name="space"><span data-ttu-id="0e613-149">一个有效的 <see cref="T:System.Xml.XmlSpace" /> 空间。</span><span class="sxs-lookup"><span data-stu-id="0e613-149">A valid <see cref="T:System.Xml.XmlSpace" /> space.</span></span></param>
        <summary><span data-ttu-id="0e613-150">使用位于指定节点和 <see cref="T:System.Xml.XPath.XPathNavigator" /> 范围的导航器，创建一个用于定位此对象的新 <see langword="xml:space" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0e613-150">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object, with the navigator positioned on the specified node and <see langword="xml:space" /> scope.</span></span></summary>
        <returns><span data-ttu-id="0e613-151">用于定位此对象的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0e613-151">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e613-152">如果只想操作消息副本的一部分，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-152">Use this method if you want to manipulate just a portion of the message copy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageContentType">
      <MemberSignature Language="C#" Value="public virtual string MessageContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageContentType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MessageContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MessageContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageContentType : string" Usage="System.ServiceModel.Channels.MessageBuffer.MessageContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e613-153">获取存储在此缓冲区中消息内容的类型。</span><span class="sxs-lookup"><span data-stu-id="0e613-153">Gets the type of message content stored in this buffer.</span></span></summary>
        <value><span data-ttu-id="0e613-154">存储在此缓冲区中消息内容的类型。</span><span class="sxs-lookup"><span data-stu-id="0e613-154">The type of message content stored in this buffer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="messageBuffer.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e613-155">释放 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 使用的非托管资源，并选择性地释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="0e613-155">Releases the unmanaged resources used by the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> and optionally releases the managed resources.</span></span> <span data-ttu-id="0e613-156">无法继承此方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-156">This method cannot be inherited.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e613-157">使用完 <xref:System.ServiceModel.Channels.MessageBuffer> 后调用此方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-157">Call this method when you are finished using the <xref:System.ServiceModel.Channels.MessageBuffer>.</span></span> <span data-ttu-id="0e613-158">此方法使 <xref:System.ServiceModel.Channels.MessageBuffer> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="0e613-158">This method leaves the <xref:System.ServiceModel.Channels.MessageBuffer> in an unusable state.</span></span> <span data-ttu-id="0e613-159">调用完此方法后，必须释放对 <xref:System.ServiceModel.Channels.MessageBuffer> 的所有引用，这样垃圾回收器才能收回 <xref:System.ServiceModel.Channels.MessageBuffer> 占用的内存。</span><span class="sxs-lookup"><span data-stu-id="0e613-159">After calling this method, you must release all references to the <xref:System.ServiceModel.Channels.MessageBuffer> so the garbage collector can reclaim the memory that the <xref:System.ServiceModel.Channels.MessageBuffer> was occupying.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0e613-160">每次释放对 <xref:System.ServiceModel.Channels.MessageBuffer> 的最后一个引用之前，均应调用此方法。</span><span class="sxs-lookup"><span data-stu-id="0e613-160">Always call this method before you release your last reference to the <xref:System.ServiceModel.Channels.MessageBuffer>.</span></span> <span data-ttu-id="0e613-161">否则，在垃圾回收器调用 <xref:System.ServiceModel.Channels.MessageBuffer> 对象的 `Finalize` 方法之前，不会释放正在使用的资源。</span><span class="sxs-lookup"><span data-stu-id="0e613-161">Otherwise, the resources it is using are not freed until the garbage collector calls the <xref:System.ServiceModel.Channels.MessageBuffer> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteMessage">
      <MemberSignature Language="C#" Value="public virtual void WriteMessage (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteMessage(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteMessage (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteMessage(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member WriteMessage : System.IO.Stream -&gt; unit&#xA;override this.WriteMessage : System.IO.Stream -&gt; unit" Usage="messageBuffer.WriteMessage stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="0e613-162">一个 IO 流，此缓冲区中的整个内容都会写入此 IO 流。</span><span class="sxs-lookup"><span data-stu-id="0e613-162">An IO stream that the entire content of this buffer is written to.</span></span></param>
        <summary><span data-ttu-id="0e613-163">将此缓冲区中的整个内容写入指定的 IO 流。</span><span class="sxs-lookup"><span data-stu-id="0e613-163">Writes the entire content of this buffer to the specified IO stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e613-164">此功能使用的是二进制编码器，而不是 UTF-8 编码器。</span><span class="sxs-lookup"><span data-stu-id="0e613-164">This function uses a binary encoder instead of a UTF-8 encoder.</span></span> <span data-ttu-id="0e613-165">因此，无法直接从 <xref:System.ServiceModel.Channels.MessageBuffer> 转换到 <xref:System.ServiceModel.Channels.Message>。</span><span class="sxs-lookup"><span data-stu-id="0e613-165">Therefore, you cannot directly convert from a <xref:System.ServiceModel.Channels.MessageBuffer> to a <xref:System.ServiceModel.Channels.Message>.</span></span> <span data-ttu-id="0e613-166">示例部分的代码演示如何解决这个问题。</span><span class="sxs-lookup"><span data-stu-id="0e613-166">The code in the example section shows how to work around this problem.</span></span>  
  
   
  
## Examples  
  
```csharp
private byte[] ConvertMessageToByteArray(ref Message message)   
{  
    // Memory stream that contains the message.
    var stream = new MemoryStream();  
    // Create an XmlWriter to serialize the message into a byte array.
    var settings = new XmlWriterSettings();
    settings.Encoding = System.Text.Encoding.UTF8;
    XmlWriter writer = XmlWriter.Create(stream, settings);
    // Copy the message into a buffer.
    // Note: This call changes the original message's state.
    MessageBuffer buffer = message.CreateBufferedCopy(int.MaxValue);  
    // Create a copy of the message.
    message = buffer.CreateMessage();  
    // Serialize the message to the XmlWriter.
    message.WriteMessage(writer);  
    // Recreate the message.
    message = buffer.CreateMessage();
    // Flush the contents of the writer so that the stream gets updated.
    writer.Flush();  
    stream.Flush();  
    // Convert the stream to an array.
    byte[] retval = stream.ToArray();
    return retval;
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
