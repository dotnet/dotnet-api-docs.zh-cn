<Type Name="ContextExchangeMechanism" FullName="System.ServiceModel.Channels.ContextExchangeMechanism">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5faa3ea88b5a8cc13ba8ef85e83305232cf336a5" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86575612" /></Metadata><TypeSignature Language="C#" Value="public enum ContextExchangeMechanism" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ContextExchangeMechanism extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.ContextExchangeMechanism" />
  <TypeSignature Language="VB.NET" Value="Public Enum ContextExchangeMechanism" />
  <TypeSignature Language="C++ CLI" Value="public enum class ContextExchangeMechanism" />
  <TypeSignature Language="F#" Value="type ContextExchangeMechanism = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.WorkflowServices" FromVersion="4.0.0.0" To="System.ServiceModel" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1e10b-101">指定 HTTP Cookie 或 SOAP 标头是否是交换客户端和服务之间对话的上下文所用的机制。</span><span class="sxs-lookup"><span data-stu-id="1e10b-101">Specifies whether an HTTP cookie or a SOAP header is the mechanism used to exchange context for a conversation between a client and service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e10b-102">使用 <xref:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism%2A> 属性或 <xref:System.ServiceModel.Channels.ContextBindingElement.%23ctor%28System.Net.Security.ProtectionLevel%2CSystem.ServiceModel.Channels.ContextExchangeMechanism%29> 构造函数可以为客户端和服务之间的对话指定 <xref:System.ServiceModel.Channels.ContextExchangeMechanism> 值。</span><span class="sxs-lookup"><span data-stu-id="1e10b-102">Use the <xref:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism%2A> property or the <xref:System.ServiceModel.Channels.ContextBindingElement.%23ctor%28System.Net.Security.ProtectionLevel%2CSystem.ServiceModel.Channels.ContextExchangeMechanism%29> constructor to specify the value of the <xref:System.ServiceModel.Channels.ContextExchangeMechanism> for a conversation between a client and service.</span></span>  
  
 <span data-ttu-id="1e10b-103">要求支持上下文交换协议的服务终结点可以在其发布的策略中明确此要求。</span><span class="sxs-lookup"><span data-stu-id="1e10b-103">Service endpoints that require support for the context exchange protocol can make this requirement explicit in their published policy.</span></span> <span data-ttu-id="1e10b-104">表示要求客户端支持 SOAP 级上下文交换协议或表示要求启用 HTTP Cookie 支持的策略断言可以由终结点发布。</span><span class="sxs-lookup"><span data-stu-id="1e10b-104">Policy assertions that represent the requirement for the client to support the context exchange protocol at the SOAP level or that require the enabling of HTTP cookie support can be published by an endpoint.</span></span> <span data-ttu-id="1e10b-105">如何将这些断言生成到服务策略中是由 <xref:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism%2A> 属性的值控制的，如下所示：</span><span class="sxs-lookup"><span data-stu-id="1e10b-105">The generation of these assertions into the policy on the service is controlled by the value of the <xref:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism%2A> property as follows:</span></span>  
  
-   <span data-ttu-id="1e10b-106">对于 HttpCookie，将生成以下断言：</span><span class="sxs-lookup"><span data-stu-id="1e10b-106">For HttpCookie, the following assertion is generated:</span></span>  
  
    ```  
    <HttpUseCookie xmlns="http://schemas.xmlsoap.org/soap/http"/>  
    ```  
  
-   <span data-ttu-id="1e10b-107">对于 ContextSoapHeader，将生成以下断言：</span><span class="sxs-lookup"><span data-stu-id="1e10b-107">For ContextSoapHeader, the following assertion is generated:</span></span>  
  
    ```  
    <IncludeContext   
    xmlns="http://schemas.microsoft.com/ws/2006/05/context"  
    protectionLevel="Sign" />  
    ```  
  
 <span data-ttu-id="1e10b-108">HttpCookie 枚举是在传输层实现的。</span><span class="sxs-lookup"><span data-stu-id="1e10b-108">The HttpCookie enumeration is implemented at the transport layer.</span></span> <span data-ttu-id="1e10b-109">在客户端发出初始请求，然后由服务在响应答复时提供上下文的单工通信情况下，可以使用此枚举。</span><span class="sxs-lookup"><span data-stu-id="1e10b-109">This can be used in the case of simplex communication, where the client makes an initial request and the context is provided by the service on the corresponding reply.</span></span> <span data-ttu-id="1e10b-110">在该对话的生存期内，客户端和服务之间的所有后续消息都将包含此上下文。</span><span class="sxs-lookup"><span data-stu-id="1e10b-110">All subsequent messages between the service and client for the lifetime of that conversation contain the context.</span></span> <span data-ttu-id="1e10b-111">对于使用 HTTP 传输的服务终结点以及同意允许使用 HTTP cookie 的客户端，可使用 HttpCookie 枚举来交换应用程序上下文。</span><span class="sxs-lookup"><span data-stu-id="1e10b-111">For service endpoints that use an HTTP transport and clients that agree to allow the use of HTTP cookies, the HttpCookie enumeration can be utilized to exchange the application context.</span></span> <span data-ttu-id="1e10b-112">当使用 HTTP Cookie 来传播上下文时，应使用传输安全来保护 HTTP Cookie。</span><span class="sxs-lookup"><span data-stu-id="1e10b-112">When HTTP cookies are used to propagate context, they should be protected using transport security.</span></span> <span data-ttu-id="1e10b-113">此机制不能与非 HTTP 传输一起使用。</span><span class="sxs-lookup"><span data-stu-id="1e10b-113">This mechanism cannot be used with non-HTTP transports.</span></span>  
  
 <span data-ttu-id="1e10b-114">ContextSoapHeader 枚举提供了一个替代方法，该方法在自定义上下文通道中实现，并且可用于非 HTTP 传输和其他消息交换模式，如请求-答复和双工会话。</span><span class="sxs-lookup"><span data-stu-id="1e10b-114">The ContextSoapHeader enumeration provides an alternative that is implemented in a custom context channel and that can be used with non-HTTP transports and other message exchange pattern, such as request-reply, and a duplex session.</span></span> <span data-ttu-id="1e10b-115">此上下文交换协议提供一种基于 SOAP 的功能，它等效于 HTTP Cookie 在传输层提供的功能。</span><span class="sxs-lookup"><span data-stu-id="1e10b-115">This context exchange protocol provides a SOAP-based equivalent of the feature offered by HTTP cookies at the transport layer.</span></span> <span data-ttu-id="1e10b-116">它引入了新的 `wsc:Context` SOAP 标头来表示上下文信息。</span><span class="sxs-lookup"><span data-stu-id="1e10b-116">It introduces a new `wsc:Context` SOAP header to represent the context information.</span></span> <span data-ttu-id="1e10b-117">和必须保护 WS-Addressing 标头一样，在传输过程中必须保护 `wsc:Context` 标头不被修改：到达后，这些标头用于将消息调度到正确的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="1e10b-117">The `wsc:Context` header must be protected from modification while in transit for the same reason as the WS-Addressing headers must be protected: upon arrival, these headers are used to dispatch the message to the correct workflow instances.</span></span> <span data-ttu-id="1e10b-118">因此，当绑定提供消息保护功能时，`wsc:Context` 标头必需在 SOAP 或传输级进行数字签名。</span><span class="sxs-lookup"><span data-stu-id="1e10b-118">The `wsc:Context` header is therefore required to be digitally signed at either SOAP or transport level when the binding offers message protection capability.</span></span>  
  
 <span data-ttu-id="1e10b-119">通道层使用 <xref:System.ServiceModel.Channels.ContextMessageProperty> 与应用程序层之间来回传递上下文。</span><span class="sxs-lookup"><span data-stu-id="1e10b-119">The channel layer communicates the context to and from the application layer using <xref:System.ServiceModel.Channels.ContextMessageProperty>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContextSoapHeader">
      <MemberSignature Language="C#" Value="ContextSoapHeader" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.ContextExchangeMechanism ContextSoapHeader = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader" />
      <MemberSignature Language="VB.NET" Value="ContextSoapHeader" />
      <MemberSignature Language="C++ CLI" Value="ContextSoapHeader" />
      <MemberSignature Language="F#" Value="ContextSoapHeader = 0" Usage="System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.ContextExchangeMechanism</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e10b-120">使用 SOAP 标头来交换上下文。</span><span class="sxs-lookup"><span data-stu-id="1e10b-120">A SOAP header is used to exchange context.</span></span> <span data-ttu-id="1e10b-121">这是默认的交换机制。</span><span class="sxs-lookup"><span data-stu-id="1e10b-121">This is the default exchange mechanism.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="HttpCookie">
      <MemberSignature Language="C#" Value="HttpCookie" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.ContextExchangeMechanism HttpCookie = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.ContextExchangeMechanism.HttpCookie" />
      <MemberSignature Language="VB.NET" Value="HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="HttpCookie" />
      <MemberSignature Language="F#" Value="HttpCookie = 1" Usage="System.ServiceModel.Channels.ContextExchangeMechanism.HttpCookie" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.ContextExchangeMechanism</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1e10b-122">使用 HTTP Cookie 来交换上下文。</span><span class="sxs-lookup"><span data-stu-id="1e10b-122">An HTTP cookie is used to exchange context.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
