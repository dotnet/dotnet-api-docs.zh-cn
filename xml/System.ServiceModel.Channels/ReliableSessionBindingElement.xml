<Type Name="ReliableSessionBindingElement" FullName="System.ServiceModel.Channels.ReliableSessionBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27f76cc8513c093f08de114c0a1bceda3d678d56" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89958535" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReliableSessionBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReliableSessionBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Description.IPolicyExportExtension" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReliableSessionBindingElement&#xA;Inherits BindingElement&#xA;Implements IPolicyExportExtension" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReliableSessionBindingElement sealed : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Description::IPolicyExportExtension" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type ReliableSessionBindingElement = class&#xA;    inherit BindingElement&#xA;    interface IPolicyExportExtension" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public sealed class ReliableSessionBindingElement : System.ServiceModel.Channels.BindingElement" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReliableSessionBindingElement extends System.ServiceModel.Channels.BindingElement" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReliableSessionBindingElement&#xA;Inherits BindingElement" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReliableSessionBindingElement sealed : System::ServiceModel::Channels::BindingElement" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="F#" Value="type ReliableSessionBindingElement = class&#xA;    inherit BindingElement" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="dc559-101">表示绑定元素，该绑定元素可生成终结点间可靠会话所需的发送和接收通道。</span><span class="sxs-lookup"><span data-stu-id="dc559-101">Represents the binding element that can produce the sending and receiving channels required for a reliable session between endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-102">提供会话并选择提供有序消息传递。</span><span class="sxs-lookup"><span data-stu-id="dc559-102">Provides sessions and optionally provides ordered message delivery.</span></span> <span data-ttu-id="dc559-103">这个已实现的会话可通过 SOAP 和传输中介。</span><span class="sxs-lookup"><span data-stu-id="dc559-103">This implemented session can cross SOAP and transport intermediaries.</span></span>  
  
 <span data-ttu-id="dc559-104">发送或接收消息时，每个绑定元素都表示一个处理步骤。</span><span class="sxs-lookup"><span data-stu-id="dc559-104">Each binding element represents a processing step when sending or receiving messages.</span></span> <span data-ttu-id="dc559-105">在运行时，绑定元素会创建必要的通道工厂和侦听器，用以生成发送和接收消息所需的传出和传入通道堆栈。</span><span class="sxs-lookup"><span data-stu-id="dc559-105">At runtime, binding elements create the channel factories and listeners that are necessary to build outgoing and incoming channel stacks required to send and receive messages.</span></span> <span data-ttu-id="dc559-106"><xref:System.ServiceModel.Channels.ReliableSessionBindingElement> 会在堆栈中提供一个可选层，该可选层可在终结点之间建立可靠会话并配置此会话的行为。</span><span class="sxs-lookup"><span data-stu-id="dc559-106">The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> provides an optional layer in the stack that can establish a reliable session between endpoints and configure the behavior of this session.</span></span>  
  
 <span data-ttu-id="dc559-107"><xref:System.ServiceModel.Channels.ReliableSessionBindingElement> 位于下表所示的标准绑定上。</span><span class="sxs-lookup"><span data-stu-id="dc559-107">The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> is provided on the standard bindings in the following table.</span></span>  
  
|<span data-ttu-id="dc559-108">绑定</span><span class="sxs-lookup"><span data-stu-id="dc559-108">Binding</span></span>|<span data-ttu-id="dc559-109">默认</span><span class="sxs-lookup"><span data-stu-id="dc559-109">Default</span></span>|  
|-------------|-------------|  
|<xref:System.ServiceModel.NetTcpBinding>|<span data-ttu-id="dc559-110">关闭</span><span class="sxs-lookup"><span data-stu-id="dc559-110">Off</span></span>|  
|<xref:System.ServiceModel.WSHttpBinding>|<span data-ttu-id="dc559-111">关闭</span><span class="sxs-lookup"><span data-stu-id="dc559-111">Off</span></span>|  
|<xref:System.ServiceModel.WSDualHttpBinding>|<span data-ttu-id="dc559-112">启用（必需）</span><span class="sxs-lookup"><span data-stu-id="dc559-112">On (required)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dc559-113">可将 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> 添加到任何自定义绑定。</span><span class="sxs-lookup"><span data-stu-id="dc559-113">The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> can be added to any custom binding.</span></span> <span data-ttu-id="dc559-114">使用下列配置元素即可完成此操作。</span><span class="sxs-lookup"><span data-stu-id="dc559-114">This is done using the following configuration elements.</span></span>  
  
```  
<bindings>  
    <customBinding>  
        <binding configurationName="ReliabilityHTTP">  
            <reliableSession/>  
        </binding>  
    </customBinding>  
</bindings>  
```  
  
 <span data-ttu-id="dc559-115">下面的代码示例演示如何在代码中使用 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>。</span><span class="sxs-lookup"><span data-stu-id="dc559-115">The following sample code demonstrates how to use <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> in code.</span></span>  
  
 [!code-csharp[S_Imperative#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_imperative/cs/service.cs#1)]
 [!code-vb[S_Imperative#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_imperative/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc559-116">初始化 <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="dc559-116">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSessionBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSessionBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc559-117">初始化 <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="dc559-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSessionBindingElement (bool ordered);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool ordered) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ordered As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSessionBindingElement(bool ordered);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.ReliableSessionBindingElement : bool -&gt; System.ServiceModel.Channels.ReliableSessionBindingElement" Usage="new System.ServiceModel.Channels.ReliableSessionBindingElement ordered" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ordered" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ordered"><span data-ttu-id="dc559-118">如果消息必须按照发送时的顺序传递，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-118"><see langword="true" /> if messages must be delivered in the order in which they are sent; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dc559-119">默认值是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-119">The default value is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="dc559-120">初始化 <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> 类的新实例，用以指定消息传递是否必须保持与消息发送一致的顺序。</span><span class="sxs-lookup"><span data-stu-id="dc559-120">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> class that specifies whether message delivery must preserve the order in which messages are sent.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcknowledgementInterval">
      <MemberSignature Language="C#" Value="public TimeSpan AcknowledgementInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AcknowledgementInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgementInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AcknowledgementInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.AcknowledgementInterval : TimeSpan with get, set" Usage="System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:00:00.2")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:00:00.2")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc559-121">获取或设置在向工厂所创建的可靠通道上的消息源发送确认之前目标等待的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="dc559-121">Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory.</span></span></summary>
        <value><span data-ttu-id="dc559-122"><see cref="T:System.TimeSpan" />，指定在向消息源发送确认之前服务等待的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="dc559-122">The <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service waits until sending an acknowledgment to the message source.</span></span> <span data-ttu-id="dc559-123">默认值为2秒。</span><span class="sxs-lookup"><span data-stu-id="dc559-123">The default value is 2 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-124">从可靠通道上接收消息的目标会将这些消息的确认组合成一条消息，以减少网络流量，同时提高消息的信息密度。</span><span class="sxs-lookup"><span data-stu-id="dc559-124">The destination that receives messages on a reliable channel groups the acknowledgments for these messages together into a single message to reduce network traffic and to increase information density on messages.</span></span> <span data-ttu-id="dc559-125">这种组合方式具有较好的伸缩性，可应对不断增加的网络流量。</span><span class="sxs-lookup"><span data-stu-id="dc559-125">Grouping scales better as traffic increases.</span></span> <span data-ttu-id="dc559-126">它不会尝试一收到消息就尽快发送该消息的确认，而是会等待一段时间，将该间隔期间内到达的确认组合在一起，然后一并发送。</span><span class="sxs-lookup"><span data-stu-id="dc559-126">It does not attempt to send an acknowledgment for every message it receives as soon as possible, but rather waits for an interval of time, groups together the acknowledgments that have arrived during that interval, and then sends them all together.</span></span> <span data-ttu-id="dc559-127">如果收到的第一条消息是异常消息，则会在消息传出后立即进行确认。</span><span class="sxs-lookup"><span data-stu-id="dc559-127">The first message that is received is the exception; it is acknowledged as soon as it is delivered.</span></span> <span data-ttu-id="dc559-128">此外，如果通过单个 HTTP 连接来使用可靠会话，例如 <xref:System.ServiceModel.WSHttpBinding>，而不是 <xref:System.ServiceModel.WSDualHttpBinding>，则不会使用此设置。</span><span class="sxs-lookup"><span data-stu-id="dc559-128">Also, if reliable sessions are used with single HTTP connections, as is the case for example with the <xref:System.ServiceModel.WSHttpBinding> but not <xref:System.ServiceModel.WSDualHttpBinding>, then this setting is not used.</span></span>  
  
 <span data-ttu-id="dc559-129">使用 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval%2A> 属性设置的值只是提供给基础结构的建议，并不是硬性限制。</span><span class="sxs-lookup"><span data-stu-id="dc559-129">The value that is set with the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval%2A> property is a recommendation to the infrastructure and not a hard limit.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dc559-130">设置的值小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="dc559-130">The value set is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="reliableSessionBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="dc559-131">工厂生成的通道类型。</span><span class="sxs-lookup"><span data-stu-id="dc559-131">The type of channel the factory builds.</span></span></typeparam>
        <param name="context"><span data-ttu-id="dc559-132"><see cref="T:System.ServiceModel.Channels.BindingContext" />，包含生成工厂所需的信息，这些工厂可生成类型为 <typeparamref name="TChannel" /> 的通道。</span><span class="sxs-lookup"><span data-stu-id="dc559-132">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to build the factories that can produce channels of type <typeparamref name="TChannel" />.</span></span></param>
        <summary><span data-ttu-id="dc559-133">返回一个工厂，该工厂可创建支持可靠会话的指定类型的通道。</span><span class="sxs-lookup"><span data-stu-id="dc559-133">Returns a factory that creates a channel of a specified type that supports a reliable session.</span></span></summary>
        <returns><span data-ttu-id="dc559-134">类型的 （从  中初始化）。</span><span class="sxs-lookup"><span data-stu-id="dc559-134">A <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-135">由工厂生成的 <xref:System.ServiceModel.Channels.IChannel> 具有 `TChannel` 类型。</span><span class="sxs-lookup"><span data-stu-id="dc559-135">The <xref:System.ServiceModel.Channels.IChannel> produced by the factory is of type `TChannel`.</span></span> <span data-ttu-id="dc559-136">客户端上支持的 `TChannel` 类型取决于连接到服务的基础通道类型。</span><span class="sxs-lookup"><span data-stu-id="dc559-136">The types of `TChannel` supported on the client is dependent of the types of underlying channels that connect to the service.</span></span> <span data-ttu-id="dc559-137">下表指出支持何种可靠会话通道类型作为基础通道的一项功能。</span><span class="sxs-lookup"><span data-stu-id="dc559-137">The following table indicates what reliable session channel types are supported as a function of the underlying channels.</span></span>  
  
|<span data-ttu-id="dc559-138">基础通道类型支持可靠会话 `TChannel` 类型</span><span class="sxs-lookup"><span data-stu-id="dc559-138">Support for Reliable Session `TChannel` Types by Underlying Channel Types</span></span>|<span data-ttu-id="dc559-139">IRequestChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-139">IRequestChannel</span></span>|<span data-ttu-id="dc559-140">IRequestSessionChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-140">IRequestSessionChannel</span></span>|<span data-ttu-id="dc559-141">IDuplexChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-141">IDuplexChannel</span></span>|<span data-ttu-id="dc559-142">IDuplexSessionChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-142">IDuplexSessionChannel</span></span>|  
|-------------------------------------------------------------------------------|---------------------|----------------------------|--------------------|---------------------------|  
|<span data-ttu-id="dc559-143">IOutputSessionChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-143">IOutputSessionChannel</span></span>|<span data-ttu-id="dc559-144">是</span><span class="sxs-lookup"><span data-stu-id="dc559-144">Yes</span></span>|<span data-ttu-id="dc559-145">是</span><span class="sxs-lookup"><span data-stu-id="dc559-145">Yes</span></span>|<span data-ttu-id="dc559-146">是</span><span class="sxs-lookup"><span data-stu-id="dc559-146">Yes</span></span>|<span data-ttu-id="dc559-147">是</span><span class="sxs-lookup"><span data-stu-id="dc559-147">Yes</span></span>|  
|<span data-ttu-id="dc559-148">IRequestSessionChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-148">IRequestSessionChannel</span></span>|<span data-ttu-id="dc559-149">是</span><span class="sxs-lookup"><span data-stu-id="dc559-149">Yes</span></span>|<span data-ttu-id="dc559-150">是</span><span class="sxs-lookup"><span data-stu-id="dc559-150">Yes</span></span>|<span data-ttu-id="dc559-151">否</span><span class="sxs-lookup"><span data-stu-id="dc559-151">No</span></span>|<span data-ttu-id="dc559-152">否</span><span class="sxs-lookup"><span data-stu-id="dc559-152">No</span></span>|  
|<span data-ttu-id="dc559-153">IDuplexSessionChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-153">IDuplexSessionChannel</span></span>|<span data-ttu-id="dc559-154">否</span><span class="sxs-lookup"><span data-stu-id="dc559-154">No</span></span>|<span data-ttu-id="dc559-155">否</span><span class="sxs-lookup"><span data-stu-id="dc559-155">No</span></span>|<span data-ttu-id="dc559-156">是</span><span class="sxs-lookup"><span data-stu-id="dc559-156">Yes</span></span>|<span data-ttu-id="dc559-157">是</span><span class="sxs-lookup"><span data-stu-id="dc559-157">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc559-158">不支持 <paramref name="TChannel" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-158"><paramref name="TChannel" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="reliableSessionBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="dc559-159">生成侦听器后所要接受的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-159">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener is built to accept.</span></span></typeparam>
        <param name="context"><span data-ttu-id="dc559-160"><see cref="T:System.ServiceModel.Channels.BindingContext" />，包含生成侦听器所需的信息，这些侦听器可接受类型为 <typeparamref name="TChannel" /> 的通道。</span><span class="sxs-lookup"><span data-stu-id="dc559-160">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to build the listeners that can accept channels of type <typeparamref name="TChannel" />.</span></span></param>
        <summary><span data-ttu-id="dc559-161">返回一个侦听器，该侦听器可接受支持可靠会话的指定类型的通道。</span><span class="sxs-lookup"><span data-stu-id="dc559-161">Returns a listener that accepts a channel of a specified type that supports a reliable session.</span></span></summary>
        <returns><span data-ttu-id="dc559-162"><see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 类型的 <see cref="T:System.ServiceModel.Channels.IChannel" />（从 <paramref name="context" /> 中初始化）。</span><span class="sxs-lookup"><span data-stu-id="dc559-162">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-163">侦听器所接受的 <xref:System.ServiceModel.Channels.IChannel> 具有 `TChannel` 类型。</span><span class="sxs-lookup"><span data-stu-id="dc559-163">The <xref:System.ServiceModel.Channels.IChannel> accepted by the listener is of type `TChannel`.</span></span> <span data-ttu-id="dc559-164">承载服务的服务器上所支持的 `TChannel` 类型取决于连接到客户端时所使用的基础通道类型。</span><span class="sxs-lookup"><span data-stu-id="dc559-164">The types of `TChannel` supported on the server that hosts the service is dependent of the types of underlying channels used to connect to the client.</span></span> <span data-ttu-id="dc559-165">下表指出支持何种可靠会话通道类型作为基础通道的一项功能。</span><span class="sxs-lookup"><span data-stu-id="dc559-165">The following table indicates what reliable session channel types are supported as a function of the underlying channels.</span></span>  
  
|<span data-ttu-id="dc559-166">基础通道类型支持可靠会话 `TChannel` 类型</span><span class="sxs-lookup"><span data-stu-id="dc559-166">Support for Reliable Session `TChannel` Types by Underlying Channel Types</span></span>|<span data-ttu-id="dc559-167">IReplyChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-167">IReplyChannel</span></span>|<span data-ttu-id="dc559-168">IReplySessionChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-168">IReplySessionChannel</span></span>|<span data-ttu-id="dc559-169">IDuplexChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-169">IDuplexChannel</span></span>|<span data-ttu-id="dc559-170">IDuplexSessionChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-170">IDuplexSessionChannel</span></span>|  
|-------------------------------------------------------------------------------|-------------------|--------------------------|--------------------|---------------------------|  
|<span data-ttu-id="dc559-171">IInputSessionChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-171">IInputSessionChannel</span></span>|<span data-ttu-id="dc559-172">是</span><span class="sxs-lookup"><span data-stu-id="dc559-172">Yes</span></span>|<span data-ttu-id="dc559-173">是</span><span class="sxs-lookup"><span data-stu-id="dc559-173">Yes</span></span>|<span data-ttu-id="dc559-174">是</span><span class="sxs-lookup"><span data-stu-id="dc559-174">Yes</span></span>|<span data-ttu-id="dc559-175">是</span><span class="sxs-lookup"><span data-stu-id="dc559-175">Yes</span></span>|  
|<span data-ttu-id="dc559-176">IReplySessionChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-176">IReplySessionChannel</span></span>|<span data-ttu-id="dc559-177">是</span><span class="sxs-lookup"><span data-stu-id="dc559-177">Yes</span></span>|<span data-ttu-id="dc559-178">是</span><span class="sxs-lookup"><span data-stu-id="dc559-178">Yes</span></span>|<span data-ttu-id="dc559-179">否</span><span class="sxs-lookup"><span data-stu-id="dc559-179">No</span></span>|<span data-ttu-id="dc559-180">否</span><span class="sxs-lookup"><span data-stu-id="dc559-180">No</span></span>|  
|<span data-ttu-id="dc559-181">IDuplexSessionChannel</span><span class="sxs-lookup"><span data-stu-id="dc559-181">IDuplexSessionChannel</span></span>|<span data-ttu-id="dc559-182">否</span><span class="sxs-lookup"><span data-stu-id="dc559-182">No</span></span>|<span data-ttu-id="dc559-183">否</span><span class="sxs-lookup"><span data-stu-id="dc559-183">No</span></span>|<span data-ttu-id="dc559-184">是</span><span class="sxs-lookup"><span data-stu-id="dc559-184">Yes</span></span>|<span data-ttu-id="dc559-185">是</span><span class="sxs-lookup"><span data-stu-id="dc559-185">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc559-186">不支持 <paramref name="TChannel" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-186"><paramref name="TChannel" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="reliableSessionBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="dc559-187">工厂生成的通道类型。</span><span class="sxs-lookup"><span data-stu-id="dc559-187">The type of channel the factory builds.</span></span></typeparam>
        <param name="context"><span data-ttu-id="dc559-188"><see cref="T:System.ServiceModel.Channels.BindingContext" />，包含生成工厂所需的信息，这些工厂可生成类型为 <typeparamref name="TChannel" /> 的通道。</span><span class="sxs-lookup"><span data-stu-id="dc559-188">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to build the factories that can produce channels of type <typeparamref name="TChannel" />.</span></span></param>
        <summary><span data-ttu-id="dc559-189">返回一个值，该值指示是否可以为能够支持可靠会话的通道和所提供的上下文生成通道工厂。</span><span class="sxs-lookup"><span data-stu-id="dc559-189">Returns a value that indicates whether the channel factory can be built for the channel and context provided that can support a reliable session.</span></span></summary>
        <returns><span data-ttu-id="dc559-190">如果可生成类型为 <see langword="true" /> 的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，则为 <paramref name="TChannel" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-190"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-191">此方法会根据 `true` 中提供的值列表，对 `false` 返回 `TChannel` 或 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingContext%29>。</span><span class="sxs-lookup"><span data-stu-id="dc559-191">This method returns `true` or `false` for a `TChannel` in accordance with the table of values provided in <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingContext%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="reliableSessionBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="dc559-192"><see cref="T:System.ServiceModel.Channels.IChannel" />通道侦听器（如果生成）接受的。</span><span class="sxs-lookup"><span data-stu-id="dc559-192">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the channel listener, if build, accepts.</span></span></typeparam>
        <param name="context"><span data-ttu-id="dc559-193"><see cref="T:System.ServiceModel.Channels.BindingContext" />，包含生成侦听器所需的信息，这些侦听器可接受类型为 <typeparamref name="TChannel" /> 的通道。</span><span class="sxs-lookup"><span data-stu-id="dc559-193">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to build the listeners that can accept channels of type <typeparamref name="TChannel" />.</span></span></param>
        <summary><span data-ttu-id="dc559-194">返回一个值，该值指示是否可以为能够支持可靠会话的通道和所提供的上下文生成通道侦听器。</span><span class="sxs-lookup"><span data-stu-id="dc559-194">Returns a value that indicates whether the channel listener can be built for the channel and context provided that can support a reliable session.</span></span></summary>
        <returns><span data-ttu-id="dc559-195">如果绑定元素可以生成能产生类型为 <see langword="true" /> 的 <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> 的 <see cref="T:System.ServiceModel.Channels.IChannel" />，则为 <paramref name="TChannel" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-195"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> that can produce an <see cref="T:System.ServiceModel.Channels.IChannel" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-196">通道堆栈通常是使用工厂模式创建的，在这种模式中，绑定创建通道堆栈。</span><span class="sxs-lookup"><span data-stu-id="dc559-196">Channel stacks are typically created using a factory pattern where a binding creates the channel stack.</span></span> <span data-ttu-id="dc559-197">发送消息时，使用绑定可生成通道工厂，而通道工厂可创建通道堆栈，并返回对堆栈中顶部通道的引用。</span><span class="sxs-lookup"><span data-stu-id="dc559-197">When sending messages, a binding is used to build a channel factory which in turn builds a channel stack and returns a reference to the top channel in the stack.</span></span> <span data-ttu-id="dc559-198">之后，应用程序可以使用此通道发送消息。</span><span class="sxs-lookup"><span data-stu-id="dc559-198">The application can then use this channel to send messages.</span></span> <span data-ttu-id="dc559-199">同样在接收消息时，使用绑定可生成通道侦听器，用于侦听传入消息。</span><span class="sxs-lookup"><span data-stu-id="dc559-199">Similarly when receiving messages, a binding is used to build a channel listener which listens for incoming messages.</span></span> <span data-ttu-id="dc559-200">通道侦听器会通过创建通道堆栈并向应用程序传递对顶部通道的引用，将消息提供给侦听应用程序。</span><span class="sxs-lookup"><span data-stu-id="dc559-200">The channel listener provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</span></span>  
  
 <span data-ttu-id="dc559-201">此方法会根据 `true` 中提供的值列表，对 `false` 返回 `TChannel` 或 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingContext%29>。</span><span class="sxs-lookup"><span data-stu-id="dc559-201">This method returns `true` or `false` for a `TChannel` in accordance with the table of values provided in <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingContext%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ReliableSessionBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="reliableSessionBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc559-202">创建当前可靠会话绑定元素的副本。</span><span class="sxs-lookup"><span data-stu-id="dc559-202">Creates a copy of the current reliable session binding element.</span></span></summary>
        <returns><span data-ttu-id="dc559-203">一个 <see cref="T:System.ServiceModel.Channels.BindingElement" />，它是当前绑定元素的克隆。</span><span class="sxs-lookup"><span data-stu-id="dc559-203">A <see cref="T:System.ServiceModel.Channels.BindingElement" /> that is a clone of the current binding element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowControlEnabled">
      <MemberSignature Language="C#" Value="public bool FlowControlEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlowControlEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowControlEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlowControlEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FlowControlEnabled : bool with get, set" Usage="System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc559-204">获取或设置一个值，该值指示可靠会话是否已启用流控制。</span><span class="sxs-lookup"><span data-stu-id="dc559-204">Gets or sets a value that indicates whether the reliable session has flow control enabled.</span></span></summary>
        <value><span data-ttu-id="dc559-205">如果可靠会话已启用流控制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-205"><see langword="true" /> if the reliable session has flow control enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dc559-206">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-206">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-207">流控制是可靠会话实现的一种机制，目的是确保发送方所发送的消息数不超过接收方可处理的消息数。</span><span class="sxs-lookup"><span data-stu-id="dc559-207">Flow control is a mechanism that reliable sessions implement to ensure that senders do not send more messages than a receiver can handle.</span></span> <span data-ttu-id="dc559-208">接收方拥有消息缓冲区，用于容纳突增的消息和无序的消息。</span><span class="sxs-lookup"><span data-stu-id="dc559-208">Receivers have a buffer of messages that is used to accommodate message bursts and out-of-order messages.</span></span> <span data-ttu-id="dc559-209">接收方在每次确认时都会告知发送方此缓冲区中的剩余空间量。</span><span class="sxs-lookup"><span data-stu-id="dc559-209">Receivers advertise to senders the amount of space that remains in this buffer in each of their acknowledgements.</span></span> <span data-ttu-id="dc559-210">利用此信息，发送方就可以在接收方缓冲区中没有剩余空间时，停止发送新的消息。</span><span class="sxs-lookup"><span data-stu-id="dc559-210">Senders can use this information to stop sending new messages whenever the receiver has no buffer space left.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="reliableSessionBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="dc559-211">已检索的属性类型。</span><span class="sxs-lookup"><span data-stu-id="dc559-211">The type of property retrieved.</span></span></typeparam>
        <param name="context"><span data-ttu-id="dc559-212"><see cref="T:System.ServiceModel.Channels.BindingContext" />，包含检索 <typeparamref name="T" /> 类型通道时所需的信息。</span><span class="sxs-lookup"><span data-stu-id="dc559-212">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to retrieve the channel of type <typeparamref name="T" />.</span></span></param>
        <summary><span data-ttu-id="dc559-213">从绑定上下文获取指定类型的属性。</span><span class="sxs-lookup"><span data-stu-id="dc559-213">Gets a property of the specified type from its binding context.</span></span></summary>
        <returns><span data-ttu-id="dc559-214">类型为 <paramref name="T" /> 且具有指定 <paramref name="context" /> 的属性，如果找不到类型为 <see langword="null" /> 的属性，则为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-214">The property of type <paramref name="T" /> with the specified <paramref name="context" /> or <see langword="null" /> if no property of type <paramref name="T" /> is found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InactivityTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan InactivityTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InactivityTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property InactivityTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InactivityTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InactivityTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:10:00")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:10:00")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc559-215">获取或设置服务在关闭之前保持非活动状态的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="dc559-215">Gets or sets an interval of time that a service remains inactive before closing.</span></span></summary>
        <value><span data-ttu-id="dc559-216"><see cref="T:System.TimeSpan" />，指定服务在关闭之前保持非活动状态的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="dc559-216">The <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service remains inactive before closing.</span></span> <span data-ttu-id="dc559-217">默认值为 10 分钟。</span><span class="sxs-lookup"><span data-stu-id="dc559-217">The default value is 10 minutes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-218">通道上的活动被定义为接收应用程序或基础结构消息。</span><span class="sxs-lookup"><span data-stu-id="dc559-218">Activity on a channel is defined as receiving an application or infrastructure message.</span></span> <span data-ttu-id="dc559-219">非活动超时参数会控制保持非活动会话存在的最长时间。</span><span class="sxs-lookup"><span data-stu-id="dc559-219">The inactivity timeout parameter controls the maximum amount of time to keep an inactive session alive.</span></span> <span data-ttu-id="dc559-220">如果超过 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> 时间间隔后仍没有活动，则基础结构会中止会话，且通道会出错。</span><span class="sxs-lookup"><span data-stu-id="dc559-220">If more than <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> time interval passes with no activity, the session is aborted by the infrastructure and the channel faults.</span></span> <span data-ttu-id="dc559-221">可靠会话会遭到单方面撤销。</span><span class="sxs-lookup"><span data-stu-id="dc559-221">The reliable session is torn down unilaterally.</span></span>  
  
 <span data-ttu-id="dc559-222">如果发送应用程序没有要发送的消息，则可靠会话通常不会因处于非活动状态而出错，“保持活动状态”机制会让会话无限期地处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="dc559-222">If the sending application has no messages to send then the reliable session is normally not faulted because of inactivity; instead a keep-alive mechanism keeps the session active indefinitely.</span></span> <span data-ttu-id="dc559-223">请注意，如果未发送或接收任何应用程序消息，则调度程序可以单独中止可靠会话。</span><span class="sxs-lookup"><span data-stu-id="dc559-223">Note that the dispatcher can independently abort the reliable session if no application messages are sent or received.</span></span> <span data-ttu-id="dc559-224">因此，如果网络状况为未收到任何消息或发送方失败，则非活动超时通常会过期。</span><span class="sxs-lookup"><span data-stu-id="dc559-224">Thus, the inactivity timeout typically expires if network conditions are such that no messages are received or if there is a failure on the sender.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dc559-225">设置的值小于或等于零，或者大于 <see cref="F:System.Int32.MaxValue" /> 或 <see cref="F:System.TimeSpan.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-225">The value set is less than or equal to zero or greater than either <see cref="F:System.Int32.MaxValue" /> or <see cref="F:System.TimeSpan.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxPendingChannels">
      <MemberSignature Language="C#" Value="public int MaxPendingChannels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingChannels" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPendingChannels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPendingChannels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPendingChannels : int with get, set" Usage="System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(4)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(4)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc559-226">获取或设置在可靠会话期间可为挂起状态的最大通道数。</span><span class="sxs-lookup"><span data-stu-id="dc559-226">Gets or sets the largest number of channels that can be pending during the reliable session.</span></span></summary>
        <value><span data-ttu-id="dc559-227">可为挂起状态的最大通道数。</span><span class="sxs-lookup"><span data-stu-id="dc559-227">The largest number of channels that can be pending.</span></span> <span data-ttu-id="dc559-228">默认值为 4。</span><span class="sxs-lookup"><span data-stu-id="dc559-228">The default value is 4.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-229">通道在等待被接受时处于挂起状态。</span><span class="sxs-lookup"><span data-stu-id="dc559-229">Channels are pending when they are waiting to be accepted.</span></span> <span data-ttu-id="dc559-230">一旦达到该限制，就不会创建任何通道并将其置于挂起模式，直到此数值降低（通过接受挂起的通道）。</span><span class="sxs-lookup"><span data-stu-id="dc559-230">Once that limit is reached, no channels are created and put in pending mode until this number goes down (by accepting pending channels).</span></span> <span data-ttu-id="dc559-231">这是对每个侦听器的限制。</span><span class="sxs-lookup"><span data-stu-id="dc559-231">This is a limit for each listener.</span></span>  
  
 <span data-ttu-id="dc559-232">当达到此阈值时如果远程应用程序尝试建立新的可靠会话，则会拒绝请求且打开操作将提示此错误。</span><span class="sxs-lookup"><span data-stu-id="dc559-232">When the threshold is reached and a remote application tries to establish a new reliable session, the request is denied and the open operation that prompted this faults.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dc559-233">设置的值小于或等于零，或者大于 16384。</span><span class="sxs-lookup"><span data-stu-id="dc559-233">The value set is less than or equal to zero or greater than 16384.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxRetryCount">
      <MemberSignature Language="C#" Value="public int MaxRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRetryCount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRetryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRetryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRetryCount : int with get, set" Usage="System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(8)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(8)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc559-234">获取或设置在可靠会话期间尝试传输消息的最大次数。</span><span class="sxs-lookup"><span data-stu-id="dc559-234">Gets or sets the maximum number of times that a message attempts to be transferred during the reliable session.</span></span></summary>
        <value><span data-ttu-id="dc559-235">尝试重新发送消息的最大次数。</span><span class="sxs-lookup"><span data-stu-id="dc559-235">The maximum number of times that a message attempts to be re-sent.</span></span> <span data-ttu-id="dc559-236">最小值为 1；最大值为 <see cref="F:System.Int32.MaxValue" />；默认值为 8。</span><span class="sxs-lookup"><span data-stu-id="dc559-236">The minimum value is 1; the maximum is <see cref="F:System.Int32.MaxValue" />; and the default value is 8.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-237">如果接收方在接收时确认了消息的传递，则认为该消息已传输。</span><span class="sxs-lookup"><span data-stu-id="dc559-237">A message is considered to be transferred if its delivery at the recipient has been acknowledged by the recipient.</span></span>  
  
 <span data-ttu-id="dc559-238">如果在传输消息后的一段确定时间内未收到确认，则基础结构将自动重新传输该消息。</span><span class="sxs-lookup"><span data-stu-id="dc559-238">If an acknowledgment has not been received within a certain amount of time for a message that has been transmitted, the infrastructure automatically retransmits the message.</span></span> <span data-ttu-id="dc559-239">基础结构尝试发送消息的次数最多为 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount%2A> 次。</span><span class="sxs-lookup"><span data-stu-id="dc559-239">The infrastructure tries to send the message for, at most, a <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount%2A> number of times.</span></span> <span data-ttu-id="dc559-240">在达到此限制之前未接收到确认被视为严重的通信故障，这种情况将引发通道出错的事件。</span><span class="sxs-lookup"><span data-stu-id="dc559-240">Not receiving an acknowledgment before this limit is reached is considered a fatal communication failure and causes the channel faulted event to be raised.</span></span>  
  
 <span data-ttu-id="dc559-241">基础结构使用指数补偿算法根据计算的平均往返时间来确定何时重新传输。</span><span class="sxs-lookup"><span data-stu-id="dc559-241">The infrastructure uses an exponential back-off algorithm to determine when to retransmit, based on a computed average round-trip time.</span></span> <span data-ttu-id="dc559-242">初始重试时间是根据测量的创建会话往返时间来计算的。</span><span class="sxs-lookup"><span data-stu-id="dc559-242">The initial retry time is computed based on the measured roundtrip time of establishing the session.</span></span> <span data-ttu-id="dc559-243">重新传输算法是每进行一次尝试，延迟时间就会增加一倍。如此一来，从第一次传输尝试到最后一次传输尝试大约会历时 8.5 分钟。</span><span class="sxs-lookup"><span data-stu-id="dc559-243">The retransmission algorithm doubles the delay with every attempt, which results in approximately 8.5 minutes passing between the first transmission attempt and the last retransmission attempt.</span></span> <span data-ttu-id="dc559-244">可以根据计算的往返时间来调整第一次尝试重新传输的时间，因此这些尝试所经历的时间将会相应地发生变化。</span><span class="sxs-lookup"><span data-stu-id="dc559-244">The time for the first retransmission attempt is adjusted according to the calculated round-trip time and the resulting stretch of time that those attempts take varies accordingly.</span></span> <span data-ttu-id="dc559-245">这样，可以使重新传输时间动态地适应不断变化的网络条件。</span><span class="sxs-lookup"><span data-stu-id="dc559-245">This allows the retransmission time to dynamically adapt to varying network conditions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dc559-246">设置的值小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="dc559-246">The value set is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxTransferWindowSize">
      <MemberSignature Language="C#" Value="public int MaxTransferWindowSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxTransferWindowSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTransferWindowSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxTransferWindowSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTransferWindowSize : int with get, set" Usage="System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(8)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(8)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc559-247">获取或设置在发送缓冲区或接收缓冲区中可存在的最大消息数。</span><span class="sxs-lookup"><span data-stu-id="dc559-247">Gets or sets the largest number of messages that can exist in either the send buffer or the receive buffer.</span></span></summary>
        <value><span data-ttu-id="dc559-248">可进行缓冲处理的最大消息数。</span><span class="sxs-lookup"><span data-stu-id="dc559-248">The largest number of messages that can be buffered.</span></span> <span data-ttu-id="dc559-249">最小值为 1；最大值为 4096；默认值为 32。</span><span class="sxs-lookup"><span data-stu-id="dc559-249">The minimum value is 1; the maximum value is 4096; and the default value is 32.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-250"><xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize%2A> 属性的值可在发送方和接收方进行设置。</span><span class="sxs-lookup"><span data-stu-id="dc559-250">The value of the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize%2A> property can be set on both the sender and the receiver.</span></span> <span data-ttu-id="dc559-251">此值包含在 WSDL 的绑定策略中，因此，如果使用 " [)  (" 元数据实用工具 "工具 ](/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) 来构造客户端，则它具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="dc559-251">This value is included in the binding policy of the WSDL, so if you use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) to construct your client, it has the same value.</span></span> <span data-ttu-id="dc559-252">否则，此值就是在客户端上设置的任何值。</span><span class="sxs-lookup"><span data-stu-id="dc559-252">Otherwise this value is whatever you set it to be on the client.</span></span>  
  
 <span data-ttu-id="dc559-253">如果达到发送方的这个限制，则会阻止其他发送调用。</span><span class="sxs-lookup"><span data-stu-id="dc559-253">When this limit is reached on the sender, additional calls to send are blocked.</span></span> <span data-ttu-id="dc559-254">如果达到接收方的这个限制，则不会接受到达基础通道的新消息。</span><span class="sxs-lookup"><span data-stu-id="dc559-254">When this limit is reached on the receiver, new messages that arrive on the underlying channel are not accepted.</span></span>  
  
 <span data-ttu-id="dc559-255">可靠会话会使用窗口协议来帮助提高网络利用率。</span><span class="sxs-lookup"><span data-stu-id="dc559-255">A reliable session uses a windowing protocol to help improve network utilization.</span></span> <span data-ttu-id="dc559-256">所需的缓冲量直接从传输窗口的大小派生而来。</span><span class="sxs-lookup"><span data-stu-id="dc559-256">The amount of buffering required is directly derived from the size of the transmission window.</span></span> <span data-ttu-id="dc559-257">调整此值时请注意，最佳传输窗口直接与带宽和延迟相关。</span><span class="sxs-lookup"><span data-stu-id="dc559-257">When tuning this value, note that the optimal transmission window is related to the bandwidth and the latency in a straight-forward way.</span></span> <span data-ttu-id="dc559-258">理想的最大窗口大小是带宽乘以延迟。</span><span class="sxs-lookup"><span data-stu-id="dc559-258">The ideal maximum window size is the bandwidth times the latency.</span></span> <span data-ttu-id="dc559-259">如果比此值小，网络利用率就会低于 100%，如果比此值大，就会浪费空间。</span><span class="sxs-lookup"><span data-stu-id="dc559-259">Anything smaller yields less than 100% network utilization; anything larger is just wasted space.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dc559-260">设置的值小于或等于 1，或者大于 4096。</span><span class="sxs-lookup"><span data-stu-id="dc559-260">The value set is less than or equal to one or greater than 4096.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="public bool Ordered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ordered" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered" />
      <MemberSignature Language="VB.NET" Value="Public Property Ordered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ordered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Ordered : bool with get, set" Usage="System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc559-261">获取或设置一个值，该值指示消息传递是否必须保持与消息发送一致的顺序。</span><span class="sxs-lookup"><span data-stu-id="dc559-261">Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.</span></span></summary>
        <value><span data-ttu-id="dc559-262">如果消息必须按照发送时的顺序传递，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-262"><see langword="true" /> if messages must be delivered in the order in which they are sent; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dc559-263">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-263">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-264">若要按顺序调度消息，还必须将 <xref:System.ServiceModel.ConcurrencyMode> 设置为 <xref:System.ServiceModel.ConcurrencyMode.Single>。</span><span class="sxs-lookup"><span data-stu-id="dc559-264">To get messages dispatched in order, you also must set the <xref:System.ServiceModel.ConcurrencyMode> to <xref:System.ServiceModel.ConcurrencyMode.Single>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliableMessagingVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ReliableMessagingVersion As ReliableMessagingVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReliableMessagingVersion ^ ReliableMessagingVersion { System::ServiceModel::ReliableMessagingVersion ^ get(); void set(System::ServiceModel::ReliableMessagingVersion ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReliableMessagingVersion : System.ServiceModel.ReliableMessagingVersion with get, set" Usage="System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.ServiceModel.ReliableMessagingVersion), "WSReliableMessagingFebruary2005")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.ServiceModel.ReliableMessagingVersion), "WSReliableMessagingFebruary2005")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReliableMessagingVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc559-265">获取或设置绑定元素指定的 WS-ReliableMessaging 版本。</span><span class="sxs-lookup"><span data-stu-id="dc559-265">Gets or sets the version of WS-ReliableMessaging specified by the binding element.</span></span></summary>
        <value><span data-ttu-id="dc559-266">一个派生自 <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> 的实例，表示配置元素所使用的 WS-ReliableMessaging 协议的版本。</span><span class="sxs-lookup"><span data-stu-id="dc559-266">An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the version of the WS-ReliableMessaging protocol used by the configuration element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc559-267">Windows Communication Foundation (WCF) 支持的 WS-RELIABLEMESSAGING 协议目前有两个版本： WS-RELIABLEMESSAGING 1.1 和 Ws-reliablemessagingfebruary2005。</span><span class="sxs-lookup"><span data-stu-id="dc559-267">There are currently two versions of the WS-ReliableMessaging protocol supported by Windows Communication Foundation (WCF): WS-ReliableMessaging1.1 and WS-ReliableMessagingFebruary2005.</span></span> <span data-ttu-id="dc559-268">默认版本为 WS-ReliableMessagingFebruary2005。</span><span class="sxs-lookup"><span data-stu-id="dc559-268">The default version is WS-ReliableMessagingFebruary2005.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit&#xA;override this.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="reliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy (exporter, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="dc559-269">将可靠会话绑定元素中的绑定信息导出到 WSDL 元素的 <see cref="T:System.ServiceModel.Description.MetadataExporter" />。</span><span class="sxs-lookup"><span data-stu-id="dc559-269">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that exports the binding information in the reliable session binding element to the WSDL elements.</span></span></param>
        <param name="context"><span data-ttu-id="dc559-270"><see cref="T:System.ServiceModel.Description.PolicyConversionContext" />，提供从导出的 WSDL 元素到终结点说明的映射。</span><span class="sxs-lookup"><span data-stu-id="dc559-270">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that provides the mapping from exported WSDL elements to the endpoint description.</span></span></param>
        <summary><span data-ttu-id="dc559-271">将可靠会话绑定元素包含的信息，映射到可启用远程终结点以通过可靠会话访问服务的 WSDL 元素。</span><span class="sxs-lookup"><span data-stu-id="dc559-271">Maps the information contained in the reliable session binding element into the WSDL elements that enable a remote endpoint to access the service with a reliable session.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
