<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f143052cc33c26845448bbc12b6722dc31d173c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89942645" /></Metadata><TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface ISession&#xA;    interface IOutputSession" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface IOutputSession&#xA;    interface ISession" FrameworkAlternate="dotnet-uwp-10.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ISession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3e0c4-101">定义会话接口，该接口在消息终结点之间的双向通信的两端实现。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-101">Defines the interface for the session implemented on each side of a bi-directional communication between messaging endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e0c4-102"><xref:System.ServiceModel.Channels.IDuplexSession> 接口是入站会话（由 <xref:System.ServiceModel.Channels.IInputSession> 接口定义）和出站会话（由 <xref:System.ServiceModel.Channels.IOutputSession> 接口定义）的联合。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-102">The <xref:System.ServiceModel.Channels.IDuplexSession> interface is the union of the inbound session, defined by the <xref:System.ServiceModel.Channels.IInputSession> interface, and the outbound session, defined by the <xref:System.ServiceModel.Channels.IOutputSession> interface.</span></span> <span data-ttu-id="3e0c4-103">入站会话或出站会话都可相互独立终止。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-103">Either the inbound session or outbound session can be terminated independently of the other.</span></span> <span data-ttu-id="3e0c4-104">调用 <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> 可以同步终止出站会话，调用 <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A> 可以异步终止出站会话。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-104">The outbound session can be terminated synchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> or asynchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.</span></span>  
  
 <span data-ttu-id="3e0c4-105">入站会话可进行远程终止。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-105">The inbound session can be remotely terminated.</span></span> <span data-ttu-id="3e0c4-106">入站会话关闭时，与之关联的 <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> 即开始返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-106">The <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> associated with the inbound session starts returning `null` when that session is shutdown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e0c4-107">开始一个异步操作来终止出站会话。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-107">Begins an asynchronous operation to terminate the outbound session.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="3e0c4-108"><see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-108">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="3e0c4-109">一个 <see langword="object" />，它包含该请求的状态信息。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-109">An <see langword="object" /> that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="3e0c4-110">开始一个异步操作来终止出站会话。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-110">Begins an asynchronous operation to terminate the outbound session.</span></span></summary>
        <returns><span data-ttu-id="3e0c4-111">引用异步出站会话终止的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-111">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e0c4-112">终止出站会话不会影响入站会话，因此也不影响从输入通道的关联会话中接收消息。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-112">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span> <span data-ttu-id="3e0c4-113">此操作必须在默认时间间隔内完成。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-113">This operation must complete within a default interval of time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="3e0c4-114">指定时间间隔的 <see cref="T:System.TimeSpan" />，操作必须在此时间间隔内完成。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-114">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span></span></param>
        <param name="callback"><span data-ttu-id="3e0c4-115"><see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-115">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="3e0c4-116">一个 <see langword="object" />，它包含该请求的状态信息。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-116">An <see langword="object" /> that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="3e0c4-117">开始一个异步操作来终止出站会话，此操作必须在指定超时内完成。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-117">Begins an asynchronous operation to terminate the outbound session with a specified timeout within which the operation must complete.</span></span></summary>
        <returns><span data-ttu-id="3e0c4-118">引用异步出站会话终止的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-118">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e0c4-119">终止出站会话不会影响入站会话，因此也不影响从输入通道的关联会话中接收消息。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-119">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e0c4-120">终止出站会话，指示不能再在此会话的关联通道上从此终结点发送消息。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-120">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : unit -&gt; unit" Usage="iDuplexSession.CloseOutputSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e0c4-121">终止出站会话，指示不能再在此会话的关联通道上从此终结点发送消息。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-121">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e0c4-122">调用 <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> 即会通知会话的另一端，对 `null` 的任何未完成调用或后续调用都应返回 <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-122">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="3e0c4-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> 是幂等的，因此再次调用它不起作用。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="3e0c4-124">终止出站会话不会影响入站会话，因此也不影响从输入通道的关联会话中接收消息。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-124">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3e0c4-125">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 是一个会话方法，可以与拥有此会话的 <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> 进行交互。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-125">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span></span> <span data-ttu-id="3e0c4-126">具体而言，如果会话生存期与通道生存期结合在一起（就像 TCP 与可靠会话和安全的情况）：</span><span class="sxs-lookup"><span data-stu-id="3e0c4-126">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span></span> 
<span data-ttu-id="3e0c4-127">-如果 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 在通道上调用之前调用，则 <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 应等待 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 完成。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-127">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span></span>  
  
<span data-ttu-id="3e0c4-128">-如果通道处于 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 状态，则 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 应引发 <see cref="T:System.InvalidOperationException" /> 。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-128">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="3e0c4-129">-如果通道处于 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态，则 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 应引发 <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> 。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-129">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span></span>  
  
<span data-ttu-id="3e0c4-130">-如果引发，通道应为错误 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-130">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span></span>  
  
<span data-ttu-id="3e0c4-131">- <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 通道上的实现应调用， <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 然后验证是否 <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> 返回 <see langword="null" /> ，这指示 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 从会话的另一端调用了。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-131">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, which indicates that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : TimeSpan -&gt; unit" Usage="iDuplexSession.CloseOutputSession timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="3e0c4-132">指定时间间隔的 <see cref="T:System.TimeSpan" />，操作必须在此时间间隔内完成。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-132">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span></span></param>
        <summary><span data-ttu-id="3e0c4-133">终止出站会话，指示在指定时间间隔内，不能再在此会话的关联通道上从此终结点发送消息。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-133">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e0c4-134">调用 <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> 即会通知会话的另一端，对 `null` 的任何未完成调用或后续调用都应返回 <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-134">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="3e0c4-135"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> 是幂等的，因此再次调用它不起作用。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-135"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="3e0c4-136">终止出站会话不会影响入站会话，因此也不影响从输入通道的关联会话中接收消息。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-136">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3e0c4-137">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 是一个会话方法，可以与拥有此会话的 <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> 进行交互。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-137">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span></span> <span data-ttu-id="3e0c4-138">具体而言，如果会话生存期与通道生存期结合在一起（就像 TCP 与可靠会话和安全的情况）：</span><span class="sxs-lookup"><span data-stu-id="3e0c4-138">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span></span> 
<span data-ttu-id="3e0c4-139">-如果 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 在通道上调用之前调用，则 <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 应等待 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 完成。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-139">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span></span>  
  
<span data-ttu-id="3e0c4-140">-如果通道处于 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 状态，则 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 应引发 <see cref="T:System.InvalidOperationException" /> 。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-140">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="3e0c4-141">-如果通道处于 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态，则 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 应引发 <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> 。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-141">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span></span>  
  
<span data-ttu-id="3e0c4-142">-如果引发，通道应为错误 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-142">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span></span>  
  
<span data-ttu-id="3e0c4-143">- <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 通道上的实现应调用， <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 然后验证是否 <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> 返回，这 <see langword="null" /> 指示 <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 从会话的另一端调用了。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-143">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, indicating that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCloseOutputSession : IAsyncResult -&gt; unit" Usage="iDuplexSession.EndCloseOutputSession result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="3e0c4-144">通过调用 <see cref="T:System.IAsyncResult" /> 方法之一返回的 <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-144">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> methods.</span></span></param>
        <summary><span data-ttu-id="3e0c4-145">完成一个异步操作来终止出站会话，指示不能再在此会话的关联通道上从此终结点发送消息。</span><span class="sxs-lookup"><span data-stu-id="3e0c4-145">Completes an asynchronous operation to terminate the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e0c4-146">终止出站会话不会影响入站会话，因此也不影响从输入通道的关联会话中接收消息</span><span class="sxs-lookup"><span data-stu-id="3e0c4-146">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
