<Type Name="IAsyncEnumerable&lt;T&gt;" FullName="System.Collections.Generic.IAsyncEnumerable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d963ec6326b8b9e4a2ddd7129ed20794f8d9a2c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89996898" /></Metadata><TypeSignature Language="C#" Value="public interface IAsyncEnumerable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAsyncEnumerable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IAsyncEnumerable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAsyncEnumerable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IAsyncEnumerable" />
  <TypeSignature Language="F#" Value="type IAsyncEnumerable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bcl.AsyncInterfaces</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="Microsoft.Bcl.AsyncInterfaces" FromVersion="1.0.0.0" To="netstandard" ToVersion="2.1.0.0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="cfe8a-101">集合中元素的类型。</span><span class="sxs-lookup"><span data-stu-id="cfe8a-101">The type of the elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="cfe8a-102">公开对指定类型的值提供异步迭代的枚举器。</span><span class="sxs-lookup"><span data-stu-id="cfe8a-102">Exposes an enumerator that provides asynchronous iteration over values of a specified type.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAsyncEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IAsyncEnumerator&lt;out T&gt; GetAsyncEnumerator (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerator`1&lt;!T&gt; GetAsyncEnumerator(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsyncEnumerator (Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerator(Of Out T)" />
      <MemberSignature Language="F#" Value="abstract member GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;'T&gt;" Usage="iAsyncEnumerable.GetAsyncEnumerator cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bcl.AsyncInterfaces</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="cfe8a-103">一个 <see cref="T:System.Threading.CancellationToken" />，可用于取消异步迭代。</span><span class="sxs-lookup"><span data-stu-id="cfe8a-103">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</span></span></param>
        <summary><span data-ttu-id="cfe8a-104">返回一个异步循环访问集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="cfe8a-104">Returns an enumerator that iterates asynchronously through the collection.</span></span></summary>
        <returns><span data-ttu-id="cfe8a-105">一个可用于异步循环访问集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="cfe8a-105">An enumerator that can be used to iterate asynchronously through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
