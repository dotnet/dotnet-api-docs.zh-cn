<Type Name="IList&lt;T&gt;" FullName="System.Collections.Generic.IList&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc4ae7f370cbc1a7118b56d838518adec44b0ddd" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91907563" /></Metadata><TypeSignature Language="C#" Value="public interface IList&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IList`1&lt;T&gt; implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IList`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IList(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IList : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type IList&lt;'T&gt; = interface&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="6e7e0-101">列表中元素的类型。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-101">The type of elements in the list.</span></span></typeparam>
    <summary><span data-ttu-id="6e7e0-102">表示可按照索引单独访问的对象的集合。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-102">Represents a collection of objects that can be individually accessed by index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e7e0-103"><xref:System.Collections.Generic.IList%601>泛型接口是 <xref:System.Collections.Generic.ICollection%601> 泛型接口的后代，是所有泛型列表的基接口。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-103">The <xref:System.Collections.Generic.IList%601> generic interface is a descendant of the <xref:System.Collections.Generic.ICollection%601> generic interface and is the base interface of all generic lists.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <altmember cref="N:System.Collections" />
  </Docs>
  <Members>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IList`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int" Usage="iList.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="6e7e0-104">要在 <see cref="T:System.Collections.Generic.IList`1" /> 中定位的对象。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-104">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <summary><span data-ttu-id="6e7e0-105">确定 <see cref="T:System.Collections.Generic.IList`1" /> 中特定项的索引。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-105">Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></summary>
        <returns><span data-ttu-id="6e7e0-106">如果在列表中找到，则为 <paramref name="item" /> 的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-106">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e7e0-107">如果某对象在列表中出现多次，则 <xref:System.Collections.Generic.IList%601.IndexOf%2A> 方法将始终返回找到的第一个实例。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-107">If an object occurs multiple times in the list, the <xref:System.Collections.Generic.IList%601.IndexOf%2A> method always returns the first instance found.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit" Usage="iList.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6e7e0-108">应插入 <paramref name="item" /> 的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-108">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="6e7e0-109">要插入到 <see cref="T:System.Collections.Generic.IList`1" /> 中的对象。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-109">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <summary><span data-ttu-id="6e7e0-110">在 <see cref="T:System.Collections.Generic.IList`1" /> 中的指定索引处插入一个项。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-110">Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e7e0-111">如果 `index` 等于 <xref:System.Collections.Generic.IList%601> 中的项数，则将 `item` 追加到列表。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-111">If `index` equals the number of items in the <xref:System.Collections.Generic.IList%601>, then `item` is appended to the list.</span></span>  
  
 <span data-ttu-id="6e7e0-112">在由连续的元素组成的集合（如列表）中，插入点下面的元素将下移以容纳新的元素。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-112">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="6e7e0-113">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-113">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="6e7e0-114">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-114">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6e7e0-115"><paramref name="index" /> 不是 <see cref="T:System.Collections.Generic.IList`1" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-115"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6e7e0-116"><see cref="T:System.Collections.Generic.IList`1" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-116">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IList`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Collections.Generic.IList&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6e7e0-117">要获取或设置的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-117">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="6e7e0-118">获取或设置指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-118">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="6e7e0-119">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-119">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e7e0-120">通过此属性，可以使用以下语法来访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-120">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="6e7e0-121">C # 语言使用 [this](/dotnet/csharp/language-reference/keywords/this) 关键字来定义索引器，而不是实现 <xref:System.Collections.Generic.IList%601.Item%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-121">The C# language uses the [this](/dotnet/csharp/language-reference/keywords/this) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.IList%601.Item%2A> property.</span></span> <span data-ttu-id="6e7e0-122">Visual Basic 实现 <xref:System.Collections.Generic.IList%601.Item%2A> 为 [默认属性](/dotnet/visual-basic/language-reference/modifiers/default)，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-122">Visual Basic implements <xref:System.Collections.Generic.IList%601.Item%2A> as a [default property](/dotnet/visual-basic/language-reference/modifiers/default), which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6e7e0-123"><paramref name="index" /> 不是 <see cref="T:System.Collections.Generic.IList`1" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-123"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6e7e0-124">设置了该属性，但 <see cref="T:System.Collections.Generic.IList`1" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-124">The property is set and the <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6e7e0-125">要移除的项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-125">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="6e7e0-126">移除位于指定索引处的 <see cref="T:System.Collections.Generic.IList`1" /> 项。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-126">Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e7e0-127">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-127">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="6e7e0-128">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-128">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="6e7e0-129">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-129">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6e7e0-130"><paramref name="index" /> 不是 <see cref="T:System.Collections.Generic.IList`1" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-130"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6e7e0-131"><see cref="T:System.Collections.Generic.IList`1" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="6e7e0-131">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
  </Members>
</Type>
